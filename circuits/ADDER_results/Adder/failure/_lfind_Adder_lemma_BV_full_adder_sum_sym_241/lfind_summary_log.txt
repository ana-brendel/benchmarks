LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_BV_full_adder_sum_sym_241

Number of Lemmas: 1308
Number of Lemmas (after duplicates removed): 425
Number of Lemmas (after QuickChick used to filter): 102
* Number of Candidate Lemmas: 89

Time until ranking: 10823
Time to complete: 16077

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 1

Lemma candidate_2: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (BV_full_adder_carry v w cin) lf9))   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry w v cin) lf9)).

Category 3 (provable):
Count = 32

Lemma candidate_23: forall (lf3 : BV) (lf8 : BV), @eq BV (appbv lf8 lf3) (BV.appbv (BV.appbv lf8 BV.nilbv) lf3).
Lemma candidate_13: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_12: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_11: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_5: forall (lf3 : BV) (lf8 : BV), @eq BV (BV.appbv (BV.appbv lf8 BV.nilbv) lf3) (appbv lf8 lf3).
Lemma candidate_10: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_9: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv lf7 BV.nilbv) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_436: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_118: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_432: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_431: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_114: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_113: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_434: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_433: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_116: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_115: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_430: forall (lf6 : bool) (lf8 : BV), @eq BV (appbv lf8 (consbv lf6 nilbv))   (BV.appbv lf8 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)).
Lemma candidate_106: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_410: forall (lf6 : bool) (lf8 : BV), @eq BV   (BV.appbv lf8 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf8 (consbv lf6 nilbv)).
Lemma candidate_426: forall (lf6 : bool) (lf8 : BV), @eq BV (appbv lf8 (consbv lf6 nilbv))   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)).
Lemma candidate_425: forall (lf6 : bool) (lf8 : BV), @eq BV (appbv lf8 (consbv lf6 nilbv))   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)).
Lemma candidate_102: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_101: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_428: forall (lf6 : bool) (lf8 : BV), @eq BV (appbv lf8 (consbv lf6 nilbv))   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)).
Lemma candidate_427: forall (lf6 : bool) (lf8 : BV), @eq BV (appbv lf8 (consbv lf6 nilbv))   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)).
Lemma candidate_406: forall (lf6 : bool) (lf8 : BV), @eq BV   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf8 (consbv lf6 nilbv)).
Lemma candidate_405: forall (lf6 : bool) (lf8 : BV), @eq BV   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf8 (consbv lf6 nilbv)).
Lemma candidate_104: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_103: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_408: forall (lf6 : bool) (lf8 : BV), @eq BV   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf8 (consbv lf6 nilbv)).
Lemma candidate_407: forall (lf6 : bool) (lf8 : BV), @eq BV   (BV.appbv lf8 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf8 (consbv lf6 nilbv)).

Category 3 (not provable):
Count = 56

Lemma candidate_25: forall (lf3 : BV) (lf8 : BV), @eq BV (appbv lf8 lf3) (BV.appbv (BV.appbv lf8 lf3) BV.nilbv).
Lemma candidate_24: forall (lf3 : BV) (lf8 : BV), @eq BV (appbv lf8 lf3) (BV.appbv lf8 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_7: forall (lf3 : BV) (lf8 : BV), @eq BV (BV.appbv (BV.appbv lf8 lf3) BV.nilbv) (appbv lf8 lf3).
Lemma candidate_6: forall (lf3 : BV) (lf8 : BV), @eq BV (BV.appbv lf8 (BV.appbv lf3 BV.nilbv)) (appbv lf8 lf3).
Lemma candidate_22: forall (lf3 : BV) (lf8 : BV), @eq BV (appbv lf8 lf3)   (BV.appbv (BV.appbv (BV.appbv lf8 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_21: forall (lf3 : BV) (lf8 : BV), @eq BV (appbv lf8 lf3)   (BV.appbv (BV.appbv lf8 BV.nilbv) (BV.appbv lf3 BV.nilbv)).
Lemma candidate_4: forall (lf3 : BV) (lf8 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf8 lf3) BV.nilbv) BV.nilbv)   (appbv lf8 lf3).
Lemma candidate_3: forall (lf3 : BV) (lf8 : BV), @eq BV (BV.appbv (BV.appbv lf8 BV.nilbv) (BV.appbv lf3 BV.nilbv))   (appbv lf8 lf3).
Lemma candidate_942: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum v w cin) lf4)   (appbv (BV_full_adder_sum w v cin) (lf4)).
Lemma candidate_235: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (lf3))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_941: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum v w cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_234: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_1244: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv (lf6) lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1083: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin) (consbv (lf5) lf9)).
Lemma candidate_1065: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 lf9)).
Lemma candidate_1059: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (BV.consbv lf6 lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1302: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv (lf6) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1238: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf8 : BV), @eq BV (appbv (lf8) (consbv (BV_full_adder_carry v w cin) lf9))   (appbv lf8 (consbv (BV_full_adder_carry w v cin) lf9)).
Lemma candidate_1190: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv (lf5) nilbv)).
Lemma candidate_854: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool) (lf9 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf9))   (appbv (lf7) (consbv (BV_full_adder_carry w v cin) lf9)).
Lemma candidate_1290: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV (appbv (lf8) (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv lf8 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_1165: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 BV.nilbv)).
Lemma candidate_1159: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (BV.consbv lf6 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_906: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv (lf7) (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_905: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv (BV.appbv lf7 BV.nilbv) (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_1289: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV   (appbv (BV.appbv lf8 BV.nilbv) (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv lf8 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_1081: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) lf9)).
Lemma candidate_1082: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) lf9)).
Lemma candidate_1242: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1243: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (HalfAdder.half_adder_carry lf6 true) lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1188: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_1189: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_1300: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1078: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf9)).
Lemma candidate_1301: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1080: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) lf9)).
Lemma candidate_1079: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf9 : BV), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 lf9))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) lf9)).
Lemma candidate_1239: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1241: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (FullAdder.full_adder_carry lf6 true false) lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1240: forall (w : BV) (v : BV) (cin : bool) (lf9 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (FullAdder.full_adder_carry true lf6 false) lf9))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf9)).
Lemma candidate_1185: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_1166: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_1187: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_1186: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_1297: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1160: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1299: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1298: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1162: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_1161: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_1164: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_1163: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum v w cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_1156: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1155: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1158: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_1157: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum v w cin)      (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
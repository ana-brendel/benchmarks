LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_BV_full_adder_carry_sym_241

Number of Lemmas: 576
Number of Lemmas (after duplicates removed): 184
Number of Lemmas (after QuickChick used to filter): 139
* Number of Candidate Lemmas: 106

Time until ranking: 4229
Time to complete: 9914

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 2

Lemma candidate_3: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_2: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry v w cin) lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry w v cin) lf8)).

Category 3 (provable):
Count = 87

Lemma candidate_145: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_16: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_11: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_8: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_7: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_6: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_144: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (appbv lf7 (BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv)).
Lemma candidate_5: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_207: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_80: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_203: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_202: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_76: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_75: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_205: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_204: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_78: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_77: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_386: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 lf6) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_387: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 true) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_279: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 true) lf8)).
Lemma candidate_422: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_423: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_363: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_383: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_275: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf8)).
Lemma candidate_385: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 true false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_384: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry true lf6 false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_277: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 true false) lf8)).
Lemma candidate_276: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry true lf5 false) lf8)).
Lemma candidate_419: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_359: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_322: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_310: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_421: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_420: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_361: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_360: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_196: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)).
Lemma candidate_61: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_318: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_317: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_187: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_320: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_319: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_306: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_305: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_192: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)).
Lemma candidate_191: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)).
Lemma candidate_57: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_56: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_308: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_307: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_194: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)).
Lemma candidate_193: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)).
Lemma candidate_183: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_182: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_59: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_58: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_185: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_184: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_491: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) lf8)).
Lemma candidate_550: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_551: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 true) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_533: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_568: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_487: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf8)).
Lemma candidate_569: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_489: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) lf8)).
Lemma candidate_488: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) lf8)).
Lemma candidate_549: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 true false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_548: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf6 false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_529: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_510: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_531: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_530: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_504: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_567: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_566: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_506: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_505: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_508: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_507: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_500: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_499: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_502: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_501: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).

Category 3 (not provable):
Count = 17

Lemma candidate_32: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_18: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_17: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_13: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_12: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_31: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv))   (appbv lf7 lf3).
Lemma candidate_15: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_10: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_278: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 lf5) lf8)).
Lemma candidate_362: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_437: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_113: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_4: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))   (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma candidate_490: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) lf8)).
Lemma candidate_532: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_547: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_565: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_BV_full_adder_carry_sym_241
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_BV_full_adder_carry_sym_241
- Namespace: Circuits
- Proof name: BV_full_adder_sym
- Theorem: Theorem BV_full_adder_sym: forall (v0 w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder v0 w0 cin0) (BV_full_adder w0 v0 cin0).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv))

* Hypothesis:
cin : bool
v : BV
w : BV

* Types:
Set
Prop
BV
bool

* Polymorphic Types:


* Variables:
cin : bool
v : BV
w : BV

* Terms:
consbv (BV_full_adder_carry w v cin) nilbv : BV
appbv (BV_full_adder_sum w v cin)
  (consbv (BV_full_adder_carry w v cin) nilbv) : BV
consbv (BV_full_adder_carry v w cin) nilbv : BV
BV_full_adder_carry v w cin : bool
bool : Set
cin : bool
v : BV
w : BV
@eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)) : Prop
BV : Set
nilbv : BV
BV_full_adder_carry w v cin : bool
BV_full_adder_sum w v cin : BV
appbv (BV_full_adder_sum w v cin)
  (consbv (BV_full_adder_carry v w cin) nilbv) : BV

* Functions:
appbv  : forall (_ : BV) (_ : BV), BV
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
consbv  : forall (_ : bool) (_ : BV), BV
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : BV = consbv (BV_full_adder_carry w v cin) nilbv
lf7 : BV = BV_full_adder_sum w v cin
lf1 : BV = appbv (BV_full_adder_sum w v cin)
  (consbv (BV_full_adder_carry w v cin) nilbv)
lf4 : BV = consbv (BV_full_adder_carry v w cin) nilbv
lf5 : bool = BV_full_adder_carry v w cin
lf2 : BV = appbv (BV_full_adder_sum w v cin)
  (consbv (BV_full_adder_carry v w cin) nilbv)
lf8 : BV = nilbv
lf6 : bool = BV_full_adder_carry w v cin

Generalizations:
Lemma conj1: forall (lf4 : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 lf3).
Lemma conj17: forall (lf8 : BV) (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 lf3).
Lemma conj19: forall (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 lf3).
Lemma conj25: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (appbv lf7 lf3).
Lemma conj27: forall (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 lf3).
Lemma conj65: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj81: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj83: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj89: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj91: forall (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj129: forall (lf8 : BV) (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 lf8)).
Lemma conj130: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj131: forall (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj132: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4)
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj145: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma conj146: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj147: forall (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj148: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj153: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (consbv lf6 lf8)).
Lemma conj154: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj155: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (consbv lf6 nilbv)).
Lemma conj156: forall (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj193: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj194: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj195: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj196: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj209: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj210: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj211: forall (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj212: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj217: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj218: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj219: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj220: forall (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).


<---VALIDITY CHECKS--->
Time elapsed: 93 seconds
Valid:
Lemma conj220: forall (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj218: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj156: forall (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj154: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).

Invalid:
Lemma conj219: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj217: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj212: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj211: forall (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj210: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj209: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj196: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj195: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj194: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj193: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj155: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (consbv lf6 nilbv)).
Lemma conj153: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (consbv lf6 lf8)).
Lemma conj148: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj147: forall (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj146: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj145: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma conj132: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4)
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj131: forall (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj130: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj129: forall (lf8 : BV) (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 lf8)).
Lemma conj91: forall (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj89: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj83: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj81: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj65: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj27: forall (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 lf3).
Lemma conj25: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (appbv lf7 lf3).
Lemma conj19: forall (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 lf3).
Lemma conj17: forall (lf8 : BV) (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 lf3).
Lemma conj1: forall (lf4 : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 lf3).

<---ADD IMPLICATIONS--->
Time elapsed: 93 seconds
Generalizations:
Lemma conj219: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj217: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj212: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj211: forall (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj210: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj209: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj196: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj195: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj194: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj193: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj155: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (consbv lf6 nilbv)).
Lemma conj153: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (consbv lf6 lf8)).
Lemma conj148: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj147: forall (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj146: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj145: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma conj132: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4)
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj131: forall (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj130: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj129: forall (lf8 : BV) (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 lf8)).
Lemma conj91: forall (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj89: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj83: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj81: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj65: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj27: forall (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 lf3).
Lemma conj25: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (appbv lf7 lf3).
Lemma conj19: forall (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 lf3).
Lemma conj17: forall (lf8 : BV) (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 lf3).
Lemma conj1: forall (lf4 : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 lf3).


<---VALIDITY CHECKS--->
Time elapsed: 139 seconds
Valid:

Invalid:
Lemma conj1: forall (lf4 : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 lf3).
Lemma conj17: forall (lf8 : BV) (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 lf3).
Lemma conj19: forall (lf5 : bool) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 lf3).
Lemma conj25: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (appbv lf7 lf3).
Lemma conj27: forall (cin : bool) (v : BV) (w : BV) (lf7 : BV) (lf3 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 lf3).
Lemma conj65: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj81: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj83: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj89: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj91: forall (cin : bool) (v : BV) (w : BV) (lf3 : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3).
Lemma conj129: forall (lf8 : BV) (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 lf8)).
Lemma conj130: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj131: forall (lf6 : bool) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj132: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV) (lf7 : BV), @eq BV (appbv lf7 lf4)
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj145: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma conj146: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj147: forall (lf6 : bool) (lf5 : bool) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma conj148: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv lf5 nilbv))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj153: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (consbv lf6 lf8)).
Lemma conj155: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf7 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (consbv lf6 nilbv)).
Lemma conj193: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj194: forall (lf8 : BV) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj195: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj196: forall (cin : bool) (v : BV) (w : BV) (lf4 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj209: forall (lf8 : BV) (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj210: forall (lf8 : BV) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma conj211: forall (lf6 : bool) (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma conj212: forall (lf5 : bool) (cin : bool) (v : BV) (w : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma conj217: forall (lf8 : BV) (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma conj219: forall (lf6 : bool) (cin : bool) (v : BV) (w : BV), @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).


<---CREATE SKETCHES--->
Time elapsed: 139 seconds
Sketches:
Sketch conj1_sketch0 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj1_sketch1 : @eq BV (##hole##) (appbv lf7 lf3)
Sketch conj1_term_sketch0 : @eq BV (appbv lf7 lf3) (##hole##)
Sketch conj1_term_sketch1 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj17_sketch0 : @eq BV (appbv lf7 (consbv lf5 lf8)) (##hole##)
Sketch conj17_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 lf3)
Sketch conj17_sketch2 : @eq BV (##hole##) (appbv lf7 lf3)
Sketch conj17_term_sketch0 : @eq BV (appbv lf7 lf3) (##hole##)
Sketch conj17_term_sketch1 : @eq BV (consbv lf5 lf8) (##hole##)
Sketch conj17_term_sketch2 : @eq BV (appbv lf7 (consbv lf5 lf8)) (##hole##)
Sketch conj19_sketch0 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (##hole##)
Sketch conj19_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 lf3)
Sketch conj19_sketch2 : @eq BV (##hole##) (appbv lf7 lf3)
Sketch conj19_term_sketch0 : @eq BV (appbv lf7 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq BV (consbv lf5 nilbv) (##hole##)
Sketch conj19_term_sketch2 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (##hole##)
Sketch conj25_sketch0 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj25_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 lf3)
Sketch conj25_sketch2 : @eq BV (appbv lf7 (consbv (##hole##) lf8)) (appbv lf7 lf3)
Sketch conj25_sketch3 : @eq BV (##hole##) (appbv lf7 lf3)
Sketch conj25_term_sketch0 : @eq BV (appbv lf7 lf3) (##hole##)
Sketch conj25_term_sketch1 : @eq BV (consbv (BV_full_adder_carry v w cin) lf8) (##hole##)
Sketch conj25_term_sketch2 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj25_term_sketch3 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj27_sketch0 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 lf3)
Sketch conj27_sketch1 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj27_sketch2 : @eq BV (##hole##) (appbv lf7 lf3)
Sketch conj27_sketch3 : @eq BV (appbv lf7 (consbv (##hole##) nilbv)) (appbv lf7 lf3)
Sketch conj27_term_sketch0 : @eq BV (consbv (BV_full_adder_carry v w cin) nilbv) (##hole##)
Sketch conj27_term_sketch1 : @eq BV (appbv lf7 lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj27_term_sketch3 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj65_sketch0 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj65_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj65_sketch2 : @eq BV (appbv (##hole##) lf4) (appbv (##hole##) lf3)
Sketch conj65_term_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj65_term_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf3) (##hole##)
Sketch conj65_term_sketch2 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj81_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8)) (##hole##)
Sketch conj81_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj81_sketch2 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj81_sketch3 : @eq BV (appbv (##hole##) (consbv lf5 lf8)) (appbv (##hole##) lf3)
Sketch conj81_term_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) lf3) (##hole##)
Sketch conj81_term_sketch1 : @eq BV (consbv lf5 lf8) (##hole##)
Sketch conj81_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8)) (##hole##)
Sketch conj81_term_sketch3 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj83_sketch0 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj83_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv)) (##hole##)
Sketch conj83_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj83_sketch3 : @eq BV (appbv (##hole##) (consbv lf5 nilbv)) (appbv (##hole##) lf3)
Sketch conj83_term_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv)) (##hole##)
Sketch conj83_term_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf3) (##hole##)
Sketch conj83_term_sketch2 : @eq BV (consbv lf5 nilbv) (##hole##)
Sketch conj83_term_sketch3 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj89_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj89_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) lf8))
  (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj89_sketch2 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj89_sketch3 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj89_sketch4 : @eq BV (appbv (##hole##) (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (##hole##) lf3)
Sketch conj89_term_sketch0 : @eq BV (consbv (BV_full_adder_carry v w cin) lf8) (##hole##)
Sketch conj89_term_sketch1 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj89_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) lf3) (##hole##)
Sketch conj89_term_sketch3 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj89_term_sketch4 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj91_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj91_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) nilbv))
  (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj91_sketch2 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj91_sketch3 : @eq BV (appbv (##hole##) (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (##hole##) lf3)
Sketch conj91_sketch4 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) lf3)
Sketch conj91_term_sketch0 : @eq BV (consbv (BV_full_adder_carry v w cin) nilbv) (##hole##)
Sketch conj91_term_sketch1 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj91_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) lf3) (##hole##)
Sketch conj91_term_sketch3 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj91_term_sketch4 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj129_sketch0 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj129_sketch1 : @eq BV (##hole##) (appbv lf7 (consbv lf6 lf8))
Sketch conj129_sketch2 : @eq BV (appbv lf7 lf4) (appbv lf7 (##hole##))
Sketch conj129_term_sketch0 : @eq BV (appbv lf7 (consbv lf6 lf8)) (##hole##)
Sketch conj129_term_sketch1 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj129_term_sketch2 : @eq BV (consbv lf6 lf8) (##hole##)
Sketch conj130_sketch0 : @eq BV (appbv lf7 lf4) (appbv lf7 (##hole##))
Sketch conj130_sketch1 : @eq BV (##hole##) (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj130_sketch2 : @eq BV (appbv lf7 lf4) (appbv lf7 (consbv (##hole##) lf8))
Sketch conj130_sketch3 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj130_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) lf8) (##hole##)
Sketch conj130_term_sketch1 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj130_term_sketch2 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj130_term_sketch3 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)) (##hole##)
Sketch conj131_sketch0 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj131_sketch1 : @eq BV (##hole##) (appbv lf7 (consbv lf6 nilbv))
Sketch conj131_sketch2 : @eq BV (appbv lf7 lf4) (appbv lf7 (##hole##))
Sketch conj131_term_sketch0 : @eq BV (appbv lf7 (consbv lf6 nilbv)) (##hole##)
Sketch conj131_term_sketch1 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj131_term_sketch2 : @eq BV (consbv lf6 nilbv) (##hole##)
Sketch conj132_sketch0 : @eq BV (appbv lf7 lf4) (appbv lf7 (##hole##))
Sketch conj132_sketch1 : @eq BV (##hole##) (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj132_sketch2 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj132_sketch3 : @eq BV (appbv lf7 lf4) (appbv lf7 (consbv (##hole##) nilbv))
Sketch conj132_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) nilbv) (##hole##)
Sketch conj132_term_sketch1 : @eq BV (appbv lf7 lf4) (##hole##)
Sketch conj132_term_sketch2 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)) (##hole##)
Sketch conj132_term_sketch3 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj145_sketch0 : @eq BV (appbv lf7 (consbv lf5 lf8)) (##hole##)
Sketch conj145_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 (consbv lf6 lf8))
Sketch conj145_sketch2 : @eq BV (##hole##) (appbv lf7 (consbv lf6 lf8))
Sketch conj145_sketch3 : @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (##hole##))
Sketch conj145_term_sketch0 : @eq BV (appbv lf7 (consbv lf6 lf8)) (##hole##)
Sketch conj145_term_sketch1 : @eq BV (consbv lf5 lf8) (##hole##)
Sketch conj145_term_sketch2 : @eq BV (appbv lf7 (consbv lf5 lf8)) (##hole##)
Sketch conj145_term_sketch3 : @eq BV (consbv lf6 lf8) (##hole##)
Sketch conj146_sketch0 : @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (##hole##))
Sketch conj146_sketch1 : @eq BV (appbv lf7 (##hole##))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj146_sketch2 : @eq BV (##hole##) (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj146_sketch3 : @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (consbv (##hole##) lf8))
Sketch conj146_sketch4 : @eq BV (appbv lf7 (consbv lf5 lf8)) (##hole##)
Sketch conj146_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) lf8) (##hole##)
Sketch conj146_term_sketch1 : @eq BV (consbv lf5 lf8) (##hole##)
Sketch conj146_term_sketch2 : @eq BV (appbv lf7 (consbv lf5 lf8)) (##hole##)
Sketch conj146_term_sketch3 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj146_term_sketch4 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)) (##hole##)
Sketch conj147_sketch0 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (##hole##)
Sketch conj147_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 (consbv lf6 nilbv))
Sketch conj147_sketch2 : @eq BV (##hole##) (appbv lf7 (consbv lf6 nilbv))
Sketch conj147_sketch3 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (##hole##))
Sketch conj147_term_sketch0 : @eq BV (appbv lf7 (consbv lf6 nilbv)) (##hole##)
Sketch conj147_term_sketch1 : @eq BV (consbv lf5 nilbv) (##hole##)
Sketch conj147_term_sketch2 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (##hole##)
Sketch conj147_term_sketch3 : @eq BV (consbv lf6 nilbv) (##hole##)
Sketch conj148_sketch0 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (##hole##))
Sketch conj148_sketch1 : @eq BV (appbv lf7 (##hole##))
  (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj148_sketch2 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (##hole##)
Sketch conj148_sketch3 : @eq BV (##hole##) (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj148_sketch4 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (consbv (##hole##) nilbv))
Sketch conj148_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) nilbv) (##hole##)
Sketch conj148_term_sketch1 : @eq BV (consbv lf5 nilbv) (##hole##)
Sketch conj148_term_sketch2 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)) (##hole##)
Sketch conj148_term_sketch3 : @eq BV (appbv lf7 (consbv lf5 nilbv)) (##hole##)
Sketch conj148_term_sketch4 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj153_sketch0 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj153_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 (consbv lf6 lf8))
Sketch conj153_sketch2 : @eq BV (appbv lf7 (consbv (##hole##) lf8)) (appbv lf7 (consbv lf6 lf8))
Sketch conj153_sketch3 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv lf7 (##hole##))
Sketch conj153_sketch4 : @eq BV (##hole##) (appbv lf7 (consbv lf6 lf8))
Sketch conj153_term_sketch0 : @eq BV (appbv lf7 (consbv lf6 lf8)) (##hole##)
Sketch conj153_term_sketch1 : @eq BV (consbv (BV_full_adder_carry v w cin) lf8) (##hole##)
Sketch conj153_term_sketch2 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj153_term_sketch3 : @eq BV (consbv lf6 lf8) (##hole##)
Sketch conj153_term_sketch4 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj155_sketch0 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj155_sketch1 : @eq BV (appbv lf7 (##hole##)) (appbv lf7 (consbv lf6 nilbv))
Sketch conj155_sketch2 : @eq BV (##hole##) (appbv lf7 (consbv lf6 nilbv))
Sketch conj155_sketch3 : @eq BV (appbv lf7 (consbv (##hole##) nilbv)) (appbv lf7 (consbv lf6 nilbv))
Sketch conj155_sketch4 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv lf7 (##hole##))
Sketch conj155_term_sketch0 : @eq BV (appbv lf7 (consbv lf6 nilbv)) (##hole##)
Sketch conj155_term_sketch1 : @eq BV (consbv (BV_full_adder_carry v w cin) nilbv) (##hole##)
Sketch conj155_term_sketch2 : @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj155_term_sketch3 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj155_term_sketch4 : @eq BV (consbv lf6 nilbv) (##hole##)
Sketch conj193_sketch0 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8))
Sketch conj193_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj193_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj193_sketch3 : @eq BV (appbv (##hole##) lf4) (appbv (##hole##) (consbv lf6 lf8))
Sketch conj193_term_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj193_term_sketch1 : @eq BV (consbv lf6 lf8) (##hole##)
Sketch conj193_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)) (##hole##)
Sketch conj193_term_sketch3 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj194_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj194_sketch1 : @eq BV (##hole##)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj194_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj194_sketch3 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) lf8))
Sketch conj194_sketch4 : @eq BV (appbv (##hole##) lf4)
  (appbv (##hole##) (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj194_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) lf8) (##hole##)
Sketch conj194_term_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj194_term_sketch2 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)) (##hole##)
Sketch conj194_term_sketch3 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj194_term_sketch4 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj195_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj195_sketch1 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv))
Sketch conj195_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj195_sketch3 : @eq BV (appbv (##hole##) lf4) (appbv (##hole##) (consbv lf6 nilbv))
Sketch conj195_term_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)) (##hole##)
Sketch conj195_term_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj195_term_sketch2 : @eq BV (consbv lf6 nilbv) (##hole##)
Sketch conj195_term_sketch3 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj196_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj196_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj196_sketch2 : @eq BV (##hole##)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj196_sketch3 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4)
  (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) nilbv))
Sketch conj196_sketch4 : @eq BV (appbv (##hole##) lf4)
  (appbv (##hole##) (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj196_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) nilbv) (##hole##)
Sketch conj196_term_sketch1 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)) (##hole##)
Sketch conj196_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) lf4) (##hole##)
Sketch conj196_term_sketch3 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj196_term_sketch4 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj209_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8))
Sketch conj209_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj209_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8)) (##hole##)
Sketch conj209_sketch3 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8))
Sketch conj209_sketch4 : @eq BV (appbv (##hole##) (consbv lf5 lf8))
  (appbv (##hole##) (consbv lf6 lf8))
Sketch conj209_term_sketch0 : @eq BV (consbv lf5 lf8) (##hole##)
Sketch conj209_term_sketch1 : @eq BV (consbv lf6 lf8) (##hole##)
Sketch conj209_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)) (##hole##)
Sketch conj209_term_sketch3 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8)) (##hole##)
Sketch conj209_term_sketch4 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj210_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj210_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj210_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8)) (##hole##)
Sketch conj210_sketch3 : @eq BV (##hole##)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj210_sketch4 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) lf8))
Sketch conj210_sketch5 : @eq BV (appbv (##hole##) (consbv lf5 lf8))
  (appbv (##hole##) (consbv (BV_full_adder_carry w v cin) lf8))
Sketch conj210_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) lf8) (##hole##)
Sketch conj210_term_sketch1 : @eq BV (consbv lf5 lf8) (##hole##)
Sketch conj210_term_sketch2 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) lf8)) (##hole##)
Sketch conj210_term_sketch3 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8)) (##hole##)
Sketch conj210_term_sketch4 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj210_term_sketch5 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj211_sketch0 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv))
Sketch conj211_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv)) (##hole##)
Sketch conj211_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv))
Sketch conj211_sketch3 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj211_sketch4 : @eq BV (appbv (##hole##) (consbv lf5 nilbv))
  (appbv (##hole##) (consbv lf6 nilbv))
Sketch conj211_term_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv)) (##hole##)
Sketch conj211_term_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)) (##hole##)
Sketch conj211_term_sketch2 : @eq BV (consbv lf5 nilbv) (##hole##)
Sketch conj211_term_sketch3 : @eq BV (consbv lf6 nilbv) (##hole##)
Sketch conj211_term_sketch4 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj212_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj212_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv)) (##hole##)
Sketch conj212_sketch2 : @eq BV (##hole##)
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj212_sketch3 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj212_sketch4 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) nilbv))
Sketch conj212_sketch5 : @eq BV (appbv (##hole##) (consbv lf5 nilbv))
  (appbv (##hole##) (consbv (BV_full_adder_carry w v cin) nilbv))
Sketch conj212_term_sketch0 : @eq BV (consbv (BV_full_adder_carry w v cin) nilbv) (##hole##)
Sketch conj212_term_sketch1 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry w v cin) nilbv)) (##hole##)
Sketch conj212_term_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv)) (##hole##)
Sketch conj212_term_sketch3 : @eq BV (consbv lf5 nilbv) (##hole##)
Sketch conj212_term_sketch4 : @eq bool (BV_full_adder_carry w v cin) (##hole##)
Sketch conj212_term_sketch5 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj217_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8))
Sketch conj217_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) lf8))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8))
Sketch conj217_sketch2 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj217_sketch3 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8))
Sketch conj217_sketch4 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj217_sketch5 : @eq BV (appbv (##hole##) (consbv (BV_full_adder_carry v w cin) lf8))
  (appbv (##hole##) (consbv lf6 lf8))
Sketch conj217_term_sketch0 : @eq BV (consbv (BV_full_adder_carry v w cin) lf8) (##hole##)
Sketch conj217_term_sketch1 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj217_term_sketch2 : @eq BV (consbv lf6 lf8) (##hole##)
Sketch conj217_term_sketch3 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) lf8)) (##hole##)
Sketch conj217_term_sketch4 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)) (##hole##)
Sketch conj217_term_sketch5 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj219_sketch0 : @eq BV (appbv (BV_full_adder_sum w v cin) (##hole##))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv))
Sketch conj219_sketch1 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)
Sketch conj219_sketch2 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv (##hole##) nilbv))
  (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv))
Sketch conj219_sketch3 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (BV_full_adder_sum w v cin) (##hole##))
Sketch conj219_sketch4 : @eq BV (appbv (##hole##) (consbv (BV_full_adder_carry v w cin) nilbv))
  (appbv (##hole##) (consbv lf6 nilbv))
Sketch conj219_sketch5 : @eq BV (##hole##) (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv))
Sketch conj219_term_sketch0 : @eq BV (consbv (BV_full_adder_carry v w cin) nilbv) (##hole##)
Sketch conj219_term_sketch1 : @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)) (##hole##)
Sketch conj219_term_sketch2 : @eq bool (BV_full_adder_carry v w cin) (##hole##)
Sketch conj219_term_sketch3 : @eq BV (consbv lf6 nilbv) (##hole##)
Sketch conj219_term_sketch4 : @eq BV (BV_full_adder_sum w v cin) (##hole##)
Sketch conj219_term_sketch5 : @eq BV
  (appbv (BV_full_adder_sum w v cin)
     (consbv (BV_full_adder_carry v w cin) nilbv)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2869 seconds
Problems per Sketch:
Sketch conj129_sketch1 --> Problem  synth_30
Sketch conj25_sketch1 --> Problem  synth_4
Sketch conj210_sketch5 --> Problem  synth_60
Sketch conj147_sketch1 --> Problem  synth_41
Sketch conj130_sketch0 --> Problem  synth_31
Sketch conj81_sketch2 --> Problem  synth_15
Sketch conj148_sketch0 --> Problem  synth_42
Sketch conj65_term_sketch0 --> Problem  synth_16
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj219_term_sketch1 --> Problem  synth_52
Sketch conj194_sketch1 --> Problem  synth_25
Sketch conj153_term_sketch1 --> Problem  synth_10
Sketch conj155_sketch2 --> Problem  synth_34
Sketch conj130_sketch1 --> Problem  synth_8
Sketch conj89_sketch0 --> Problem  synth_20
Sketch conj130_term_sketch1 --> Problem  synth_1
Sketch conj81_term_sketch1 --> Problem  synth_5
Sketch conj91_sketch4 --> Problem  synth_15
Sketch conj1_sketch1 --> Problem  synth_2
Sketch conj146_sketch3 --> Problem  synth_40
Sketch conj209_sketch2 --> Problem  synth_19
Sketch conj194_term_sketch2 --> Problem  synth_25
Sketch conj147_sketch0 --> Problem  synth_6
Sketch conj211_sketch3 --> Problem  synth_62
Sketch conj19_term_sketch1 --> Problem  synth_7
Sketch conj193_sketch2 --> Problem  synth_16
Sketch conj89_sketch3 --> Problem  synth_15
Sketch conj145_sketch1 --> Problem  synth_37
Sketch conj91_sketch3 --> Problem  synth_29
Sketch conj211_term_sketch1 --> Problem  synth_52
Sketch conj132_term_sketch1 --> Problem  synth_1
Sketch conj212_term_sketch5 --> Problem  synth_18
Sketch conj153_sketch3 --> Problem  synth_39
Sketch conj196_sketch3 --> Problem  synth_54
Sketch conj217_term_sketch4 --> Problem  synth_47
Sketch conj91_term_sketch3 --> Problem  synth_18
Sketch conj194_sketch0 --> Problem  synth_48
Sketch conj212_term_sketch2 --> Problem  synth_22
Sketch conj195_term_sketch1 --> Problem  synth_16
Sketch conj131_sketch2 --> Problem  synth_31
Sketch conj209_term_sketch1 --> Problem  synth_32
Sketch conj210_term_sketch2 --> Problem  synth_25
Sketch conj153_term_sketch4 --> Problem  synth_8
Sketch conj146_term_sketch3 --> Problem  synth_11
Sketch conj89_term_sketch2 --> Problem  synth_15
Sketch conj195_term_sketch2 --> Problem  synth_35
Sketch conj209_term_sketch0 --> Problem  synth_5
Sketch conj219_term_sketch5 --> Problem  synth_28
Sketch conj193_sketch1 --> Problem  synth_48
Sketch conj89_sketch2 --> Problem  synth_25
Sketch conj19_term_sketch2 --> Problem  synth_6
Sketch conj212_term_sketch4 --> Problem  synth_11
Sketch conj27_sketch0 --> Problem  synth_4
Sketch conj217_sketch5 --> Problem  synth_67
Sketch conj148_sketch3 --> Problem  synth_12
Sketch conj145_term_sketch1 --> Problem  synth_5
Sketch conj81_sketch1 --> Problem  synth_20
Sketch conj195_sketch1 --> Problem  synth_52
Sketch conj148_term_sketch1 --> Problem  synth_7
Sketch conj196_term_sketch0 --> Problem  synth_14
Sketch conj211_sketch4 --> Problem  synth_63
Sketch conj155_sketch0 --> Problem  synth_12
Sketch conj194_sketch2 --> Problem  synth_16
Sketch conj196_term_sketch3 --> Problem  synth_11
Sketch conj193_sketch3 --> Problem  synth_49
Sketch conj145_term_sketch2 --> Problem  synth_3
Sketch conj17_term_sketch2 --> Problem  synth_3
Sketch conj146_term_sketch2 --> Problem  synth_3
Sketch conj129_sketch0 --> Problem  synth_1
Sketch conj194_sketch3 --> Problem  synth_50
Sketch conj153_sketch4 --> Problem  synth_30
Sketch conj209_term_sketch2 --> Problem  synth_47
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj130_sketch3 --> Problem  synth_1
Sketch conj17_sketch1 --> Problem  synth_4
Sketch conj195_term_sketch3 --> Problem  synth_18
Sketch conj83_term_sketch2 --> Problem  synth_7
Sketch conj27_term_sketch3 --> Problem  synth_11
Sketch conj65_sketch0 --> Problem  synth_15
Sketch conj155_sketch4 --> Problem  synth_43
Sketch conj217_sketch0 --> Problem  synth_56
Sketch conj147_term_sketch2 --> Problem  synth_6
Sketch conj89_sketch4 --> Problem  synth_26
Sketch conj132_term_sketch0 --> Problem  synth_14
Sketch conj217_sketch3 --> Problem  synth_47
Sketch conj194_sketch4 --> Problem  synth_51
Sketch conj132_sketch0 --> Problem  synth_31
Sketch conj209_term_sketch4 --> Problem  synth_18
Sketch conj155_sketch3 --> Problem  synth_46
Sketch conj27_term_sketch2 --> Problem  synth_12
Sketch conj148_term_sketch4 --> Problem  synth_11
Sketch conj217_term_sketch2 --> Problem  synth_32
Sketch conj148_sketch1 --> Problem  synth_43
Sketch conj91_sketch0 --> Problem  synth_20
Sketch conj27_sketch2 --> Problem  synth_2
Sketch conj81_term_sketch2 --> Problem  synth_19
Sketch conj153_term_sketch3 --> Problem  synth_32
Sketch conj130_term_sketch2 --> Problem  synth_11
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj219_sketch3 --> Problem  synth_14
Sketch conj210_term_sketch0 --> Problem  synth_10
Sketch conj153_sketch0 --> Problem  synth_8
Sketch conj81_sketch3 --> Problem  synth_21
Sketch conj196_sketch4 --> Problem  synth_55
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj219_sketch1 --> Problem  synth_28
Sketch conj212_sketch4 --> Problem  synth_64
Sketch conj131_sketch1 --> Problem  synth_34
Sketch conj132_sketch3 --> Problem  synth_36
Sketch conj211_term_sketch3 --> Problem  synth_35
Sketch conj147_sketch3 --> Problem  synth_42
Sketch conj131_term_sketch2 --> Problem  synth_35
Sketch conj217_term_sketch0 --> Problem  synth_10
Sketch conj219_sketch5 --> Problem  synth_52
Sketch conj196_term_sketch2 --> Problem  synth_16
Sketch conj211_sketch0 --> Problem  synth_52
Sketch conj217_term_sketch5 --> Problem  synth_18
Sketch conj212_term_sketch3 --> Problem  synth_7
Sketch conj145_term_sketch0 --> Problem  synth_30
Sketch conj209_term_sketch3 --> Problem  synth_19
Sketch conj195_sketch0 --> Problem  synth_16
Sketch conj153_term_sketch2 --> Problem  synth_11
Sketch conj89_term_sketch0 --> Problem  synth_10
Sketch conj131_term_sketch1 --> Problem  synth_1
Sketch conj91_sketch1 --> Problem  synth_27
Sketch conj219_term_sketch3 --> Problem  synth_35
Sketch conj209_sketch1 --> Problem  synth_57
Sketch conj155_term_sketch1 --> Problem  synth_14
Sketch conj83_sketch2 --> Problem  synth_20
Sketch conj146_term_sketch0 --> Problem  synth_10
Sketch conj91_term_sketch1 --> Problem  synth_11
Sketch conj147_term_sketch3 --> Problem  synth_35
Sketch conj91_term_sketch4 --> Problem  synth_28
Sketch conj81_term_sketch0 --> Problem  synth_15
Sketch conj219_sketch2 --> Problem  synth_68
Sketch conj132_sketch2 --> Problem  synth_1
Sketch conj25_term_sketch2 --> Problem  synth_11
Sketch conj210_term_sketch1 --> Problem  synth_5
Sketch conj194_term_sketch1 --> Problem  synth_16
Sketch conj83_sketch1 --> Problem  synth_22
Sketch conj211_sketch1 --> Problem  synth_22
Sketch conj217_sketch2 --> Problem  synth_10
Sketch conj25_sketch3 --> Problem  synth_2
Sketch conj25_term_sketch3 --> Problem  synth_8
Sketch conj146_sketch1 --> Problem  synth_39
Sketch conj130_term_sketch3 --> Problem  synth_8
Sketch conj129_term_sketch2 --> Problem  synth_32
Sketch conj210_term_sketch3 --> Problem  synth_19
Sketch conj209_sketch0 --> Problem  synth_56
Sketch conj210_term_sketch5 --> Problem  synth_18
Sketch conj65_sketch2 --> Problem  synth_17
Sketch conj155_term_sketch3 --> Problem  synth_11
Sketch conj130_term_sketch0 --> Problem  synth_10
Sketch conj153_term_sketch0 --> Problem  synth_30
Sketch conj212_sketch3 --> Problem  synth_14
Sketch conj219_term_sketch2 --> Problem  synth_11
Sketch conj131_sketch0 --> Problem  synth_1
Sketch conj210_sketch0 --> Problem  synth_57
Sketch conj89_term_sketch1 --> Problem  synth_11
Sketch conj211_sketch2 --> Problem  synth_61
Sketch conj83_term_sketch1 --> Problem  synth_15
Sketch conj1_term_sketch0 --> Problem  synth_2
Sketch conj145_sketch0 --> Problem  synth_3
Sketch conj27_sketch3 --> Problem  synth_13
Sketch conj153_sketch1 --> Problem  synth_37
Sketch conj27_sketch1 --> Problem  synth_12
Sketch conj19_sketch2 --> Problem  synth_2
Sketch conj145_sketch3 --> Problem  synth_38
Sketch conj217_sketch4 --> Problem  synth_25
Sketch conj210_sketch4 --> Problem  synth_59
Sketch conj211_term_sketch4 --> Problem  synth_18
Sketch conj209_sketch3 --> Problem  synth_47
Sketch conj27_term_sketch1 --> Problem  synth_2
Sketch conj212_term_sketch0 --> Problem  synth_14
Sketch conj210_sketch2 --> Problem  synth_19
Sketch conj212_sketch2 --> Problem  synth_28
Sketch conj196_sketch0 --> Problem  synth_48
Sketch conj155_term_sketch0 --> Problem  synth_34
Sketch conj130_sketch2 --> Problem  synth_33
Sketch conj17_sketch2 --> Problem  synth_2
Sketch conj219_term_sketch4 --> Problem  synth_18
Sketch conj195_sketch2 --> Problem  synth_48
Sketch conj89_term_sketch4 --> Problem  synth_18
Sketch conj147_sketch2 --> Problem  synth_34
Sketch conj193_term_sketch2 --> Problem  synth_47
Sketch conj209_sketch4 --> Problem  synth_58
Sketch conj147_term_sketch1 --> Problem  synth_7
Sketch conj91_sketch2 --> Problem  synth_28
Sketch conj132_term_sketch3 --> Problem  synth_11
Sketch conj83_sketch0 --> Problem  synth_15
Sketch conj211_term_sketch2 --> Problem  synth_7
Sketch conj217_term_sketch1 --> Problem  synth_11
Sketch conj155_term_sketch2 --> Problem  synth_12
Sketch conj219_sketch4 --> Problem  synth_69
Sketch conj193_sketch0 --> Problem  synth_47
Sketch conj25_sketch0 --> Problem  synth_8
Sketch conj153_sketch2 --> Problem  synth_45
Sketch conj211_term_sketch0 --> Problem  synth_22
Sketch conj145_term_sketch3 --> Problem  synth_32
Sketch conj27_term_sketch0 --> Problem  synth_14
Sketch conj25_term_sketch0 --> Problem  synth_2
Sketch conj129_term_sketch1 --> Problem  synth_1
Sketch conj81_sketch0 --> Problem  synth_19
Sketch conj219_sketch0 --> Problem  synth_61
Sketch conj148_sketch4 --> Problem  synth_44
Sketch conj65_term_sketch2 --> Problem  synth_18
Sketch conj89_term_sketch3 --> Problem  synth_25
Sketch conj83_sketch3 --> Problem  synth_23
Sketch conj196_term_sketch4 --> Problem  synth_18
Sketch conj146_sketch0 --> Problem  synth_38
Sketch conj196_term_sketch1 --> Problem  synth_28
Sketch conj194_term_sketch3 --> Problem  synth_11
Sketch conj219_term_sketch0 --> Problem  synth_14
Sketch conj210_sketch1 --> Problem  synth_10
Sketch conj1_term_sketch1 --> Problem  synth_1
Sketch conj148_term_sketch3 --> Problem  synth_6
Sketch conj147_term_sketch0 --> Problem  synth_34
Sketch conj194_term_sketch0 --> Problem  synth_10
Sketch conj193_term_sketch3 --> Problem  synth_18
Sketch conj212_sketch5 --> Problem  synth_65
Sketch conj212_sketch1 --> Problem  synth_22
Sketch conj212_sketch0 --> Problem  synth_62
Sketch conj217_term_sketch3 --> Problem  synth_25
Sketch conj196_sketch1 --> Problem  synth_16
Sketch conj91_term_sketch0 --> Problem  synth_14
Sketch conj155_term_sketch4 --> Problem  synth_35
Sketch conj148_term_sketch2 --> Problem  synth_12
Sketch conj91_term_sketch2 --> Problem  synth_15
Sketch conj25_sketch2 --> Problem  synth_9
Sketch conj146_term_sketch1 --> Problem  synth_5
Sketch conj195_term_sketch0 --> Problem  synth_52
Sketch conj129_term_sketch0 --> Problem  synth_30
Sketch conj81_term_sketch3 --> Problem  synth_18
Sketch conj65_sketch1 --> Problem  synth_16
Sketch conj146_sketch4 --> Problem  synth_3
Sketch conj155_sketch1 --> Problem  synth_41
Sketch conj196_sketch2 --> Problem  synth_28
Sketch conj89_sketch1 --> Problem  synth_24
Sketch conj19_sketch0 --> Problem  synth_6
Sketch conj148_term_sketch0 --> Problem  synth_14
Sketch conj25_term_sketch1 --> Problem  synth_10
Sketch conj83_term_sketch0 --> Problem  synth_22
Sketch conj131_term_sketch0 --> Problem  synth_34
Sketch conj146_term_sketch4 --> Problem  synth_8
Sketch conj146_sketch2 --> Problem  synth_8
Sketch conj132_sketch1 --> Problem  synth_12
Sketch conj193_term_sketch1 --> Problem  synth_32
Sketch conj148_sketch2 --> Problem  synth_6
Sketch conj132_term_sketch2 --> Problem  synth_12
Sketch conj83_term_sketch3 --> Problem  synth_18
Sketch conj19_sketch1 --> Problem  synth_4
Sketch conj217_sketch1 --> Problem  synth_66
Sketch conj210_sketch3 --> Problem  synth_25
Sketch conj145_sketch2 --> Problem  synth_30
Sketch conj17_term_sketch1 --> Problem  synth_5
Sketch conj65_term_sketch1 --> Problem  synth_15
Sketch conj212_term_sketch1 --> Problem  synth_28
Sketch conj210_term_sketch4 --> Problem  synth_11
Sketch conj193_term_sketch0 --> Problem  synth_16
Sketch conj129_sketch2 --> Problem  synth_31
Sketch conj194_term_sketch4 --> Problem  synth_18
Sketch conj195_sketch3 --> Problem  synth_53


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 3567 seconds

Problem: synth_63

Problem: synth_68
 FullAdder.full_adder_carry lf6 lf6 false
 FullAdder.full_adder_carry true lf6 false
 FullAdder.full_adder_carry lf6 true false
 HalfAdder.half_adder_carry lf6 lf6
 HalfAdder.half_adder_carry lf6 true
 lf6

Problem: synth_67

Problem: synth_64
 FullAdder.full_adder_carry lf5 lf5 false
 FullAdder.full_adder_carry true lf5 false
 FullAdder.full_adder_carry lf5 true false
 HalfAdder.half_adder_carry lf5 lf5
 HalfAdder.half_adder_carry lf5 true
 lf5

Problem: synth_11

Problem: synth_54

Problem: synth_39

Problem: synth_46
 FullAdder.full_adder_carry lf6 lf6 false
 FullAdder.full_adder_carry true lf6 false
 FullAdder.full_adder_carry lf6 true false
 HalfAdder.half_adder_carry lf6 lf6
 HalfAdder.half_adder_carry lf6 true
 lf6

Problem: synth_66
 FullAdder.full_adder_carry lf6 lf6 false
 FullAdder.full_adder_carry true lf6 false
 FullAdder.full_adder_carry lf6 true false
 HalfAdder.half_adder_carry lf6 lf6
 HalfAdder.half_adder_carry lf6 true
 lf6

Problem: synth_57
 BV.consbv lf5 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv
 @cons bool lf5 (BV.appbv lf8 lf8)
 BV.appbv lf8 (BV.consbv lf5 lf8)
 BV.consbv lf5 (BV.appbv lf8 lf8)
 BV.consbv lf5 lf8

Problem: synth_59
 FullAdder.full_adder_carry lf5 lf5 false
 FullAdder.full_adder_carry true lf5 false
 FullAdder.full_adder_carry lf5 true false
 HalfAdder.half_adder_carry lf5 lf5
 HalfAdder.half_adder_carry lf5 true
 lf5

Problem: synth_31
 BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv
 BV.appbv lf4 BV.nilbv
 lf4

Problem: synth_8

Problem: synth_34
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)
 BV.appbv lf7 (BV.consbv lf6 BV.nilbv)
 BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)

Problem: synth_5
 BV.consbv lf5 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv
 @cons bool lf5 (BV.appbv lf8 lf8)
 BV.appbv lf8 (BV.consbv lf5 lf8)
 BV.consbv lf5 (BV.appbv lf8 lf8)
 BV.consbv lf5 lf8

Problem: synth_37
 BV.consbv lf6 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv
 @cons bool lf6 (BV.appbv lf8 lf8)
 BV.appbv lf8 (BV.consbv lf6 lf8)
 BV.consbv lf6 (BV.appbv lf8 lf8)
 BV.consbv lf6 lf8

Problem: synth_58

Problem: synth_53

Problem: synth_2
 BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv
 BV.appbv (BV.appbv lf7 BV.nilbv) lf3
 BV.appbv lf7 (BV.appbv lf3 BV.nilbv)
 BV.appbv (BV.appbv lf7 lf3) BV.nilbv
 BV.appbv lf7 lf3

Problem: synth_22

Problem: synth_18

Problem: synth_21

Problem: synth_56
 BV.consbv lf6 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv
 @cons bool lf6 (BV.appbv lf8 lf8)
 BV.appbv lf8 (BV.consbv lf6 lf8)
 BV.consbv lf6 (BV.appbv lf8 lf8)
 BV.consbv lf6 lf8

Problem: synth_41
 BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv
 BV.consbv lf6 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv

Problem: synth_49

Problem: synth_25

Problem: synth_13

Problem: synth_6
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)
 BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)
 BV.appbv lf7 (BV.consbv lf5 BV.nilbv)
 BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)

Problem: synth_4
 BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv
 BV.appbv lf3 BV.nilbv
 lf3

Problem: synth_38
 BV.consbv lf5 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv
 @cons bool lf5 (BV.appbv lf8 lf8)
 BV.appbv lf8 (BV.consbv lf5 lf8)
 BV.consbv lf5 (BV.appbv lf8 lf8)
 BV.consbv lf5 lf8

Problem: synth_65

Problem: synth_23

Problem: synth_19

Problem: synth_10

Problem: synth_24

Problem: synth_32
 BV.consbv lf6 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv
 @cons bool lf6 (BV.appbv lf8 lf8)
 BV.appbv lf8 (BV.consbv lf6 lf8)
 BV.consbv lf6 (BV.appbv lf8 lf8)
 BV.consbv lf6 lf8

Problem: synth_48
 BV.appbv lf4 BV.nilbv
 lf4

Problem: synth_51

Problem: synth_35
 BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv
 BV.consbv lf6 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv

Problem: synth_28

Problem: synth_17

Problem: synth_29

Problem: synth_45
 FullAdder.full_adder_carry lf6 lf6 false
 FullAdder.full_adder_carry true lf6 false
 FullAdder.full_adder_carry lf6 true false
 HalfAdder.half_adder_carry lf6 lf6
 HalfAdder.half_adder_carry lf6 true
 lf6

Problem: synth_26

Problem: synth_9

Problem: synth_30
 BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8)
 BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8)
 BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8))
 BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8))
 BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8))
 BV.appbv lf7 (BV.consbv lf6 lf8)

Problem: synth_1
 BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv
 BV.appbv (BV.appbv lf7 BV.nilbv) lf4
 BV.appbv lf7 (BV.appbv lf4 BV.nilbv)
 BV.appbv (BV.appbv lf7 lf4) BV.nilbv
 BV.appbv lf7 lf4

Problem: synth_69

Problem: synth_55

Problem: synth_15

Problem: synth_14

Problem: synth_12

Problem: synth_62
 BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv
 BV.consbv lf5 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv

Problem: synth_50

Problem: synth_20
 BV.appbv lf3 BV.nilbv
 lf3

Problem: synth_7
 BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv
 BV.consbv lf5 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv

Problem: synth_61
 BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv
 BV.consbv lf6 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv

Problem: synth_27

Problem: synth_42
 BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv
 BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv
 BV.consbv lf5 BV.nilbv
 BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv

Problem: synth_16

Problem: synth_40
 FullAdder.full_adder_carry lf5 lf5 false
 FullAdder.full_adder_carry true lf5 false
 FullAdder.full_adder_carry lf5 true false
 HalfAdder.half_adder_carry lf5 lf5
 HalfAdder.half_adder_carry lf5 true
 lf5

Problem: synth_33

Problem: synth_47

Problem: synth_3
 BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)
 BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)
 BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))
 BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))
 BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))
 BV.appbv lf7 (BV.consbv lf5 lf8)

Problem: synth_52

Problem: synth_44
 FullAdder.full_adder_carry lf5 lf5 false
 FullAdder.full_adder_carry true lf5 false
 FullAdder.full_adder_carry lf5 true false
 HalfAdder.half_adder_carry lf5 lf5
 HalfAdder.half_adder_carry lf5 true
 lf5

Problem: synth_60

Problem: synth_36

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 3569 seconds
Lemmas:
Lemma candidate_1: forall (w : BV) (v : BV) (cin : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_2: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry v w cin) lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma candidate_3: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_4: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))   (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma candidate_5: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_6: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_7: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_8: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_9: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_10: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_11: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_12: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_13: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_14: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 lf3) (appbv lf7 lf3).
Lemma candidate_15: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_16: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_17: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_18: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_19: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 lf3).
Lemma candidate_20: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_21: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_22: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_23: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_24: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_25: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)).
Lemma candidate_26: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)).
Lemma candidate_27: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))).
Lemma candidate_28: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_29: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_30: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (BV.appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_31: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv))   (appbv lf7 lf3).
Lemma candidate_32: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_33: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (lf3)) (appbv lf7 lf3).
Lemma candidate_34: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_35: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_36: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_37: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_38: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 lf3) (appbv lf7 lf3).
Lemma candidate_39: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_40: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_41: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_42: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_43: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 lf3).
Lemma candidate_44: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 BV.nilbv).
Lemma candidate_45: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_46: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (@cons bool lf5 (BV.appbv lf8 lf8)).
Lemma candidate_47: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.appbv lf8 (BV.consbv lf5 lf8)).
Lemma candidate_48: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 (BV.appbv lf8 lf8)).
Lemma candidate_49: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 lf8).
Lemma candidate_50: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)).
Lemma candidate_51: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)).
Lemma candidate_52: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))).
Lemma candidate_53: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_54: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_55: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (BV.appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_56: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_57: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_58: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_59: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_60: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (BV.appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_61: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_62: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv))   (appbv lf7 lf3).
Lemma candidate_63: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_64: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (lf3)) (appbv lf7 lf3).
Lemma candidate_65: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_66: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_67: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_68: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_69: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 lf3) (appbv lf7 lf3).
Lemma candidate_70: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_71: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_72: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_73: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_74: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 lf3).
Lemma candidate_75: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_76: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_77: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_78: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_79: forall (lf5 : bool), @eq BV (consbv lf5 nilbv) (BV.consbv lf5 BV.nilbv).
Lemma candidate_80: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_81: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_82: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_83: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_84: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_85: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (BV.appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_86: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_87: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv))   (appbv lf7 lf3).
Lemma candidate_88: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_89: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (lf3)) (appbv lf7 lf3).
Lemma candidate_90: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_91: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_92: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_93: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_94: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 lf3) (appbv lf7 lf3).
Lemma candidate_95: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_96: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_97: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_98: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_99: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 lf3).
Lemma candidate_100: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv))   (appbv lf7 lf3).
Lemma candidate_101: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_102: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (lf3)) (appbv lf7 lf3).
Lemma candidate_103: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_104: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_105: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_106: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_107: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 lf3) (appbv lf7 lf3).
Lemma candidate_108: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_109: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_110: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_111: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_112: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 lf3).
Lemma candidate_113: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_114: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (lf3))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_115: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 BV.nilbv).
Lemma candidate_116: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_117: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (@cons bool lf5 (BV.appbv lf8 lf8)).
Lemma candidate_118: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.appbv lf8 (BV.consbv lf5 lf8)).
Lemma candidate_119: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 (BV.appbv lf8 lf8)).
Lemma candidate_120: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 lf8).
Lemma candidate_121: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_122: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (lf3))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_123: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_124: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_125: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_126: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_127: forall (lf5 : bool), @eq BV (consbv lf5 nilbv) (BV.consbv lf5 BV.nilbv).
Lemma candidate_128: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_129: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_130: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (lf3))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_131: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_132: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (lf3))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_133: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_134: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_135: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_136: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_137: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_138: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_139: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_140: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_141: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_142: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_143: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_144: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (appbv lf7 (BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv)).
Lemma candidate_145: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_146: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (lf4)).
Lemma candidate_147: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8)).
Lemma candidate_148: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8)).
Lemma candidate_149: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8))).
Lemma candidate_150: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8))).
Lemma candidate_151: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8))).
Lemma candidate_152: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8)) (BV.appbv lf7 (BV.consbv lf6 lf8)).
Lemma candidate_153: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_154: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_155: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_156: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_157: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_158: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 BV.nilbv).
Lemma candidate_159: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_160: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (@cons bool lf6 (BV.appbv lf8 lf8)).
Lemma candidate_161: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.appbv lf8 (BV.consbv lf6 lf8)).
Lemma candidate_162: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 (BV.appbv lf8 lf8)).
Lemma candidate_163: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 lf8).
Lemma candidate_164: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (appbv lf7 (BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv)).
Lemma candidate_165: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_166: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (lf4)).
Lemma candidate_167: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_168: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_169: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_170: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_171: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_172: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_173: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_174: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_175: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_176: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_177: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_178: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_179: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_180: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_181: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_182: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_183: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_184: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_185: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_186: forall (lf7 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_187: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_188: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (appbv lf7 (BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv)).
Lemma candidate_189: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_190: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (lf4)).
Lemma candidate_191: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)).
Lemma candidate_192: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)).
Lemma candidate_193: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)).
Lemma candidate_194: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)).
Lemma candidate_195: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv)) (BV.appbv lf7 (BV.consbv lf6 BV.nilbv)).
Lemma candidate_196: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)).
Lemma candidate_197: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_198: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_199: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_200: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_201: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_202: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_203: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_204: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_205: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_206: forall (lf6 : bool), @eq BV (consbv lf6 nilbv) (BV.consbv lf6 BV.nilbv).
Lemma candidate_207: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_208: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (appbv lf7 (BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv)).
Lemma candidate_209: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_210: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (lf4)).
Lemma candidate_211: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_212: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_213: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_214: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_215: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_216: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_217: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_218: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_219: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_220: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 lf4).
Lemma candidate_221: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)).
Lemma candidate_222: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)).
Lemma candidate_223: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))).
Lemma candidate_224: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_225: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_226: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (BV.appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_227: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_228: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_229: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (@cons bool lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_230: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_231: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_232: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_233: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_234: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_235: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_236: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_237: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_238: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_239: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_240: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_241: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (@cons bool lf5 (BV.appbv lf8 lf8))).
Lemma candidate_242: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_243: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_244: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_245: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8)).
Lemma candidate_246: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8)).
Lemma candidate_247: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8))).
Lemma candidate_248: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8))).
Lemma candidate_249: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8))).
Lemma candidate_250: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8)) (BV.appbv lf7 (BV.consbv lf6 lf8)).
Lemma candidate_251: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 BV.nilbv).
Lemma candidate_252: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_253: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (@cons bool lf5 (BV.appbv lf8 lf8)).
Lemma candidate_254: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.appbv lf8 (BV.consbv lf5 lf8)).
Lemma candidate_255: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 (BV.appbv lf8 lf8)).
Lemma candidate_256: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 lf8).
Lemma candidate_257: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)).
Lemma candidate_258: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)).
Lemma candidate_259: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))).
Lemma candidate_260: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_261: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_262: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (BV.appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_263: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 BV.nilbv).
Lemma candidate_264: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_265: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (@cons bool lf6 (BV.appbv lf8 lf8)).
Lemma candidate_266: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.appbv lf8 (BV.consbv lf6 lf8)).
Lemma candidate_267: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 (BV.appbv lf8 lf8)).
Lemma candidate_268: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 lf8).
Lemma candidate_269: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_270: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_271: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (@cons bool lf5 (BV.appbv lf8 lf8))).
Lemma candidate_272: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_273: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_274: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_275: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf8)).
Lemma candidate_276: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry true lf5 false) lf8)).
Lemma candidate_277: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 true false) lf8)).
Lemma candidate_278: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 lf5) lf8)).
Lemma candidate_279: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 true) lf8)).
Lemma candidate_280: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (appbv lf7 (consbv (lf5) lf8)).
Lemma candidate_281: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)).
Lemma candidate_282: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)).
Lemma candidate_283: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))).
Lemma candidate_284: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_285: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_286: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (BV.appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_287: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 BV.nilbv).
Lemma candidate_288: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_289: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (@cons bool lf5 (BV.appbv lf8 lf8)).
Lemma candidate_290: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.appbv lf8 (BV.consbv lf5 lf8)).
Lemma candidate_291: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 (BV.appbv lf8 lf8)).
Lemma candidate_292: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 lf8).
Lemma candidate_293: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf5 lf8)).
Lemma candidate_294: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf5 lf8)).
Lemma candidate_295: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf5 lf8))).
Lemma candidate_296: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_297: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (BV.appbv lf7 (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_298: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8)) (BV.appbv lf7 (BV.consbv lf5 lf8)).
Lemma candidate_299: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_300: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_301: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_302: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_303: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (BV.appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_304: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_305: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_306: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_307: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_308: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_309: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_310: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_311: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_312: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_313: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_314: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_315: forall (lf7 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_316: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_317: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_318: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_319: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_320: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_321: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_322: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_323: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)).
Lemma candidate_324: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)).
Lemma candidate_325: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)).
Lemma candidate_326: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)).
Lemma candidate_327: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv)) (BV.appbv lf7 (BV.consbv lf6 BV.nilbv)).
Lemma candidate_328: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)).
Lemma candidate_329: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_330: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_331: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_332: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_333: forall (lf5 : bool), @eq BV (consbv lf5 nilbv) (BV.consbv lf5 BV.nilbv).
Lemma candidate_334: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_335: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_336: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_337: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_338: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_339: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (BV.appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_340: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_341: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_342: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_343: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_344: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_345: forall (lf6 : bool), @eq BV (consbv lf6 nilbv) (BV.consbv lf6 BV.nilbv).
Lemma candidate_346: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_347: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_348: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_349: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_350: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_351: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_352: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_353: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_354: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_355: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_356: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_357: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (BV.appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_358: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_359: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_360: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_361: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_362: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_363: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_364: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (appbv lf7 (consbv (lf5) nilbv)).
Lemma candidate_365: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_366: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_367: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_368: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_369: forall (lf5 : bool), @eq BV (consbv lf5 nilbv) (BV.consbv lf5 BV.nilbv).
Lemma candidate_370: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_371: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_372: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_373: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_374: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_375: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv)) (BV.appbv lf7 (BV.consbv lf5 BV.nilbv)).
Lemma candidate_376: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_377: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_378: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_379: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (@cons bool lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_380: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_381: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_382: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_383: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_384: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry true lf6 false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_385: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 true false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_386: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 lf6) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_387: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 true) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_388: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (lf6) lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_389: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_390: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_391: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_392: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_393: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_394: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 lf8)) (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_395: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv (BV.appbv lf8 lf7) (BV.consbv lf6 lf8)).
Lemma candidate_396: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv (BV.appbv lf7 lf8) (BV.consbv lf6 lf8)).
Lemma candidate_397: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf8 (BV.appbv lf7 (BV.consbv lf6 lf8))).
Lemma candidate_398: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf7 (BV.appbv lf8 (BV.consbv lf6 lf8))).
Lemma candidate_399: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8))   (BV.appbv lf7 (BV.consbv lf6 (BV.appbv lf8 lf8))).
Lemma candidate_400: forall (lf7 : BV) (lf8 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 lf8)) (BV.appbv lf7 (BV.consbv lf6 lf8)).
Lemma candidate_401: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 BV.nilbv).
Lemma candidate_402: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_403: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (@cons bool lf6 (BV.appbv lf8 lf8)).
Lemma candidate_404: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.appbv lf8 (BV.consbv lf6 lf8)).
Lemma candidate_405: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 (BV.appbv lf8 lf8)).
Lemma candidate_406: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 lf8).
Lemma candidate_407: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_408: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_409: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_410: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_411: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_412: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_413: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_414: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_415: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_416: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_417: forall (lf7 : BV) (lf6 : bool), @eq BV (BV.appbv lf7 (BV.consbv lf6 BV.nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_418: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_419: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_420: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_421: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_422: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_423: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_424: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (lf6) nilbv)) (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_425: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)).
Lemma candidate_426: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)).
Lemma candidate_427: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)).
Lemma candidate_428: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)).
Lemma candidate_429: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv)) (BV.appbv lf7 (BV.consbv lf6 BV.nilbv)).
Lemma candidate_430: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)).
Lemma candidate_431: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_432: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_433: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_434: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_435: forall (lf6 : bool), @eq BV (consbv lf6 nilbv) (BV.consbv lf6 BV.nilbv).
Lemma candidate_436: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_437: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_438: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (lf4)).
Lemma candidate_439: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 BV.nilbv).
Lemma candidate_440: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_441: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (@cons bool lf6 (BV.appbv lf8 lf8)).
Lemma candidate_442: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.appbv lf8 (BV.consbv lf6 lf8)).
Lemma candidate_443: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 (BV.appbv lf8 lf8)).
Lemma candidate_444: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 lf8).
Lemma candidate_445: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_446: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (lf4)).
Lemma candidate_447: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_448: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (lf4)).
Lemma candidate_449: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_450: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_451: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_452: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_453: forall (lf6 : bool), @eq BV (consbv lf6 nilbv) (BV.consbv lf6 BV.nilbv).
Lemma candidate_454: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_455: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_456: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (lf4)).
Lemma candidate_457: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_458: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_459: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin) (@cons bool lf6 (BV.appbv lf8 lf8)))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_460: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_461: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_462: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_463: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 BV.nilbv)).
Lemma candidate_464: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_465: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (@cons bool lf5 (BV.appbv lf8 lf8))).
Lemma candidate_466: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_467: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_468: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 lf8)).
Lemma candidate_469: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 BV.nilbv).
Lemma candidate_470: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_471: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (@cons bool lf5 (BV.appbv lf8 lf8)).
Lemma candidate_472: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.appbv lf8 (BV.consbv lf5 lf8)).
Lemma candidate_473: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 (BV.appbv lf8 lf8)).
Lemma candidate_474: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 lf8).
Lemma candidate_475: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 BV.nilbv).
Lemma candidate_476: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_477: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (@cons bool lf6 (BV.appbv lf8 lf8)).
Lemma candidate_478: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.appbv lf8 (BV.consbv lf6 lf8)).
Lemma candidate_479: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 (BV.appbv lf8 lf8)).
Lemma candidate_480: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 lf8).
Lemma candidate_481: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 BV.nilbv)).
Lemma candidate_482: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_483: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (@cons bool lf5 (BV.appbv lf8 lf8))).
Lemma candidate_484: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf8 (BV.consbv lf5 lf8))).
Lemma candidate_485: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 (BV.appbv lf8 lf8))).
Lemma candidate_486: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 lf8)).
Lemma candidate_487: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf8)).
Lemma candidate_488: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) lf8)).
Lemma candidate_489: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) lf8)).
Lemma candidate_490: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) lf8)).
Lemma candidate_491: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) lf8)).
Lemma candidate_492: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin) (consbv (lf5) lf8)).
Lemma candidate_493: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 BV.nilbv).
Lemma candidate_494: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_495: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (@cons bool lf5 (BV.appbv lf8 lf8)).
Lemma candidate_496: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.appbv lf8 (BV.consbv lf5 lf8)).
Lemma candidate_497: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 (BV.appbv lf8 lf8)).
Lemma candidate_498: forall (lf5 : bool) (lf8 : BV), @eq BV (consbv lf5 lf8) (BV.consbv lf5 lf8).
Lemma candidate_499: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_500: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_501: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_502: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_503: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_504: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_505: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_506: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_507: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_508: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_509: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 BV.nilbv)).
Lemma candidate_510: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_511: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_512: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_513: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_514: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_515: forall (lf5 : bool), @eq BV (consbv lf5 nilbv) (BV.consbv lf5 BV.nilbv).
Lemma candidate_516: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_517: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_518: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_519: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_520: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_521: forall (lf6 : bool), @eq BV (consbv lf6 nilbv) (BV.consbv lf6 BV.nilbv).
Lemma candidate_522: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_523: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_524: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_525: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_526: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_527: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin) (BV.consbv lf5 BV.nilbv)).
Lemma candidate_528: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_529: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_530: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_531: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_532: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_533: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_534: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv (lf5) nilbv)).
Lemma candidate_535: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_536: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_537: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_538: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_539: forall (lf5 : bool), @eq BV (consbv lf5 nilbv) (BV.consbv lf5 BV.nilbv).
Lemma candidate_540: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_541: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_542: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_543: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin) (@cons bool lf6 (BV.appbv lf8 lf8)))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_544: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf8 (BV.consbv lf6 lf8)))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_545: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 (BV.appbv lf8 lf8)))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_546: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_547: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_548: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf6 false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_549: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 true false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_550: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_551: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 true) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_552: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv (lf6) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_553: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 BV.nilbv).
Lemma candidate_554: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_555: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (@cons bool lf6 (BV.appbv lf8 lf8)).
Lemma candidate_556: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.appbv lf8 (BV.consbv lf6 lf8)).
Lemma candidate_557: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 (BV.appbv lf8 lf8)).
Lemma candidate_558: forall (lf8 : BV) (lf6 : bool), @eq BV (consbv lf6 lf8) (BV.consbv lf6 lf8).
Lemma candidate_559: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_560: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_561: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_562: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_563: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.consbv lf6 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_564: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_565: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_566: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_567: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_568: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_569: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_570: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv (lf6) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_571: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_572: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_573: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_574: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_575: forall (lf6 : bool), @eq BV (consbv lf6 nilbv) (BV.consbv lf6 BV.nilbv).
Lemma candidate_576: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 4227 seconds
Duplicates removed: 392
Filtered by Quickchick: 45
Filtered by script: 33
Remaining: 106

Lemmas: 
Lemma candidate_145: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_32: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_18: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 lf3) BV.nilbv).
Lemma candidate_17: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)).
Lemma candidate_16: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3) (BV.appbv (BV.appbv lf7 BV.nilbv) lf3).
Lemma candidate_13: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) (appbv lf7 lf3).
Lemma candidate_12: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv lf7 (BV.appbv lf3 BV.nilbv)) (appbv lf7 lf3).
Lemma candidate_11: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv lf7 BV.nilbv) lf3) (appbv lf7 lf3).
Lemma candidate_8: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 lf4) BV.nilbv).
Lemma candidate_7: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv lf7 (BV.appbv lf4 BV.nilbv)).
Lemma candidate_6: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4) (BV.appbv (BV.appbv lf7 BV.nilbv) lf4).
Lemma candidate_144: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (appbv lf7 (BV.appbv (BV.appbv lf4 BV.nilbv) BV.nilbv)).
Lemma candidate_31: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 (BV.appbv (BV.appbv lf3 BV.nilbv) BV.nilbv))   (appbv lf7 lf3).
Lemma candidate_15: forall (lf3 : BV) (lf7 : BV), @eq BV (appbv lf7 lf3)   (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv).
Lemma candidate_10: forall (lf3 : BV) (lf7 : BV), @eq BV (BV.appbv (BV.appbv (BV.appbv lf7 lf3) BV.nilbv) BV.nilbv)   (appbv lf7 lf3).
Lemma candidate_5: forall (lf7 : BV) (lf4 : BV), @eq BV (appbv lf7 lf4)   (BV.appbv (BV.appbv (BV.appbv lf7 lf4) BV.nilbv) BV.nilbv).
Lemma candidate_207: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv).
Lemma candidate_80: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv).
Lemma candidate_203: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv).
Lemma candidate_202: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv).
Lemma candidate_76: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv).
Lemma candidate_75: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv).
Lemma candidate_205: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv).
Lemma candidate_204: forall (lf6 : bool), @eq BV (consbv lf6 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv).
Lemma candidate_78: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv).
Lemma candidate_77: forall (lf5 : bool), @eq BV (consbv lf5 nilbv)   (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv).
Lemma candidate_386: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 lf6) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_278: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 lf5) lf8)).
Lemma candidate_387: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 true) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_279: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 true) lf8)).
Lemma candidate_422: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_362: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_423: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_363: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_383: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_275: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf8)).
Lemma candidate_385: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 true false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_384: forall (lf7 : BV) (lf6 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry true lf6 false) lf8))   (appbv lf7 (consbv lf6 lf8)).
Lemma candidate_277: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 true false) lf8)).
Lemma candidate_276: forall (lf7 : BV) (lf5 : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv lf5 lf8))   (appbv lf7 (consbv (FullAdder.full_adder_carry true lf5 false) lf8)).
Lemma candidate_437: forall (lf4 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) lf4)   (appbv (BV_full_adder_sum w v cin) (BV.appbv lf4 BV.nilbv)).
Lemma candidate_113: forall (lf3 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (BV.appbv lf3 BV.nilbv))   (appbv (BV_full_adder_sum w v cin) lf3).
Lemma candidate_419: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_359: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_322: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_310: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_421: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_420: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_361: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_360: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_196: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv)).
Lemma candidate_61: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_318: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_317: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_187: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_320: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_319: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_306: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_305: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_192: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv)).
Lemma candidate_191: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv)).
Lemma candidate_57: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_56: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_308: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_307: forall (lf7 : BV) (lf6 : bool), @eq BV   (appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_194: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv)).
Lemma candidate_193: forall (lf7 : BV) (lf6 : bool), @eq BV (appbv lf7 (consbv lf6 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv)).
Lemma candidate_183: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_182: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_59: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_58: forall (lf7 : BV) (lf5 : bool), @eq BV (appbv lf7 (consbv lf5 nilbv))   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_4: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) lf8))   (appbv lf7 (consbv (BV_full_adder_carry w v cin) lf8)).
Lemma candidate_185: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_184: forall (lf7 : BV) (lf6 : bool), @eq BV   (BV.appbv lf7 (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv lf7 (consbv lf6 nilbv)).
Lemma candidate_3: forall (lf7 : BV) (w : BV) (v : BV) (cin : bool), @eq BV (appbv lf7 (consbv (BV_full_adder_carry v w cin) nilbv))   (appbv lf7 (consbv (BV_full_adder_carry w v cin) nilbv)).
Lemma candidate_490: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) lf8)).
Lemma candidate_491: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) lf8)).
Lemma candidate_550: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_551: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 true) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_532: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 lf5) nilbv)).
Lemma candidate_533: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf5 true) nilbv)).
Lemma candidate_568: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 lf6) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_487: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) lf8)).
Lemma candidate_569: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (HalfAdder.half_adder_carry lf6 true) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_489: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) lf8)).
Lemma candidate_488: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool) (lf8 : BV), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) lf8)).
Lemma candidate_547: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_549: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 true false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_548: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf6 false) lf8))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 lf8)).
Lemma candidate_529: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 lf5 false) nilbv)).
Lemma candidate_510: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf5 false) BV.nilbv)).
Lemma candidate_531: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf5 true false) nilbv)).
Lemma candidate_530: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf5 false) nilbv)).
Lemma candidate_565: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_504: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (HalfAdder.half_adder_sum lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_567: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry lf6 true false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_566: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (FullAdder.full_adder_carry true lf6 false) nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_506: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 true true) BV.nilbv)).
Lemma candidate_505: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf5 true) BV.nilbv)).
Lemma candidate_508: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf5 false false) BV.nilbv)).
Lemma candidate_507: forall (w : BV) (v : BV) (cin : bool) (lf5 : bool), @eq BV (appbv (BV_full_adder_sum w v cin) (consbv lf5 nilbv))   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf5 false) BV.nilbv)).
Lemma candidate_500: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 true true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_499: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum true lf6 true) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_502: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum lf6 false false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_501: forall (w : BV) (v : BV) (cin : bool) (lf6 : bool), @eq BV   (appbv (BV_full_adder_sum w v cin)      (BV.consbv (FullAdder.full_adder_sum false lf6 false) BV.nilbv))   (appbv (BV_full_adder_sum w v cin) (consbv lf6 nilbv)).
Lemma candidate_2: forall (w : BV) (v : BV) (cin : bool) (lf8 : BV), @eq BV   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry v w cin) lf8))   (appbv (BV_full_adder_sum w v cin)      (consbv (BV_full_adder_carry w v cin) lf8)).
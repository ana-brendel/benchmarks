LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_BV_full_adder_carry_eq3_229

Number of Lemmas: 351
Number of Lemmas (after duplicates removed): 113
Number of Lemmas (after QuickChick used to filter): 71
* Number of Candidate Lemmas: 46

Time until ranking: 1511
Time to complete: 2682

Stuck state true independent of hypotheses: true

Category 1:
Count = 29

Lemma candidate_69: forall (lf2 : bool), @eq bool (HalfAdder.half_adder_carry lf2 lf2) lf2.
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 lf1).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_43: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_67: forall (lf2 : bool), @eq bool   (HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 lf2)) lf2.
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 lf1)).
Lemma candidate_68: forall (lf2 : bool), @eq bool   (HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 true)) lf2.
Lemma candidate_44: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 true)).
Lemma candidate_66: forall (lf2 : bool), @eq bool   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry lf2 true) true) lf2.
Lemma candidate_2: forall (lf1 : bool), @eq bool lf1   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry lf1 true) true).
Lemma candidate_217: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_216: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_219: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_218: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_78: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 (HalfAdder.half_adder_carry cin true))   (BV_full_adder_carry lf4 lf5 cin).
Lemma candidate_8: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf4 lf5 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_41: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_42: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_40: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
Lemma candidate_22: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_24: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_123: forall (lf4 : list bool) (cin : bool), @eq bool   (BV_full_adder_carry lf4 (@nil bool) (HalfAdder.half_adder_carry cin cin))   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_125: forall (lf4 : list bool) (cin : bool), @eq bool   (BV_full_adder_carry lf4 (@nil bool) (HalfAdder.half_adder_carry cin true))   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_56: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_175: forall (a : bool) (l : list bool) (cin : bool), @eq bool   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry cin a))   (BV_full_adder_carry (@cons bool a l) (@nil bool) cin).
Lemma candidate_109: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l (HalfAdder.half_adder_carry lf3 lf3)).
Lemma candidate_111: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l (HalfAdder.half_adder_carry lf3 true)).
Lemma candidate_261: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l (HalfAdder.half_adder_carry cin a)).

Category 2:
Count = 17

Lemma candidate_72: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry l lf5 (HalfAdder.half_adder_carry lf3 true)).
Lemma candidate_110: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry lf3 lf3)).
Lemma candidate_112: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry lf3 true)).
Lemma candidate_210: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry l lf5 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_54: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry a (BV_full_adder_carry l (@nil bool) cin)).
Lemma candidate_173: forall (a : bool) (l : list bool) (cin : bool), @eq bool   (HalfAdder.half_adder_carry a (BV_full_adder_carry l (@nil bool) cin))   (BV_full_adder_carry (@cons bool a l) (@nil bool) cin).
Lemma candidate_262: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_260: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a (BV_full_adder_carry l (@nil bool) cin)).
Lemma candidate_21: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_23: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_122: forall (lf4 : list bool) (cin : bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 (HalfAdder.half_adder_carry cin cin))   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_124: forall (lf4 : list bool) (cin : bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 (HalfAdder.half_adder_carry cin true))   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_55: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_53: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l cin)).
Lemma candidate_174: forall (a : bool) (l : list bool) (cin : bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l (HalfAdder.half_adder_carry cin a))   (BV_full_adder_carry (@cons bool a l) (@nil bool) cin).
Lemma candidate_172: forall (a : bool) (l : list bool) (cin : bool), @eq bool   (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l cin))   (BV_full_adder_carry (@cons bool a l) (@nil bool) cin).
Lemma candidate_259: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l cin)).

Category 3 (provable):
Count = 0


Category 3 (not provable):
Count = 0

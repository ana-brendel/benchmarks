File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_full_adder_sum_sym1_212
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_full_adder_sum_sym1_212
- Namespace: Circuits
- Proof name: BV_full_adder_sum_sym
- Theorem: Theorem BV_full_adder_sum_sym: forall (v0 w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder_sum v0 w0 cin0) (BV_full_adder_sum w0 v0 cin0).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))

* Hypothesis:
H0 : forall cin0 : bool,
@eq BV (BV_full_adder_sum (@cons bool a l) l0 cin0)
  (BV_full_adder_sum l0 (@cons bool a l) cin0)
cin : bool
l0 : list bool
a0 : bool
H : forall (w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder_sum l w0 cin0) (BV_full_adder_sum w0 l cin0)
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
BV
bool

* Polymorphic Types:
list bool

* Variables:
cin : bool
l0 : list bool
a0 : bool
l : list bool
a : bool

* Terms:
@eq BV (BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1)
  (BV_full_adder_sum _UNBOUND_REL_2 l _UNBOUND_REL_1) : Prop
BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1 : BV
cin : bool
BV_full_adder_sum l0 l (full_adder_carry a a0 cin) : BV
consbv (full_adder_sum a0 a cin)
  (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)) : BV
BV_full_adder_sum _UNBOUND_REL_2 l _UNBOUND_REL_1 : BV
@cons bool a l : list bool
l : list bool
full_adder_sum a a0 cin : bool
full_adder_carry a a0 cin : bool
BV_full_adder_sum l0 (@cons bool a l) _UNBOUND_REL_1 : BV
bool : Set
l0 : list bool
full_adder_sum a0 a cin : bool
a0 : bool
BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1 : BV
forall (w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder_sum l w0 cin0) (BV_full_adder_sum w0 l cin0) : Prop
forall cin0 : bool,
@eq BV (BV_full_adder_sum (@cons bool a l) l0 cin0)
  (BV_full_adder_sum l0 (@cons bool a l) cin0) : Prop
BV : Set
@eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))) : Prop
list bool : Set
forall cin0 : bool,
@eq BV (BV_full_adder_sum l _UNBOUND_REL_2 cin0)
  (BV_full_adder_sum _UNBOUND_REL_2 l cin0) : Prop
a : bool
@eq BV (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
  (BV_full_adder_sum l0 (@cons bool a l) _UNBOUND_REL_1) : Prop
consbv (full_adder_sum a a0 cin)
  (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)) : BV

* Functions:
full_adder_carry  : forall (_ : bool) (_ : bool) (_ : bool), bool
list  : forall _ : Type, Type
full_adder_sum  : forall (_ : bool) (_ : bool) (_ : bool), bool
consbv  : forall (_ : bool) (_ : BV), BV
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : BV = BV_full_adder_sum l0 l (full_adder_carry a a0 cin)
lf1 : BV = consbv (full_adder_sum a0 a cin)
  (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))
lf4 : bool = full_adder_carry a a0 cin
lf5 : bool = full_adder_sum a0 a cin
lf2 : BV = consbv (full_adder_sum a a0 cin)
  (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))
lf6 : bool = full_adder_sum a a0 cin

Generalizations:
Lemma conj1: forall (lf6 : bool) (lf5 : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv lf5 lf3).
Lemma conj2: forall (lf5 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv (full_adder_sum a a0 cin) lf3) (consbv lf5 lf3).
Lemma conj5: forall (lf6 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv (full_adder_sum a0 a cin) lf3).
Lemma conj6: forall (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv (full_adder_sum a a0 cin) lf3)
  (consbv (full_adder_sum a0 a cin) lf3).
Lemma conj33: forall (lf6 : bool) (lf5 : bool) (l0 : list bool) (lf4 : bool) (l : list bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj34: forall (lf5 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj37: forall (lf6 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma conj38: forall (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma conj41: forall (lf6 : bool) (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj42: forall (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj45: forall (lf6 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj46: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).


<---VALIDITY CHECKS--->
Time elapsed: 101 seconds
Valid:
Lemma conj46: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj38: forall (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma conj6: forall (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv (full_adder_sum a a0 cin) lf3)
  (consbv (full_adder_sum a0 a cin) lf3).

Invalid:
Lemma conj45: forall (lf6 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj42: forall (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj41: forall (lf6 : bool) (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj37: forall (lf6 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma conj34: forall (lf5 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj33: forall (lf6 : bool) (lf5 : bool) (l0 : list bool) (lf4 : bool) (l : list bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj5: forall (lf6 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv (full_adder_sum a0 a cin) lf3).
Lemma conj2: forall (lf5 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv (full_adder_sum a a0 cin) lf3) (consbv lf5 lf3).
Lemma conj1: forall (lf6 : bool) (lf5 : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv lf5 lf3).

<---ADD IMPLICATIONS--->
Time elapsed: 134 seconds
Generalizations:
Lemma conj45: forall (lf6 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj42: forall (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj41: forall (lf6 : bool) (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj37: forall (lf6 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma conj34: forall (lf5 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj33: forall (lf6 : bool) (lf5 : bool) (l0 : list bool) (lf4 : bool) (l : list bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj5: forall (lf6 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv (full_adder_sum a0 a cin) lf3).
Lemma conj2: forall (lf5 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv (full_adder_sum a a0 cin) lf3) (consbv lf5 lf3).
Lemma conj1: forall (lf6 : bool) (lf5 : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv lf5 lf3).


<---VALIDITY CHECKS--->
Time elapsed: 157 seconds
Valid:

Invalid:
Lemma conj1: forall (lf6 : bool) (lf5 : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv lf5 lf3).
Lemma conj2: forall (lf5 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv (full_adder_sum a a0 cin) lf3) (consbv lf5 lf3).
Lemma conj5: forall (lf6 : bool) (cin : bool) (a0 : bool) (a : bool) (lf3 : BV), @eq BV (consbv lf6 lf3) (consbv (full_adder_sum a0 a cin) lf3).
Lemma conj33: forall (lf6 : bool) (lf5 : bool) (l0 : list bool) (lf4 : bool) (l : list bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj34: forall (lf5 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma conj37: forall (lf6 : bool) (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma conj41: forall (lf6 : bool) (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj42: forall (lf5 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma conj45: forall (lf6 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).


<---CREATE SKETCHES--->
Time elapsed: 157 seconds
Sketches:
Sketch conj1_sketch0 : @eq BV (##hole##) (consbv lf5 lf3)
Sketch conj1_sketch1 : @eq BV (consbv lf6 lf3) (##hole##)
Sketch conj1_term_sketch0 : @eq BV (consbv lf6 lf3) (##hole##)
Sketch conj1_term_sketch1 : @eq BV (consbv lf5 lf3) (##hole##)
Sketch conj2_sketch0 : @eq BV (consbv (full_adder_sum a a0 cin) lf3) (##hole##)
Sketch conj2_sketch1 : @eq BV (##hole##) (consbv lf5 lf3)
Sketch conj2_sketch2 : @eq BV (consbv (##hole##) lf3) (consbv lf5 lf3)
Sketch conj2_term_sketch0 : @eq BV (consbv lf5 lf3) (##hole##)
Sketch conj2_term_sketch1 : @eq BV (consbv (full_adder_sum a a0 cin) lf3) (##hole##)
Sketch conj2_term_sketch2 : @eq bool (full_adder_sum a a0 cin) (##hole##)
Sketch conj5_sketch0 : @eq BV (##hole##) (consbv (full_adder_sum a0 a cin) lf3)
Sketch conj5_sketch1 : @eq BV (consbv lf6 lf3) (consbv (##hole##) lf3)
Sketch conj5_sketch2 : @eq BV (consbv lf6 lf3) (##hole##)
Sketch conj5_term_sketch0 : @eq BV (consbv lf6 lf3) (##hole##)
Sketch conj5_term_sketch1 : @eq bool (full_adder_sum a0 a cin) (##hole##)
Sketch conj5_term_sketch2 : @eq BV (consbv (full_adder_sum a0 a cin) lf3) (##hole##)
Sketch conj33_sketch0 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4)) (##hole##)
Sketch conj33_sketch1 : @eq BV (consbv lf6 (##hole##)) (consbv lf5 (##hole##))
Sketch conj33_sketch2 : @eq BV (##hole##) (consbv lf5 (BV_full_adder_sum l0 l lf4))
Sketch conj33_term_sketch0 : @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4)) (##hole##)
Sketch conj33_term_sketch1 : @eq BV (BV_full_adder_sum l0 l lf4) (##hole##)
Sketch conj33_term_sketch2 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4)) (##hole##)
Sketch conj34_sketch0 : @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (##hole##)
Sketch conj34_sketch1 : @eq BV (consbv (full_adder_sum a a0 cin) (##hole##)) (consbv lf5 (##hole##))
Sketch conj34_sketch2 : @eq BV (##hole##) (consbv lf5 (BV_full_adder_sum l0 l lf4))
Sketch conj34_sketch3 : @eq BV (consbv (##hole##) (BV_full_adder_sum l0 l lf4))
  (consbv lf5 (BV_full_adder_sum l0 l lf4))
Sketch conj34_term_sketch0 : @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4)) (##hole##)
Sketch conj34_term_sketch1 : @eq BV (BV_full_adder_sum l0 l lf4) (##hole##)
Sketch conj34_term_sketch2 : @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))
  (##hole##)
Sketch conj34_term_sketch3 : @eq bool (full_adder_sum a a0 cin) (##hole##)
Sketch conj37_sketch0 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4)) (##hole##)
Sketch conj37_sketch1 : @eq BV (consbv lf6 (##hole##)) (consbv (full_adder_sum a0 a cin) (##hole##))
Sketch conj37_sketch2 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))
  (consbv (##hole##) (BV_full_adder_sum l0 l lf4))
Sketch conj37_sketch3 : @eq BV (##hole##)
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))
Sketch conj37_term_sketch0 : @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))
  (##hole##)
Sketch conj37_term_sketch1 : @eq BV (BV_full_adder_sum l0 l lf4) (##hole##)
Sketch conj37_term_sketch2 : @eq bool (full_adder_sum a0 a cin) (##hole##)
Sketch conj37_term_sketch3 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4)) (##hole##)
Sketch conj41_sketch0 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (##hole##)))
  (consbv lf5 (BV_full_adder_sum l0 l (##hole##)))
Sketch conj41_sketch1 : @eq BV (##hole##)
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
Sketch conj41_sketch2 : @eq BV (consbv lf6 (##hole##)) (consbv lf5 (##hole##))
Sketch conj41_sketch3 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (##hole##)
Sketch conj41_term_sketch0 : @eq bool (full_adder_carry a a0 cin) (##hole##)
Sketch conj41_term_sketch1 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (##hole##)
Sketch conj41_term_sketch2 : @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)) (##hole##)
Sketch conj41_term_sketch3 : @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (##hole##)
Sketch conj42_sketch0 : @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (##hole##)))
  (consbv lf5 (BV_full_adder_sum l0 l (##hole##)))
Sketch conj42_sketch1 : @eq BV (consbv (full_adder_sum a a0 cin) (##hole##)) (consbv lf5 (##hole##))
Sketch conj42_sketch2 : @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))) (##hole##)
Sketch conj42_sketch3 : @eq BV
  (consbv (##hole##) (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
Sketch conj42_sketch4 : @eq BV (##hole##)
  (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
Sketch conj42_term_sketch0 : @eq bool (full_adder_carry a a0 cin) (##hole##)
Sketch conj42_term_sketch1 : @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)) (##hole##)
Sketch conj42_term_sketch2 : @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (##hole##)
Sketch conj42_term_sketch3 : @eq bool (full_adder_sum a a0 cin) (##hole##)
Sketch conj42_term_sketch4 : @eq BV
  (consbv (full_adder_sum a a0 cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))) (##hole##)
Sketch conj45_sketch0 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (##hole##)))
  (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (##hole##)))
Sketch conj45_sketch1 : @eq BV (##hole##)
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
Sketch conj45_sketch2 : @eq BV (consbv lf6 (##hole##)) (consbv (full_adder_sum a0 a cin) (##hole##))
Sketch conj45_sketch3 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (consbv (##hole##) (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
Sketch conj45_sketch4 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (##hole##)
Sketch conj45_term_sketch0 : @eq bool (full_adder_carry a a0 cin) (##hole##)
Sketch conj45_term_sketch1 : @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))
  (##hole##)
Sketch conj45_term_sketch2 : @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)) (##hole##)
Sketch conj45_term_sketch3 : @eq bool (full_adder_sum a0 a cin) (##hole##)
Sketch conj45_term_sketch4 : @eq BV
  (consbv (full_adder_sum a0 a cin)
     (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 889 seconds
Problems per Sketch:
Sketch conj45_term_sketch2 --> Problem  synth_20
Sketch conj2_sketch2 --> Problem  synth_4
Sketch conj33_sketch0 --> Problem  synth_7
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj42_sketch0 --> Problem  synth_21
Sketch conj5_term_sketch1 --> Problem  synth_5
Sketch conj2_sketch1 --> Problem  synth_1
Sketch conj41_sketch3 --> Problem  synth_18
Sketch conj42_term_sketch0 --> Problem  synth_19
Sketch conj42_term_sketch3 --> Problem  synth_5
Sketch conj37_sketch3 --> Problem  synth_11
Sketch conj33_term_sketch2 --> Problem  synth_7
Sketch conj2_term_sketch1 --> Problem  synth_3
Sketch conj42_sketch1 --> Problem  synth_12
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj2_sketch0 --> Problem  synth_3
Sketch conj1_term_sketch1 --> Problem  synth_1
Sketch conj45_sketch1 --> Problem  synth_22
Sketch conj37_term_sketch2 --> Problem  synth_5
Sketch conj1_sketch1 --> Problem  synth_2
Sketch conj42_sketch4 --> Problem  synth_17
Sketch conj45_term_sketch0 --> Problem  synth_19
Sketch conj34_term_sketch3 --> Problem  synth_5
Sketch conj45_sketch4 --> Problem  synth_18
Sketch conj41_term_sketch3 --> Problem  synth_17
Sketch conj33_term_sketch0 --> Problem  synth_9
Sketch conj1_term_sketch0 --> Problem  synth_2
Sketch conj5_term_sketch2 --> Problem  synth_3
Sketch conj41_term_sketch0 --> Problem  synth_19
Sketch conj34_sketch2 --> Problem  synth_9
Sketch conj42_term_sketch1 --> Problem  synth_20
Sketch conj45_sketch3 --> Problem  synth_25
Sketch conj34_term_sketch1 --> Problem  synth_10
Sketch conj34_term_sketch0 --> Problem  synth_9
Sketch conj37_term_sketch3 --> Problem  synth_7
Sketch conj33_term_sketch1 --> Problem  synth_10
Sketch conj45_term_sketch3 --> Problem  synth_5
Sketch conj34_sketch3 --> Problem  synth_13
Sketch conj42_term_sketch2 --> Problem  synth_17
Sketch conj42_sketch3 --> Problem  synth_23
Sketch conj45_sketch2 --> Problem  synth_14
Sketch conj33_sketch2 --> Problem  synth_9
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj34_sketch0 --> Problem  synth_11
Sketch conj34_term_sketch2 --> Problem  synth_11
Sketch conj5_sketch1 --> Problem  synth_6
Sketch conj37_sketch0 --> Problem  synth_7
Sketch conj41_term_sketch2 --> Problem  synth_20
Sketch conj37_term_sketch0 --> Problem  synth_11
Sketch conj2_term_sketch0 --> Problem  synth_1
Sketch conj45_sketch0 --> Problem  synth_24
Sketch conj42_term_sketch4 --> Problem  synth_22
Sketch conj41_sketch2 --> Problem  synth_8
Sketch conj42_sketch2 --> Problem  synth_22
Sketch conj2_term_sketch2 --> Problem  synth_5
Sketch conj37_sketch2 --> Problem  synth_15
Sketch conj5_sketch2 --> Problem  synth_2
Sketch conj41_sketch1 --> Problem  synth_17
Sketch conj33_sketch1 --> Problem  synth_8
Sketch conj34_sketch1 --> Problem  synth_12
Sketch conj45_term_sketch4 --> Problem  synth_22
Sketch conj37_term_sketch1 --> Problem  synth_10
Sketch conj41_sketch0 --> Problem  synth_16
Sketch conj45_term_sketch1 --> Problem  synth_18
Sketch conj41_term_sketch1 --> Problem  synth_18
Sketch conj37_sketch1 --> Problem  synth_14


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 967 seconds

Problem: synth_22
 BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))
 BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))

Problem: synth_20
 BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)
 BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)
 BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)
 BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)
 BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)
 BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)

Problem: synth_18
 BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))
 BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))

Problem: synth_17
 BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))
 BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))

Problem: synth_21
 FullAdder.full_adder_carry cin a0 a
 FullAdder.full_adder_carry a0 cin a
 FullAdder.full_adder_carry cin a a0
 FullAdder.full_adder_carry a cin a0
 FullAdder.full_adder_carry a0 a cin
 FullAdder.full_adder_carry a a0 cin

Problem: synth_9
 BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4))
 BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4))
 BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5))
 BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5))
 BV.consbv lf5 (BV_full_adder_sum l0 l lf4)
 BV.consbv lf5 (BV_full_adder_sum l l0 lf4)

Problem: synth_25
 FullAdder.full_adder_carry lf6 lf6 false
 FullAdder.full_adder_carry true lf6 false
 FullAdder.full_adder_sum false lf6 false
 FullAdder.full_adder_carry lf6 true false
 FullAdder.full_adder_sum lf6 false false
 lf6

Problem: synth_13
 FullAdder.full_adder_carry lf5 lf5 false
 FullAdder.full_adder_carry true lf5 false
 FullAdder.full_adder_sum false lf5 false
 FullAdder.full_adder_carry lf5 true false
 FullAdder.full_adder_sum lf5 false false
 lf5

Problem: synth_6

Problem: synth_11
 BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))
 BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))
 BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))
 BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))

Problem: synth_7
 BV.consbv (FullAdder.full_adder_sum lf6 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf6 lf4 lf4))
 BV.consbv (FullAdder.full_adder_sum lf4 lf6 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf6 lf4))
 BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf6))
 BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf6))
 BV.consbv lf6 (BV_full_adder_sum l0 l lf4)
 BV.consbv lf6 (BV_full_adder_sum l l0 lf4)

Problem: synth_4

Problem: synth_1

Problem: synth_23
 FullAdder.full_adder_carry lf5 lf5 false
 FullAdder.full_adder_carry true lf5 false
 FullAdder.full_adder_sum false lf5 false
 FullAdder.full_adder_carry lf5 true false
 FullAdder.full_adder_sum lf5 false false
 lf5

Problem: synth_16

Problem: synth_19
 FullAdder.full_adder_carry cin a0 a
 FullAdder.full_adder_carry a0 cin a
 FullAdder.full_adder_carry cin a a0
 FullAdder.full_adder_carry a cin a0
 FullAdder.full_adder_carry a0 a cin
 FullAdder.full_adder_carry a a0 cin

Problem: synth_15
 FullAdder.full_adder_carry lf6 lf6 false
 FullAdder.full_adder_carry true lf6 false
 FullAdder.full_adder_sum false lf6 false
 FullAdder.full_adder_carry lf6 true false
 FullAdder.full_adder_sum lf6 false false
 lf6

Problem: synth_14

Problem: synth_10
 BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 true false)
 BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 true false)
 BV_full_adder_sum l0 l (FullAdder.full_adder_sum lf4 false false)
 BV_full_adder_sum l l0 (FullAdder.full_adder_sum lf4 false false)
 BV_full_adder_sum l0 l lf4
 BV_full_adder_sum l l0 lf4

Problem: synth_8

Problem: synth_24
 FullAdder.full_adder_carry cin a0 a
 FullAdder.full_adder_carry a0 cin a
 FullAdder.full_adder_carry cin a a0
 FullAdder.full_adder_carry a cin a0
 FullAdder.full_adder_carry a0 a cin
 FullAdder.full_adder_carry a a0 cin

Problem: synth_3

Problem: synth_12

Problem: synth_5
 FullAdder.full_adder_sum cin a0 a
 FullAdder.full_adder_sum a0 cin a
 FullAdder.full_adder_sum cin a a0
 FullAdder.full_adder_sum a cin a0
 FullAdder.full_adder_sum a0 a cin
 FullAdder.full_adder_sum a a0 cin

Problem: synth_2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 968 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_2: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_3: forall (lf3 : BV) (a : bool) (a0 : bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) lf3)   (consbv (full_adder_sum a0 a cin) lf3).
Lemma candidate_4: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_5: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_6: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_7: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_8: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 a cin).
Lemma candidate_9: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a a0 cin).
Lemma candidate_10: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_11: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_12: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_13: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_14: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a0 a cin).
Lemma candidate_15: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a a0 cin).
Lemma candidate_16: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf6 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf6 lf4 lf4))).
Lemma candidate_17: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf6 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf6 lf4))).
Lemma candidate_18: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_19: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_20: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_21: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l l0 lf4)).
Lemma candidate_22: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_23: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_24: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_25: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_26: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l0 l lf4))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_27: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l l0 lf4))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_28: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4))).
Lemma candidate_29: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4))).
Lemma candidate_30: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5))).
Lemma candidate_31: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5))).
Lemma candidate_32: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_33: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l l0 lf4)).
Lemma candidate_34: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_35: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_36: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_37: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_38: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4) (BV_full_adder_sum l0 l lf4).
Lemma candidate_39: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4) (BV_full_adder_sum l l0 lf4).
Lemma candidate_40: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf6 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf6 lf4 lf4))).
Lemma candidate_41: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf6 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf6 lf4))).
Lemma candidate_42: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_43: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_44: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_45: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l l0 lf4)).
Lemma candidate_46: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_47: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_48: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_49: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_50: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_51: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_52: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_53: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_54: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_55: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_56: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l0 l lf4))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_57: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l l0 lf4))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_58: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 lf5 false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_59: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry true lf5 false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_60: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum false lf5 false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_61: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 true false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_62: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum lf5 false false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_63: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv (lf5) (BV_full_adder_sum l0 l lf4))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_64: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4))).
Lemma candidate_65: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4))).
Lemma candidate_66: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5))).
Lemma candidate_67: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5))).
Lemma candidate_68: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_69: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l l0 lf4)).
Lemma candidate_70: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_71: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_72: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_73: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_74: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4) (BV_full_adder_sum l0 l lf4).
Lemma candidate_75: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4) (BV_full_adder_sum l l0 lf4).
Lemma candidate_76: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_77: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_78: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_79: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_80: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_81: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_82: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_83: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_84: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_85: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_86: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 a cin).
Lemma candidate_87: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a a0 cin).
Lemma candidate_88: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf6 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf6 lf4 lf4))).
Lemma candidate_89: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf6 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf6 lf4))).
Lemma candidate_90: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_91: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_92: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_93: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l l0 lf4)).
Lemma candidate_94: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_carry lf6 lf6 false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_95: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_carry true lf6 false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_96: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_sum false lf6 false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_97: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_carry lf6 true false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_98: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_sum lf6 false false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_99: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (lf6) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_100: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0)))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_101: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_102: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_103: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_104: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_105: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_106: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_107: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_108: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_109: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_110: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_111: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_112: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_113: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_114: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_115: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_116: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4) (BV_full_adder_sum l0 l lf4).
Lemma candidate_117: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4) (BV_full_adder_sum l l0 lf4).
Lemma candidate_118: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_119: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_120: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_121: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_122: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a0 a cin).
Lemma candidate_123: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a a0 cin).
Lemma candidate_124: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf6 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf6 lf4 lf4))).
Lemma candidate_125: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf6 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf6 lf4))).
Lemma candidate_126: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_127: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_128: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_129: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv lf6 (BV_full_adder_sum l l0 lf4)).
Lemma candidate_130: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_131: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_132: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_133: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_134: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_135: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_136: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_137: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_138: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_139: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_140: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_141: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_142: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_143: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_144: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_145: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_146: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_147: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_148: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_149: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_150: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_151: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_152: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_153: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_154: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_155: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_156: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_157: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_158: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_159: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_160: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_161: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_162: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_163: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_164: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_165: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_166: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a0 a)))   (consbv lf5 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a0 a))).
Lemma candidate_167: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 cin a)))   (consbv lf5 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 cin a))).
Lemma candidate_168: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a a0)))   (consbv lf5 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_169: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)))   (consbv lf5 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_170: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv lf5 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_171: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_172: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_173: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_174: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_175: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_176: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_177: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_178: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 lf5 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_179: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry true lf5 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_180: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum false lf5 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_181: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 true false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_182: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum lf5 false false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_183: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv (lf5) (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_184: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_185: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_186: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_187: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_188: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_189: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_190: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_191: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_192: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_193: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_194: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_195: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_196: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_197: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_198: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_199: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_200: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_201: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_202: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_203: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_204: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_205: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_206: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_207: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_208: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_209: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_210: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_211: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_212: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 a cin).
Lemma candidate_213: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a a0 cin).
Lemma candidate_214: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_215: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_216: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_217: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_218: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_219: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_220: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV   (consbv lf6 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a0 a)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a0 a))).
Lemma candidate_221: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV   (consbv lf6 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 cin a)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 cin a))).
Lemma candidate_222: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV   (consbv lf6 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a a0)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_223: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV   (consbv lf6 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_224: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV   (consbv lf6 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_225: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV   (consbv lf6 (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_226: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_227: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_228: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_229: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_230: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_231: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_232: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_carry lf6 lf6 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_233: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_carry true lf6 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_234: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_sum false lf6 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_235: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_carry lf6 true false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_236: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_sum lf6 false false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_237: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (lf6) (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_238: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_239: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_240: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_241: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_242: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_243: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_244: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_245: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_246: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_247: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_248: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_249: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_250: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_251: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_252: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_253: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_254: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_255: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_256: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_257: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_258: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_259: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_260: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_261: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_262: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_263: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_264: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_265: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_266: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a0 a cin).
Lemma candidate_267: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a a0 cin).
Lemma candidate_268: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_269: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_270: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_271: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_272: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_273: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1320 seconds
Duplicates removed: 133
Filtered by Quickchick: 48
Filtered by script: 25
Remaining: 67

Lemmas: 
Lemma candidate_13: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum a cin a0).
Lemma candidate_12: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_10: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a0 a cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_6: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a a0).
Lemma candidate_5: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum a0 cin a).
Lemma candidate_4: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_sum a a0 cin) (FullAdder.full_adder_sum cin a0 a).
Lemma candidate_144: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_143: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_142: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_3: forall (lf3 : BV) (a : bool) (a0 : bool) (cin : bool), @eq BV (consbv (full_adder_sum a a0 cin) lf3)   (consbv (full_adder_sum a0 a cin) lf3).
Lemma candidate_37: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_36: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_sum lf4 false false)).
Lemma candidate_35: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_34: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l lf4)   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_157: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_156: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_155: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_154: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))   (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_98: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_sum lf6 false false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_96: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_sum false lf6 false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_94: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_carry lf6 lf6 false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_62: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum lf5 false false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_60: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum false lf5 false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_58: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 lf5 false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_2: forall (a : bool) (l : list bool) (lf4 : bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq BV (consbv (full_adder_sum a a0 cin) (BV_full_adder_sum l0 l lf4))   (consbv (full_adder_sum a0 a cin) (BV_full_adder_sum l0 l lf4)).
Lemma candidate_97: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_carry lf6 true false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_95: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (consbv (FullAdder.full_adder_carry true lf6 false)      (BV_full_adder_sum l0 l lf4)).
Lemma candidate_61: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 true false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_59: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry true lf5 false)      (BV_full_adder_sum l0 l lf4)) (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_31: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5))).
Lemma candidate_30: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5))).
Lemma candidate_29: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4))).
Lemma candidate_28: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4))).
Lemma candidate_19: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_18: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf6) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf6))).
Lemma candidate_17: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf4 lf6 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf6 lf4))).
Lemma candidate_16: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l lf4))   (BV.consbv (FullAdder.full_adder_sum lf6 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf6 lf4 lf4))).
Lemma candidate_25: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf4 lf5)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_24: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf4 lf5) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry lf4 lf4 lf5)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_23: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf4 lf5 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf4 lf5 lf4)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_22: forall (l : list bool) (lf4 : bool) (l0 : list bool) (lf5 : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum lf5 lf4 lf4) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry lf5 lf4 lf4)))   (consbv lf5 (BV_full_adder_sum l0 l lf4)).
Lemma candidate_236: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_sum lf6 false false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_234: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_sum false lf6 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_232: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_carry lf6 lf6 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_235: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_carry lf6 true false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_233: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf6 : bool), @eq BV (consbv lf6 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv (FullAdder.full_adder_carry true lf6 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_182: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum lf5 false false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_180: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_sum false lf5 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_178: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 lf5 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_181: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry lf5 true false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_179: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool) (lf5 : bool), @eq BV   (consbv (FullAdder.full_adder_carry true lf5 false)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (consbv lf5 (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_273: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_272: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_271: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin))).
Lemma candidate_270: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_269: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_268: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
Lemma candidate_231: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_230: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_229: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a a0 cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a a0 cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_228: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_227: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_226: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0)))   (consbv (full_adder_sum a0 a cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin))).
Lemma candidate_176: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_174: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a0 a cin) (BV_full_adder_sum l0 l (FullAdder.full_adder_carry a0 a cin))).
Lemma candidate_173: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum a cin a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry a cin a0))).
Lemma candidate_172: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq BV   (consbv (full_adder_sum a a0 cin)      (BV_full_adder_sum l0 l (full_adder_carry a a0 cin)))   (BV.consbv (FullAdder.full_adder_sum cin a a0) (BV_full_adder_sum l l0 (FullAdder.full_adder_carry cin a a0))).
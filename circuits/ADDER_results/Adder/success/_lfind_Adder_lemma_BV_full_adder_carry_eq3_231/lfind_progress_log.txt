File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_BV_full_adder_carry_eq3_231
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_BV_full_adder_carry_eq3_231
- Namespace: Circuits
- Proof name: BV_full_adder_carry_sym
- Theorem: Theorem BV_full_adder_carry_sym: forall (v0 w0 : BV) (cin0 : bool),
@eq bool (BV_full_adder_carry v0 w0 cin0) (BV_full_adder_carry w0 v0 cin0).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))

* Hypothesis:
cin : bool
H : forall (w0 : BV) (cin0 : bool),
@eq bool (BV_full_adder_carry l w0 cin0) (BV_full_adder_carry w0 l cin0)
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
bool

* Polymorphic Types:
list bool

* Variables:
cin : bool
l : list bool
a : bool

* Terms:
cin : bool
BV_full_adder_carry (@cons bool a l) (@nil bool) cin : bool
@cons bool a l : list bool
@nil bool : list bool
l : list bool
bool : Set
BV_full_adder_carry (@nil bool) l (half_adder_carry a cin) : bool
forall (w0 : BV) (cin0 : bool),
@eq bool (BV_full_adder_carry l w0 cin0) (BV_full_adder_carry w0 l cin0) : Prop
@eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)) : Prop
BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1 : bool
forall cin0 : bool,
@eq bool (BV_full_adder_carry l _UNBOUND_REL_2 cin0)
  (BV_full_adder_carry _UNBOUND_REL_2 l cin0) : Prop
BV : Set
list bool : Set
half_adder_carry a cin : bool
BV_full_adder_carry _UNBOUND_REL_2 l _UNBOUND_REL_1 : bool
@eq bool (BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1)
  (BV_full_adder_carry _UNBOUND_REL_2 l _UNBOUND_REL_1) : Prop
a : bool

* Functions:
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
list  : forall _ : Type, Type
half_adder_carry  : forall (_ : bool) (_ : bool), bool
@nil  : forall A : Type, list A
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : bool = half_adder_carry a cin
lf1 : bool = BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)
lf4 : list bool = @cons bool a l
lf5 : list bool = @nil bool
lf2 : bool = BV_full_adder_carry (@cons bool a l) (@nil bool) cin

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.
Lemma conj2: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) lf1.
Lemma conj4: forall (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) lf1.
Lemma conj6: forall (lf5 : list bool) (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) lf1.
Lemma conj8: forall (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) lf1.
Lemma conj9: forall (lf2 : bool) (lf5 : list bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry lf5 l lf3).
Lemma conj10: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (BV_full_adder_carry lf5 l lf3).
Lemma conj11: forall (lf2 : bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj12: forall (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj14: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l lf3).
Lemma conj16: forall (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj25: forall (lf2 : bool) (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj26: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj27: forall (lf2 : bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj28: forall (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj30: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj32: forall (cin : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).


<---VALIDITY CHECKS--->
Time elapsed: 96 seconds
Valid:
Lemma conj32: forall (cin : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).

Invalid:
Lemma conj30: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj28: forall (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj27: forall (lf2 : bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj26: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj25: forall (lf2 : bool) (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj16: forall (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj14: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l lf3).
Lemma conj12: forall (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj11: forall (lf2 : bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj10: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (BV_full_adder_carry lf5 l lf3).
Lemma conj9: forall (lf2 : bool) (lf5 : list bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry lf5 l lf3).
Lemma conj8: forall (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) lf1.
Lemma conj6: forall (lf5 : list bool) (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) lf1.
Lemma conj4: forall (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) lf1.
Lemma conj2: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) lf1.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 163 seconds
Generalizations:
Lemma conj30: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj28: forall (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj27: forall (lf2 : bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj26: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj25: forall (lf2 : bool) (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj16: forall (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj14: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l lf3).
Lemma conj12: forall (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj11: forall (lf2 : bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj10: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (BV_full_adder_carry lf5 l lf3).
Lemma conj9: forall (lf2 : bool) (lf5 : list bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry lf5 l lf3).
Lemma conj8: forall (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) lf1.
Lemma conj6: forall (lf5 : list bool) (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) lf1.
Lemma conj4: forall (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) lf1.
Lemma conj2: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) lf1.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 204 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.
Lemma conj2: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) lf1.
Lemma conj4: forall (cin : bool) (lf4 : list bool) (lf1 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) lf1.
Lemma conj6: forall (lf5 : list bool) (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) lf1.
Lemma conj8: forall (cin : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) lf1.
Lemma conj9: forall (lf2 : bool) (lf5 : list bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry lf5 l lf3).
Lemma conj10: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (BV_full_adder_carry lf5 l lf3).
Lemma conj11: forall (lf2 : bool) (l : list bool) (lf3 : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj12: forall (cin : bool) (lf4 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj14: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l lf3).
Lemma conj16: forall (cin : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3).
Lemma conj25: forall (lf2 : bool) (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj26: forall (lf5 : list bool) (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma conj27: forall (lf2 : bool) (cin : bool) (l : list bool) (a : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj28: forall (cin : bool) (lf4 : list bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma conj30: forall (lf5 : list bool) (cin : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin)).


<---CREATE SKETCHES--->
Time elapsed: 204 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool (##hole##) lf1
Sketch conj2_term_sketch0 : @eq bool (BV_full_adder_carry lf4 lf5 cin) (##hole##)
Sketch conj4_sketch0 : @eq bool (##hole##) lf1
Sketch conj4_sketch1 : @eq bool (BV_full_adder_carry lf4 (##hole##) cin) lf1
Sketch conj4_term_sketch0 : @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (##hole##)
Sketch conj4_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj6_sketch0 : @eq bool (##hole##) lf1
Sketch conj6_sketch1 : @eq bool (BV_full_adder_carry (##hole##) lf5 cin) lf1
Sketch conj6_term_sketch0 : @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (##hole##)
Sketch conj6_term_sketch1 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj8_sketch0 : @eq bool (##hole##) lf1
Sketch conj8_sketch1 : @eq bool (BV_full_adder_carry (##hole##) (@nil bool) cin) lf1
Sketch conj8_sketch2 : @eq bool (BV_full_adder_carry (@cons bool a l) (##hole##) cin) lf1
Sketch conj8_term_sketch0 : @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj8_term_sketch1 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj8_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj9_sketch0 : @eq bool lf2 (##hole##)
Sketch conj9_term_sketch0 : @eq bool (BV_full_adder_carry lf5 l lf3) (##hole##)
Sketch conj10_sketch0 : @eq bool (BV_full_adder_carry lf4 lf5 cin) (##hole##)
Sketch conj10_sketch1 : @eq bool (##hole##) (BV_full_adder_carry lf5 l lf3)
Sketch conj10_term_sketch0 : @eq bool (BV_full_adder_carry lf5 l lf3) (##hole##)
Sketch conj10_term_sketch1 : @eq bool (BV_full_adder_carry lf4 lf5 cin) (##hole##)
Sketch conj11_sketch0 : @eq bool lf2 (##hole##)
Sketch conj11_sketch1 : @eq bool lf2 (BV_full_adder_carry (##hole##) l lf3)
Sketch conj11_term_sketch0 : @eq bool (BV_full_adder_carry (@nil bool) l lf3) (##hole##)
Sketch conj11_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj12_sketch0 : @eq bool (##hole##) (BV_full_adder_carry (@nil bool) l lf3)
Sketch conj12_sketch1 : @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (##hole##)
Sketch conj12_sketch2 : @eq bool (BV_full_adder_carry lf4 (##hole##) cin)
  (BV_full_adder_carry (##hole##) l lf3)
Sketch conj12_term_sketch0 : @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (##hole##)
Sketch conj12_term_sketch1 : @eq bool (BV_full_adder_carry (@nil bool) l lf3) (##hole##)
Sketch conj12_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj14_sketch0 : @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (##hole##)
Sketch conj14_sketch1 : @eq bool (##hole##) (BV_full_adder_carry lf5 l lf3)
Sketch conj14_sketch2 : @eq bool (BV_full_adder_carry (##hole##) lf5 cin)
  (BV_full_adder_carry lf5 l lf3)
Sketch conj14_term_sketch0 : @eq bool (BV_full_adder_carry lf5 l lf3) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (##hole##)
Sketch conj14_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj16_sketch0 : @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj16_sketch1 : @eq bool (##hole##) (BV_full_adder_carry (@nil bool) l lf3)
Sketch conj16_sketch2 : @eq bool (BV_full_adder_carry (##hole##) (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l lf3)
Sketch conj16_sketch3 : @eq bool (BV_full_adder_carry (@cons bool a l) (##hole##) cin)
  (BV_full_adder_carry (##hole##) l lf3)
Sketch conj16_term_sketch0 : @eq bool (BV_full_adder_carry (@nil bool) l lf3) (##hole##)
Sketch conj16_term_sketch1 : @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj16_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj16_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj25_sketch0 : @eq bool lf2 (##hole##)
Sketch conj25_sketch1 : @eq bool lf2 (BV_full_adder_carry lf5 l (##hole##))
Sketch conj25_term_sketch0 : @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin)) (##hole##)
Sketch conj25_term_sketch1 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj26_sketch0 : @eq bool (BV_full_adder_carry lf4 lf5 cin) (##hole##)
Sketch conj26_sketch1 : @eq bool (##hole##) (BV_full_adder_carry lf5 l (half_adder_carry a cin))
Sketch conj26_sketch2 : @eq bool (BV_full_adder_carry lf4 lf5 cin)
  (BV_full_adder_carry lf5 l (##hole##))
Sketch conj26_term_sketch0 : @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin)) (##hole##)
Sketch conj26_term_sketch1 : @eq bool (BV_full_adder_carry lf4 lf5 cin) (##hole##)
Sketch conj26_term_sketch2 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj27_sketch0 : @eq bool lf2 (##hole##)
Sketch conj27_sketch1 : @eq bool lf2 (BV_full_adder_carry (##hole##) l (half_adder_carry a cin))
Sketch conj27_sketch2 : @eq bool lf2 (BV_full_adder_carry (@nil bool) l (##hole##))
Sketch conj27_term_sketch0 : @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))
  (##hole##)
Sketch conj27_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj27_term_sketch2 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj28_sketch0 : @eq bool (##hole##)
  (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))
Sketch conj28_sketch1 : @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (##hole##)
Sketch conj28_sketch2 : @eq bool (BV_full_adder_carry lf4 (##hole##) cin)
  (BV_full_adder_carry (##hole##) l (half_adder_carry a cin))
Sketch conj28_sketch3 : @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)
  (BV_full_adder_carry (@nil bool) l (##hole##))
Sketch conj28_term_sketch0 : @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (##hole##)
Sketch conj28_term_sketch1 : @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))
  (##hole##)
Sketch conj28_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj28_term_sketch3 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj30_sketch0 : @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (##hole##)
Sketch conj30_sketch1 : @eq bool (##hole##) (BV_full_adder_carry lf5 l (half_adder_carry a cin))
Sketch conj30_sketch2 : @eq bool (BV_full_adder_carry (##hole##) lf5 cin)
  (BV_full_adder_carry lf5 l (half_adder_carry a cin))
Sketch conj30_sketch3 : @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)
  (BV_full_adder_carry lf5 l (##hole##))
Sketch conj30_term_sketch0 : @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin)) (##hole##)
Sketch conj30_term_sketch1 : @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (##hole##)
Sketch conj30_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj30_term_sketch3 : @eq bool (half_adder_carry a cin) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 938 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_7
Sketch conj12_sketch0 --> Problem  synth_15
Sketch conj28_sketch0 --> Problem  synth_11
Sketch conj16_sketch3 --> Problem  synth_19
Sketch conj26_sketch2 --> Problem  synth_22
Sketch conj25_sketch1 --> Problem  synth_20
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj16_term_sketch1 --> Problem  synth_11
Sketch conj14_term_sketch2 --> Problem  synth_8
Sketch conj8_sketch1 --> Problem  synth_9
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj6_term_sketch0 --> Problem  synth_7
Sketch conj30_term_sketch3 --> Problem  synth_21
Sketch conj11_sketch1 --> Problem  synth_14
Sketch conj8_term_sketch0 --> Problem  synth_11
Sketch conj28_term_sketch1 --> Problem  synth_11
Sketch conj26_term_sketch2 --> Problem  synth_21
Sketch conj14_term_sketch1 --> Problem  synth_7
Sketch conj12_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj30_sketch2 --> Problem  synth_27
Sketch conj10_sketch1 --> Problem  synth_13
Sketch conj9_term_sketch0 --> Problem  synth_13
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_21
Sketch conj16_sketch1 --> Problem  synth_15
Sketch conj12_sketch1 --> Problem  synth_4
Sketch conj27_term_sketch2 --> Problem  synth_21
Sketch conj12_sketch2 --> Problem  synth_16
Sketch conj28_sketch2 --> Problem  synth_25
Sketch conj11_term_sketch0 --> Problem  synth_15
Sketch conj26_term_sketch0 --> Problem  synth_7
Sketch conj16_term_sketch2 --> Problem  synth_8
Sketch conj30_term_sketch1 --> Problem  synth_7
Sketch conj27_sketch2 --> Problem  synth_24
Sketch conj28_term_sketch2 --> Problem  synth_5
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj27_sketch1 --> Problem  synth_23
Sketch conj30_term_sketch0 --> Problem  synth_7
Sketch conj8_sketch0 --> Problem  synth_1
Sketch conj12_term_sketch2 --> Problem  synth_5
Sketch conj10_sketch0 --> Problem  synth_2
Sketch conj8_term_sketch2 --> Problem  synth_5
Sketch conj14_sketch1 --> Problem  synth_13
Sketch conj26_term_sketch1 --> Problem  synth_2
Sketch conj14_sketch2 --> Problem  synth_17
Sketch conj27_term_sketch1 --> Problem  synth_5
Sketch conj16_sketch2 --> Problem  synth_18
Sketch conj10_term_sketch1 --> Problem  synth_2
Sketch conj30_sketch3 --> Problem  synth_28
Sketch conj25_term_sketch1 --> Problem  synth_21
Sketch conj30_sketch1 --> Problem  synth_7
Sketch conj26_sketch0 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj12_term_sketch1 --> Problem  synth_15
Sketch conj9_sketch0 --> Problem  synth_12
Sketch conj8_sketch2 --> Problem  synth_10
Sketch conj26_sketch1 --> Problem  synth_7
Sketch conj28_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj6_sketch1 --> Problem  synth_6
Sketch conj30_term_sketch2 --> Problem  synth_8
Sketch conj10_term_sketch0 --> Problem  synth_13
Sketch conj28_sketch3 --> Problem  synth_26
Sketch conj25_sketch0 --> Problem  synth_12
Sketch conj28_sketch1 --> Problem  synth_4
Sketch conj6_term_sketch1 --> Problem  synth_8
Sketch conj4_sketch1 --> Problem  synth_3
Sketch conj16_sketch0 --> Problem  synth_11
Sketch conj14_sketch0 --> Problem  synth_7
Sketch conj14_term_sketch0 --> Problem  synth_13
Sketch conj16_term_sketch0 --> Problem  synth_15
Sketch conj16_term_sketch3 --> Problem  synth_5
Sketch conj11_sketch0 --> Problem  synth_12
Sketch conj27_term_sketch0 --> Problem  synth_11
Sketch conj25_term_sketch0 --> Problem  synth_7


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1188 seconds

Problem: synth_28
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_22

Problem: synth_20

Problem: synth_18

Problem: synth_17

Problem: synth_21
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_26

Problem: synth_9

Problem: synth_25
 @nil bool

Problem: synth_13
 BV_full_adder_carry lf5 lf5 false
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 HalfAdder.half_adder_carry lf3 false
 false

Problem: synth_6

Problem: synth_11
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false)
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry cin false
 false

Problem: synth_7
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry cin false
 false

Problem: synth_4
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 cin
 BV_full_adder_carry lf4 (@nil bool) cin
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 false
 BV_full_adder_carry lf4 (@nil bool) false
 HalfAdder.half_adder_carry cin false
 false

Problem: synth_1
 HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)
 HalfAdder.half_adder_carry lf1 lf1
 HalfAdder.half_adder_carry lf1 true
 HalfAdder.half_adder_carry lf1 false
 lf1
 false

Problem: synth_23
 @nil bool

Problem: synth_27
 @cons bool (BV_full_adder_carry lf5 lf5 a) l
 @cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 a) l
 @cons bool (BV_full_adder_carry lf5 (@nil bool) a) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool a l

Problem: synth_16
 @nil bool

Problem: synth_19
 @nil bool

Problem: synth_15
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l lf3
 BV_full_adder_carry l (@nil bool) lf3
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry lf3 false
 false

Problem: synth_14
 @nil bool

Problem: synth_10
 @nil bool

Problem: synth_8
 @cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l
 @cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l
 @cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool a l

Problem: synth_24

Problem: synth_3
 @nil bool

Problem: synth_12
 HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 false)
 HalfAdder.half_adder_carry lf2 lf2
 HalfAdder.half_adder_carry lf2 true
 HalfAdder.half_adder_carry lf2 false
 lf2
 false

Problem: synth_5
 @nil bool

Problem: synth_2
 BV_full_adder_carry lf5 lf5 false
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false
 BV_full_adder_carry lf4 (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 HalfAdder.half_adder_carry cin false
 false

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1189 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_2: forall (lf1 : bool), @eq bool   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)) lf1.
Lemma candidate_3: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 lf1) lf1.
Lemma candidate_4: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 true) lf1.
Lemma candidate_5: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 false) lf1.
Lemma candidate_6: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_7: forall (lf1 : bool), @eq bool (false) lf1.
Lemma candidate_8: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_9: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_10: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_11: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_12: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_13: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (false).
Lemma candidate_14: forall (lf1 : bool), @eq bool   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)) lf1.
Lemma candidate_15: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 lf1) lf1.
Lemma candidate_16: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 true) lf1.
Lemma candidate_17: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 false) lf1.
Lemma candidate_18: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_19: forall (lf1 : bool), @eq bool (false) lf1.
Lemma candidate_20: forall (lf1 : bool) (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) lf1.
Lemma candidate_21: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 cin).
Lemma candidate_22: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_23: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 false).
Lemma candidate_24: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_25: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_26: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (false).
Lemma candidate_27: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_28: forall (lf1 : bool), @eq bool   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)) lf1.
Lemma candidate_29: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 lf1) lf1.
Lemma candidate_30: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 true) lf1.
Lemma candidate_31: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 false) lf1.
Lemma candidate_32: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_33: forall (lf1 : bool), @eq bool (false) lf1.
Lemma candidate_34: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_35: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_36: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_37: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_38: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_39: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (false).
Lemma candidate_40: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
Lemma candidate_41: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_42: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_43: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_44: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_45: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_46: forall (lf1 : bool), @eq bool   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)) lf1.
Lemma candidate_47: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 lf1) lf1.
Lemma candidate_48: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 true) lf1.
Lemma candidate_49: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 false) lf1.
Lemma candidate_50: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_51: forall (lf1 : bool), @eq bool (false) lf1.
Lemma candidate_52: forall (a : bool) (l : list bool) (lf1 : bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) lf1.
Lemma candidate_53: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false)).
Lemma candidate_54: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_55: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_56: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_57: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_58: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) (false).
Lemma candidate_59: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
Lemma candidate_60: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_61: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_62: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_63: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_64: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_65: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_66: forall (lf2 : bool), @eq bool lf2   (HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 false)).
Lemma candidate_67: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_68: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_69: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_70: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_71: forall (lf2 : bool), @eq bool lf2 (false).
Lemma candidate_72: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3) (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_73: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_74: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_75: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_76: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (HalfAdder.half_adder_carry lf3 false).
Lemma candidate_77: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3) (false).
Lemma candidate_78: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_79: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_80: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_81: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_82: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_83: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (false).
Lemma candidate_84: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 lf5 false) (BV_full_adder_carry lf5 l lf3).
Lemma candidate_85: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_86: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_87: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 (@nil bool) false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_88: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (HalfAdder.half_adder_carry lf3 false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_89: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (false) (BV_full_adder_carry lf5 l lf3).
Lemma candidate_90: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3) (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_91: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_92: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_93: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_94: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (HalfAdder.half_adder_carry lf3 false).
Lemma candidate_95: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3) (false).
Lemma candidate_96: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_97: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_98: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_99: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_100: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_101: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (false).
Lemma candidate_102: forall (lf2 : bool), @eq bool lf2   (HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 false)).
Lemma candidate_103: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_104: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_105: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_106: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_107: forall (lf2 : bool), @eq bool lf2 (false).
Lemma candidate_108: forall (lf3 : bool) (l : list bool) (lf2 : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_109: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l lf3).
Lemma candidate_110: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) lf3).
Lemma candidate_111: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_112: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_113: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (HalfAdder.half_adder_carry lf3 false).
Lemma candidate_114: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3) (false).
Lemma candidate_115: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_116: forall (lf3 : bool) (l : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l lf3)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_117: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf3)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_118: forall (lf3 : bool) (l : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_119: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_120: forall (lf3 : bool) (l : list bool), @eq bool (HalfAdder.half_adder_carry lf3 false)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_121: forall (lf3 : bool) (l : list bool), @eq bool (false) (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_122: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 cin).
Lemma candidate_123: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_124: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 false).
Lemma candidate_125: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_126: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_127: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (false).
Lemma candidate_128: forall (lf3 : bool) (l : list bool) (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_129: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 cin).
Lemma candidate_130: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_131: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 false).
Lemma candidate_132: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_133: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_134: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (false).
Lemma candidate_135: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l lf3).
Lemma candidate_136: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) lf3).
Lemma candidate_137: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_138: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_139: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (HalfAdder.half_adder_carry lf3 false).
Lemma candidate_140: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3) (false).
Lemma candidate_141: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_142: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_143: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_144: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_145: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_146: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_147: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (false).
Lemma candidate_148: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 lf5 false) (BV_full_adder_carry lf5 l lf3).
Lemma candidate_149: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_150: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_151: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 (@nil bool) false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_152: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (HalfAdder.half_adder_carry lf3 false)   (BV_full_adder_carry lf5 l lf3).
Lemma candidate_153: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (false) (BV_full_adder_carry lf5 l lf3).
Lemma candidate_154: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3) (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_155: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_156: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_157: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_158: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3)   (HalfAdder.half_adder_carry lf3 false).
Lemma candidate_159: forall (lf3 : bool) (l : list bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l lf3) (false).
Lemma candidate_160: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_161: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_162: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_163: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_164: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_165: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (false).
Lemma candidate_166: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
Lemma candidate_167: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_168: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_169: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_170: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_171: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_172: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false)).
Lemma candidate_173: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_174: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_175: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_176: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_177: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) (false).
Lemma candidate_178: forall (lf3 : bool) (l : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l lf3)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_179: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf3)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_180: forall (lf3 : bool) (l : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_181: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_182: forall (lf3 : bool) (l : list bool), @eq bool (HalfAdder.half_adder_carry lf3 false)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_183: forall (lf3 : bool) (l : list bool), @eq bool (false) (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_184: forall (lf3 : bool) (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (BV_full_adder_carry (@nil bool) l lf3).
Lemma candidate_185: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l lf3).
Lemma candidate_186: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) lf3).
Lemma candidate_187: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_188: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_189: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3)   (HalfAdder.half_adder_carry lf3 false).
Lemma candidate_190: forall (lf3 : bool) (l : list bool), @eq bool (BV_full_adder_carry (@nil bool) l lf3) (false).
Lemma candidate_191: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false)).
Lemma candidate_192: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_193: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_194: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_195: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_196: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@cons bool a l) (@nil bool) cin) (false).
Lemma candidate_197: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
Lemma candidate_198: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_199: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_200: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_201: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_202: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_203: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_204: forall (lf2 : bool), @eq bool lf2   (HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 false)).
Lemma candidate_205: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_206: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_207: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_208: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_209: forall (lf2 : bool), @eq bool lf2 (false).
Lemma candidate_210: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_211: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_212: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_213: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a false).
Lemma candidate_214: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin false).
Lemma candidate_215: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin)) (false).
Lemma candidate_216: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_217: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_218: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_219: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_220: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_221: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_222: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_223: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_224: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_225: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_226: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_227: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (false).
Lemma candidate_228: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_229: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_230: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 (@nil bool) false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_231: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (HalfAdder.half_adder_carry a false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_232: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (HalfAdder.half_adder_carry cin false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_233: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (false) (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_234: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_235: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_236: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_237: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a false).
Lemma candidate_238: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin false).
Lemma candidate_239: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin)) (false).
Lemma candidate_240: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 lf5 false).
Lemma candidate_241: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_242: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_243: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_244: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_245: forall (lf4 : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf4 lf5 cin) (false).
Lemma candidate_246: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_247: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_248: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_249: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_250: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_251: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_252: forall (lf2 : bool), @eq bool lf2   (HalfAdder.half_adder_carry lf2 (HalfAdder.half_adder_carry lf2 false)).
Lemma candidate_253: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_254: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_255: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_256: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_257: forall (lf2 : bool), @eq bool lf2 (false).
Lemma candidate_258: forall (a : bool) (l : list bool) (cin : bool) (lf2 : bool), @eq bool lf2 (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_259: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false)).
Lemma candidate_260: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_261: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_262: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a false).
Lemma candidate_263: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin false).
Lemma candidate_264: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)) (false).
Lemma candidate_265: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_266: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_267: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_268: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_269: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_270: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_271: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_272: forall (a : bool) (l : list bool) (cin : bool), @eq bool   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false))   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_273: forall (a : bool) (l : list bool) (cin : bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_274: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_275: forall (a : bool) (l : list bool) (cin : bool), @eq bool (HalfAdder.half_adder_carry a false)   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_276: forall (a : bool) (l : list bool) (cin : bool), @eq bool (HalfAdder.half_adder_carry cin false)   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_277: forall (a : bool) (l : list bool) (cin : bool), @eq bool (false) (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_278: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 cin).
Lemma candidate_279: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_280: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 false).
Lemma candidate_281: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_282: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_283: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (false).
Lemma candidate_284: forall (a : bool) (l : list bool) (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)).
Lemma candidate_285: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 cin).
Lemma candidate_286: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) cin).
Lemma candidate_287: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf4 false).
Lemma candidate_288: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (BV_full_adder_carry lf4 (@nil bool) false).
Lemma candidate_289: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_290: forall (lf4 : list bool) (cin : bool), @eq bool (BV_full_adder_carry lf4 (@nil bool) cin) (false).
Lemma candidate_291: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry cin false)).
Lemma candidate_292: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_293: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_294: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a false).
Lemma candidate_295: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin false).
Lemma candidate_296: forall (a : bool) (l : list bool) (cin : bool), @eq bool (BV_full_adder_carry (@nil bool) l (half_adder_carry a cin)) (false).
Lemma candidate_297: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_298: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_299: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_300: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_301: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_302: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_303: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_304: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_305: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_306: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_307: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_308: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_309: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (false).
Lemma candidate_310: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_311: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry l (@nil bool) false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_312: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 (@nil bool) false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_313: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (HalfAdder.half_adder_carry a false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_314: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (HalfAdder.half_adder_carry cin false)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_315: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (false) (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_316: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   (BV_full_adder_carry (@cons bool (BV_full_adder_carry lf5 lf5 a) l) lf5 cin)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_317: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   (BV_full_adder_carry      (@cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 a) l)      lf5 cin) (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_318: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   (BV_full_adder_carry (@cons bool (BV_full_adder_carry lf5 (@nil bool) a) l)      lf5 cin) (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_319: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   (BV_full_adder_carry (@cons bool (HalfAdder.half_adder_carry a a) l) lf5      cin) (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_320: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool   (BV_full_adder_carry (@cons bool (HalfAdder.half_adder_carry a true) l) lf5      cin) (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_321: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l (half_adder_carry a cin)).
Lemma candidate_322: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l      (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin))).
Lemma candidate_323: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l      (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin))).
Lemma candidate_324: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l      (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true))).
Lemma candidate_325: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l      (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true))).
Lemma candidate_326: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_327: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_328: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_329: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_330: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_331: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (HalfAdder.half_adder_carry a false).
Lemma candidate_332: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin))   (HalfAdder.half_adder_carry cin false).
Lemma candidate_333: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry lf5 l (half_adder_carry a cin)) (false).
Lemma candidate_334: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false).
Lemma candidate_335: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_336: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (BV_full_adder_carry lf5 (@nil bool) false).
Lemma candidate_337: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry a false).
Lemma candidate_338: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin)   (HalfAdder.half_adder_carry cin false).
Lemma candidate_339: forall (a : bool) (l : list bool) (cin : bool) (lf5 : list bool), @eq bool (BV_full_adder_carry (@cons bool a l) lf5 cin) (false).
Lemma candidate_340: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
Lemma candidate_341: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_342: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_343: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_344: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_345: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_346: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_347: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_348: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_349: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_350: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_351: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1447 seconds
Duplicates removed: 235
Filtered by Quickchick: 91
Filtered by script: 13
Remaining: 12

Lemmas: 
Lemma candidate_67: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_3: forall (lf1 : bool), @eq bool (HalfAdder.half_adder_carry lf1 lf1) lf1.
Lemma candidate_68: forall (lf2 : bool), @eq bool lf2 (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_43: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_44: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_217: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_216: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a cin)).
Lemma candidate_219: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_218: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_41: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a a)) l).
Lemma candidate_42: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a true)) l).
Lemma candidate_40: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) true) l).
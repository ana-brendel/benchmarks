File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_full_adder_carry_sym1_233
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_full_adder_carry_sym1_233
- Namespace: Circuits
- Proof name: BV_full_adder_carry_sym
- Theorem: Theorem BV_full_adder_carry_sym: forall (v0 w0 : BV) (cin0 : bool),
@eq bool (BV_full_adder_carry v0 w0 cin0) (BV_full_adder_carry w0 v0 cin0).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))

* Hypothesis:
H0 : forall cin0 : bool,
@eq bool (BV_full_adder_carry (@cons bool a l) l0 cin0)
  (BV_full_adder_carry l0 (@cons bool a l) cin0)
cin : bool
l0 : list bool
a0 : bool
H : forall (w0 : BV) (cin0 : bool),
@eq bool (BV_full_adder_carry l w0 cin0) (BV_full_adder_carry w0 l cin0)
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
bool

* Polymorphic Types:
list bool

* Variables:
cin : bool
l0 : list bool
a0 : bool
l : list bool
a : bool

* Terms:
BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1 : bool
cin : bool
@cons bool a l : list bool
BV_full_adder_carry l0 l (full_adder_carry a a0 cin) : bool
l : list bool
BV_full_adder_carry l0 l (full_adder_carry a0 a cin) : bool
full_adder_carry a a0 cin : bool
@eq bool (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1)
  (BV_full_adder_carry l0 (@cons bool a l) _UNBOUND_REL_1) : Prop
forall cin0 : bool,
@eq bool (BV_full_adder_carry (@cons bool a l) l0 cin0)
  (BV_full_adder_carry l0 (@cons bool a l) cin0) : Prop
BV_full_adder_carry l0 (@cons bool a l) _UNBOUND_REL_1 : bool
bool : Set
l0 : list bool
@eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)) : Prop
full_adder_carry a0 a cin : bool
a0 : bool
forall (w0 : BV) (cin0 : bool),
@eq bool (BV_full_adder_carry l w0 cin0) (BV_full_adder_carry w0 l cin0) : Prop
BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1 : bool
forall cin0 : bool,
@eq bool (BV_full_adder_carry l _UNBOUND_REL_2 cin0)
  (BV_full_adder_carry _UNBOUND_REL_2 l cin0) : Prop
BV : Set
list bool : Set
BV_full_adder_carry _UNBOUND_REL_2 l _UNBOUND_REL_1 : bool
@eq bool (BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1)
  (BV_full_adder_carry _UNBOUND_REL_2 l _UNBOUND_REL_1) : Prop
a : bool

* Functions:
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
full_adder_carry  : forall (_ : bool) (_ : bool) (_ : bool), bool
list  : forall _ : Type, Type
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : bool = full_adder_carry a a0 cin
lf1 : bool = BV_full_adder_carry l0 l (full_adder_carry a a0 cin)
lf4 : bool = full_adder_carry a0 a cin
lf2 : bool = BV_full_adder_carry l0 l (full_adder_carry a0 a cin)

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (l0 : list bool) (lf4 : bool) (lf1 : bool) (l : list bool), @eq bool lf1 (BV_full_adder_carry l0 l lf4).
Lemma conj4: forall (cin : bool) (l0 : list bool) (a0 : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool lf1 (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj5: forall (lf2 : bool) (l0 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) lf2.
Lemma conj6: forall (l0 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf4).
Lemma conj8: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3)
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj13: forall (lf2 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) lf2.
Lemma conj14: forall (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l lf4).
Lemma conj16: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).


<---VALIDITY CHECKS--->
Time elapsed: 72 seconds
Valid:
Lemma conj16: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).

Invalid:
Lemma conj14: forall (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l lf4).
Lemma conj13: forall (lf2 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) lf2.
Lemma conj8: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3)
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj6: forall (l0 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf4).
Lemma conj5: forall (lf2 : bool) (l0 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) lf2.
Lemma conj4: forall (cin : bool) (l0 : list bool) (a0 : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool lf1 (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj2: forall (l0 : list bool) (lf4 : bool) (lf1 : bool) (l : list bool), @eq bool lf1 (BV_full_adder_carry l0 l lf4).
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 121 seconds
Generalizations:
Lemma conj14: forall (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l lf4).
Lemma conj13: forall (lf2 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) lf2.
Lemma conj8: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3)
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj6: forall (l0 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf4).
Lemma conj5: forall (lf2 : bool) (l0 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) lf2.
Lemma conj4: forall (cin : bool) (l0 : list bool) (a0 : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool lf1 (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj2: forall (l0 : list bool) (lf4 : bool) (lf1 : bool) (l : list bool), @eq bool lf1 (BV_full_adder_carry l0 l lf4).
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 143 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (l0 : list bool) (lf4 : bool) (lf1 : bool) (l : list bool), @eq bool lf1 (BV_full_adder_carry l0 l lf4).
Lemma conj4: forall (cin : bool) (l0 : list bool) (a0 : bool) (lf1 : bool) (l : list bool) (a : bool), @eq bool lf1 (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj5: forall (lf2 : bool) (l0 : list bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) lf2.
Lemma conj6: forall (l0 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf4).
Lemma conj8: forall (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq bool (BV_full_adder_carry l0 l lf3)
  (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma conj13: forall (lf2 : bool) (cin : bool) (l0 : list bool) (a0 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) lf2.
Lemma conj14: forall (l0 : list bool) (cin : bool) (a0 : bool) (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))
  (BV_full_adder_carry l0 l lf4).


<---CREATE SKETCHES--->
Time elapsed: 144 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool (BV_full_adder_carry l0 l lf4) (##hole##)
Sketch conj4_sketch0 : @eq bool lf1 (BV_full_adder_carry l0 l (##hole##))
Sketch conj4_sketch1 : @eq bool lf1 (##hole##)
Sketch conj4_term_sketch0 : @eq bool (full_adder_carry a0 a cin) (##hole##)
Sketch conj4_term_sketch1 : @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)) (##hole##)
Sketch conj5_sketch0 : @eq bool (##hole##) lf2
Sketch conj5_term_sketch0 : @eq bool (BV_full_adder_carry l0 l lf3) (##hole##)
Sketch conj6_sketch0 : @eq bool (BV_full_adder_carry l0 l lf3) (##hole##)
Sketch conj6_sketch1 : @eq bool (##hole##) (BV_full_adder_carry l0 l lf4)
Sketch conj6_term_sketch0 : @eq bool (BV_full_adder_carry l0 l lf4) (##hole##)
Sketch conj6_term_sketch1 : @eq bool (BV_full_adder_carry l0 l lf3) (##hole##)
Sketch conj8_sketch0 : @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l (##hole##))
Sketch conj8_sketch1 : @eq bool (##hole##) (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))
Sketch conj8_sketch2 : @eq bool (BV_full_adder_carry l0 l lf3) (##hole##)
Sketch conj8_term_sketch0 : @eq bool (full_adder_carry a0 a cin) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (BV_full_adder_carry l0 l lf3) (##hole##)
Sketch conj8_term_sketch2 : @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)) (##hole##)
Sketch conj13_sketch0 : @eq bool (BV_full_adder_carry l0 l (##hole##)) lf2
Sketch conj13_sketch1 : @eq bool (##hole##) lf2
Sketch conj13_term_sketch0 : @eq bool (full_adder_carry a a0 cin) (##hole##)
Sketch conj13_term_sketch1 : @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) (##hole##)
Sketch conj14_sketch0 : @eq bool (BV_full_adder_carry l0 l (##hole##)) (BV_full_adder_carry l0 l lf4)
Sketch conj14_sketch1 : @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) (##hole##)
Sketch conj14_sketch2 : @eq bool (##hole##) (BV_full_adder_carry l0 l lf4)
Sketch conj14_term_sketch0 : @eq bool (full_adder_carry a a0 cin) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (BV_full_adder_carry l0 l lf4) (##hole##)
Sketch conj14_term_sketch2 : @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 437 seconds
Problems per Sketch:
Sketch conj6_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_6
Sketch conj14_sketch2 --> Problem  synth_2
Sketch conj13_term_sketch0 --> Problem  synth_4
Sketch conj14_term_sketch2 --> Problem  synth_5
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj8_sketch1 --> Problem  synth_5
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj6_term_sketch0 --> Problem  synth_2
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj13_sketch1 --> Problem  synth_6
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj14_sketch0 --> Problem  synth_10
Sketch conj13_term_sketch1 --> Problem  synth_5
Sketch conj8_term_sketch0 --> Problem  synth_4
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj13_sketch0 --> Problem  synth_9
Sketch conj8_sketch2 --> Problem  synth_7
Sketch conj8_sketch0 --> Problem  synth_8
Sketch conj14_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch1 --> Problem  synth_7
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch2 --> Problem  synth_5
Sketch conj5_term_sketch0 --> Problem  synth_7
Sketch conj6_sketch0 --> Problem  synth_7
Sketch conj14_sketch1 --> Problem  synth_5
Sketch conj2_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 471 seconds

Problem: synth_10
 HalfAdder.half_adder_carry lf4 true
 FullAdder.full_adder_carry lf4 false true
 FullAdder.full_adder_carry lf4 lf4 false
 FullAdder.full_adder_carry true lf4 false
 FullAdder.full_adder_carry lf4 true false
 lf4

Problem: synth_8
 HalfAdder.half_adder_carry lf3 true
 FullAdder.full_adder_carry lf3 false true
 FullAdder.full_adder_carry lf3 lf3 false
 FullAdder.full_adder_carry true lf3 false
 FullAdder.full_adder_carry lf3 true false
 lf3

Problem: synth_3

Problem: synth_9

Problem: synth_6
 HalfAdder.half_adder_carry lf2 true
 FullAdder.full_adder_carry lf2 false true
 FullAdder.full_adder_carry lf2 lf2 false
 FullAdder.full_adder_carry true lf2 false
 FullAdder.full_adder_carry lf2 true false
 lf2

Problem: synth_7
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)
 BV_full_adder_carry l0 l lf3
 BV_full_adder_carry l l0 lf3

Problem: synth_5
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)

Problem: synth_4
 FullAdder.full_adder_carry cin a0 a
 FullAdder.full_adder_carry a0 cin a
 FullAdder.full_adder_carry cin a a0
 FullAdder.full_adder_carry a cin a0
 FullAdder.full_adder_carry a0 a cin
 FullAdder.full_adder_carry a a0 cin

Problem: synth_1
 HalfAdder.half_adder_carry lf1 true
 FullAdder.full_adder_carry lf1 false true
 FullAdder.full_adder_carry lf1 lf1 false
 FullAdder.full_adder_carry true lf1 false
 FullAdder.full_adder_carry lf1 true false
 lf1

Problem: synth_2
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false)
 BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false)
 BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false)
 BV_full_adder_carry l0 l lf4
 BV_full_adder_carry l l0 lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 472 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool) (a0 : bool) (l0 : list bool) (cin : bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_2: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 false true).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 lf1 false).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry true lf1 false).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 true false).
Lemma candidate_7: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_8: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_9: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_10: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_11: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_12: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_13: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l l0 lf4).
Lemma candidate_14: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_15: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 false true).
Lemma candidate_16: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 lf1 false).
Lemma candidate_17: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry true lf1 false).
Lemma candidate_18: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 true false).
Lemma candidate_19: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_20: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_21: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_22: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_23: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_24: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_25: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_26: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_27: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_28: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_29: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_30: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_31: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_32: forall (lf2 : bool), @eq bool (HalfAdder.half_adder_carry lf2 true) lf2.
Lemma candidate_33: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 false true) lf2.
Lemma candidate_34: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 lf2 false) lf2.
Lemma candidate_35: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry true lf2 false) lf2.
Lemma candidate_36: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 true false) lf2.
Lemma candidate_37: forall (lf2 : bool), @eq bool (lf2) lf2.
Lemma candidate_38: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_39: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_40: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_41: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_42: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf3).
Lemma candidate_43: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l l0 lf3).
Lemma candidate_44: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_45: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_46: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_47: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_48: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf3).
Lemma candidate_49: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l l0 lf3).
Lemma candidate_50: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_51: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_52: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_53: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_54: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_55: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_56: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_57: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_58: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_59: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_60: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_61: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l l0 lf4).
Lemma candidate_62: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_63: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_64: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_65: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_66: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf3).
Lemma candidate_67: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l l0 lf3).
Lemma candidate_68: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (HalfAdder.half_adder_carry lf3 true)).
Lemma candidate_69: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 false true)).
Lemma candidate_70: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 lf3 false)).
Lemma candidate_71: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_72: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_73: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l (lf3)).
Lemma candidate_74: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_75: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_76: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_77: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_78: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_79: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_80: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_81: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_82: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_83: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_84: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf3).
Lemma candidate_85: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l l0 lf3).
Lemma candidate_86: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_87: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_88: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_89: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_90: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_91: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_92: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_93: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_94: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_95: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_96: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l0 l lf3).
Lemma candidate_97: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3) (BV_full_adder_carry l l0 lf3).
Lemma candidate_98: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_99: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_100: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_101: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_102: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_103: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_104: forall (lf2 : bool), @eq bool (HalfAdder.half_adder_carry lf2 true) lf2.
Lemma candidate_105: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 false true) lf2.
Lemma candidate_106: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 lf2 false) lf2.
Lemma candidate_107: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry true lf2 false) lf2.
Lemma candidate_108: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 true false) lf2.
Lemma candidate_109: forall (lf2 : bool), @eq bool (lf2) lf2.
Lemma candidate_110: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_111: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_112: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_113: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_114: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_115: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_116: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_117: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_118: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_119: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_120: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_121: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_122: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (HalfAdder.half_adder_carry lf4 true))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_123: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 false true))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_124: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_125: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_126: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_127: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (lf4)) (BV_full_adder_carry l0 l lf4).
Lemma candidate_128: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_129: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_130: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_131: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_132: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_133: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_134: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_135: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_136: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_137: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_138: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_139: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_140: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_141: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_142: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_143: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_144: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 a cin).
Lemma candidate_145: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a a0 cin).
Lemma candidate_146: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_147: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_148: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_149: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_150: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l0 l lf4).
Lemma candidate_151: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4) (BV_full_adder_carry l l0 lf4).
Lemma candidate_152: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_153: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_154: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_155: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_156: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_157: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 678 seconds
Duplicates removed: 90
Filtered by Quickchick: 0
Filtered by script: 23
Remaining: 44

Lemmas: 
Lemma candidate_2: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_34: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 lf2 false) lf2.
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 lf1 false).
Lemma candidate_35: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry true lf2 false) lf2.
Lemma candidate_33: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 false true) lf2.
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 true false).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry true lf1 false).
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 false true).
Lemma candidate_112: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_111: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_110: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_23: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_22: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_20: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_122: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (HalfAdder.half_adder_carry lf4 true))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_68: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (HalfAdder.half_adder_carry lf3 true)).
Lemma candidate_70: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 lf3 false)).
Lemma candidate_69: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 false true)).
Lemma candidate_41: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_40: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_39: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_38: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_11: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_10: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_9: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_8: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_124: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_123: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 false true))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_53: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_52: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_51: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_50: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_119: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_118: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_117: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_116: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_79: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_78: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_75: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_74: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_31: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_30: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_27: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_26: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_full_adder_carry_sym1_233

Number of Lemmas: 157
Number of Lemmas (after duplicates removed): 67
Number of Lemmas (after QuickChick used to filter): 67
* Number of Candidate Lemmas: 44

Time until ranking: 678
Time to complete: 2700

Stuck state true independent of hypotheses: true

Category 1:
Count = 2

Lemma candidate_38: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_8: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false)).

Category 2:
Count = 9

Lemma candidate_9: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false)).
Lemma candidate_119: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_118: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a0 a cin)).
Lemma candidate_117: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_116: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_79: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_78: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_75: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).
Lemma candidate_74: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0))   (BV_full_adder_carry l0 l (full_adder_carry a0 a cin)).

Category 3 (provable):
Count = 17

Lemma candidate_2: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_34: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 lf2 false) lf2.
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 lf1 false).
Lemma candidate_35: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry true lf2 false) lf2.
Lemma candidate_33: forall (lf2 : bool), @eq bool (FullAdder.full_adder_carry lf2 false true) lf2.
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 true false).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry true lf1 false).
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (FullAdder.full_adder_carry lf1 false true).
Lemma candidate_112: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_111: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry a0 cin a).
Lemma candidate_110: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a a0 cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_23: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry a cin a0).
Lemma candidate_22: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a a0).
Lemma candidate_20: forall (a : bool) (a0 : bool) (cin : bool), @eq bool (full_adder_carry a0 a cin) (FullAdder.full_adder_carry cin a0 a).
Lemma candidate_122: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (HalfAdder.half_adder_carry lf4 true))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_68: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (HalfAdder.half_adder_carry lf3 true)).
Lemma candidate_50: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).

Category 3 (not provable):
Count = 16

Lemma candidate_70: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 lf3 false)).
Lemma candidate_69: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 false true)).
Lemma candidate_41: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_40: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf3 true false)).
Lemma candidate_39: forall (lf3 : bool) (l : list bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf3)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf3 false)).
Lemma candidate_11: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_10: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l lf4)   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false)).
Lemma candidate_124: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_123: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 false true))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_53: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_52: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry lf4 true false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_51: forall (l : list bool) (lf4 : bool) (l0 : list bool), @eq bool   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry true lf4 false))   (BV_full_adder_carry l0 l lf4).
Lemma candidate_31: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_30: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a a0 cin)).
Lemma candidate_27: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l l0 (FullAdder.full_adder_carry a cin a0)).
Lemma candidate_26: forall (a : bool) (l : list bool) (a0 : bool) (cin : bool) (l0 : list bool), @eq bool (BV_full_adder_carry l0 l (full_adder_carry a0 a cin))   (BV_full_adder_carry l0 l (FullAdder.full_adder_carry a cin a0)).
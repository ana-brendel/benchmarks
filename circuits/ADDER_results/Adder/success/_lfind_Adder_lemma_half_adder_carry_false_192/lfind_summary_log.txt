LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_half_adder_carry_false_192

Number of Lemmas: 1241
Number of Lemmas (after duplicates removed): 452
Number of Lemmas (after QuickChick used to filter): 69
* Number of Candidate Lemmas: 52

Time until ranking: 3578
Time to complete: 5072

Stuck state true independent of hypotheses: true

Category 1:
Count = 14

Lemma candidate_55: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_56: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_916: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 false).
Lemma candidate_319: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_318: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_907: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_962: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_53: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_375: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a (BV_full_adder_sum l (@nil bool) lf3)).
Lemma candidate_951: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1118: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l lf6 false)).
Lemma candidate_1165: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_2: forall (a : bool) (l : list bool) (lf6 : list bool), forall _ : @eq BV (BV_full_adder_sum l lf6 false) l, @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_7: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.

Category 2:
Count = 7

Lemma candidate_1041: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool lf4 l).
Lemma candidate_3: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_51: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_4: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_48: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_953: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_955: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).

Category 3 (provable):
Count = 10

Lemma candidate_908: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_320: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_321: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_57: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_906: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_905: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_54: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_958: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)).
Lemma candidate_1162: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a))).
Lemma candidate_1164: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false))).

Category 3 (not provable):
Count = 21

Lemma candidate_914: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum lf6 l false).
Lemma candidate_5: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_430: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_47: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_49: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_426: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_1039: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_1037: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_43: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_429: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_961: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_425: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_957: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)).
Lemma candidate_427: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_959: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)).
Lemma candidate_52: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1166: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1163: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_763: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_761: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))).
Lemma candidate_1167: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_half_adder_carry_false_192
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_half_adder_carry_false_192
- Namespace: Circuits
- Proof name: BV_full_adder_sum_v_nil_false
- Theorem: Theorem BV_full_adder_sum_v_nil_false: forall v0 : BV, @eq BV (BV_full_adder_sum v0 nilbv false) v0.
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l)

* Hypothesis:
H : @eq BV (BV_full_adder_sum l (@nil bool) false) l
v : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
BV
bool

* Polymorphic Types:
list bool

* Variables:
l : list bool
a : bool

* Terms:
half_adder_carry a false : bool
@eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l) : Prop
false : bool
bool : Set
half_adder_sum a false : bool
BV_full_adder_sum l (@nil bool) false : BV
@cons bool a l : list bool
consbv (half_adder_sum a false)
  (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)) : BV
@nil bool : list bool
BV : Set
BV_full_adder_sum l (@nil bool) (half_adder_carry a false) : BV
list bool : Set
l : list bool
@eq BV (BV_full_adder_sum l (@nil bool) false) l : Prop
a : bool

* Functions:
half_adder_sum  : forall (_ : bool) (_ : bool), bool
list  : forall _ : Type, Type
half_adder_carry  : forall (_ : bool) (_ : bool), bool
consbv  : forall (_ : bool) (_ : BV), BV
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@nil  : forall A : Type, list A
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : bool = half_adder_carry a false
lf7 : bool = false
lf1 : BV = consbv (half_adder_sum a false)
  (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))
lf4 : bool = half_adder_sum a false
lf5 : list bool = @cons bool a l
lf2 : BV = BV_full_adder_sum l (@nil bool) (half_adder_carry a false)
lf6 : list bool = @nil bool

Generalizations:
Lemma conj1: forall (lf2 : BV) (lf5 : list bool) (lf4 : bool), @eq BV (consbv lf4 lf2) lf5.
Lemma conj3: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj4: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj5: forall (lf2 : BV) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 lf2) (@cons bool a l).
Lemma conj7: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma conj8: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma conj9: forall (lf2 : BV) (lf5 : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) lf5.
Lemma conj11: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj12: forall (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  lf5.
Lemma conj13: forall (lf2 : BV) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) (@cons bool a l).
Lemma conj15: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj16: forall (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj41: forall (lf2 : BV) (lf5 : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) lf5.
Lemma conj43: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj44: forall (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj45: forall (lf2 : BV) (l : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) (@cons bool a l).
Lemma conj47: forall (lf6 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj48: forall (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj67: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj68: forall (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj71: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj72: forall (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj75: forall (lf6 : list bool) (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj76: forall (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj79: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) 
  (@cons bool a l).
Lemma conj80: forall (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj99: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj100: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  lf5.
Lemma conj103: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj104: forall (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj107: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj108: forall (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma conj111: forall (lf6 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) 
  (@cons bool a l).
Lemma conj112: forall (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l).


<---VALIDITY CHECKS--->
Time elapsed: 151 seconds
Valid:
Lemma conj112: forall (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l).

Invalid:
Lemma conj111: forall (lf6 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) 
  (@cons bool a l).
Lemma conj108: forall (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma conj107: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj104: forall (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj103: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj100: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  lf5.
Lemma conj99: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj80: forall (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj79: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) 
  (@cons bool a l).
Lemma conj76: forall (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj75: forall (lf6 : list bool) (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj72: forall (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj71: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj68: forall (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj67: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj48: forall (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj47: forall (lf6 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj45: forall (lf2 : BV) (l : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) (@cons bool a l).
Lemma conj44: forall (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj43: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj41: forall (lf2 : BV) (lf5 : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) lf5.
Lemma conj16: forall (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj15: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj13: forall (lf2 : BV) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) (@cons bool a l).
Lemma conj12: forall (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  lf5.
Lemma conj11: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj9: forall (lf2 : BV) (lf5 : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) lf5.
Lemma conj8: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma conj7: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma conj5: forall (lf2 : BV) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 lf2) (@cons bool a l).
Lemma conj4: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj3: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj1: forall (lf2 : BV) (lf5 : list bool) (lf4 : bool), @eq BV (consbv lf4 lf2) lf5.

<---ADD IMPLICATIONS--->
Time elapsed: 220 seconds
Generalizations:
Lemma conj111: forall (lf6 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) 
  (@cons bool a l).
Lemma conj111_imp: forall (lf6 : list bool) (l : list bool) (a : bool), forall _ : @eq BV (BV_full_adder_sum l lf6 false) l,
@eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) 
  (@cons bool a l).
Lemma conj108: forall (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma conj107: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj104: forall (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj103: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj100: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  lf5.
Lemma conj99: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj80: forall (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj79: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) 
  (@cons bool a l).
Lemma conj76: forall (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj75: forall (lf6 : list bool) (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj72: forall (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj71: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj68: forall (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj67: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj48: forall (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj47: forall (lf6 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj45: forall (lf2 : BV) (l : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) (@cons bool a l).
Lemma conj44: forall (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj43: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj41: forall (lf2 : BV) (lf5 : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) lf5.
Lemma conj16: forall (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj15: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj13: forall (lf2 : BV) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) (@cons bool a l).
Lemma conj12: forall (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  lf5.
Lemma conj11: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj9: forall (lf2 : BV) (lf5 : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) lf5.
Lemma conj8: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma conj7: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma conj5: forall (lf2 : BV) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 lf2) (@cons bool a l).
Lemma conj4: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj3: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj1: forall (lf2 : BV) (lf5 : list bool) (lf4 : bool), @eq BV (consbv lf4 lf2) lf5.


<---VALIDITY CHECKS--->
Time elapsed: 303 seconds
Valid:
Lemma conj111_imp: forall (lf6 : list bool) (l : list bool) (a : bool), forall _ : @eq BV (BV_full_adder_sum l lf6 false) l,
@eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) 
  (@cons bool a l).

Invalid:
Lemma conj1: forall (lf2 : BV) (lf5 : list bool) (lf4 : bool), @eq BV (consbv lf4 lf2) lf5.
Lemma conj3: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj4: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj5: forall (lf2 : BV) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 lf2) (@cons bool a l).
Lemma conj7: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma conj8: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma conj9: forall (lf2 : BV) (lf5 : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) lf5.
Lemma conj11: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj12: forall (lf5 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  lf5.
Lemma conj13: forall (lf2 : BV) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv (half_adder_sum a lf7) lf2) (@cons bool a l).
Lemma conj15: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj16: forall (l : list bool) (lf7 : bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj41: forall (lf2 : BV) (lf5 : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) lf5.
Lemma conj43: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma conj44: forall (lf5 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma conj45: forall (lf2 : BV) (l : list bool) (a : bool), @eq BV (consbv (half_adder_sum a false) lf2) (@cons bool a l).
Lemma conj47: forall (lf6 : list bool) (l : list bool) (a : bool) (lf3 : bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l).
Lemma conj48: forall (l : list bool) (a : bool) (lf3 : bool), @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l).
Lemma conj67: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj68: forall (lf5 : list bool) (lf4 : bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj71: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj72: forall (lf4 : bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj75: forall (lf6 : list bool) (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma conj76: forall (lf5 : list bool) (lf7 : bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma conj79: forall (lf6 : list bool) (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) 
  (@cons bool a l).
Lemma conj80: forall (l : list bool) (lf7 : bool) (a : bool), @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l).
Lemma conj99: forall (lf6 : list bool) (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj100: forall (lf5 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  lf5.
Lemma conj103: forall (lf6 : list bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj104: forall (lf4 : bool) (l : list bool) (a : bool), @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (@cons bool a l).
Lemma conj107: forall (lf6 : list bool) (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma conj108: forall (lf5 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma conj111: forall (lf6 : list bool) (l : list bool) (a : bool), @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) 
  (@cons bool a l).


<---CREATE SKETCHES--->
Time elapsed: 304 seconds
Sketches:
Sketch conj1_sketch0 : @eq BV (##hole##) lf5
Sketch conj1_term_sketch0 : @eq BV (consbv lf4 lf2) (##hole##)
Sketch conj3_sketch0 : @eq BV (##hole##) lf5
Sketch conj3_sketch1 : @eq BV (consbv lf4 (##hole##)) lf5
Sketch conj3_term_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (##hole##)
Sketch conj3_term_sketch1 : @eq BV (BV_full_adder_sum l lf6 lf3) (##hole##)
Sketch conj4_sketch0 : @eq BV (##hole##) lf5
Sketch conj4_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l (##hole##) lf3)) lf5
Sketch conj4_sketch2 : @eq BV (consbv lf4 (##hole##)) lf5
Sketch conj4_term_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (##hole##)
Sketch conj4_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj4_term_sketch2 : @eq BV (BV_full_adder_sum l (@nil bool) lf3) (##hole##)
Sketch conj5_sketch0 : @eq BV (consbv lf4 lf2) (##hole##)
Sketch conj5_sketch1 : @eq BV (##hole##) (@cons bool a l)
Sketch conj5_term_sketch0 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj5_term_sketch1 : @eq BV (consbv lf4 lf2) (##hole##)
Sketch conj7_sketch0 : @eq BV (##hole##) (@cons bool a l)
Sketch conj7_sketch1 : @eq BV (consbv lf4 (##hole##)) (@cons bool a l)
Sketch conj7_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (##hole##)
Sketch conj7_term_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (##hole##)
Sketch conj7_term_sketch1 : @eq BV (BV_full_adder_sum l lf6 lf3) (##hole##)
Sketch conj7_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj8_sketch0 : @eq BV (##hole##) (@cons bool a l)
Sketch conj8_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (##hole##)
Sketch conj8_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l (##hole##) lf3)) (@cons bool a l)
Sketch conj8_sketch3 : @eq BV (consbv lf4 (##hole##)) (@cons bool a l)
Sketch conj8_term_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (##hole##)
Sketch conj8_term_sketch1 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj8_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj8_term_sketch3 : @eq BV (BV_full_adder_sum l (@nil bool) lf3) (##hole##)
Sketch conj9_sketch0 : @eq BV (consbv (##hole##) lf2) lf5
Sketch conj9_sketch1 : @eq BV (##hole##) lf5
Sketch conj9_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj9_term_sketch1 : @eq BV (consbv (half_adder_sum a lf7) lf2) (##hole##)
Sketch conj11_sketch0 : @eq BV (consbv (##hole##) (BV_full_adder_sum l lf6 lf3)) lf5
Sketch conj11_sketch1 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) lf5
Sketch conj11_sketch2 : @eq BV (##hole##) lf5
Sketch conj11_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj11_term_sketch1 : @eq BV (BV_full_adder_sum l lf6 lf3) (##hole##)
Sketch conj11_term_sketch2 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (##hole##)
Sketch conj12_sketch0 : @eq BV (consbv (##hole##) (BV_full_adder_sum l (@nil bool) lf3)) lf5
Sketch conj12_sketch1 : @eq BV (##hole##) lf5
Sketch conj12_sketch2 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (##hole##) lf3))
  lf5
Sketch conj12_sketch3 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) lf5
Sketch conj12_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj12_term_sketch1 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (##hole##)
Sketch conj12_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj12_term_sketch3 : @eq BV (BV_full_adder_sum l (@nil bool) lf3) (##hole##)
Sketch conj13_sketch0 : @eq BV (consbv (##hole##) lf2) (@cons bool a l)
Sketch conj13_sketch1 : @eq BV (consbv (half_adder_sum a lf7) lf2) (##hole##)
Sketch conj13_sketch2 : @eq BV (##hole##) (@cons bool a l)
Sketch conj13_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj13_term_sketch1 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj13_term_sketch2 : @eq BV (consbv (half_adder_sum a lf7) lf2) (##hole##)
Sketch conj15_sketch0 : @eq BV (consbv (##hole##) (BV_full_adder_sum l lf6 lf3)) (@cons bool a l)
Sketch conj15_sketch1 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) (@cons bool a l)
Sketch conj15_sketch2 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (##hole##)
Sketch conj15_sketch3 : @eq BV (##hole##) (@cons bool a l)
Sketch conj15_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj15_term_sketch1 : @eq BV (BV_full_adder_sum l lf6 lf3) (##hole##)
Sketch conj15_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj15_term_sketch3 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))
  (##hole##)
Sketch conj16_sketch0 : @eq BV (consbv (##hole##) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l)
Sketch conj16_sketch1 : @eq BV (##hole##) (@cons bool a l)
Sketch conj16_sketch2 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (##hole##)
Sketch conj16_sketch3 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (##hole##) lf3))
  (@cons bool a l)
Sketch conj16_sketch4 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) (@cons bool a l)
Sketch conj16_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj16_term_sketch1 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))
  (##hole##)
Sketch conj16_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj16_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj16_term_sketch4 : @eq BV (BV_full_adder_sum l (@nil bool) lf3) (##hole##)
Sketch conj41_sketch0 : @eq BV (consbv (half_adder_sum a (##hole##)) lf2) lf5
Sketch conj41_sketch1 : @eq BV (##hole##) lf5
Sketch conj41_sketch2 : @eq BV (consbv (##hole##) lf2) lf5
Sketch conj41_term_sketch0 : @eq bool false (##hole##)
Sketch conj41_term_sketch1 : @eq BV (consbv (half_adder_sum a false) lf2) (##hole##)
Sketch conj41_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj43_sketch0 : @eq BV (##hole##) lf5
Sketch conj43_sketch1 : @eq BV (consbv (half_adder_sum a (##hole##)) (BV_full_adder_sum l lf6 lf3))
  lf5
Sketch conj43_sketch2 : @eq BV (consbv (##hole##) (BV_full_adder_sum l lf6 lf3)) lf5
Sketch conj43_sketch3 : @eq BV (consbv (half_adder_sum a false) (##hole##)) lf5
Sketch conj43_term_sketch0 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (##hole##)
Sketch conj43_term_sketch1 : @eq bool false (##hole##)
Sketch conj43_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj43_term_sketch3 : @eq BV (BV_full_adder_sum l lf6 lf3) (##hole##)
Sketch conj44_sketch0 : @eq BV
  (consbv (half_adder_sum a (##hole##)) (BV_full_adder_sum l (@nil bool) lf3))
  lf5
Sketch conj44_sketch1 : @eq BV (consbv (##hole##) (BV_full_adder_sum l (@nil bool) lf3)) lf5
Sketch conj44_sketch2 : @eq BV (##hole##) lf5
Sketch conj44_sketch3 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l (##hole##) lf3))
  lf5
Sketch conj44_sketch4 : @eq BV (consbv (half_adder_sum a false) (##hole##)) lf5
Sketch conj44_term_sketch0 : @eq bool false (##hole##)
Sketch conj44_term_sketch1 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj44_term_sketch2 : @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (##hole##)
Sketch conj44_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj44_term_sketch4 : @eq BV (BV_full_adder_sum l (@nil bool) lf3) (##hole##)
Sketch conj45_sketch0 : @eq BV (consbv (half_adder_sum a (##hole##)) lf2) (@cons bool a l)
Sketch conj45_sketch1 : @eq BV (##hole##) (@cons bool a l)
Sketch conj45_sketch2 : @eq BV (consbv (##hole##) lf2) (@cons bool a l)
Sketch conj45_sketch3 : @eq BV (consbv (half_adder_sum a false) lf2) (##hole##)
Sketch conj45_term_sketch0 : @eq bool false (##hole##)
Sketch conj45_term_sketch1 : @eq BV (consbv (half_adder_sum a false) lf2) (##hole##)
Sketch conj45_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj45_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj47_sketch0 : @eq BV (##hole##) (@cons bool a l)
Sketch conj47_sketch1 : @eq BV (consbv (half_adder_sum a (##hole##)) (BV_full_adder_sum l lf6 lf3))
  (@cons bool a l)
Sketch conj47_sketch2 : @eq BV (consbv (##hole##) (BV_full_adder_sum l lf6 lf3)) (@cons bool a l)
Sketch conj47_sketch3 : @eq BV (consbv (half_adder_sum a false) (##hole##)) (@cons bool a l)
Sketch conj47_sketch4 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (##hole##)
Sketch conj47_term_sketch0 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))
  (##hole##)
Sketch conj47_term_sketch1 : @eq bool false (##hole##)
Sketch conj47_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj47_term_sketch3 : @eq BV (BV_full_adder_sum l lf6 lf3) (##hole##)
Sketch conj47_term_sketch4 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj48_sketch0 : @eq BV
  (consbv (half_adder_sum a (##hole##)) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l)
Sketch conj48_sketch1 : @eq BV (consbv (##hole##) (BV_full_adder_sum l (@nil bool) lf3))
  (@cons bool a l)
Sketch conj48_sketch2 : @eq BV (##hole##) (@cons bool a l)
Sketch conj48_sketch3 : @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (##hole##)
Sketch conj48_sketch4 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l (##hole##) lf3))
  (@cons bool a l)
Sketch conj48_sketch5 : @eq BV (consbv (half_adder_sum a false) (##hole##)) (@cons bool a l)
Sketch conj48_term_sketch0 : @eq bool false (##hole##)
Sketch conj48_term_sketch1 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj48_term_sketch2 : @eq BV
  (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))
  (##hole##)
Sketch conj48_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj48_term_sketch4 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj48_term_sketch5 : @eq BV (BV_full_adder_sum l (@nil bool) lf3) (##hole##)
Sketch conj67_sketch0 : @eq BV (consbv lf4 (##hole##)) lf5
Sketch conj67_sketch1 : @eq BV (##hole##) lf5
Sketch conj67_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (##hole##))) lf5
Sketch conj67_term_sketch0 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7)) (##hole##)
Sketch conj67_term_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (##hole##)
Sketch conj67_term_sketch2 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj68_sketch0 : @eq BV (##hole##) lf5
Sketch conj68_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l (##hole##) (half_adder_carry a lf7)))
  lf5
Sketch conj68_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (##hole##))) lf5
Sketch conj68_sketch3 : @eq BV (consbv lf4 (##hole##)) lf5
Sketch conj68_term_sketch0 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (##hole##)
Sketch conj68_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj68_term_sketch2 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj68_term_sketch3 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)) (##hole##)
Sketch conj71_sketch0 : @eq BV (consbv lf4 (##hole##)) (@cons bool a l)
Sketch conj71_sketch1 : @eq BV (##hole##) (@cons bool a l)
Sketch conj71_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (##hole##)
Sketch conj71_sketch3 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (##hole##))) (@cons bool a l)
Sketch conj71_term_sketch0 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7)) (##hole##)
Sketch conj71_term_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (##hole##)
Sketch conj71_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj71_term_sketch3 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj72_sketch0 : @eq BV (##hole##) (@cons bool a l)
Sketch conj72_sketch1 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (##hole##)
Sketch conj72_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l (##hole##) (half_adder_carry a lf7)))
  (@cons bool a l)
Sketch conj72_sketch3 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (##hole##)))
  (@cons bool a l)
Sketch conj72_sketch4 : @eq BV (consbv lf4 (##hole##)) (@cons bool a l)
Sketch conj72_term_sketch0 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (##hole##)
Sketch conj72_term_sketch1 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj72_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj72_term_sketch3 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj72_term_sketch4 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)) (##hole##)
Sketch conj75_sketch0 : @eq BV (##hole##) lf5
Sketch conj75_sketch1 : @eq BV (consbv (##hole##) (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  lf5
Sketch conj75_sketch2 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) lf5
Sketch conj75_sketch3 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 (##hole##)))
  lf5
Sketch conj75_term_sketch0 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) (##hole##)
Sketch conj75_term_sketch1 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj75_term_sketch2 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7)) (##hole##)
Sketch conj75_term_sketch3 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj76_sketch0 : @eq BV
  (consbv (##hole##)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5
Sketch conj76_sketch1 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (##hole##) (half_adder_carry a lf7))) lf5
Sketch conj76_sketch2 : @eq BV
  (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) (##hole##)))
  lf5
Sketch conj76_sketch3 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) lf5
Sketch conj76_sketch4 : @eq BV (##hole##) lf5
Sketch conj76_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj76_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj76_term_sketch2 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj76_term_sketch3 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)) (##hole##)
Sketch conj76_term_sketch4 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) (##hole##)
Sketch conj79_sketch0 : @eq BV (##hole##) (@cons bool a l)
Sketch conj79_sketch1 : @eq BV (consbv (##hole##) (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))
  (@cons bool a l)
Sketch conj79_sketch2 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) (@cons bool a l)
Sketch conj79_sketch3 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) (##hole##)
Sketch conj79_sketch4 : @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 (##hole##)))
  (@cons bool a l)
Sketch conj79_term_sketch0 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) (##hole##)
Sketch conj79_term_sketch1 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj79_term_sketch2 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7)) (##hole##)
Sketch conj79_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj79_term_sketch4 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj80_sketch0 : @eq BV
  (consbv (##hole##)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))
  (@cons bool a l)
Sketch conj80_sketch1 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) (##hole##)
Sketch conj80_sketch2 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (##hole##) (half_adder_carry a lf7)))
  (@cons bool a l)
Sketch conj80_sketch3 : @eq BV
  (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) (##hole##)))
  (@cons bool a l)
Sketch conj80_sketch4 : @eq BV (consbv (half_adder_sum a lf7) (##hole##)) (@cons bool a l)
Sketch conj80_sketch5 : @eq BV (##hole##) (@cons bool a l)
Sketch conj80_term_sketch0 : @eq bool (half_adder_sum a lf7) (##hole##)
Sketch conj80_term_sketch1 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj80_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj80_term_sketch3 : @eq bool (half_adder_carry a lf7) (##hole##)
Sketch conj80_term_sketch4 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)) (##hole##)
Sketch conj80_term_sketch5 : @eq BV
  (consbv (half_adder_sum a lf7)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) (##hole##)
Sketch conj99_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (##hole##))) lf5
Sketch conj99_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a (##hole##))))
  lf5
Sketch conj99_sketch2 : @eq BV (consbv lf4 (##hole##)) lf5
Sketch conj99_sketch3 : @eq BV (##hole##) lf5
Sketch conj99_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj99_term_sketch1 : @eq bool false (##hole##)
Sketch conj99_term_sketch2 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false)) (##hole##)
Sketch conj99_term_sketch3 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (##hole##)
Sketch conj100_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (##hole##))) lf5
Sketch conj100_sketch1 : @eq BV
  (consbv lf4
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a (##hole##)))) lf5
Sketch conj100_sketch2 : @eq BV (##hole##) lf5
Sketch conj100_sketch3 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (##hole##) (half_adder_carry a false)))
  lf5
Sketch conj100_sketch4 : @eq BV (consbv lf4 (##hole##)) lf5
Sketch conj100_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj100_term_sketch1 : @eq bool false (##hole##)
Sketch conj100_term_sketch2 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (##hole##)
Sketch conj100_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj100_term_sketch4 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))
  (##hole##)
Sketch conj103_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (##hole##))) (@cons bool a l)
Sketch conj103_sketch1 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a (##hole##))))
  (@cons bool a l)
Sketch conj103_sketch2 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (##hole##)
Sketch conj103_sketch3 : @eq BV (consbv lf4 (##hole##)) (@cons bool a l)
Sketch conj103_sketch4 : @eq BV (##hole##) (@cons bool a l)
Sketch conj103_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj103_term_sketch1 : @eq bool false (##hole##)
Sketch conj103_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj103_term_sketch3 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false)) (##hole##)
Sketch conj103_term_sketch4 : @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (##hole##)
Sketch conj104_sketch0 : @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (##hole##)))
  (@cons bool a l)
Sketch conj104_sketch1 : @eq BV
  (consbv lf4
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a (##hole##))))
  (@cons bool a l)
Sketch conj104_sketch2 : @eq BV (##hole##) (@cons bool a l)
Sketch conj104_sketch3 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (##hole##)
Sketch conj104_sketch4 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (##hole##) (half_adder_carry a false)))
  (@cons bool a l)
Sketch conj104_sketch5 : @eq BV (consbv lf4 (##hole##)) (@cons bool a l)
Sketch conj104_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj104_term_sketch1 : @eq bool false (##hole##)
Sketch conj104_term_sketch2 : @eq BV
  (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))
  (##hole##)
Sketch conj104_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj104_term_sketch4 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj104_term_sketch5 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))
  (##hole##)
Sketch conj107_sketch0 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 (##hole##)))
  lf5
Sketch conj107_sketch1 : @eq BV
  (consbv (half_adder_sum a (##hole##))
     (BV_full_adder_sum l lf6 (half_adder_carry a (##hole##)))) lf5
Sketch conj107_sketch2 : @eq BV
  (consbv (##hole##) (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  lf5
Sketch conj107_sketch3 : @eq BV (consbv (half_adder_sum a false) (##hole##)) lf5
Sketch conj107_sketch4 : @eq BV (##hole##) lf5
Sketch conj107_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj107_term_sketch1 : @eq bool false (##hole##)
Sketch conj107_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj107_term_sketch3 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false)) (##hole##)
Sketch conj107_term_sketch4 : @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) (##hole##)
Sketch conj108_sketch0 : @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (##hole##))) lf5
Sketch conj108_sketch1 : @eq BV
  (consbv (half_adder_sum a (##hole##))
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a (##hole##)))) lf5
Sketch conj108_sketch2 : @eq BV
  (consbv (##hole##)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5
Sketch conj108_sketch3 : @eq BV (##hole##) lf5
Sketch conj108_sketch4 : @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (##hole##) (half_adder_carry a false))) lf5
Sketch conj108_sketch5 : @eq BV (consbv (half_adder_sum a false) (##hole##)) lf5
Sketch conj108_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj108_term_sketch1 : @eq bool false (##hole##)
Sketch conj108_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj108_term_sketch3 : @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) (##hole##)
Sketch conj108_term_sketch4 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj108_term_sketch5 : @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))
  (##hole##)
Sketch conj111_sketch0 : @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 (##hole##)))
  (@cons bool a l)
Sketch conj111_sketch1 : @eq BV
  (consbv (half_adder_sum a (##hole##))
     (BV_full_adder_sum l lf6 (half_adder_carry a (##hole##))))
  (@cons bool a l)
Sketch conj111_sketch2 : @eq BV
  (consbv (##hole##) (BV_full_adder_sum l lf6 (half_adder_carry a false)))
  (@cons bool a l)
Sketch conj111_sketch3 : @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) (##hole##)
Sketch conj111_sketch4 : @eq BV (consbv (half_adder_sum a false) (##hole##)) (@cons bool a l)
Sketch conj111_sketch5 : @eq BV (##hole##) (@cons bool a l)
Sketch conj111_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj111_term_sketch1 : @eq bool false (##hole##)
Sketch conj111_term_sketch2 : @eq bool (half_adder_sum a false) (##hole##)
Sketch conj111_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj111_term_sketch4 : @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false)) (##hole##)
Sketch conj111_term_sketch5 : @eq BV
  (consbv (half_adder_sum a false)
     (BV_full_adder_sum l lf6 (half_adder_carry a false))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2343 seconds
Problems per Sketch:
Sketch conj48_sketch3 --> Problem  synth_50
Sketch conj44_sketch2 --> Problem  synth_1
Sketch conj15_term_sketch2 --> Problem  synth_12
Sketch conj108_term_sketch2 --> Problem  synth_37
Sketch conj75_sketch1 --> Problem  synth_65
Sketch conj80_sketch1 --> Problem  synth_76
Sketch conj13_term_sketch1 --> Problem  synth_12
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj104_sketch2 --> Problem  synth_11
Sketch conj7_term_sketch1 --> Problem  synth_5
Sketch conj67_sketch0 --> Problem  synth_3
Sketch conj12_term_sketch0 --> Problem  synth_18
Sketch conj71_term_sketch2 --> Problem  synth_12
Sketch conj80_term_sketch2 --> Problem  synth_8
Sketch conj5_term_sketch0 --> Problem  synth_12
Sketch conj104_term_sketch2 --> Problem  synth_85
Sketch conj7_sketch2 --> Problem  synth_14
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj76_sketch0 --> Problem  synth_68
Sketch conj47_sketch2 --> Problem  synth_28
Sketch conj43_term_sketch1 --> Problem  synth_35
Sketch conj13_term_sketch0 --> Problem  synth_18
Sketch conj100_sketch0 --> Problem  synth_57
Sketch conj107_term_sketch3 --> Problem  synth_81
Sketch conj15_term_sketch3 --> Problem  synth_22
Sketch conj107_sketch2 --> Problem  synth_90
Sketch conj48_term_sketch0 --> Problem  synth_35
Sketch conj43_sketch2 --> Problem  synth_20
Sketch conj8_term_sketch2 --> Problem  synth_8
Sketch conj100_sketch4 --> Problem  synth_3
Sketch conj80_term_sketch0 --> Problem  synth_18
Sketch conj3_term_sketch1 --> Problem  synth_5
Sketch conj76_sketch4 --> Problem  synth_1
Sketch conj99_sketch0 --> Problem  synth_52
Sketch conj15_sketch1 --> Problem  synth_29
Sketch conj67_term_sketch1 --> Problem  synth_54
Sketch conj72_term_sketch2 --> Problem  synth_8
Sketch conj67_term_sketch0 --> Problem  synth_53
Sketch conj16_sketch2 --> Problem  synth_32
Sketch conj72_sketch0 --> Problem  synth_11
Sketch conj68_sketch1 --> Problem  synth_56
Sketch conj47_term_sketch1 --> Problem  synth_35
Sketch conj12_sketch3 --> Problem  synth_21
Sketch conj44_sketch1 --> Problem  synth_23
Sketch conj76_sketch3 --> Problem  synth_21
Sketch conj8_sketch2 --> Problem  synth_16
Sketch conj45_sketch0 --> Problem  synth_44
Sketch conj68_sketch3 --> Problem  synth_3
Sketch conj9_sketch1 --> Problem  synth_1
Sketch conj4_term_sketch0 --> Problem  synth_7
Sketch conj107_term_sketch0 --> Problem  synth_80
Sketch conj48_term_sketch3 --> Problem  synth_12
Sketch conj79_term_sketch2 --> Problem  synth_53
Sketch conj75_term_sketch0 --> Problem  synth_67
Sketch conj41_sketch1 --> Problem  synth_1
Sketch conj104_sketch4 --> Problem  synth_88
Sketch conj41_sketch0 --> Problem  synth_34
Sketch conj108_sketch3 --> Problem  synth_1
Sketch conj44_term_sketch0 --> Problem  synth_35
Sketch conj103_term_sketch4 --> Problem  synth_82
Sketch conj16_term_sketch3 --> Problem  synth_8
Sketch conj71_sketch0 --> Problem  synth_13
Sketch conj103_sketch1 --> Problem  synth_61
Sketch conj79_sketch1 --> Problem  synth_72
Sketch conj108_term_sketch3 --> Problem  synth_11
Sketch conj80_term_sketch3 --> Problem  synth_55
Sketch conj111_term_sketch1 --> Problem  synth_35
Sketch conj15_term_sketch0 --> Problem  synth_18
Sketch conj100_term_sketch4 --> Problem  synth_47
Sketch conj47_term_sketch3 --> Problem  synth_5
Sketch conj12_sketch0 --> Problem  synth_23
Sketch conj7_sketch1 --> Problem  synth_13
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj16_term_sketch1 --> Problem  synth_25
Sketch conj79_term_sketch4 --> Problem  synth_55
Sketch conj8_sketch1 --> Problem  synth_15
Sketch conj72_sketch2 --> Problem  synth_63
Sketch conj15_sketch3 --> Problem  synth_11
Sketch conj104_term_sketch0 --> Problem  synth_80
Sketch conj80_sketch3 --> Problem  synth_78
Sketch conj8_term_sketch1 --> Problem  synth_12
Sketch conj43_sketch0 --> Problem  synth_1
Sketch conj76_sketch1 --> Problem  synth_69
Sketch conj104_term_sketch1 --> Problem  synth_35
Sketch conj13_term_sketch2 --> Problem  synth_19
Sketch conj107_term_sketch2 --> Problem  synth_37
Sketch conj45_sketch1 --> Problem  synth_11
Sketch conj104_term_sketch5 --> Problem  synth_47
Sketch conj16_sketch1 --> Problem  synth_11
Sketch conj12_sketch1 --> Problem  synth_1
Sketch conj4_term_sketch2 --> Problem  synth_9
Sketch conj13_sketch2 --> Problem  synth_11
Sketch conj12_sketch2 --> Problem  synth_24
Sketch conj45_term_sketch0 --> Problem  synth_35
Sketch conj7_term_sketch0 --> Problem  synth_4
Sketch conj75_sketch0 --> Problem  synth_1
Sketch conj67_sketch1 --> Problem  synth_1
Sketch conj4_term_sketch1 --> Problem  synth_8
Sketch conj107_sketch4 --> Problem  synth_1
Sketch conj41_term_sketch0 --> Problem  synth_35
Sketch conj108_term_sketch4 --> Problem  synth_8
Sketch conj68_sketch0 --> Problem  synth_1
Sketch conj45_sketch3 --> Problem  synth_45
Sketch conj100_term_sketch3 --> Problem  synth_8
Sketch conj80_term_sketch1 --> Problem  synth_12
Sketch conj79_sketch4 --> Problem  synth_74
Sketch conj100_term_sketch2 --> Problem  synth_85
Sketch conj80_sketch4 --> Problem  synth_29
Sketch conj71_term_sketch1 --> Problem  synth_54
Sketch conj11_sketch2 --> Problem  synth_1
Sketch conj75_sketch3 --> Problem  synth_66
Sketch conj4_sketch2 --> Problem  synth_3
Sketch conj43_sketch3 --> Problem  synth_39
Sketch conj80_term_sketch5 --> Problem  synth_71
Sketch conj5_sketch0 --> Problem  synth_10
Sketch conj103_sketch0 --> Problem  synth_61
Sketch conj72_term_sketch3 --> Problem  synth_55
Sketch conj43_sketch1 --> Problem  synth_38
Sketch conj72_sketch3 --> Problem  synth_64
Sketch conj79_term_sketch3 --> Problem  synth_12
Sketch conj71_sketch1 --> Problem  synth_11
Sketch conj7_term_sketch2 --> Problem  synth_12
Sketch conj76_term_sketch3 --> Problem  synth_59
Sketch conj100_sketch1 --> Problem  synth_83
Sketch conj99_sketch2 --> Problem  synth_3
Sketch conj107_term_sketch4 --> Problem  synth_91
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj47_term_sketch0 --> Problem  synth_40
Sketch conj99_term_sketch2 --> Problem  synth_81
Sketch conj99_term_sketch0 --> Problem  synth_80
Sketch conj103_sketch4 --> Problem  synth_11
Sketch conj68_term_sketch3 --> Problem  synth_59
Sketch conj103_term_sketch3 --> Problem  synth_81
Sketch conj16_sketch4 --> Problem  synth_29
Sketch conj75_term_sketch3 --> Problem  synth_55
Sketch conj48_term_sketch5 --> Problem  synth_9
Sketch conj80_sketch0 --> Problem  synth_75
Sketch conj44_term_sketch1 --> Problem  synth_37
Sketch conj48_sketch1 --> Problem  synth_31
Sketch conj76_term_sketch0 --> Problem  synth_18
Sketch conj111_term_sketch4 --> Problem  synth_81
Sketch conj107_sketch3 --> Problem  synth_39
Sketch conj47_sketch4 --> Problem  synth_48
Sketch conj72_term_sketch1 --> Problem  synth_12
Sketch conj47_term_sketch2 --> Problem  synth_37
Sketch conj12_term_sketch3 --> Problem  synth_9
Sketch conj76_term_sketch2 --> Problem  synth_55
Sketch conj111_term_sketch2 --> Problem  synth_37
Sketch conj8_sketch3 --> Problem  synth_13
Sketch conj75_term_sketch2 --> Problem  synth_53
Sketch conj41_term_sketch1 --> Problem  synth_36
Sketch conj75_term_sketch1 --> Problem  synth_18
Sketch conj99_term_sketch3 --> Problem  synth_82
Sketch conj100_sketch3 --> Problem  synth_84
Sketch conj68_sketch2 --> Problem  synth_57
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj103_term_sketch2 --> Problem  synth_12
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj79_sketch3 --> Problem  synth_73
Sketch conj11_term_sketch2 --> Problem  synth_22
Sketch conj111_term_sketch5 --> Problem  synth_91
Sketch conj72_sketch1 --> Problem  synth_62
Sketch conj9_term_sketch0 --> Problem  synth_18
Sketch conj68_term_sketch2 --> Problem  synth_55
Sketch conj80_sketch2 --> Problem  synth_77
Sketch conj111_sketch3 --> Problem  synth_97
Sketch conj11_term_sketch0 --> Problem  synth_18
Sketch conj107_sketch1 --> Problem  synth_89
Sketch conj68_term_sketch1 --> Problem  synth_8
Sketch conj48_sketch4 --> Problem  synth_51
Sketch conj72_sketch4 --> Problem  synth_13
Sketch conj1_term_sketch0 --> Problem  synth_2
Sketch conj103_term_sketch1 --> Problem  synth_35
Sketch conj16_term_sketch4 --> Problem  synth_9
Sketch conj47_sketch3 --> Problem  synth_47
Sketch conj108_term_sketch0 --> Problem  synth_80
Sketch conj103_sketch3 --> Problem  synth_13
Sketch conj80_sketch5 --> Problem  synth_11
Sketch conj44_sketch0 --> Problem  synth_41
Sketch conj15_term_sketch1 --> Problem  synth_5
Sketch conj100_term_sketch0 --> Problem  synth_80
Sketch conj48_sketch5 --> Problem  synth_47
Sketch conj80_term_sketch4 --> Problem  synth_59
Sketch conj47_sketch1 --> Problem  synth_46
Sketch conj108_sketch1 --> Problem  synth_92
Sketch conj12_term_sketch1 --> Problem  synth_25
Sketch conj9_sketch0 --> Problem  synth_17
Sketch conj108_sketch0 --> Problem  synth_92
Sketch conj41_sketch2 --> Problem  synth_17
Sketch conj99_term_sketch1 --> Problem  synth_35
Sketch conj108_sketch2 --> Problem  synth_93
Sketch conj15_sketch2 --> Problem  synth_30
Sketch conj104_sketch5 --> Problem  synth_13
Sketch conj108_term_sketch1 --> Problem  synth_35
Sketch conj68_term_sketch0 --> Problem  synth_58
Sketch conj76_term_sketch4 --> Problem  synth_71
Sketch conj4_sketch1 --> Problem  synth_6
Sketch conj108_sketch4 --> Problem  synth_94
Sketch conj16_sketch0 --> Problem  synth_31
Sketch conj13_sketch1 --> Problem  synth_27
Sketch conj47_term_sketch4 --> Problem  synth_12
Sketch conj9_term_sketch1 --> Problem  synth_19
Sketch conj99_sketch1 --> Problem  synth_79
Sketch conj16_term_sketch0 --> Problem  synth_18
Sketch conj111_sketch1 --> Problem  synth_95
Sketch conj111_sketch5 --> Problem  synth_11
Sketch conj11_sketch0 --> Problem  synth_20
Sketch conj107_sketch0 --> Problem  synth_89
Sketch conj45_term_sketch2 --> Problem  synth_37
Sketch conj108_sketch5 --> Problem  synth_39
Sketch conj44_term_sketch2 --> Problem  synth_43
Sketch conj16_sketch3 --> Problem  synth_33
Sketch conj76_term_sketch1 --> Problem  synth_8
Sketch conj5_term_sketch1 --> Problem  synth_2
Sketch conj111_term_sketch3 --> Problem  synth_12
Sketch conj79_term_sketch1 --> Problem  synth_18
Sketch conj7_sketch0 --> Problem  synth_11
Sketch conj11_sketch1 --> Problem  synth_21
Sketch conj71_sketch2 --> Problem  synth_60
Sketch conj111_term_sketch0 --> Problem  synth_80
Sketch conj72_term_sketch4 --> Problem  synth_59
Sketch conj111_sketch2 --> Problem  synth_96
Sketch conj75_sketch2 --> Problem  synth_21
Sketch conj48_term_sketch2 --> Problem  synth_43
Sketch conj103_term_sketch0 --> Problem  synth_80
Sketch conj3_sketch1 --> Problem  synth_3
Sketch conj104_sketch0 --> Problem  synth_64
Sketch conj103_sketch2 --> Problem  synth_86
Sketch conj16_term_sketch2 --> Problem  synth_12
Sketch conj48_term_sketch1 --> Problem  synth_37
Sketch conj104_sketch3 --> Problem  synth_87
Sketch conj107_term_sketch1 --> Problem  synth_35
Sketch conj8_sketch0 --> Problem  synth_11
Sketch conj79_sketch0 --> Problem  synth_11
Sketch conj100_term_sketch1 --> Problem  synth_35
Sketch conj12_term_sketch2 --> Problem  synth_8
Sketch conj44_term_sketch3 --> Problem  synth_8
Sketch conj45_term_sketch3 --> Problem  synth_12
Sketch conj43_term_sketch0 --> Problem  synth_40
Sketch conj104_term_sketch4 --> Problem  synth_8
Sketch conj45_sketch2 --> Problem  synth_26
Sketch conj104_sketch1 --> Problem  synth_64
Sketch conj67_sketch2 --> Problem  synth_52
Sketch conj5_sketch1 --> Problem  synth_11
Sketch conj71_sketch3 --> Problem  synth_61
Sketch conj41_term_sketch2 --> Problem  synth_37
Sketch conj76_sketch2 --> Problem  synth_70
Sketch conj108_term_sketch5 --> Problem  synth_47
Sketch conj100_sketch2 --> Problem  synth_1
Sketch conj79_term_sketch0 --> Problem  synth_67
Sketch conj8_term_sketch3 --> Problem  synth_9
Sketch conj111_sketch4 --> Problem  synth_47
Sketch conj48_sketch0 --> Problem  synth_49
Sketch conj43_term_sketch3 --> Problem  synth_5
Sketch conj44_term_sketch4 --> Problem  synth_9
Sketch conj43_term_sketch2 --> Problem  synth_37
Sketch conj104_term_sketch3 --> Problem  synth_12
Sketch conj44_sketch3 --> Problem  synth_42
Sketch conj111_sketch0 --> Problem  synth_95
Sketch conj15_sketch0 --> Problem  synth_28
Sketch conj48_term_sketch4 --> Problem  synth_8
Sketch conj44_sketch4 --> Problem  synth_39
Sketch conj79_sketch2 --> Problem  synth_29
Sketch conj45_term_sketch1 --> Problem  synth_36
Sketch conj72_term_sketch0 --> Problem  synth_58
Sketch conj13_sketch0 --> Problem  synth_26
Sketch conj99_sketch3 --> Problem  synth_1
Sketch conj71_term_sketch0 --> Problem  synth_53
Sketch conj71_term_sketch3 --> Problem  synth_55
Sketch conj67_term_sketch2 --> Problem  synth_55
Sketch conj48_sketch2 --> Problem  synth_11
Sketch conj47_sketch0 --> Problem  synth_11


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 2676 seconds

Problem: synth_63
 @nil bool

Problem: synth_91
 BV.consbv a (BV_full_adder_sum l lf6 false)
 BV.consbv a (BV_full_adder_sum l (@nil bool) false)
 BV_full_adder_sum lf6 (@cons bool false l) a
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool a l) false
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_68
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_sum lf7 a
 HalfAdder.half_adder_sum a lf7
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_67
 BV_full_adder_sum lf6 (@cons bool false l) a
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool a l) lf7
 BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))
 BV_full_adder_sum lf6 (@cons bool a l) false
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_77
 @nil bool

Problem: synth_64
 HalfAdder.half_adder_sum lf4 a
 HalfAdder.half_adder_sum a lf4
 HalfAdder.half_adder_sum lf4 lf4
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 false

Problem: synth_96
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 a
 BV_full_adder_carry lf6 (@nil bool) a
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_11
 BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a))
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))
 BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false))
 BV.consbv a (BV_full_adder_sum l (@nil bool) false)
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_54
 BV_full_adder_sum lf6 (@cons bool false l) lf4
 BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool a l) false
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))
 BV_full_adder_sum lf6 (@cons bool lf4 l) false
 BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))

Problem: synth_39

Problem: synth_46
 HalfAdder.half_adder_carry lf3 true
 HalfAdder.half_adder_sum lf3 false
 HalfAdder.half_adder_carry lf3 false
 HalfAdder.half_adder_carry a false
 lf3
 false

Problem: synth_66
 HalfAdder.half_adder_carry lf7 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_sum lf7 false
 HalfAdder.half_adder_carry lf7 false
 lf7
 false

Problem: synth_57
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 HalfAdder.half_adder_sum lf4 lf4
 HalfAdder.half_adder_carry lf4 false
 false

Problem: synth_59
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7
 BV_full_adder_sum l (@nil bool) lf7
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_31
 HalfAdder.half_adder_sum a lf3
 HalfAdder.half_adder_sum lf3 a
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_8
 @nil bool

Problem: synth_34

Problem: synth_5
 BV_full_adder_sum l lf6 lf3
 BV_full_adder_sum l (@nil bool) lf3
 BV_full_adder_sum lf6 l false
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l lf6 false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_37
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_58
 BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))
 BV.consbv (HalfAdder.half_adder_sum lf4 lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 lf7))
 BV.consbv (HalfAdder.half_adder_sum lf7 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 lf4))
 BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))
 BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))

Problem: synth_53
 BV_full_adder_sum l lf6 lf7
 BV_full_adder_sum l (@nil bool) lf7
 BV_full_adder_sum lf6 l false
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l lf6 false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_2

Problem: synth_95
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 false
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf6 (@nil bool) false
 HalfAdder.half_adder_sum a a
 HalfAdder.half_adder_carry a false
 false

Problem: synth_22
 BV_full_adder_sum lf6 (@cons bool false l) a
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool a l) lf7
 BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))
 BV_full_adder_sum lf6 (@cons bool a l) false
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_18
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_sum lf7 a
 HalfAdder.half_adder_sum a lf7
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_21

Problem: synth_72
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_sum lf7 a
 HalfAdder.half_adder_sum a lf7
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_56
 @nil bool

Problem: synth_41
 HalfAdder.half_adder_carry lf3 true
 HalfAdder.half_adder_sum lf3 false
 HalfAdder.half_adder_carry lf3 false
 HalfAdder.half_adder_carry a false
 lf3
 false

Problem: synth_49
 HalfAdder.half_adder_carry lf3 true
 HalfAdder.half_adder_sum lf3 false
 HalfAdder.half_adder_carry lf3 false
 HalfAdder.half_adder_carry a false
 lf3
 false

Problem: synth_75
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_sum lf7 a
 HalfAdder.half_adder_sum a lf7
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_25
 BV.consbv (HalfAdder.half_adder_sum a lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf3))
 BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))
 BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_13
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_6
 @nil bool

Problem: synth_4
 BV_full_adder_sum lf6 (@cons bool lf3 l) lf4
 BV.consbv (HalfAdder.half_adder_sum lf3 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 lf4))
 BV_full_adder_sum lf6 (@cons bool false l) lf4
 BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool lf4 l) false
 BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))

Problem: synth_38
 HalfAdder.half_adder_carry lf3 true
 HalfAdder.half_adder_sum lf3 false
 HalfAdder.half_adder_carry lf3 false
 HalfAdder.half_adder_carry a false
 lf3
 false

Problem: synth_65
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_sum lf7 a
 HalfAdder.half_adder_sum a lf7
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_23

Problem: synth_88
 @nil bool

Problem: synth_19

Problem: synth_10

Problem: synth_24
 @nil bool

Problem: synth_97
 @cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 a) l
 @cons bool (BV_full_adder_carry lf6 (@nil bool) a) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_92
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 HalfAdder.half_adder_sum a a
 HalfAdder.half_adder_carry a false
 false

Problem: synth_32
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_sum lf7 a) l
 @cons bool (HalfAdder.half_adder_sum a lf7) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_48
 @cons bool (HalfAdder.half_adder_sum a lf3) l
 @cons bool (HalfAdder.half_adder_sum lf3 a) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_51
 @nil bool

Problem: synth_35
 false

Problem: synth_28
 HalfAdder.half_adder_sum a lf3
 HalfAdder.half_adder_sum lf3 a
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_90
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 a
 BV_full_adder_carry lf6 (@nil bool) a
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_73
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_sum lf7 a) l
 @cons bool (HalfAdder.half_adder_sum a lf7) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_17

Problem: synth_29
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7
 BV_full_adder_sum l (@nil bool) lf7
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_45

Problem: synth_76
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_sum lf7 a) l
 @cons bool (HalfAdder.half_adder_sum a lf7) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_26

Problem: synth_70
 HalfAdder.half_adder_carry lf7 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_sum lf7 false
 HalfAdder.half_adder_carry lf7 false
 lf7
 false

Problem: synth_9
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3
 BV_full_adder_sum l (@nil bool) lf3
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_30
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_sum lf7 a) l
 @cons bool (HalfAdder.half_adder_sum a lf7) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_81
 BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)
 BV_full_adder_sum lf6 l false
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l lf6 false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_1
 BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false)
 BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false)
 BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false
 BV_full_adder_sum lf5 (@nil bool) false

Problem: synth_69
 @nil bool

Problem: synth_86
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_carry lf4 true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool (HalfAdder.half_adder_sum lf4 false) l
 @cons bool a l
 @cons bool lf4 l

Problem: synth_55
 HalfAdder.half_adder_carry lf7 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_sum lf7 false
 HalfAdder.half_adder_carry lf7 false
 lf7
 false

Problem: synth_71
 BV.consbv a (BV_full_adder_sum l (@nil bool) lf7)
 BV.consbv a (BV_full_adder_sum l (@nil bool) false)
 BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_15
 @cons bool (HalfAdder.half_adder_sum lf4 lf3) l
 @cons bool (HalfAdder.half_adder_sum lf3 lf4) l
 @cons bool (HalfAdder.half_adder_carry lf4 lf4) l
 @cons bool (HalfAdder.half_adder_carry lf4 true) l
 @cons bool (HalfAdder.half_adder_sum lf4 false) l
 @cons bool lf4 l

Problem: synth_14
 @cons bool (HalfAdder.half_adder_sum lf4 lf3) l
 @cons bool (HalfAdder.half_adder_sum lf3 lf4) l
 @cons bool (HalfAdder.half_adder_carry lf4 lf4) l
 @cons bool (HalfAdder.half_adder_carry lf4 true) l
 @cons bool (HalfAdder.half_adder_sum lf4 false) l
 @cons bool lf4 l

Problem: synth_87
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_carry lf4 true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool (HalfAdder.half_adder_sum lf4 false) l
 @cons bool a l
 @cons bool lf4 l

Problem: synth_79
 HalfAdder.half_adder_sum lf4 a
 HalfAdder.half_adder_sum a lf4
 HalfAdder.half_adder_sum lf4 lf4
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 false

Problem: synth_83
 HalfAdder.half_adder_sum lf4 a
 HalfAdder.half_adder_sum a lf4
 HalfAdder.half_adder_sum lf4 lf4
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 false

Problem: synth_12
 @cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l
 @cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_85
 BV.consbv a (BV_full_adder_sum l (@nil bool) false)
 BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))
 BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))

Problem: synth_62
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_carry lf4 true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool (HalfAdder.half_adder_sum lf4 false) l
 @cons bool a l
 @cons bool lf4 l

Problem: synth_74
 HalfAdder.half_adder_carry lf7 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_sum lf7 false
 HalfAdder.half_adder_carry lf7 false
 lf7
 false

Problem: synth_50
 @cons bool (HalfAdder.half_adder_sum a lf3) l
 @cons bool (HalfAdder.half_adder_sum lf3 a) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_84
 @nil bool

Problem: synth_20

Problem: synth_94
 @nil bool

Problem: synth_7
 BV.consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)
 BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)
 BV.consbv (HalfAdder.half_adder_sum lf4 lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 lf3))
 BV.consbv (HalfAdder.half_adder_sum lf3 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 lf4))
 BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))

Problem: synth_61
 HalfAdder.half_adder_sum lf4 a
 HalfAdder.half_adder_sum a lf4
 HalfAdder.half_adder_sum lf4 lf4
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 false

Problem: synth_27

Problem: synth_42
 @nil bool

Problem: synth_16
 @nil bool

Problem: synth_93
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)
 HalfAdder.half_adder_carry a a
 HalfAdder.half_adder_carry a true
 HalfAdder.half_adder_sum a false
 a

Problem: synth_40
 BV_full_adder_sum lf6 (@cons bool lf3 l) a
 BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))
 BV_full_adder_sum lf6 (@cons bool false l) a
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool a l) false
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

Problem: synth_80
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)
 HalfAdder.half_adder_sum a a
 HalfAdder.half_adder_carry a false
 false

Problem: synth_33
 @nil bool

Problem: synth_89
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 BV_full_adder_carry lf6 (@nil bool) false
 HalfAdder.half_adder_sum a a
 HalfAdder.half_adder_carry a false
 false

Problem: synth_47
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false
 BV_full_adder_sum l (@nil bool) false

Problem: synth_3

Problem: synth_52
 BV_full_adder_carry l (@nil bool) false
 BV_full_adder_carry lf5 (@nil bool) false
 BV_full_adder_carry lf6 (@nil bool) false
 HalfAdder.half_adder_sum lf4 lf4
 HalfAdder.half_adder_carry lf4 false
 false

Problem: synth_44

Problem: synth_60
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_carry lf4 true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool (HalfAdder.half_adder_sum lf4 false) l
 @cons bool a l
 @cons bool lf4 l

Problem: synth_36

Problem: synth_82
 BV_full_adder_sum lf6 (@cons bool false l) lf4
 BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV_full_adder_sum lf6 (@cons bool a l) false
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))
 BV_full_adder_sum lf6 (@cons bool lf4 l) false
 BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))

Problem: synth_78
 HalfAdder.half_adder_carry lf7 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_sum lf7 false
 HalfAdder.half_adder_carry lf7 false
 lf7
 false

Problem: synth_43
 BV.consbv a (BV_full_adder_sum l (@nil bool) lf3)
 BV.consbv a (BV_full_adder_sum l (@nil bool) false)
 BV.consbv (HalfAdder.half_adder_sum a lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf3))
 BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))
 BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 2677 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_2: forall (a : bool) (l : list bool) (lf6 : list bool), forall _ : @eq BV (BV_full_adder_sum l lf6 false) l, @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_3: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_4: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_5: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_6: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_7: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_8: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_9: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_10: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_11: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_12: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_13: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_14: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_15: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool lf3 l) lf4).
Lemma candidate_16: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 lf4))).
Lemma candidate_17: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool false l) lf4).
Lemma candidate_18: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_19: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool lf4 l) false).
Lemma candidate_20: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_21: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 lf3).
Lemma candidate_22: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_23: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum lf6 l false).
Lemma candidate_24: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_25: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 false).
Lemma candidate_26: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_27: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_28: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_29: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_30: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_31: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_32: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_33: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_34: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)).
Lemma candidate_35: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_36: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf4 lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 lf3))).
Lemma candidate_37: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 lf4))).
Lemma candidate_38: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_39: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_40: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_41: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_42: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_43: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_44: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_45: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_46: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_47: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_48: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_49: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_50: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_51: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_52: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_53: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_54: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_55: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_56: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_57: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_58: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_59: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_60: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_61: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_62: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_63: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_64: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_65: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_66: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_67: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_68: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_69: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_70: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_71: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum lf4 lf3) l).
Lemma candidate_72: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum lf3 lf4) l).
Lemma candidate_73: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_carry lf4 lf4) l).
Lemma candidate_74: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_75: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_76: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3)) (@cons bool lf4 l).
Lemma candidate_77: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool lf3 l) lf4).
Lemma candidate_78: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 lf4))).
Lemma candidate_79: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool false l) lf4).
Lemma candidate_80: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_81: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool lf4 l) false).
Lemma candidate_82: forall (lf3 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_83: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 lf3).
Lemma candidate_84: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_85: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum lf6 l false).
Lemma candidate_86: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_87: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 false).
Lemma candidate_88: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_89: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_90: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_91: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_92: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_93: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_94: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_95: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_96: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_97: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_98: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_99: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_100: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_101: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum lf4 lf3) l).
Lemma candidate_102: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum lf3 lf4) l).
Lemma candidate_103: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_carry lf4 lf4) l).
Lemma candidate_104: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_105: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_106: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool lf4 l).
Lemma candidate_107: forall (lf3 : bool) (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_108: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_109: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_110: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_111: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_112: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_113: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_114: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) lf3)).
Lemma candidate_115: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_116: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf4 lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 lf3))).
Lemma candidate_117: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 lf4))).
Lemma candidate_118: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_119: forall (lf3 : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_120: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_121: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_122: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_123: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_124: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_125: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_126: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_127: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_128: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_129: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_130: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_131: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_132: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_133: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_134: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_135: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_136: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_137: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_138: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_139: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_140: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_141: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_142: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_143: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_144: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_145: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_146: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_147: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_148: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_149: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_150: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_151: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_152: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_153: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_154: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_155: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_156: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_157: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 lf3).
Lemma candidate_158: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_159: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum lf6 l false).
Lemma candidate_160: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_161: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 false).
Lemma candidate_162: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_163: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_164: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_165: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool a l) lf7).
Lemma candidate_166: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_167: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_168: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_169: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_170: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_171: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_172: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_173: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_174: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_175: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   lf5.
Lemma candidate_176: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_177: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_178: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_179: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_180: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_181: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_182: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf3))).
Lemma candidate_183: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))).
Lemma candidate_184: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))).
Lemma candidate_185: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_186: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_187: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_188: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_189: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_190: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_191: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_192: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_193: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_194: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_195: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_196: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_197: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_198: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_199: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_200: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_201: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_202: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_203: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_204: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_205: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_206: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_207: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_208: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_209: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_210: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_211: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_212: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_213: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf3) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_214: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf3 a) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_215: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_216: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_217: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_218: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (a) (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma candidate_219: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_220: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_221: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7))   (@cons bool a l).
Lemma candidate_222: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf7))   (@cons bool a l).
Lemma candidate_223: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_224: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_225: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_226: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum lf7 a) l).
Lemma candidate_227: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum a lf7) l).
Lemma candidate_228: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_229: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_230: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_231: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_232: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_233: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_234: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_235: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_236: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_237: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_238: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_239: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_240: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_241: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_242: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_243: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 lf3).
Lemma candidate_244: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_245: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum lf6 l false).
Lemma candidate_246: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_247: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 false).
Lemma candidate_248: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_249: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_250: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_251: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_252: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_253: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_254: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_255: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_256: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_257: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool a l) lf7).
Lemma candidate_258: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_259: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_260: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_261: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf3)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_262: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf3 a)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_263: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_264: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_265: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_266: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV (consbv (a) (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_267: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_268: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_269: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_270: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_271: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_272: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_273: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_274: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum lf7 a) l).
Lemma candidate_275: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum a lf7) l).
Lemma candidate_276: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_277: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_278: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool a l).
Lemma candidate_279: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool a l).
Lemma candidate_280: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_281: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_282: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7))   (@cons bool a l).
Lemma candidate_283: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf7))   (@cons bool a l).
Lemma candidate_284: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_285: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_286: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_287: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_288: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_289: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_290: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_291: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_292: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf3))).
Lemma candidate_293: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))).
Lemma candidate_294: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))).
Lemma candidate_295: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_296: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_297: forall (lf3 : bool) (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_298: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_299: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_300: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_301: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_302: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_303: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_304: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_305: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_306: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_307: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_308: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_309: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_310: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_311: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_312: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_313: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_314: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_315: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_316: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_317: @eq bool false (false).
Lemma candidate_318: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_319: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_320: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_321: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_322: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_323: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_324: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_325: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_326: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_327: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_328: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_329: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_330: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 true))      (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma candidate_331: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum lf3 false))      (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma candidate_332: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 false))      (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma candidate_333: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma candidate_334: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a (lf3)) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma candidate_335: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a (false)) (BV_full_adder_sum l lf6 lf3)) lf5.
Lemma candidate_336: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool lf3 l) a).
Lemma candidate_337: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))).
Lemma candidate_338: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_339: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_340: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_341: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_342: @eq bool false (false).
Lemma candidate_343: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_344: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_345: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_346: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_347: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_348: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_349: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 lf3).
Lemma candidate_350: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_351: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum lf6 l false).
Lemma candidate_352: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_353: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 false).
Lemma candidate_354: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_355: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 true))      (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_356: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum lf3 false))      (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_357: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 false))      (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_358: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_359: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (lf3)) (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_360: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (false)) (BV_full_adder_sum l (@nil bool) lf3))   lf5.
Lemma candidate_361: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_362: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_363: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_364: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_365: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_366: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_367: forall (lf3 : bool) (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3)) lf5.
Lemma candidate_368: @eq bool false (false).
Lemma candidate_369: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_370: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_371: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_372: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_373: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_374: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_375: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a (BV_full_adder_sum l (@nil bool) lf3)).
Lemma candidate_376: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_377: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf3))).
Lemma candidate_378: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))).
Lemma candidate_379: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_380: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_381: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_382: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_383: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_384: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_385: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_386: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_387: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_388: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_389: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_390: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_391: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_392: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_393: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_394: @eq bool false (false).
Lemma candidate_395: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_396: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_397: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_398: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_399: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_400: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_401: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_402: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_403: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_404: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_405: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_406: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_407: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_408: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_409: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_410: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_411: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_412: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_413: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 true))      (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma candidate_414: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum lf3 false))      (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma candidate_415: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 false))      (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma candidate_416: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma candidate_417: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a (lf3)) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_418: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a (false)) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_419: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf3) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_420: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf3 a) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_421: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_422: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_423: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_424: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (a) (BV_full_adder_sum l lf6 lf3)) (@cons bool a l).
Lemma candidate_425: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_426: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_427: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_428: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_429: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_430: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_431: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum a lf3) l).
Lemma candidate_432: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum lf3 a) l).
Lemma candidate_433: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_434: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_435: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_436: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (@cons bool a l).
Lemma candidate_437: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool lf3 l) a).
Lemma candidate_438: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))).
Lemma candidate_439: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_440: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_441: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_442: forall (lf3 : bool) (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_443: @eq bool false (false).
Lemma candidate_444: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_445: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_446: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_447: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_448: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_449: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_450: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 lf3).
Lemma candidate_451: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_452: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum lf6 l false).
Lemma candidate_453: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_454: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l lf6 false).
Lemma candidate_455: forall (lf3 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 lf3) (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_456: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_457: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_458: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_459: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_460: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_461: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_462: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 true))      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_463: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum lf3 false))      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_464: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry lf3 false))      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_465: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_466: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a (lf3)) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool a l).
Lemma candidate_467: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a (false)) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool a l).
Lemma candidate_468: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf3)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_469: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf3 a)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_470: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_471: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_472: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_473: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV (consbv (a) (BV_full_adder_sum l (@nil bool) lf3)) (@cons bool a l).
Lemma candidate_474: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_475: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_476: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_477: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_478: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_479: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_480: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum a lf3) l).
Lemma candidate_481: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum lf3 a) l).
Lemma candidate_482: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_483: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_484: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_485: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool a l).
Lemma candidate_486: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (@cons bool a l).
Lemma candidate_487: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_488: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_489: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_490: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_491: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_492: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_493: @eq bool false (false).
Lemma candidate_494: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_495: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_496: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_497: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_498: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_499: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_500: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a (BV_full_adder_sum l (@nil bool) lf3)).
Lemma candidate_501: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_502: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a lf3) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf3))).
Lemma candidate_503: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum lf3 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 a))).
Lemma candidate_504: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_505: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_506: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_507: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_508: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_509: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_510: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_511: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_512: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_513: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_514: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf3 false)).
Lemma candidate_515: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_516: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) lf3).
Lemma candidate_517: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_518: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_519: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_520: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_521: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_522: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_523: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_524: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_525: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (BV_full_adder_carry l (@nil bool) false))) lf5.
Lemma candidate_526: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf5 (@nil bool) false)))   lf5.
Lemma candidate_527: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf6 (@nil bool) false)))   lf5.
Lemma candidate_528: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf4 lf4)))   lf5.
Lemma candidate_529: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf4 false))) lf5.
Lemma candidate_530: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (false))) lf5.
Lemma candidate_531: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 lf7).
Lemma candidate_532: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_533: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum lf6 l false).
Lemma candidate_534: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_535: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 false).
Lemma candidate_536: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_537: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool false l) lf4).
Lemma candidate_538: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_539: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_540: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_541: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool lf4 l) false).
Lemma candidate_542: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_543: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_544: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_545: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_546: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_547: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_548: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_549: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_550: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_551: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_552: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_553: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_554: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_555: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_556: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)))   lf5.
Lemma candidate_557: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (BV_full_adder_carry l (@nil bool) false))) lf5.
Lemma candidate_558: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (BV_full_adder_carry lf5 (@nil bool) false))) lf5.
Lemma candidate_559: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 lf4)))   lf5.
Lemma candidate_560: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   lf5.
Lemma candidate_561: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (false))) lf5.
Lemma candidate_562: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_563: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf4 lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 lf7))).
Lemma candidate_564: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf7 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 lf4))).
Lemma candidate_565: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_566: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_567: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_568: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_569: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_570: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_571: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_572: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_573: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_574: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_575: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_576: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_577: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7).
Lemma candidate_578: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_579: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_580: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_581: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_582: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_583: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_584: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_585: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_586: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_587: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_588: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_589: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_590: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_591: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_592: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_593: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_594: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_595: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_596: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_597: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_598: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool lf4 l).
Lemma candidate_599: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf4 a)))   (@cons bool a l).
Lemma candidate_600: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum a lf4)))   (@cons bool a l).
Lemma candidate_601: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf4 lf4)))   (@cons bool a l).
Lemma candidate_602: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_603: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_604: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (false))) (@cons bool a l).
Lemma candidate_605: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 lf7).
Lemma candidate_606: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_607: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum lf6 l false).
Lemma candidate_608: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_609: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 false).
Lemma candidate_610: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_611: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool false l) lf4).
Lemma candidate_612: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_613: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_614: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_615: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool lf4 l) false).
Lemma candidate_616: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_617: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_618: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_619: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_620: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_621: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_622: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_623: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_624: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_625: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_626: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_627: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_628: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_629: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_630: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_631: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_632: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_633: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_634: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_635: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_636: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_637: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_638: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_639: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_640: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool lf4 l).
Lemma candidate_641: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_642: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 a)))   (@cons bool a l).
Lemma candidate_643: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a lf4)))   (@cons bool a l).
Lemma candidate_644: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 lf4)))   (@cons bool a l).
Lemma candidate_645: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_646: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_647: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (false)))   (@cons bool a l).
Lemma candidate_648: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_649: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_650: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_651: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_652: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_653: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_654: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_655: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf4 lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 lf7))).
Lemma candidate_656: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf7 lf4) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 lf4))).
Lemma candidate_657: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_658: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_659: forall (a : bool) (lf7 : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_660: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_661: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_662: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_663: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_664: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_665: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_666: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_667: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_668: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_669: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_670: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_671: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_672: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_673: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_674: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_675: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7).
Lemma candidate_676: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_677: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_678: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_679: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_680: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_681: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_682: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_683: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_684: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_685: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma candidate_686: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf7 a)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma candidate_687: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma candidate_688: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma candidate_689: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma candidate_690: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (a) (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) lf5.
Lemma candidate_691: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf7 true))) lf5.
Lemma candidate_692: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false))) lf5.
Lemma candidate_693: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf7 false))) lf5.
Lemma candidate_694: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf7 false))) lf5.
Lemma candidate_695: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 (lf7))) lf5.
Lemma candidate_696: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 (false))) lf5.
Lemma candidate_697: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_698: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_699: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool a l) lf7).
Lemma candidate_700: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_701: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_702: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_703: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_704: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_705: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_706: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_707: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_708: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_709: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 lf7).
Lemma candidate_710: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_711: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum lf6 l false).
Lemma candidate_712: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_713: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 false).
Lemma candidate_714: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_715: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_716: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_717: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_718: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_719: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_720: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_721: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_722: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf7 a)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_723: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_724: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_725: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_726: forall (a : bool) (lf7 : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (a) (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_727: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))) lf5.
Lemma candidate_728: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 true)))   lf5.
Lemma candidate_729: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   lf5.
Lemma candidate_730: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf7 false)))   lf5.
Lemma candidate_731: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)))   lf5.
Lemma candidate_732: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) (lf7))) lf5.
Lemma candidate_733: forall (a : bool) (l : list bool) (lf7 : bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) (false)))   lf5.
Lemma candidate_734: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_735: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_736: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_737: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_738: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_739: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_740: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_741: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_742: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_743: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_744: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_745: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_746: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_747: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_748: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_749: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_750: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_751: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_752: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_753: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_754: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_755: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7).
Lemma candidate_756: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_757: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_758: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_759: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) lf7)).
Lemma candidate_760: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_761: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))).
Lemma candidate_762: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_763: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_764: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_765: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_766: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_767: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_768: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_769: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_770: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_771: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))    (@cons bool a l).
Lemma candidate_772: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf7 a)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))    (@cons bool a l).
Lemma candidate_773: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))    (@cons bool a l).
Lemma candidate_774: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))    (@cons bool a l).
Lemma candidate_775: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))    (@cons bool a l).
Lemma candidate_776: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (a) (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_777: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_778: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_779: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7))   (@cons bool a l).
Lemma candidate_780: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf7))   (@cons bool a l).
Lemma candidate_781: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_782: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_783: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_784: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum lf7 a) l).
Lemma candidate_785: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum a lf7) l).
Lemma candidate_786: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_787: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_788: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7))) (@cons bool a l).
Lemma candidate_789: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf7 true)))   (@cons bool a l).
Lemma candidate_790: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_791: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf7 false)))   (@cons bool a l).
Lemma candidate_792: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_793: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 (lf7)))   (@cons bool a l).
Lemma candidate_794: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l lf6 (false)))   (@cons bool a l).
Lemma candidate_795: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_796: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_797: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool a l) lf7).
Lemma candidate_798: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_799: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_800: forall (a : bool) (l : list bool) (lf7 : bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l lf6 (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_801: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_802: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_803: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_804: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_805: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_806: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_807: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 lf7).
Lemma candidate_808: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_809: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum lf6 l false).
Lemma candidate_810: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_811: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l lf6 false).
Lemma candidate_812: forall (a : bool) (lf7 : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_813: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_814: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_815: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_816: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_817: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_818: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_819: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_820: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_821: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_822: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_823: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_824: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_825: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_826: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum lf7 a)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_827: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_828: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_829: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_830: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV   (consbv (a) (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_831: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_832: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum lf7 a) l).
Lemma candidate_833: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum a lf7) l).
Lemma candidate_834: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_835: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_836: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_837: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (@cons bool a l).
Lemma candidate_838: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 true)))   (@cons bool a l).
Lemma candidate_839: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_840: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf7 false)))   (@cons bool a l).
Lemma candidate_841: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_842: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) (lf7)))   (@cons bool a l).
Lemma candidate_843: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) (false)))   (@cons bool a l).
Lemma candidate_844: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_845: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)))   (@cons bool a l).
Lemma candidate_846: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7))   (@cons bool a l).
Lemma candidate_847: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) lf7))   (@cons bool a l).
Lemma candidate_848: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_849: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_850: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_851: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_852: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_853: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_854: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_855: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_856: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a a).
Lemma candidate_857: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum lf7 a).
Lemma candidate_858: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a lf7).
Lemma candidate_859: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_carry a true).
Lemma candidate_860: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (HalfAdder.half_adder_sum a false).
Lemma candidate_861: forall (a : bool) (lf7 : bool), @eq bool (half_adder_sum a lf7) (a).
Lemma candidate_862: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_863: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_864: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_865: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_866: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_867: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_868: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_869: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 true).
Lemma candidate_870: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry a false).
Lemma candidate_871: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_sum lf7 false).
Lemma candidate_872: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (HalfAdder.half_adder_carry lf7 false).
Lemma candidate_873: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (lf7).
Lemma candidate_874: forall (a : bool) (lf7 : bool), @eq bool (half_adder_carry a lf7) (false).
Lemma candidate_875: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_876: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf7 false)).
Lemma candidate_877: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf7).
Lemma candidate_878: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) lf7).
Lemma candidate_879: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_880: forall (a : bool) (lf7 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_881: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) lf7)).
Lemma candidate_882: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_883: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))).
Lemma candidate_884: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_885: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_886: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_887: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (BV_full_adder_carry l (@nil bool) false))) lf5.
Lemma candidate_888: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf5 (@nil bool) false)))   lf5.
Lemma candidate_889: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf6 (@nil bool) false)))   lf5.
Lemma candidate_890: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf4 lf4)))   lf5.
Lemma candidate_891: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf4 false))) lf5.
Lemma candidate_892: forall (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (false))) lf5.
Lemma candidate_893: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum lf4 a)))) lf5.
Lemma candidate_894: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum a lf4)))) lf5.
Lemma candidate_895: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum lf4 lf4)))) lf5.
Lemma candidate_896: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_carry a false)))) lf5.
Lemma candidate_897: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_carry lf4 false)))) lf5.
Lemma candidate_898: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a (false))))   lf5.
Lemma candidate_899: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_900: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_901: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_902: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_903: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_904: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_905: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_906: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_907: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_908: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_909: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_910: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_911: @eq bool false (false).
Lemma candidate_912: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)).
Lemma candidate_913: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_914: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum lf6 l false).
Lemma candidate_915: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_916: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 false).
Lemma candidate_917: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_918: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool false l) lf4).
Lemma candidate_919: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_920: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_921: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_922: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool lf4 l) false).
Lemma candidate_923: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_924: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)))   lf5.
Lemma candidate_925: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (BV_full_adder_carry l (@nil bool) false))) lf5.
Lemma candidate_926: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (BV_full_adder_carry lf5 (@nil bool) false))) lf5.
Lemma candidate_927: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 lf4)))   lf5.
Lemma candidate_928: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   lf5.
Lemma candidate_929: forall (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (false))) lf5.
Lemma candidate_930: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum lf4 a)))) lf5.
Lemma candidate_931: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum a lf4)))) lf5.
Lemma candidate_932: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum lf4 lf4)))) lf5.
Lemma candidate_933: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_carry a false)))) lf5.
Lemma candidate_934: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_carry lf4 false)))) lf5.
Lemma candidate_935: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a (false))))   lf5.
Lemma candidate_936: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_937: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_938: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_939: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_940: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_941: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_942: forall (a : bool) (l : list bool) (lf4 : bool) (lf5 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   lf5.
Lemma candidate_943: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_944: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_945: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_946: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_947: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_948: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_949: @eq bool false (false).
Lemma candidate_950: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_951: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_952: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_953: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_954: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_955: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_956: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_957: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)).
Lemma candidate_958: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)).
Lemma candidate_959: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)).
Lemma candidate_960: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_961: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_962: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_963: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf4 a)))   (@cons bool a l).
Lemma candidate_964: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum a lf4)))   (@cons bool a l).
Lemma candidate_965: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum lf4 lf4)))   (@cons bool a l).
Lemma candidate_966: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4 (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_967: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_968: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (false))) (@cons bool a l).
Lemma candidate_969: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum lf4 a))))   (@cons bool a l).
Lemma candidate_970: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum a lf4))))   (@cons bool a l).
Lemma candidate_971: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum lf4 lf4))))   (@cons bool a l).
Lemma candidate_972: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_carry a false))))   (@cons bool a l).
Lemma candidate_973: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV   (consbv lf4      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_carry lf4 false))))   (@cons bool a l).
Lemma candidate_974: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a (false))))   (@cons bool a l).
Lemma candidate_975: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_976: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_977: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_978: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_979: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_980: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool lf4 l).
Lemma candidate_981: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_982: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_983: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_984: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_985: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_986: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_987: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_988: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_989: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_990: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_991: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_992: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_993: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_994: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_995: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_996: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_997: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_998: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_999: @eq bool false (false).
Lemma candidate_1000: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_1001: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_1002: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_1003: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_1004: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_1005: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_1006: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)).
Lemma candidate_1007: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_1008: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum lf6 l false).
Lemma candidate_1009: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_1010: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 false).
Lemma candidate_1011: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_1012: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool false l) lf4).
Lemma candidate_1013: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1014: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_1015: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_1016: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool lf4 l) false).
Lemma candidate_1017: forall (a : bool) (l : list bool) (lf4 : bool) (lf6 : list bool), @eq BV (consbv lf4 (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_1018: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 a)))   (@cons bool a l).
Lemma candidate_1019: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a lf4)))   (@cons bool a l).
Lemma candidate_1020: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 lf4)))   (@cons bool a l).
Lemma candidate_1021: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1022: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_1023: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) (false)))   (@cons bool a l).
Lemma candidate_1024: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum lf4 a))))   (@cons bool a l).
Lemma candidate_1025: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum a lf4))))   (@cons bool a l).
Lemma candidate_1026: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum lf4 lf4))))   (@cons bool a l).
Lemma candidate_1027: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_carry a false))))   (@cons bool a l).
Lemma candidate_1028: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_carry lf4 false))))   (@cons bool a l).
Lemma candidate_1029: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a (false))))   (@cons bool a l).
Lemma candidate_1030: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_1031: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1032: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1033: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_1034: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_1035: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1036: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_1037: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_1038: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_1039: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_1040: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1041: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool lf4 l).
Lemma candidate_1042: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1043: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1044: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1045: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_1046: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 false)))   (@cons bool a l).
Lemma candidate_1047: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_1048: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV (consbv lf4 (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_1049: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_1050: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1051: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1052: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_1053: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_1054: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_1055: @eq bool false (false).
Lemma candidate_1056: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1057: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1058: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1059: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1060: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_1061: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_1062: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_1063: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_1064: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_1065: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_1066: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_1067: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_1068: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_1069: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)).
Lemma candidate_1070: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)).
Lemma candidate_1071: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)).
Lemma candidate_1072: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_1073: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_1074: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_1075: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (BV_full_adder_carry l (@nil bool) false))) lf5.
Lemma candidate_1076: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf5 (@nil bool) false)))   lf5.
Lemma candidate_1077: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf6 (@nil bool) false)))   lf5.
Lemma candidate_1078: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum a a))) lf5.
Lemma candidate_1079: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false))) lf5.
Lemma candidate_1080: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 (false)))   lf5.
Lemma candidate_1081: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry l (@nil bool) false))      (BV_full_adder_sum l lf6         (half_adder_carry a (BV_full_adder_carry l (@nil bool) false)))) lf5.
Lemma candidate_1082: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry lf5 (@nil bool) false))      (BV_full_adder_sum l lf6         (half_adder_carry a (BV_full_adder_carry lf5 (@nil bool) false))))   lf5.
Lemma candidate_1083: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry lf6 (@nil bool) false))      (BV_full_adder_sum l lf6         (half_adder_carry a (BV_full_adder_carry lf6 (@nil bool) false))))   lf5.
Lemma candidate_1084: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum a a))      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum a a)))) lf5.
Lemma candidate_1085: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_carry a false)))) lf5.
Lemma candidate_1086: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (false))      (BV_full_adder_sum l lf6 (half_adder_carry a (false)))) lf5.
Lemma candidate_1087: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv      ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 a)      (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma candidate_1088: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (BV_full_adder_carry lf6 (@nil bool) a)      (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma candidate_1089: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma candidate_1090: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma candidate_1091: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma candidate_1092: forall (a : bool) (l : list bool) (lf5 : list bool) (lf6 : list bool), @eq BV (consbv (a) (BV_full_adder_sum l lf6 (half_adder_carry a false))) lf5.
Lemma candidate_1093: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_1094: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_1095: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_1096: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_1097: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_1098: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_1099: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_1100: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1101: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1102: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_1103: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_1104: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_1105: @eq bool false (false).
Lemma candidate_1106: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1107: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1108: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_1109: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_1110: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_1111: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_1112: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)).
Lemma candidate_1113: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_1114: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum lf6 l false).
Lemma candidate_1115: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_1116: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 false).
Lemma candidate_1117: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_1118: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l lf6 false)).
Lemma candidate_1119: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1120: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_1121: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1122: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_1123: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_1124: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool)         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false)))   lf5.
Lemma candidate_1125: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool)         (BV_full_adder_carry l (@nil bool) false))) lf5.
Lemma candidate_1126: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool)         (BV_full_adder_carry lf5 (@nil bool) false))) lf5.
Lemma candidate_1127: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a))) lf5.
Lemma candidate_1128: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   lf5.
Lemma candidate_1129: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) (false)))   lf5.
Lemma candidate_1130: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv      (half_adder_sum a         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a            ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))))   lf5.
Lemma candidate_1131: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry l (@nil bool) false))      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (BV_full_adder_carry l (@nil bool) false)))) lf5.
Lemma candidate_1132: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry lf5 (@nil bool) false))      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (BV_full_adder_carry lf5 (@nil bool) false))))   lf5.
Lemma candidate_1133: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum a a))      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_sum a a)))) lf5.
Lemma candidate_1134: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l (@nil bool)         (half_adder_carry a (HalfAdder.half_adder_carry a false)))) lf5.
Lemma candidate_1135: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a (false))      (BV_full_adder_sum l (@nil bool) (half_adder_carry a (false)))) lf5.
Lemma candidate_1136: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false))      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma candidate_1137: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma candidate_1138: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma candidate_1139: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma candidate_1140: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma candidate_1141: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (a) (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   lf5.
Lemma candidate_1142: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_1143: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_1144: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_1145: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@cons bool false (@nil bool)) false) lf5.
Lemma candidate_1146: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_1147: forall (lf5 : list bool), @eq BV (BV_full_adder_sum lf5 (@nil bool) false) lf5.
Lemma candidate_1148: forall (a : bool) (l : list bool) (lf5 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))) lf5.
Lemma candidate_1149: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_1150: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1151: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1152: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_1153: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_1154: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_1155: @eq bool false (false).
Lemma candidate_1156: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1157: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1158: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_1159: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_1160: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_1161: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_1162: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a))).
Lemma candidate_1163: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_1164: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false))).
Lemma candidate_1165: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1166: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1167: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_1168: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_1169: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)).
Lemma candidate_1170: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)).
Lemma candidate_1171: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)).
Lemma candidate_1172: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_1173: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_1174: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_1175: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 false)))   (@cons bool a l).
Lemma candidate_1176: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (BV_full_adder_carry l (@nil bool) false)))   (@cons bool a l).
Lemma candidate_1177: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (BV_full_adder_carry lf6 (@nil bool) false)))   (@cons bool a l).
Lemma candidate_1178: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_1179: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1180: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (half_adder_sum a false) (BV_full_adder_sum l lf6 (false)))   (@cons bool a l).
Lemma candidate_1181: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv      (half_adder_sum a         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 false))      (BV_full_adder_sum l lf6         (half_adder_carry a            ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 false))))   (@cons bool a l).
Lemma candidate_1182: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry l (@nil bool) false))      (BV_full_adder_sum l lf6         (half_adder_carry a (BV_full_adder_carry l (@nil bool) false))))   (@cons bool a l).
Lemma candidate_1183: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (BV_full_adder_carry lf6 (@nil bool) false))      (BV_full_adder_sum l lf6         (half_adder_carry a (BV_full_adder_carry lf6 (@nil bool) false))))   (@cons bool a l).
Lemma candidate_1184: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_sum a a))      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_sum a a))))   (@cons bool a l).
Lemma candidate_1185: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (HalfAdder.half_adder_carry a false))      (BV_full_adder_sum l lf6         (half_adder_carry a (HalfAdder.half_adder_carry a false))))   (@cons bool a l).
Lemma candidate_1186: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a (false))      (BV_full_adder_sum l lf6 (half_adder_carry a (false))))    (@cons bool a l).
Lemma candidate_1187: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv      ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 a)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_1188: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (BV_full_adder_carry lf6 (@nil bool) a)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_1189: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a a)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_1190: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_carry a true)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_1191: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (HalfAdder.half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_1192: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (consbv (a) (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1193: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf6 a) l).
Lemma candidate_1194: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (BV_full_adder_carry lf6 (@nil bool) a) l).
Lemma candidate_1195: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_1196: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_1197: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_1198: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false))) (@cons bool a l).
Lemma candidate_1199: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_1200: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_1201: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1202: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1203: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_1204: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_1205: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_1206: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1207: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1208: forall (a : bool) (l : list bool), @eq BV (BV.consbv a (BV_full_adder_sum l (@nil bool) false)) (@cons bool a l).
Lemma candidate_1209: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_1210: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1211: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_1212: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1213: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1214: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_1215: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_1216: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_1217: @eq bool false (false).
Lemma candidate_1218: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_1219: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_1220: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_1221: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_1222: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_sum a false).
Lemma candidate_1223: forall (a : bool), @eq bool (half_adder_sum a false) (a).
Lemma candidate_1224: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_1225: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_1226: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_1227: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_1228: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_1229: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_1230: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 (HalfAdder.half_adder_carry a false)).
Lemma candidate_1231: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)).
Lemma candidate_1232: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum lf6 l false).
Lemma candidate_1233: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_1234: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 false).
Lemma candidate_1235: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_1236: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l lf6 false)).
Lemma candidate_1237: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1238: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool false l) a).
Lemma candidate_1239: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1240: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV_full_adder_sum lf6 (@cons bool a l) false).
Lemma candidate_1241: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 3577 seconds
Duplicates removed: 789
Filtered by Quickchick: 383
Filtered by script: 17
Remaining: 52

Lemmas: 
Lemma candidate_908: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_sum a a).
Lemma candidate_320: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a a).
Lemma candidate_321: forall (a : bool), @eq bool (half_adder_sum a false) (HalfAdder.half_adder_carry a true).
Lemma candidate_55: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_57: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_56: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_916: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum l lf6 false).
Lemma candidate_914: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV (BV_full_adder_sum l lf6 (half_adder_carry a false))   (BV_full_adder_sum lf6 l false).
Lemma candidate_5: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_906: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum a false)).
Lemma candidate_430: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) false))   (@cons bool a l).
Lemma candidate_319: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)).
Lemma candidate_318: forall (a : bool), @eq bool (half_adder_sum a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)).
Lemma candidate_905: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a true)).
Lemma candidate_1041: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool lf4 l).
Lemma candidate_907: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_47: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_962: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) false).
Lemma candidate_49: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_54: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_53: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_426: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_958: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a)).
Lemma candidate_375: forall (lf3 : bool) (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false) (BV_full_adder_sum l (@nil bool) lf3))   (BV.consbv a (BV_full_adder_sum l (@nil bool) lf3)).
Lemma candidate_1039: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_sum lf4 false) l).
Lemma candidate_1037: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (@cons bool (HalfAdder.half_adder_carry lf4 true) l).
Lemma candidate_951: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_1118: forall (a : bool) (l : list bool) (lf6 : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l lf6 false)).
Lemma candidate_1165: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_2: forall (a : bool) (l : list bool) (lf6 : list bool), forall _ : @eq BV (BV_full_adder_sum l lf6 false) l, @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l lf6 (half_adder_carry a false)))    (@cons bool a l).
Lemma candidate_1162: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum a a))).
Lemma candidate_1164: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a false))).
Lemma candidate_3: forall (lf5 : list bool), @eq BV   (BV_full_adder_sum lf5 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf5 false))   lf5.
Lemma candidate_7: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 false)   lf5.
Lemma candidate_51: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_43: forall (lf3 : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) lf3)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf3).
Lemma candidate_4: forall (lf5 : list bool), @eq BV   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf5 (BV_full_adder_carry lf5 (@nil bool) false))   lf5.
Lemma candidate_429: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))   (@cons bool a l).
Lemma candidate_961: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false).
Lemma candidate_48: forall (a : bool) (l : list bool), @eq BV   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_425: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)))   (@cons bool a l).
Lemma candidate_957: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum a a)).
Lemma candidate_427: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_959: forall (a : bool) (l : list bool), @eq BV (BV_full_adder_sum l (@nil bool) (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)).
Lemma candidate_953: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv lf4 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_52: forall (a : bool) (l : list bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))   (@cons bool a l).
Lemma candidate_1166: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_1163: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv a ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
Lemma candidate_955: forall (a : bool) (l : list bool) (lf4 : bool), @eq BV   (consbv lf4 (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum lf4 false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 false))).
Lemma candidate_763: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum a lf7) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a lf7))).
Lemma candidate_761: forall (a : bool) (l : list bool) (lf7 : bool), @eq BV   (consbv (half_adder_sum a lf7)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a lf7)))   (BV.consbv (HalfAdder.half_adder_sum lf7 a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf7 a))).
Lemma candidate_1167: forall (a : bool) (l : list bool), @eq BV   (consbv (half_adder_sum a false)      (BV_full_adder_sum l (@nil bool) (half_adder_carry a false)))   (BV.consbv (HalfAdder.half_adder_sum a false) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))).
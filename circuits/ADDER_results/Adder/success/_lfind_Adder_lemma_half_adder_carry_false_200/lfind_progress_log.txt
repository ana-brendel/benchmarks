File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_half_adder_carry_false_200
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_half_adder_carry_false_200
- Namespace: Circuits
- Proof name: BV_full_adder_carry_v_nil_false
- Theorem: Theorem BV_full_adder_carry_v_nil_false: forall v0 : BV, @eq bool (BV_full_adder_carry v0 nilbv false) false.
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a false)) false

* Hypothesis:
H : @eq bool (BV_full_adder_carry l (@nil bool) false) false
v : BV
l : list bool
a : bool

* Types:
list bool
Set
Prop
bool

* Polymorphic Types:
list bool

* Variables:
l : list bool
a : bool

* Terms:
BV_full_adder_carry l (@nil bool) false : bool
half_adder_carry a false : bool
@eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a false)) false : Prop
false : bool
bool : Set
@eq bool (BV_full_adder_carry l (@nil bool) false) false : Prop
@nil bool : list bool
BV : Set
BV_full_adder_carry l (@nil bool) (half_adder_carry a false) : bool
list bool : Set
l : list bool
a : bool

* Functions:
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
list  : forall _ : Type, Type
half_adder_carry  : forall (_ : bool) (_ : bool), bool
@nil  : forall A : Type, list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : list bool = @nil bool
lf1 : bool = BV_full_adder_carry l (@nil bool) (half_adder_carry a false)
lf4 : bool = false
lf2 : bool = half_adder_carry a false

Generalizations:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj5: forall (lf2 : bool) (lf4 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma conj6: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma conj7: forall (lf2 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) false.
Lemma conj8: forall (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma conj13: forall (lf2 : bool) (lf4 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) lf4.
Lemma conj14: forall (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) lf4.
Lemma conj15: forall (lf2 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) false.
Lemma conj16: forall (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a false)) false.


<---VALIDITY CHECKS--->
Time elapsed: 62 seconds
Valid:
Lemma conj16: forall (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a false)) false.

Invalid:
Lemma conj15: forall (lf2 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) false.
Lemma conj14: forall (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) lf4.
Lemma conj13: forall (lf2 : bool) (lf4 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) lf4.
Lemma conj8: forall (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma conj7: forall (lf2 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) false.
Lemma conj6: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma conj5: forall (lf2 : bool) (lf4 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 99 seconds
Generalizations:
Lemma conj15: forall (lf2 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) false.
Lemma conj14: forall (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) lf4.
Lemma conj13: forall (lf2 : bool) (lf4 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) lf4.
Lemma conj8: forall (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma conj8_imp: forall (l : list bool) (a : bool) (lf3 : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 false) false,
@eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma conj7: forall (lf2 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) false.
Lemma conj6: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma conj6_imp: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma conj5: forall (lf2 : bool) (lf4 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma conj5_imp: forall (lf2 : bool) (lf4 : bool) (l : list bool) (lf3 : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 131 seconds
Valid:
Lemma conj8_imp: forall (l : list bool) (a : bool) (lf3 : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 false) false,
@eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.

Invalid:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj5_imp: forall (lf2 : bool) (lf4 : bool) (l : list bool) (lf3 : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma conj5: forall (lf2 : bool) (lf4 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma conj6_imp: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma conj6: forall (lf4 : bool) (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma conj7: forall (lf2 : bool) (l : list bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 lf2) false.
Lemma conj8: forall (l : list bool) (a : bool) (lf3 : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma conj13: forall (lf2 : bool) (lf4 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) lf4.
Lemma conj14: forall (lf4 : bool) (l : list bool) (a : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) lf4.
Lemma conj15: forall (lf2 : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) false.


<---CREATE SKETCHES--->
Time elapsed: 131 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq bool false (##hole##)
Sketch conj5_imp_sketch0 : forall _ : @eq bool (##hole##) lf4,
@eq bool (BV_full_adder_carry l lf3 lf2) lf4
Sketch conj5_imp_sketch1 : forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (##hole##) lf4
Sketch conj5_imp_term_sketch0 : @eq bool (BV_full_adder_carry l lf3 lf4) (##hole##)
Sketch conj5_imp_term_sketch1 : @eq bool (BV_full_adder_carry l lf3 lf2) (##hole##)
Sketch conj5_sketch0 : @eq bool (##hole##) lf4
Sketch conj5_term_sketch0 : @eq bool (BV_full_adder_carry l lf3 lf2) (##hole##)
Sketch conj6_imp_sketch0 : forall _ : @eq bool (##hole##) lf4,
@eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4
Sketch conj6_imp_sketch1 : forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (BV_full_adder_carry l lf3 (##hole##)) lf4
Sketch conj6_imp_sketch2 : forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4,
@eq bool (##hole##) lf4
Sketch conj6_imp_term_sketch0 : @eq bool (BV_full_adder_carry l lf3 lf4) (##hole##)
Sketch conj6_imp_term_sketch1 : @eq bool (half_adder_carry a lf4) (##hole##)
Sketch conj6_imp_term_sketch2 : @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) (##hole##)
Sketch conj6_sketch0 : @eq bool (BV_full_adder_carry l lf3 (##hole##)) lf4
Sketch conj6_sketch1 : @eq bool (##hole##) lf4
Sketch conj6_term_sketch0 : @eq bool (half_adder_carry a lf4) (##hole##)
Sketch conj6_term_sketch1 : @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) (##hole##)
Sketch conj7_sketch0 : @eq bool (BV_full_adder_carry l lf3 lf2) (##hole##)
Sketch conj7_sketch1 : @eq bool (##hole##) false
Sketch conj7_term_sketch0 : @eq bool false (##hole##)
Sketch conj7_term_sketch1 : @eq bool (BV_full_adder_carry l lf3 lf2) (##hole##)
Sketch conj8_sketch0 : @eq bool (BV_full_adder_carry l lf3 (##hole##)) false
Sketch conj8_sketch1 : @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a (##hole##)))
  (##hole##)
Sketch conj8_sketch2 : @eq bool (##hole##) false
Sketch conj8_term_sketch0 : @eq bool (half_adder_carry a false) (##hole##)
Sketch conj8_term_sketch1 : @eq bool false (##hole##)
Sketch conj8_term_sketch2 : @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) (##hole##)
Sketch conj13_sketch0 : @eq bool (##hole##) lf4
Sketch conj13_sketch1 : @eq bool (BV_full_adder_carry l (##hole##) lf2) lf4
Sketch conj13_term_sketch0 : @eq bool (BV_full_adder_carry l (@nil bool) lf2) (##hole##)
Sketch conj13_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj14_sketch0 : @eq bool (##hole##) lf4
Sketch conj14_sketch1 : @eq bool (BV_full_adder_carry l (@nil bool) (##hole##)) lf4
Sketch conj14_sketch2 : @eq bool (BV_full_adder_carry l (##hole##) (half_adder_carry a lf4)) lf4
Sketch conj14_term_sketch0 : @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4))
  (##hole##)
Sketch conj14_term_sketch1 : @eq bool (half_adder_carry a lf4) (##hole##)
Sketch conj14_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj15_sketch0 : @eq bool (BV_full_adder_carry l (@nil bool) lf2) (##hole##)
Sketch conj15_sketch1 : @eq bool (##hole##) false
Sketch conj15_sketch2 : @eq bool (BV_full_adder_carry l (##hole##) lf2) false
Sketch conj15_term_sketch0 : @eq bool false (##hole##)
Sketch conj15_term_sketch1 : @eq bool (BV_full_adder_carry l (@nil bool) lf2) (##hole##)
Sketch conj15_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 473 seconds
Problems per Sketch:
Sketch conj15_sketch1 --> Problem  synth_2
Sketch conj7_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_6
Sketch conj14_sketch2 --> Problem  synth_16
Sketch conj15_term_sketch1 --> Problem  synth_13
Sketch conj15_term_sketch2 --> Problem  synth_14
Sketch conj5_imp_sketch1 --> Problem  synth_4
Sketch conj6_imp_sketch2 --> Problem  synth_4
Sketch conj14_term_sketch2 --> Problem  synth_14
Sketch conj6_imp_term_sketch1 --> Problem  synth_8
Sketch conj8_sketch1 --> Problem  synth_10
Sketch conj7_sketch0 --> Problem  synth_5
Sketch conj6_imp_sketch1 --> Problem  synth_4
Sketch conj6_term_sketch0 --> Problem  synth_8
Sketch conj6_imp_sketch0 --> Problem  synth_7
Sketch conj13_term_sketch1 --> Problem  synth_14
Sketch conj8_term_sketch0 --> Problem  synth_11
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj8_sketch2 --> Problem  synth_2
Sketch conj6_imp_term_sketch0 --> Problem  synth_4
Sketch conj14_term_sketch1 --> Problem  synth_8
Sketch conj7_term_sketch1 --> Problem  synth_5
Sketch conj8_term_sketch1 --> Problem  synth_2
Sketch conj6_imp_term_sketch2 --> Problem  synth_7
Sketch conj5_imp_sketch0 --> Problem  synth_3
Sketch conj5_term_sketch0 --> Problem  synth_5
Sketch conj6_sketch0 --> Problem  synth_4
Sketch conj6_sketch1 --> Problem  synth_6
Sketch conj15_sketch2 --> Problem  synth_18
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj13_term_sketch0 --> Problem  synth_13
Sketch conj15_sketch0 --> Problem  synth_13
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj13_sketch1 --> Problem  synth_12
Sketch conj14_sketch0 --> Problem  synth_6
Sketch conj14_term_sketch0 --> Problem  synth_17
Sketch conj13_sketch0 --> Problem  synth_6
Sketch conj8_sketch0 --> Problem  synth_9
Sketch conj5_imp_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch2 --> Problem  synth_10
Sketch conj15_term_sketch0 --> Problem  synth_2
Sketch conj5_imp_term_sketch1 --> Problem  synth_5
Sketch conj14_sketch1 --> Problem  synth_15


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 554 seconds

Problem: synth_18
 @nil bool

Problem: synth_17
 HalfAdder.half_adder_carry lf4 lf4
 HalfAdder.half_adder_carry lf4 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 lf4
 false

Problem: synth_9
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf3 false
 BV_full_adder_carry lf3 l false
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false
 BV_full_adder_carry lf3 (@nil bool) false
 BV_full_adder_carry l (@nil bool) false
 false

Problem: synth_13
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry lf2 lf2
 HalfAdder.half_adder_carry lf2 true
 HalfAdder.half_adder_carry lf2 false
 lf2
 false

Problem: synth_6
 HalfAdder.half_adder_carry lf4 (HalfAdder.half_adder_carry lf4 false)
 HalfAdder.half_adder_carry lf4 lf4
 HalfAdder.half_adder_carry lf4 true
 HalfAdder.half_adder_carry lf4 false
 lf4
 false

Problem: synth_11
 HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a a) false
 HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) false
 HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a false) false
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)
 HalfAdder.half_adder_carry a false
 false

Problem: synth_7
 HalfAdder.half_adder_carry lf4 lf4
 HalfAdder.half_adder_carry lf4 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 lf4
 false

Problem: synth_4
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry lf4 lf4
 HalfAdder.half_adder_carry lf4 true
 HalfAdder.half_adder_carry lf4 false
 lf4
 false

Problem: synth_1
 HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)
 HalfAdder.half_adder_carry lf1 lf1
 HalfAdder.half_adder_carry lf1 true
 HalfAdder.half_adder_carry lf1 false
 lf1
 false

Problem: synth_16
 @nil bool

Problem: synth_15
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry lf4 lf4
 HalfAdder.half_adder_carry lf4 true
 HalfAdder.half_adder_carry lf4 false
 lf4
 false

Problem: synth_14
 @nil bool

Problem: synth_10
 BV_full_adder_carry lf3 l false
 (fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false
 BV_full_adder_carry lf3 (@nil bool) false
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry a false
 false

Problem: synth_8
 HalfAdder.half_adder_carry lf4 lf4
 HalfAdder.half_adder_carry lf4 true
 HalfAdder.half_adder_carry a false
 HalfAdder.half_adder_carry lf4 false
 lf4
 false

Problem: synth_3
 HalfAdder.half_adder_carry lf2 true
 HalfAdder.half_adder_carry lf4 false
 HalfAdder.half_adder_carry lf2 false
 lf4
 lf2
 false

Problem: synth_12
 @nil bool

Problem: synth_5
 BV_full_adder_carry l (@nil bool) false
 HalfAdder.half_adder_carry lf2 lf2
 HalfAdder.half_adder_carry lf2 true
 HalfAdder.half_adder_carry lf2 false
 lf2
 false

Problem: synth_2
 false

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 555 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a false)) false.
Lemma candidate_2: forall (lf3 : list bool) (a : bool) (l : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 false) false, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1   (HalfAdder.half_adder_carry lf1 (HalfAdder.half_adder_carry lf1 false)).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 lf1).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 false).
Lemma candidate_7: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_8: forall (lf1 : bool), @eq bool lf1 (false).
Lemma candidate_9: @eq bool false (false).
Lemma candidate_10: forall (lf3 : list bool) (l : list bool) (lf4 : bool) (lf2 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry lf2 true) lf4, @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma candidate_11: forall (lf3 : list bool) (l : list bool) (lf4 : bool) (lf2 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry lf4 false) lf4, @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma candidate_12: forall (lf3 : list bool) (l : list bool) (lf4 : bool) (lf2 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry lf2 false) lf4, @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma candidate_13: forall (lf3 : list bool) (l : list bool) (lf4 : bool) (lf2 : bool), forall _ : @eq bool (lf4) lf4, @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma candidate_14: forall (lf3 : list bool) (l : list bool) (lf4 : bool) (lf2 : bool), forall _ : @eq bool (lf2) lf4, @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma candidate_15: forall (lf3 : list bool) (l : list bool) (lf4 : bool) (lf2 : bool), forall _ : @eq bool (false) lf4, @eq bool (BV_full_adder_carry l lf3 lf2) lf4.
Lemma candidate_16: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l (@nil bool) false) lf4.
Lemma candidate_17: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_18: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 true) lf4.
Lemma candidate_19: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 false) lf4.
Lemma candidate_20: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (lf4) lf4.
Lemma candidate_21: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (false) lf4.
Lemma candidate_22: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_23: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4) (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_24: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4)   (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_25: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4)   (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_26: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4) (lf4).
Lemma candidate_27: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4) (false).
Lemma candidate_28: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_29: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_30: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_31: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_32: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (lf2).
Lemma candidate_33: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (false).
Lemma candidate_34: forall (lf4 : bool), @eq bool   (HalfAdder.half_adder_carry lf4 (HalfAdder.half_adder_carry lf4 false)) lf4.
Lemma candidate_35: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_36: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 true) lf4.
Lemma candidate_37: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 false) lf4.
Lemma candidate_38: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_39: forall (lf4 : bool), @eq bool (false) lf4.
Lemma candidate_40: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_41: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_42: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_43: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_44: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (lf2).
Lemma candidate_45: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (false).
Lemma candidate_46: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma candidate_47: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry lf4 true) lf4, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma candidate_48: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry a false) lf4, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma candidate_49: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (HalfAdder.half_adder_carry lf4 false) lf4, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma candidate_50: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma candidate_51: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (false) lf4, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) lf4.
Lemma candidate_52: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool   (BV_full_adder_carry l lf3 (BV_full_adder_carry l (@nil bool) false)) lf4.
Lemma candidate_53: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 lf4)) lf4.
Lemma candidate_54: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 true))   lf4.
Lemma candidate_55: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 false))   lf4.
Lemma candidate_56: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (lf4)) lf4.
Lemma candidate_57: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (false)) lf4.
Lemma candidate_58: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l (@nil bool) false) lf4.
Lemma candidate_59: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_60: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 true) lf4.
Lemma candidate_61: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 false) lf4.
Lemma candidate_62: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (lf4) lf4.
Lemma candidate_63: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (false) lf4.
Lemma candidate_64: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_65: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4) (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_66: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4)   (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_67: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4)   (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_68: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4) (lf4).
Lemma candidate_69: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 lf4) (false).
Lemma candidate_70: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_71: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_72: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry a false).
Lemma candidate_73: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_74: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (lf4).
Lemma candidate_75: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (false).
Lemma candidate_76: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_77: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_78: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry a false).
Lemma candidate_79: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_80: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) (lf4).
Lemma candidate_81: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) (false).
Lemma candidate_82: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool   (BV_full_adder_carry l lf3 (BV_full_adder_carry l (@nil bool) false)) lf4.
Lemma candidate_83: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 lf4)) lf4.
Lemma candidate_84: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 true))   lf4.
Lemma candidate_85: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 false))   lf4.
Lemma candidate_86: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (lf4)) lf4.
Lemma candidate_87: forall (lf3 : list bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (false)) lf4.
Lemma candidate_88: forall (lf4 : bool), @eq bool   (HalfAdder.half_adder_carry lf4 (HalfAdder.half_adder_carry lf4 false)) lf4.
Lemma candidate_89: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_90: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 true) lf4.
Lemma candidate_91: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 false) lf4.
Lemma candidate_92: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_93: forall (lf4 : bool), @eq bool (false) lf4.
Lemma candidate_94: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_95: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_96: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry a false).
Lemma candidate_97: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_98: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (lf4).
Lemma candidate_99: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (false).
Lemma candidate_100: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_101: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_102: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry a false).
Lemma candidate_103: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_104: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) (lf4).
Lemma candidate_105: forall (lf3 : list bool) (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a lf4)) (false).
Lemma candidate_106: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_107: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_108: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_109: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_110: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (lf2).
Lemma candidate_111: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (false).
Lemma candidate_112: @eq bool (false) false.
Lemma candidate_113: @eq bool false (false).
Lemma candidate_114: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_115: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_116: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_117: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_118: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (lf2).
Lemma candidate_119: forall (lf3 : list bool) (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l lf3 lf2) (false).
Lemma candidate_120: forall (lf3 : list bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf3 false))   false.
Lemma candidate_121: forall (lf3 : list bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (BV_full_adder_carry lf3 l false)) false.
Lemma candidate_122: forall (lf3 : list bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))   false.
Lemma candidate_123: forall (lf3 : list bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3 (BV_full_adder_carry lf3 (@nil bool) false))   false.
Lemma candidate_124: forall (lf3 : list bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3 (BV_full_adder_carry l (@nil bool) false)) false.
Lemma candidate_125: forall (lf3 : list bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (false)) false.
Lemma candidate_126: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      (half_adder_carry a (BV_full_adder_carry lf3 l false)))   (BV_full_adder_carry lf3 l false).
Lemma candidate_127: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      (half_adder_carry a         ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_128: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      (half_adder_carry a (BV_full_adder_carry lf3 (@nil bool) false)))   (BV_full_adder_carry lf3 (@nil bool) false).
Lemma candidate_129: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      (half_adder_carry a (BV_full_adder_carry l (@nil bool) false)))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_130: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      (half_adder_carry a (HalfAdder.half_adder_carry a false)))   (HalfAdder.half_adder_carry a false).
Lemma candidate_131: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a (false))) (false).
Lemma candidate_132: @eq bool (false) false.
Lemma candidate_133: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a a) false).
Lemma candidate_134: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) false).
Lemma candidate_135: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a false) false).
Lemma candidate_136: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_137: forall (a : bool), @eq bool (half_adder_carry a false) (HalfAdder.half_adder_carry a false).
Lemma candidate_138: forall (a : bool), @eq bool (half_adder_carry a false) (false).
Lemma candidate_139: @eq bool false (false).
Lemma candidate_140: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false))   (BV_full_adder_carry lf3 l false).
Lemma candidate_141: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false))   ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false).
Lemma candidate_142: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false))   (BV_full_adder_carry lf3 (@nil bool) false).
Lemma candidate_143: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false))   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_144: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false))   (HalfAdder.half_adder_carry a false).
Lemma candidate_145: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) (false).
Lemma candidate_146: forall (lf4 : bool), @eq bool   (HalfAdder.half_adder_carry lf4 (HalfAdder.half_adder_carry lf4 false)) lf4.
Lemma candidate_147: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_148: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 true) lf4.
Lemma candidate_149: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 false) lf4.
Lemma candidate_150: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_151: forall (lf4 : bool), @eq bool (false) lf4.
Lemma candidate_152: forall (l : list bool) (lf4 : bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) lf4.
Lemma candidate_153: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_154: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_155: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_156: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_157: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) (lf2).
Lemma candidate_158: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) (false).
Lemma candidate_159: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_160: forall (lf4 : bool), @eq bool   (HalfAdder.half_adder_carry lf4 (HalfAdder.half_adder_carry lf4 false)) lf4.
Lemma candidate_161: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_162: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 true) lf4.
Lemma candidate_163: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 false) lf4.
Lemma candidate_164: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_165: forall (lf4 : bool), @eq bool (false) lf4.
Lemma candidate_166: forall (l : list bool) (lf4 : bool), @eq bool   (BV_full_adder_carry l (@nil bool)      (BV_full_adder_carry l (@nil bool) false)) lf4.
Lemma candidate_167: forall (l : list bool) (lf4 : bool), @eq bool   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry lf4 lf4))   lf4.
Lemma candidate_168: forall (l : list bool) (lf4 : bool), @eq bool   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry lf4 true))   lf4.
Lemma candidate_169: forall (l : list bool) (lf4 : bool), @eq bool   (BV_full_adder_carry l (@nil bool) (HalfAdder.half_adder_carry lf4 false))   lf4.
Lemma candidate_170: forall (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (lf4)) lf4.
Lemma candidate_171: forall (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (false)) lf4.
Lemma candidate_172: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) lf4.
Lemma candidate_173: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_174: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_175: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4))   (HalfAdder.half_adder_carry a false).
Lemma candidate_176: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_177: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) (lf4).
Lemma candidate_178: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4)) (false).
Lemma candidate_179: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 lf4).
Lemma candidate_180: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 true).
Lemma candidate_181: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry a false).
Lemma candidate_182: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_183: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (lf4).
Lemma candidate_184: forall (a : bool) (lf4 : bool), @eq bool (half_adder_carry a lf4) (false).
Lemma candidate_185: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_186: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_187: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_188: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_189: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_190: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) (lf2).
Lemma candidate_191: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) (false).
Lemma candidate_192: @eq bool (false) false.
Lemma candidate_193: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) false.
Lemma candidate_194: @eq bool false (false).
Lemma candidate_195: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (BV_full_adder_carry l (@nil bool) false).
Lemma candidate_196: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 lf2).
Lemma candidate_197: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 true).
Lemma candidate_198: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2)   (HalfAdder.half_adder_carry lf2 false).
Lemma candidate_199: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) (lf2).
Lemma candidate_200: forall (l : list bool) (lf2 : bool), @eq bool (BV_full_adder_carry l (@nil bool) lf2) (false).
Lemma candidate_201: @eq (list bool) (@nil bool) (@nil bool).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 851 seconds
Duplicates removed: 86
Filtered by Quickchick: 90
Filtered by script: 11
Remaining: 14

Lemmas: 
Lemma candidate_35: forall (lf4 : bool), @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 lf1).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (HalfAdder.half_adder_carry lf1 true).
Lemma candidate_140: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false))   (BV_full_adder_carry lf3 l false).
Lemma candidate_136: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry a false)).
Lemma candidate_133: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a a) false).
Lemma candidate_17: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (HalfAdder.half_adder_carry lf4 lf4) lf4.
Lemma candidate_134: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a true) false).
Lemma candidate_135: forall (a : bool), @eq bool (half_adder_carry a false)   (HalfAdder.half_adder_carry (HalfAdder.half_adder_carry a false) false).
Lemma candidate_176: forall (a : bool) (l : list bool) (lf4 : bool), @eq bool (BV_full_adder_carry l (@nil bool) (half_adder_carry a lf4))   (HalfAdder.half_adder_carry lf4 false).
Lemma candidate_2: forall (lf3 : list bool) (a : bool) (l : list bool), forall _ : @eq bool (BV_full_adder_carry l lf3 false) false, @eq bool (BV_full_adder_carry l lf3 (half_adder_carry a false)) false.
Lemma candidate_126: forall (lf3 : list bool) (a : bool) (l : list bool), @eq bool   (BV_full_adder_carry l lf3      (half_adder_carry a (BV_full_adder_carry lf3 l false)))   (BV_full_adder_carry lf3 l false).
Lemma candidate_53: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 lf4)) lf4.
Lemma candidate_54: forall (lf3 : list bool) (l : list bool) (lf4 : bool), forall _ : @eq bool (BV_full_adder_carry l lf3 lf4) lf4, @eq bool (BV_full_adder_carry l lf3 (HalfAdder.half_adder_carry lf4 true))   lf4.
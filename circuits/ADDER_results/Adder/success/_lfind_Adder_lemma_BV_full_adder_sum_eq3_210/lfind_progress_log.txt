File Information
- File name: Adder
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/Adder_lemma_BV_full_adder_sum_eq3_210
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/Adder/_lfind_Adder_lemma_BV_full_adder_sum_eq3_210
- Namespace: Circuits
- Proof name: BV_full_adder_sum_sym
- Theorem: Theorem BV_full_adder_sum_sym: forall (v0 w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder_sum v0 w0 cin0) (BV_full_adder_sum w0 v0 cin0).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import BV.
From CircuitsCoqGym Require Import FullAdder.

Proof Context
* Goal State: @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))

* Hypothesis:
cin : bool
H : forall (w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder_sum l w0 cin0) (BV_full_adder_sum w0 l cin0)
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
BV
bool

* Polymorphic Types:
list bool

* Variables:
cin : bool
l : list bool
a : bool

* Terms:
@eq BV (BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1)
  (BV_full_adder_sum _UNBOUND_REL_2 l _UNBOUND_REL_1) : Prop
cin : bool
BV_full_adder_sum _UNBOUND_REL_2 l _UNBOUND_REL_1 : BV
@cons bool a l : list bool
@nil bool : list bool
l : list bool
@eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))) : Prop
half_adder_sum a cin : bool
bool : Set
BV_full_adder_sum (@cons bool a l) (@nil bool) cin : BV
BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1 : BV
forall (w0 : BV) (cin0 : bool),
@eq BV (BV_full_adder_sum l w0 cin0) (BV_full_adder_sum w0 l cin0) : Prop
consbv (half_adder_sum a cin)
  (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)) : BV
BV : Set
list bool : Set
half_adder_carry a cin : bool
forall cin0 : bool,
@eq BV (BV_full_adder_sum l _UNBOUND_REL_2 cin0)
  (BV_full_adder_sum _UNBOUND_REL_2 l cin0) : Prop
a : bool
BV_full_adder_sum (@nil bool) l (half_adder_carry a cin) : BV

* Functions:
half_adder_sum  : forall (_ : bool) (_ : bool), bool
list  : forall _ : Type, Type
half_adder_carry  : forall (_ : bool) (_ : bool), bool
consbv  : forall (_ : bool) (_ : BV), BV
@nil  : forall A : Type, list A
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : BV = BV_full_adder_sum (@cons bool a l) (@nil bool) cin
lf7 : list bool = @nil bool
lf1 : BV = consbv (half_adder_sum a cin)
  (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))
lf4 : bool = half_adder_carry a cin
lf5 : bool = half_adder_sum a cin
lf2 : BV = BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)
lf6 : list bool = @cons bool a l

Generalizations:
Lemma conj1: forall (lf2 : BV) (lf5 : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 lf2).
Lemma conj3: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj5: forall (lf2 : BV) (cin : bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) lf2).
Lemma conj7: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj11: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj15: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj35: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj39: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj43: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj47: forall (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj65: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv lf5 lf2).
Lemma conj66: forall (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv lf5 lf2).
Lemma conj67: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj68: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj69: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv (half_adder_sum a cin) lf2).
Lemma conj70: forall (lf2 : BV) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj71: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj72: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj75: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj76: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj79: forall (lf6 : list bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj80: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj97: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv lf5 lf2).
Lemma conj98: forall (lf2 : BV) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (consbv lf5 lf2).
Lemma conj99: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj100: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj101: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj102: forall (lf2 : BV) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj103: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj104: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj107: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj108: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj111: forall (lf6 : list bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj112: forall (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).


<---VALIDITY CHECKS--->
Time elapsed: 160 seconds
Valid:
Lemma conj112: forall (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).

Invalid:
Lemma conj111: forall (lf6 : list bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj108: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj107: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj104: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj103: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj102: forall (lf2 : BV) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj101: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj100: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj99: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj98: forall (lf2 : BV) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (consbv lf5 lf2).
Lemma conj97: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv lf5 lf2).
Lemma conj80: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj79: forall (lf6 : list bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj76: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj75: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj72: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj71: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj70: forall (lf2 : BV) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj69: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv (half_adder_sum a cin) lf2).
Lemma conj68: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj67: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj66: forall (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv lf5 lf2).
Lemma conj65: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv lf5 lf2).
Lemma conj47: forall (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj43: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj39: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj35: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj15: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj11: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj7: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj5: forall (lf2 : BV) (cin : bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) lf2).
Lemma conj3: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj1: forall (lf2 : BV) (lf5 : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 lf2).

<---ADD IMPLICATIONS--->
Time elapsed: 230 seconds
Generalizations:
Lemma conj111: forall (lf6 : list bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj108: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj107: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj104: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj103: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj102: forall (lf2 : BV) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj101: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj100: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj99: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj98: forall (lf2 : BV) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (consbv lf5 lf2).
Lemma conj97: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv lf5 lf2).
Lemma conj80: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj79: forall (lf6 : list bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj76: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj75: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj72: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj71: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj70: forall (lf2 : BV) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj69: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv (half_adder_sum a cin) lf2).
Lemma conj68: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj67: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj66: forall (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv lf5 lf2).
Lemma conj65: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv lf5 lf2).
Lemma conj47: forall (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj43: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj39: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj35: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj15: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj11: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj7: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj5: forall (lf2 : BV) (cin : bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) lf2).
Lemma conj3: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj1: forall (lf2 : BV) (lf5 : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 lf2).


<---VALIDITY CHECKS--->
Time elapsed: 313 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : BV) (lf5 : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 lf2).
Lemma conj3: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj5: forall (lf2 : BV) (cin : bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) lf2).
Lemma conj7: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj11: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj15: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj35: forall (lf5 : bool) (lf4 : bool) (l : list bool) (lf3 : BV), @eq BV lf3 (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj39: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj43: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj47: forall (cin : bool) (l : list bool) (a : bool) (lf3 : BV), @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj65: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv lf5 lf2).
Lemma conj66: forall (lf2 : BV) (lf5 : bool) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv lf5 lf2).
Lemma conj67: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj68: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma conj69: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv (half_adder_sum a cin) lf2).
Lemma conj70: forall (lf2 : BV) (cin : bool) (lf7 : list bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj71: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj72: forall (cin : bool) (lf4 : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma conj75: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj76: forall (lf5 : bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj79: forall (lf6 : list bool) (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj80: forall (cin : bool) (l : list bool) (lf7 : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma conj97: forall (lf6 : list bool) (lf2 : BV) (lf5 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv lf5 lf2).
Lemma conj98: forall (lf2 : BV) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (consbv lf5 lf2).
Lemma conj99: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj100: forall (lf5 : bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj101: forall (lf6 : list bool) (lf2 : BV) (cin : bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj102: forall (lf2 : BV) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2).
Lemma conj103: forall (lf6 : list bool) (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj104: forall (cin : bool) (lf4 : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma conj107: forall (lf6 : list bool) (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj108: forall (lf5 : bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma conj111: forall (lf6 : list bool) (cin : bool) (l : list bool) (a : bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).


<---CREATE SKETCHES--->
Time elapsed: 313 seconds
Sketches:
Sketch conj1_sketch0 : @eq BV lf3 (##hole##)
Sketch conj1_term_sketch0 : @eq BV (consbv lf5 lf2) (##hole##)
Sketch conj3_sketch0 : @eq BV lf3 (consbv lf5 (##hole##))
Sketch conj3_sketch1 : @eq BV lf3 (##hole##)
Sketch conj3_term_sketch0 : @eq BV (BV_full_adder_sum lf7 l lf4) (##hole##)
Sketch conj3_term_sketch1 : @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4)) (##hole##)
Sketch conj5_sketch0 : @eq BV lf3 (consbv (##hole##) lf2)
Sketch conj5_sketch1 : @eq BV lf3 (##hole##)
Sketch conj5_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj5_term_sketch1 : @eq BV (consbv (half_adder_sum a cin) lf2) (##hole##)
Sketch conj7_sketch0 : @eq BV lf3 (consbv (##hole##) (BV_full_adder_sum lf7 l lf4))
Sketch conj7_sketch1 : @eq BV lf3 (consbv (half_adder_sum a cin) (##hole##))
Sketch conj7_sketch2 : @eq BV lf3 (##hole##)
Sketch conj7_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj7_term_sketch1 : @eq BV (BV_full_adder_sum lf7 l lf4) (##hole##)
Sketch conj7_term_sketch2 : @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))
  (##hole##)
Sketch conj11_sketch0 : @eq BV lf3 (##hole##)
Sketch conj11_sketch1 : @eq BV lf3 (consbv lf5 (##hole##))
Sketch conj11_sketch2 : @eq BV lf3 (consbv lf5 (BV_full_adder_sum lf7 l (##hole##)))
Sketch conj11_term_sketch0 : @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
  (##hole##)
Sketch conj11_term_sketch1 : @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin)) (##hole##)
Sketch conj11_term_sketch2 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj15_sketch0 : @eq BV lf3
  (consbv (##hole##) (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj15_sketch1 : @eq BV lf3 (consbv (half_adder_sum a cin) (##hole##))
Sketch conj15_sketch2 : @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l (##hole##)))
Sketch conj15_sketch3 : @eq BV lf3 (##hole##)
Sketch conj15_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj15_term_sketch1 : @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin)) (##hole##)
Sketch conj15_term_sketch2 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj15_term_sketch3 : @eq BV
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))) (##hole##)
Sketch conj35_sketch0 : @eq BV lf3 (consbv lf5 (##hole##))
Sketch conj35_sketch1 : @eq BV lf3 (##hole##)
Sketch conj35_sketch2 : @eq BV lf3 (consbv lf5 (BV_full_adder_sum (##hole##) l lf4))
Sketch conj35_term_sketch0 : @eq BV (BV_full_adder_sum (@nil bool) l lf4) (##hole##)
Sketch conj35_term_sketch1 : @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)) (##hole##)
Sketch conj35_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj39_sketch0 : @eq BV lf3 (consbv (half_adder_sum a cin) (##hole##))
Sketch conj39_sketch1 : @eq BV lf3 (##hole##)
Sketch conj39_sketch2 : @eq BV lf3 (consbv (##hole##) (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj39_sketch3 : @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (##hole##) l lf4))
Sketch conj39_term_sketch0 : @eq BV (BV_full_adder_sum (@nil bool) l lf4) (##hole##)
Sketch conj39_term_sketch1 : @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))
  (##hole##)
Sketch conj39_term_sketch2 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj39_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj43_sketch0 : @eq BV lf3 (##hole##)
Sketch conj43_sketch1 : @eq BV lf3
  (consbv lf5 (BV_full_adder_sum (##hole##) l (half_adder_carry a cin)))
Sketch conj43_sketch2 : @eq BV lf3 (consbv lf5 (BV_full_adder_sum (@nil bool) l (##hole##)))
Sketch conj43_sketch3 : @eq BV lf3 (consbv lf5 (##hole##))
Sketch conj43_term_sketch0 : @eq BV
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
  (##hole##)
Sketch conj43_term_sketch1 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj43_term_sketch2 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj43_term_sketch3 : @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)) (##hole##)
Sketch conj47_sketch0 : @eq BV lf3
  (consbv (##hole##)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
Sketch conj47_sketch1 : @eq BV lf3 (##hole##)
Sketch conj47_sketch2 : @eq BV lf3
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (##hole##) l (half_adder_carry a cin)))
Sketch conj47_sketch3 : @eq BV lf3
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l (##hole##)))
Sketch conj47_sketch4 : @eq BV lf3 (consbv (half_adder_sum a cin) (##hole##))
Sketch conj47_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj47_term_sketch1 : @eq BV
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))) (##hole##)
Sketch conj47_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj47_term_sketch3 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj47_term_sketch4 : @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)) (##hole##)
Sketch conj65_sketch0 : @eq BV (##hole##) (consbv lf5 lf2)
Sketch conj65_sketch1 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj65_term_sketch0 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj65_term_sketch1 : @eq BV (consbv lf5 lf2) (##hole##)
Sketch conj66_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj66_sketch1 : @eq BV (##hole##) (consbv lf5 lf2)
Sketch conj66_sketch2 : @eq BV (BV_full_adder_sum (##hole##) lf7 cin) (consbv lf5 lf2)
Sketch conj66_term_sketch0 : @eq BV (consbv lf5 lf2) (##hole##)
Sketch conj66_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj66_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj67_sketch0 : @eq BV (##hole##) (consbv lf5 (BV_full_adder_sum lf7 l lf4))
Sketch conj67_sketch1 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv lf5 (##hole##))
Sketch conj67_sketch2 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj67_term_sketch0 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj67_term_sketch1 : @eq BV (BV_full_adder_sum lf7 l lf4) (##hole##)
Sketch conj67_term_sketch2 : @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4)) (##hole##)
Sketch conj68_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv lf5 (##hole##))
Sketch conj68_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj68_sketch2 : @eq BV (##hole##) (consbv lf5 (BV_full_adder_sum lf7 l lf4))
Sketch conj68_sketch3 : @eq BV (BV_full_adder_sum (##hole##) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l lf4))
Sketch conj68_term_sketch0 : @eq BV (BV_full_adder_sum lf7 l lf4) (##hole##)
Sketch conj68_term_sketch1 : @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4)) (##hole##)
Sketch conj68_term_sketch2 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj68_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj69_sketch0 : @eq BV (##hole##) (consbv (half_adder_sum a cin) lf2)
Sketch conj69_sketch1 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv (##hole##) lf2)
Sketch conj69_sketch2 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj69_term_sketch0 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj69_term_sketch1 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj69_term_sketch2 : @eq BV (consbv (half_adder_sum a cin) lf2) (##hole##)
Sketch conj70_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv (##hole##) lf2)
Sketch conj70_sketch1 : @eq BV (##hole##) (consbv (half_adder_sum a cin) lf2)
Sketch conj70_sketch2 : @eq BV (BV_full_adder_sum (##hole##) lf7 cin)
  (consbv (half_adder_sum a cin) lf2)
Sketch conj70_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj70_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj70_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj70_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj70_term_sketch3 : @eq BV (consbv (half_adder_sum a cin) lf2) (##hole##)
Sketch conj71_sketch0 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))
Sketch conj71_sketch1 : @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (##hole##) (BV_full_adder_sum lf7 l lf4))
Sketch conj71_sketch2 : @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj71_sketch3 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj71_term_sketch0 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj71_term_sketch1 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj71_term_sketch2 : @eq BV (BV_full_adder_sum lf7 l lf4) (##hole##)
Sketch conj71_term_sketch3 : @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))
  (##hole##)
Sketch conj72_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (##hole##) (BV_full_adder_sum lf7 l lf4))
Sketch conj72_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj72_sketch2 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))
Sketch conj72_sketch3 : @eq BV (BV_full_adder_sum (##hole##) lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))
Sketch conj72_sketch4 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj72_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj72_term_sketch1 : @eq BV (BV_full_adder_sum lf7 l lf4) (##hole##)
Sketch conj72_term_sketch2 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj72_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj72_term_sketch4 : @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))
  (##hole##)
Sketch conj75_sketch0 : @eq BV (##hole##)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj75_sketch1 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj75_sketch2 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (consbv lf5 (##hole##))
Sketch conj75_sketch3 : @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (##hole##)))
Sketch conj75_term_sketch0 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj75_term_sketch1 : @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
  (##hole##)
Sketch conj75_term_sketch2 : @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin)) (##hole##)
Sketch conj75_term_sketch3 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj76_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj76_sketch1 : @eq BV (##hole##)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj76_sketch2 : @eq BV (BV_full_adder_sum (##hole##) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj76_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (consbv lf5 (##hole##))
Sketch conj76_sketch4 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv lf5 (BV_full_adder_sum lf7 l (##hole##)))
Sketch conj76_term_sketch0 : @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
  (##hole##)
Sketch conj76_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj76_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj76_term_sketch3 : @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin)) (##hole##)
Sketch conj76_term_sketch4 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj79_sketch0 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj79_sketch1 : @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (##hole##) (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj79_sketch2 : @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj79_sketch3 : @eq BV (BV_full_adder_sum lf6 lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l (##hole##)))
Sketch conj79_sketch4 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj79_term_sketch0 : @eq BV (BV_full_adder_sum lf6 lf7 cin) (##hole##)
Sketch conj79_term_sketch1 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj79_term_sketch2 : @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin)) (##hole##)
Sketch conj79_term_sketch3 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj79_term_sketch4 : @eq BV
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))) (##hole##)
Sketch conj80_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (##hole##) (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj80_sketch1 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj80_sketch2 : @eq BV (BV_full_adder_sum (##hole##) lf7 cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin)))
Sketch conj80_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj80_sketch4 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l (##hole##)))
Sketch conj80_sketch5 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj80_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj80_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin) (##hole##)
Sketch conj80_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj80_term_sketch3 : @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin)) (##hole##)
Sketch conj80_term_sketch4 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj80_term_sketch5 : @eq BV
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum lf7 l (half_adder_carry a cin))) (##hole##)
Sketch conj97_sketch0 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj97_sketch1 : @eq BV (##hole##) (consbv lf5 lf2)
Sketch conj97_sketch2 : @eq BV (BV_full_adder_sum lf6 (##hole##) cin) (consbv lf5 lf2)
Sketch conj97_term_sketch0 : @eq BV (consbv lf5 lf2) (##hole##)
Sketch conj97_term_sketch1 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj97_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj98_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj98_sketch1 : @eq BV (##hole##) (consbv lf5 lf2)
Sketch conj98_sketch2 : @eq BV (BV_full_adder_sum (##hole##) (@nil bool) cin) (consbv lf5 lf2)
Sketch conj98_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) (##hole##) cin) (consbv lf5 lf2)
Sketch conj98_term_sketch0 : @eq BV (consbv lf5 lf2) (##hole##)
Sketch conj98_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj98_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj98_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj99_sketch0 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv lf5 (##hole##))
Sketch conj99_sketch1 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj99_sketch2 : @eq BV (##hole##) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj99_sketch3 : @eq BV (BV_full_adder_sum lf6 (##hole##) cin)
  (consbv lf5 (BV_full_adder_sum (##hole##) l lf4))
Sketch conj99_term_sketch0 : @eq BV (BV_full_adder_sum (@nil bool) l lf4) (##hole##)
Sketch conj99_term_sketch1 : @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)) (##hole##)
Sketch conj99_term_sketch2 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj99_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj100_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (##hole##))
Sketch conj100_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj100_sketch2 : @eq BV (##hole##) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj100_sketch3 : @eq BV (BV_full_adder_sum (##hole##) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj100_sketch4 : @eq BV (BV_full_adder_sum (@cons bool a l) (##hole##) cin)
  (consbv lf5 (BV_full_adder_sum (##hole##) l lf4))
Sketch conj100_term_sketch0 : @eq BV (BV_full_adder_sum (@nil bool) l lf4) (##hole##)
Sketch conj100_term_sketch1 : @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)) (##hole##)
Sketch conj100_term_sketch2 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj100_term_sketch3 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj100_term_sketch4 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj101_sketch0 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv (##hole##) lf2)
Sketch conj101_sketch1 : @eq BV (##hole##) (consbv (half_adder_sum a cin) lf2)
Sketch conj101_sketch2 : @eq BV (BV_full_adder_sum lf6 (##hole##) cin)
  (consbv (half_adder_sum a cin) lf2)
Sketch conj101_sketch3 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj101_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj101_term_sketch1 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj101_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj101_term_sketch3 : @eq BV (consbv (half_adder_sum a cin) lf2) (##hole##)
Sketch conj102_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (##hole##) lf2)
Sketch conj102_sketch1 : @eq BV (##hole##) (consbv (half_adder_sum a cin) lf2)
Sketch conj102_sketch2 : @eq BV (BV_full_adder_sum (##hole##) (@nil bool) cin)
  (consbv (half_adder_sum a cin) lf2)
Sketch conj102_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) (##hole##) cin)
  (consbv (half_adder_sum a cin) lf2)
Sketch conj102_sketch4 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj102_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj102_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj102_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj102_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj102_term_sketch4 : @eq BV (consbv (half_adder_sum a cin) lf2) (##hole##)
Sketch conj103_sketch0 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj103_sketch1 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj103_sketch2 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (##hole##) (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj103_sketch3 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj103_sketch4 : @eq BV (BV_full_adder_sum lf6 (##hole##) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (##hole##) l lf4))
Sketch conj103_term_sketch0 : @eq BV (BV_full_adder_sum (@nil bool) l lf4) (##hole##)
Sketch conj103_term_sketch1 : @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))
  (##hole##)
Sketch conj103_term_sketch2 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj103_term_sketch3 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj103_term_sketch4 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj104_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj104_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj104_sketch2 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv (##hole##) (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj104_sketch3 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj104_sketch4 : @eq BV (BV_full_adder_sum (##hole##) (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))
Sketch conj104_sketch5 : @eq BV (BV_full_adder_sum (@cons bool a l) (##hole##) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (##hole##) l lf4))
Sketch conj104_term_sketch0 : @eq BV (BV_full_adder_sum (@nil bool) l lf4) (##hole##)
Sketch conj104_term_sketch1 : @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))
  (##hole##)
Sketch conj104_term_sketch2 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj104_term_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj104_term_sketch4 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj104_term_sketch5 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj107_sketch0 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj107_sketch1 : @eq BV (##hole##)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
Sketch conj107_sketch2 : @eq BV (BV_full_adder_sum lf6 (##hole##) cin)
  (consbv lf5 (BV_full_adder_sum (##hole##) l (half_adder_carry a cin)))
Sketch conj107_sketch3 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (##hole##)))
Sketch conj107_sketch4 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (consbv lf5 (##hole##))
Sketch conj107_term_sketch0 : @eq BV
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
  (##hole##)
Sketch conj107_term_sketch1 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj107_term_sketch2 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj107_term_sketch3 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj107_term_sketch4 : @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)) (##hole##)
Sketch conj108_sketch0 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj108_sketch1 : @eq BV (##hole##)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
Sketch conj108_sketch2 : @eq BV (BV_full_adder_sum (##hole##) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
Sketch conj108_sketch3 : @eq BV (BV_full_adder_sum (@cons bool a l) (##hole##) cin)
  (consbv lf5 (BV_full_adder_sum (##hole##) l (half_adder_carry a cin)))
Sketch conj108_sketch4 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (##hole##)))
Sketch conj108_sketch5 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)
  (consbv lf5 (##hole##))
Sketch conj108_term_sketch0 : @eq BV
  (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
  (##hole##)
Sketch conj108_term_sketch1 : @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin) (##hole##)
Sketch conj108_term_sketch2 : @eq (list bool) (@cons bool a l) (##hole##)
Sketch conj108_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj108_term_sketch4 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj108_term_sketch5 : @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)) (##hole##)
Sketch conj111_sketch0 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (##hole##)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
Sketch conj111_sketch1 : @eq BV (##hole##)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))
Sketch conj111_sketch2 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj111_sketch3 : @eq BV (BV_full_adder_sum lf6 (##hole##) cin)
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (##hole##) l (half_adder_carry a cin)))
Sketch conj111_sketch4 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l (##hole##)))
Sketch conj111_sketch5 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)
  (consbv (half_adder_sum a cin) (##hole##))
Sketch conj111_term_sketch0 : @eq bool (half_adder_sum a cin) (##hole##)
Sketch conj111_term_sketch1 : @eq BV (BV_full_adder_sum lf6 (@nil bool) cin) (##hole##)
Sketch conj111_term_sketch2 : @eq BV
  (consbv (half_adder_sum a cin)
     (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))) (##hole##)
Sketch conj111_term_sketch3 : @eq (list bool) (@nil bool) (##hole##)
Sketch conj111_term_sketch4 : @eq bool (half_adder_carry a cin) (##hole##)
Sketch conj111_term_sketch5 : @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2670 seconds
Problems per Sketch:
Sketch conj69_sketch0 --> Problem  synth_8
Sketch conj101_term_sketch2 --> Problem  synth_22
Sketch conj15_term_sketch2 --> Problem  synth_15
Sketch conj108_term_sketch2 --> Problem  synth_37
Sketch conj66_sketch0 --> Problem  synth_35
Sketch conj75_sketch1 --> Problem  synth_34
Sketch conj65_term_sketch0 --> Problem  synth_34
Sketch conj80_sketch1 --> Problem  synth_18
Sketch conj39_sketch0 --> Problem  synth_10
Sketch conj104_sketch2 --> Problem  synth_74
Sketch conj7_term_sketch1 --> Problem  synth_4
Sketch conj67_sketch0 --> Problem  synth_5
Sketch conj71_term_sketch2 --> Problem  synth_4
Sketch conj80_term_sketch2 --> Problem  synth_37
Sketch conj5_term_sketch0 --> Problem  synth_7
Sketch conj104_term_sketch2 --> Problem  synth_7
Sketch conj70_sketch2 --> Problem  synth_43
Sketch conj101_sketch0 --> Problem  synth_66
Sketch conj7_sketch2 --> Problem  synth_1
Sketch conj35_sketch0 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj69_sketch2 --> Problem  synth_34
Sketch conj76_sketch0 --> Problem  synth_35
Sketch conj47_sketch2 --> Problem  synth_31
Sketch conj43_term_sketch1 --> Problem  synth_22
Sketch conj100_sketch0 --> Problem  synth_63
Sketch conj70_term_sketch3 --> Problem  synth_8
Sketch conj107_term_sketch3 --> Problem  synth_15
Sketch conj70_term_sketch1 --> Problem  synth_35
Sketch conj15_term_sketch3 --> Problem  synth_18
Sketch conj107_sketch2 --> Problem  synth_77
Sketch conj97_term_sketch1 --> Problem  synth_57
Sketch conj43_sketch2 --> Problem  synth_27
Sketch conj100_sketch4 --> Problem  synth_65
Sketch conj80_term_sketch0 --> Problem  synth_7
Sketch conj3_term_sketch1 --> Problem  synth_5
Sketch conj66_sketch1 --> Problem  synth_2
Sketch conj76_sketch4 --> Problem  synth_51
Sketch conj99_sketch0 --> Problem  synth_61
Sketch conj15_sketch1 --> Problem  synth_10
Sketch conj67_term_sketch1 --> Problem  synth_4
Sketch conj72_term_sketch2 --> Problem  synth_35
Sketch conj67_term_sketch0 --> Problem  synth_34
Sketch conj72_sketch0 --> Problem  synth_46
Sketch conj68_sketch1 --> Problem  synth_35
Sketch conj47_term_sketch1 --> Problem  synth_33
Sketch conj76_sketch3 --> Problem  synth_39
Sketch conj69_term_sketch0 --> Problem  synth_34
Sketch conj68_sketch3 --> Problem  synth_40
Sketch conj97_term_sketch2 --> Problem  synth_22
Sketch conj97_term_sketch0 --> Problem  synth_2
Sketch conj107_term_sketch0 --> Problem  synth_28
Sketch conj101_term_sketch3 --> Problem  synth_8
Sketch conj70_term_sketch2 --> Problem  synth_37
Sketch conj79_term_sketch2 --> Problem  synth_14
Sketch conj75_term_sketch0 --> Problem  synth_34
Sketch conj98_term_sketch3 --> Problem  synth_22
Sketch conj101_sketch2 --> Problem  synth_67
Sketch conj35_sketch1 --> Problem  synth_1
Sketch conj104_sketch4 --> Problem  synth_75
Sketch conj108_sketch3 --> Problem  synth_80
Sketch conj103_term_sketch4 --> Problem  synth_22
Sketch conj71_sketch0 --> Problem  synth_11
Sketch conj103_sketch1 --> Problem  synth_57
Sketch conj79_sketch1 --> Problem  synth_52
Sketch conj108_term_sketch3 --> Problem  synth_22
Sketch conj80_term_sketch3 --> Problem  synth_14
Sketch conj111_term_sketch1 --> Problem  synth_57
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj100_term_sketch4 --> Problem  synth_22
Sketch conj47_term_sketch3 --> Problem  synth_15
Sketch conj7_sketch1 --> Problem  synth_10
Sketch conj98_term_sketch2 --> Problem  synth_37
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj70_sketch1 --> Problem  synth_8
Sketch conj70_term_sketch0 --> Problem  synth_7
Sketch conj66_term_sketch2 --> Problem  synth_37
Sketch conj79_term_sketch4 --> Problem  synth_18
Sketch conj39_sketch3 --> Problem  synth_24
Sketch conj102_term_sketch4 --> Problem  synth_8
Sketch conj72_sketch2 --> Problem  synth_11
Sketch conj39_term_sketch2 --> Problem  synth_7
Sketch conj15_sketch3 --> Problem  synth_1
Sketch conj65_sketch0 --> Problem  synth_2
Sketch conj104_term_sketch0 --> Problem  synth_20
Sketch conj80_sketch3 --> Problem  synth_47
Sketch conj43_sketch0 --> Problem  synth_1
Sketch conj76_sketch1 --> Problem  synth_13
Sketch conj69_term_sketch2 --> Problem  synth_8
Sketch conj104_term_sketch1 --> Problem  synth_25
Sketch conj107_term_sketch2 --> Problem  synth_22
Sketch conj104_term_sketch5 --> Problem  synth_22
Sketch conj101_term_sketch1 --> Problem  synth_57
Sketch conj7_term_sketch0 --> Problem  synth_7
Sketch conj75_sketch0 --> Problem  synth_13
Sketch conj67_sketch1 --> Problem  synth_38
Sketch conj107_sketch4 --> Problem  synth_61
Sketch conj108_term_sketch4 --> Problem  synth_15
Sketch conj68_sketch0 --> Problem  synth_39
Sketch conj100_term_sketch3 --> Problem  synth_37
Sketch conj98_sketch0 --> Problem  synth_33
Sketch conj80_term_sketch1 --> Problem  synth_35
Sketch conj97_sketch0 --> Problem  synth_57
Sketch conj79_sketch4 --> Problem  synth_34
Sketch conj100_term_sketch2 --> Problem  synth_33
Sketch conj80_sketch4 --> Problem  synth_56
Sketch conj71_term_sketch1 --> Problem  synth_7
Sketch conj11_sketch2 --> Problem  synth_12
Sketch conj75_sketch3 --> Problem  synth_49
Sketch conj43_sketch3 --> Problem  synth_3
Sketch conj80_term_sketch5 --> Problem  synth_18
Sketch conj66_sketch2 --> Problem  synth_36
Sketch conj5_sketch0 --> Problem  synth_6
Sketch conj103_sketch0 --> Problem  synth_71
Sketch conj72_term_sketch3 --> Problem  synth_37
Sketch conj43_sketch1 --> Problem  synth_26
Sketch conj102_sketch2 --> Problem  synth_69
Sketch conj72_sketch3 --> Problem  synth_48
Sketch conj79_term_sketch3 --> Problem  synth_15
Sketch conj71_sketch1 --> Problem  synth_44
Sketch conj7_term_sketch2 --> Problem  synth_11
Sketch conj76_term_sketch3 --> Problem  synth_14
Sketch conj69_term_sketch1 --> Problem  synth_7
Sketch conj100_sketch1 --> Problem  synth_33
Sketch conj99_sketch2 --> Problem  synth_21
Sketch conj107_term_sketch4 --> Problem  synth_29
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj47_term_sketch0 --> Problem  synth_7
Sketch conj99_term_sketch2 --> Problem  synth_57
Sketch conj99_term_sketch0 --> Problem  synth_20
Sketch conj98_term_sketch1 --> Problem  synth_33
Sketch conj39_term_sketch1 --> Problem  synth_25
Sketch conj103_sketch4 --> Problem  synth_73
Sketch conj68_term_sketch3 --> Problem  synth_37
Sketch conj103_term_sketch3 --> Problem  synth_57
Sketch conj75_term_sketch3 --> Problem  synth_15
Sketch conj80_sketch0 --> Problem  synth_54
Sketch conj102_sketch0 --> Problem  synth_68
Sketch conj76_term_sketch0 --> Problem  synth_13
Sketch conj111_term_sketch4 --> Problem  synth_15
Sketch conj97_sketch1 --> Problem  synth_2
Sketch conj107_sketch3 --> Problem  synth_78
Sketch conj101_term_sketch0 --> Problem  synth_7
Sketch conj47_sketch4 --> Problem  synth_10
Sketch conj72_term_sketch1 --> Problem  synth_4
Sketch conj47_term_sketch2 --> Problem  synth_22
Sketch conj76_term_sketch2 --> Problem  synth_37
Sketch conj111_term_sketch2 --> Problem  synth_33
Sketch conj75_term_sketch2 --> Problem  synth_14
Sketch conj70_sketch3 --> Problem  synth_35
Sketch conj75_term_sketch1 --> Problem  synth_13
Sketch conj101_sketch1 --> Problem  synth_8
Sketch conj99_term_sketch3 --> Problem  synth_22
Sketch conj35_term_sketch1 --> Problem  synth_21
Sketch conj100_sketch3 --> Problem  synth_64
Sketch conj68_sketch2 --> Problem  synth_5
Sketch conj11_term_sketch1 --> Problem  synth_14
Sketch conj103_term_sketch2 --> Problem  synth_7
Sketch conj79_sketch3 --> Problem  synth_53
Sketch conj11_term_sketch2 --> Problem  synth_15
Sketch conj111_term_sketch5 --> Problem  synth_29
Sketch conj102_term_sketch1 --> Problem  synth_33
Sketch conj72_sketch1 --> Problem  synth_47
Sketch conj102_term_sketch2 --> Problem  synth_37
Sketch conj68_term_sketch2 --> Problem  synth_35
Sketch conj80_sketch2 --> Problem  synth_55
Sketch conj111_sketch3 --> Problem  synth_83
Sketch conj11_term_sketch0 --> Problem  synth_13
Sketch conj107_sketch1 --> Problem  synth_28
Sketch conj68_term_sketch1 --> Problem  synth_5
Sketch conj72_sketch4 --> Problem  synth_35
Sketch conj1_term_sketch0 --> Problem  synth_2
Sketch conj97_sketch2 --> Problem  synth_58
Sketch conj103_term_sketch1 --> Problem  synth_25
Sketch conj39_term_sketch3 --> Problem  synth_22
Sketch conj47_sketch3 --> Problem  synth_32
Sketch conj35_term_sketch2 --> Problem  synth_22
Sketch conj108_term_sketch0 --> Problem  synth_28
Sketch conj103_sketch3 --> Problem  synth_25
Sketch conj80_sketch5 --> Problem  synth_35
Sketch conj15_term_sketch1 --> Problem  synth_14
Sketch conj100_term_sketch0 --> Problem  synth_20
Sketch conj80_term_sketch4 --> Problem  synth_15
Sketch conj47_sketch1 --> Problem  synth_1
Sketch conj108_sketch1 --> Problem  synth_28
Sketch conj108_sketch0 --> Problem  synth_33
Sketch conj99_term_sketch1 --> Problem  synth_21
Sketch conj98_sketch2 --> Problem  synth_59
Sketch conj108_sketch2 --> Problem  synth_79
Sketch conj15_sketch2 --> Problem  synth_17
Sketch conj104_sketch5 --> Problem  synth_76
Sketch conj108_term_sketch1 --> Problem  synth_33
Sketch conj68_term_sketch0 --> Problem  synth_4
Sketch conj76_term_sketch4 --> Problem  synth_15
Sketch conj108_sketch4 --> Problem  synth_81
Sketch conj47_term_sketch4 --> Problem  synth_29
Sketch conj99_sketch1 --> Problem  synth_57
Sketch conj111_sketch1 --> Problem  synth_33
Sketch conj111_sketch5 --> Problem  synth_71
Sketch conj11_sketch0 --> Problem  synth_1
Sketch conj39_sketch1 --> Problem  synth_1
Sketch conj107_sketch0 --> Problem  synth_57
Sketch conj108_sketch5 --> Problem  synth_63
Sketch conj76_term_sketch1 --> Problem  synth_35
Sketch conj66_term_sketch0 --> Problem  synth_2
Sketch conj5_term_sketch1 --> Problem  synth_8
Sketch conj111_term_sketch3 --> Problem  synth_22
Sketch conj79_term_sketch1 --> Problem  synth_7
Sketch conj7_sketch0 --> Problem  synth_9
Sketch conj11_sketch1 --> Problem  synth_3
Sketch conj71_sketch2 --> Problem  synth_45
Sketch conj111_term_sketch0 --> Problem  synth_7
Sketch conj102_sketch1 --> Problem  synth_8
Sketch conj72_term_sketch4 --> Problem  synth_11
Sketch conj111_sketch2 --> Problem  synth_57
Sketch conj75_sketch2 --> Problem  synth_38
Sketch conj103_term_sketch0 --> Problem  synth_20
Sketch conj35_sketch2 --> Problem  synth_19
Sketch conj98_sketch1 --> Problem  synth_2
Sketch conj3_sketch1 --> Problem  synth_1
Sketch conj104_sketch0 --> Problem  synth_29
Sketch conj103_sketch2 --> Problem  synth_72
Sketch conj39_sketch2 --> Problem  synth_23
Sketch conj104_sketch3 --> Problem  synth_25
Sketch conj107_term_sketch1 --> Problem  synth_57
Sketch conj70_sketch0 --> Problem  synth_42
Sketch conj69_sketch1 --> Problem  synth_41
Sketch conj79_sketch0 --> Problem  synth_18
Sketch conj100_term_sketch1 --> Problem  synth_21
Sketch conj65_sketch1 --> Problem  synth_34
Sketch conj43_term_sketch0 --> Problem  synth_28
Sketch conj104_term_sketch4 --> Problem  synth_37
Sketch conj39_term_sketch0 --> Problem  synth_20
Sketch conj102_term_sketch0 --> Problem  synth_7
Sketch conj104_sketch1 --> Problem  synth_33
Sketch conj67_sketch2 --> Problem  synth_34
Sketch conj5_sketch1 --> Problem  synth_1
Sketch conj71_sketch3 --> Problem  synth_34
Sketch conj66_term_sketch1 --> Problem  synth_35
Sketch conj76_sketch2 --> Problem  synth_50
Sketch conj108_term_sketch5 --> Problem  synth_29
Sketch conj102_sketch4 --> Problem  synth_33
Sketch conj100_sketch2 --> Problem  synth_21
Sketch conj79_term_sketch0 --> Problem  synth_34
Sketch conj111_sketch4 --> Problem  synth_84
Sketch conj101_sketch3 --> Problem  synth_57
Sketch conj43_term_sketch3 --> Problem  synth_29
Sketch conj102_sketch3 --> Problem  synth_70
Sketch conj98_sketch3 --> Problem  synth_60
Sketch conj43_term_sketch2 --> Problem  synth_15
Sketch conj104_term_sketch3 --> Problem  synth_33
Sketch conj65_term_sketch1 --> Problem  synth_2
Sketch conj35_term_sketch0 --> Problem  synth_20
Sketch conj111_sketch0 --> Problem  synth_82
Sketch conj15_sketch0 --> Problem  synth_16
Sketch conj98_term_sketch0 --> Problem  synth_2
Sketch conj79_sketch2 --> Problem  synth_45
Sketch conj102_term_sketch3 --> Problem  synth_22
Sketch conj72_term_sketch0 --> Problem  synth_7
Sketch conj99_sketch3 --> Problem  synth_62
Sketch conj71_term_sketch0 --> Problem  synth_34
Sketch conj71_term_sketch3 --> Problem  synth_11
Sketch conj67_term_sketch2 --> Problem  synth_5
Sketch conj47_sketch0 --> Problem  synth_30


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 2907 seconds

Problem: synth_63
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)

Problem: synth_68

Problem: synth_67

Problem: synth_77
 @nil bool

Problem: synth_64
 @cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_carry cin true)) l
 @cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 true)) l
 @cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_sum cin false)) l
 @cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum lf5 false)) l
 @cons bool (HalfAdder.half_adder_sum lf5 cin) l
 @cons bool (HalfAdder.half_adder_sum cin lf5) l

Problem: synth_11
 BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))
 BV_full_adder_sum lf7 (@cons bool cin l) a
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV_full_adder_sum lf7 (@cons bool a l) cin
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_54
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_sum cin a
 HalfAdder.half_adder_sum a cin

Problem: synth_39
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)

Problem: synth_46
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_sum cin a
 HalfAdder.half_adder_sum a cin

Problem: synth_66

Problem: synth_57
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)
 BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)
 BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin
 BV_full_adder_sum lf6 (@nil bool) cin

Problem: synth_59

Problem: synth_31

Problem: synth_8

Problem: synth_34
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)
 BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)
 BV_full_adder_sum lf6 lf7 cin
 BV_full_adder_sum lf7 lf6 cin
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin
 BV_full_adder_sum lf6 (@nil bool) cin

Problem: synth_5
 BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false))
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))
 BV.consbv lf5 (BV_full_adder_sum lf7 l lf4)
 BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)
 BV.consbv lf5 (BV_full_adder_sum l lf7 lf4)
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)

Problem: synth_37
 @cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l
 @cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_58

Problem: synth_53
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_2

Problem: synth_22
 @nil bool

Problem: synth_18
 BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))
 BV_full_adder_sum lf7 (@cons bool cin l) a
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV_full_adder_sum lf7 (@cons bool a l) cin
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_21
 BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true))
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true))
 BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false))
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))
 BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)

Problem: synth_72

Problem: synth_56
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_41

Problem: synth_49
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 cin)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 cin)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum cin lf5)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry cin lf5)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum true lf5)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)

Problem: synth_75
 @cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry lf4 false)) l
 @cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin false)) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_25
 BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))
 BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_13
 BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))
 BV_full_adder_sum lf7 (@cons bool cin l) a
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV_full_adder_sum lf7 (@cons bool a l) cin
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_6

Problem: synth_4
 BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)
 BV_full_adder_sum lf7 l lf4
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4
 BV_full_adder_sum l lf7 lf4
 BV_full_adder_sum l (@nil bool) lf4

Problem: synth_38

Problem: synth_65
 @nil bool

Problem: synth_23

Problem: synth_19

Problem: synth_10

Problem: synth_24

Problem: synth_32

Problem: synth_48
 @cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf7 a) l
 @cons bool (BV_full_adder_carry lf7 (@nil bool) a) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_51
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum lf5 true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_35
 BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))
 BV_full_adder_sum lf7 (@cons bool cin l) a
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV_full_adder_sum lf7 (@cons bool a l) cin
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_28
 BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))
 BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))
 BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_73
 @nil bool

Problem: synth_17

Problem: synth_29
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)

Problem: synth_45

Problem: synth_76
 @nil bool

Problem: synth_26

Problem: synth_70

Problem: synth_9

Problem: synth_30

Problem: synth_81
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum lf5 true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_1

Problem: synth_69

Problem: synth_55
 @cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf7 a) l
 @cons bool (BV_full_adder_carry lf7 (@nil bool) a) l
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_71

Problem: synth_15
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_14
 BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)

Problem: synth_79
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_sum lf5 cin) l
 @cons bool (HalfAdder.half_adder_sum cin lf5) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_83
 @nil bool

Problem: synth_12

Problem: synth_62
 @nil bool

Problem: synth_74
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_sum cin a
 HalfAdder.half_adder_sum a cin

Problem: synth_50
 @cons bool (HalfAdder.half_adder_carry a a) l
 @cons bool (HalfAdder.half_adder_sum lf5 cin) l
 @cons bool (HalfAdder.half_adder_sum cin lf5) l
 @cons bool (HalfAdder.half_adder_carry a true) l
 @cons bool (HalfAdder.half_adder_sum a false) l
 @cons bool a l

Problem: synth_84
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_carry cin a
 HalfAdder.half_adder_carry a cin

Problem: synth_20
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4
 BV_full_adder_sum l (@nil bool) lf4

Problem: synth_7
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_sum cin a
 HalfAdder.half_adder_sum a cin

Problem: synth_61

Problem: synth_27

Problem: synth_42

Problem: synth_16

Problem: synth_40
 @cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_carry cin true)) l
 @cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 true)) l
 @cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_sum cin false)) l
 @cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum lf5 false)) l
 @cons bool (HalfAdder.half_adder_sum lf5 cin) l
 @cons bool (HalfAdder.half_adder_sum cin lf5) l

Problem: synth_80
 @nil bool

Problem: synth_33
 BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))
 BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))
 BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))
 BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))
 BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))

Problem: synth_47
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)
 BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)
 (fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)
 BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)

Problem: synth_3

Problem: synth_52
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_sum cin a
 HalfAdder.half_adder_sum a cin

Problem: synth_44

Problem: synth_60

Problem: synth_36

Problem: synth_82
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)
 HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)
 HalfAdder.half_adder_sum cin a
 HalfAdder.half_adder_sum a cin

Problem: synth_78
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 cin)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 cin)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum cin lf5)
 HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry cin lf5)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum true lf5)
 HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 2908 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_2: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_3: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_4: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum lf7 l lf4).
Lemma candidate_5: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_6: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l lf7 lf4).
Lemma candidate_7: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_8: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_9: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_10: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_11: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)).
Lemma candidate_12: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 lf4)).
Lemma candidate_13: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)).
Lemma candidate_14: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_15: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_16: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_17: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_18: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_19: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_20: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_21: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_22: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_23: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_24: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_25: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_26: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_27: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_28: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum lf7 l lf4).
Lemma candidate_29: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_30: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l lf7 lf4).
Lemma candidate_31: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_32: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_33: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_34: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_35: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_36: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_37: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_38: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_39: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_40: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_41: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_42: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_43: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_44: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_45: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_46: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_47: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_48: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)).
Lemma candidate_49: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_50: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_51: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_52: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_53: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_54: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_55: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_56: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_57: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_58: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_59: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_60: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_61: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_62: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_63: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_64: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_65: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_66: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)).
Lemma candidate_67: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_68: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_69: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_70: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_71: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_72: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_73: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_74: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_75: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_76: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_77: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_78: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_79: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_80: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_81: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_82: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_83: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_84: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_85: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_86: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_87: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_88: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_89: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_90: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)).
Lemma candidate_91: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)).
Lemma candidate_92: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_93: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_94: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_95: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_96: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_97: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_98: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_99: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_100: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_101: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_102: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_103: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_104: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_105: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_106: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_107: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_108: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_109: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_110: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_111: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_112: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_113: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_114: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_115: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_116: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_117: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_118: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_119: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_120: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_121: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_122: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_123: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_124: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_125: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_126: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_127: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_128: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_129: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_130: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_131: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_132: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_133: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_134: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_135: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_136: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_137: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_138: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_139: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_140: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_141: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_142: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_143: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_144: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_145: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_146: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_147: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_148: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_149: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_150: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_151: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_152: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_153: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_154: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_155: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_156: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_157: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_158: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_159: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_160: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_161: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_162: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_163: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_164: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_165: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_166: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_167: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_168: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_169: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_170: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_171: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_172: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_173: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_174: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_175: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_176: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_177: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_178: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_179: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_180: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_181: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_182: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_183: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_184: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_185: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_186: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_187: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_188: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum lf7 l lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_189: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_190: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l lf7 lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_191: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_192: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_193: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_194: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_195: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_196: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_197: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_198: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_199: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_200: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_201: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_202: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_203: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_204: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_205: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_206: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum lf7 l lf4).
Lemma candidate_207: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_208: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l lf7 lf4).
Lemma candidate_209: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_210: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_211: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_212: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_213: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)).
Lemma candidate_214: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 lf4)).
Lemma candidate_215: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)).
Lemma candidate_216: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_217: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_218: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_219: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_220: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_221: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_222: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_223: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_224: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_225: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_226: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_227: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_228: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_229: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_230: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum lf7 l lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_231: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_232: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l lf7 lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_233: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_234: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_carry cin true)) l)      lf7 cin) (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_235: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 true)) l)      lf7 cin) (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_236: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_sum cin false)) l)      lf7 cin) (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_237: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum lf5 false)) l)      lf7 cin) (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_238: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum lf5 cin) l) lf7      cin) (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_239: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum cin lf5) l) lf7      cin) (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_240: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_241: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_242: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum lf7 l lf4).
Lemma candidate_243: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_244: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l lf7 lf4).
Lemma candidate_245: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_246: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_247: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_248: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_249: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)).
Lemma candidate_250: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 lf4)).
Lemma candidate_251: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)).
Lemma candidate_252: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_253: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_254: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_255: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_256: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_257: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_258: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_259: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_260: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_261: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_262: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_263: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_264: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_265: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_266: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_267: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_268: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_269: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_270: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_271: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_272: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_273: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_274: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_275: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_276: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_277: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_278: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_279: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_280: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_281: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_282: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_283: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_284: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_285: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_286: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_287: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_288: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_289: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_290: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_291: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_292: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_293: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_294: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_295: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_296: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_297: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_298: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_299: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_300: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_301: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_302: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_303: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_304: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_305: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_306: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_307: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_308: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool cin l) a)   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_309: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_310: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool a l) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_311: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_312: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_313: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_314: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_315: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_316: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_317: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_318: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_319: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_320: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_321: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_322: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_323: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_324: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_325: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_326: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_327: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_328: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_329: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_330: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_331: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_332: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum lf7 l lf4).
Lemma candidate_333: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_334: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l lf7 lf4).
Lemma candidate_335: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_336: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_337: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_338: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_339: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_340: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_341: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_342: forall (a : bool) (lf7 : list bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true))      (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_343: forall (a : bool) (lf7 : list bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true))      (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_344: forall (a : bool) (lf7 : list bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false))      (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_345: forall (a : bool) (lf7 : list bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false))      (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_346: forall (a : bool) (lf7 : list bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum cin a) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_347: forall (a : bool) (lf7 : list bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_348: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_349: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_350: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_351: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_352: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_353: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_354: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_355: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_356: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool cin l) a)   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_357: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_358: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool a l) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_359: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_360: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum      (@cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf7 a) l)      lf7 cin) (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_361: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (BV_full_adder_carry lf7 (@nil bool) a) l)      lf7 cin) (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_362: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a a) l) lf7 cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_363: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a true) l) lf7      cin) (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_364: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum a false) l) lf7      cin) (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_365: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_366: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_367: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_368: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_369: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_370: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_371: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_372: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_373: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_374: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_375: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_376: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_377: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_378: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_379: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_380: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum lf7 l lf4).
Lemma candidate_381: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_382: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l lf7 lf4).
Lemma candidate_383: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4) (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_384: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_385: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_386: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_387: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_388: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_389: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_390: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_391: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_392: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_393: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_394: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_395: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_396: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_397: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_398: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_399: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_400: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_401: forall (a : bool) (l : list bool) (lf7 : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum lf7 l lf4))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_402: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_403: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_404: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool cin l) a)   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_405: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_406: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool a l) cin)   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_407: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_408: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_409: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_410: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_411: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_412: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_413: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_414: forall (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 cin)))).
Lemma candidate_415: forall (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 cin)))).
Lemma candidate_416: forall (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum cin lf5)))).
Lemma candidate_417: forall (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry cin lf5)))).
Lemma candidate_418: forall (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum true lf5)))).
Lemma candidate_419: forall (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)))).
Lemma candidate_420: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_421: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_422: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_423: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_424: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_425: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_426: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_427: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_428: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_429: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_430: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_431: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_432: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_433: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_434: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_435: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_436: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)).
Lemma candidate_437: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_438: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_439: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_440: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_441: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_442: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_443: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_444: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_445: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_446: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_447: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_448: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_449: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_450: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_451: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_452: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool cin l) a)   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_453: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_454: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool a l) cin)   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_455: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_456: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a a) l) lf7 cin)   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_457: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum lf5 cin) l) lf7      cin) (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_458: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum cin lf5) l) lf7      cin) (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_459: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a true) l) lf7      cin) (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_460: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum a false) l) lf7      cin) (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_461: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_462: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_463: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_464: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_465: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_466: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_467: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_468: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum lf5 true)))).
Lemma candidate_469: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)))).
Lemma candidate_470: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_471: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_472: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_473: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv lf5 (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_474: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_475: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_476: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_477: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_478: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_479: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_480: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_481: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_482: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_483: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_484: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_485: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_486: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_487: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_488: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_489: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_490: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_491: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_492: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_493: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_494: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_495: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_496: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)).
Lemma candidate_497: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_498: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_499: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_500: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_501: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_502: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_503: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_504: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_505: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_506: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool cin l) a)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_507: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_508: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool a l) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_509: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_510: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_511: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_512: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_513: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_514: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (HalfAdder.half_adder_sum cin a)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_515: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (HalfAdder.half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_516: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_517: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_518: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_519: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_520: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_521: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_522: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_523: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_524: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_525: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_526: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_527: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_528: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_529: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_530: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf6 lf7 cin).
Lemma candidate_531: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin) (BV_full_adder_sum lf7 lf6 cin).
Lemma candidate_532: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_533: forall (lf7 : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 lf7 cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_534: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_535: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_536: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_537: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_538: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_539: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_540: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_541: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_542: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_543: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_544: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)).
Lemma candidate_545: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_546: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_547: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_548: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_549: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_550: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_551: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_552: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_553: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_554: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_555: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_556: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_557: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_558: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_559: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_560: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_561: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false))      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_562: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum cin a)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_563: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (HalfAdder.half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_564: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_565: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_566: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool cin l) a)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_567: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_568: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 (@cons bool a l) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_569: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_570: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum      (@cons bool ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) lf7 a) l)      lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_571: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (BV_full_adder_carry lf7 (@nil bool) a) l)      lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_572: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a a) l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_573: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a true) l) lf7      cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_574: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum a false) l) lf7      cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_575: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin))).
Lemma candidate_576: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_577: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_578: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin))).
Lemma candidate_579: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_580: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_581: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_582: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_583: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_584: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_585: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_586: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_587: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_588: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_589: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_590: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_591: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_592: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_593: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_594: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_595: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_596: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_597: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_598: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_599: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_600: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_601: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_602: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_603: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_604: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_605: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_606: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_607: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_608: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_609: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_610: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_611: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_612: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_613: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_614: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum lf7 l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_615: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_616: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry a cin)).
Lemma candidate_617: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_618: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_619: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_620: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_621: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_622: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_623: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_624: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_625: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_626: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_627: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_628: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV_full_adder_sum lf7 (@cons bool a l) cin).
Lemma candidate_629: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum lf7 l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_630: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_631: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_632: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_633: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_634: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_635: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_636: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_637: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_638: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_639: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_640: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_641: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_642: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_643: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_644: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_645: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_646: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_647: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_648: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_649: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_650: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_651: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_652: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_653: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_654: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_655: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_656: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_657: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_658: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_659: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_660: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_661: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_662: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_663: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_664: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_665: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_666: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_667: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_668: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_669: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_670: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_671: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_672: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_673: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_674: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_675: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_676: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_677: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_678: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_679: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_680: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_681: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_682: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_683: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_684: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_685: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)).
Lemma candidate_686: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)).
Lemma candidate_687: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_688: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_689: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_690: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_691: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_692: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_693: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_694: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_695: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_696: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_697: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_698: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_699: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_700: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_701: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_702: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_703: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_704: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_705: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_706: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_707: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_708: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_709: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_710: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_711: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_712: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_carry cin true)) l)      (@nil bool) cin) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_713: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 true)) l)      (@nil bool) cin) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_714: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum lf5 (HalfAdder.half_adder_sum cin false)) l)      (@nil bool) cin) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_715: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum lf5 false)) l)      (@nil bool) cin) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_716: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum lf5 cin) l)      (@nil bool) cin) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_717: forall (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum cin lf5) l)      (@nil bool) cin) (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_718: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_719: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_720: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_721: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_722: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_723: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_724: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_725: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_726: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_727: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_728: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_729: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4)).
Lemma candidate_730: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) lf4)).
Lemma candidate_731: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_732: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_733: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_734: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_735: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_736: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_737: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_738: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_739: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_740: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_741: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_742: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_743: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_744: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_745: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_746: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_747: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_748: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_749: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_750: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_751: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_752: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_753: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_754: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_755: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_756: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_757: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_758: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_759: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_760: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_761: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_762: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_763: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_764: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_765: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_766: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_767: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_768: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_769: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_770: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_771: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_772: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_773: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_774: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_775: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_776: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_777: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_778: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_779: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_780: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_781: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_782: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_783: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_784: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_785: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_786: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_787: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_788: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_789: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_790: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_791: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_792: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_793: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_794: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_795: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_796: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_797: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_798: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_799: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_800: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_801: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_802: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_803: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_804: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_805: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_806: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_807: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_808: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_809: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_810: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_811: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_812: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_813: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_814: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_815: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_816: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_817: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_818: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_819: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_820: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_821: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_822: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_823: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_824: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_825: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_826: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_827: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_828: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_829: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_830: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_831: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_832: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_833: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_834: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_835: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_836: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_837: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_838: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true))      (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_839: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true))      (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_840: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false))      (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_841: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false))      (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_842: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum cin a)      (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_843: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_844: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_845: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_846: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_847: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_848: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_849: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_850: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry lf4 false)) l)      (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_851: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum      (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin false)) l)      (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_852: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a a) l)      (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_853: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a true) l)      (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_854: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum a false) l)      (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_855: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_856: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_857: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_858: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_859: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_860: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_861: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l lf4).
Lemma candidate_862: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) lf4).
Lemma candidate_863: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_864: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_865: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_866: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_867: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_868: forall (a : bool) (l : list bool) (lf4 : bool) (cin : bool), @eq BV (consbv (half_adder_sum a cin) (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_869: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_870: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_871: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_872: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_873: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_874: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_875: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_876: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_877: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_878: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_879: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_880: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_881: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_882: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_883: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_884: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_885: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_886: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_887: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_888: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_889: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_890: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_891: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_892: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_893: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_894: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_895: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_896: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_897: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_898: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_899: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_900: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_901: forall (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 cin)))).
Lemma candidate_902: forall (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry lf5 cin)))).
Lemma candidate_903: forall (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum cin lf5)))).
Lemma candidate_904: forall (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry cin lf5)))).
Lemma candidate_905: forall (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum true lf5)))).
Lemma candidate_906: forall (l : list bool) (cin : bool) (lf5 : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)))).
Lemma candidate_907: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_908: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_909: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_910: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_911: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_912: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_913: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_914: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_915: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_916: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_917: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_918: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_919: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_920: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_921: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_922: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_923: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_924: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_925: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_926: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_927: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_928: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_929: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_930: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_931: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_932: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_933: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_934: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_935: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_936: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_937: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_938: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_939: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_940: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_941: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_942: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_943: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_944: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a a) l)      (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_945: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum lf5 cin) l)      (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_946: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum cin lf5) l)      (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_947: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_carry a true) l)      (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_948: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV_full_adder_sum (@cons bool (HalfAdder.half_adder_sum a false) l)      (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_949: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_950: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_951: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum lf5 true)))).
Lemma candidate_952: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum lf5 true)))).
Lemma candidate_953: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_954: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_955: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_956: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum (@nil bool) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_957: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_958: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_959: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_960: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_961: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_962: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv lf5      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_963: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_964: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_965: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_966: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin))).
Lemma candidate_967: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_968: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_969: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_970: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_971: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_972: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_973: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_974: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_975: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_976: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_977: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_978: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_979: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_980: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l) (@cons bool a l).
Lemma candidate_981: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_982: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_983: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_984: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_985: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_986: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_987: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_988: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_989: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_990: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_991: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_992: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_993: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).
Lemma candidate_994: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true))      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_995: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true))      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_996: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false))      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_997: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false))      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_998: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum cin a)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_999: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (HalfAdder.half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1000: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1001: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1002: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1003: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1004: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1005: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1006: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_1007: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_1008: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_1009: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_1010: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_1011: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_1012: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1013: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_1014: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_1015: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_1016: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l         (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_1017: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_1018: forall (a : bool) (l : list bool) (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_1019: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_1020: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_1021: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_1022: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_1023: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum cin a).
Lemma candidate_1024: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin) (HalfAdder.half_adder_sum a cin).
Lemma candidate_1025: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_1026: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_1027: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_1028: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_1029: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 cin).
Lemma candidate_1030: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) cin).
Lemma candidate_1031: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_1032: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_1033: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_1034: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_1035: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_1036: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a cin) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin))).
Lemma candidate_1037: @eq (list bool) (@nil bool) (@nil bool).
Lemma candidate_1038: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_1039: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_1040: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_1041: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_1042: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry cin a).
Lemma candidate_1043: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin) (HalfAdder.half_adder_carry a cin).
Lemma candidate_1044: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_1045: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_1046: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_1047: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_1048: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a cin)).
Lemma candidate_1049: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a cin)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 3515 seconds
Duplicates removed: 745
Filtered by Quickchick: 204
Filtered by script: 38
Remaining: 62

Lemmas: 
Lemma candidate_182: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a a) l).
Lemma candidate_184: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a false) l).
Lemma candidate_183: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a true) l).
Lemma candidate_170: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool cin l) a).
Lemma candidate_17: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_16: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_15: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_14: forall (a : bool) (cin : bool), @eq bool (half_adder_sum a cin)   (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_2: forall (l : list bool) (lf7 : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum lf7 l lf4)   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_53: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)).
Lemma candidate_52: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)).
Lemma candidate_51: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)).
Lemma candidate_50: forall (a : bool) (cin : bool), @eq bool (half_adder_carry a cin)   (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)).
Lemma candidate_181: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry a false)) l).
Lemma candidate_180: forall (a : bool) (l : list bool), @eq (list bool) (@cons bool a l)   (@cons bool (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum a false)) l).
Lemma candidate_83: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_81: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_44: forall (a : bool) (l : list bool) (lf7 : list bool) (cin : bool), @eq BV (BV_full_adder_sum lf7 l (half_adder_carry a cin))   (BV_full_adder_sum l lf7 (HalfAdder.half_adder_carry cin a)).
Lemma candidate_633: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_631: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   (BV_full_adder_sum lf6 (@nil bool) (HalfAdder.half_adder_carry cin true)).
Lemma candidate_8: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum lf7 l lf4))   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_168: forall (a : bool) (lf7 : list bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) lf7 cin)   (BV_full_adder_sum lf7 (@cons bool a l) (HalfAdder.half_adder_sum cin false)).
Lemma candidate_186: forall (l : list bool) (lf7 : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l lf7 (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum lf7 l lf4)).
Lemma candidate_128: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)).
Lemma candidate_89: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_87: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_671: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_669: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry lf4 true)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_895: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_829: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_113: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry cin a))).
Lemma candidate_126: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_827: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      (BV_full_adder_sum l (@nil bool) (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_82: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)).
Lemma candidate_80: forall (l : list bool) (lf4 : bool), @eq BV (BV_full_adder_sum (@nil bool) l lf4)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)).
Lemma candidate_632: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_sum cin false)).
Lemma candidate_630: forall (cin : bool) (lf6 : list bool), @eq BV (BV_full_adder_sum lf6 (@nil bool) cin)   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) lf6 (HalfAdder.half_adder_carry cin true)).
Lemma candidate_127: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)).
Lemma candidate_88: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false))).
Lemma candidate_86: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true))).
Lemma candidate_670: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_sum lf4 false)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_668: forall (l : list bool) (lf4 : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry lf4 true)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l lf4)).
Lemma candidate_894: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_828: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_112: forall (a : bool) (l : list bool) (cin : bool) (lf5 : bool), @eq BV   (consbv lf5 (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv lf5 ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_125: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))   ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))).
Lemma candidate_647: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_826: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (consbv (half_adder_sum a cin)      ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_1004: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a)))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_141: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin a) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin a))).
Lemma candidate_646: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_645: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_644: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_643: forall (a : bool) (l : list bool) (cin : bool), @eq BV (BV_full_adder_sum (@cons bool a l) (@nil bool) cin)   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
Lemma candidate_1003: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1002: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_140: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_sum cin false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_sum cin false)))).
Lemma candidate_139: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_sum a false)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_sum a false)))).
Lemma candidate_1001: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_1000: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true))))   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin))).
Lemma candidate_138: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum a (HalfAdder.half_adder_carry cin true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (HalfAdder.half_adder_carry cin true)))).
Lemma candidate_137: forall (a : bool) (l : list bool) (cin : bool), @eq BV   (consbv (half_adder_sum a cin)      (BV_full_adder_sum (@nil bool) l (half_adder_carry a cin)))   (BV.consbv (HalfAdder.half_adder_sum cin (HalfAdder.half_adder_carry a true)) ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry cin (HalfAdder.half_adder_carry a true)))).
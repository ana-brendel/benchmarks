File Information
- File name: AdderProof
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/AdderProof_lemma_BV_to_nat_app2_56
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/_lfind_AdderProof_lemma_BV_to_nat_app2_56
- Namespace: Circuits
- Proof name: BV_full_adder_nil_ok
- Theorem: Theorem BV_full_adder_nil_ok: forall (v0 : BV) (cin0 : bool),
@eq nat (BV_to_nat (BV_full_adder v0 nilbv cin0))
  (Nat.add (BV_to_nat v0) (bool_to_nat cin0)).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import Adder. 

Proof Context
* Goal State: @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false))

* Hypothesis:
cin : bool
H : forall cin0 : bool,
@eq nat (BV_to_nat (BV_full_adder l nilbv cin0))
  (Nat.add (BV_to_nat l) (bool_to_nat cin0))
v : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
BV
bool
nat

* Polymorphic Types:
list bool

* Variables:
l : list bool
a : bool

* Terms:
Nat.add (BV_to_nat l) (bool_to_nat _UNBOUND_REL_1) : nat
BV_full_adder l nilbv _UNBOUND_REL_1 : BV
bool_to_nat _UNBOUND_REL_1 : nat
BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)) : nat
@eq nat (BV_to_nat (BV_full_adder l nilbv _UNBOUND_REL_1))
  (Nat.add (BV_to_nat l) (bool_to_nat _UNBOUND_REL_1)) : Prop
@cons bool a l : list bool
nilbv : BV
BV_to_nat (BV_full_adder l nilbv _UNBOUND_REL_1) : nat
l : list bool
forall cin0 : bool,
@eq nat (BV_to_nat (BV_full_adder l nilbv cin0))
  (Nat.add (BV_to_nat l) (bool_to_nat cin0)) : Prop
consbv false nilbv : BV
false : bool
nat : Set
Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false) : nat
bool : Set
appbv (@cons bool a l) (consbv false nilbv) : BV
BV_to_nat (@cons bool a l) : nat
BV : Set
list bool : Set
bool_to_nat false : nat
a : bool
@eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)) : Prop
BV_to_nat l : nat

* Functions:
appbv  : forall (_ : BV) (_ : BV), BV
bool_to_nat  : forall _ : bool, nat
BV_full_adder  : forall (_ : BV) (_ : BV) (_ : bool), BV
Nat.add  : forall (_ : nat) (_ : nat), nat
list  : forall _ : Type, Type
consbv  : forall (_ : bool) (_ : BV), BV
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
BV_to_nat  : forall _ : BV, nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : BV = appbv (@cons bool a l) (consbv false nilbv)
lf7 : list bool = @cons bool a l
lf1 : nat = Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)
lf4 : nat = BV_to_nat (@cons bool a l)
lf5 : BV = consbv false nilbv
lf9 : BV = nilbv
lf2 : nat = BV_to_nat (appbv (@cons bool a l) (consbv false nilbv))
lf8 : bool = false
lf6 : nat = bool_to_nat false

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf2 lf1.
Lemma conj5: forall (lf1 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) lf1.
Lemma conj65: forall (lf6 : nat) (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 lf6).
Lemma conj66: forall (lf8 : bool) (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj68: forall (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat false)).
Lemma conj69: forall (lf6 : nat) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 lf6).
Lemma conj70: forall (lf8 : bool) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj72: forall (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat false)).
Lemma conj97: forall (lf6 : nat) (lf2 : nat) (lf7 : list bool), @eq nat lf2 (Nat.add (BV_to_nat lf7) lf6).
Lemma conj98: forall (lf8 : bool) (lf2 : nat) (lf7 : list bool), @eq nat lf2 (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj100: forall (lf2 : nat) (lf7 : list bool), @eq nat lf2 (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj101: forall (lf6 : nat) (lf7 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf7) lf6).
Lemma conj102: forall (lf8 : bool) (lf7 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj104: forall (lf7 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj225: forall (lf6 : nat) (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj226: forall (lf8 : bool) (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj228: forall (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj229: forall (lf6 : nat) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj230: forall (lf8 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj232: forall (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj261: forall (lf5 : BV) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) lf1.
Lemma conj277: forall (lf8 : bool) (lf9 : BV) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9))) lf1.
Lemma conj279: forall (lf9 : BV) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9))) lf1.
Lemma conj285: forall (lf8 : bool) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv))) lf1.
Lemma conj287: forall (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv))) lf1.
Lemma conj325: forall (lf6 : nat) (lf5 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add lf4 lf6).
Lemma conj326: forall (lf8 : bool) (lf5 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj328: forall (lf5 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add lf4 (bool_to_nat false)).
Lemma conj341: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9))) (Nat.add lf4 lf6).
Lemma conj342: forall (lf8 : bool) (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj343: forall (lf6 : nat) (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9))) (Nat.add lf4 lf6).
Lemma conj344: forall (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj349: forall (lf6 : nat) (lf8 : bool) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv))) (Nat.add lf4 lf6).
Lemma conj350: forall (lf8 : bool) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj351: forall (lf6 : nat) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv))) (Nat.add lf4 lf6).
Lemma conj352: forall (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj357: forall (lf6 : nat) (lf5 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add (BV_to_nat lf7) lf6).
Lemma conj358: forall (lf8 : bool) (lf5 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5))
  (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj360: forall (lf5 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5))
  (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj373: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj374: forall (lf8 : bool) (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj375: forall (lf6 : nat) (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj376: forall (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj381: forall (lf6 : nat) (lf8 : bool) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj382: forall (lf8 : bool) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj383: forall (lf6 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj384: forall (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj389: forall (lf5 : BV) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5)) lf1.
Lemma conj405: forall (lf8 : bool) (lf9 : BV) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9))) lf1.
Lemma conj407: forall (lf9 : BV) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9))) lf1.
Lemma conj413: forall (lf8 : bool) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv))) lf1.
Lemma conj415: forall (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv))) lf1.
Lemma conj453: forall (lf6 : nat) (lf5 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5)) (Nat.add lf4 lf6).
Lemma conj454: forall (lf8 : bool) (lf5 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj456: forall (lf5 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj469: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add lf4 lf6).
Lemma conj470: forall (lf8 : bool) (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj471: forall (lf6 : nat) (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add lf4 lf6).
Lemma conj472: forall (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj477: forall (lf6 : nat) (lf8 : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add lf4 lf6).
Lemma conj478: forall (lf8 : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj479: forall (lf6 : nat) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add lf4 lf6).
Lemma conj480: forall (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj485: forall (lf6 : nat) (lf5 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj486: forall (lf8 : bool) (lf5 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj488: forall (lf5 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj501: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj502: forall (lf8 : bool) (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj503: forall (lf6 : nat) (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj504: forall (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj509: forall (lf6 : nat) (lf8 : bool) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj510: forall (lf8 : bool) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj511: forall (lf6 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj512: forall (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).


<---VALIDITY CHECKS--->
Time elapsed: 157 seconds
Valid:
Lemma conj512: forall (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj384: forall (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat false)).

Invalid:
Lemma conj511: forall (lf6 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj510: forall (lf8 : bool) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj509: forall (lf6 : nat) (lf8 : bool) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj504: forall (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj503: forall (lf6 : nat) (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj502: forall (lf8 : bool) (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj501: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj488: forall (lf5 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj486: forall (lf8 : bool) (lf5 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj485: forall (lf6 : nat) (lf5 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj480: forall (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj479: forall (lf6 : nat) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv)))
  (Nat.add lf4 lf6).
Lemma conj478: forall (lf8 : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj477: forall (lf6 : nat) (lf8 : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv)))
  (Nat.add lf4 lf6).
Lemma conj472: forall (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj471: forall (lf6 : nat) (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9)))
  (Nat.add lf4 lf6).
Lemma conj470: forall (lf8 : bool) (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj469: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9)))
  (Nat.add lf4 lf6).
Lemma conj456: forall (lf5 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj454: forall (lf8 : bool) (lf5 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj453: forall (lf6 : nat) (lf5 : BV) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5)) (Nat.add lf4 lf6).
Lemma conj415: forall (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false nilbv))) lf1.
Lemma conj413: forall (lf8 : bool) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 nilbv))) lf1.
Lemma conj407: forall (lf9 : BV) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv false lf9))) lf1.
Lemma conj405: forall (lf8 : bool) (lf9 : BV) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) (consbv lf8 lf9))) lf1.
Lemma conj389: forall (lf5 : BV) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (appbv (@cons bool a l) lf5)) lf1.
Lemma conj383: forall (lf6 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj382: forall (lf8 : bool) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj381: forall (lf6 : nat) (lf8 : bool) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj376: forall (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj375: forall (lf6 : nat) (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj374: forall (lf8 : bool) (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9)))
  (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj373: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9)))
  (Nat.add (BV_to_nat lf7) lf6).
Lemma conj360: forall (lf5 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5))
  (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj358: forall (lf8 : bool) (lf5 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5))
  (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj357: forall (lf6 : nat) (lf5 : BV) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add (BV_to_nat lf7) lf6).
Lemma conj352: forall (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj351: forall (lf6 : nat) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv))) (Nat.add lf4 lf6).
Lemma conj350: forall (lf8 : bool) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj349: forall (lf6 : nat) (lf8 : bool) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv))) (Nat.add lf4 lf6).
Lemma conj344: forall (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9)))
  (Nat.add lf4 (bool_to_nat false)).
Lemma conj343: forall (lf6 : nat) (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9))) (Nat.add lf4 lf6).
Lemma conj342: forall (lf8 : bool) (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9)))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj341: forall (lf6 : nat) (lf8 : bool) (lf9 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9))) (Nat.add lf4 lf6).
Lemma conj328: forall (lf5 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add lf4 (bool_to_nat false)).
Lemma conj326: forall (lf8 : bool) (lf5 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj325: forall (lf6 : nat) (lf5 : BV) (lf4 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) (Nat.add lf4 lf6).
Lemma conj287: forall (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false nilbv))) lf1.
Lemma conj285: forall (lf8 : bool) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 nilbv))) lf1.
Lemma conj279: forall (lf9 : BV) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv false lf9))) lf1.
Lemma conj277: forall (lf8 : bool) (lf9 : BV) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 (consbv lf8 lf9))) lf1.
Lemma conj261: forall (lf5 : BV) (lf1 : nat) (lf7 : list bool), @eq nat (BV_to_nat (appbv lf7 lf5)) lf1.
Lemma conj232: forall (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj230: forall (lf8 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj229: forall (lf6 : nat) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj228: forall (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat false)).
Lemma conj226: forall (lf8 : bool) (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj225: forall (lf6 : nat) (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) lf6).
Lemma conj104: forall (lf7 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj102: forall (lf8 : bool) (lf7 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj101: forall (lf6 : nat) (lf7 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf7) lf6).
Lemma conj100: forall (lf2 : nat) (lf7 : list bool), @eq nat lf2 (Nat.add (BV_to_nat lf7) (bool_to_nat false)).
Lemma conj98: forall (lf8 : bool) (lf2 : nat) (lf7 : list bool), @eq nat lf2 (Nat.add (BV_to_nat lf7) (bool_to_nat lf8)).
Lemma conj97: forall (lf6 : nat) (lf2 : nat) (lf7 : list bool), @eq nat lf2 (Nat.add (BV_to_nat lf7) lf6).
Lemma conj72: forall (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat false)).
Lemma conj70: forall (lf8 : bool) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj69: forall (lf6 : nat) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 lf6).
Lemma conj68: forall (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat false)).
Lemma conj66: forall (lf8 : bool) (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj65: forall (lf6 : nat) (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 lf6).
Lemma conj5: forall (lf1 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf2 lf1.
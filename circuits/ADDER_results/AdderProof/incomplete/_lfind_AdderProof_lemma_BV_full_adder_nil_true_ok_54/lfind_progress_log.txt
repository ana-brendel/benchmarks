File Information
- File name: AdderProof
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/AdderProof_lemma_BV_full_adder_nil_true_ok_54
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/_lfind_AdderProof_lemma_BV_full_adder_nil_true_ok_54
- Namespace: Circuits
- Proof name: BV_full_adder_nil_ok
- Theorem: Theorem BV_full_adder_nil_ok: forall (v0 : BV) (cin0 : bool),
@eq nat (BV_to_nat (BV_full_adder v0 nilbv cin0))
  (Nat.add (BV_to_nat v0) (bool_to_nat cin0)).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import Adder. 

Proof Context
* Goal State: @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true))

* Hypothesis:
cin : bool
H : forall cin0 : bool,
@eq nat (BV_to_nat (BV_full_adder l nilbv cin0))
  (Nat.add (BV_to_nat l) (bool_to_nat cin0))
v : BV
l : list bool
a : bool

* Types:
Set
list bool
Prop
BV
bool
nat

* Polymorphic Types:
list bool

* Variables:
l : list bool
a : bool

* Terms:
Nat.add (BV_to_nat l) (bool_to_nat _UNBOUND_REL_1) : nat
BV_full_adder l nilbv _UNBOUND_REL_1 : BV
bool_to_nat true : nat
bool_to_nat _UNBOUND_REL_1 : nat
BV_full_adder (@cons bool a l) nilbv true : BV
BV_to_nat (BV_full_adder (@cons bool a l) nilbv true) : nat
@eq nat (BV_to_nat (BV_full_adder l nilbv _UNBOUND_REL_1))
  (Nat.add (BV_to_nat l) (bool_to_nat _UNBOUND_REL_1)) : Prop
@cons bool a l : list bool
nilbv : BV
BV_to_nat (BV_full_adder l nilbv _UNBOUND_REL_1) : nat
l : list bool
true : bool
forall cin0 : bool,
@eq nat (BV_to_nat (BV_full_adder l nilbv cin0))
  (Nat.add (BV_to_nat l) (bool_to_nat cin0)) : Prop
nat : Set
bool : Set
Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true) : nat
BV_to_nat (@cons bool a l) : nat
@eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)) : Prop
BV : Set
list bool : Set
a : bool
BV_to_nat l : nat

* Functions:
bool_to_nat  : forall _ : bool, nat
BV_full_adder  : forall (_ : BV) (_ : BV) (_ : bool), BV
Nat.add  : forall (_ : nat) (_ : nat), nat
list  : forall _ : Type, Type
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
BV_to_nat  : forall _ : BV, nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : BV = BV_full_adder (@cons bool a l) nilbv true
lf7 : BV = nilbv
lf1 : nat = Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)
lf4 : nat = BV_to_nat (@cons bool a l)
lf5 : nat = bool_to_nat true
lf2 : nat = BV_to_nat (BV_full_adder (@cons bool a l) nilbv true)
lf8 : bool = true
lf6 : list bool = @cons bool a l

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf2 lf1.
Lemma conj5: forall (lf1 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) lf1.
Lemma conj33: forall (lf2 : nat) (lf5 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 lf5).
Lemma conj37: forall (lf5 : nat) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 lf5).
Lemma conj41: forall (lf8 : bool) (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj43: forall (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat true)).
Lemma conj45: forall (lf8 : bool) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj47: forall (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat true)).
Lemma conj49: forall (lf6 : list bool) (lf2 : nat) (lf5 : nat), @eq nat lf2 (Nat.add (BV_to_nat lf6) lf5).
Lemma conj50: forall (lf2 : nat) (lf5 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj53: forall (lf6 : list bool) (lf5 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf6) lf5).
Lemma conj54: forall (lf5 : nat) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj57: forall (lf8 : bool) (lf6 : list bool) (lf2 : nat), @eq nat lf2 (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj58: forall (lf8 : bool) (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj59: forall (lf6 : list bool) (lf2 : nat), @eq nat lf2 (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj60: forall (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj61: forall (lf8 : bool) (lf6 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj62: forall (lf8 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj63: forall (lf6 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj64: forall (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj133: forall (lf8 : bool) (lf6 : list bool) (lf1 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8)) lf1.
Lemma conj134: forall (lf8 : bool) (lf1 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8)) lf1.
Lemma conj135: forall (lf6 : list bool) (lf1 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true)) lf1.
Lemma conj136: forall (lf1 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true)) lf1.
Lemma conj165: forall (lf8 : bool) (lf6 : list bool) (lf5 : nat) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8)) (Nat.add lf4 lf5).
Lemma conj166: forall (lf8 : bool) (lf5 : nat) (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add lf4 lf5).
Lemma conj167: forall (lf6 : list bool) (lf5 : nat) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true)) (Nat.add lf4 lf5).
Lemma conj168: forall (lf5 : nat) (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add lf4 lf5).
Lemma conj173: forall (lf8 : bool) (lf6 : list bool) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj174: forall (lf8 : bool) (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj175: forall (lf6 : list bool) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj176: forall (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj181: forall (lf6 : list bool) (lf8 : bool) (lf5 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8)) (Nat.add (BV_to_nat lf6) lf5).
Lemma conj182: forall (lf8 : bool) (lf5 : nat) (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj183: forall (lf6 : list bool) (lf5 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true))
  (Nat.add (BV_to_nat lf6) lf5).
Lemma conj184: forall (lf5 : nat) (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj189: forall (lf8 : bool) (lf6 : list bool) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8))
  (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj190: forall (lf8 : bool) (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj191: forall (lf6 : list bool) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true))
  (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj192: forall (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj197: forall (lf8 : bool) (lf6 : list bool) (lf1 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8)) lf1.
Lemma conj198: forall (lf8 : bool) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8)) lf1.
Lemma conj199: forall (lf6 : list bool) (lf1 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true)) lf1.
Lemma conj200: forall (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true)) lf1.
Lemma conj229: forall (lf8 : bool) (lf6 : list bool) (lf5 : nat) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8)) (Nat.add lf4 lf5).
Lemma conj230: forall (lf8 : bool) (lf5 : nat) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add lf4 lf5).
Lemma conj231: forall (lf6 : list bool) (lf5 : nat) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true)) (Nat.add lf4 lf5).
Lemma conj232: forall (lf5 : nat) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add lf4 lf5).
Lemma conj237: forall (lf8 : bool) (lf6 : list bool) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj238: forall (lf8 : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj239: forall (lf6 : list bool) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj240: forall (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj245: forall (lf6 : list bool) (lf8 : bool) (lf5 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8))
  (Nat.add (BV_to_nat lf6) lf5).
Lemma conj246: forall (lf8 : bool) (lf5 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj247: forall (lf6 : list bool) (lf5 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true))
  (Nat.add (BV_to_nat lf6) lf5).
Lemma conj248: forall (lf5 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj253: forall (lf8 : bool) (lf6 : list bool), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8))
  (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj254: forall (lf8 : bool) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj255: forall (lf6 : list bool), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true))
  (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj256: forall (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).


<---VALIDITY CHECKS--->
Time elapsed: 133 seconds
Valid:
Lemma conj256: forall (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj255: forall (lf6 : list bool), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true))
  (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj254: forall (lf8 : bool) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj253: forall (lf8 : bool) (lf6 : list bool), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8))
  (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).

Invalid:
Lemma conj248: forall (lf5 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj247: forall (lf6 : list bool) (lf5 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true))
  (Nat.add (BV_to_nat lf6) lf5).
Lemma conj246: forall (lf8 : bool) (lf5 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj245: forall (lf6 : list bool) (lf8 : bool) (lf5 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8))
  (Nat.add (BV_to_nat lf6) lf5).
Lemma conj240: forall (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj239: forall (lf6 : list bool) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj238: forall (lf8 : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj237: forall (lf8 : bool) (lf6 : list bool) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj232: forall (lf5 : nat) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true))
  (Nat.add lf4 lf5).
Lemma conj231: forall (lf6 : list bool) (lf5 : nat) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true)) (Nat.add lf4 lf5).
Lemma conj230: forall (lf8 : bool) (lf5 : nat) (lf4 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8))
  (Nat.add lf4 lf5).
Lemma conj229: forall (lf8 : bool) (lf6 : list bool) (lf5 : nat) (lf4 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8)) (Nat.add lf4 lf5).
Lemma conj200: forall (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv true)) lf1.
Lemma conj199: forall (lf6 : list bool) (lf1 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv true)) lf1.
Lemma conj198: forall (lf8 : bool) (lf1 : nat) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) nilbv lf8)) lf1.
Lemma conj197: forall (lf8 : bool) (lf6 : list bool) (lf1 : nat), @eq nat (BV_to_nat (BV_full_adder lf6 nilbv lf8)) lf1.
Lemma conj192: forall (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj191: forall (lf6 : list bool) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true))
  (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj190: forall (lf8 : bool) (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj189: forall (lf8 : bool) (lf6 : list bool) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8))
  (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj184: forall (lf5 : nat) (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj183: forall (lf6 : list bool) (lf5 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true))
  (Nat.add (BV_to_nat lf6) lf5).
Lemma conj182: forall (lf8 : bool) (lf5 : nat) (l : list bool) (lf7 : BV) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj181: forall (lf6 : list bool) (lf8 : bool) (lf5 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8)) (Nat.add (BV_to_nat lf6) lf5).
Lemma conj176: forall (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj175: forall (lf6 : list bool) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true))
  (Nat.add lf4 (bool_to_nat true)).
Lemma conj174: forall (lf8 : bool) (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj173: forall (lf8 : bool) (lf6 : list bool) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8))
  (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj168: forall (lf5 : nat) (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true))
  (Nat.add lf4 lf5).
Lemma conj167: forall (lf6 : list bool) (lf5 : nat) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true)) (Nat.add lf4 lf5).
Lemma conj166: forall (lf8 : bool) (lf5 : nat) (lf4 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8))
  (Nat.add lf4 lf5).
Lemma conj165: forall (lf8 : bool) (lf6 : list bool) (lf5 : nat) (lf4 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8)) (Nat.add lf4 lf5).
Lemma conj136: forall (lf1 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 true)) lf1.
Lemma conj135: forall (lf6 : list bool) (lf1 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 true)) lf1.
Lemma conj134: forall (lf8 : bool) (lf1 : nat) (lf7 : BV) (l : list bool) (a : bool), @eq nat (BV_to_nat (BV_full_adder (@cons bool a l) lf7 lf8)) lf1.
Lemma conj133: forall (lf8 : bool) (lf6 : list bool) (lf1 : nat) (lf7 : BV), @eq nat (BV_to_nat (BV_full_adder lf6 lf7 lf8)) lf1.
Lemma conj64: forall (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj63: forall (lf6 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj62: forall (lf8 : bool) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3)
  (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj61: forall (lf8 : bool) (lf6 : list bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj60: forall (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat true)).
Lemma conj59: forall (lf6 : list bool) (lf2 : nat), @eq nat lf2 (Nat.add (BV_to_nat lf6) (bool_to_nat true)).
Lemma conj58: forall (lf8 : bool) (lf2 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) (bool_to_nat lf8)).
Lemma conj57: forall (lf8 : bool) (lf6 : list bool) (lf2 : nat), @eq nat lf2 (Nat.add (BV_to_nat lf6) (bool_to_nat lf8)).
Lemma conj54: forall (lf5 : nat) (l : list bool) (a : bool) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj53: forall (lf6 : list bool) (lf5 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add (BV_to_nat lf6) lf5).
Lemma conj50: forall (lf2 : nat) (lf5 : nat) (l : list bool) (a : bool), @eq nat lf2 (Nat.add (BV_to_nat (@cons bool a l)) lf5).
Lemma conj49: forall (lf6 : list bool) (lf2 : nat) (lf5 : nat), @eq nat lf2 (Nat.add (BV_to_nat lf6) lf5).
Lemma conj47: forall (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat true)).
Lemma conj45: forall (lf8 : bool) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj43: forall (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat true)).
Lemma conj41: forall (lf8 : bool) (lf2 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 (bool_to_nat lf8)).
Lemma conj37: forall (lf5 : nat) (lf4 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) (Nat.add lf4 lf5).
Lemma conj33: forall (lf2 : nat) (lf5 : nat) (lf4 : nat), @eq nat lf2 (Nat.add lf4 lf5).
Lemma conj5: forall (lf1 : nat) (lf3 : BV), @eq nat (BV_to_nat lf3) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf2 lf1.
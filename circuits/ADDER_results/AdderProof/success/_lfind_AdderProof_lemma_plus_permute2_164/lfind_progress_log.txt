File Information
- File name: AdderProof
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/AdderProof_lemma_plus_permute2_164
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/_lfind_AdderProof_lemma_plus_permute2_164
- Namespace: Circuits
- Proof name: BV_full_adder_ok
- Theorem: Theorem BV_full_adder_ok: forall (v0 w0 : BV) (cin0 : bool),
@eq nat (BV_to_nat (BV_full_adder v0 w0 cin0))
  (Nat.add (Nat.add (BV_to_nat v0) (BV_to_nat w0)) (bool_to_nat cin0)).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import Adder. 

Proof Context
* Goal State: @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0))))

* Hypothesis:
H0 : forall cin0 : bool,
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum (@cons bool a l) l0 cin0)
        (consbv (BV_full_adder_carry (@cons bool a l) l0 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
     (bool_to_nat cin0))
cin : bool
l0 : list bool
a0 : bool
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
BV
Prop
bool
nat

* Polymorphic Types:
list bool

* Variables:
l0 : list bool
l : list bool
a : bool

* Terms:
BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1 : BV
@eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))) : Prop
PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0) : nat
PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l) : nat
nilbv : BV
appbv (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
  (consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1) nilbv) : BV
BV_to_nat
  (appbv (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
     (consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1) nilbv)) : nat
Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0) : nat
Nat.add (BV_to_nat l) (BV_to_nat l0) : nat
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
        (consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1)
           nilbv)))
  (Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
     (bool_to_nat _UNBOUND_REL_1)) : Prop
Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
  (bool_to_nat _UNBOUND_REL_1) : nat
Nat.add (BV_to_nat l) (BV_to_nat l) : nat
BV_to_nat (@cons bool a l) : nat
list bool : Set
BV_to_nat l : nat
PeanoNat.Nat.add
  (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l))
  (BV_to_nat l0) : nat
S
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l))
     (BV_to_nat l0)) : nat
BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1 : bool
consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1) nilbv : BV
BV_to_nat l0 : nat
PeanoNat.Nat.add
  (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0))
  (BV_to_nat l0) : nat
bool_to_nat _UNBOUND_REL_1 : nat
@cons bool a l : list bool
forall cin0 : bool,
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum (@cons bool a l) l0 cin0)
        (consbv (BV_full_adder_carry (@cons bool a l) l0 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
     (bool_to_nat cin0)) : Prop
l : list bool
S
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (BV_to_nat l0)) (BV_to_nat l0))) : nat
nat : Set
bool : Set
l0 : list bool
BV : Set
S
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
           (BV_to_nat l)) (BV_to_nat l0))) : nat
a : bool
S
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0))
     (BV_to_nat l0)) : nat

* Functions:
appbv  : forall (_ : BV) (_ : BV), BV
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
bool_to_nat  : forall _ : bool, nat
Nat.add  : forall (_ : nat) (_ : nat), nat
list  : forall _ : Type, Type
consbv  : forall (_ : bool) (_ : BV), BV
S  : forall _ : nat, nat
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
PeanoNat.Nat.add  : forall (_ : nat) (_ : nat), nat
BV_to_nat  : forall _ : BV, nat

<---GENERALIZATION--->
Time elapsed: 9 seconds
Generalized Variables:
lf3 : nat = S
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l))
     (BV_to_nat l0))
lf7 : nat = PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0)
lf11 : nat = BV_to_nat l0
lf12 : nat = BV_to_nat l
lf1 : nat = S
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (BV_to_nat l0)) (BV_to_nat l0)))
lf4 : nat = S
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0))
     (BV_to_nat l0))
lf5 : nat = PeanoNat.Nat.add
  (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l))
  (BV_to_nat l0)
lf9 : nat = Nat.add (BV_to_nat l) (BV_to_nat l0)
lf2 : nat = S
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
           (BV_to_nat l)) (BV_to_nat l0)))
lf10 : nat = Nat.add (BV_to_nat l) (BV_to_nat l)
lf8 : nat = PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l)
lf6 : nat = PeanoNat.Nat.add
  (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0))
  (BV_to_nat l0)

Generalizations:
Lemma conj1: forall (lf10 : nat) (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj5: forall (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma conj17: forall (lf10 : nat) (lf12 : nat) (lf11 : nat), @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj21: forall (lf12 : nat) (lf11 : nat), @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma conj257: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj261: forall (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma conj273: forall (lf10 : nat) (lf11 : nat) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj277: forall (lf11 : nat) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma conj513: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj517: forall (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj529: forall (lf10 : nat) (l0 : list bool) (lf12 : nat), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj533: forall (l0 : list bool) (lf12 : nat), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj769: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj773: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))).
Lemma conj785: forall (lf10 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj789: forall (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))).


<---VALIDITY CHECKS--->
Time elapsed: 109 seconds
Valid:
Lemma conj789: forall (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))).
Lemma conj533: forall (l0 : list bool) (lf12 : nat), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj277: forall (lf11 : nat) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma conj21: forall (lf12 : nat) (lf11 : nat), @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).

Invalid:
Lemma conj785: forall (lf10 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj773: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))).
Lemma conj769: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj529: forall (lf10 : nat) (l0 : list bool) (lf12 : nat), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj517: forall (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj513: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj273: forall (lf10 : nat) (lf11 : nat) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj261: forall (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma conj257: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj17: forall (lf10 : nat) (lf12 : nat) (lf11 : nat), @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj5: forall (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma conj1: forall (lf10 : nat) (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).

<---ADD IMPLICATIONS--->
Time elapsed: 117 seconds
Generalizations:
Lemma conj785: forall (lf10 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj773: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))).
Lemma conj769: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj529: forall (lf10 : nat) (l0 : list bool) (lf12 : nat), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj517: forall (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj513: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj273: forall (lf10 : nat) (lf11 : nat) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj261: forall (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma conj257: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj17: forall (lf10 : nat) (lf12 : nat) (lf11 : nat), @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj5: forall (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma conj1: forall (lf10 : nat) (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).


<---VALIDITY CHECKS--->
Time elapsed: 136 seconds
Valid:

Invalid:
Lemma conj1: forall (lf10 : nat) (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj5: forall (lf9 : nat) (lf12 : nat) (lf11 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma conj17: forall (lf10 : nat) (lf12 : nat) (lf11 : nat), @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj257: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj261: forall (lf9 : nat) (lf11 : nat) (l : list bool), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma conj273: forall (lf10 : nat) (lf11 : nat) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma conj513: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj517: forall (lf9 : nat) (l0 : list bool) (lf12 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj529: forall (lf10 : nat) (l0 : list bool) (lf12 : nat), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj769: forall (lf10 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).
Lemma conj773: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))).
Lemma conj785: forall (lf10 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))).


<---CREATE SKETCHES--->
Time elapsed: 137 seconds
Sketches:
Sketch conj1_sketch0 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (##hole##))
Sketch conj1_sketch1 : @eq nat (S (##hole##))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj1_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (##hole##)))
Sketch conj1_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj1_sketch4 : @eq nat (S (S (##hole##)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj1_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (##hole##)
Sketch conj1_sketch6 : @eq nat (##hole##)
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj1_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (##hole##) lf11)))
Sketch conj1_term_sketch0 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)) (##hole##)
Sketch conj1_term_sketch1 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)) (##hole##)
Sketch conj1_term_sketch2 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11) (##hole##)
Sketch conj1_term_sketch3 : @eq nat (PeanoNat.Nat.add lf9 lf12) (##hole##)
Sketch conj1_term_sketch4 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11) (##hole##)
Sketch conj1_term_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
  (##hole##)
Sketch conj1_term_sketch6 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (##hole##)
Sketch conj1_term_sketch7 : @eq nat (PeanoNat.Nat.add lf10 lf11) (##hole##)
Sketch conj5_sketch0 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (##hole##)))
Sketch conj5_sketch1 : @eq nat (S (##hole##))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11)))
Sketch conj5_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11)))
Sketch conj5_sketch3 : @eq nat (S (S (##hole##)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11)))
Sketch conj5_sketch4 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (##hole##))
Sketch conj5_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (##hole##)
Sketch conj5_sketch6 : @eq nat (##hole##)
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11)))
Sketch conj5_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf11) lf11)))
Sketch conj5_sketch8 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (S (S (PeanoNat.Nat.add (##hole##) lf11)))
Sketch conj5_term_sketch0 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11)
  (##hole##)
Sketch conj5_term_sketch1 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)) (##hole##)
Sketch conj5_term_sketch2 : @eq nat (PeanoNat.Nat.add lf9 lf12) (##hole##)
Sketch conj5_term_sketch3 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11) (##hole##)
Sketch conj5_term_sketch4 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))
  (##hole##)
Sketch conj5_term_sketch5 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11)))
  (##hole##)
Sketch conj5_term_sketch6 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))
  (##hole##)
Sketch conj5_term_sketch7 : @eq nat (Nat.add lf12 lf12) (##hole##)
Sketch conj5_term_sketch8 : @eq nat (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) (##hole##)
Sketch conj17_sketch0 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (##hole##))
Sketch conj17_sketch1 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (##hole##)))
Sketch conj17_sketch2 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (##hole##)
Sketch conj17_sketch3 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (##hole##) lf11)))
Sketch conj17_sketch4 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf12) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj17_sketch5 : @eq nat (S (S (##hole##)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj17_sketch6 : @eq nat (S (##hole##))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj17_sketch7 : @eq nat (##hole##)
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj17_sketch8 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj17_term_sketch0 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)) (##hole##)
Sketch conj17_term_sketch1 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11) (##hole##)
Sketch conj17_term_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
  (##hole##)
Sketch conj17_term_sketch3 : @eq nat (PeanoNat.Nat.add lf10 lf11) (##hole##)
Sketch conj17_term_sketch4 : @eq nat (Nat.add lf12 lf11) (##hole##)
Sketch conj17_term_sketch5 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)
  (##hole##)
Sketch conj17_term_sketch6 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11))
  (##hole##)
Sketch conj17_term_sketch7 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))
  (##hole##)
Sketch conj17_term_sketch8 : @eq nat (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) (##hole##)
Sketch conj257_sketch0 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (##hole##))
Sketch conj257_sketch1 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (##hole##)))
Sketch conj257_sketch2 : @eq nat (##hole##)
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj257_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (##hole##)
Sketch conj257_sketch4 : @eq nat (S (S (##hole##)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj257_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (##hole##) lf11)))
Sketch conj257_sketch6 : @eq nat (S (##hole##))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj257_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj257_sketch8 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (##hole##)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj257_term_sketch0 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)) (##hole##)
Sketch conj257_term_sketch1 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11) (##hole##)
Sketch conj257_term_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (##hole##)
Sketch conj257_term_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
  (##hole##)
Sketch conj257_term_sketch4 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)
  (##hole##)
Sketch conj257_term_sketch5 : @eq nat (PeanoNat.Nat.add lf10 lf11) (##hole##)
Sketch conj257_term_sketch6 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11))
  (##hole##)
Sketch conj257_term_sketch7 : @eq nat (PeanoNat.Nat.add lf9 (BV_to_nat l)) (##hole##)
Sketch conj257_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj261_sketch0 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (##hole##)))
Sketch conj261_sketch1 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (##hole##)
Sketch conj261_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (##hole##))
Sketch conj261_sketch3 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11)))
Sketch conj261_sketch4 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11)))
Sketch conj261_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf11) lf11)))
Sketch conj261_sketch6 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11)))
Sketch conj261_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11)))
Sketch conj261_sketch8 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (##hole##) lf11)))
Sketch conj261_sketch9 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (##hole##)) lf11)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (##hole##) (##hole##)) lf11) lf11)))
Sketch conj261_term_sketch0 : @eq nat
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11)
  (##hole##)
Sketch conj261_term_sketch1 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11)))
  (##hole##)
Sketch conj261_term_sketch2 : @eq nat
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))
  (##hole##)
Sketch conj261_term_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))
  (##hole##)
Sketch conj261_term_sketch4 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)
  (##hole##)
Sketch conj261_term_sketch5 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj261_term_sketch6 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11))
  (##hole##)
Sketch conj261_term_sketch7 : @eq nat (PeanoNat.Nat.add lf9 (BV_to_nat l)) (##hole##)
Sketch conj261_term_sketch8 : @eq nat (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11)
  (##hole##)
Sketch conj261_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj273_sketch0 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (##hole##))
Sketch conj273_sketch1 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (S (##hole##)))
Sketch conj273_sketch2 : @eq nat (S (S (##hole##)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj273_sketch3 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (##hole##)
Sketch conj273_sketch4 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (##hole##) lf11)))
Sketch conj273_sketch5 : @eq nat (S (##hole##))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj273_sketch6 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj273_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj273_sketch8 : @eq nat (##hole##)
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj273_sketch9 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (##hole##) lf11) (##hole##)) lf11)))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
Sketch conj273_term_sketch0 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)) (##hole##)
Sketch conj273_term_sketch1 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11) (##hole##)
Sketch conj273_term_sketch2 : @eq nat
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)
  (##hole##)
Sketch conj273_term_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))
  (##hole##)
Sketch conj273_term_sketch4 : @eq nat (PeanoNat.Nat.add lf10 lf11) (##hole##)
Sketch conj273_term_sketch5 : @eq nat
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11))
  (##hole##)
Sketch conj273_term_sketch6 : @eq nat (Nat.add (BV_to_nat l) lf11) (##hole##)
Sketch conj273_term_sketch7 : @eq nat (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l))
  (##hole##)
Sketch conj273_term_sketch8 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))
  (##hole##)
Sketch conj273_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj513_sketch0 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj513_sketch1 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj513_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (##hole##)
Sketch conj513_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (##hole##))))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (##hole##)) (##hole##))))
Sketch conj513_sketch4 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj513_sketch5 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj513_sketch6 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj513_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
Sketch conj513_sketch8 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj513_term_sketch0 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0))
  (##hole##)
Sketch conj513_term_sketch1 : @eq nat (PeanoNat.Nat.add lf9 lf12) (##hole##)
Sketch conj513_term_sketch2 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))) (##hole##)
Sketch conj513_term_sketch3 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj513_term_sketch4 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0)))
  (##hole##)
Sketch conj513_term_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (##hole##)
Sketch conj513_term_sketch6 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))
  (##hole##)
Sketch conj513_term_sketch7 : @eq nat (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (##hole##)
Sketch conj513_term_sketch8 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0)))
  (##hole##)
Sketch conj517_sketch0 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj517_sketch1 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj517_sketch2 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (##hole##))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) (##hole##))
           (##hole##))))
Sketch conj517_sketch3 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj517_sketch4 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (##hole##)
Sketch conj517_sketch5 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj517_sketch6 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
Sketch conj517_sketch7 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj517_sketch8 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj517_sketch9 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj517_term_sketch0 : @eq nat
  (S
     (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
        (BV_to_nat l0))) (##hole##)
Sketch conj517_term_sketch1 : @eq nat (PeanoNat.Nat.add lf9 lf12) (##hole##)
Sketch conj517_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj517_term_sketch3 : @eq nat (Nat.add lf12 lf12) (##hole##)
Sketch conj517_term_sketch4 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
           (BV_to_nat l0)))) (##hole##)
Sketch conj517_term_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))
  (##hole##)
Sketch conj517_term_sketch6 : @eq nat (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0)) (##hole##)
Sketch conj517_term_sketch7 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))
  (##hole##)
Sketch conj517_term_sketch8 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))
     (BV_to_nat l0)) (##hole##)
Sketch conj517_term_sketch9 : @eq nat (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0)))
  (##hole##)
Sketch conj529_sketch0 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj529_sketch1 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf12) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj529_sketch2 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0)))) (##hole##)
Sketch conj529_sketch3 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 (##hole##)) lf12)
           (##hole##))))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (##hole##)) (##hole##))))
Sketch conj529_sketch4 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj529_sketch5 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0)))) (S (##hole##))
Sketch conj529_sketch6 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj529_sketch7 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj529_sketch8 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0))))
  (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
Sketch conj529_sketch9 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj529_term_sketch0 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0))
  (##hole##)
Sketch conj529_term_sketch1 : @eq nat (Nat.add lf12 (BV_to_nat l0)) (##hole##)
Sketch conj529_term_sketch2 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))) (##hole##)
Sketch conj529_term_sketch3 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj529_term_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12) (##hole##)
Sketch conj529_term_sketch5 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0)))
  (##hole##)
Sketch conj529_term_sketch6 : @eq nat
  (S
     (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
        (BV_to_nat l0))) (##hole##)
Sketch conj529_term_sketch7 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
           (BV_to_nat l0)))) (##hole##)
Sketch conj529_term_sketch8 : @eq nat (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (##hole##)
Sketch conj529_term_sketch9 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)
     (BV_to_nat l0)) (##hole##)
Sketch conj769_sketch0 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj769_sketch1 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (##hole##)
Sketch conj769_sketch2 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (##hole##))))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (##hole##)) (##hole##))))
Sketch conj769_sketch3 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj769_sketch4 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj769_sketch5 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj769_sketch6 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj769_sketch7 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj769_sketch8 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
Sketch conj769_sketch9 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (##hole##)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj769_term_sketch0 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0))
  (##hole##)
Sketch conj769_term_sketch1 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))) (##hole##)
Sketch conj769_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj769_term_sketch3 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0)))
  (##hole##)
Sketch conj769_term_sketch4 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (##hole##)
Sketch conj769_term_sketch5 : @eq nat (PeanoNat.Nat.add lf9 (BV_to_nat l)) (##hole##)
Sketch conj769_term_sketch6 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))
  (##hole##)
Sketch conj769_term_sketch7 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0)))
  (##hole##)
Sketch conj769_term_sketch8 : @eq nat (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (##hole##)
Sketch conj769_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj773_sketch0 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (##hole##)
Sketch conj773_sketch1 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (##hole##))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))
           (##hole##))))
Sketch conj773_sketch2 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj773_sketch3 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj773_sketch4 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
Sketch conj773_sketch5 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0))))
Sketch conj773_sketch6 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0))))
Sketch conj773_sketch7 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0))))
Sketch conj773_sketch8 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0))))
Sketch conj773_sketch9 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj773_sketch10 : @eq nat
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (##hole##)) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (##hole##) (##hole##)) (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj773_term_sketch0 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
              (BV_to_nat l0)) (BV_to_nat l0)))) (##hole##)
Sketch conj773_term_sketch1 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj773_term_sketch2 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj773_term_sketch3 : @eq nat
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0))
     (BV_to_nat l0)) (##hole##)
Sketch conj773_term_sketch4 : @eq nat
  (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (BV_to_nat l0))
  (##hole##)
Sketch conj773_term_sketch5 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))
  (##hole##)
Sketch conj773_term_sketch6 : @eq nat (PeanoNat.Nat.add lf9 (BV_to_nat l)) (##hole##)
Sketch conj773_term_sketch7 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))
  (##hole##)
Sketch conj773_term_sketch8 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0)))
  (##hole##)
Sketch conj773_term_sketch9 : @eq nat
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (BV_to_nat l0)) (BV_to_nat l0))) (##hole##)
Sketch conj773_term_sketch10 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj785_sketch0 : @eq nat (S (S (##hole##)))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj785_sketch1 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj785_sketch2 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj785_sketch3 : @eq nat (S (##hole##))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj785_sketch4 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0)))) (##hole##)
Sketch conj785_sketch5 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (##hole##)) (BV_to_nat l))
           (##hole##))))
  (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (##hole##)) (##hole##))))
Sketch conj785_sketch6 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0)))) (S (##hole##))
Sketch conj785_sketch7 : @eq nat (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj785_sketch8 : @eq nat (##hole##)
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj785_sketch9 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0))))
  (S (S (PeanoNat.Nat.add (##hole##) (BV_to_nat l0))))
Sketch conj785_sketch10 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (##hole##) (BV_to_nat l0)) (##hole##))
           (BV_to_nat l0))))
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0))))
Sketch conj785_term_sketch0 : @eq nat
  (PeanoNat.Nat.add
     (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l))
     (BV_to_nat l0)) (##hole##)
Sketch conj785_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj785_term_sketch2 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0))
  (##hole##)
Sketch conj785_term_sketch3 : @eq nat
  (S
     (PeanoNat.Nat.add
        (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
           (BV_to_nat l)) (BV_to_nat l0))) (##hole##)
Sketch conj785_term_sketch4 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0))
           (BV_to_nat l0)))) (##hole##)
Sketch conj785_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj785_term_sketch6 : @eq nat
  (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (BV_to_nat l0)))
  (##hole##)
Sketch conj785_term_sketch7 : @eq nat
  (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0)) (BV_to_nat l))
  (##hole##)
Sketch conj785_term_sketch8 : @eq nat
  (S
     (S
        (PeanoNat.Nat.add
           (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))
              (BV_to_nat l)) (BV_to_nat l0)))) (##hole##)
Sketch conj785_term_sketch9 : @eq nat (PeanoNat.Nat.add lf10 (BV_to_nat l0)) (##hole##)
Sketch conj785_term_sketch10 : @eq nat (BV_to_nat l) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2910 seconds
Problems per Sketch:
Sketch conj5_sketch5 --> Problem  synth_6
Sketch conj517_term_sketch2 --> Problem  synth_44
Sketch conj773_sketch4 --> Problem  synth_58
Sketch conj785_term_sketch8 --> Problem  synth_62
Sketch conj257_sketch5 --> Problem  synth_21
Sketch conj785_sketch10 --> Problem  synth_69
Sketch conj1_sketch6 --> Problem  synth_7
Sketch conj517_sketch1 --> Problem  synth_45
Sketch conj5_term_sketch3 --> Problem  synth_3
Sketch conj257_sketch2 --> Problem  synth_7
Sketch conj513_sketch5 --> Problem  synth_40
Sketch conj773_term_sketch4 --> Problem  synth_63
Sketch conj257_sketch3 --> Problem  synth_20
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj5_sketch7 --> Problem  synth_14
Sketch conj1_term_sketch7 --> Problem  synth_4
Sketch conj17_sketch8 --> Problem  synth_4
Sketch conj773_term_sketch0 --> Problem  synth_62
Sketch conj769_term_sketch5 --> Problem  synth_23
Sketch conj257_term_sketch4 --> Problem  synth_19
Sketch conj17_sketch6 --> Problem  synth_2
Sketch conj5_sketch6 --> Problem  synth_13
Sketch conj529_term_sketch9 --> Problem  synth_49
Sketch conj5_term_sketch0 --> Problem  synth_12
Sketch conj785_term_sketch2 --> Problem  synth_41
Sketch conj257_sketch6 --> Problem  synth_2
Sketch conj17_term_sketch6 --> Problem  synth_10
Sketch conj261_sketch1 --> Problem  synth_20
Sketch conj529_term_sketch0 --> Problem  synth_41
Sketch conj261_sketch5 --> Problem  synth_27
Sketch conj773_sketch5 --> Problem  synth_62
Sketch conj529_sketch5 --> Problem  synth_50
Sketch conj1_sketch1 --> Problem  synth_2
Sketch conj517_sketch8 --> Problem  synth_35
Sketch conj769_sketch9 --> Problem  synth_59
Sketch conj273_sketch5 --> Problem  synth_2
Sketch conj769_sketch8 --> Problem  synth_58
Sketch conj529_sketch2 --> Problem  synth_48
Sketch conj261_sketch2 --> Problem  synth_18
Sketch conj273_term_sketch9 --> Problem  synth_24
Sketch conj1_term_sketch0 --> Problem  synth_2
Sketch conj517_sketch7 --> Problem  synth_49
Sketch conj261_term_sketch5 --> Problem  synth_31
Sketch conj5_term_sketch2 --> Problem  synth_9
Sketch conj261_sketch6 --> Problem  synth_28
Sketch conj769_sketch3 --> Problem  synth_57
Sketch conj257_term_sketch2 --> Problem  synth_20
Sketch conj261_term_sketch3 --> Problem  synth_20
Sketch conj529_term_sketch1 --> Problem  synth_53
Sketch conj785_sketch7 --> Problem  synth_36
Sketch conj273_sketch7 --> Problem  synth_4
Sketch conj257_sketch1 --> Problem  synth_19
Sketch conj773_term_sketch9 --> Problem  synth_65
Sketch conj769_term_sketch9 --> Problem  synth_24
Sketch conj513_term_sketch3 --> Problem  synth_44
Sketch conj257_term_sketch8 --> Problem  synth_24
Sketch conj769_term_sketch6 --> Problem  synth_54
Sketch conj261_term_sketch2 --> Problem  synth_28
Sketch conj529_term_sketch3 --> Problem  synth_44
Sketch conj773_term_sketch8 --> Problem  synth_57
Sketch conj261_term_sketch4 --> Problem  synth_19
Sketch conj261_sketch0 --> Problem  synth_19
Sketch conj257_term_sketch3 --> Problem  synth_7
Sketch conj17_sketch2 --> Problem  synth_13
Sketch conj273_sketch6 --> Problem  synth_32
Sketch conj529_sketch9 --> Problem  synth_41
Sketch conj273_term_sketch2 --> Problem  synth_26
Sketch conj785_term_sketch10 --> Problem  synth_24
Sketch conj773_sketch1 --> Problem  synth_60
Sketch conj517_term_sketch0 --> Problem  synth_50
Sketch conj517_term_sketch1 --> Problem  synth_9
Sketch conj769_sketch1 --> Problem  synth_55
Sketch conj529_term_sketch7 --> Problem  synth_48
Sketch conj517_term_sketch6 --> Problem  synth_45
Sketch conj517_term_sketch7 --> Problem  synth_35
Sketch conj769_term_sketch3 --> Problem  synth_43
Sketch conj513_sketch2 --> Problem  synth_37
Sketch conj261_sketch4 --> Problem  synth_26
Sketch conj261_term_sketch8 --> Problem  synth_29
Sketch conj261_term_sketch6 --> Problem  synth_18
Sketch conj273_sketch0 --> Problem  synth_28
Sketch conj785_term_sketch3 --> Problem  synth_65
Sketch conj17_sketch4 --> Problem  synth_16
Sketch conj769_sketch2 --> Problem  synth_56
Sketch conj513_term_sketch6 --> Problem  synth_35
Sketch conj273_term_sketch3 --> Problem  synth_7
Sketch conj17_term_sketch5 --> Problem  synth_12
Sketch conj513_term_sketch4 --> Problem  synth_43
Sketch conj513_sketch6 --> Problem  synth_41
Sketch conj273_sketch4 --> Problem  synth_29
Sketch conj273_term_sketch4 --> Problem  synth_4
Sketch conj529_term_sketch2 --> Problem  synth_40
Sketch conj785_term_sketch7 --> Problem  synth_63
Sketch conj785_sketch2 --> Problem  synth_64
Sketch conj261_sketch7 --> Problem  synth_29
Sketch conj261_term_sketch0 --> Problem  synth_26
Sketch conj773_term_sketch3 --> Problem  synth_64
Sketch conj257_sketch8 --> Problem  synth_22
Sketch conj785_term_sketch1 --> Problem  synth_70
Sketch conj513_term_sketch8 --> Problem  synth_39
Sketch conj17_sketch5 --> Problem  synth_5
Sketch conj1_term_sketch5 --> Problem  synth_7
Sketch conj17_term_sketch7 --> Problem  synth_13
Sketch conj1_term_sketch4 --> Problem  synth_3
Sketch conj529_sketch0 --> Problem  synth_49
Sketch conj517_sketch9 --> Problem  synth_50
Sketch conj529_sketch1 --> Problem  synth_51
Sketch conj17_term_sketch2 --> Problem  synth_7
Sketch conj513_term_sketch5 --> Problem  synth_37
Sketch conj273_term_sketch7 --> Problem  synth_29
Sketch conj273_sketch8 --> Problem  synth_7
Sketch conj1_term_sketch3 --> Problem  synth_9
Sketch conj785_term_sketch9 --> Problem  synth_36
Sketch conj773_sketch2 --> Problem  synth_61
Sketch conj257_term_sketch6 --> Problem  synth_18
Sketch conj1_sketch5 --> Problem  synth_6
Sketch conj273_term_sketch0 --> Problem  synth_2
Sketch conj1_sketch3 --> Problem  synth_4
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj5_term_sketch1 --> Problem  synth_1
Sketch conj1_sketch4 --> Problem  synth_5
Sketch conj5_sketch4 --> Problem  synth_1
Sketch conj785_sketch9 --> Problem  synth_63
Sketch conj785_sketch6 --> Problem  synth_65
Sketch conj529_term_sketch8 --> Problem  synth_36
Sketch conj17_sketch1 --> Problem  synth_12
Sketch conj773_term_sketch1 --> Problem  synth_44
Sketch conj769_term_sketch2 --> Problem  synth_44
Sketch conj529_term_sketch5 --> Problem  synth_43
Sketch conj517_term_sketch4 --> Problem  synth_48
Sketch conj5_term_sketch8 --> Problem  synth_11
Sketch conj513_sketch7 --> Problem  synth_42
Sketch conj5_term_sketch4 --> Problem  synth_10
Sketch conj769_term_sketch7 --> Problem  synth_57
Sketch conj769_sketch5 --> Problem  synth_36
Sketch conj513_term_sketch7 --> Problem  synth_36
Sketch conj17_term_sketch4 --> Problem  synth_17
Sketch conj773_sketch8 --> Problem  synth_65
Sketch conj769_term_sketch0 --> Problem  synth_41
Sketch conj517_term_sketch9 --> Problem  synth_39
Sketch conj785_sketch4 --> Problem  synth_62
Sketch conj517_term_sketch3 --> Problem  synth_15
Sketch conj257_term_sketch5 --> Problem  synth_4
Sketch conj261_term_sketch9 --> Problem  synth_24
Sketch conj1_term_sketch1 --> Problem  synth_1
Sketch conj773_term_sketch5 --> Problem  synth_55
Sketch conj513_term_sketch1 --> Problem  synth_9
Sketch conj785_sketch0 --> Problem  synth_41
Sketch conj773_term_sketch7 --> Problem  synth_54
Sketch conj529_sketch6 --> Problem  synth_43
Sketch conj529_sketch4 --> Problem  synth_36
Sketch conj273_sketch3 --> Problem  synth_25
Sketch conj261_term_sketch1 --> Problem  synth_25
Sketch conj261_sketch3 --> Problem  synth_25
Sketch conj5_term_sketch6 --> Problem  synth_6
Sketch conj1_term_sketch2 --> Problem  synth_5
Sketch conj785_sketch3 --> Problem  synth_43
Sketch conj261_sketch8 --> Problem  synth_21
Sketch conj257_sketch7 --> Problem  synth_4
Sketch conj785_sketch1 --> Problem  synth_67
Sketch conj785_term_sketch5 --> Problem  synth_44
Sketch conj529_sketch7 --> Problem  synth_40
Sketch conj273_sketch2 --> Problem  synth_5
Sketch conj529_term_sketch6 --> Problem  synth_50
Sketch conj17_term_sketch3 --> Problem  synth_4
Sketch conj273_sketch1 --> Problem  synth_26
Sketch conj257_sketch4 --> Problem  synth_5
Sketch conj5_sketch3 --> Problem  synth_12
Sketch conj773_term_sketch6 --> Problem  synth_23
Sketch conj273_term_sketch8 --> Problem  synth_25
Sketch conj1_term_sketch6 --> Problem  synth_6
Sketch conj773_sketch7 --> Problem  synth_64
Sketch conj5_sketch8 --> Problem  synth_8
Sketch conj273_term_sketch1 --> Problem  synth_5
Sketch conj785_term_sketch0 --> Problem  synth_64
Sketch conj513_sketch8 --> Problem  synth_43
Sketch conj773_sketch6 --> Problem  synth_63
Sketch conj17_term_sketch8 --> Problem  synth_11
Sketch conj1_sketch2 --> Problem  synth_3
Sketch conj257_sketch0 --> Problem  synth_18
Sketch conj529_sketch8 --> Problem  synth_45
Sketch conj517_sketch4 --> Problem  synth_37
Sketch conj513_sketch4 --> Problem  synth_39
Sketch conj1_sketch7 --> Problem  synth_8
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj785_sketch8 --> Problem  synth_40
Sketch conj5_term_sketch5 --> Problem  synth_13
Sketch conj257_term_sketch0 --> Problem  synth_2
Sketch conj529_term_sketch4 --> Problem  synth_45
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj5_sketch1 --> Problem  synth_10
Sketch conj785_sketch5 --> Problem  synth_68
Sketch conj769_term_sketch1 --> Problem  synth_40
Sketch conj529_sketch3 --> Problem  synth_52
Sketch conj769_term_sketch4 --> Problem  synth_55
Sketch conj257_term_sketch1 --> Problem  synth_5
Sketch conj5_term_sketch7 --> Problem  synth_15
Sketch conj517_sketch3 --> Problem  synth_47
Sketch conj773_sketch3 --> Problem  synth_54
Sketch conj517_sketch5 --> Problem  synth_48
Sketch conj769_sketch7 --> Problem  synth_43
Sketch conj517_sketch2 --> Problem  synth_46
Sketch conj773_sketch0 --> Problem  synth_55
Sketch conj773_term_sketch10 --> Problem  synth_24
Sketch conj517_term_sketch5 --> Problem  synth_37
Sketch conj513_term_sketch2 --> Problem  synth_40
Sketch conj773_term_sketch2 --> Problem  synth_31
Sketch conj17_sketch7 --> Problem  synth_7
Sketch conj517_sketch0 --> Problem  synth_39
Sketch conj513_sketch0 --> Problem  synth_35
Sketch conj261_sketch9 --> Problem  synth_30
Sketch conj5_sketch2 --> Problem  synth_11
Sketch conj785_term_sketch6 --> Problem  synth_43
Sketch conj17_term_sketch1 --> Problem  synth_5
Sketch conj785_term_sketch4 --> Problem  synth_40
Sketch conj773_sketch9 --> Problem  synth_57
Sketch conj769_sketch6 --> Problem  synth_41
Sketch conj273_sketch9 --> Problem  synth_33
Sketch conj261_term_sketch7 --> Problem  synth_23
Sketch conj273_term_sketch5 --> Problem  synth_28
Sketch conj513_sketch1 --> Problem  synth_36
Sketch conj17_sketch3 --> Problem  synth_11
Sketch conj513_term_sketch0 --> Problem  synth_41
Sketch conj769_term_sketch8 --> Problem  synth_36
Sketch conj769_sketch0 --> Problem  synth_54
Sketch conj517_sketch6 --> Problem  synth_42
Sketch conj513_sketch3 --> Problem  synth_38
Sketch conj773_sketch10 --> Problem  synth_66
Sketch conj769_sketch4 --> Problem  synth_40
Sketch conj273_term_sketch6 --> Problem  synth_34
Sketch conj257_term_sketch7 --> Problem  synth_23
Sketch conj517_term_sketch8 --> Problem  synth_49


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 3941 seconds

Problem: synth_63

Problem: synth_68

Problem: synth_67

Problem: synth_64

Problem: synth_11

Problem: synth_54
 PeanoNat.Nat.add lf9 lf9

Problem: synth_39

Problem: synth_46

Problem: synth_66

Problem: synth_57

Problem: synth_59

Problem: synth_31
 Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))
 Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))

Problem: synth_8
 PeanoNat.Nat.add lf9 lf12
 PeanoNat.Nat.add lf12 lf9

Problem: synth_34

Problem: synth_5

Problem: synth_37

Problem: synth_58

Problem: synth_53

Problem: synth_2

Problem: synth_22

Problem: synth_18

Problem: synth_21

Problem: synth_56

Problem: synth_41

Problem: synth_49

Problem: synth_25

Problem: synth_13

Problem: synth_6

Problem: synth_4
 PeanoNat.Nat.add lf10 lf11
 PeanoNat.Nat.add lf11 lf10

Problem: synth_38

Problem: synth_65

Problem: synth_23

Problem: synth_19
 PeanoNat.Nat.add lf9 lf9

Problem: synth_10

Problem: synth_24
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)

Problem: synth_32

Problem: synth_48

Problem: synth_51

Problem: synth_35
 PeanoNat.Nat.add lf9 lf9

Problem: synth_28

Problem: synth_17
 PeanoNat.Nat.add lf12 lf11
 PeanoNat.Nat.add lf11 lf12

Problem: synth_29

Problem: synth_45

Problem: synth_26

Problem: synth_70

Problem: synth_9
 PeanoNat.Nat.add lf9 lf12
 PeanoNat.Nat.add lf12 lf9

Problem: synth_30

Problem: synth_1

Problem: synth_69

Problem: synth_55

Problem: synth_15
 PeanoNat.Nat.add lf12 lf12

Problem: synth_14
 PeanoNat.Nat.add lf12 lf12

Problem: synth_12

Problem: synth_62

Problem: synth_50

Problem: synth_20

Problem: synth_7

Problem: synth_61

Problem: synth_27

Problem: synth_42
 PeanoNat.Nat.add lf9 lf12
 PeanoNat.Nat.add lf12 lf9

Problem: synth_16
 PeanoNat.Nat.add lf12 lf11
 PeanoNat.Nat.add lf11 lf12

Problem: synth_40

Problem: synth_33

Problem: synth_47
 PeanoNat.Nat.add lf12 lf12

Problem: synth_3
 PeanoNat.Nat.add lf9 lf9

Problem: synth_52

Problem: synth_44
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)

Problem: synth_60

Problem: synth_36

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 3943 seconds
Lemmas:
Lemma candidate_1: forall (l : list bool) (l0 : list bool), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l0))               (BV_to_nat l)) (BV_to_nat l0))))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))               (BV_to_nat l0)) (BV_to_nat l0)))).
Lemma candidate_2: forall (lf12 : nat) (l0 : list bool), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)            (BV_to_nat l0))))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))            (BV_to_nat l0)))).
Lemma candidate_3: forall (l : list bool) (lf11 : nat), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma candidate_4: forall (lf11 : nat) (lf12 : nat), @eq nat   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma candidate_5: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_6: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_7: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf11 lf10) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_8: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11))).
Lemma candidate_9: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf9) lf11))).
Lemma candidate_10: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf9 lf12).
Lemma candidate_11: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf12 lf9).
Lemma candidate_12: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_13: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf10 lf11).
Lemma candidate_14: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf11 lf10).
Lemma candidate_15: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_16: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf12) lf11) lf11))).
Lemma candidate_17: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11))).
Lemma candidate_18: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf9) lf11))).
Lemma candidate_19: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf9 lf12).
Lemma candidate_20: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf12 lf9).
Lemma candidate_21: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_22: forall (lf12 : nat), @eq nat (Nat.add lf12 lf12) (PeanoNat.Nat.add lf12 lf12).
Lemma candidate_23: forall (lf11 : nat) (lf12 : nat) (lf10 : nat), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf11) lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_24: forall (lf11 : nat) (lf12 : nat) (lf10 : nat), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (PeanoNat.Nat.add lf11 lf12) lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_25: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_26: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf11 lf10) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_27: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf10 lf11).
Lemma candidate_28: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf11 lf10).
Lemma candidate_29: forall (lf11 : nat) (lf12 : nat), @eq nat (Nat.add lf12 lf11) (PeanoNat.Nat.add lf12 lf11).
Lemma candidate_30: forall (lf11 : nat) (lf12 : nat), @eq nat (Nat.add lf12 lf11) (PeanoNat.Nat.add lf11 lf12).
Lemma candidate_31: forall (l : list bool) (lf11 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_32: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_33: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf11 lf10) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_34: forall (l : list bool) (lf11 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_35: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf10 lf11).
Lemma candidate_36: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf11 lf10).
Lemma candidate_37: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_38: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_39: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_40: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_41: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_42: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_43: forall (l : list bool) (lf11 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_44: forall (l : list bool) (lf11 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) lf11)   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_45: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_46: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_47: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_48: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_49: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_50: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_51: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_52: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_53: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_54: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_55: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_56: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf11 lf10) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_57: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf10 lf11).
Lemma candidate_58: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf11 lf10).
Lemma candidate_59: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_60: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_61: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_62: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_63: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_64: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_65: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_66: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0)))).
Lemma candidate_67: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf9) (BV_to_nat l0)))).
Lemma candidate_68: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf9 lf12).
Lemma candidate_69: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf12 lf9).
Lemma candidate_70: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_71: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_72: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_73: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_74: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_75: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_76: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_77: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf12) (BV_to_nat l0))            (BV_to_nat l0)))).
Lemma candidate_78: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0)))).
Lemma candidate_79: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf9) (BV_to_nat l0)))).
Lemma candidate_80: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_81: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf9 lf12).
Lemma candidate_82: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf12 lf9).
Lemma candidate_83: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_84: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_85: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_86: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_87: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_88: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_89: forall (lf12 : nat), @eq nat (Nat.add lf12 lf12) (PeanoNat.Nat.add lf12 lf12).
Lemma candidate_90: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_91: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_92: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_93: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_94: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_95: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_96: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_97: forall (l : list bool) (l0 : list bool) (lf9 : nat), @eq nat   (S      (S         (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_98: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_99: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_100: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_101: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_102: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_103: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_104: forall (l : list bool) (l0 : list bool) (lf9 : nat), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_105: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_106: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_107: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_108: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_109: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_110: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_111: forall (l : list bool) (l0 : list bool) (lf9 : nat), @eq nat   (S      (S         (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add lf9 lf9))).
Lemma candidate_112: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_113: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_114: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_115: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_116: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_117: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_118: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_119: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_120: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_121: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_122: forall (l : list bool) (l0 : list bool) (lf9 : nat), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 (BV_to_nat l)) (BV_to_nat l0))   (PeanoNat.Nat.add lf9 lf9).
Lemma candidate_123: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_124: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_125: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_126: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_127: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_128: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_129: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_130: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_131: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_132: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_133: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_134: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_135: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_136: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_137: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_138: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_139: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_140: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 4120 seconds
Duplicates removed: 96
Filtered by Quickchick: 12
Filtered by script: 7
Remaining: 25

Lemmas: 
Lemma candidate_30: forall (lf11 : nat) (lf12 : nat), @eq nat (Nat.add lf12 lf11) (PeanoNat.Nat.add lf11 lf12).
Lemma candidate_11: forall (lf12 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf9 lf12) (PeanoNat.Nat.add lf12 lf9).
Lemma candidate_14: forall (lf11 : nat) (lf10 : nat), @eq nat (PeanoNat.Nat.add lf10 lf11) (PeanoNat.Nat.add lf11 lf10).
Lemma candidate_42: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_75: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_40: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_73: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_39: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_72: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_9: forall (lf11 : nat) (lf12 : nat) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf9) lf11))).
Lemma candidate_7: forall (lf11 : nat) (lf10 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf11 lf10) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf10 lf11) lf11))).
Lemma candidate_67: forall (lf12 : nat) (l0 : list bool) (lf9 : nat), @eq nat (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf9 lf12) (BV_to_nat l0))))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add lf12 lf9) (BV_to_nat l0)))).
Lemma candidate_4: forall (lf11 : nat) (lf12 : nat), @eq nat   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf11) lf12) lf11)))   (S (S (PeanoNat.Nat.add (PeanoNat.Nat.add (Nat.add lf12 lf12) lf11) lf11))).
Lemma candidate_47: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_3: forall (l : list bool) (lf11 : nat), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add (BV_to_nat l) lf11) (BV_to_nat l)) lf11)))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf11) lf11))).
Lemma candidate_37: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_70: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_41: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_74: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_2: forall (lf12 : nat) (l0 : list bool), @eq nat   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add lf12 (BV_to_nat l0)) lf12)            (BV_to_nat l0))))   (S      (S         (PeanoNat.Nat.add            (PeanoNat.Nat.add (Nat.add lf12 lf12) (BV_to_nat l0))            (BV_to_nat l0)))).
Lemma candidate_38: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_71: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_48: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_46: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_45: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
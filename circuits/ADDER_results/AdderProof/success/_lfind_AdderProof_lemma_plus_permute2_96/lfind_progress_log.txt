File Information
- File name: AdderProof
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/AdderProof_lemma_plus_permute2_96
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/_lfind_AdderProof_lemma_plus_permute2_96
- Namespace: Circuits
- Proof name: BV_full_adder_ok
- Theorem: Theorem BV_full_adder_ok: forall (v0 w0 : BV) (cin0 : bool),
@eq nat (BV_to_nat (BV_full_adder v0 w0 cin0))
  (Nat.add (Nat.add (BV_to_nat v0) (BV_to_nat w0)) (bool_to_nat cin0)).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import Adder. 

Proof Context
* Goal State: @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin))

* Hypothesis:
cin : bool
H : forall (w0 : BV) (cin0 : bool),
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum l w0 cin0)
        (consbv (BV_full_adder_carry l w0 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat w0)) (bool_to_nat cin0))
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
BV
Prop
bool
nat

* Polymorphic Types:
list bool

* Variables:
cin : bool
l : list bool
a : bool

* Terms:
@eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)) : Prop
BV_to_nat
  (appbv (BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1)
     (consbv (BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1) nilbv)) : nat
cin : bool
bool_to_nat _UNBOUND_REL_1 : nat
PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
  (BV_to_nat l) : nat
Nat.add (bool_to_nat a) (BV_to_nat l) : nat
Nat.add (Nat.add (BV_to_nat l) (BV_to_nat _UNBOUND_REL_2))
  (bool_to_nat _UNBOUND_REL_1) : nat
bool_to_nat a : nat
forall (w0 : BV) (cin0 : bool),
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum l w0 cin0)
        (consbv (BV_full_adder_carry l w0 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat w0)) (bool_to_nat cin0)) : Prop
nilbv : BV
l : list bool
forall cin0 : bool,
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum l _UNBOUND_REL_2 cin0)
        (consbv (BV_full_adder_carry l _UNBOUND_REL_2 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat _UNBOUND_REL_2))
     (bool_to_nat cin0)) : Prop
bool_to_nat cin : nat
appbv (BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1)
  (consbv (BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1) nilbv) : BV
nat : Set
Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin) : nat
bool : Set
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1)
        (consbv (BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1) nilbv)))
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat _UNBOUND_REL_2))
     (bool_to_nat _UNBOUND_REL_1)) : Prop
BV_to_nat _UNBOUND_REL_2 : nat
Nat.add (BV_to_nat l) (BV_to_nat _UNBOUND_REL_2) : nat
BV_full_adder_sum l _UNBOUND_REL_2 _UNBOUND_REL_1 : BV
Nat.add
  (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
     (BV_to_nat l)) (bool_to_nat cin) : nat
PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l) : nat
PeanoNat.Nat.add
  (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
  (BV_to_nat l) : nat
BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1 : bool
BV : Set
list bool : Set
consbv (BV_full_adder_carry l _UNBOUND_REL_2 _UNBOUND_REL_1) nilbv : BV
a : bool
BV_to_nat l : nat

* Functions:
appbv  : forall (_ : BV) (_ : BV), BV
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
bool_to_nat  : forall _ : bool, nat
Nat.add  : forall (_ : nat) (_ : nat), nat
list  : forall _ : Type, Type
consbv  : forall (_ : bool) (_ : BV), BV
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
PeanoNat.Nat.add  : forall (_ : nat) (_ : nat), nat
BV_to_nat  : forall _ : BV, nat

<---GENERALIZATION--->
Time elapsed: 4 seconds
Generalized Variables:
lf3 : nat = PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
  (BV_to_nat l)
lf7 : nat = bool_to_nat cin
lf1 : nat = Nat.add
  (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
     (BV_to_nat l)) (bool_to_nat cin)
lf4 : nat = Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin)
lf5 : nat = PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l)
lf9 : nat = BV_to_nat l
lf2 : nat = PeanoNat.Nat.add
  (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
  (BV_to_nat l)
lf8 : nat = bool_to_nat a
lf6 : nat = Nat.add (bool_to_nat a) (BV_to_nat l)

Generalizations:
Lemma conj1: forall (lf9 : nat) (lf5 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj9: forall (lf5 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj17: forall (lf8 : nat) (lf9 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj19: forall (lf9 : nat) (lf4 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj25: forall (lf8 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj27: forall (lf4 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj33: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj34: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj36: forall (lf9 : nat) (lf5 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj41: forall (lf6 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj42: forall (lf8 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj44: forall (lf5 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj49: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj50: forall (lf8 : nat) (lf9 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj51: forall (lf6 : nat) (lf9 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj52: forall (lf9 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj57: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj58: forall (lf8 : nat) (lf7 : nat) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj59: forall (lf6 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj60: forall (lf7 : nat) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj129: forall (lf9 : nat) (lf5 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj137: forall (lf5 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj145: forall (lf8 : nat) (lf9 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj147: forall (lf9 : nat) (cin : bool) (lf4 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj153: forall (lf8 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj155: forall (cin : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj161: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj162: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj164: forall (lf9 : nat) (lf5 : nat) (cin : bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj169: forall (lf6 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj170: forall (lf8 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj172: forall (lf5 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj177: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj178: forall (lf8 : nat) (lf9 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj179: forall (lf6 : nat) (lf9 : nat) (cin : bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj180: forall (lf9 : nat) (cin : bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj185: forall (lf8 : nat) (lf6 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj186: forall (lf8 : nat) (cin : bool) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj187: forall (lf6 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj188: forall (cin : bool) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).


<---VALIDITY CHECKS--->
Time elapsed: 115 seconds
Valid:
Lemma conj188: forall (cin : bool) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj186: forall (lf8 : nat) (cin : bool) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj180: forall (lf9 : nat) (cin : bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj178: forall (lf8 : nat) (lf9 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj60: forall (lf7 : nat) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj58: forall (lf8 : nat) (lf7 : nat) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj52: forall (lf9 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj50: forall (lf8 : nat) (lf9 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).

Invalid:
Lemma conj187: forall (lf6 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj185: forall (lf8 : nat) (lf6 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj179: forall (lf6 : nat) (lf9 : nat) (cin : bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj177: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj172: forall (lf5 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj170: forall (lf8 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj169: forall (lf6 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj164: forall (lf9 : nat) (lf5 : nat) (cin : bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj162: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj161: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj155: forall (cin : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj153: forall (lf8 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj147: forall (lf9 : nat) (cin : bool) (lf4 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj145: forall (lf8 : nat) (lf9 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj137: forall (lf5 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj129: forall (lf9 : nat) (lf5 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj59: forall (lf6 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj57: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj51: forall (lf6 : nat) (lf9 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj49: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj44: forall (lf5 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj42: forall (lf8 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj41: forall (lf6 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj36: forall (lf9 : nat) (lf5 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj34: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj33: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj27: forall (lf4 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj25: forall (lf8 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj19: forall (lf9 : nat) (lf4 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj17: forall (lf8 : nat) (lf9 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj9: forall (lf5 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj1: forall (lf9 : nat) (lf5 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).

<---ADD IMPLICATIONS--->
Time elapsed: 149 seconds
Generalizations:
Lemma conj187: forall (lf6 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj185: forall (lf8 : nat) (lf6 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj179: forall (lf6 : nat) (lf9 : nat) (cin : bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj177: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj172: forall (lf5 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj170: forall (lf8 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj169: forall (lf6 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj164: forall (lf9 : nat) (lf5 : nat) (cin : bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj162: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj161: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj155: forall (cin : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj153: forall (lf8 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj147: forall (lf9 : nat) (cin : bool) (lf4 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj145: forall (lf8 : nat) (lf9 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj137: forall (lf5 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj129: forall (lf9 : nat) (lf5 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj59: forall (lf6 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj57: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj51: forall (lf6 : nat) (lf9 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj49: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj44: forall (lf5 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj42: forall (lf8 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj41: forall (lf6 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj36: forall (lf9 : nat) (lf5 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj34: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj33: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj27: forall (lf4 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj25: forall (lf8 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj19: forall (lf9 : nat) (lf4 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj17: forall (lf8 : nat) (lf9 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj9: forall (lf5 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj1: forall (lf9 : nat) (lf5 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).


<---VALIDITY CHECKS--->
Time elapsed: 196 seconds
Valid:

Invalid:
Lemma conj1: forall (lf9 : nat) (lf5 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj9: forall (lf5 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj17: forall (lf8 : nat) (lf9 : nat) (lf4 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj19: forall (lf9 : nat) (lf4 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj25: forall (lf8 : nat) (lf4 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj27: forall (lf4 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj33: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj34: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj36: forall (lf9 : nat) (lf5 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma conj41: forall (lf6 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj42: forall (lf8 : nat) (lf5 : nat) (lf7 : nat) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj44: forall (lf5 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma conj49: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma conj51: forall (lf6 : nat) (lf9 : nat) (lf7 : nat) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma conj57: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7).
Lemma conj59: forall (lf6 : nat) (lf7 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7).
Lemma conj129: forall (lf9 : nat) (lf5 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj137: forall (lf5 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj145: forall (lf8 : nat) (lf9 : nat) (cin : bool) (lf4 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj147: forall (lf9 : nat) (cin : bool) (lf4 : nat) (a : bool), @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj153: forall (lf8 : nat) (cin : bool) (lf4 : nat) (l : list bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj155: forall (cin : bool) (lf4 : nat) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj161: forall (lf6 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj162: forall (lf8 : nat) (lf9 : nat) (lf5 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj164: forall (lf9 : nat) (lf5 : nat) (cin : bool) (a : bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma conj169: forall (lf6 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj170: forall (lf8 : nat) (lf5 : nat) (cin : bool) (l : list bool), @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj172: forall (lf5 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma conj177: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (cin : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)).
Lemma conj179: forall (lf6 : nat) (lf9 : nat) (cin : bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)).
Lemma conj185: forall (lf8 : nat) (lf6 : nat) (cin : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)).
Lemma conj187: forall (lf6 : nat) (cin : bool) (l : list bool) (a : bool), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)).


<---CREATE SKETCHES--->
Time elapsed: 196 seconds
Sketches:
Sketch conj1_sketch0 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj1_sketch1 : @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (##hole##) lf7)
Sketch conj1_sketch2 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj1_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7) (##hole##)
Sketch conj1_term_sketch1 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj1_term_sketch2 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj9_sketch0 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj9_sketch1 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (Nat.add (##hole##) lf7)
Sketch conj9_sketch2 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj9_sketch3 : @eq nat (PeanoNat.Nat.add lf4 (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) lf7)
Sketch conj9_term_sketch0 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj9_term_sketch1 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj9_term_sketch2 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7) (##hole##)
Sketch conj9_term_sketch3 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj17_sketch0 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf7)
Sketch conj17_sketch1 : @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (##hole##) lf7)
Sketch conj17_sketch2 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj17_sketch3 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7)
Sketch conj17_term_sketch0 : @eq nat (PeanoNat.Nat.add lf8 lf9) (##hole##)
Sketch conj17_term_sketch1 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) (##hole##)
Sketch conj17_term_sketch2 : @eq nat (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7)
  (##hole##)
Sketch conj17_term_sketch3 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj19_sketch0 : @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (##hole##) lf7)
Sketch conj19_sketch1 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf9) lf7)
Sketch conj19_sketch2 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf7)
Sketch conj19_sketch3 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj19_sketch4 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7)
Sketch conj19_term_sketch0 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
  (##hole##)
Sketch conj19_term_sketch1 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj19_term_sketch2 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) lf9) (##hole##)
Sketch conj19_term_sketch3 : @eq nat
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7)
  (##hole##)
Sketch conj19_term_sketch4 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj25_sketch0 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj25_sketch1 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7)
Sketch conj25_sketch2 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) lf7)
Sketch conj25_sketch3 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (Nat.add (##hole##) lf7)
Sketch conj25_sketch4 : @eq nat (PeanoNat.Nat.add lf4 (##hole##))
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (##hole##)) (##hole##))
     lf7)
Sketch conj25_term_sketch0 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7) (##hole##)
Sketch conj25_term_sketch1 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj25_term_sketch2 : @eq nat (PeanoNat.Nat.add lf8 (BV_to_nat l)) (##hole##)
Sketch conj25_term_sketch3 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
  (##hole##)
Sketch conj25_term_sketch4 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj27_sketch0 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj27_sketch1 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7)
Sketch conj27_sketch2 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (Nat.add (##hole##) lf7)
Sketch conj27_sketch3 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
        (BV_to_nat l)) lf7)
Sketch conj27_sketch4 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) lf7)
Sketch conj27_sketch5 : @eq nat (PeanoNat.Nat.add lf4 (##hole##))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (##hole##))
        (##hole##)) lf7)
Sketch conj27_term_sketch0 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7) (##hole##)
Sketch conj27_term_sketch1 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj27_term_sketch2 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
     (BV_to_nat l)) (##hole##)
Sketch conj27_term_sketch3 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj27_term_sketch4 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##)
Sketch conj27_term_sketch5 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj33_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (##hole##)
Sketch conj33_sketch1 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj33_sketch2 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj33_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (Nat.add (##hole##) lf7)
Sketch conj33_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7) (##hole##)
Sketch conj33_term_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (##hole##)
Sketch conj33_term_sketch2 : @eq nat (Nat.add lf6 lf7) (##hole##)
Sketch conj33_term_sketch3 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj34_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9) (##hole##)
Sketch conj34_sketch1 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj34_sketch2 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj34_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)
  (Nat.add (##hole##) lf7)
Sketch conj34_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add (##hole##) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj34_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7) (##hole##)
Sketch conj34_term_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9) (##hole##)
Sketch conj34_term_sketch2 : @eq nat (Nat.add (Nat.add lf8 lf9) lf7) (##hole##)
Sketch conj34_term_sketch3 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj34_term_sketch4 : @eq nat (Nat.add lf8 lf9) (##hole##)
Sketch conj36_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (##hole##)
Sketch conj36_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add (##hole##) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj36_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (##hole##) lf9) lf7) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj36_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (Nat.add (##hole##) lf7)
Sketch conj36_sketch4 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj36_sketch5 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7)
Sketch conj36_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7) (##hole##)
Sketch conj36_term_sketch1 : @eq nat (Nat.add (bool_to_nat a) lf9) (##hole##)
Sketch conj36_term_sketch2 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj36_term_sketch3 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj36_term_sketch4 : @eq nat (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) (##hole##)
Sketch conj36_term_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)
  (##hole##)
Sketch conj41_sketch0 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj41_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (##hole##) lf7)
Sketch conj41_sketch2 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj41_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l)) (##hole##)
Sketch conj41_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) lf7)
Sketch conj41_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l)) (##hole##)
Sketch conj41_term_sketch1 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj41_term_sketch2 : @eq nat (Nat.add lf6 lf7) (##hole##)
Sketch conj41_term_sketch3 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7) (##hole##)
Sketch conj41_term_sketch4 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj42_sketch0 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj42_sketch1 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (Nat.add (##hole##) lf7)
Sketch conj42_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add (##hole##) lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj42_sketch3 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (##hole##)
Sketch conj42_sketch4 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj42_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (##hole##)) lf7) (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) lf7)
Sketch conj42_term_sketch0 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))
  (##hole##)
Sketch conj42_term_sketch1 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj42_term_sketch2 : @eq nat (Nat.add lf8 (BV_to_nat l)) (##hole##)
Sketch conj42_term_sketch3 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7) (##hole##)
Sketch conj42_term_sketch4 : @eq nat (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (##hole##)
Sketch conj42_term_sketch5 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj44_sketch0 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj44_sketch1 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (Nat.add (##hole##) lf7)
Sketch conj44_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add (##hole##) lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj44_sketch3 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (##hole##)
Sketch conj44_sketch4 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (##hole##) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj44_sketch5 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7)
Sketch conj44_sketch6 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (##hole##)) lf7)
     (##hole##)) (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) lf7)
Sketch conj44_term_sketch0 : @eq nat (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7) (##hole##)
Sketch conj44_term_sketch1 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj44_term_sketch2 : @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##)
Sketch conj44_term_sketch3 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7) (##hole##)
Sketch conj44_term_sketch4 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj44_term_sketch5 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)
     (BV_to_nat l)) (##hole##)
Sketch conj44_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj49_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf7)
Sketch conj49_sketch1 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7)
Sketch conj49_sketch2 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7)
Sketch conj49_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (Nat.add (##hole##) lf7)
Sketch conj49_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (##hole##)
Sketch conj49_term_sketch0 : @eq nat (PeanoNat.Nat.add lf8 lf9) (##hole##)
Sketch conj49_term_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (##hole##)
Sketch conj49_term_sketch2 : @eq nat (Nat.add lf6 lf7) (##hole##)
Sketch conj49_term_sketch3 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) (##hole##)
Sketch conj49_term_sketch4 : @eq nat (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7)
  (##hole##)
Sketch conj51_sketch0 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7)
Sketch conj51_sketch1 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7)
Sketch conj51_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (Nat.add (##hole##) lf7)
Sketch conj51_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf9) lf7)
Sketch conj51_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf7)
Sketch conj51_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (##hole##)
Sketch conj51_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9) (##hole##)
Sketch conj51_term_sketch1 : @eq nat (Nat.add lf6 lf7) (##hole##)
Sketch conj51_term_sketch2 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
  (##hole##)
Sketch conj51_term_sketch3 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj51_term_sketch4 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) lf9) (##hole##)
Sketch conj51_term_sketch5 : @eq nat
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7)
  (##hole##)
Sketch conj57_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l)) (##hole##)
Sketch conj57_sketch1 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7)
Sketch conj57_sketch2 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7)
Sketch conj57_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) lf7)
Sketch conj57_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (##hole##) lf7)
Sketch conj57_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (##hole##))
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (##hole##)) (##hole##))
     lf7)
Sketch conj57_term_sketch0 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     lf7) (##hole##)
Sketch conj57_term_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l)) (##hole##)
Sketch conj57_term_sketch2 : @eq nat (Nat.add lf6 lf7) (##hole##)
Sketch conj57_term_sketch3 : @eq nat (PeanoNat.Nat.add lf8 (BV_to_nat l)) (##hole##)
Sketch conj57_term_sketch4 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
  (##hole##)
Sketch conj57_term_sketch5 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj59_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l)) (##hole##)
Sketch conj59_sketch1 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7)
Sketch conj59_sketch2 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7)
Sketch conj59_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (##hole##) lf7)
Sketch conj59_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
        (BV_to_nat l)) lf7)
Sketch conj59_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) lf7)
Sketch conj59_sketch6 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (##hole##))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (##hole##))
        (##hole##)) lf7)
Sketch conj59_term_sketch0 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) lf7) (##hole##)
Sketch conj59_term_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l)) (##hole##)
Sketch conj59_term_sketch2 : @eq nat (Nat.add lf6 lf7) (##hole##)
Sketch conj59_term_sketch3 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
     (BV_to_nat l)) (##hole##)
Sketch conj59_term_sketch4 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj59_term_sketch5 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##)
Sketch conj59_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj129_sketch0 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj129_sketch1 : @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj129_sketch2 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj129_sketch3 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (##hole##))
Sketch conj129_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)) (##hole##)
Sketch conj129_term_sketch1 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj129_term_sketch2 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj129_term_sketch3 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj137_sketch0 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj137_sketch1 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj137_sketch2 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj137_sketch3 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##))
Sketch conj137_sketch4 : @eq nat (PeanoNat.Nat.add lf4 (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) (bool_to_nat cin))
Sketch conj137_term_sketch0 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj137_term_sketch1 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
  (##hole##)
Sketch conj137_term_sketch2 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj137_term_sketch3 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj137_term_sketch4 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj145_sketch0 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) (bool_to_nat cin))
Sketch conj145_sketch1 : @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj145_sketch2 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin))
Sketch conj145_sketch3 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) (##hole##))
Sketch conj145_sketch4 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj145_term_sketch0 : @eq nat (PeanoNat.Nat.add lf8 lf9) (##hole##)
Sketch conj145_term_sketch1 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) (##hole##)
Sketch conj145_term_sketch2 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj145_term_sketch3 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj145_term_sketch4 : @eq nat
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)) (##hole##)
Sketch conj147_sketch0 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj147_sketch1 : @eq nat (PeanoNat.Nat.add lf4 lf9) (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj147_sketch2 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf9)
     (bool_to_nat cin))
Sketch conj147_sketch3 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) (bool_to_nat cin))
Sketch conj147_sketch4 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin))
Sketch conj147_sketch5 : @eq nat (PeanoNat.Nat.add lf4 lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (##hole##))
Sketch conj147_term_sketch0 : @eq nat
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)) (##hole##)
Sketch conj147_term_sketch1 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
  (##hole##)
Sketch conj147_term_sketch2 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj147_term_sketch3 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) lf9) (##hole##)
Sketch conj147_term_sketch4 : @eq nat (PeanoNat.Nat.add lf4 lf9) (##hole##)
Sketch conj147_term_sketch5 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj153_sketch0 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin))
Sketch conj153_sketch1 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj153_sketch2 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) (bool_to_nat cin))
Sketch conj153_sketch3 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj153_sketch4 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (##hole##))
Sketch conj153_sketch5 : @eq nat (PeanoNat.Nat.add lf4 (##hole##))
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (##hole##)) (##hole##))
     (bool_to_nat cin))
Sketch conj153_term_sketch0 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj153_term_sketch1 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)) (##hole##)
Sketch conj153_term_sketch2 : @eq nat (PeanoNat.Nat.add lf8 (BV_to_nat l)) (##hole##)
Sketch conj153_term_sketch3 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
  (##hole##)
Sketch conj153_term_sketch4 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj153_term_sketch5 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj155_sketch0 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin))
Sketch conj155_sketch1 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj155_sketch2 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj155_sketch3 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin))
Sketch conj155_sketch4 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) (bool_to_nat cin))
Sketch conj155_sketch5 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (##hole##))
Sketch conj155_sketch6 : @eq nat (PeanoNat.Nat.add lf4 (##hole##))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (##hole##))
        (##hole##)) (bool_to_nat cin))
Sketch conj155_term_sketch0 : @eq nat (PeanoNat.Nat.add lf4 (BV_to_nat l)) (##hole##)
Sketch conj155_term_sketch1 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
     (BV_to_nat l)) (##hole##)
Sketch conj155_term_sketch2 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)) (##hole##)
Sketch conj155_term_sketch3 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj155_term_sketch4 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##)
Sketch conj155_term_sketch5 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj155_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj161_sketch0 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj161_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9) (##hole##)
Sketch conj161_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj161_sketch3 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj161_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (##hole##)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (##hole##))
Sketch conj161_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9) (##hole##)
Sketch conj161_term_sketch1 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)) (##hole##)
Sketch conj161_term_sketch2 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj161_term_sketch3 : @eq nat (Nat.add lf6 (bool_to_nat cin)) (##hole##)
Sketch conj161_term_sketch4 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj162_sketch0 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj162_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (##hole##)
Sketch conj162_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj162_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add (##hole##) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj162_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (##hole##)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (##hole##))
Sketch conj162_sketch5 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj162_term_sketch0 : @eq nat (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) (##hole##)
Sketch conj162_term_sketch1 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)) (##hole##)
Sketch conj162_term_sketch2 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj162_term_sketch3 : @eq nat (Nat.add lf8 lf9) (##hole##)
Sketch conj162_term_sketch4 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj162_term_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)
  (##hole##)
Sketch conj164_sketch0 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj164_sketch1 : @eq nat (##hole##) (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj164_sketch2 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (##hole##)
Sketch conj164_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add (##hole##) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj164_sketch4 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (##hole##) lf9) (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin))
Sketch conj164_sketch5 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj164_sketch6 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (##hole##)) lf9)
  (Nat.add (PeanoNat.Nat.add lf5 lf9) (##hole##))
Sketch conj164_term_sketch0 : @eq nat (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin)) (##hole##)
Sketch conj164_term_sketch1 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))
     lf9) (##hole##)
Sketch conj164_term_sketch2 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)) (##hole##)
Sketch conj164_term_sketch3 : @eq nat (Nat.add (bool_to_nat a) lf9) (##hole##)
Sketch conj164_term_sketch4 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj164_term_sketch5 : @eq nat (PeanoNat.Nat.add lf5 lf9) (##hole##)
Sketch conj164_term_sketch6 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj169_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (##hole##)
Sketch conj169_sketch1 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj169_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj169_sketch3 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj169_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (##hole##)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##))
Sketch conj169_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) (bool_to_nat cin))
Sketch conj169_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
  (##hole##)
Sketch conj169_term_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (##hole##)
Sketch conj169_term_sketch2 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj169_term_sketch3 : @eq nat (Nat.add lf6 (bool_to_nat cin)) (##hole##)
Sketch conj169_term_sketch4 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj169_term_sketch5 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj170_sketch0 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj170_sketch1 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l)) (##hole##)
Sketch conj170_sketch2 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj170_sketch3 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l)) (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj170_sketch4 : @eq nat
  (PeanoNat.Nat.add (Nat.add (##hole##) (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj170_sketch5 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (##hole##))
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##))
Sketch conj170_sketch6 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (##hole##)) (bool_to_nat cin))
     (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) (bool_to_nat cin))
Sketch conj170_term_sketch0 : @eq nat (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin)) (##hole##)
Sketch conj170_term_sketch1 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
  (##hole##)
Sketch conj170_term_sketch2 : @eq nat
  (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l)) (##hole##)
Sketch conj170_term_sketch3 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj170_term_sketch4 : @eq nat (Nat.add lf8 (BV_to_nat l)) (##hole##)
Sketch conj170_term_sketch5 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj170_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj172_sketch0 : @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l)) (##hole##)
Sketch conj172_sketch1 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj172_sketch2 : @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l)) (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj172_sketch3 : @eq nat
  (PeanoNat.Nat.add (Nat.add (##hole##) (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj172_sketch4 : @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (##hole##) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj172_sketch5 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
Sketch conj172_sketch6 : @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##))
     (BV_to_nat l)) (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##))
Sketch conj172_sketch7 : @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (##hole##)) (bool_to_nat cin))
     (##hole##))
  (Nat.add (PeanoNat.Nat.add lf5 (##hole##)) (bool_to_nat cin))
Sketch conj172_term_sketch0 : @eq nat (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin))
  (##hole##)
Sketch conj172_term_sketch1 : @eq nat (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
  (##hole##)
Sketch conj172_term_sketch2 : @eq nat (PeanoNat.Nat.add lf5 (BV_to_nat l)) (##hole##)
Sketch conj172_term_sketch3 : @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##)
Sketch conj172_term_sketch4 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj172_term_sketch5 : @eq nat
  (PeanoNat.Nat.add
     (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))
     (BV_to_nat l)) (##hole##)
Sketch conj172_term_sketch6 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj172_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj177_sketch0 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin))
Sketch conj177_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) (bool_to_nat cin))
Sketch conj177_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj177_sketch3 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin))
Sketch conj177_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (##hole##)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) (##hole##))
Sketch conj177_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9) (##hole##)
Sketch conj177_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9) (##hole##)
Sketch conj177_term_sketch1 : @eq nat (PeanoNat.Nat.add lf8 lf9) (##hole##)
Sketch conj177_term_sketch2 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) (##hole##)
Sketch conj177_term_sketch3 : @eq nat (Nat.add lf6 (bool_to_nat cin)) (##hole##)
Sketch conj177_term_sketch4 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj177_term_sketch5 : @eq nat
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)
     (bool_to_nat cin)) (##hole##)
Sketch conj179_sketch0 : @eq nat (##hole##)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin))
Sketch conj179_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9) (##hole##)
Sketch conj179_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj179_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) lf9) lf9)
     (bool_to_nat cin))
Sketch conj179_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)
  (Nat.add (PeanoNat.Nat.add (##hole##) lf9) (bool_to_nat cin))
Sketch conj179_sketch5 : @eq nat (PeanoNat.Nat.add (##hole##) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin))
Sketch conj179_sketch6 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (##hole##)) lf9)
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (##hole##))
Sketch conj179_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9) (##hole##)
Sketch conj179_term_sketch1 : @eq nat
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
     (bool_to_nat cin)) (##hole##)
Sketch conj179_term_sketch2 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)
  (##hole##)
Sketch conj179_term_sketch3 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj179_term_sketch4 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) lf9) (##hole##)
Sketch conj179_term_sketch5 : @eq nat (Nat.add lf6 (bool_to_nat cin)) (##hole##)
Sketch conj179_term_sketch6 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj185_sketch0 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin))
Sketch conj185_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (##hole##)
Sketch conj185_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) (bool_to_nat cin))
Sketch conj185_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj185_sketch4 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin))
Sketch conj185_sketch5 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (##hole##)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (##hole##))
Sketch conj185_sketch6 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (##hole##))
  (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (##hole##)) (##hole##))
     (bool_to_nat cin))
Sketch conj185_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (##hole##)
Sketch conj185_term_sketch1 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
     (bool_to_nat cin)) (##hole##)
Sketch conj185_term_sketch2 : @eq nat (PeanoNat.Nat.add lf8 (BV_to_nat l)) (##hole##)
Sketch conj185_term_sketch3 : @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))
  (##hole##)
Sketch conj185_term_sketch4 : @eq nat (Nat.add lf6 (bool_to_nat cin)) (##hole##)
Sketch conj185_term_sketch5 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj185_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj187_sketch0 : @eq nat (##hole##)
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin))
Sketch conj187_sketch1 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (##hole##) (bool_to_nat cin))
Sketch conj187_sketch2 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (##hole##)
Sketch conj187_sketch3 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin))
Sketch conj187_sketch4 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (Nat.add (PeanoNat.Nat.add (##hole##) (BV_to_nat l)) (bool_to_nat cin))
Sketch conj187_sketch5 : @eq nat (PeanoNat.Nat.add (##hole##) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin))
Sketch conj187_sketch6 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (##hole##)) (BV_to_nat l))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (##hole##))
Sketch conj187_sketch7 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (##hole##))
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (##hole##))
        (##hole##)) (bool_to_nat cin))
Sketch conj187_term_sketch0 : @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))
  (##hole##)
Sketch conj187_term_sketch1 : @eq nat
  (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
     (BV_to_nat l)) (##hole##)
Sketch conj187_term_sketch2 : @eq nat
  (Nat.add
     (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))
        (BV_to_nat l)) (bool_to_nat cin)) (##hole##)
Sketch conj187_term_sketch3 : @eq nat (bool_to_nat a) (##hole##)
Sketch conj187_term_sketch4 : @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l)) (##hole##)
Sketch conj187_term_sketch5 : @eq nat (Nat.add lf6 (bool_to_nat cin)) (##hole##)
Sketch conj187_term_sketch6 : @eq nat (bool_to_nat cin) (##hole##)
Sketch conj187_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 3132 seconds
Problems per Sketch:
Sketch conj44_sketch2 --> Problem  synth_45
Sketch conj9_sketch2 --> Problem  synth_7
Sketch conj129_sketch3 --> Problem  synth_60
Sketch conj57_sketch5 --> Problem  synth_55
Sketch conj44_term_sketch6 --> Problem  synth_10
Sketch conj129_sketch1 --> Problem  synth_58
Sketch conj170_sketch1 --> Problem  synth_72
Sketch conj25_sketch1 --> Problem  synth_20
Sketch conj161_term_sketch2 --> Problem  synth_4
Sketch conj137_sketch4 --> Problem  synth_65
Sketch conj44_sketch5 --> Problem  synth_5
Sketch conj187_term_sketch2 --> Problem  synth_76
Sketch conj147_sketch1 --> Problem  synth_58
Sketch conj59_term_sketch1 --> Problem  synth_42
Sketch conj179_term_sketch1 --> Problem  synth_70
Sketch conj170_term_sketch3 --> Problem  synth_9
Sketch conj17_term_sketch0 --> Problem  synth_13
Sketch conj187_sketch7 --> Problem  synth_117
Sketch conj42_term_sketch3 --> Problem  synth_5
Sketch conj187_term_sketch7 --> Problem  synth_10
Sketch conj170_sketch6 --> Problem  synth_101
Sketch conj153_term_sketch1 --> Problem  synth_72
Sketch conj162_sketch5 --> Problem  synth_59
Sketch conj155_sketch2 --> Problem  synth_7
Sketch conj147_term_sketch4 --> Problem  synth_1
Sketch conj179_term_sketch5 --> Problem  synth_84
Sketch conj41_sketch4 --> Problem  synth_43
Sketch conj162_sketch4 --> Problem  synth_87
Sketch conj59_sketch3 --> Problem  synth_40
Sketch conj57_term_sketch5 --> Problem  synth_10
Sketch conj1_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch3 --> Problem  synth_18
Sketch conj153_sketch5 --> Problem  synth_75
Sketch conj147_sketch0 --> Problem  synth_1
Sketch conj19_term_sketch1 --> Problem  synth_18
Sketch conj57_term_sketch0 --> Problem  synth_20
Sketch conj49_term_sketch3 --> Problem  synth_14
Sketch conj34_term_sketch4 --> Problem  synth_13
Sketch conj170_term_sketch0 --> Problem  synth_102
Sketch conj145_sketch1 --> Problem  synth_58
Sketch conj42_term_sketch1 --> Problem  synth_9
Sketch conj177_term_sketch5 --> Problem  synth_67
Sketch conj164_term_sketch3 --> Problem  synth_19
Sketch conj164_sketch1 --> Problem  synth_59
Sketch conj187_sketch1 --> Problem  synth_94
Sketch conj33_term_sketch1 --> Problem  synth_30
Sketch conj51_sketch0 --> Problem  synth_16
Sketch conj169_sketch5 --> Problem  synth_97
Sketch conj137_term_sketch4 --> Problem  synth_10
Sketch conj185_sketch5 --> Problem  synth_113
Sketch conj162_sketch0 --> Problem  synth_82
Sketch conj153_sketch3 --> Problem  synth_63
Sketch conj44_sketch6 --> Problem  synth_50
Sketch conj49_sketch4 --> Problem  synth_30
Sketch conj33_sketch2 --> Problem  synth_31
Sketch conj185_sketch2 --> Problem  synth_112
Sketch conj49_sketch0 --> Problem  synth_52
Sketch conj170_sketch3 --> Problem  synth_98
Sketch conj164_term_sketch4 --> Problem  synth_18
Sketch conj44_term_sketch5 --> Problem  synth_25
Sketch conj164_sketch2 --> Problem  synth_70
Sketch conj44_sketch1 --> Problem  synth_48
Sketch conj153_term_sketch4 --> Problem  synth_61
Sketch conj49_term_sketch2 --> Problem  synth_33
Sketch conj51_term_sketch5 --> Problem  synth_16
Sketch conj59_sketch5 --> Problem  synth_54
Sketch conj9_sketch1 --> Problem  synth_6
Sketch conj137_sketch0 --> Problem  synth_62
Sketch conj42_sketch2 --> Problem  synth_45
Sketch conj161_sketch1 --> Problem  synth_80
Sketch conj19_term_sketch2 --> Problem  synth_19
Sketch conj19_sketch3 --> Problem  synth_1
Sketch conj27_sketch0 --> Problem  synth_7
Sketch conj172_term_sketch3 --> Problem  synth_29
Sketch conj179_term_sketch2 --> Problem  synth_17
Sketch conj155_term_sketch5 --> Problem  synth_61
Sketch conj41_sketch1 --> Problem  synth_40
Sketch conj155_sketch6 --> Problem  synth_79
Sketch conj187_sketch5 --> Problem  synth_107
Sketch conj145_term_sketch1 --> Problem  synth_14
Sketch conj161_sketch4 --> Problem  synth_83
Sketch conj41_sketch0 --> Problem  synth_5
Sketch conj155_sketch0 --> Problem  synth_76
Sketch conj44_term_sketch0 --> Problem  synth_51
Sketch conj51_sketch5 --> Problem  synth_30
Sketch conj170_sketch2 --> Problem  synth_62
Sketch conj59_term_sketch4 --> Problem  synth_18
Sketch conj145_term_sketch2 --> Problem  synth_1
Sketch conj51_sketch2 --> Problem  synth_32
Sketch conj51_term_sketch4 --> Problem  synth_19
Sketch conj17_term_sketch2 --> Problem  synth_12
Sketch conj129_sketch0 --> Problem  synth_1
Sketch conj169_term_sketch1 --> Problem  synth_93
Sketch conj59_term_sketch6 --> Problem  synth_10
Sketch conj172_sketch5 --> Problem  synth_62
Sketch conj153_sketch4 --> Problem  synth_74
Sketch conj33_sketch0 --> Problem  synth_30
Sketch conj177_sketch4 --> Problem  synth_109
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj185_sketch4 --> Problem  synth_102
Sketch conj17_sketch1 --> Problem  synth_2
Sketch conj172_sketch1 --> Problem  synth_95
Sketch conj162_term_sketch1 --> Problem  synth_59
Sketch conj27_term_sketch3 --> Problem  synth_18
Sketch conj19_sketch4 --> Problem  synth_16
Sketch conj185_sketch0 --> Problem  synth_72
Sketch conj155_sketch4 --> Problem  synth_73
Sketch conj170_term_sketch6 --> Problem  synth_10
Sketch conj147_term_sketch2 --> Problem  synth_18
Sketch conj33_term_sketch2 --> Problem  synth_33
Sketch conj177_term_sketch2 --> Problem  synth_14
Sketch conj177_sketch0 --> Problem  synth_67
Sketch conj49_sketch2 --> Problem  synth_36
Sketch conj155_sketch3 --> Problem  synth_77
Sketch conj177_term_sketch3 --> Problem  synth_84
Sketch conj172_sketch4 --> Problem  synth_104
Sketch conj27_term_sketch2 --> Problem  synth_28
Sketch conj145_sketch4 --> Problem  synth_1
Sketch conj187_term_sketch0 --> Problem  synth_93
Sketch conj187_term_sketch5 --> Problem  synth_84
Sketch conj36_sketch5 --> Problem  synth_3
Sketch conj172_term_sketch0 --> Problem  synth_62
Sketch conj1_term_sketch2 --> Problem  synth_1
Sketch conj147_term_sketch5 --> Problem  synth_61
Sketch conj27_term_sketch5 --> Problem  synth_10
Sketch conj33_term_sketch0 --> Problem  synth_3
Sketch conj164_term_sketch6 --> Problem  synth_61
Sketch conj185_sketch3 --> Problem  synth_94
Sketch conj147_sketch5 --> Problem  synth_71
Sketch conj51_term_sketch2 --> Problem  synth_17
Sketch conj27_sketch2 --> Problem  synth_6
Sketch conj41_term_sketch0 --> Problem  synth_42
Sketch conj9_term_sketch2 --> Problem  synth_5
Sketch conj153_term_sketch3 --> Problem  synth_24
Sketch conj19_term_sketch0 --> Problem  synth_17
Sketch conj34_sketch3 --> Problem  synth_34
Sketch conj36_sketch4 --> Problem  synth_31
Sketch conj153_sketch0 --> Problem  synth_72
Sketch conj1_sketch2 --> Problem  synth_3
Sketch conj36_term_sketch4 --> Problem  synth_39
Sketch conj57_sketch2 --> Problem  synth_47
Sketch conj187_sketch3 --> Problem  synth_115
Sketch conj164_term_sketch0 --> Problem  synth_92
Sketch conj34_sketch0 --> Problem  synth_12
Sketch conj17_sketch0 --> Problem  synth_11
Sketch conj179_sketch2 --> Problem  synth_81
Sketch conj161_term_sketch0 --> Problem  synth_80
Sketch conj177_sketch1 --> Problem  synth_108
Sketch conj170_term_sketch2 --> Problem  synth_72
Sketch conj147_sketch3 --> Problem  synth_66
Sketch conj172_term_sketch2 --> Problem  synth_9
Sketch conj137_term_sketch2 --> Problem  synth_9
Sketch conj36_term_sketch2 --> Problem  synth_18
Sketch conj153_term_sketch5 --> Problem  synth_10
Sketch conj42_term_sketch4 --> Problem  synth_47
Sketch conj164_sketch5 --> Problem  synth_90
Sketch conj59_term_sketch3 --> Problem  synth_28
Sketch conj51_sketch1 --> Problem  synth_39
Sketch conj179_sketch6 --> Problem  synth_111
Sketch conj145_term_sketch0 --> Problem  synth_13
Sketch conj33_sketch3 --> Problem  synth_32
Sketch conj57_sketch1 --> Problem  synth_20
Sketch conj172_sketch0 --> Problem  synth_76
Sketch conj44_term_sketch1 --> Problem  synth_9
Sketch conj161_term_sketch3 --> Problem  synth_84
Sketch conj161_term_sketch1 --> Problem  synth_59
Sketch conj153_term_sketch2 --> Problem  synth_23
Sketch conj164_sketch4 --> Problem  synth_89
Sketch conj169_sketch0 --> Problem  synth_93
Sketch conj155_term_sketch1 --> Problem  synth_28
Sketch conj170_sketch0 --> Problem  synth_95
Sketch conj42_term_sketch5 --> Problem  synth_10
Sketch conj161_sketch2 --> Problem  synth_81
Sketch conj185_term_sketch2 --> Problem  synth_23
Sketch conj57_sketch0 --> Problem  synth_42
Sketch conj147_term_sketch3 --> Problem  synth_19
Sketch conj25_sketch4 --> Problem  synth_22
Sketch conj41_term_sketch1 --> Problem  synth_9
Sketch conj162_sketch2 --> Problem  synth_85
Sketch conj162_term_sketch2 --> Problem  synth_4
Sketch conj25_term_sketch2 --> Problem  synth_23
Sketch conj179_sketch5 --> Problem  synth_92
Sketch conj169_sketch3 --> Problem  synth_95
Sketch conj49_term_sketch0 --> Problem  synth_13
Sketch conj164_term_sketch2 --> Problem  synth_59
Sketch conj185_sketch6 --> Problem  synth_114
Sketch conj164_term_sketch5 --> Problem  synth_4
Sketch conj42_sketch0 --> Problem  synth_5
Sketch conj59_term_sketch2 --> Problem  synth_33
Sketch conj25_sketch3 --> Problem  synth_6
Sketch conj25_term_sketch3 --> Problem  synth_24
Sketch conj59_sketch1 --> Problem  synth_25
Sketch conj27_term_sketch4 --> Problem  synth_29
Sketch conj187_sketch4 --> Problem  synth_112
Sketch conj172_term_sketch1 --> Problem  synth_107
Sketch conj129_term_sketch2 --> Problem  synth_1
Sketch conj42_term_sketch0 --> Problem  synth_20
Sketch conj34_sketch4 --> Problem  synth_35
Sketch conj172_term_sketch7 --> Problem  synth_10
Sketch conj25_term_sketch4 --> Problem  synth_10
Sketch conj42_sketch1 --> Problem  synth_44
Sketch conj59_sketch4 --> Problem  synth_56
Sketch conj36_sketch0 --> Problem  synth_16
Sketch conj27_sketch4 --> Problem  synth_21
Sketch conj155_term_sketch3 --> Problem  synth_18
Sketch conj36_term_sketch5 --> Problem  synth_16
Sketch conj9_term_sketch0 --> Problem  synth_7
Sketch conj169_sketch2 --> Problem  synth_94
Sketch conj153_term_sketch0 --> Problem  synth_7
Sketch conj147_sketch4 --> Problem  synth_70
Sketch conj42_sketch4 --> Problem  synth_41
Sketch conj34_term_sketch3 --> Problem  synth_4
Sketch conj187_sketch0 --> Problem  synth_76
Sketch conj172_term_sketch5 --> Problem  synth_76
Sketch conj137_sketch3 --> Problem  synth_64
Sketch conj59_sketch6 --> Problem  synth_57
Sketch conj49_term_sketch4 --> Problem  synth_12
Sketch conj1_term_sketch0 --> Problem  synth_3
Sketch conj145_sketch0 --> Problem  synth_66
Sketch conj27_sketch3 --> Problem  synth_26
Sketch conj187_term_sketch6 --> Problem  synth_61
Sketch conj34_sketch2 --> Problem  synth_31
Sketch conj153_sketch1 --> Problem  synth_7
Sketch conj27_sketch1 --> Problem  synth_25
Sketch conj161_sketch3 --> Problem  synth_82
Sketch conj19_sketch2 --> Problem  synth_11
Sketch conj187_term_sketch4 --> Problem  synth_29
Sketch conj145_sketch3 --> Problem  synth_68
Sketch conj172_sketch7 --> Problem  synth_106
Sketch conj177_term_sketch4 --> Problem  synth_61
Sketch conj42_term_sketch2 --> Problem  synth_23
Sketch conj129_term_sketch3 --> Problem  synth_61
Sketch conj42_sketch3 --> Problem  synth_20
Sketch conj51_term_sketch1 --> Problem  synth_33
Sketch conj155_sketch5 --> Problem  synth_78
Sketch conj44_sketch0 --> Problem  synth_41
Sketch conj27_term_sketch1 --> Problem  synth_7
Sketch conj162_term_sketch5 --> Problem  synth_67
Sketch conj155_term_sketch0 --> Problem  synth_7
Sketch conj17_sketch2 --> Problem  synth_1
Sketch conj51_sketch3 --> Problem  synth_53
Sketch conj187_term_sketch1 --> Problem  synth_28
Sketch conj147_sketch2 --> Problem  synth_69
Sketch conj185_term_sketch3 --> Problem  synth_24
Sketch conj36_term_sketch0 --> Problem  synth_3
Sketch conj57_sketch4 --> Problem  synth_40
Sketch conj170_term_sketch4 --> Problem  synth_23
Sketch conj179_sketch3 --> Problem  synth_110
Sketch conj147_term_sketch1 --> Problem  synth_17
Sketch conj49_term_sketch1 --> Problem  synth_30
Sketch conj9_sketch0 --> Problem  synth_5
Sketch conj169_term_sketch2 --> Problem  synth_9
Sketch conj41_sketch2 --> Problem  synth_41
Sketch conj27_sketch5 --> Problem  synth_27
Sketch conj169_sketch4 --> Problem  synth_96
Sketch conj177_sketch2 --> Problem  synth_81
Sketch conj19_term_sketch3 --> Problem  synth_16
Sketch conj177_term_sketch1 --> Problem  synth_13
Sketch conj145_term_sketch4 --> Problem  synth_67
Sketch conj179_term_sketch3 --> Problem  synth_18
Sketch conj177_sketch5 --> Problem  synth_80
Sketch conj155_term_sketch2 --> Problem  synth_76
Sketch conj172_term_sketch4 --> Problem  synth_18
Sketch conj51_sketch4 --> Problem  synth_52
Sketch conj33_sketch1 --> Problem  synth_3
Sketch conj25_sketch0 --> Problem  synth_7
Sketch conj34_sketch1 --> Problem  synth_3
Sketch conj153_sketch2 --> Problem  synth_73
Sketch conj137_term_sketch0 --> Problem  synth_7
Sketch conj185_term_sketch0 --> Problem  synth_93
Sketch conj9_term_sketch1 --> Problem  synth_9
Sketch conj145_term_sketch3 --> Problem  synth_61
Sketch conj179_term_sketch0 --> Problem  synth_80
Sketch conj137_term_sketch3 --> Problem  synth_61
Sketch conj27_term_sketch0 --> Problem  synth_25
Sketch conj25_term_sketch0 --> Problem  synth_20
Sketch conj162_sketch3 --> Problem  synth_86
Sketch conj129_term_sketch1 --> Problem  synth_4
Sketch conj187_sketch2 --> Problem  synth_93
Sketch conj179_sketch0 --> Problem  synth_70
Sketch conj170_term_sketch5 --> Problem  synth_61
Sketch conj162_term_sketch3 --> Problem  synth_13
Sketch conj44_term_sketch2 --> Problem  synth_29
Sketch conj177_sketch3 --> Problem  synth_88
Sketch conj187_term_sketch3 --> Problem  synth_18
Sketch conj172_sketch2 --> Problem  synth_103
Sketch conj169_term_sketch3 --> Problem  synth_84
Sketch conj161_term_sketch4 --> Problem  synth_61
Sketch conj57_term_sketch2 --> Problem  synth_33
Sketch conj41_sketch3 --> Problem  synth_42
Sketch conj172_sketch6 --> Problem  synth_105
Sketch conj57_sketch3 --> Problem  synth_54
Sketch conj172_term_sketch6 --> Problem  synth_61
Sketch conj177_term_sketch0 --> Problem  synth_80
Sketch conj185_term_sketch6 --> Problem  synth_10
Sketch conj1_term_sketch1 --> Problem  synth_4
Sketch conj179_sketch4 --> Problem  synth_108
Sketch conj185_term_sketch5 --> Problem  synth_61
Sketch conj147_term_sketch0 --> Problem  synth_70
Sketch conj36_sketch2 --> Problem  synth_37
Sketch conj59_sketch2 --> Problem  synth_51
Sketch conj162_sketch1 --> Problem  synth_67
Sketch conj9_term_sketch3 --> Problem  synth_10
Sketch conj179_term_sketch4 --> Problem  synth_19
Sketch conj41_term_sketch3 --> Problem  synth_5
Sketch conj59_term_sketch5 --> Problem  synth_29
Sketch conj155_term_sketch4 --> Problem  synth_29
Sketch conj25_sketch2 --> Problem  synth_21
Sketch conj17_term_sketch3 --> Problem  synth_1
Sketch conj179_sketch1 --> Problem  synth_80
Sketch conj36_term_sketch3 --> Problem  synth_4
Sketch conj170_term_sketch1 --> Problem  synth_62
Sketch conj34_term_sketch1 --> Problem  synth_12
Sketch conj34_term_sketch0 --> Problem  synth_3
Sketch conj42_sketch5 --> Problem  synth_46
Sketch conj164_sketch6 --> Problem  synth_91
Sketch conj129_term_sketch0 --> Problem  synth_59
Sketch conj9_sketch3 --> Problem  synth_8
Sketch conj44_term_sketch3 --> Problem  synth_5
Sketch conj155_sketch1 --> Problem  synth_63
Sketch conj169_term_sketch4 --> Problem  synth_61
Sketch conj161_sketch0 --> Problem  synth_59
Sketch conj41_term_sketch4 --> Problem  synth_10
Sketch conj164_sketch0 --> Problem  synth_82
Sketch conj51_term_sketch0 --> Problem  synth_30
Sketch conj34_term_sketch2 --> Problem  synth_36
Sketch conj33_term_sketch3 --> Problem  synth_4
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj25_term_sketch1 --> Problem  synth_7
Sketch conj170_sketch4 --> Problem  synth_99
Sketch conj41_term_sketch2 --> Problem  synth_33
Sketch conj170_sketch5 --> Problem  synth_100
Sketch conj162_term_sketch4 --> Problem  synth_61
Sketch conj164_sketch3 --> Problem  synth_86
Sketch conj59_sketch0 --> Problem  synth_42
Sketch conj36_sketch1 --> Problem  synth_35
Sketch conj185_sketch1 --> Problem  synth_93
Sketch conj59_term_sketch0 --> Problem  synth_25
Sketch conj179_term_sketch6 --> Problem  synth_61
Sketch conj169_sketch1 --> Problem  synth_62
Sketch conj164_term_sketch1 --> Problem  synth_70
Sketch conj155_term_sketch6 --> Problem  synth_10
Sketch conj137_sketch1 --> Problem  synth_7
Sketch conj44_term_sketch4 --> Problem  synth_18
Sketch conj19_sketch1 --> Problem  synth_15
Sketch conj36_sketch3 --> Problem  synth_38
Sketch conj145_sketch2 --> Problem  synth_67
Sketch conj57_term_sketch3 --> Problem  synth_23
Sketch conj44_sketch3 --> Problem  synth_25
Sketch conj17_term_sketch1 --> Problem  synth_14
Sketch conj137_term_sketch1 --> Problem  synth_62
Sketch conj57_term_sketch1 --> Problem  synth_42
Sketch conj44_sketch4 --> Problem  synth_49
Sketch conj129_sketch2 --> Problem  synth_59
Sketch conj19_term_sketch4 --> Problem  synth_1
Sketch conj17_sketch3 --> Problem  synth_12
Sketch conj185_term_sketch1 --> Problem  synth_72
Sketch conj49_sketch3 --> Problem  synth_32
Sketch conj172_sketch3 --> Problem  synth_99
Sketch conj169_term_sketch5 --> Problem  synth_10
Sketch conj137_sketch2 --> Problem  synth_63
Sketch conj185_term_sketch4 --> Problem  synth_84
Sketch conj36_term_sketch1 --> Problem  synth_19
Sketch conj57_term_sketch4 --> Problem  synth_24
Sketch conj169_term_sketch0 --> Problem  synth_62
Sketch conj162_term_sketch0 --> Problem  synth_88
Sketch conj187_sketch6 --> Problem  synth_116
Sketch conj49_sketch1 --> Problem  synth_12


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 4768 seconds

Problem: synth_63

Problem: synth_106

Problem: synth_91

Problem: synth_109

Problem: synth_68

Problem: synth_67

Problem: synth_77

Problem: synth_64

Problem: synth_96

Problem: synth_11

Problem: synth_54
 PeanoNat.Nat.add lf6 O
 lf6

Problem: synth_39

Problem: synth_46

Problem: synth_101

Problem: synth_98

Problem: synth_100

Problem: synth_66

Problem: synth_57

Problem: synth_59

Problem: synth_116

Problem: synth_31
 PeanoNat.Nat.add lf5 lf7
 PeanoNat.Nat.add lf7 lf5

Problem: synth_8

Problem: synth_34

Problem: synth_5

Problem: synth_37

Problem: synth_58

Problem: synth_53

Problem: synth_2

Problem: synth_95

Problem: synth_22

Problem: synth_18
 Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)
 Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O
 PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O
 PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O
 Bool_compl.bool_to_nat a

Problem: synth_114

Problem: synth_21

Problem: synth_72

Problem: synth_111

Problem: synth_56

Problem: synth_41
 PeanoNat.Nat.add lf5 lf7
 PeanoNat.Nat.add lf7 lf5

Problem: synth_49

Problem: synth_75

Problem: synth_25

Problem: synth_13
 PeanoNat.Nat.add lf8 lf9
 PeanoNat.Nat.add lf9 lf8

Problem: synth_6

Problem: synth_4
 PeanoNat.Nat.add lf9 lf5
 PeanoNat.Nat.add lf5 lf9

Problem: synth_38

Problem: synth_105

Problem: synth_104

Problem: synth_65

Problem: synth_23

Problem: synth_88

Problem: synth_102

Problem: synth_19

Problem: synth_113

Problem: synth_10
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)

Problem: synth_24

Problem: synth_97

Problem: synth_92

Problem: synth_32
 PeanoNat.Nat.add lf6 lf9
 PeanoNat.Nat.add lf9 lf6

Problem: synth_48
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))
 Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))
 Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))

Problem: synth_51

Problem: synth_112
 PeanoNat.Nat.add lf6 O
 lf6

Problem: synth_35
 PeanoNat.Nat.add lf5 O
 lf5

Problem: synth_115

Problem: synth_28
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))
 Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))
 Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))

Problem: synth_110

Problem: synth_90

Problem: synth_73

Problem: synth_17

Problem: synth_29
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)

Problem: synth_45
 PeanoNat.Nat.add lf5 O
 lf5

Problem: synth_76

Problem: synth_26

Problem: synth_117

Problem: synth_70

Problem: synth_9

Problem: synth_30

Problem: synth_81
 PeanoNat.Nat.add lf6 lf9
 PeanoNat.Nat.add lf9 lf6

Problem: synth_1
 PeanoNat.Nat.add lf9 lf4
 PeanoNat.Nat.add lf4 lf9

Problem: synth_69

Problem: synth_86
 PeanoNat.Nat.add lf5 O
 lf5

Problem: synth_55

Problem: synth_107

Problem: synth_71

Problem: synth_15

Problem: synth_14

Problem: synth_103
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))
 Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))
 Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))

Problem: synth_87

Problem: synth_79

Problem: synth_83

Problem: synth_12

Problem: synth_85

Problem: synth_62

Problem: synth_74

Problem: synth_50

Problem: synth_84

Problem: synth_20

Problem: synth_94

Problem: synth_108
 PeanoNat.Nat.add lf6 O
 lf6

Problem: synth_7

Problem: synth_61
 Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)
 Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)
 Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O
 PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O
 PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O
 Bool_compl.bool_to_nat cin

Problem: synth_27

Problem: synth_42

Problem: synth_16

Problem: synth_93

Problem: synth_40

Problem: synth_80

Problem: synth_33
 PeanoNat.Nat.add lf6 lf7
 PeanoNat.Nat.add lf7 lf6

Problem: synth_89

Problem: synth_47

Problem: synth_3

Problem: synth_52
 PeanoNat.Nat.add lf6 O
 lf6

Problem: synth_44

Problem: synth_60

Problem: synth_36

Problem: synth_82

Problem: synth_78

Problem: synth_99
 PeanoNat.Nat.add lf5 O
 lf5

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 4769 seconds
Lemmas:
Lemma candidate_1: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))         (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_2: forall (l : list bool) (cin : bool) (lf8 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))      (bool_to_nat cin)).
Lemma candidate_3: forall (a : bool) (cin : bool) (lf9 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) (bool_to_nat cin))      lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9)      (bool_to_nat cin)).
Lemma candidate_4: forall (cin : bool) (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9)      (bool_to_nat cin)).
Lemma candidate_5: forall (a : bool) (l : list bool) (lf7 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))         (BV_to_nat l)) lf7).
Lemma candidate_6: forall (l : list bool) (lf7 : nat) (lf8 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add lf8 (BV_to_nat l)) lf7) (BV_to_nat l))   (Nat.add      (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 (BV_to_nat l)) (BV_to_nat l))      lf7).
Lemma candidate_7: forall (a : bool) (lf7 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) lf9) lf7) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) lf9) lf9) lf7).
Lemma candidate_8: forall (lf7 : nat) (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (Nat.add lf8 lf9) lf7) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf8 lf9) lf9) lf7).
Lemma candidate_9: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_10: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_11: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_12: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_13: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_14: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_15: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_16: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_17: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_18: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_19: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_20: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_21: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_22: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_23: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf8 lf9).
Lemma candidate_24: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_25: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_26: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_27: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_28: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_29: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_30: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_31: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_32: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_33: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_34: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_35: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_36: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_37: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_38: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_39: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_40: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_41: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_42: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_43: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))).
Lemma candidate_44: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))).
Lemma candidate_45: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))).
Lemma candidate_46: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_47: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))).
Lemma candidate_48: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_49: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_50: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_51: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_52: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_53: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_54: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_55: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_56: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)).
Lemma candidate_57: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)).
Lemma candidate_58: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_59: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_60: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_61: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_62: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_63: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_64: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf5 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_65: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_66: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf6 lf9) lf7).
Lemma candidate_67: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) lf7).
Lemma candidate_68: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf6 lf7).
Lemma candidate_69: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_70: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_71: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_72: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf5 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_73: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_74: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_75: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_76: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_77: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_78: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 lf9) (PeanoNat.Nat.add lf8 lf9).
Lemma candidate_79: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_80: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_81: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_82: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf5 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_83: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_84: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_85: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_86: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_87: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_88: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_89: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_90: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_91: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_92: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf5 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_93: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_94: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf6 lf7).
Lemma candidate_95: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_96: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_97: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_98: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_99: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_100: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_101: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_102: forall (l : list bool) (lf7 : nat) (lf5 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_103: forall (l : list bool) (lf7 : nat) (lf5 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_104: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf5 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_105: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_106: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_107: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_108: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_109: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_110: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_111: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_112: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf5 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_113: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_114: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))))))      lf7).
Lemma candidate_115: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false))))))      lf7).
Lemma candidate_116: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))))      lf7).
Lemma candidate_117: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))))      lf7).
Lemma candidate_118: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))))      lf7).
Lemma candidate_119: forall (l : list bool) (lf7 : nat) (lf5 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_120: forall (l : list bool) (lf7 : nat) (lf5 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_121: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_122: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_123: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)).
Lemma candidate_124: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)).
Lemma candidate_125: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_126: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_127: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_128: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_129: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_130: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_131: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_132: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_133: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_134: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_135: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_136: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_137: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) lf9) lf7).
Lemma candidate_138: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add (lf6) lf9) lf7).
Lemma candidate_139: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf6 lf9) lf7).
Lemma candidate_140: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) lf7).
Lemma candidate_141: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf8 lf9).
Lemma candidate_142: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_143: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf6 lf7).
Lemma candidate_144: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_145: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf6 lf9) lf7).
Lemma candidate_146: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) lf7).
Lemma candidate_147: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) lf9) lf7).
Lemma candidate_148: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add (lf6) lf9) lf7).
Lemma candidate_149: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf6 lf7).
Lemma candidate_150: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_151: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_152: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_153: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_154: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_155: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_156: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_157: forall (l : list bool) (lf7 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) (BV_to_nat l)) lf7).
Lemma candidate_158: forall (l : list bool) (lf7 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (lf6) (BV_to_nat l)) lf7).
Lemma candidate_159: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf6 lf7).
Lemma candidate_160: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_161: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_162: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_163: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_164: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_165: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_166: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_167: forall (l : list bool) (lf7 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) (BV_to_nat l)) lf7).
Lemma candidate_168: forall (l : list bool) (lf7 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (lf6) (BV_to_nat l)) lf7).
Lemma candidate_169: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf6 lf7).
Lemma candidate_170: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_171: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))).
Lemma candidate_172: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))).
Lemma candidate_173: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))).
Lemma candidate_174: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_175: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))).
Lemma candidate_176: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_177: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_178: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_179: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_180: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_181: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_182: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_183: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_184: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)).
Lemma candidate_185: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)).
Lemma candidate_186: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_187: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_188: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_189: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_190: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_191: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_192: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_193: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_194: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_195: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_196: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_197: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_198: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_199: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_200: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_201: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_202: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_203: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_204: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_205: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_206: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_207: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_208: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_209: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_210: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_211: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_212: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_213: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_214: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_215: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_216: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_217: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_218: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf8 lf9).
Lemma candidate_219: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_220: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_221: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_222: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_223: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_224: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_225: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_226: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_227: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_228: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_229: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_230: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_231: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_232: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_233: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_234: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_235: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_236: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_237: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf4 lf9).
Lemma candidate_238: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_239: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_240: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_241: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_242: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_243: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_244: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_245: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_246: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_247: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_248: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_249: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_250: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_251: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_252: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_253: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_254: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_255: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_256: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))).
Lemma candidate_257: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))).
Lemma candidate_258: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))).
Lemma candidate_259: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_260: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))).
Lemma candidate_261: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_262: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_263: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_264: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_265: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_266: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_267: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_268: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_269: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)).
Lemma candidate_270: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)).
Lemma candidate_271: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_272: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_273: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_274: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_275: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_276: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_277: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_278: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_279: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_280: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_281: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_282: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_283: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf6 lf9) (bool_to_nat cin)).
Lemma candidate_284: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) (bool_to_nat cin)).
Lemma candidate_285: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_286: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_287: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_288: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_289: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_290: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_291: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_292: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_293: forall (cin : bool) (lf5 : nat) (lf9 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma candidate_294: forall (cin : bool) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma candidate_295: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_296: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_297: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 lf9) (PeanoNat.Nat.add lf8 lf9).
Lemma candidate_298: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_299: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_300: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_301: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_302: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_303: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_304: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_305: forall (cin : bool) (lf5 : nat) (lf9 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma candidate_306: forall (cin : bool) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma candidate_307: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_308: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_309: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_310: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_311: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_312: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_313: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_314: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf5 lf9).
Lemma candidate_315: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_316: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_317: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_318: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_319: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_320: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_321: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_322: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_323: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_324: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_325: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_326: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_327: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_328: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_329: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_330: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_331: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_332: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_333: forall (l : list bool) (cin : bool) (lf5 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_334: forall (l : list bool) (cin : bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_335: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_336: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_337: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_338: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_339: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_340: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_341: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_342: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_343: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_344: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_345: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_346: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_347: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))))))      (bool_to_nat cin)).
Lemma candidate_348: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false))))))      (bool_to_nat cin)).
Lemma candidate_349: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))))      (bool_to_nat cin)).
Lemma candidate_350: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))))      (bool_to_nat cin)).
Lemma candidate_351: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))))      (bool_to_nat cin)).
Lemma candidate_352: forall (l : list bool) (cin : bool) (lf5 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_353: forall (l : list bool) (cin : bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (lf5) (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_354: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_355: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_356: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)).
Lemma candidate_357: forall (a : bool) (l : list bool), @eq nat (Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)).
Lemma candidate_358: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_359: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_360: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_361: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_362: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_363: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_364: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_365: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_366: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_367: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_368: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_369: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_370: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_371: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_372: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_373: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_374: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_375: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_376: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) lf9) (bool_to_nat cin)).
Lemma candidate_377: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add (lf6) lf9) (bool_to_nat cin)).
Lemma candidate_378: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf6 lf9) (bool_to_nat cin)).
Lemma candidate_379: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) (bool_to_nat cin)).
Lemma candidate_380: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf8 lf9).
Lemma candidate_381: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_382: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_383: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_384: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_385: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_386: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_387: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_388: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf6 lf9) (bool_to_nat cin)).
Lemma candidate_389: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) (bool_to_nat cin)).
Lemma candidate_390: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) lf9) (bool_to_nat cin)).
Lemma candidate_391: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add (lf6) lf9) (bool_to_nat cin)).
Lemma candidate_392: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_393: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_394: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_395: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_396: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_397: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_398: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_399: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_400: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_401: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_402: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_403: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_404: forall (l : list bool) (cin : bool) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) (BV_to_nat l))      (bool_to_nat cin)).
Lemma candidate_405: forall (l : list bool) (cin : bool) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (lf6) (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_406: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_407: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_408: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_409: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_410: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_411: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_412: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_413: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_414: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_415: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_416: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_417: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_418: forall (l : list bool) (cin : bool) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) (BV_to_nat l))      (bool_to_nat cin)).
Lemma candidate_419: forall (l : list bool) (cin : bool) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (lf6) (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_420: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))).
Lemma candidate_421: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))).
Lemma candidate_422: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))).
Lemma candidate_423: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_424: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))).
Lemma candidate_425: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_426: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_427: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_428: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_429: forall (a : bool), @eq nat (bool_to_nat a) (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O).
Lemma candidate_430: forall (a : bool), @eq nat (bool_to_nat a) (Bool_compl.bool_to_nat a).
Lemma candidate_431: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_432: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_433: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) a)).
Lemma candidate_434: forall (a : bool) (l : list bool), @eq nat (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool a (@nil bool)) false)).
Lemma candidate_435: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_436: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_437: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_438: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_439: forall (cin : bool), @eq nat (bool_to_nat cin) (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O).
Lemma candidate_440: forall (cin : bool), @eq nat (bool_to_nat cin) (Bool_compl.bool_to_nat cin).
Lemma candidate_441: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_442: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_443: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_444: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_445: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_446: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 4940 seconds
Duplicates removed: 364
Filtered by Quickchick: 8
Filtered by script: 28
Remaining: 46

Lemmas: 
Lemma candidate_79: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_69: forall (lf7 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf7) (PeanoNat.Nat.add lf7 lf6).
Lemma candidate_24: forall (lf9 : nat) (lf8 : nat), @eq nat (PeanoNat.Nat.add lf8 lf9) (PeanoNat.Nat.add lf9 lf8).
Lemma candidate_11: forall (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf5 lf9) (PeanoNat.Nat.add lf9 lf5).
Lemma candidate_9: forall (lf4 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add lf4 lf9) (PeanoNat.Nat.add lf9 lf4).
Lemma candidate_29: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a a)).
Lemma candidate_20: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_30: forall (a : bool), @eq nat (bool_to_nat a)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry a true)).
Lemma candidate_198: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin cin)).
Lemma candidate_199: forall (cin : bool), @eq nat (bool_to_nat cin)   (Bool_compl.bool_to_nat (HalfAdder.half_adder_carry cin true)).
Lemma candidate_67: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) lf7).
Lemma candidate_32: forall (a : bool), @eq nat (bool_to_nat a)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat a) O) O).
Lemma candidate_31: forall (a : bool), @eq nat (bool_to_nat a)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) O).
Lemma candidate_201: forall (cin : bool), @eq nat (bool_to_nat cin)   (PeanoNat.Nat.add (PeanoNat.Nat.add (Bool_compl.bool_to_nat cin) O) O).
Lemma candidate_65: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_200: forall (cin : bool), @eq nat (bool_to_nat cin)   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum cin false)) O).
Lemma candidate_18: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_137: forall (lf7 : nat) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) lf9) lf7).
Lemma candidate_74: forall (lf7 : nat) (lf5 : nat) (lf9 : nat), @eq nat (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) lf7) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) lf7).
Lemma candidate_284: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf9 lf6) (bool_to_nat cin)).
Lemma candidate_93: forall (lf7 : nat) (l : list bool) (lf5 : nat), @eq nat (PeanoNat.Nat.add (PeanoNat.Nat.add lf7 lf5) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_17: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_157: forall (l : list bool) (lf7 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) (BV_to_nat l)) lf7).
Lemma candidate_102: forall (l : list bool) (lf7 : nat) (lf5 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) lf7) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) lf7).
Lemma candidate_376: forall (cin : bool) (lf9 : nat) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) lf9) (bool_to_nat cin)).
Lemma candidate_293: forall (cin : bool) (lf5 : nat) (lf9 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) (bool_to_nat cin)) lf9)   (Nat.add (PeanoNat.Nat.add lf5 lf9) (bool_to_nat cin)).
Lemma candidate_404: forall (l : list bool) (cin : bool) (lf6 : nat), @eq nat (PeanoNat.Nat.add (Nat.add lf6 (bool_to_nat cin)) (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add (PeanoNat.Nat.add lf6 O) (BV_to_nat l))      (bool_to_nat cin)).
Lemma candidate_333: forall (l : list bool) (cin : bool) (lf5 : nat), @eq nat   (PeanoNat.Nat.add (Nat.add (PeanoNat.Nat.add lf5 O) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add (PeanoNat.Nat.add lf5 (BV_to_nat l)) (bool_to_nat cin)).
Lemma candidate_15: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_45: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)))).
Lemma candidate_19: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_116: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))))      lf7).
Lemma candidate_16: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_349: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))))      (bool_to_nat cin)).
Lemma candidate_46: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_117: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))))      lf7).
Lemma candidate_350: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat a) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))))      (bool_to_nat cin)).
Lemma candidate_47: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))))).
Lemma candidate_118: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))))      lf7).
Lemma candidate_351: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a false)))))      (bool_to_nat cin)).
Lemma candidate_44: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))))).
Lemma candidate_115: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false))))))      lf7).
Lemma candidate_348: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a (Adder.BV_full_adder_carry l (@nil bool) false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a (Adder.BV_full_adder_carry l (@nil bool) false))))))      (bool_to_nat cin)).
Lemma candidate_43: forall (a : bool) (l : list bool), @eq nat   (PeanoNat.Nat.add (PeanoNat.Nat.add (bool_to_nat a) (BV_to_nat l))      (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))))).
Lemma candidate_114: forall (a : bool) (lf7 : nat) (l : list bool), @eq nat   (PeanoNat.Nat.add (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) lf7)      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))))))      lf7).
Lemma candidate_347: forall (a : bool) (l : list bool) (cin : bool), @eq nat   (PeanoNat.Nat.add      (Nat.add (Nat.add (bool_to_nat a) (BV_to_nat l)) (bool_to_nat cin))      (BV_to_nat l))   (Nat.add      (Nat.add (Bool_compl.bool_to_nat (HalfAdder.half_adder_sum a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)))) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (HalfAdder.half_adder_carry a ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))))))      (bool_to_nat cin)).
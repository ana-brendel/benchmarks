File Information
- File name: AdderProof
- Original Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/AdderProof_lemma_plus_assoc_162
- LFind Directory: /home/anabrendel/lfind/benchmarks/circuits/ADDER_tests/AdderProof/_lfind_AdderProof_lemma_plus_assoc_162
- Namespace: Circuits
- Proof name: BV_full_adder_ok
- Theorem: Theorem BV_full_adder_ok: forall (v0 w0 : BV) (cin0 : bool),
@eq nat (BV_to_nat (BV_full_adder v0 w0 cin0))
  (Nat.add (Nat.add (BV_to_nat v0) (BV_to_nat w0)) (bool_to_nat cin0)).
- Declarations: 
From lfind Require Import LFind.
From CircuitsCoqGym Require Import Adder.

Proof Context
* Goal State: @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))

* Hypothesis:
H0 : forall cin0 : bool,
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum (@cons bool a l) l0 cin0)
        (consbv (BV_full_adder_carry (@cons bool a l) l0 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
     (bool_to_nat cin0))
cin : bool
l0 : list bool
a0 : bool
v : BV
w : BV
l : list bool
a : bool

* Types:
Set
list bool
BV
Prop
bool
nat

* Polymorphic Types:
list bool

* Variables:
l0 : list bool
l : list bool
a : bool

* Terms:
BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1 : BV
BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1 : bool
consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1) nilbv : BV
BV_to_nat l0 : nat
S
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
     (Nat.add (BV_to_nat l0) (BV_to_nat l0))) : nat
S
  (S
     (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
        (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) : nat
bool_to_nat _UNBOUND_REL_1 : nat
S
  (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
     (Nat.add (BV_to_nat l) (BV_to_nat l0))) : nat
@cons bool a l : list bool
nilbv : BV
forall cin0 : bool,
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum (@cons bool a l) l0 cin0)
        (consbv (BV_full_adder_carry (@cons bool a l) l0 cin0) nilbv)))
  (Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
     (bool_to_nat cin0)) : Prop
Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
  (Nat.add (BV_to_nat l0) (BV_to_nat l0)) : nat
l : list bool
appbv (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
  (consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1) nilbv) : BV
BV_to_nat
  (appbv (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
     (consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1) nilbv)) : nat
Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0) : nat
Nat.add (BV_to_nat l) (BV_to_nat l0) : nat
@eq nat
  (BV_to_nat
     (appbv (BV_full_adder_sum (@cons bool a l) l0 _UNBOUND_REL_1)
        (consbv (BV_full_adder_carry (@cons bool a l) l0 _UNBOUND_REL_1)
           nilbv)))
  (Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
     (bool_to_nat _UNBOUND_REL_1)) : Prop
S (Nat.add (BV_to_nat l) (BV_to_nat l0)) : nat
Nat.add (Nat.add (BV_to_nat (@cons bool a l)) (BV_to_nat l0))
  (bool_to_nat _UNBOUND_REL_1) : nat
nat : Set
@eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))) : Prop
bool : Set
l0 : list bool
Nat.add (BV_to_nat l0) (BV_to_nat l0) : nat
Nat.add (BV_to_nat l) (BV_to_nat l) : nat
Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
  (Nat.add (BV_to_nat l) (BV_to_nat l0)) : nat
BV_to_nat (@cons bool a l) : nat
BV : Set
list bool : Set
a : bool
BV_to_nat l : nat

* Functions:
appbv  : forall (_ : BV) (_ : BV), BV
BV_full_adder_carry  : forall (_ : list bool) (_ : list bool) (_ : bool), bool
bool_to_nat  : forall _ : bool, nat
Nat.add  : forall (_ : nat) (_ : nat), nat
list  : forall _ : Type, Type
consbv  : forall (_ : bool) (_ : BV), BV
S  : forall _ : nat, nat
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
BV_full_adder_sum  : forall (_ : list bool) (_ : list bool) (_ : bool), BV
BV_to_nat  : forall _ : BV, nat

<---GENERALIZATION--->
Time elapsed: 7 seconds
Generalized Variables:
lf3 : nat = S
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
     (Nat.add (BV_to_nat l0) (BV_to_nat l0)))
lf7 : nat = Nat.add (BV_to_nat l0) (BV_to_nat l0)
lf11 : nat = BV_to_nat l
lf1 : nat = S
  (S
     (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
        (Nat.add (BV_to_nat l0) (BV_to_nat l0))))
lf4 : nat = Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
  (Nat.add (BV_to_nat l) (BV_to_nat l0))
lf5 : nat = Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
  (Nat.add (BV_to_nat l0) (BV_to_nat l0))
lf9 : nat = Nat.add (BV_to_nat l) (BV_to_nat l)
lf2 : nat = S
  (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
     (Nat.add (BV_to_nat l) (BV_to_nat l0)))
lf10 : nat = BV_to_nat l0
lf8 : nat = Nat.add (BV_to_nat l) (BV_to_nat l0)
lf6 : nat = S (Nat.add (BV_to_nat l) (BV_to_nat l0))

Generalizations:
Lemma conj1: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 lf7))).
Lemma conj2: forall (lf8 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 lf7))).
Lemma conj3: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (Nat.add lf9 lf7))).
Lemma conj4: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj7: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj8: forall (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj17: forall (lf8 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj18: forall (lf8 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj19: forall (lf10 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj20: forall (lf10 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj23: forall (lf6 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj24: forall (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj259: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj260: forall (lf10 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj263: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj264: forall (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (Nat.add lf9 lf7))).
Lemma conj273: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj274: forall (lf8 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj275: forall (lf10 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj276: forall (lf10 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj279: forall (lf6 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj280: forall (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj513: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf9 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj514: forall (lf10 : nat) (lf8 : nat) (lf9 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj515: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj516: forall (lf10 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj517: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj518: forall (lf8 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj519: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj520: forall (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj529: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj530: forall (lf10 : nat) (lf8 : nat) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj531: forall (lf10 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj532: forall (lf10 : nat) (lf11 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj533: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj534: forall (lf8 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj535: forall (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj536: forall (l0 : list bool) (lf11 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj771: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj772: forall (lf10 : nat) (lf9 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj775: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj776: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj785: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj786: forall (lf10 : nat) (lf8 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj787: forall (lf10 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj788: forall (lf10 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj789: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj790: forall (lf8 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj791: forall (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj792: forall (l0 : list bool) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).


<---VALIDITY CHECKS--->
Time elapsed: 144 seconds
Valid:
Lemma conj792: forall (l0 : list bool) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj788: forall (lf10 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj536: forall (l0 : list bool) (lf11 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj532: forall (lf10 : nat) (lf11 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).

Invalid:
Lemma conj791: forall (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj790: forall (lf8 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj789: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj787: forall (lf10 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj786: forall (lf10 : nat) (lf8 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj785: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj776: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj775: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj772: forall (lf10 : nat) (lf9 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj771: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj535: forall (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj534: forall (lf8 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj533: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj531: forall (lf10 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj530: forall (lf10 : nat) (lf8 : nat) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj529: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj520: forall (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj519: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj518: forall (lf8 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj517: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj516: forall (lf10 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj515: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj514: forall (lf10 : nat) (lf8 : nat) (lf9 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj513: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf9 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj280: forall (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj279: forall (lf6 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj276: forall (lf10 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj275: forall (lf10 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj274: forall (lf8 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj273: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj264: forall (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (Nat.add lf9 lf7))).
Lemma conj263: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj260: forall (lf10 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj259: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj24: forall (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj23: forall (lf6 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj20: forall (lf10 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj19: forall (lf10 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj18: forall (lf8 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj17: forall (lf8 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj8: forall (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj7: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj4: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj3: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (Nat.add lf9 lf7))).
Lemma conj2: forall (lf8 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 lf7))).
Lemma conj1: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 lf7))).

<---ADD IMPLICATIONS--->
Time elapsed: 171 seconds
Generalizations:
Lemma conj791: forall (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj790: forall (lf8 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj789: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj787: forall (lf10 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj786: forall (lf10 : nat) (lf8 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj785: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj776: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj775: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj772: forall (lf10 : nat) (lf9 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj771: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj535: forall (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj534: forall (lf8 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj533: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj531: forall (lf10 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj530: forall (lf10 : nat) (lf8 : nat) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj529: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj520: forall (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj519: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj518: forall (lf8 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj517: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj516: forall (lf10 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj515: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj514: forall (lf10 : nat) (lf8 : nat) (lf9 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj513: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf9 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj280: forall (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj279: forall (lf6 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj276: forall (lf10 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj275: forall (lf10 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj274: forall (lf8 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj273: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj264: forall (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (Nat.add lf9 lf7))).
Lemma conj263: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj260: forall (lf10 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj259: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj24: forall (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj23: forall (lf6 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj20: forall (lf10 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj19: forall (lf10 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj18: forall (lf8 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj17: forall (lf8 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj8: forall (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj7: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj4: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj3: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (Nat.add lf9 lf7))).
Lemma conj2: forall (lf8 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 lf7))).
Lemma conj1: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 lf7))).


<---VALIDITY CHECKS--->
Time elapsed: 240 seconds
Valid:

Invalid:
Lemma conj1: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 lf7))).
Lemma conj2: forall (lf8 : nat) (lf9 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 lf7))).
Lemma conj3: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (Nat.add lf9 lf7))).
Lemma conj4: forall (lf10 : nat) (lf9 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj7: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj8: forall (lf9 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj17: forall (lf8 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj18: forall (lf8 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj19: forall (lf10 : nat) (lf6 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj20: forall (lf10 : nat) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj23: forall (lf6 : nat) (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj24: forall (l0 : list bool) (lf11 : nat) (lf7 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma conj259: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj260: forall (lf10 : nat) (lf9 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7))).
Lemma conj263: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7))).
Lemma conj264: forall (lf9 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (Nat.add lf9 lf7))).
Lemma conj273: forall (lf8 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj274: forall (lf8 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj275: forall (lf10 : nat) (lf6 : nat) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj276: forall (lf10 : nat) (lf7 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj279: forall (lf6 : nat) (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj280: forall (l0 : list bool) (lf7 : nat) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma conj513: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf9 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj514: forall (lf10 : nat) (lf8 : nat) (lf9 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj515: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj516: forall (lf10 : nat) (lf9 : nat) (lf11 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj517: forall (lf8 : nat) (lf6 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj518: forall (lf8 : nat) (lf9 : nat) (l0 : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj519: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj520: forall (lf9 : nat) (l0 : list bool) (lf11 : nat), @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj529: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj530: forall (lf10 : nat) (lf8 : nat) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj531: forall (lf10 : nat) (lf6 : nat) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma conj533: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj534: forall (lf8 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj535: forall (lf6 : nat) (l0 : list bool) (lf11 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj771: forall (lf10 : nat) (lf6 : nat) (lf9 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj772: forall (lf10 : nat) (lf9 : nat) (l : list bool), @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma conj775: forall (lf6 : nat) (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj776: forall (lf9 : nat) (l0 : list bool) (l : list bool), @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj785: forall (lf10 : nat) (lf8 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj786: forall (lf10 : nat) (lf8 : nat) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj787: forall (lf10 : nat) (lf6 : nat) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma conj789: forall (lf8 : nat) (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj790: forall (lf8 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma conj791: forall (lf6 : nat) (l0 : list bool) (l : list bool), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).


<---CREATE SKETCHES--->
Time elapsed: 240 seconds
Sketches:
Sketch conj1_sketch0 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj1_sketch1 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj1_sketch2 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj1_sketch3 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj1_sketch4 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj1_term_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj1_term_sketch1 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj1_term_sketch2 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj1_term_sketch3 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj1_term_sketch4 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj2_sketch0 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj2_sketch1 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj2_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj2_sketch3 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj2_sketch4 : @eq nat (S (Nat.add (##hole##) lf8)) (S (S (Nat.add lf9 lf7)))
Sketch conj2_sketch5 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj2_term_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj2_term_sketch1 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj2_term_sketch2 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj2_term_sketch3 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj2_term_sketch4 : @eq nat (S lf8) (##hole##)
Sketch conj2_term_sketch5 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj3_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (##hole##))
Sketch conj3_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj3_sketch2 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj3_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (##hole##)))
Sketch conj3_sketch4 : @eq nat (S (Nat.add lf6 (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj3_sketch5 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj3_term_sketch0 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj3_term_sketch1 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj3_term_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj3_term_sketch3 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj3_term_sketch4 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj3_term_sketch5 : @eq nat (Nat.add lf6 (Nat.add lf11 lf10)) (##hole##)
Sketch conj4_sketch0 : @eq nat (S (Nat.add (##hole##) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 lf7)))
Sketch conj4_sketch1 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (##hole##))
Sketch conj4_sketch2 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10))) (##hole##)
Sketch conj4_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj4_sketch4 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj4_sketch5 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (##hole##)))
Sketch conj4_sketch6 : @eq nat (S (Nat.add (S (##hole##)) (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj4_term_sketch0 : @eq nat (S (Nat.add lf11 lf10)) (##hole##)
Sketch conj4_term_sketch1 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj4_term_sketch2 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj4_term_sketch3 : @eq nat (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)) (##hole##)
Sketch conj4_term_sketch4 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10))) (##hole##)
Sketch conj4_term_sketch5 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj4_term_sketch6 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj7_sketch0 : @eq nat (S (Nat.add lf6 (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj7_sketch1 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj7_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (##hole##)))) (S (S (Nat.add lf9 lf7)))
Sketch conj7_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (##hole##))
Sketch conj7_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj7_sketch5 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj7_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj7_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj7_term_sketch1 : @eq nat (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj7_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj7_term_sketch3 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj7_term_sketch4 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj7_term_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj7_term_sketch6 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj8_sketch0 : @eq nat (S (Nat.add (S (##hole##)) (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj8_sketch1 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj8_sketch2 : @eq nat (S (Nat.add (S (Nat.add lf11 (##hole##))) (Nat.add lf11 (##hole##))))
  (S (S (Nat.add lf9 lf7)))
Sketch conj8_sketch3 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (##hole##))
Sketch conj8_sketch4 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (##hole##)
Sketch conj8_sketch5 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj8_sketch6 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj8_sketch7 : @eq nat (S (Nat.add (##hole##) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7)))
Sketch conj8_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj8_term_sketch1 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (##hole##)
Sketch conj8_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj8_term_sketch3 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj8_term_sketch4 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj8_term_sketch5 : @eq nat
  (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0)))
  (##hole##)
Sketch conj8_term_sketch6 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj8_term_sketch7 : @eq nat (S (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj17_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add (##hole##) lf7)))
Sketch conj17_sketch1 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj17_sketch2 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj17_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj17_sketch4 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj17_sketch5 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj17_term_sketch0 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj17_term_sketch1 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj17_term_sketch2 : @eq nat (S (Nat.add (Nat.add lf11 lf11) lf7)) (##hole##)
Sketch conj17_term_sketch3 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj17_term_sketch4 : @eq nat (Nat.add (Nat.add lf11 lf11) lf7) (##hole##)
Sketch conj17_term_sketch5 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) lf7))) (##hole##)
Sketch conj18_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (##hole##) lf7)))
Sketch conj18_sketch1 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj18_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj18_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj18_sketch4 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj18_sketch5 : @eq nat (S (Nat.add (##hole##) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj18_sketch6 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj18_term_sketch0 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj18_term_sketch1 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj18_term_sketch2 : @eq nat (S (Nat.add (Nat.add lf11 lf11) lf7)) (##hole##)
Sketch conj18_term_sketch3 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj18_term_sketch4 : @eq nat (Nat.add (Nat.add lf11 lf11) lf7) (##hole##)
Sketch conj18_term_sketch5 : @eq nat (S lf8) (##hole##)
Sketch conj18_term_sketch6 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) lf7))) (##hole##)
Sketch conj19_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj19_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (##hole##))
Sketch conj19_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (##hole##)))
Sketch conj19_sketch3 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj19_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj19_sketch5 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj19_sketch6 : @eq nat (S (##hole##)) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj19_term_sketch0 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj19_term_sketch1 : @eq nat (S (Nat.add (Nat.add lf11 lf11) lf7)) (##hole##)
Sketch conj19_term_sketch2 : @eq nat (Nat.add (Nat.add lf11 lf11) lf7) (##hole##)
Sketch conj19_term_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj19_term_sketch4 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) lf7))) (##hole##)
Sketch conj19_term_sketch5 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj19_term_sketch6 : @eq nat (Nat.add lf6 (Nat.add lf11 lf10)) (##hole##)
Sketch conj20_sketch0 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj20_sketch1 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (##hole##))
Sketch conj20_sketch2 : @eq nat (S (Nat.add (##hole##) (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj20_sketch3 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (##hole##)))
Sketch conj20_sketch4 : @eq nat (S (##hole##)) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj20_sketch5 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj20_sketch6 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10))) (##hole##)
Sketch conj20_sketch7 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj20_term_sketch0 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj20_term_sketch1 : @eq nat (S (Nat.add (Nat.add lf11 lf11) lf7)) (##hole##)
Sketch conj20_term_sketch2 : @eq nat (S (Nat.add lf11 lf10)) (##hole##)
Sketch conj20_term_sketch3 : @eq nat (Nat.add (Nat.add lf11 lf11) lf7) (##hole##)
Sketch conj20_term_sketch4 : @eq nat (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)) (##hole##)
Sketch conj20_term_sketch5 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10))) (##hole##)
Sketch conj20_term_sketch6 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) lf7))) (##hole##)
Sketch conj20_term_sketch7 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj23_sketch0 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj23_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj23_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (##hole##))
Sketch conj23_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj23_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (##hole##))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj23_sketch5 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj23_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj23_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj23_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj23_term_sketch1 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj23_term_sketch2 : @eq nat (S (Nat.add (Nat.add lf11 lf11) lf7)) (##hole##)
Sketch conj23_term_sketch3 : @eq nat (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj23_term_sketch4 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj23_term_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj23_term_sketch6 : @eq nat (Nat.add (Nat.add lf11 lf11) lf7) (##hole##)
Sketch conj23_term_sketch7 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) lf7))) (##hole##)
Sketch conj24_sketch0 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj24_sketch1 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj24_sketch2 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (##hole##))
Sketch conj24_sketch3 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj24_sketch4 : @eq nat (S (Nat.add (S (Nat.add lf11 (##hole##))) (Nat.add lf11 (##hole##))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj24_sketch5 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj24_sketch6 : @eq nat (S (##hole##)) (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj24_sketch7 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (##hole##)
Sketch conj24_sketch8 : @eq nat (S (Nat.add (##hole##) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) lf7)))
Sketch conj24_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj24_term_sketch1 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj24_term_sketch2 : @eq nat (S (Nat.add (Nat.add lf11 lf11) lf7)) (##hole##)
Sketch conj24_term_sketch3 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (##hole##)
Sketch conj24_term_sketch4 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj24_term_sketch5 : @eq nat (Nat.add (Nat.add lf11 lf11) lf7) (##hole##)
Sketch conj24_term_sketch6 : @eq nat
  (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0)))
  (##hole##)
Sketch conj24_term_sketch7 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) lf7))) (##hole##)
Sketch conj24_term_sketch8 : @eq nat (S (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj259_sketch0 : @eq nat (S (Nat.add lf6 (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj259_sketch1 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj259_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (##hole##))
Sketch conj259_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj259_sketch4 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj259_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (S (##hole##)))
Sketch conj259_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) lf10))) (S (S (Nat.add lf9 lf7)))
Sketch conj259_term_sketch0 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj259_term_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj259_term_sketch2 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj259_term_sketch3 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj259_term_sketch4 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj259_term_sketch5 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj259_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj260_sketch0 : @eq nat (S (Nat.add (S (##hole##)) (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj260_sketch1 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj260_sketch2 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj260_sketch3 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (##hole##))
Sketch conj260_sketch4 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (##hole##)
Sketch conj260_sketch5 : @eq nat (S (Nat.add (##hole##) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 lf7)))
Sketch conj260_sketch6 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (##hole##)))
Sketch conj260_sketch7 : @eq nat (S (Nat.add (S (Nat.add (##hole##) lf10)) (Nat.add (##hole##) lf10)))
  (S (S (Nat.add lf9 lf7)))
Sketch conj260_term_sketch0 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj260_term_sketch1 : @eq nat
  (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10))
  (##hole##)
Sketch conj260_term_sketch2 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (##hole##)
Sketch conj260_term_sketch3 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj260_term_sketch4 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj260_term_sketch5 : @eq nat (S (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj260_term_sketch6 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj260_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj263_sketch0 : @eq nat (S (Nat.add lf6 (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj263_sketch1 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj263_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (##hole##))))
  (S (S (Nat.add lf9 lf7)))
Sketch conj263_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj263_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj263_sketch5 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj263_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj263_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7)))
Sketch conj263_term_sketch0 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj263_term_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj263_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj263_term_sketch3 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj263_term_sketch4 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj263_term_sketch5 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj263_term_sketch6 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj263_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj264_sketch0 : @eq nat (S (Nat.add (S (##hole##)) (##hole##))) (S (S (Nat.add lf9 lf7)))
Sketch conj264_sketch1 : @eq nat (S (Nat.add (##hole##) (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 lf7)))
Sketch conj264_sketch2 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (##hole##)))
        (Nat.add (BV_to_nat l) (##hole##)))) (S (S (Nat.add lf9 lf7)))
Sketch conj264_sketch3 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (##hole##))
Sketch conj264_sketch4 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj264_sketch5 : @eq nat (##hole##) (S (S (Nat.add lf9 lf7)))
Sketch conj264_sketch6 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 lf7)))
Sketch conj264_sketch7 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj264_sketch8 : @eq nat
  (S
     (Nat.add (S (Nat.add (##hole##) (BV_to_nat l0)))
        (Nat.add (##hole##) (BV_to_nat l0)))) (S (S (Nat.add lf9 lf7)))
Sketch conj264_term_sketch0 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj264_term_sketch1 : @eq nat (S (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj264_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj264_term_sketch3 : @eq nat (S (Nat.add lf9 lf7)) (##hole##)
Sketch conj264_term_sketch4 : @eq nat (S (S (Nat.add lf9 lf7))) (##hole##)
Sketch conj264_term_sketch5 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj264_term_sketch6 : @eq nat
  (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
     (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj264_term_sketch7 : @eq nat (Nat.add lf9 lf7) (##hole##)
Sketch conj264_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj273_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj273_sketch1 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj273_sketch2 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj273_sketch3 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj273_sketch4 : @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add (##hole##) lf7)))
Sketch conj273_sketch5 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj273_sketch6 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) lf7)))
Sketch conj273_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
  (##hole##)
Sketch conj273_term_sketch1 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj273_term_sketch2 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj273_term_sketch3 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7) (##hole##)
Sketch conj273_term_sketch4 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj273_term_sketch5 : @eq nat (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)) (##hole##)
Sketch conj273_term_sketch6 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj274_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj274_sketch1 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj274_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj274_sketch3 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (##hole##) lf7)))
Sketch conj274_sketch4 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj274_sketch5 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj274_sketch6 : @eq nat (S (Nat.add (##hole##) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj274_sketch7 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) lf7)))
Sketch conj274_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
  (##hole##)
Sketch conj274_term_sketch1 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj274_term_sketch2 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7) (##hole##)
Sketch conj274_term_sketch3 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj274_term_sketch4 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj274_term_sketch5 : @eq nat (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)) (##hole##)
Sketch conj274_term_sketch6 : @eq nat (S lf8) (##hole##)
Sketch conj274_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj275_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj275_sketch1 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj275_sketch2 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj275_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (S (##hole##)))
Sketch conj275_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj275_sketch5 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj275_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (##hole##))
Sketch conj275_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) lf10)))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) lf7)))
Sketch conj275_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
  (##hole##)
Sketch conj275_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj275_term_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj275_term_sketch3 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7) (##hole##)
Sketch conj275_term_sketch4 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj275_term_sketch5 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj275_term_sketch6 : @eq nat (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)) (##hole##)
Sketch conj275_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj276_sketch0 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (##hole##)
Sketch conj276_sketch1 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj276_sketch2 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj276_sketch3 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (##hole##)))
Sketch conj276_sketch4 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj276_sketch5 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj276_sketch6 : @eq nat (S (Nat.add (##hole##) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj276_sketch7 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (##hole##))
Sketch conj276_sketch8 : @eq nat (S (Nat.add (S (Nat.add (##hole##) lf10)) (Nat.add (##hole##) lf10)))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) lf7)))
Sketch conj276_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
  (##hole##)
Sketch conj276_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj276_term_sketch2 : @eq nat
  (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10))
  (##hole##)
Sketch conj276_term_sketch3 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7) (##hole##)
Sketch conj276_term_sketch4 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (##hole##)
Sketch conj276_term_sketch5 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj276_term_sketch6 : @eq nat (S (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj276_term_sketch7 : @eq nat (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)) (##hole##)
Sketch conj276_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj279_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj279_sketch1 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj279_sketch2 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj279_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj279_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj279_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (##hole##))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj279_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj279_sketch7 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj279_sketch8 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) lf7)))
Sketch conj279_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
  (##hole##)
Sketch conj279_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj279_term_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj279_term_sketch3 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7) (##hole##)
Sketch conj279_term_sketch4 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj279_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj279_term_sketch6 : @eq nat (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)) (##hole##)
Sketch conj279_term_sketch7 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj279_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj280_sketch0 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj280_sketch1 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj280_sketch2 : @eq nat (S (Nat.add (##hole##) (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj280_sketch3 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj280_sketch4 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (##hole##) lf7)))
Sketch conj280_sketch5 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (##hole##)))
        (Nat.add (BV_to_nat l) (##hole##))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj280_sketch6 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj280_sketch7 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (##hole##))
Sketch conj280_sketch8 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
Sketch conj280_sketch9 : @eq nat
  (S
     (Nat.add (S (Nat.add (##hole##) (BV_to_nat l0)))
        (Nat.add (##hole##) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) lf7)))
Sketch conj280_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)))
  (##hole##)
Sketch conj280_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj280_term_sketch2 : @eq nat (S (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj280_term_sketch3 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7) (##hole##)
Sketch conj280_term_sketch4 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj280_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj280_term_sketch6 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj280_term_sketch7 : @eq nat (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7)) (##hole##)
Sketch conj280_term_sketch8 : @eq nat
  (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
     (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj280_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj513_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj513_sketch1 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj513_sketch2 : @eq nat (##hole##) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj513_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj513_sketch4 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj513_sketch5 : @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 (##hole##))))
Sketch conj513_term_sketch0 : @eq nat (Nat.add lf9 (Nat.add lf10 lf10)) (##hole##)
Sketch conj513_term_sketch1 : @eq nat (S (S (Nat.add lf9 (Nat.add lf10 lf10)))) (##hole##)
Sketch conj513_term_sketch2 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj513_term_sketch3 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj513_term_sketch4 : @eq nat (S (Nat.add lf9 (Nat.add lf10 lf10))) (##hole##)
Sketch conj513_term_sketch5 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj514_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj514_sketch1 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj514_sketch2 : @eq nat (##hole##) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj514_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj514_sketch4 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj514_sketch5 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (##hole##))))
Sketch conj514_sketch6 : @eq nat (S (Nat.add (##hole##) lf8))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj514_term_sketch0 : @eq nat (Nat.add lf9 (Nat.add lf10 lf10)) (##hole##)
Sketch conj514_term_sketch1 : @eq nat (S (S (Nat.add lf9 (Nat.add lf10 lf10)))) (##hole##)
Sketch conj514_term_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj514_term_sketch3 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj514_term_sketch4 : @eq nat (S (Nat.add lf9 (Nat.add lf10 lf10))) (##hole##)
Sketch conj514_term_sketch5 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj514_term_sketch6 : @eq nat (S lf8) (##hole##)
Sketch conj515_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (##hole##)))
Sketch conj515_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj515_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (##hole##))
Sketch conj515_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj515_sketch4 : @eq nat (##hole##) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj515_sketch5 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj515_sketch6 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj515_term_sketch0 : @eq nat (Nat.add lf9 (Nat.add lf10 lf10)) (##hole##)
Sketch conj515_term_sketch1 : @eq nat (S (S (Nat.add lf9 (Nat.add lf10 lf10)))) (##hole##)
Sketch conj515_term_sketch2 : @eq nat (S (Nat.add lf9 (Nat.add lf10 lf10))) (##hole##)
Sketch conj515_term_sketch3 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj515_term_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj515_term_sketch5 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj515_term_sketch6 : @eq nat (Nat.add lf6 (Nat.add lf11 lf10)) (##hole##)
Sketch conj516_sketch0 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (##hole##)))
Sketch conj516_sketch1 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10))) (##hole##)
Sketch conj516_sketch2 : @eq nat (S (Nat.add (##hole##) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj516_sketch3 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (##hole##))
Sketch conj516_sketch4 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj516_sketch5 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj516_sketch6 : @eq nat (##hole##) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj516_sketch7 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj516_term_sketch0 : @eq nat (Nat.add lf9 (Nat.add lf10 lf10)) (##hole##)
Sketch conj516_term_sketch1 : @eq nat (S (S (Nat.add lf9 (Nat.add lf10 lf10)))) (##hole##)
Sketch conj516_term_sketch2 : @eq nat (S (Nat.add lf11 lf10)) (##hole##)
Sketch conj516_term_sketch3 : @eq nat (S (Nat.add lf9 (Nat.add lf10 lf10))) (##hole##)
Sketch conj516_term_sketch4 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj516_term_sketch5 : @eq nat (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)) (##hole##)
Sketch conj516_term_sketch6 : @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10))) (##hole##)
Sketch conj516_term_sketch7 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj517_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj517_sketch1 : @eq nat (##hole##)
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj517_sketch2 : @eq nat (S (##hole##))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj517_sketch3 : @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf9 (##hole##))))
Sketch conj517_sketch4 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj517_sketch5 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add lf9 (Nat.add (##hole##) (##hole##)))))
Sketch conj517_sketch6 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj517_term_sketch0 : @eq nat (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj517_term_sketch1 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj517_term_sketch2 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj517_term_sketch3 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj517_term_sketch4 : @eq nat (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj517_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj517_term_sketch6 : @eq nat (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj518_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj518_sketch1 : @eq nat (##hole##)
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj518_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (##hole##))))
Sketch conj518_sketch3 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj518_sketch4 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add lf9 (Nat.add (##hole##) (##hole##)))))
Sketch conj518_sketch5 : @eq nat (S (##hole##))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj518_sketch6 : @eq nat (S (Nat.add (##hole##) lf8))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj518_sketch7 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj518_term_sketch0 : @eq nat (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj518_term_sketch1 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj518_term_sketch2 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj518_term_sketch3 : @eq nat (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj518_term_sketch4 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj518_term_sketch5 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj518_term_sketch6 : @eq nat (S lf8) (##hole##)
Sketch conj518_term_sketch7 : @eq nat (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj519_sketch0 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj519_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (##hole##))
Sketch conj519_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj519_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj519_sketch4 : @eq nat (S (##hole##))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj519_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (##hole##))))
  (S (S (Nat.add lf9 (Nat.add (##hole##) (##hole##)))))
Sketch conj519_sketch6 : @eq nat (##hole##)
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj519_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj519_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj519_term_sketch1 : @eq nat (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj519_term_sketch2 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj519_term_sketch3 : @eq nat (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj519_term_sketch4 : @eq nat (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj519_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj519_term_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj519_term_sketch7 : @eq nat (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj520_sketch0 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj520_sketch1 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (##hole##))
Sketch conj520_sketch2 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj520_sketch3 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (##hole##)
Sketch conj520_sketch4 : @eq nat (##hole##)
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj520_sketch5 : @eq nat (S (Nat.add (S (Nat.add lf11 (##hole##))) (Nat.add lf11 (##hole##))))
  (S (S (Nat.add lf9 (Nat.add (##hole##) (##hole##)))))
Sketch conj520_sketch6 : @eq nat (S (##hole##))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj520_sketch7 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj520_sketch8 : @eq nat (S (Nat.add (##hole##) (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj520_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj520_term_sketch1 : @eq nat (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj520_term_sketch2 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj520_term_sketch3 : @eq nat (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj520_term_sketch4 : @eq nat
  (S
     (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))
  (##hole##)
Sketch conj520_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj520_term_sketch6 : @eq nat
  (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0)))
  (##hole##)
Sketch conj520_term_sketch7 : @eq nat (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj520_term_sketch8 : @eq nat (S (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj529_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj529_sketch1 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (##hole##) (Nat.add lf10 lf10))))
Sketch conj529_sketch2 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj529_sketch3 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj529_sketch4 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj529_sketch5 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (##hole##))))
Sketch conj529_sketch6 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj529_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))) (##hole##)
Sketch conj529_term_sketch1 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj529_term_sketch2 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj529_term_sketch3 : @eq nat (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))) (##hole##)
Sketch conj529_term_sketch4 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj529_term_sketch5 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj529_term_sketch6 : @eq nat (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)) (##hole##)
Sketch conj530_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj530_sketch1 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (##hole##) (Nat.add lf10 lf10))))
Sketch conj530_sketch2 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj530_sketch3 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj530_sketch4 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj530_sketch5 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (##hole##))))
Sketch conj530_sketch6 : @eq nat (S (Nat.add (##hole##) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj530_sketch7 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj530_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))) (##hole##)
Sketch conj530_term_sketch1 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj530_term_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj530_term_sketch3 : @eq nat (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))) (##hole##)
Sketch conj530_term_sketch4 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj530_term_sketch5 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj530_term_sketch6 : @eq nat (S lf8) (##hole##)
Sketch conj530_term_sketch7 : @eq nat (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)) (##hole##)
Sketch conj531_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj531_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (##hole##) (Nat.add lf10 lf10))))
Sketch conj531_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (##hole##))
Sketch conj531_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))
  (S (S (Nat.add (Nat.add lf11 lf11) (##hole##))))
Sketch conj531_sketch4 : @eq nat (##hole##) (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj531_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (S (S (##hole##)))
Sketch conj531_sketch6 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj531_sketch7 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))))
Sketch conj531_term_sketch0 : @eq nat (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))) (##hole##)
Sketch conj531_term_sketch1 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj531_term_sketch2 : @eq nat (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10))) (##hole##)
Sketch conj531_term_sketch3 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj531_term_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (##hole##)
Sketch conj531_term_sketch5 : @eq nat (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)) (##hole##)
Sketch conj531_term_sketch6 : @eq nat (Nat.add lf11 lf10) (##hole##)
Sketch conj531_term_sketch7 : @eq nat (Nat.add lf6 (Nat.add lf11 lf10)) (##hole##)
Sketch conj533_sketch0 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (##hole##) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj533_sketch1 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj533_sketch2 : @eq nat (##hole##)
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj533_sketch3 : @eq nat (S (##hole##))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj533_sketch4 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (##hole##))))
Sketch conj533_sketch5 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add (##hole##) (##hole##)))))
Sketch conj533_sketch6 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj533_sketch7 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj533_term_sketch0 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj533_term_sketch1 : @eq nat (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))
  (##hole##)
Sketch conj533_term_sketch2 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj533_term_sketch3 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj533_term_sketch4 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj533_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj533_term_sketch6 : @eq nat
  (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))
  (##hole##)
Sketch conj533_term_sketch7 : @eq nat
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj534_sketch0 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (##hole##) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj534_sketch1 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj534_sketch2 : @eq nat (##hole##)
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj534_sketch3 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (##hole##))))
Sketch conj534_sketch4 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add (##hole##) (##hole##)))))
Sketch conj534_sketch5 : @eq nat (S (##hole##))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj534_sketch6 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj534_sketch7 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj534_sketch8 : @eq nat (S (Nat.add (##hole##) lf8))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj534_term_sketch0 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj534_term_sketch1 : @eq nat (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))
  (##hole##)
Sketch conj534_term_sketch2 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj534_term_sketch3 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj534_term_sketch4 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj534_term_sketch5 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj534_term_sketch6 : @eq nat
  (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))
  (##hole##)
Sketch conj534_term_sketch7 : @eq nat
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj534_term_sketch8 : @eq nat (S lf8) (##hole##)
Sketch conj535_sketch0 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj535_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (##hole##) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj535_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj535_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add lf11 lf11) (##hole##))))
Sketch conj535_sketch4 : @eq nat (S (##hole##))
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj535_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (##hole##))))
  (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add (##hole##) (##hole##)))))
Sketch conj535_sketch6 : @eq nat (##hole##)
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj535_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (S (##hole##))
Sketch conj535_sketch8 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj535_term_sketch0 : @eq nat (Nat.add lf11 (BV_to_nat l0)) (##hole##)
Sketch conj535_term_sketch1 : @eq nat (Nat.add lf11 lf11) (##hole##)
Sketch conj535_term_sketch2 : @eq nat (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))
  (##hole##)
Sketch conj535_term_sketch3 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj535_term_sketch4 : @eq nat (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))) (##hole##)
Sketch conj535_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj535_term_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (##hole##)
Sketch conj535_term_sketch7 : @eq nat
  (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))
  (##hole##)
Sketch conj535_term_sketch8 : @eq nat
  (S
     (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj771_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (S (##hole##)))
Sketch conj771_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj771_sketch2 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj771_sketch3 : @eq nat (##hole##) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj771_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (##hole##))
Sketch conj771_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj771_sketch6 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj771_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj771_term_sketch0 : @eq nat (Nat.add lf9 (Nat.add lf10 lf10)) (##hole##)
Sketch conj771_term_sketch1 : @eq nat (S (S (Nat.add lf9 (Nat.add lf10 lf10)))) (##hole##)
Sketch conj771_term_sketch2 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj771_term_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj771_term_sketch4 : @eq nat (S (Nat.add lf9 (Nat.add lf10 lf10))) (##hole##)
Sketch conj771_term_sketch5 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj771_term_sketch6 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj771_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj772_sketch0 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (##hole##)))
Sketch conj772_sketch1 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (##hole##)
Sketch conj772_sketch2 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj772_sketch3 : @eq nat (S (##hole##)) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj772_sketch4 : @eq nat (##hole##) (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj772_sketch5 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (##hole##))
Sketch conj772_sketch6 : @eq nat (S (Nat.add (##hole##) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj772_sketch7 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj772_sketch8 : @eq nat (S (Nat.add (S (Nat.add (##hole##) lf10)) (Nat.add (##hole##) lf10)))
  (S (S (Nat.add lf9 (Nat.add lf10 lf10))))
Sketch conj772_term_sketch0 : @eq nat (Nat.add lf9 (Nat.add lf10 lf10)) (##hole##)
Sketch conj772_term_sketch1 : @eq nat (S (S (Nat.add lf9 (Nat.add lf10 lf10)))) (##hole##)
Sketch conj772_term_sketch2 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj772_term_sketch3 : @eq nat
  (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10))
  (##hole##)
Sketch conj772_term_sketch4 : @eq nat
  (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))
  (##hole##)
Sketch conj772_term_sketch5 : @eq nat (S (Nat.add lf9 (Nat.add lf10 lf10))) (##hole##)
Sketch conj772_term_sketch6 : @eq nat (S (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj772_term_sketch7 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj772_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj775_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj775_sketch1 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj775_sketch2 : @eq nat (##hole##)
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj775_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj775_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj775_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (##hole##))))
  (S (S (Nat.add lf9 (Nat.add (##hole##) (##hole##)))))
Sketch conj775_sketch6 : @eq nat (S (##hole##))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj775_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj775_sketch8 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj775_term_sketch0 : @eq nat (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj775_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj775_term_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj775_term_sketch3 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj775_term_sketch4 : @eq nat (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj775_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj775_term_sketch6 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj775_term_sketch7 : @eq nat (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj775_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj776_sketch0 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (##hole##))
Sketch conj776_sketch1 : @eq nat (S (Nat.add (S (##hole##)) (##hole##)))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj776_sketch2 : @eq nat (S (Nat.add (##hole##) (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj776_sketch3 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (##hole##))))
Sketch conj776_sketch4 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj776_sketch5 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (##hole##)))
        (Nat.add (BV_to_nat l) (##hole##))))
  (S (S (Nat.add lf9 (Nat.add (##hole##) (##hole##)))))
Sketch conj776_sketch6 : @eq nat (##hole##)
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj776_sketch7 : @eq nat (S (##hole##))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj776_sketch8 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (S (S (##hole##)))
Sketch conj776_sketch9 : @eq nat
  (S
     (Nat.add (S (Nat.add (##hole##) (BV_to_nat l0)))
        (Nat.add (##hole##) (BV_to_nat l0))))
  (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj776_term_sketch0 : @eq nat (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj776_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj776_term_sketch2 : @eq nat (S (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj776_term_sketch3 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj776_term_sketch4 : @eq nat (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
  (##hole##)
Sketch conj776_term_sketch5 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj776_term_sketch6 : @eq nat
  (S
     (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
        (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj776_term_sketch7 : @eq nat
  (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))
     (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj776_term_sketch8 : @eq nat (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj776_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj785_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj785_sketch1 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj785_sketch2 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj785_sketch3 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (##hole##) (Nat.add lf10 lf10))))
Sketch conj785_sketch4 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))))
Sketch conj785_sketch5 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj785_sketch6 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj785_sketch7 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) (Nat.add lf10 lf10))))
Sketch conj785_term_sketch0 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))
  (##hole##)
Sketch conj785_term_sketch1 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj785_term_sketch2 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj785_term_sketch3 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj785_term_sketch4 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj785_term_sketch5 : @eq nat
  (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))
  (##hole##)
Sketch conj785_term_sketch6 : @eq nat
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
  (##hole##)
Sketch conj785_term_sketch7 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj786_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj786_sketch1 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj786_sketch2 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (##hole##) (Nat.add lf10 lf10))))
Sketch conj786_sketch3 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj786_sketch4 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))))
Sketch conj786_sketch5 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj786_sketch6 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj786_sketch7 : @eq nat (S (Nat.add (##hole##) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj786_sketch8 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) (Nat.add lf10 lf10))))
Sketch conj786_term_sketch0 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))
  (##hole##)
Sketch conj786_term_sketch1 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj786_term_sketch2 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj786_term_sketch3 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj786_term_sketch4 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj786_term_sketch5 : @eq nat
  (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))
  (##hole##)
Sketch conj786_term_sketch6 : @eq nat
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
  (##hole##)
Sketch conj786_term_sketch7 : @eq nat (S lf8) (##hole##)
Sketch conj786_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj787_sketch0 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (S (##hole##)))
Sketch conj787_sketch1 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj787_sketch2 : @eq nat (##hole##)
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj787_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (##hole##) (Nat.add lf10 lf10))))
Sketch conj787_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))))
Sketch conj787_sketch5 : @eq nat (S (##hole##))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
Sketch conj787_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (S (##hole##))
Sketch conj787_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj787_sketch8 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) lf10)))
  (S (S (Nat.add (Nat.add (##hole##) (##hole##)) (Nat.add lf10 lf10))))
Sketch conj787_term_sketch0 : @eq nat (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))
  (##hole##)
Sketch conj787_term_sketch1 : @eq nat (Nat.add (BV_to_nat l) lf10) (##hole##)
Sketch conj787_term_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (##hole##)
Sketch conj787_term_sketch3 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj787_term_sketch4 : @eq nat (Nat.add lf10 lf10) (##hole##)
Sketch conj787_term_sketch5 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)) (##hole##)
Sketch conj787_term_sketch6 : @eq nat
  (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))
  (##hole##)
Sketch conj787_term_sketch7 : @eq nat
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10))))
  (##hole##)
Sketch conj787_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj789_sketch0 : @eq nat (##hole##)
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj789_sketch1 : @eq nat (S (##hole##))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj789_sketch2 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))))
Sketch conj789_sketch3 : @eq nat (S (Nat.add lf6 lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (##hole##) (##hole##)))))
Sketch conj789_sketch4 : @eq nat (S (Nat.add lf6 lf8))
  (S (S (Nat.add (##hole##) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj789_sketch5 : @eq nat (S (Nat.add lf6 lf8)) (S (##hole##))
Sketch conj789_sketch6 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj789_sketch7 : @eq nat (S (Nat.add lf6 lf8)) (S (S (##hole##)))
Sketch conj789_sketch8 : @eq nat (S (Nat.add lf6 lf8))
  (S
     (S
        (Nat.add (Nat.add (##hole##) (##hole##))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj789_term_sketch0 : @eq nat (S (Nat.add lf6 lf8)) (##hole##)
Sketch conj789_term_sketch1 : @eq nat (Nat.add lf6 lf8) (##hole##)
Sketch conj789_term_sketch2 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj789_term_sketch3 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj789_term_sketch4 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj789_term_sketch5 : @eq nat
  (S
     (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
        (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj789_term_sketch6 : @eq nat
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))) (##hole##)
Sketch conj789_term_sketch7 : @eq nat
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
     (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj789_term_sketch8 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj790_sketch0 : @eq nat (##hole##)
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj790_sketch1 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))))
Sketch conj790_sketch2 : @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (##hole##) (##hole##)))))
Sketch conj790_sketch3 : @eq nat (S (Nat.add (S lf8) lf8))
  (S (S (Nat.add (##hole##) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj790_sketch4 : @eq nat (S (Nat.add (S lf8) lf8)) (S (##hole##))
Sketch conj790_sketch5 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj790_sketch6 : @eq nat (S (##hole##))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj790_sketch7 : @eq nat (S (Nat.add (##hole##) lf8))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj790_sketch8 : @eq nat (S (Nat.add (S lf8) lf8)) (S (S (##hole##)))
Sketch conj790_sketch9 : @eq nat (S (Nat.add (S lf8) lf8))
  (S
     (S
        (Nat.add (Nat.add (##hole##) (##hole##))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj790_term_sketch0 : @eq nat (S (Nat.add (S lf8) lf8)) (##hole##)
Sketch conj790_term_sketch1 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj790_term_sketch2 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj790_term_sketch3 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj790_term_sketch4 : @eq nat
  (S
     (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
        (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj790_term_sketch5 : @eq nat
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))) (##hole##)
Sketch conj790_term_sketch6 : @eq nat (Nat.add (S lf8) lf8) (##hole##)
Sketch conj790_term_sketch7 : @eq nat (S lf8) (##hole##)
Sketch conj790_term_sketch8 : @eq nat
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
     (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj790_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)
Sketch conj791_sketch0 : @eq nat (S (Nat.add lf6 (##hole##)))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj791_sketch1 : @eq nat (##hole##)
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj791_sketch2 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##))))
Sketch conj791_sketch3 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (##hole##))))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (##hole##) (##hole##)))))
Sketch conj791_sketch4 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (Nat.add (##hole##) (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj791_sketch5 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (##hole##))
Sketch conj791_sketch6 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj791_sketch7 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))
  (S (S (##hole##)))
Sketch conj791_sketch8 : @eq nat (S (##hole##))
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj791_sketch9 : @eq nat (S (Nat.add lf6 (Nat.add (##hole##) (BV_to_nat l0))))
  (S
     (S
        (Nat.add (Nat.add (##hole##) (##hole##))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0)))))
Sketch conj791_term_sketch0 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l0)) (##hole##)
Sketch conj791_term_sketch1 : @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0)))) (##hole##)
Sketch conj791_term_sketch2 : @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0)) (##hole##)
Sketch conj791_term_sketch3 : @eq nat (BV_to_nat l0) (##hole##)
Sketch conj791_term_sketch4 : @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l)) (##hole##)
Sketch conj791_term_sketch5 : @eq nat
  (S
     (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
        (Nat.add (BV_to_nat l0) (BV_to_nat l0)))) (##hole##)
Sketch conj791_term_sketch6 : @eq nat
  (S
     (S
        (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
           (Nat.add (BV_to_nat l0) (BV_to_nat l0))))) (##hole##)
Sketch conj791_term_sketch7 : @eq nat
  (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))
     (Nat.add (BV_to_nat l0) (BV_to_nat l0))) (##hole##)
Sketch conj791_term_sketch8 : @eq nat (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))) (##hole##)
Sketch conj791_term_sketch9 : @eq nat (BV_to_nat l) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 6457 seconds
Problems per Sketch:
Sketch conj787_term_sketch7 --> Problem  synth_59
Sketch conj264_sketch1 --> Problem  synth_70
Sketch conj24_sketch5 --> Problem  synth_32
Sketch conj787_sketch6 --> Problem  synth_52
Sketch conj513_sketch5 --> Problem  synth_100
Sketch conj8_term_sketch0 --> Problem  synth_27
Sketch conj516_sketch1 --> Problem  synth_19
Sketch conj776_sketch2 --> Problem  synth_149
Sketch conj7_term_sketch1 --> Problem  synth_24
Sketch conj531_sketch5 --> Problem  synth_14
Sketch conj775_term_sketch4 --> Problem  synth_110
Sketch conj260_term_sketch5 --> Problem  synth_63
Sketch conj786_term_sketch7 --> Problem  synth_11
Sketch conj530_term_sketch2 --> Problem  synth_8
Sketch conj785_term_sketch2 --> Problem  synth_3
Sketch conj787_term_sketch0 --> Problem  synth_61
Sketch conj534_term_sketch8 --> Problem  synth_11
Sketch conj776_sketch1 --> Problem  synth_120
Sketch conj280_term_sketch1 --> Problem  synth_69
Sketch conj529_sketch5 --> Problem  synth_125
Sketch conj7_sketch2 --> Problem  synth_23
Sketch conj1_sketch1 --> Problem  synth_2
Sketch conj533_term_sketch4 --> Problem  synth_113
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj772_sketch5 --> Problem  synth_58
Sketch conj24_term_sketch0 --> Problem  synth_27
Sketch conj273_sketch5 --> Problem  synth_3
Sketch conj19_term_sketch1 --> Problem  synth_37
Sketch conj519_term_sketch2 --> Problem  synth_113
Sketch conj790_term_sketch4 --> Problem  synth_72
Sketch conj771_sketch3 --> Problem  synth_98
Sketch conj516_sketch0 --> Problem  synth_20
Sketch conj20_term_sketch7 --> Problem  synth_16
Sketch conj786_sketch6 --> Problem  synth_8
Sketch conj519_sketch4 --> Problem  synth_111
Sketch conj276_sketch1 --> Problem  synth_87
Sketch conj23_term_sketch0 --> Problem  synth_27
Sketch conj789_sketch7 --> Problem  synth_5
Sketch conj513_term_sketch3 --> Problem  synth_3
Sketch conj276_sketch4 --> Problem  synth_77
Sketch conj274_sketch6 --> Problem  synth_82
Sketch conj3_term_sketch5 --> Problem  synth_12
Sketch conj535_sketch4 --> Problem  synth_30
Sketch conj23_sketch2 --> Problem  synth_24
Sketch conj519_term_sketch6 --> Problem  synth_25
Sketch conj276_term_sketch5 --> Problem  synth_81
Sketch conj530_sketch6 --> Problem  synth_128
Sketch conj787_term_sketch4 --> Problem  synth_102
Sketch conj516_sketch2 --> Problem  synth_107
Sketch conj517_term_sketch1 --> Problem  synth_4
Sketch conj275_term_sketch3 --> Problem  synth_80
Sketch conj275_sketch4 --> Problem  synth_85
Sketch conj791_sketch5 --> Problem  synth_65
Sketch conj279_term_sketch6 --> Problem  synth_78
Sketch conj8_sketch7 --> Problem  synth_33
Sketch conj791_term_sketch3 --> Problem  synth_28
Sketch conj775_sketch2 --> Problem  synth_110
Sketch conj264_term_sketch4 --> Problem  synth_1
Sketch conj3_sketch4 --> Problem  synth_15
Sketch conj260_sketch4 --> Problem  synth_59
Sketch conj516_sketch6 --> Problem  synth_98
Sketch conj19_term_sketch2 --> Problem  synth_39
Sketch conj786_term_sketch6 --> Problem  synth_59
Sketch conj260_sketch2 --> Problem  synth_1
Sketch conj787_term_sketch6 --> Problem  synth_58
Sketch conj23_term_sketch3 --> Problem  synth_24
Sketch conj789_term_sketch5 --> Problem  synth_72
Sketch conj533_sketch6 --> Problem  synth_3
Sketch conj533_sketch5 --> Problem  synth_133
Sketch conj264_sketch0 --> Problem  synth_21
Sketch conj8_sketch4 --> Problem  synth_31
Sketch conj530_term_sketch0 --> Problem  synth_19
Sketch conj273_term_sketch4 --> Problem  synth_81
Sketch conj20_term_sketch5 --> Problem  synth_19
Sketch conj535_sketch0 --> Problem  synth_137
Sketch conj274_term_sketch7 --> Problem  synth_57
Sketch conj785_sketch2 --> Problem  synth_58
Sketch conj776_term_sketch9 --> Problem  synth_57
Sketch conj785_term_sketch1 --> Problem  synth_4
Sketch conj17_sketch5 --> Problem  synth_4
Sketch conj7_term_sketch3 --> Problem  synth_2
Sketch conj535_term_sketch1 --> Problem  synth_38
Sketch conj515_term_sketch5 --> Problem  synth_16
Sketch conj280_term_sketch7 --> Problem  synth_78
Sketch conj772_term_sketch2 --> Problem  synth_56
Sketch conj263_term_sketch0 --> Problem  synth_69
Sketch conj771_sketch2 --> Problem  synth_106
Sketch conj529_sketch0 --> Problem  synth_4
Sketch conj263_term_sketch6 --> Problem  synth_6
Sketch conj17_term_sketch2 --> Problem  synth_37
Sketch conj264_term_sketch2 --> Problem  synth_28
Sketch conj533_term_sketch1 --> Problem  synth_32
Sketch conj274_term_sketch2 --> Problem  synth_80
Sketch conj2_sketch2 --> Problem  synth_7
Sketch conj533_term_sketch5 --> Problem  synth_28
Sketch conj20_sketch5 --> Problem  synth_36
Sketch conj520_term_sketch3 --> Problem  synth_110
Sketch conj276_term_sketch4 --> Problem  synth_59
Sketch conj534_term_sketch1 --> Problem  synth_32
Sketch conj785_sketch6 --> Problem  synth_4
Sketch conj8_sketch1 --> Problem  synth_1
Sketch conj520_term_sketch0 --> Problem  synth_27
Sketch conj7_sketch6 --> Problem  synth_26
Sketch conj4_term_sketch6 --> Problem  synth_16
Sketch conj264_term_sketch7 --> Problem  synth_6
Sketch conj529_term_sketch5 --> Problem  synth_102
Sketch conj787_sketch4 --> Problem  synth_160
Sketch conj19_sketch4 --> Problem  synth_13
Sketch conj17_term_sketch4 --> Problem  synth_39
Sketch conj8_term_sketch1 --> Problem  synth_31
Sketch conj791_term_sketch6 --> Problem  synth_73
Sketch conj517_term_sketch3 --> Problem  synth_113
Sketch conj531_term_sketch1 --> Problem  synth_38
Sketch conj519_sketch1 --> Problem  synth_24
Sketch conj280_sketch2 --> Problem  synth_94
Sketch conj280_sketch0 --> Problem  synth_73
Sketch conj772_sketch6 --> Problem  synth_143
Sketch conj18_sketch3 --> Problem  synth_37
Sketch conj529_sketch4 --> Problem  synth_18
Sketch conj4_term_sketch2 --> Problem  synth_1
Sketch conj260_sketch1 --> Problem  synth_2
Sketch conj790_sketch2 --> Problem  synth_164
Sketch conj20_sketch0 --> Problem  synth_44
Sketch conj7_term_sketch0 --> Problem  synth_27
Sketch conj785_sketch3 --> Problem  synth_124
Sketch conj530_term_sketch1 --> Problem  synth_38
Sketch conj534_term_sketch3 --> Problem  synth_113
Sketch conj18_term_sketch1 --> Problem  synth_8
Sketch conj785_term_sketch5 --> Problem  synth_58
Sketch conj514_term_sketch2 --> Problem  synth_8
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj789_term_sketch6 --> Problem  synth_73
Sketch conj789_sketch8 --> Problem  synth_163
Sketch conj2_term_sketch4 --> Problem  synth_11
Sketch conj18_term_sketch5 --> Problem  synth_11
Sketch conj516_term_sketch1 --> Problem  synth_98
Sketch conj789_term_sketch7 --> Problem  synth_74
Sketch conj530_sketch0 --> Problem  synth_8
Sketch conj263_sketch6 --> Problem  synth_67
Sketch conj776_sketch4 --> Problem  synth_73
Sketch conj789_term_sketch2 --> Problem  synth_113
Sketch conj534_sketch2 --> Problem  synth_31
Sketch conj279_term_sketch4 --> Problem  synth_81
Sketch conj280_term_sketch6 --> Problem  synth_73
Sketch conj531_sketch4 --> Problem  synth_19
Sketch conj19_term_sketch0 --> Problem  synth_38
Sketch conj515_sketch5 --> Problem  synth_106
Sketch conj264_term_sketch1 --> Problem  synth_76
Sketch conj264_term_sketch8 --> Problem  synth_57
Sketch conj4_sketch2 --> Problem  synth_19
Sketch conj518_term_sketch3 --> Problem  synth_110
Sketch conj1_sketch2 --> Problem  synth_3
Sketch conj791_term_sketch4 --> Problem  synth_81
Sketch conj534_term_sketch6 --> Problem  synth_30
Sketch conj787_sketch8 --> Problem  synth_161
Sketch conj17_sketch0 --> Problem  synth_35
Sketch conj775_sketch1 --> Problem  synth_117
Sketch conj791_term_sketch0 --> Problem  synth_69
Sketch conj7_term_sketch2 --> Problem  synth_28
Sketch conj18_sketch5 --> Problem  synth_41
Sketch conj3_sketch0 --> Problem  synth_12
Sketch conj775_term_sketch1 --> Problem  synth_69
Sketch conj8_term_sketch7 --> Problem  synth_34
Sketch conj775_sketch3 --> Problem  synth_146
Sketch conj534_sketch8 --> Problem  synth_136
Sketch conj516_sketch3 --> Problem  synth_18
Sketch conj531_term_sketch5 --> Problem  synth_20
Sketch conj775_term_sketch0 --> Problem  synth_111
Sketch conj20_term_sketch1 --> Problem  synth_37
Sketch conj776_term_sketch1 --> Problem  synth_69
Sketch conj518_sketch3 --> Problem  synth_8
Sketch conj530_sketch3 --> Problem  synth_7
Sketch conj519_sketch5 --> Problem  synth_119
Sketch conj533_sketch3 --> Problem  synth_30
Sketch conj280_sketch9 --> Problem  synth_97
Sketch conj787_sketch2 --> Problem  synth_59
Sketch conj790_sketch5 --> Problem  synth_8
Sketch conj535_term_sketch5 --> Problem  synth_28
Sketch conj276_sketch5 --> Problem  synth_88
Sketch conj275_sketch1 --> Problem  synth_84
Sketch conj4_sketch6 --> Problem  synth_21
Sketch conj279_term_sketch5 --> Problem  synth_28
Sketch conj789_term_sketch3 --> Problem  synth_28
Sketch conj279_sketch0 --> Problem  synth_66
Sketch conj8_sketch3 --> Problem  synth_30
Sketch conj518_sketch6 --> Problem  synth_116
Sketch conj535_sketch2 --> Problem  synth_26
Sketch conj520_sketch6 --> Problem  synth_111
Sketch conj791_sketch2 --> Problem  synth_168
Sketch conj775_term_sketch7 --> Problem  synth_114
Sketch conj273_term_sketch6 --> Problem  synth_57
Sketch conj19_sketch5 --> Problem  synth_43
Sketch conj514_term_sketch6 --> Problem  synth_11
Sketch conj264_term_sketch3 --> Problem  synth_2
Sketch conj263_sketch1 --> Problem  synth_1
Sketch conj259_sketch0 --> Problem  synth_15
Sketch conj775_sketch6 --> Problem  synth_111
Sketch conj771_term_sketch1 --> Problem  synth_98
Sketch conj791_sketch0 --> Problem  synth_167
Sketch conj772_term_sketch6 --> Problem  synth_63
Sketch conj530_sketch1 --> Problem  synth_126
Sketch conj275_term_sketch5 --> Problem  synth_52
Sketch conj20_term_sketch3 --> Problem  synth_39
Sketch conj4_sketch0 --> Problem  synth_17
Sketch conj775_sketch0 --> Problem  synth_65
Sketch conj24_sketch1 --> Problem  synth_49
Sketch conj19_term_sketch5 --> Problem  synth_16
Sketch conj776_term_sketch4 --> Problem  synth_110
Sketch conj518_sketch5 --> Problem  synth_111
Sketch conj23_term_sketch4 --> Problem  synth_28
Sketch conj2_term_sketch1 --> Problem  synth_7
Sketch conj4_sketch3 --> Problem  synth_2
Sketch conj259_sketch1 --> Problem  synth_1
Sketch conj519_term_sketch4 --> Problem  synth_24
Sketch conj786_sketch3 --> Problem  synth_58
Sketch conj7_sketch5 --> Problem  synth_1
Sketch conj775_sketch7 --> Problem  synth_67
Sketch conj534_term_sketch2 --> Problem  synth_8
Sketch conj771_term_sketch2 --> Problem  synth_56
Sketch conj776_sketch0 --> Problem  synth_72
Sketch conj263_term_sketch3 --> Problem  synth_2
Sketch conj772_sketch1 --> Problem  synth_59
Sketch conj787_term_sketch3 --> Problem  synth_81
Sketch conj280_term_sketch4 --> Problem  synth_81
Sketch conj535_term_sketch2 --> Problem  synth_32
Sketch conj276_term_sketch2 --> Problem  synth_58
Sketch conj514_term_sketch4 --> Problem  synth_99
Sketch conj19_sketch2 --> Problem  synth_14
Sketch conj533_sketch2 --> Problem  synth_31
Sketch conj279_sketch8 --> Problem  synth_93
Sketch conj515_term_sketch4 --> Problem  synth_13
Sketch conj789_term_sketch0 --> Problem  synth_4
Sketch conj776_sketch9 --> Problem  synth_152
Sketch conj274_sketch3 --> Problem  synth_40
Sketch conj18_sketch1 --> Problem  synth_36
Sketch conj514_sketch5 --> Problem  synth_103
Sketch conj515_term_sketch2 --> Problem  synth_99
Sketch conj515_term_sketch1 --> Problem  synth_98
Sketch conj786_term_sketch0 --> Problem  synth_61
Sketch conj529_term_sketch3 --> Problem  synth_18
Sketch conj260_sketch5 --> Problem  synth_60
Sketch conj24_term_sketch4 --> Problem  synth_28
Sketch conj789_term_sketch8 --> Problem  synth_57
Sketch conj24_sketch8 --> Problem  synth_51
Sketch conj273_sketch6 --> Problem  synth_79
Sketch conj263_term_sketch1 --> Problem  synth_66
Sketch conj18_term_sketch2 --> Problem  synth_37
Sketch conj533_sketch1 --> Problem  synth_5
Sketch conj790_term_sketch9 --> Problem  synth_57
Sketch conj2_term_sketch0 --> Problem  synth_8
Sketch conj275_term_sketch0 --> Problem  synth_77
Sketch conj517_term_sketch0 --> Problem  synth_111
Sketch conj786_sketch8 --> Problem  synth_157
Sketch conj776_term_sketch8 --> Problem  synth_114
Sketch conj771_term_sketch5 --> Problem  synth_102
Sketch conj24_term_sketch8 --> Problem  synth_34
Sketch conj517_term_sketch6 --> Problem  synth_114
Sketch conj274_sketch4 --> Problem  synth_78
Sketch conj771_sketch7 --> Problem  synth_142
Sketch conj273_sketch0 --> Problem  synth_4
Sketch conj534_term_sketch7 --> Problem  synth_31
Sketch conj280_term_sketch5 --> Problem  synth_28
Sketch conj790_term_sketch1 --> Problem  synth_113
Sketch conj534_sketch5 --> Problem  synth_30
Sketch conj276_sketch6 --> Problem  synth_89
Sketch conj790_term_sketch8 --> Problem  synth_74
Sketch conj772_sketch7 --> Problem  synth_144
Sketch conj513_term_sketch4 --> Problem  synth_99
Sketch conj273_sketch4 --> Problem  synth_35
Sketch conj534_term_sketch4 --> Problem  synth_28
Sketch conj520_sketch2 --> Problem  synth_121
Sketch conj276_sketch2 --> Problem  synth_78
Sketch conj275_sketch6 --> Problem  synth_52
Sketch conj274_term_sketch1 --> Problem  synth_8
Sketch conj533_sketch7 --> Problem  synth_4
Sketch conj264_term_sketch0 --> Problem  synth_69
Sketch conj776_term_sketch7 --> Problem  synth_72
Sketch conj772_term_sketch4 --> Problem  synth_59
Sketch conj2_term_sketch3 --> Problem  synth_1
Sketch conj263_sketch3 --> Problem  synth_65
Sketch conj274_term_sketch6 --> Problem  synth_11
Sketch conj791_term_sketch5 --> Problem  synth_72
Sketch conj771_term_sketch0 --> Problem  synth_101
Sketch conj1_term_sketch4 --> Problem  synth_6
Sketch conj1_term_sketch3 --> Problem  synth_1
Sketch conj791_sketch9 --> Problem  synth_171
Sketch conj790_term_sketch2 --> Problem  synth_28
Sketch conj518_term_sketch0 --> Problem  synth_111
Sketch conj274_sketch1 --> Problem  synth_77
Sketch conj260_term_sketch7 --> Problem  synth_57
Sketch conj8_term_sketch6 --> Problem  synth_6
Sketch conj790_sketch8 --> Problem  synth_10
Sketch conj280_term_sketch3 --> Problem  synth_80
Sketch conj791_sketch7 --> Problem  synth_67
Sketch conj2_sketch1 --> Problem  synth_2
Sketch conj515_term_sketch0 --> Problem  synth_101
Sketch conj260_sketch6 --> Problem  synth_61
Sketch conj7_sketch0 --> Problem  synth_15
Sketch conj531_term_sketch7 --> Problem  synth_12
Sketch conj24_sketch7 --> Problem  synth_31
Sketch conj517_term_sketch4 --> Problem  synth_110
Sketch conj790_sketch4 --> Problem  synth_7
Sketch conj275_term_sketch6 --> Problem  synth_78
Sketch conj518_sketch0 --> Problem  synth_7
Sketch conj4_term_sketch5 --> Problem  synth_6
Sketch conj519_sketch7 --> Problem  synth_26
Sketch conj279_sketch1 --> Problem  synth_84
Sketch conj260_sketch0 --> Problem  synth_21
Sketch conj7_term_sketch6 --> Problem  synth_6
Sketch conj1_term_sketch1 --> Problem  synth_3
Sketch conj515_sketch3 --> Problem  synth_105
Sketch conj534_term_sketch0 --> Problem  synth_38
Sketch conj260_term_sketch3 --> Problem  synth_2
Sketch conj515_sketch0 --> Problem  synth_14
Sketch conj7_term_sketch5 --> Problem  synth_25
Sketch conj4_sketch4 --> Problem  synth_1
Sketch conj3_sketch1 --> Problem  synth_13
Sketch conj273_sketch3 --> Problem  synth_5
Sketch conj791_term_sketch8 --> Problem  synth_65
Sketch conj791_term_sketch7 --> Problem  synth_74
Sketch conj534_sketch6 --> Problem  synth_7
Sketch conj20_term_sketch0 --> Problem  synth_38
Sketch conj518_term_sketch2 --> Problem  synth_113
Sketch conj515_sketch1 --> Problem  synth_13
Sketch conj785_sketch1 --> Problem  synth_59
Sketch conj273_sketch2 --> Problem  synth_78
Sketch conj529_term_sketch6 --> Problem  synth_20
Sketch conj17_term_sketch3 --> Problem  synth_3
Sketch conj8_sketch6 --> Problem  synth_32
Sketch conj279_sketch2 --> Problem  synth_77
Sketch conj515_sketch2 --> Problem  synth_12
Sketch conj264_term_sketch6 --> Problem  synth_72
Sketch conj790_sketch9 --> Problem  synth_166
Sketch conj8_sketch0 --> Problem  synth_21
Sketch conj18_term_sketch6 --> Problem  synth_36
Sketch conj534_sketch3 --> Problem  synth_127
Sketch conj280_term_sketch8 --> Problem  synth_72
Sketch conj787_sketch0 --> Problem  synth_54
Sketch conj276_sketch0 --> Problem  synth_59
Sketch conj24_sketch3 --> Problem  synth_36
Sketch conj775_sketch8 --> Problem  synth_148
Sketch conj513_sketch4 --> Problem  synth_3
Sketch conj260_sketch3 --> Problem  synth_58
Sketch conj530_sketch2 --> Problem  synth_19
Sketch conj529_sketch3 --> Problem  synth_3
Sketch conj276_term_sketch1 --> Problem  synth_56
Sketch conj259_term_sketch0 --> Problem  synth_56
Sketch conj20_sketch1 --> Problem  synth_18
Sketch conj8_term_sketch3 --> Problem  synth_2
Sketch conj772_sketch8 --> Problem  synth_145
Sketch conj534_sketch7 --> Problem  synth_8
Sketch conj517_sketch2 --> Problem  synth_111
Sketch conj519_sketch6 --> Problem  synth_110
Sketch conj535_term_sketch7 --> Problem  synth_30
Sketch conj790_sketch1 --> Problem  synth_155
Sketch conj518_term_sketch5 --> Problem  synth_7
Sketch conj513_term_sketch2 --> Problem  synth_4
Sketch conj520_term_sketch1 --> Problem  synth_111
Sketch conj2_sketch4 --> Problem  synth_9
Sketch conj776_term_sketch3 --> Problem  synth_113
Sketch conj513_sketch0 --> Problem  synth_5
Sketch conj23_term_sketch7 --> Problem  synth_36
Sketch conj785_term_sketch6 --> Problem  synth_59
Sketch conj17_term_sketch1 --> Problem  synth_4
Sketch conj772_term_sketch8 --> Problem  synth_57
Sketch conj274_term_sketch5 --> Problem  synth_78
Sketch conj24_term_sketch2 --> Problem  synth_37
Sketch conj786_term_sketch4 --> Problem  synth_102
Sketch conj785_term_sketch4 --> Problem  synth_102
Sketch conj275_term_sketch1 --> Problem  synth_56
Sketch conj7_sketch4 --> Problem  synth_25
Sketch conj263_sketch5 --> Problem  synth_2
Sketch conj533_sketch0 --> Problem  synth_132
Sketch conj517_sketch6 --> Problem  synth_5
Sketch conj259_term_sketch6 --> Problem  synth_57
Sketch conj519_term_sketch7 --> Problem  synth_114
Sketch conj517_term_sketch2 --> Problem  synth_3
Sketch conj790_term_sketch7 --> Problem  synth_11
Sketch conj279_sketch3 --> Problem  synth_67
Sketch conj535_term_sketch6 --> Problem  synth_25
Sketch conj533_term_sketch3 --> Problem  synth_3
Sketch conj530_term_sketch6 --> Problem  synth_11
Sketch conj775_sketch4 --> Problem  synth_66
Sketch conj24_term_sketch5 --> Problem  synth_39
Sketch conj772_sketch0 --> Problem  synth_61
Sketch conj517_sketch1 --> Problem  synth_110
Sketch conj280_term_sketch9 --> Problem  synth_57
Sketch conj20_term_sketch2 --> Problem  synth_22
Sketch conj23_term_sketch6 --> Problem  synth_39
Sketch conj17_term_sketch0 --> Problem  synth_38
Sketch conj786_sketch0 --> Problem  synth_10
Sketch conj530_term_sketch4 --> Problem  synth_7
Sketch conj772_term_sketch0 --> Problem  synth_101
Sketch conj519_sketch2 --> Problem  synth_118
Sketch conj7_term_sketch4 --> Problem  synth_1
Sketch conj280_sketch3 --> Problem  synth_74
Sketch conj259_sketch6 --> Problem  synth_55
Sketch conj534_sketch0 --> Problem  synth_134
Sketch conj516_term_sketch6 --> Problem  synth_19
Sketch conj772_term_sketch7 --> Problem  synth_102
Sketch conj3_term_sketch2 --> Problem  synth_13
Sketch conj529_term_sketch0 --> Problem  synth_19
Sketch conj518_sketch2 --> Problem  synth_103
Sketch conj771_term_sketch3 --> Problem  synth_53
Sketch conj23_sketch3 --> Problem  synth_37
Sketch conj3_term_sketch3 --> Problem  synth_6
Sketch conj518_sketch1 --> Problem  synth_110
Sketch conj23_term_sketch2 --> Problem  synth_37
Sketch conj276_sketch7 --> Problem  synth_58
Sketch conj275_term_sketch2 --> Problem  synth_53
Sketch conj520_term_sketch5 --> Problem  synth_28
Sketch conj529_sketch2 --> Problem  synth_19
Sketch conj259_term_sketch3 --> Problem  synth_1
Sketch conj8_term_sketch4 --> Problem  synth_1
Sketch conj3_term_sketch4 --> Problem  synth_16
Sketch conj789_sketch5 --> Problem  synth_3
Sketch conj786_term_sketch8 --> Problem  synth_57
Sketch conj529_term_sketch1 --> Problem  synth_38
Sketch conj263_term_sketch2 --> Problem  synth_28
Sketch conj2_sketch3 --> Problem  synth_8
Sketch conj533_sketch4 --> Problem  synth_125
Sketch conj515_sketch4 --> Problem  synth_98
Sketch conj280_sketch6 --> Problem  synth_77
Sketch conj18_term_sketch3 --> Problem  synth_7
Sketch conj785_sketch7 --> Problem  synth_154
Sketch conj518_sketch4 --> Problem  synth_115
Sketch conj790_sketch0 --> Problem  synth_73
Sketch conj516_sketch4 --> Problem  synth_108
Sketch conj8_term_sketch2 --> Problem  synth_28
Sketch conj771_sketch5 --> Problem  synth_141
Sketch conj531_term_sketch4 --> Problem  synth_13
Sketch conj3_term_sketch1 --> Problem  synth_1
Sketch conj787_term_sketch1 --> Problem  synth_56
Sketch conj260_term_sketch2 --> Problem  synth_59
Sketch conj20_sketch3 --> Problem  synth_20
Sketch conj273_term_sketch2 --> Problem  synth_3
Sketch conj515_term_sketch6 --> Problem  synth_12
Sketch conj520_term_sketch8 --> Problem  synth_34
Sketch conj275_term_sketch4 --> Problem  synth_81
Sketch conj787_sketch1 --> Problem  synth_158
Sketch conj259_sketch5 --> Problem  synth_54
Sketch conj8_sketch2 --> Problem  synth_29
Sketch conj518_term_sketch7 --> Problem  synth_114
Sketch conj4_term_sketch3 --> Problem  synth_18
Sketch conj520_sketch4 --> Problem  synth_110
Sketch conj4_term_sketch0 --> Problem  synth_22
Sketch conj513_sketch2 --> Problem  synth_98
Sketch conj19_sketch3 --> Problem  synth_36
Sketch conj19_term_sketch6 --> Problem  synth_12
Sketch conj530_sketch7 --> Problem  synth_10
Sketch conj274_sketch2 --> Problem  synth_10
Sketch conj18_sketch0 --> Problem  synth_40
Sketch conj4_term_sketch4 --> Problem  synth_19
Sketch conj23_sketch4 --> Problem  synth_48
Sketch conj275_term_sketch7 --> Problem  synth_57
Sketch conj516_term_sketch2 --> Problem  synth_22
Sketch conj273_term_sketch3 --> Problem  synth_80
Sketch conj775_term_sketch2 --> Problem  synth_66
Sketch conj17_term_sketch5 --> Problem  synth_36
Sketch conj776_sketch3 --> Problem  synth_150
Sketch conj785_term_sketch7 --> Problem  synth_57
Sketch conj515_term_sketch3 --> Problem  synth_102
Sketch conj264_sketch7 --> Problem  synth_74
Sketch conj260_term_sketch4 --> Problem  synth_1
Sketch conj280_sketch7 --> Problem  synth_72
Sketch conj279_term_sketch2 --> Problem  synth_66
Sketch conj280_term_sketch0 --> Problem  synth_77
Sketch conj274_sketch0 --> Problem  synth_8
Sketch conj279_sketch5 --> Problem  synth_92
Sketch conj535_sketch1 --> Problem  synth_138
Sketch conj529_sketch1 --> Problem  synth_124
Sketch conj513_term_sketch5 --> Problem  synth_102
Sketch conj7_sketch3 --> Problem  synth_24
Sketch conj530_sketch5 --> Problem  synth_127
Sketch conj771_sketch6 --> Problem  synth_99
Sketch conj520_term_sketch7 --> Problem  synth_114
Sketch conj7_sketch1 --> Problem  synth_2
Sketch conj273_term_sketch0 --> Problem  synth_77
Sketch conj1_sketch3 --> Problem  synth_4
Sketch conj1_sketch0 --> Problem  synth_1
Sketch conj530_term_sketch7 --> Problem  synth_20
Sketch conj514_term_sketch0 --> Problem  synth_101
Sketch conj260_term_sketch1 --> Problem  synth_58
Sketch conj19_sketch6 --> Problem  synth_37
Sketch conj17_sketch1 --> Problem  synth_36
Sketch conj791_term_sketch2 --> Problem  synth_113
Sketch conj772_term_sketch5 --> Problem  synth_99
Sketch conj787_sketch7 --> Problem  synth_53
Sketch conj275_sketch7 --> Problem  synth_86
Sketch conj531_sketch7 --> Problem  synth_18
Sketch conj786_sketch4 --> Problem  synth_155
Sketch conj533_term_sketch2 --> Problem  synth_4
Sketch conj516_sketch7 --> Problem  synth_109
Sketch conj274_term_sketch0 --> Problem  synth_77
Sketch conj785_sketch4 --> Problem  synth_153
Sketch conj516_term_sketch7 --> Problem  synth_16
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj776_term_sketch0 --> Problem  synth_111
Sketch conj513_term_sketch1 --> Problem  synth_98
Sketch conj785_sketch0 --> Problem  synth_5
Sketch conj518_term_sketch4 --> Problem  synth_28
Sketch conj23_sketch7 --> Problem  synth_25
Sketch conj18_sketch6 --> Problem  synth_8
Sketch conj263_sketch2 --> Problem  synth_64
Sketch conj787_term_sketch8 --> Problem  synth_57
Sketch conj789_sketch2 --> Problem  synth_153
Sketch conj1_term_sketch2 --> Problem  synth_2
Sketch conj519_sketch0 --> Problem  synth_117
Sketch conj516_term_sketch0 --> Problem  synth_101
Sketch conj533_term_sketch7 --> Problem  synth_31
Sketch conj531_term_sketch6 --> Problem  synth_16
Sketch conj23_sketch5 --> Problem  synth_36
Sketch conj276_sketch8 --> Problem  synth_90
Sketch conj531_sketch0 --> Problem  synth_13
Sketch conj279_sketch6 --> Problem  synth_65
Sketch conj24_sketch6 --> Problem  synth_37
Sketch conj8_term_sketch5 --> Problem  synth_30
Sketch conj530_sketch4 --> Problem  synth_18
Sketch conj786_sketch2 --> Problem  synth_126
Sketch conj273_sketch1 --> Problem  synth_77
Sketch conj20_sketch4 --> Problem  synth_37
Sketch conj514_sketch0 --> Problem  synth_10
Sketch conj279_sketch7 --> Problem  synth_78
Sketch conj534_term_sketch5 --> Problem  synth_7
Sketch conj4_sketch5 --> Problem  synth_20
Sketch conj273_term_sketch1 --> Problem  synth_4
Sketch conj260_term_sketch0 --> Problem  synth_56
Sketch conj771_sketch0 --> Problem  synth_54
Sketch conj24_term_sketch1 --> Problem  synth_38
Sketch conj259_term_sketch1 --> Problem  synth_53
Sketch conj535_term_sketch3 --> Problem  synth_113
Sketch conj516_term_sketch5 --> Problem  synth_18
Sketch conj530_term_sketch5 --> Problem  synth_102
Sketch conj514_term_sketch5 --> Problem  synth_102
Sketch conj776_sketch7 --> Problem  synth_111
Sketch conj519_term_sketch1 --> Problem  synth_111
Sketch conj264_sketch3 --> Problem  synth_72
Sketch conj529_term_sketch4 --> Problem  synth_3
Sketch conj789_term_sketch1 --> Problem  synth_3
Sketch conj259_sketch4 --> Problem  synth_2
Sketch conj785_sketch5 --> Problem  synth_3
Sketch conj263_term_sketch7 --> Problem  synth_57
Sketch conj771_term_sketch6 --> Problem  synth_52
Sketch conj520_term_sketch2 --> Problem  synth_113
Sketch conj531_sketch2 --> Problem  synth_12
Sketch conj279_term_sketch8 --> Problem  synth_57
Sketch conj772_term_sketch1 --> Problem  synth_98
Sketch conj776_term_sketch5 --> Problem  synth_28
Sketch conj18_term_sketch4 --> Problem  synth_39
Sketch conj519_term_sketch5 --> Problem  synth_28
Sketch conj2_term_sketch2 --> Problem  synth_2
Sketch conj259_term_sketch4 --> Problem  synth_52
Sketch conj534_sketch4 --> Problem  synth_135
Sketch conj519_term_sketch0 --> Problem  synth_27
Sketch conj791_term_sketch1 --> Problem  synth_66
Sketch conj259_sketch3 --> Problem  synth_53
Sketch conj273_term_sketch5 --> Problem  synth_78
Sketch conj513_sketch1 --> Problem  synth_4
Sketch conj2_term_sketch5 --> Problem  synth_6
Sketch conj772_sketch2 --> Problem  synth_109
Sketch conj771_term_sketch4 --> Problem  synth_99
Sketch conj520_sketch5 --> Problem  synth_122
Sketch conj20_term_sketch4 --> Problem  synth_18
Sketch conj274_sketch7 --> Problem  synth_83
Sketch conj520_sketch1 --> Problem  synth_30
Sketch conj263_sketch4 --> Problem  synth_66
Sketch conj786_sketch7 --> Problem  synth_156
Sketch conj276_term_sketch6 --> Problem  synth_63
Sketch conj23_sketch0 --> Problem  synth_43
Sketch conj514_sketch4 --> Problem  synth_7
Sketch conj276_term_sketch7 --> Problem  synth_78
Sketch conj276_sketch3 --> Problem  synth_61
Sketch conj789_sketch3 --> Problem  synth_162
Sketch conj518_sketch7 --> Problem  synth_10
Sketch conj259_term_sketch5 --> Problem  synth_6
Sketch conj24_sketch2 --> Problem  synth_30
Sketch conj791_sketch6 --> Problem  synth_66
Sketch conj259_term_sketch2 --> Problem  synth_2
Sketch conj790_sketch7 --> Problem  synth_165
Sketch conj275_sketch3 --> Problem  synth_54
Sketch conj531_sketch3 --> Problem  synth_130
Sketch conj786_term_sketch5 --> Problem  synth_58
Sketch conj514_sketch6 --> Problem  synth_104
Sketch conj791_sketch4 --> Problem  synth_170
Sketch conj18_sketch4 --> Problem  synth_10
Sketch conj535_sketch3 --> Problem  synth_139
Sketch conj263_sketch7 --> Problem  synth_68
Sketch conj771_sketch4 --> Problem  synth_52
Sketch conj772_term_sketch3 --> Problem  synth_58
Sketch conj514_sketch3 --> Problem  synth_99
Sketch conj274_term_sketch3 --> Problem  synth_81
Sketch conj3_sketch5 --> Problem  synth_2
Sketch conj1_term_sketch0 --> Problem  synth_4
Sketch conj279_term_sketch3 --> Problem  synth_80
Sketch conj24_term_sketch6 --> Problem  synth_30
Sketch conj531_term_sketch0 --> Problem  synth_19
Sketch conj264_sketch2 --> Problem  synth_71
Sketch conj789_sketch4 --> Problem  synth_132
Sketch conj514_sketch1 --> Problem  synth_8
Sketch conj787_sketch3 --> Problem  synth_159
Sketch conj533_term_sketch0 --> Problem  synth_38
Sketch conj772_sketch4 --> Problem  synth_98
Sketch conj775_term_sketch8 --> Problem  synth_57
Sketch conj790_term_sketch0 --> Problem  synth_8
Sketch conj786_term_sketch2 --> Problem  synth_81
Sketch conj20_sketch2 --> Problem  synth_45
Sketch conj17_sketch2 --> Problem  synth_3
Sketch conj18_sketch2 --> Problem  synth_7
Sketch conj275_sketch0 --> Problem  synth_53
Sketch conj264_sketch8 --> Problem  synth_75
Sketch conj518_term_sketch1 --> Problem  synth_8
Sketch conj279_term_sketch0 --> Problem  synth_77
Sketch conj790_term_sketch3 --> Problem  synth_81
Sketch conj260_term_sketch6 --> Problem  synth_6
Sketch conj516_term_sketch4 --> Problem  synth_102
Sketch conj19_term_sketch3 --> Problem  synth_13
Sketch conj776_sketch6 --> Problem  synth_110
Sketch conj276_term_sketch8 --> Problem  synth_57
Sketch conj516_term_sketch3 --> Problem  synth_99
Sketch conj790_term_sketch5 --> Problem  synth_73
Sketch conj531_term_sketch2 --> Problem  synth_18
Sketch conj785_term_sketch3 --> Problem  synth_81
Sketch conj535_term_sketch0 --> Problem  synth_27
Sketch conj530_term_sketch3 --> Problem  synth_18
Sketch conj17_sketch4 --> Problem  synth_5
Sketch conj514_term_sketch3 --> Problem  synth_7
Sketch conj264_term_sketch5 --> Problem  synth_73
Sketch conj264_sketch5 --> Problem  synth_1
Sketch conj535_sketch7 --> Problem  synth_24
Sketch conj529_term_sketch2 --> Problem  synth_4
Sketch conj4_sketch1 --> Problem  synth_18
Sketch conj24_term_sketch3 --> Problem  synth_31
Sketch conj24_sketch4 --> Problem  synth_50
Sketch conj519_sketch3 --> Problem  synth_25
Sketch conj274_term_sketch4 --> Problem  synth_7
Sketch conj790_term_sketch6 --> Problem  synth_7
Sketch conj789_sketch0 --> Problem  synth_73
Sketch conj535_sketch8 --> Problem  synth_25
Sketch conj787_term_sketch2 --> Problem  synth_53
Sketch conj280_sketch1 --> Problem  synth_87
Sketch conj276_term_sketch0 --> Problem  synth_77
Sketch conj264_sketch6 --> Problem  synth_2
Sketch conj776_term_sketch6 --> Problem  synth_73
Sketch conj514_term_sketch1 --> Problem  synth_98
Sketch conj260_sketch7 --> Problem  synth_62
Sketch conj8_sketch5 --> Problem  synth_2
Sketch conj1_sketch4 --> Problem  synth_5
Sketch conj790_sketch3 --> Problem  synth_134
Sketch conj787_term_sketch5 --> Problem  synth_52
Sketch conj791_sketch1 --> Problem  synth_73
Sketch conj786_term_sketch1 --> Problem  synth_8
Sketch conj775_term_sketch6 --> Problem  synth_65
Sketch conj276_term_sketch3 --> Problem  synth_80
Sketch conj275_sketch5 --> Problem  synth_78
Sketch conj3_sketch2 --> Problem  synth_1
Sketch conj24_sketch0 --> Problem  synth_46
Sketch conj535_term_sketch4 --> Problem  synth_24
Sketch conj776_term_sketch2 --> Problem  synth_76
Sketch conj771_term_sketch7 --> Problem  synth_57
Sketch conj23_sketch1 --> Problem  synth_47
Sketch conj20_sketch7 --> Problem  synth_46
Sketch conj279_sketch4 --> Problem  synth_91
Sketch conj23_sketch6 --> Problem  synth_26
Sketch conj534_sketch1 --> Problem  synth_10
Sketch conj520_sketch8 --> Problem  synth_123
Sketch conj263_term_sketch5 --> Problem  synth_65
Sketch conj529_sketch6 --> Problem  synth_5
Sketch conj531_sketch1 --> Problem  synth_129
Sketch conj790_sketch6 --> Problem  synth_72
Sketch conj24_term_sketch7 --> Problem  synth_36
Sketch conj259_sketch2 --> Problem  synth_52
Sketch conj520_term_sketch6 --> Problem  synth_30
Sketch conj531_term_sketch3 --> Problem  synth_102
Sketch conj775_sketch5 --> Problem  synth_147
Sketch conj520_sketch7 --> Problem  synth_32
Sketch conj23_term_sketch5 --> Problem  synth_25
Sketch conj533_term_sketch6 --> Problem  synth_30
Sketch conj535_sketch5 --> Problem  synth_140
Sketch conj535_sketch6 --> Problem  synth_31
Sketch conj785_term_sketch0 --> Problem  synth_61
Sketch conj787_sketch5 --> Problem  synth_58
Sketch conj791_sketch3 --> Problem  synth_169
Sketch conj775_term_sketch3 --> Problem  synth_113
Sketch conj520_term_sketch4 --> Problem  synth_31
Sketch conj2_sketch5 --> Problem  synth_10
Sketch conj518_term_sketch6 --> Problem  synth_11
Sketch conj517_sketch4 --> Problem  synth_4
Sketch conj19_sketch0 --> Problem  synth_42
Sketch conj519_term_sketch3 --> Problem  synth_110
Sketch conj791_term_sketch9 --> Problem  synth_57
Sketch conj789_sketch6 --> Problem  synth_4
Sketch conj771_sketch1 --> Problem  synth_53
Sketch conj786_sketch5 --> Problem  synth_7
Sketch conj517_sketch3 --> Problem  synth_100
Sketch conj263_term_sketch4 --> Problem  synth_1
Sketch conj280_sketch8 --> Problem  synth_78
Sketch conj280_sketch4 --> Problem  synth_95
Sketch conj23_term_sketch1 --> Problem  synth_38
Sketch conj517_sketch5 --> Problem  synth_112
Sketch conj775_term_sketch5 --> Problem  synth_28
Sketch conj789_term_sketch4 --> Problem  synth_81
Sketch conj776_sketch5 --> Problem  synth_151
Sketch conj517_term_sketch5 --> Problem  synth_28
Sketch conj791_sketch8 --> Problem  synth_72
Sketch conj776_sketch8 --> Problem  synth_74
Sketch conj516_sketch5 --> Problem  synth_99
Sketch conj263_sketch0 --> Problem  synth_15
Sketch conj786_sketch1 --> Problem  synth_59
Sketch conj772_sketch3 --> Problem  synth_99
Sketch conj19_sketch1 --> Problem  synth_12
Sketch conj517_sketch0 --> Problem  synth_3
Sketch conj535_term_sketch8 --> Problem  synth_31
Sketch conj279_term_sketch7 --> Problem  synth_65
Sketch conj20_sketch6 --> Problem  synth_19
Sketch conj18_term_sketch0 --> Problem  synth_38
Sketch conj3_sketch3 --> Problem  synth_14
Sketch conj274_sketch5 --> Problem  synth_7
Sketch conj264_sketch4 --> Problem  synth_73
Sketch conj520_sketch0 --> Problem  synth_120
Sketch conj514_sketch2 --> Problem  synth_98
Sketch conj280_sketch5 --> Problem  synth_96
Sketch conj515_sketch6 --> Problem  synth_99
Sketch conj275_sketch2 --> Problem  synth_77
Sketch conj19_term_sketch4 --> Problem  synth_36
Sketch conj17_sketch3 --> Problem  synth_37
Sketch conj513_term_sketch0 --> Problem  synth_101
Sketch conj531_sketch6 --> Problem  synth_131
Sketch conj280_term_sketch2 --> Problem  synth_76
Sketch conj20_term_sketch6 --> Problem  synth_36
Sketch conj513_sketch3 --> Problem  synth_99
Sketch conj520_sketch3 --> Problem  synth_31
Sketch conj789_sketch1 --> Problem  synth_72
Sketch conj786_term_sketch3 --> Problem  synth_7
Sketch conj279_term_sketch1 --> Problem  synth_69


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 9003 seconds

Problem: synth_63

Problem: synth_106

Problem: synth_91

Problem: synth_67

Problem: synth_77

Problem: synth_64

Problem: synth_167

Problem: synth_11
 S lf8

Problem: synth_129
 Nat.add lf11 lf11

Problem: synth_46

Problem: synth_101

Problem: synth_151

Problem: synth_100

Problem: synth_59

Problem: synth_139

Problem: synth_116
 S lf8

Problem: synth_31

Problem: synth_8

Problem: synth_34

Problem: synth_58

Problem: synth_53
 Nat.add lf6 lf6

Problem: synth_123

Problem: synth_125

Problem: synth_2

Problem: synth_166

Problem: synth_95

Problem: synth_130
 Nat.add lf10 lf10

Problem: synth_127

Problem: synth_72

Problem: synth_152

Problem: synth_111

Problem: synth_56

Problem: synth_135

Problem: synth_105
 Nat.add lf10 lf10

Problem: synth_65

Problem: synth_23

Problem: synth_140

Problem: synth_168

Problem: synth_88

Problem: synth_19

Problem: synth_131
 Nat.add lf10 lf11
 Nat.add lf11 lf10

Problem: synth_132

Problem: synth_24

Problem: synth_97

Problem: synth_48

Problem: synth_144
 Nat.add lf10 lf10

Problem: synth_28
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)
 BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)

Problem: synth_45

Problem: synth_26

Problem: synth_70

Problem: synth_122

Problem: synth_15

Problem: synth_14

Problem: synth_83

Problem: synth_12

Problem: synth_85

Problem: synth_62

Problem: synth_50

Problem: synth_171

Problem: synth_146

Problem: synth_119

Problem: synth_165
 S lf8

Problem: synth_7

Problem: synth_154

Problem: synth_128
 S lf8

Problem: synth_61

Problem: synth_141
 Nat.add lf10 lf10

Problem: synth_27

Problem: synth_136
 S lf8

Problem: synth_158

Problem: synth_33

Problem: synth_160
 Nat.add lf10 lf10

Problem: synth_47
 Nat.add lf11 lf11

Problem: synth_3
 Nat.add lf6 lf8
 Nat.add lf8 lf6

Problem: synth_161

Problem: synth_121

Problem: synth_124

Problem: synth_150

Problem: synth_99

Problem: synth_43

Problem: synth_109

Problem: synth_68

Problem: synth_96

Problem: synth_54

Problem: synth_149

Problem: synth_39

Problem: synth_98

Problem: synth_118

Problem: synth_66
 Nat.add lf6 lf6

Problem: synth_57
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)
 BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)
 BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)

Problem: synth_162

Problem: synth_155

Problem: synth_5
 Nat.add lf8 lf8

Problem: synth_37

Problem: synth_148

Problem: synth_159

Problem: synth_22

Problem: synth_18

Problem: synth_114

Problem: synth_21

Problem: synth_170

Problem: synth_41
 S lf8

Problem: synth_49
 Nat.add lf11 lf11

Problem: synth_75

Problem: synth_25
 Nat.add lf6 lf6

Problem: synth_13
 Nat.add lf6 lf6

Problem: synth_6
 Nat.add lf9 lf7
 Nat.add lf7 lf9

Problem: synth_138
 Nat.add lf11 lf11

Problem: synth_4
 Nat.add lf6 lf6

Problem: synth_38
 Nat.add lf11 lf11

Problem: synth_104
 S lf8

Problem: synth_102
 Nat.add lf10 lf10

Problem: synth_157

Problem: synth_113
 Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))
 Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))
 Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))
 Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))

Problem: synth_10
 Nat.add lf8 lf8

Problem: synth_92

Problem: synth_32

Problem: synth_51

Problem: synth_112

Problem: synth_35

Problem: synth_115

Problem: synth_134

Problem: synth_110

Problem: synth_90

Problem: synth_73

Problem: synth_17

Problem: synth_29

Problem: synth_76

Problem: synth_117

Problem: synth_9
 S lf8

Problem: synth_145

Problem: synth_30

Problem: synth_81
 Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))
 Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))
 Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))

Problem: synth_1

Problem: synth_137

Problem: synth_69

Problem: synth_86

Problem: synth_55

Problem: synth_153

Problem: synth_107

Problem: synth_163

Problem: synth_71

Problem: synth_120

Problem: synth_103

Problem: synth_87

Problem: synth_79

Problem: synth_126

Problem: synth_74

Problem: synth_84

Problem: synth_20

Problem: synth_94

Problem: synth_169

Problem: synth_108
 Nat.add lf10 lf10

Problem: synth_133

Problem: synth_164

Problem: synth_143

Problem: synth_42
 Nat.add lf11 lf11

Problem: synth_16
 Nat.add lf10 lf11
 Nat.add lf11 lf10

Problem: synth_93

Problem: synth_40

Problem: synth_80

Problem: synth_89

Problem: synth_52

Problem: synth_142

Problem: synth_147

Problem: synth_44
 Nat.add lf11 lf11

Problem: synth_60

Problem: synth_36

Problem: synth_82
 S lf8

Problem: synth_156
 S lf8

Problem: synth_78

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 9005 seconds
Lemmas:
Lemma candidate_1: forall (l : list bool) (l0 : list bool), @eq nat   (S      (Nat.add (S (Nat.add (BV_to_nat l) (BV_to_nat l0)))         (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (S      (S         (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))            (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_2: forall (l : list bool) (lf10 : nat), @eq nat   (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))   (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma candidate_3: forall (lf11 : nat) (l0 : list bool), @eq nat   (S      (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))   (S      (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_4: forall (lf11 : nat) (lf10 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_5: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_6: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_7: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_8: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_9: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_10: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_11: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_12: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_13: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_14: forall (lf7 : nat) (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 lf7))).
Lemma candidate_15: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_16: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_17: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_18: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_19: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_20: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_21: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_22: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_23: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_24: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_25: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_26: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_27: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_28: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_29: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_30: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_31: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_32: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_33: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_34: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_35: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_36: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_37: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_38: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_39: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_40: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_41: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_42: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_43: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_44: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_45: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_46: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_47: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_48: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_49: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_50: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_51: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_52: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_53: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_54: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_55: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_56: forall (lf7 : nat) (lf11 : nat) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma candidate_57: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_58: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_59: forall (lf7 : nat) (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma candidate_60: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_61: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_62: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_63: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_64: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_65: forall (lf7 : nat) (lf11 : nat) (lf10 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma candidate_66: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_67: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_68: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_69: forall (lf7 : nat) (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))   (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma candidate_70: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_71: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_72: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_73: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_74: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_75: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_76: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_77: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_78: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_79: forall (lf7 : nat) (lf11 : nat) (l0 : list bool), @eq nat   (S      (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))   (S (S (Nat.add (Nat.add lf11 lf11) lf7))).
Lemma candidate_80: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_81: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_82: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_83: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_84: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_85: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_86: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_87: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_88: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_89: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_90: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_91: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_92: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_93: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_94: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_95: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_96: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_97: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_98: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_99: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_100: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_101: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_102: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_103: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_104: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_105: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_106: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_107: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_108: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_109: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_110: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_111: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_112: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_113: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_114: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_115: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_116: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_117: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_118: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_119: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_120: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_121: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_122: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_123: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_124: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_125: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_126: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_127: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf9 lf7).
Lemma candidate_128: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_129: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_130: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_131: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_132: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_133: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_134: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_135: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_136: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_137: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_138: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_139: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_140: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_141: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_142: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_143: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_144: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_145: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_146: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_147: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_148: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_149: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_150: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_151: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_152: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_153: forall (lf7 : nat) (l : list bool) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8))   (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) lf7))).
Lemma candidate_154: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_155: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_156: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_157: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_158: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_159: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_160: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_161: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_162: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_163: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_164: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_165: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_166: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_167: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_168: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_169: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_170: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_171: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_172: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_173: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_174: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_175: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_176: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_177: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_178: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_179: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_180: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_181: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_182: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_183: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_184: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_185: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_186: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_187: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_188: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_189: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_190: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_191: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_192: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_193: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_194: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_195: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_196: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_197: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_198: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_199: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_200: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_201: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_202: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_203: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_204: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_205: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_206: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_207: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_208: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_209: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_210: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_211: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_212: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_213: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_214: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_215: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_216: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_217: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_218: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_219: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_220: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_221: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_222: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_223: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_224: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_225: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_226: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_227: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_228: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_229: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_230: forall (lf9 : nat) (lf10 : nat) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma candidate_231: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_232: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_233: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_234: forall (lf11 : nat) (lf9 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))   (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma candidate_235: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_236: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_237: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_238: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_239: forall (lf11 : nat) (lf9 : nat) (lf10 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))   (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma candidate_240: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_241: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_242: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_243: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_244: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_245: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_246: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_247: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_248: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_249: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_250: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_251: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_252: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_253: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_254: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_255: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_256: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_257: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_258: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_259: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_260: forall (l0 : list bool) (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8))   (S (S (Nat.add lf9 (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_261: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_262: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_263: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_264: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_265: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_266: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_267: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_268: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_269: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_270: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_271: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_272: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_273: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_274: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_275: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_276: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_277: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_278: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_279: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_280: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_281: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_282: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_283: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_284: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_285: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_286: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_287: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_288: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_289: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_290: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_291: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_292: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_293: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_294: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_295: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_296: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_297: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_298: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_299: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_300: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_301: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_302: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_303: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_304: forall (lf11 : nat) (lf10 : nat) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_305: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_306: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_307: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_308: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_309: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_310: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_311: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_312: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf10 lf11)))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_313: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_314: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_315: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_316: forall (lf11 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 lf10))) (Nat.add lf6 lf6).
Lemma candidate_317: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_318: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf11 lf10).
Lemma candidate_319: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_320: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_321: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_322: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_323: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_324: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_325: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_326: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_327: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_328: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_329: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_330: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_331: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_332: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_333: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_334: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_335: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_336: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_337: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_338: forall (lf11 : nat) (l0 : list bool) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8))   (S      (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_339: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_340: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_341: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_342: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_343: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_344: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_345: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_346: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_347: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_348: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_349: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_350: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_351: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0))))   (S      (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_352: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_353: forall (lf11 : nat), @eq nat (Nat.add lf11 lf11) (Nat.add lf11 lf11).
Lemma candidate_354: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_355: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_356: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_357: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_358: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_359: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_360: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_361: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_362: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_363: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_364: forall (lf11 : nat) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add lf11 (BV_to_nat l0)))) (Nat.add lf6 lf6).
Lemma candidate_365: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_366: forall (l : list bool) (lf9 : nat) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))   (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma candidate_367: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_368: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_369: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_370: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_371: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_372: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_373: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_374: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_375: forall (l : list bool) (lf9 : nat) (lf10 : nat), @eq nat   (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))   (S (S (Nat.add lf9 (Nat.add lf10 lf10)))).
Lemma candidate_376: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_377: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_378: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_379: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_380: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_381: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_382: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_383: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_384: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_385: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_386: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_387: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_388: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_389: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_390: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_391: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_392: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_393: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_394: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_395: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_396: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_397: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_398: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_399: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_400: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_401: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_402: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_403: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_404: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_405: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_406: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_407: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_408: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_409: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_410: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_411: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_412: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_413: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_414: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_415: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_416: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_417: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_418: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_419: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_420: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_421: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_422: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_423: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_424: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_425: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_426: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_427: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_428: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_429: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_430: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_431: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_432: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_433: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_434: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_435: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_436: forall (l : list bool) (lf10 : nat) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8))   (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma candidate_437: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_438: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_439: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_440: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_441: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_442: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_443: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_444: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_445: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_446: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_447: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_448: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_449: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10)))   (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma candidate_450: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_451: forall (l : list bool) (lf10 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) lf10))) (Nat.add lf6 lf6).
Lemma candidate_452: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_453: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_454: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_455: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_456: forall (lf10 : nat), @eq nat (Nat.add lf10 lf10) (Nat.add lf10 lf10).
Lemma candidate_457: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_458: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_459: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_460: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_461: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_462: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_463: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf6 lf8)).
Lemma candidate_464: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_465: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_466: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_467: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (Nat.add lf6 lf6).
Lemma candidate_468: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf6 lf8).
Lemma candidate_469: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_470: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_471: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_472: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_473: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_474: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_475: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_476: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_477: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_478: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_479: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_480: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_481: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_482: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_483: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_484: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_485: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_486: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_487: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_488: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_489: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_490: forall (l : list bool) (l0 : list bool) (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8))   (S      (S         (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l))            (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_491: forall (lf8 : nat), @eq nat (S (Nat.add (S lf8) lf8)) (S (S (Nat.add lf8 lf8))).
Lemma candidate_492: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_493: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_494: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_495: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_496: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_497: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_498: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_499: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_500: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_501: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_502: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_503: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_504: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_505: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_506: forall (lf8 : nat), @eq nat (S lf8) (S lf8).
Lemma candidate_507: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_508: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_509: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_510: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_511: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_512: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_513: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_514: forall (l : list bool) (l0 : list bool) (lf6 : nat), @eq nat (S (Nat.add lf6 (Nat.add (BV_to_nat l) (BV_to_nat l0))))   (Nat.add lf6 lf6).
Lemma candidate_515: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_516: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_517: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_518: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_519: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_520: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_521: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_522: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_523: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_524: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_525: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_526: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_527: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_528: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_529: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_530: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_531: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_532: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_533: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_534: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 9138 seconds
Duplicates removed: 472
Filtered by Quickchick: 27
Filtered by script: 8
Remaining: 27

Lemmas: 
Lemma candidate_13: forall (lf7 : nat) (lf9 : nat), @eq nat (Nat.add lf9 lf7) (Nat.add lf7 lf9).
Lemma candidate_11: forall (lf8 : nat) (lf6 : nat), @eq nat (Nat.add lf6 lf8) (Nat.add lf8 lf6).
Lemma candidate_23: forall (lf11 : nat) (lf10 : nat), @eq nat (Nat.add lf11 lf10) (Nat.add lf10 lf11).
Lemma candidate_6: forall (lf8 : nat) (lf6 : nat), @eq nat (S (Nat.add lf6 lf8)) (S (Nat.add lf8 lf6)).
Lemma candidate_96: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)).
Lemma candidate_35: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)).
Lemma candidate_94: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@cons bool false (@nil bool)) false)).
Lemma candidate_33: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@cons bool false (@nil bool)) false)).
Lemma candidate_4: forall (lf11 : nat) (lf10 : nat), @eq nat (S (Nat.add (S (Nat.add lf11 lf10)) (Nat.add lf11 lf10)))   (S (S (Nat.add (Nat.add lf11 lf11) (Nat.add lf10 lf10)))).
Lemma candidate_93: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_32: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_2: forall (l : list bool) (lf10 : nat), @eq nat   (S (Nat.add (S (Nat.add (BV_to_nat l) lf10)) (Nat.add (BV_to_nat l) lf10)))   (S (S (Nat.add (Nat.add (BV_to_nat l) (BV_to_nat l)) (Nat.add lf10 lf10)))).
Lemma candidate_3: forall (lf11 : nat) (l0 : list bool), @eq nat   (S      (Nat.add (S (Nat.add lf11 (BV_to_nat l0))) (Nat.add lf11 (BV_to_nat l0))))   (S      (S (Nat.add (Nat.add lf11 lf11) (Nat.add (BV_to_nat l0) (BV_to_nat l0))))).
Lemma candidate_144: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) false))).
Lemma candidate_252: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false)) (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) false))).
Lemma candidate_91: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat (Adder.BV_full_adder_sum l (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false))).
Lemma candidate_30: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat (Adder.BV_full_adder_sum l0 (@nil bool) ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false))).
Lemma candidate_95: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)).
Lemma candidate_34: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)).
Lemma candidate_92: forall (l : list bool), @eq nat (BV_to_nat l)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l (Adder.BV_full_adder_carry l (@nil bool) false))).
Lemma candidate_31: forall (l0 : list bool), @eq nat (BV_to_nat l0)   (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 (Adder.BV_full_adder_carry l0 (@nil bool) false))).
Lemma candidate_145: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false))).
Lemma candidate_253: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false))).
Lemma candidate_143: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_251: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat (Adder.BV_full_adder_carry l0 (@nil bool) false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
Lemma candidate_142: forall (l : list bool), @eq nat (Nat.add (BV_to_nat l) (BV_to_nat l))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l false)))).
Lemma candidate_250: forall (l0 : list bool), @eq nat (Nat.add (BV_to_nat l0) (BV_to_nat l0))   (Nat.add (Bool_compl.bool_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, bool := match l0 with | nil => fun z : bool => z | cons b l1 => fun z : bool => F0 l1 (HalfAdder.half_adder_carry b z) end) l0 false)) (Nat.add (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)) (BV.BV_to_nat ((fix F0 (l0 : list bool) : forall _ : bool, BV.BV := match l0 with | nil => fun _ : bool => BV.nilbv | cons b l1 => fun z : bool => BV.consbv (HalfAdder.half_adder_sum b z) (F0 l1 (HalfAdder.half_adder_carry b z)) end) l0 false)))).
File Information
- File name: goal27
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal27_qreva_append_53_append_nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal27_qreva_append_53_append_nil
- Namespace: adtind
- Proof name: qreva_lfappend
- Theorem: Theorem qreva_lfappend: forall x0 y : lst, @eq lst (qreva x0 y) (lfappend (rev x0) y).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (rev x) (Cons n Nil))
  (lfappend (lfappend (rev x) (Cons n Nil)) Nil)

* Hypothesis:
IHx : forall y : lst, @eq lst (qreva x y) (lfappend (rev x) y)
x : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
forall y : lst, @eq lst (qreva x y) (lfappend (rev x) y) : Prop
lfappend (rev x) (Cons n Nil) : lst
lfappend (lfappend (rev x) (Cons n Nil)) Nil : lst
x : lst
@eq lst (lfappend (rev x) (Cons n Nil))
  (lfappend (lfappend (rev x) (Cons n Nil)) Nil) : Prop
lst : Set
Cons n Nil : lst
natural : Set
lfappend (rev x) _UNBOUND_REL_1 : lst
qreva x _UNBOUND_REL_1 : lst
n : natural
rev x : lst
@eq lst (qreva x _UNBOUND_REL_1) (lfappend (rev x) _UNBOUND_REL_1) : Prop
Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = Cons n Nil
lf1 : lst = lfappend (lfappend (rev x) (Cons n Nil)) Nil
lf4 : lst = rev x
lf5 : lst = Nil
lf2 : lst = lfappend (rev x) (Cons n Nil)

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) lf1.
Lemma conj6: forall (x : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) lf1.
Lemma conj9: forall (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf2 lf5).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) lf5).
Lemma conj11: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma conj12: forall (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) Nil).
Lemma conj14: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) lf5).
Lemma conj16: forall (x : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) Nil).
Lemma conj18: forall (lf5 : lst) (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5)) lf1.
Lemma conj20: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5)) lf1.
Lemma conj24: forall (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n Nil)) lf1.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5))
  (lfappend (lfappend lf4 (Cons n lf5)) lf5).
Lemma conj28: forall (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma conj30: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5))
  (lfappend (lfappend (rev x) (Cons n lf5)) lf5).
Lemma conj32: forall (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n Nil))
  (lfappend (lfappend (rev x) (Cons n Nil)) Nil).


<---VALIDITY CHECKS--->
Time elapsed: 88 seconds
Valid:
Lemma conj32: forall (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n Nil))
  (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma conj28: forall (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma conj16: forall (x : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) Nil).
Lemma conj12: forall (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) Nil).
Lemma conj11: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).

Invalid:
Lemma conj30: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5))
  (lfappend (lfappend (rev x) (Cons n lf5)) lf5).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5))
  (lfappend (lfappend lf4 (Cons n lf5)) lf5).
Lemma conj24: forall (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n Nil)) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5)) lf1.
Lemma conj20: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf1.
Lemma conj18: forall (lf5 : lst) (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5)) lf1.
Lemma conj14: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) lf5).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) lf5).
Lemma conj9: forall (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf2 lf5).
Lemma conj6: forall (x : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 100 seconds
Generalizations:
Lemma conj30: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5))
  (lfappend (lfappend (rev x) (Cons n lf5)) lf5).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5))
  (lfappend (lfappend lf4 (Cons n lf5)) lf5).
Lemma conj24: forall (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n Nil)) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5)) lf1.
Lemma conj20: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf1.
Lemma conj18: forall (lf5 : lst) (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5)) lf1.
Lemma conj14: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) lf5).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) lf5).
Lemma conj9: forall (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf2 lf5).
Lemma conj6: forall (x : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 118 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) lf1.
Lemma conj6: forall (x : lst) (lf1 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) lf1.
Lemma conj9: forall (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf2 lf5).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) lf5).
Lemma conj14: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) lf5).
Lemma conj18: forall (lf5 : lst) (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5)) lf1.
Lemma conj20: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5)) lf1.
Lemma conj24: forall (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n Nil)) lf1.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf5))
  (lfappend (lfappend lf4 (Cons n lf5)) lf5).
Lemma conj30: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf5))
  (lfappend (lfappend (rev x) (Cons n lf5)) lf5).


<---CREATE SKETCHES--->
Time elapsed: 118 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst (##hole##) lf1
Sketch conj2_term_sketch0 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj6_sketch0 : @eq lst (##hole##) lf1
Sketch conj6_sketch1 : @eq lst (lfappend (##hole##) lf3) lf1
Sketch conj6_term_sketch0 : @eq lst (lfappend (rev x) lf3) (##hole##)
Sketch conj6_term_sketch1 : @eq lst (rev x) (##hole##)
Sketch conj9_sketch0 : @eq lst lf2 (##hole##)
Sketch conj9_term_sketch0 : @eq lst (lfappend lf2 lf5) (##hole##)
Sketch conj10_sketch0 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj10_sketch1 : @eq lst (##hole##) (lfappend (##hole##) lf5)
Sketch conj10_term_sketch0 : @eq lst (lfappend (lfappend lf4 lf3) lf5) (##hole##)
Sketch conj10_term_sketch1 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj14_sketch0 : @eq lst (lfappend (rev x) lf3) (##hole##)
Sketch conj14_sketch1 : @eq lst (##hole##) (lfappend (##hole##) lf5)
Sketch conj14_sketch2 : @eq lst (lfappend (##hole##) lf3) (lfappend (lfappend (##hole##) lf3) lf5)
Sketch conj14_term_sketch0 : @eq lst (lfappend (lfappend (rev x) lf3) lf5) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (lfappend (rev x) lf3) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj18_sketch0 : @eq lst (lfappend lf4 (##hole##)) lf1
Sketch conj18_sketch1 : @eq lst (##hole##) lf1
Sketch conj18_term_sketch0 : @eq lst (Cons n lf5) (##hole##)
Sketch conj18_term_sketch1 : @eq lst (lfappend lf4 (Cons n lf5)) (##hole##)
Sketch conj20_sketch0 : @eq lst (lfappend lf4 (##hole##)) lf1
Sketch conj20_sketch1 : @eq lst (##hole##) lf1
Sketch conj20_sketch2 : @eq lst (lfappend lf4 (Cons n (##hole##))) lf1
Sketch conj20_term_sketch0 : @eq lst (Cons n Nil) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj20_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj22_sketch0 : @eq lst (lfappend (rev x) (##hole##)) lf1
Sketch conj22_sketch1 : @eq lst (##hole##) lf1
Sketch conj22_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf5)) lf1
Sketch conj22_term_sketch0 : @eq lst (Cons n lf5) (##hole##)
Sketch conj22_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf5)) (##hole##)
Sketch conj22_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj24_sketch0 : @eq lst (##hole##) lf1
Sketch conj24_sketch1 : @eq lst (lfappend (rev x) (##hole##)) lf1
Sketch conj24_sketch2 : @eq lst (lfappend (rev x) (Cons n (##hole##))) lf1
Sketch conj24_sketch3 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf1
Sketch conj24_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj24_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj24_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj26_sketch0 : @eq lst (lfappend lf4 (##hole##)) (lfappend (lfappend lf4 (##hole##)) lf5)
Sketch conj26_sketch1 : @eq lst (lfappend lf4 (Cons n lf5)) (##hole##)
Sketch conj26_sketch2 : @eq lst (##hole##) (lfappend (##hole##) lf5)
Sketch conj26_term_sketch0 : @eq lst (Cons n lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (lfappend lf4 (Cons n lf5)) (##hole##)
Sketch conj30_sketch0 : @eq lst (lfappend (rev x) (##hole##))
  (lfappend (lfappend (rev x) (##hole##)) lf5)
Sketch conj30_sketch1 : @eq lst (##hole##) (lfappend (##hole##) lf5)
Sketch conj30_sketch2 : @eq lst (lfappend (rev x) (Cons n lf5)) (##hole##)
Sketch conj30_sketch3 : @eq lst (lfappend (##hole##) (Cons n lf5))
  (lfappend (lfappend (##hole##) (Cons n lf5)) lf5)
Sketch conj30_term_sketch0 : @eq lst (Cons n lf5) (##hole##)
Sketch conj30_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf5)) (##hole##)
Sketch conj30_term_sketch2 : @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5) (##hole##)
Sketch conj30_term_sketch3 : @eq lst (rev x) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 790 seconds
Problems per Sketch:
Sketch conj24_sketch3 --> Problem  synth_23
Sketch conj30_sketch0 --> Problem  synth_26
Sketch conj22_sketch0 --> Problem  synth_19
Sketch conj26_term_sketch1 --> Problem  synth_14
Sketch conj14_sketch2 --> Problem  synth_10
Sketch conj26_sketch2 --> Problem  synth_8
Sketch conj10_term_sketch1 --> Problem  synth_2
Sketch conj30_sketch3 --> Problem  synth_27
Sketch conj22_term_sketch2 --> Problem  synth_5
Sketch conj20_sketch2 --> Problem  synth_15
Sketch conj14_term_sketch2 --> Problem  synth_5
Sketch conj30_sketch1 --> Problem  synth_8
Sketch conj26_sketch0 --> Problem  synth_25
Sketch conj20_term_sketch2 --> Problem  synth_18
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch3 --> Problem  synth_5
Sketch conj24_sketch2 --> Problem  synth_22
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj24_sketch1 --> Problem  synth_19
Sketch conj9_sketch0 --> Problem  synth_6
Sketch conj22_sketch1 --> Problem  synth_1
Sketch conj26_term_sketch2 --> Problem  synth_14
Sketch conj20_sketch1 --> Problem  synth_1
Sketch conj14_term_sketch1 --> Problem  synth_4
Sketch conj24_sketch0 --> Problem  synth_1
Sketch conj26_sketch1 --> Problem  synth_14
Sketch conj30_sketch2 --> Problem  synth_21
Sketch conj10_sketch1 --> Problem  synth_8
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj9_term_sketch0 --> Problem  synth_7
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj18_sketch0 --> Problem  synth_12
Sketch conj20_term_sketch1 --> Problem  synth_17
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj30_term_sketch2 --> Problem  synth_21
Sketch conj10_term_sketch0 --> Problem  synth_9
Sketch conj22_term_sketch0 --> Problem  synth_13
Sketch conj22_sketch2 --> Problem  synth_20
Sketch conj20_sketch0 --> Problem  synth_12
Sketch conj18_term_sketch0 --> Problem  synth_13
Sketch conj24_term_sketch0 --> Problem  synth_24
Sketch conj26_term_sketch0 --> Problem  synth_13
Sketch conj30_term_sketch1 --> Problem  synth_21
Sketch conj20_term_sketch0 --> Problem  synth_16
Sketch conj24_term_sketch2 --> Problem  synth_18
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj18_term_sketch1 --> Problem  synth_14
Sketch conj22_term_sketch1 --> Problem  synth_21
Sketch conj14_sketch0 --> Problem  synth_4
Sketch conj14_term_sketch0 --> Problem  synth_11
Sketch conj30_term_sketch0 --> Problem  synth_13
Sketch conj24_term_sketch3 --> Problem  synth_5
Sketch conj10_sketch0 --> Problem  synth_2
Sketch conj24_term_sketch1 --> Problem  synth_16
Sketch conj14_sketch1 --> Problem  synth_8
Sketch conj18_sketch1 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1015 seconds

Problem: synth_22
 Nil

Problem: synth_20

Problem: synth_18
 Nil

Problem: synth_17
 lfappend (lfappend lf4 Nil) (Cons n Nil)
 qreva (qreva lf4 Nil) (Cons n Nil)
 lfappend (rev (qreva lf4 Nil)) (Cons n Nil)
 qreva (rev lf4) (Cons n Nil)
 lfappend lf4 (Cons n Nil)
 lfappend (rev (rev lf4)) (Cons n Nil)

Problem: synth_21
 lfappend (rev x) (Cons n (rev lf5))
 lfappend (rev x) (Cons n lf5)
 qreva x (Cons n (rev lf5))
 qreva x (Cons n lf5)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_26

Problem: synth_9
 qreva (rev lf4) (rev lf3)
 rev (lfappend lf3 (rev lf4))
 rev (qreva lf3 (rev lf4))
 qreva (rev lf4) lf3
 lfappend lf4 (rev lf3)
 lfappend lf4 lf3

Problem: synth_25

Problem: synth_13
 qreva lf5 (Cons n Nil)
 lfappend (rev (rev lf5)) (Cons n Nil)
 lfappend (rev lf5) (Cons n Nil)
 Cons n (rev lf5)
 Cons n lf5
 Cons n Nil

Problem: synth_6
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_11
 lfappend (rev x) (rev lf3)
 rev (lfappend lf3 x)
 rev (qreva lf3 x)
 lfappend (rev x) lf3
 qreva x (rev lf3)
 qreva x lf3

Problem: synth_7
 rev (rev lf2)
 lfappend lf2 lf5
 lfappend lf5 lf2
 qreva lf5 lf2
 lfappend lf2 Nil
 lf2

Problem: synth_4
 lfappend (rev x) (rev lf3)
 rev (lfappend lf3 x)
 rev (qreva lf3 x)
 lfappend (rev x) lf3
 qreva x (rev lf3)
 qreva x lf3

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_23

Problem: synth_27

Problem: synth_16
 Cons n Nil

Problem: synth_19

Problem: synth_15
 Nil

Problem: synth_14
 qreva (rev lf4) (Cons n lf5)
 qreva (rev lf4) (Cons n Nil)
 lfappend lf4 (Cons n (rev lf5))
 lfappend lf4 (Cons n lf5)
 lfappend lf4 (Cons n Nil)
 lfappend (rev (rev lf4)) (Cons n Nil)

Problem: synth_10

Problem: synth_8

Problem: synth_24
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_3

Problem: synth_12

Problem: synth_5
 lfappend (qreva x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_2
 qreva (rev lf4) (rev lf3)
 rev (lfappend lf3 (rev lf4))
 rev (qreva lf3 (rev lf4))
 qreva (rev lf4) lf3
 lfappend lf4 (rev lf3)
 lfappend lf4 lf3

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1015 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_2: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_3: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) Nil).
Lemma candidate_4: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) Nil).
Lemma candidate_5: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_8: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_9: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_10: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_11: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_12: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) (rev lf3)).
Lemma candidate_13: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_14: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (qreva lf3 (rev lf4))).
Lemma candidate_15: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) lf3).
Lemma candidate_16: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (rev lf3)).
Lemma candidate_17: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 lf3).
Lemma candidate_18: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_20: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_21: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_22: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_23: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_24: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev lf3)).
Lemma candidate_25: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend lf3 x)).
Lemma candidate_26: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (qreva lf3 x)).
Lemma candidate_27: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) lf3).
Lemma candidate_28: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (qreva x (rev lf3)).
Lemma candidate_29: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (qreva x lf3).
Lemma candidate_30: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_31: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_32: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_33: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_34: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_35: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_36: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_37: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_38: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_39: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_40: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_41: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_42: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf5) (rev (rev lf2)).
Lemma candidate_43: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf5) (lfappend lf2 lf5).
Lemma candidate_44: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf5) (lfappend lf5 lf2).
Lemma candidate_45: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf5) (qreva lf5 lf2).
Lemma candidate_46: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf5) (lfappend lf2 Nil).
Lemma candidate_47: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf5) (lf2).
Lemma candidate_48: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) (rev lf3)).
Lemma candidate_49: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_50: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (qreva lf3 (rev lf4))).
Lemma candidate_51: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) lf3).
Lemma candidate_52: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (rev lf3)).
Lemma candidate_53: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 lf3).
Lemma candidate_54: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 lf3) lf5) (qreva (rev lf4) (rev lf3)).
Lemma candidate_55: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 lf3) lf5) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_56: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 lf3) lf5) (rev (qreva lf3 (rev lf4))).
Lemma candidate_57: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 lf3) lf5) (qreva (rev lf4) lf3).
Lemma candidate_58: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 lf3) lf5) (lfappend lf4 (rev lf3)).
Lemma candidate_59: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 lf3) lf5) (lfappend lf4 lf3).
Lemma candidate_60: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) (rev lf3)).
Lemma candidate_61: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_62: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (qreva lf3 (rev lf4))).
Lemma candidate_63: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) lf3).
Lemma candidate_64: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (rev lf3)).
Lemma candidate_65: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 lf3).
Lemma candidate_66: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev lf3)).
Lemma candidate_67: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend lf3 x)).
Lemma candidate_68: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (qreva lf3 x)).
Lemma candidate_69: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) lf3).
Lemma candidate_70: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (qreva x (rev lf3)).
Lemma candidate_71: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (qreva x lf3).
Lemma candidate_72: forall (lf3 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf3) lf5) (lfappend (rev x) (rev lf3)).
Lemma candidate_73: forall (lf3 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf3) lf5) (rev (lfappend lf3 x)).
Lemma candidate_74: forall (lf3 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf3) lf5) (rev (qreva lf3 x)).
Lemma candidate_75: forall (lf3 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf3) lf5) (lfappend (rev x) lf3).
Lemma candidate_76: forall (lf3 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf3) lf5) (qreva x (rev lf3)).
Lemma candidate_77: forall (lf3 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf3) lf5) (qreva x lf3).
Lemma candidate_78: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev lf3)).
Lemma candidate_79: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend lf3 x)).
Lemma candidate_80: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (qreva lf3 x)).
Lemma candidate_81: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) lf3).
Lemma candidate_82: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (qreva x (rev lf3)).
Lemma candidate_83: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (qreva x lf3).
Lemma candidate_84: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_85: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_86: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_87: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_88: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_89: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_90: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_91: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_92: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_93: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_94: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_95: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_96: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (qreva lf5 (Cons n Nil)).
Lemma candidate_97: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_98: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev lf5) (Cons n Nil)).
Lemma candidate_99: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n (rev lf5)).
Lemma candidate_100: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n lf5).
Lemma candidate_101: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n Nil).
Lemma candidate_102: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n lf5)).
Lemma candidate_103: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n Nil)).
Lemma candidate_104: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n (rev lf5))).
Lemma candidate_105: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n lf5)).
Lemma candidate_106: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_107: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_108: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_109: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_110: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_111: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_112: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_113: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_114: forall (n : natural) (lf1 : lst) (lf4 : lst), @eq lst (lfappend lf4 (Cons n (Nil))) lf1.
Lemma candidate_115: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_116: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_117: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (qreva (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_118: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (qreva lf4 Nil)) (Cons n Nil)).
Lemma candidate_119: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (qreva (rev lf4) (Cons n Nil)).
Lemma candidate_120: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_122: @eq lst Nil (Nil).
Lemma candidate_123: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_124: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_125: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_126: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_127: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_128: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_129: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (qreva lf5 (Cons n Nil)).
Lemma candidate_130: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_131: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev lf5) (Cons n Nil)).
Lemma candidate_132: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n (rev lf5)).
Lemma candidate_133: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n lf5).
Lemma candidate_134: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n Nil).
Lemma candidate_135: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n (rev lf5))).
Lemma candidate_136: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n lf5)).
Lemma candidate_137: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n (rev lf5))).
Lemma candidate_138: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n lf5)).
Lemma candidate_139: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n Nil)).
Lemma candidate_140: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_141: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_142: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_143: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_144: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_145: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_146: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_147: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_148: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_149: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_150: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_151: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_152: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_153: forall (n : natural) (lf1 : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Nil))) lf1.
Lemma candidate_154: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_155: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_156: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_157: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_158: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_159: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_160: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_161: @eq lst Nil (Nil).
Lemma candidate_162: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_163: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_164: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_165: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_166: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_167: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_168: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n lf5)).
Lemma candidate_169: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n Nil)).
Lemma candidate_170: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n (rev lf5))).
Lemma candidate_171: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n lf5)).
Lemma candidate_172: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_173: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_174: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (qreva lf5 (Cons n Nil)).
Lemma candidate_175: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_176: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev lf5) (Cons n Nil)).
Lemma candidate_177: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n (rev lf5)).
Lemma candidate_178: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n lf5).
Lemma candidate_179: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n Nil).
Lemma candidate_180: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5)   (qreva (rev lf4) (Cons n lf5)).
Lemma candidate_181: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5)   (qreva (rev lf4) (Cons n Nil)).
Lemma candidate_182: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5)   (lfappend lf4 (Cons n (rev lf5))).
Lemma candidate_183: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5)   (lfappend lf4 (Cons n lf5)).
Lemma candidate_184: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5)   (lfappend lf4 (Cons n Nil)).
Lemma candidate_185: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (Cons n lf5)) lf5)   (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_186: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n lf5)).
Lemma candidate_187: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n Nil)).
Lemma candidate_188: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n (rev lf5))).
Lemma candidate_189: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n lf5)).
Lemma candidate_190: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_191: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_192: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n (rev lf5))).
Lemma candidate_193: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n lf5)).
Lemma candidate_194: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n (rev lf5))).
Lemma candidate_195: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n lf5)).
Lemma candidate_196: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n Nil)).
Lemma candidate_197: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_198: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (qreva lf5 (Cons n Nil)).
Lemma candidate_199: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_200: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (lfappend (rev lf5) (Cons n Nil)).
Lemma candidate_201: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n (rev lf5)).
Lemma candidate_202: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n lf5).
Lemma candidate_203: forall (n : natural) (lf5 : lst), @eq lst (Cons n lf5) (Cons n Nil).
Lemma candidate_204: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n (rev lf5))).
Lemma candidate_205: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n lf5)).
Lemma candidate_206: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n (rev lf5))).
Lemma candidate_207: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n lf5)).
Lemma candidate_208: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (qreva x (Cons n Nil)).
Lemma candidate_209: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (Cons n lf5)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_210: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5)   (lfappend (rev x) (Cons n (rev lf5))).
Lemma candidate_211: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5)   (lfappend (rev x) (Cons n lf5)).
Lemma candidate_212: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5)   (qreva x (Cons n (rev lf5))).
Lemma candidate_213: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5) (qreva x (Cons n lf5)).
Lemma candidate_214: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5) (qreva x (Cons n Nil)).
Lemma candidate_215: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf5)) lf5)   (lfappend (rev x) (Cons n Nil)).
Lemma candidate_216: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_217: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_218: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_219: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_220: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_221: forall (x : lst), @eq lst (rev x) (rev x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1319 seconds
Duplicates removed: 124
Filtered by Quickchick: 50
Filtered by script: 16
Remaining: 31

Lemmas: 
Lemma candidate_39: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_9: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_34: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_10: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_5: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_38: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_37: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_8: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_31: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_33: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_32: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_36: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_30: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_15: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (qreva (rev lf4) lf3).
Lemma candidate_26: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (qreva lf3 x)).
Lemma candidate_14: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (qreva lf3 (rev lf4))).
Lemma candidate_4: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) Nil).
Lemma candidate_119: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (qreva (rev lf4) (Cons n Nil)).
Lemma candidate_102: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (qreva (rev lf4) (Cons n lf5)).
Lemma candidate_3: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (lfappend (rev x) lf3) Nil).
Lemma candidate_117: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (qreva (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_155: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_154: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_116: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_2: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_118: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (qreva lf4 Nil)) (Cons n Nil)).
Lemma candidate_156: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_157: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
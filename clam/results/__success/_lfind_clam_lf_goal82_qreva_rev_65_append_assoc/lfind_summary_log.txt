LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal82_qreva_rev_65_append_assoc

Number of Lemmas: 784
Number of Lemmas (after duplicates removed): 204
Number of Lemmas (after QuickChick used to filter): 136
* Number of Candidate Lemmas: 112

Time until ranking: 5394
Time to complete: 11780

Stuck state true independent of hypotheses: true

Category 1:
Count = 3

Lemma candidate_123: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) y) (lfappend lf6 (Cons n y)).
Lemma candidate_2: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (lfappend (lfappend lf6 (Cons n Nil)) y).
Lemma candidate_149: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y)   (lfappend (rev x) (Cons n y)).

Category 2:
Count = 16

Lemma candidate_180: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_41: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_316: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (qreva (qreva lf4 x) y) (lfappend (lfappend (rev x) lf4) y).
Lemma candidate_46: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) lf4) y) (qreva (qreva lf4 x) y).
Lemma candidate_319: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (qreva x (lfappend lf4 y)) (lfappend (lfappend (rev x) lf4) y).
Lemma candidate_49: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) lf4) y) (qreva x (lfappend lf4 y)).
Lemma candidate_295: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf4 y)) (lfappend (lfappend lf6 lf4) y).
Lemma candidate_31: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) y) (lfappend lf6 (lfappend lf4 y)).
Lemma candidate_757: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n y)) (lfappend (lfappend (rev x) (Cons n Nil)) y).
Lemma candidate_469: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y)) (lfappend (qreva x (Cons n Nil)) y).
Lemma candidate_150: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y) (qreva x (Cons n y)).
Lemma candidate_317: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 y))   (lfappend (lfappend (rev x) lf4) y).
Lemma candidate_47: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) lf4) y)   (lfappend (rev x) (lfappend lf4 y)).
Lemma candidate_486: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (qreva (rev lf4) y))   (lfappend (lfappend (rev x) lf4) y).
Lemma candidate_615: forall (lf7 : lst) (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend lf7 y)))   (lfappend (lfappend lf6 (Cons n lf7)) y).
Lemma candidate_670: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (lfappend lf7 y)))   (lfappend (lfappend (rev x) (Cons n lf7)) y).

Category 3 (provable):
Count = 5

Lemma candidate_163: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_7: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_205: forall (n : natural) (y : lst), @eq lst (Cons n y) (Cons n (lfappend y Nil)).
Lemma candidate_124: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_417: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y))   (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) y).

Category 3 (not provable):
Count = 88

Lemma candidate_162: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_55: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_161: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_160: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_5: forall (lf3 : lst), @eq lst lf3 (qreva (rev lf3) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst lf3 (rev (qreva lf3 Nil)).
Lemma candidate_52: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_54: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_53: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_159: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_3: forall (lf3 : lst), @eq lst lf3 (qreva (qreva lf3 Nil) Nil).
Lemma candidate_204: forall (n : natural) (y : lst), @eq lst (Cons n y) (Cons n (rev (rev y))).
Lemma candidate_235: forall (y : lst) (lf2 : lst), @eq lst (qreva (rev lf2) y) (lfappend lf2 y).
Lemma candidate_51: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_13: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 y) (qreva (rev lf2) y).
Lemma candidate_202: forall (n : natural) (y : lst), @eq lst (Cons n y) (rev (qreva y (Cons n Nil))).
Lemma candidate_201: forall (n : natural) (y : lst), @eq lst (Cons n y) (Cons n (qreva (rev y) Nil)).
Lemma candidate_169: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (qreva (rev lf6) lf5).
Lemma candidate_24: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (qreva (rev lf6) lf4).
Lemma candidate_234: forall (y : lst) (lf2 : lst), @eq lst (rev (qreva y (rev lf2))) (lfappend lf2 y).
Lemma candidate_12: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 y) (rev (qreva y (rev lf2))).
Lemma candidate_232: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 (rev (rev y))) (lfappend lf2 y).
Lemma candidate_10: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 y) (lfappend lf2 (rev (rev y))).
Lemma candidate_168: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (qreva lf5 (rev lf6))).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (qreva lf4 (rev lf6))).
Lemma candidate_233: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 (lfappend y Nil)) (lfappend lf2 y).
Lemma candidate_203: forall (n : natural) (y : lst), @eq lst (Cons n y) (rev (lfappend (rev y) (Cons n Nil))).
Lemma candidate_178: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev (rev lf5))).
Lemma candidate_11: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 y) (lfappend lf2 (lfappend y Nil)).
Lemma candidate_166: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_231: forall (y : lst) (lf2 : lst), @eq lst (qreva (rev lf2) (lfappend y Nil)) (lfappend lf2 y).
Lemma candidate_179: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (lfappend lf5 Nil)).
Lemma candidate_9: forall (y : lst) (lf2 : lst), @eq lst (lfappend lf2 y) (qreva (rev lf2) (lfappend y Nil)).
Lemma candidate_167: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_199: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (qreva (rev lf6) (Cons n y)).
Lemma candidate_165: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (qreva (rev lf6) (lfappend lf5 Nil)).
Lemma candidate_216: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y)) (rev (qreva y (Cons n x))).
Lemma candidate_127: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (qreva (rev lf6) (Cons n Nil)).
Lemma candidate_69: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (qreva (rev lf6) (Cons n lf7)).
Lemma candidate_198: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (rev (qreva y (Cons n (rev lf6)))).
Lemma candidate_177: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y)) (qreva x (Cons n (rev (rev y)))).
Lemma candidate_291: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (qreva lf4 (rev lf6)) y) (lfappend (lfappend lf6 lf4) y).
Lemma candidate_195: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (lfappend lf6 (Cons n (rev (rev y)))).
Lemma candidate_27: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) y) (qreva (qreva lf4 (rev lf6)) y).
Lemma candidate_125: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (qreva (qreva lf6 Nil) (Cons n Nil)).
Lemma candidate_215: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y)) (rev (lfappend (rev y) (Cons n x))).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y)) (qreva x (Cons n (lfappend y Nil))).
Lemma candidate_438: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 (qreva (rev lf4) y)) (lfappend (lfappend lf6 lf4) y).
Lemma candidate_293: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (rev lf6) (lfappend lf4 y)) (lfappend (lfappend lf6 lf4) y).
Lemma candidate_196: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (lfappend lf6 (Cons n (lfappend y Nil))).
Lemma candidate_29: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) y) (qreva (rev lf6) (lfappend lf4 y)).
Lemma candidate_129: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_717: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (qreva (rev lf6) (Cons n y)) (lfappend (lfappend lf6 (Cons n Nil)) y).
Lemma candidate_420: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (lfappend (qreva (rev lf6) (Cons n Nil)) y).
Lemma candidate_197: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y)) (rev (lfappend (rev y) (Cons n (rev lf6)))).
Lemma candidate_140: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_139: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_122: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) y) (qreva (rev lf6) (Cons n y)).
Lemma candidate_755: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva y (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) y).
Lemma candidate_148: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y)   (rev (qreva y (Cons n x))).
Lemma candidate_435: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (qreva y (rev lf4))))   (lfappend (lfappend lf6 lf4) y).
Lemma candidate_126: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (qreva lf6 Nil)) (Cons n Nil)).
Lemma candidate_716: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (rev (qreva y (Cons n (rev lf6))))   (lfappend (lfappend lf6 (Cons n Nil)) y).
Lemma candidate_418: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y))   (lfappend (qreva (qreva lf6 Nil) (Cons n Nil)) y).
Lemma candidate_141: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) y)   (rev (qreva y (Cons n (rev lf6)))).
Lemma candidate_752: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (rev (rev y))))   (lfappend (lfappend (rev x) (Cons n Nil)) y).
Lemma candidate_145: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y)   (qreva x (Cons n (rev (rev y)))).
Lemma candidate_713: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev (rev y))))   (lfappend (lfappend lf6 (Cons n Nil)) y).
Lemma candidate_422: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) y).
Lemma candidate_142: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_118: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) y)   (lfappend lf6 (Cons n (rev (rev y)))).
Lemma candidate_754: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) y).
Lemma candidate_753: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (lfappend y Nil)))   (lfappend (lfappend (rev x) (Cons n Nil)) y).
Lemma candidate_483: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev (qreva y (rev lf4))))   (lfappend (lfappend (rev x) lf4) y).
Lemma candidate_466: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) y).
Lemma candidate_465: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) y).
Lemma candidate_147: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y)   (rev (lfappend (rev y) (Cons n x))).
Lemma candidate_146: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y)   (qreva x (Cons n (lfappend y Nil))).
Lemma candidate_714: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend y Nil)))   (lfappend (lfappend lf6 (Cons n Nil)) y).
Lemma candidate_119: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) y)   (lfappend lf6 (Cons n (lfappend y Nil))).
Lemma candidate_715: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (Cons n (rev lf6))))   (lfappend (lfappend lf6 (Cons n Nil)) y).
Lemma candidate_419: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n y))   (lfappend (lfappend (rev (qreva lf6 Nil)) (Cons n Nil)) y).
Lemma candidate_120: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) y)   (rev (lfappend (rev y) (Cons n (rev lf6)))).
Lemma candidate_467: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) y).
Lemma candidate_468: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n y))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) y).
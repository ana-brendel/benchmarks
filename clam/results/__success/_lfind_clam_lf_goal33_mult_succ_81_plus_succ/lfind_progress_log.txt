File Information
- File name: goal33
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal33_mult_succ_81_plus_succ
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal33_mult_succ_81_plus_succ
- Namespace: adtind
- Proof name: mult_succ
- Theorem: Theorem mult_succ: forall x0 y0 : natural,
@eq natural (plus (mult x0 y0) x0) (mult x0 (Succ y0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (Succ (plus (mult x (Succ y)) y))
  (plus (mult x (Succ y)) (Succ y))

* Hypothesis:
IHx : @eq natural (plus (mult x y) x) (mult x (Succ y))
x : natural
y : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
Succ (plus (mult x (Succ y)) y) : natural
mult x (Succ y) : natural
@eq natural (plus (mult x y) x) (mult x (Succ y)) : Prop
mult x y : natural
plus (mult x y) x : natural
x : natural
plus (mult x (Succ y)) y : natural
plus (mult x (Succ y)) (Succ y) : natural
y : natural
@eq natural (Succ (plus (mult x (Succ y)) y))
  (plus (mult x (Succ y)) (Succ y)) : Prop
Succ y : natural
natural : Set

* Functions:
Succ  : forall _ : natural, natural
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = plus (mult x (Succ y)) y
lf1 : natural = Succ (plus (mult x (Succ y)) y)
lf4 : natural = mult x (Succ y)
lf5 : natural = Succ y
lf2 : natural = plus (mult x (Succ y)) (Succ y)

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj2: forall (lf5 : natural) (lf4 : natural) (lf1 : natural), @eq natural lf1 (plus lf4 lf5).
Lemma conj4: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus lf4 (Succ y)).
Lemma conj6: forall (lf5 : natural) (x : natural) (lf1 : natural), @eq natural lf1 (plus (mult x lf5) lf5).
Lemma conj8: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus (mult x (Succ y)) (Succ y)).
Lemma conj9: forall (lf2 : natural) (lf3 : natural), @eq natural (Succ lf3) lf2.
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 lf5).
Lemma conj12: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 (Succ y)).
Lemma conj14: forall (lf5 : natural) (x : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x lf5) lf5).
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x (Succ y)) (Succ y)).
Lemma conj25: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) lf2.
Lemma conj26: forall (lf5 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 lf5).
Lemma conj28: forall (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 (Succ y)).
Lemma conj29: forall (lf2 : natural) (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) lf2.
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma conj31: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x (Succ y)) y)) lf2.
Lemma conj32: forall (x : natural) (y : natural), @eq natural (Succ (plus (mult x (Succ y)) y))
  (plus (mult x (Succ y)) (Succ y)).


<---VALIDITY CHECKS--->
Time elapsed: 31 seconds
Valid:
Lemma conj32: forall (x : natural) (y : natural), @eq natural (Succ (plus (mult x (Succ y)) y))
  (plus (mult x (Succ y)) (Succ y)).
Lemma conj28: forall (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 (Succ y)).

Invalid:
Lemma conj31: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x (Succ y)) y)) lf2.
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma conj29: forall (lf2 : natural) (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) lf2.
Lemma conj26: forall (lf5 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 lf5).
Lemma conj25: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) lf2.
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x (Succ y)) (Succ y)).
Lemma conj14: forall (lf5 : natural) (x : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x lf5) lf5).
Lemma conj12: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 (Succ y)).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 lf5).
Lemma conj9: forall (lf2 : natural) (lf3 : natural), @eq natural (Succ lf3) lf2.
Lemma conj8: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus (mult x (Succ y)) (Succ y)).
Lemma conj6: forall (lf5 : natural) (x : natural) (lf1 : natural), @eq natural lf1 (plus (mult x lf5) lf5).
Lemma conj4: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus lf4 (Succ y)).
Lemma conj2: forall (lf5 : natural) (lf4 : natural) (lf1 : natural), @eq natural lf1 (plus lf4 lf5).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 43 seconds
Generalizations:
Lemma conj31: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x (Succ y)) y)) lf2.
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma conj29: forall (lf2 : natural) (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) lf2.
Lemma conj26: forall (lf5 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 lf5).
Lemma conj25: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) lf2.
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x (Succ y)) (Succ y)).
Lemma conj14: forall (lf5 : natural) (x : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x lf5) lf5).
Lemma conj12: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 (Succ y)).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 lf5).
Lemma conj9: forall (lf2 : natural) (lf3 : natural), @eq natural (Succ lf3) lf2.
Lemma conj8: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus (mult x (Succ y)) (Succ y)).
Lemma conj6: forall (lf5 : natural) (x : natural) (lf1 : natural), @eq natural lf1 (plus (mult x lf5) lf5).
Lemma conj4: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus lf4 (Succ y)).
Lemma conj2: forall (lf5 : natural) (lf4 : natural) (lf1 : natural), @eq natural lf1 (plus lf4 lf5).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 66 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj2: forall (lf5 : natural) (lf4 : natural) (lf1 : natural), @eq natural lf1 (plus lf4 lf5).
Lemma conj4: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus lf4 (Succ y)).
Lemma conj6: forall (lf5 : natural) (x : natural) (lf1 : natural), @eq natural lf1 (plus (mult x lf5) lf5).
Lemma conj8: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (plus (mult x (Succ y)) (Succ y)).
Lemma conj9: forall (lf2 : natural) (lf3 : natural), @eq natural (Succ lf3) lf2.
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 lf5).
Lemma conj12: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus lf4 (Succ y)).
Lemma conj14: forall (lf5 : natural) (x : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x lf5) lf5).
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus (mult x (Succ y)) (Succ y)).
Lemma conj25: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) lf2.
Lemma conj26: forall (lf5 : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 lf5).
Lemma conj29: forall (lf2 : natural) (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) lf2.
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma conj31: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (Succ (plus (mult x (Succ y)) y)) lf2.


<---CREATE SKETCHES--->
Time elapsed: 66 seconds
Sketches:
Sketch conj2_sketch0 : @eq natural lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq natural (plus lf4 lf5) (##hole##)
Sketch conj4_sketch0 : @eq natural lf1 (plus lf4 (##hole##))
Sketch conj4_sketch1 : @eq natural lf1 (##hole##)
Sketch conj4_term_sketch0 : @eq natural (Succ y) (##hole##)
Sketch conj4_term_sketch1 : @eq natural (plus lf4 (Succ y)) (##hole##)
Sketch conj6_sketch0 : @eq natural lf1 (##hole##)
Sketch conj6_sketch1 : @eq natural lf1 (plus (##hole##) lf5)
Sketch conj6_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj6_term_sketch1 : @eq natural (mult x lf5) (##hole##)
Sketch conj8_sketch0 : @eq natural lf1 (plus (##hole##) (Succ y))
Sketch conj8_sketch1 : @eq natural lf1 (##hole##)
Sketch conj8_sketch2 : @eq natural lf1 (plus (mult x (##hole##)) (##hole##))
Sketch conj8_term_sketch0 : @eq natural (mult x (Succ y)) (##hole##)
Sketch conj8_term_sketch1 : @eq natural (plus (mult x (Succ y)) (Succ y)) (##hole##)
Sketch conj8_term_sketch2 : @eq natural (Succ y) (##hole##)
Sketch conj9_sketch0 : @eq natural (##hole##) lf2
Sketch conj9_term_sketch0 : @eq natural (Succ lf3) (##hole##)
Sketch conj10_sketch0 : @eq natural (##hole##) (plus lf4 lf5)
Sketch conj10_sketch1 : @eq natural (Succ lf3) (##hole##)
Sketch conj10_term_sketch0 : @eq natural (Succ lf3) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (plus lf4 lf5) (##hole##)
Sketch conj12_sketch0 : @eq natural (##hole##) (plus lf4 (Succ y))
Sketch conj12_sketch1 : @eq natural (Succ lf3) (plus lf4 (##hole##))
Sketch conj12_sketch2 : @eq natural (Succ lf3) (##hole##)
Sketch conj12_term_sketch0 : @eq natural (Succ lf3) (##hole##)
Sketch conj12_term_sketch1 : @eq natural (Succ y) (##hole##)
Sketch conj12_term_sketch2 : @eq natural (plus lf4 (Succ y)) (##hole##)
Sketch conj14_sketch0 : @eq natural (Succ lf3) (##hole##)
Sketch conj14_sketch1 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj14_sketch2 : @eq natural (Succ lf3) (plus (##hole##) lf5)
Sketch conj14_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (Succ lf3) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (mult x lf5) (##hole##)
Sketch conj16_sketch0 : @eq natural (Succ lf3) (plus (##hole##) (Succ y))
Sketch conj16_sketch1 : @eq natural (##hole##) (plus (mult x (Succ y)) (Succ y))
Sketch conj16_sketch2 : @eq natural (Succ lf3) (##hole##)
Sketch conj16_sketch3 : @eq natural (Succ lf3) (plus (mult x (##hole##)) (##hole##))
Sketch conj16_term_sketch0 : @eq natural (mult x (Succ y)) (##hole##)
Sketch conj16_term_sketch1 : @eq natural (Succ lf3) (##hole##)
Sketch conj16_term_sketch2 : @eq natural (plus (mult x (Succ y)) (Succ y)) (##hole##)
Sketch conj16_term_sketch3 : @eq natural (Succ y) (##hole##)
Sketch conj25_sketch0 : @eq natural (Succ (##hole##)) lf2
Sketch conj25_sketch1 : @eq natural (##hole##) lf2
Sketch conj25_term_sketch0 : @eq natural (plus lf4 y) (##hole##)
Sketch conj25_term_sketch1 : @eq natural (Succ (plus lf4 y)) (##hole##)
Sketch conj26_sketch0 : @eq natural (Succ (##hole##)) (plus lf4 lf5)
Sketch conj26_sketch1 : @eq natural (##hole##) (plus lf4 lf5)
Sketch conj26_sketch2 : @eq natural (Succ (plus lf4 y)) (##hole##)
Sketch conj26_term_sketch0 : @eq natural (plus lf4 y) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (Succ (plus lf4 y)) (##hole##)
Sketch conj26_term_sketch2 : @eq natural (plus lf4 lf5) (##hole##)
Sketch conj29_sketch0 : @eq natural (Succ (##hole##)) lf2
Sketch conj29_sketch1 : @eq natural (##hole##) lf2
Sketch conj29_sketch2 : @eq natural (Succ (plus (##hole##) y)) lf2
Sketch conj29_term_sketch0 : @eq natural (plus (mult x lf5) y) (##hole##)
Sketch conj29_term_sketch1 : @eq natural (Succ (plus (mult x lf5) y)) (##hole##)
Sketch conj29_term_sketch2 : @eq natural (mult x lf5) (##hole##)
Sketch conj30_sketch0 : @eq natural (Succ (plus (mult x lf5) y)) (##hole##)
Sketch conj30_sketch1 : @eq natural (Succ (##hole##)) (plus (mult x lf5) lf5)
Sketch conj30_sketch2 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj30_sketch3 : @eq natural (Succ (plus (##hole##) y)) (plus (##hole##) lf5)
Sketch conj30_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj30_term_sketch1 : @eq natural (plus (mult x lf5) y) (##hole##)
Sketch conj30_term_sketch2 : @eq natural (Succ (plus (mult x lf5) y)) (##hole##)
Sketch conj30_term_sketch3 : @eq natural (mult x lf5) (##hole##)
Sketch conj31_sketch0 : @eq natural (##hole##) lf2
Sketch conj31_sketch1 : @eq natural (Succ (plus (##hole##) y)) lf2
Sketch conj31_sketch2 : @eq natural (Succ (##hole##)) lf2
Sketch conj31_sketch3 : @eq natural (Succ (plus (mult x (##hole##)) y)) lf2
Sketch conj31_term_sketch0 : @eq natural (Succ (plus (mult x (Succ y)) y)) (##hole##)
Sketch conj31_term_sketch1 : @eq natural (mult x (Succ y)) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (plus (mult x (Succ y)) y) (##hole##)
Sketch conj31_term_sketch3 : @eq natural (Succ y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 134 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_24
Sketch conj12_sketch0 --> Problem  synth_5
Sketch conj16_sketch3 --> Problem  synth_18
Sketch conj26_sketch2 --> Problem  synth_5
Sketch conj25_sketch1 --> Problem  synth_13
Sketch conj16_term_sketch1 --> Problem  synth_14
Sketch conj14_term_sketch2 --> Problem  synth_8
Sketch conj29_term_sketch2 --> Problem  synth_8
Sketch conj8_sketch1 --> Problem  synth_1
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj6_term_sketch0 --> Problem  synth_7
Sketch conj30_term_sketch3 --> Problem  synth_8
Sketch conj8_term_sketch0 --> Problem  synth_11
Sketch conj31_sketch0 --> Problem  synth_13
Sketch conj31_term_sketch3 --> Problem  synth_4
Sketch conj26_term_sketch2 --> Problem  synth_2
Sketch conj14_term_sketch1 --> Problem  synth_14
Sketch conj31_term_sketch1 --> Problem  synth_11
Sketch conj12_term_sketch0 --> Problem  synth_14
Sketch conj8_term_sketch1 --> Problem  synth_12
Sketch conj30_sketch2 --> Problem  synth_7
Sketch conj10_sketch1 --> Problem  synth_14
Sketch conj9_term_sketch0 --> Problem  synth_14
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj16_sketch1 --> Problem  synth_12
Sketch conj12_sketch1 --> Problem  synth_15
Sketch conj12_sketch2 --> Problem  synth_14
Sketch conj29_sketch0 --> Problem  synth_19
Sketch conj26_term_sketch0 --> Problem  synth_20
Sketch conj16_term_sketch2 --> Problem  synth_12
Sketch conj30_term_sketch1 --> Problem  synth_23
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj31_sketch2 --> Problem  synth_19
Sketch conj30_term_sketch0 --> Problem  synth_7
Sketch conj8_sketch0 --> Problem  synth_9
Sketch conj29_term_sketch1 --> Problem  synth_24
Sketch conj31_sketch3 --> Problem  synth_27
Sketch conj12_term_sketch2 --> Problem  synth_5
Sketch conj10_sketch0 --> Problem  synth_2
Sketch conj8_term_sketch2 --> Problem  synth_4
Sketch conj29_sketch1 --> Problem  synth_13
Sketch conj14_sketch1 --> Problem  synth_7
Sketch conj26_term_sketch1 --> Problem  synth_5
Sketch conj14_sketch2 --> Problem  synth_16
Sketch conj16_sketch2 --> Problem  synth_14
Sketch conj10_term_sketch1 --> Problem  synth_2
Sketch conj30_sketch3 --> Problem  synth_26
Sketch conj25_term_sketch1 --> Problem  synth_5
Sketch conj30_sketch1 --> Problem  synth_25
Sketch conj26_sketch0 --> Problem  synth_21
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj12_term_sketch1 --> Problem  synth_4
Sketch conj9_sketch0 --> Problem  synth_13
Sketch conj8_sketch2 --> Problem  synth_10
Sketch conj26_sketch1 --> Problem  synth_2
Sketch conj29_term_sketch0 --> Problem  synth_23
Sketch conj31_term_sketch0 --> Problem  synth_12
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj6_sketch1 --> Problem  synth_6
Sketch conj30_term_sketch2 --> Problem  synth_24
Sketch conj10_term_sketch0 --> Problem  synth_14
Sketch conj25_sketch0 --> Problem  synth_19
Sketch conj6_term_sketch1 --> Problem  synth_8
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj16_sketch0 --> Problem  synth_17
Sketch conj14_sketch0 --> Problem  synth_14
Sketch conj14_term_sketch0 --> Problem  synth_7
Sketch conj16_term_sketch0 --> Problem  synth_11
Sketch conj31_sketch1 --> Problem  synth_22
Sketch conj16_term_sketch3 --> Problem  synth_4
Sketch conj31_term_sketch2 --> Problem  synth_28
Sketch conj29_sketch2 --> Problem  synth_22
Sketch conj25_term_sketch0 --> Problem  synth_20


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 471 seconds

Problem: synth_28
 plus y (mult x (Succ y))
 plus x (mult y (Succ x))

Problem: synth_22

Problem: synth_20

Problem: synth_18

Problem: synth_17

Problem: synth_21

Problem: synth_26

Problem: synth_9

Problem: synth_25

Problem: synth_13
 plus lf2 Zero
 lf2

Problem: synth_6

Problem: synth_11
 plus (mult y (plus x Zero)) (plus x Zero)
 mult x (plus y (Succ Zero))
 plus x (mult x y)
 plus x (mult y x)
 plus (mult y x) x
 mult x (Succ y)

Problem: synth_7
 plus (mult x (plus lf5 Zero)) (plus lf5 Zero)
 mult lf5 (plus x (Succ Zero))
 plus lf5 (mult lf5 x)
 plus lf5 (mult x lf5)
 plus (mult x lf5) lf5
 mult lf5 (Succ x)

Problem: synth_4
 Succ (plus y (qfac y Zero))
 plus (mult y (Succ Zero)) (Succ Zero)
 Succ (mult y (Succ Zero))
 Succ (plus y Zero)
 plus y (Succ Zero)
 Succ y

Problem: synth_1
 plus lf1 Zero
 lf1

Problem: synth_23
 plus y (mult x (Succ y))
 plus x (mult y (Succ x))
 plus y (mult lf5 x)
 plus y (mult x lf5)

Problem: synth_27
 Succ y

Problem: synth_16

Problem: synth_19

Problem: synth_15

Problem: synth_14
 Succ lf3

Problem: synth_10

Problem: synth_8
 mult lf5 (mult x (Succ Zero))
 mult x (mult lf5 (Succ Zero))
 mult lf5 (plus x Zero)
 mult x (plus lf5 Zero)
 mult lf5 x
 mult x lf5

Problem: synth_24
 plus lf5 (mult lf5 x)
 plus lf5 (mult x lf5)
 plus (mult x (Succ y)) (Succ y)
 plus (mult y (Succ x)) (Succ x)
 plus (mult x lf5) lf5
 mult lf5 (Succ x)

Problem: synth_3

Problem: synth_12
 Succ (plus y (mult x (Succ y)))
 Succ (plus x (mult y (Succ x)))
 plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero))
 plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero))
 plus (mult x (Succ y)) (Succ y)
 plus (mult y (Succ x)) (Succ x)

Problem: synth_5

Problem: synth_2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 471 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_2: forall (y : natural) (lf4 : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 (Succ y)).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_5: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_6: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_7: forall (y : natural), @eq natural (Succ y) (Succ (plus y (qfac y Zero))).
Lemma candidate_8: forall (y : natural), @eq natural (Succ y) (plus (mult y (Succ Zero)) (Succ Zero)).
Lemma candidate_9: forall (y : natural), @eq natural (Succ y) (Succ (mult y (Succ Zero))).
Lemma candidate_10: forall (y : natural), @eq natural (Succ y) (Succ (plus y Zero)).
Lemma candidate_11: forall (y : natural), @eq natural (Succ y) (plus y (Succ Zero)).
Lemma candidate_12: forall (y : natural), @eq natural (Succ y) (Succ y).
Lemma candidate_13: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_14: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_15: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_16: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_17: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_18: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_19: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_20: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_21: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (mult x (Succ Zero))).
Lemma candidate_22: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult lf5 (Succ Zero))).
Lemma candidate_23: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_24: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_25: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_26: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_27: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_28: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_29: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y (plus x Zero)) (plus x Zero)).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (plus y (Succ Zero))).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult x y)).
Lemma candidate_32: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult y x)).
Lemma candidate_33: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y x) x).
Lemma candidate_34: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (Succ y)).
Lemma candidate_35: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (Succ (plus y (mult x (Succ y)))).
Lemma candidate_36: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (Succ (plus x (mult y (Succ x)))).
Lemma candidate_37: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero))).
Lemma candidate_38: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero))).
Lemma candidate_39: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_40: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_41: forall (y : natural), @eq natural (Succ y) (Succ (plus y (qfac y Zero))).
Lemma candidate_42: forall (y : natural), @eq natural (Succ y) (plus (mult y (Succ Zero)) (Succ Zero)).
Lemma candidate_43: forall (y : natural), @eq natural (Succ y) (Succ (mult y (Succ Zero))).
Lemma candidate_44: forall (y : natural), @eq natural (Succ y) (Succ (plus y Zero)).
Lemma candidate_45: forall (y : natural), @eq natural (Succ y) (plus y (Succ Zero)).
Lemma candidate_46: forall (y : natural), @eq natural (Succ y) (Succ y).
Lemma candidate_47: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_48: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_49: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_50: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_51: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_52: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_53: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_54: forall (y : natural), @eq natural (Succ y) (Succ (plus y (qfac y Zero))).
Lemma candidate_55: forall (y : natural), @eq natural (Succ y) (plus (mult y (Succ Zero)) (Succ Zero)).
Lemma candidate_56: forall (y : natural), @eq natural (Succ y) (Succ (mult y (Succ Zero))).
Lemma candidate_57: forall (y : natural), @eq natural (Succ y) (Succ (plus y Zero)).
Lemma candidate_58: forall (y : natural), @eq natural (Succ y) (plus y (Succ Zero)).
Lemma candidate_59: forall (y : natural), @eq natural (Succ y) (Succ y).
Lemma candidate_60: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_61: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_62: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_63: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_64: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_65: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_66: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_67: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_68: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_69: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_70: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_71: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_72: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_73: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_74: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (mult x (Succ Zero))).
Lemma candidate_75: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult lf5 (Succ Zero))).
Lemma candidate_76: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_77: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_78: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_79: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_80: forall (y : natural) (x : natural), @eq natural (Succ (plus y (mult x (Succ y))))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_81: forall (y : natural) (x : natural), @eq natural (Succ (plus x (mult y (Succ x))))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_82: forall (y : natural) (x : natural), @eq natural (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero)))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_83: forall (y : natural) (x : natural), @eq natural (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero)))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_84: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_85: forall (y : natural) (x : natural), @eq natural (plus (mult y (Succ x)) (Succ x))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_86: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_87: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y (plus x Zero)) (plus x Zero)).
Lemma candidate_88: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (plus y (Succ Zero))).
Lemma candidate_89: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult x y)).
Lemma candidate_90: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult y x)).
Lemma candidate_91: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y x) x).
Lemma candidate_92: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (Succ y)).
Lemma candidate_93: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_94: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (Succ (plus y (mult x (Succ y)))).
Lemma candidate_95: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (Succ (plus x (mult y (Succ x)))).
Lemma candidate_96: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero))).
Lemma candidate_97: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero))).
Lemma candidate_98: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_99: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_100: forall (y : natural), @eq natural (Succ y) (Succ (plus y (qfac y Zero))).
Lemma candidate_101: forall (y : natural), @eq natural (Succ y) (plus (mult y (Succ Zero)) (Succ Zero)).
Lemma candidate_102: forall (y : natural), @eq natural (Succ y) (Succ (mult y (Succ Zero))).
Lemma candidate_103: forall (y : natural), @eq natural (Succ y) (Succ (plus y Zero)).
Lemma candidate_104: forall (y : natural), @eq natural (Succ y) (plus y (Succ Zero)).
Lemma candidate_105: forall (y : natural), @eq natural (Succ y) (Succ y).
Lemma candidate_106: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_107: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_108: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_109: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_110: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult x (Succ y))).
Lemma candidate_111: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus x (mult y (Succ x))).
Lemma candidate_112: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult lf5 x)).
Lemma candidate_113: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult x lf5)).
Lemma candidate_114: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus lf5 (mult lf5 x)).
Lemma candidate_115: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus lf5 (mult x lf5)).
Lemma candidate_116: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_117: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_118: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma candidate_119: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (mult lf5 (Succ x)).
Lemma candidate_120: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (mult x (Succ Zero))).
Lemma candidate_121: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult lf5 (Succ Zero))).
Lemma candidate_122: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_123: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_124: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_125: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_126: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus lf5 (mult lf5 x)).
Lemma candidate_127: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus lf5 (mult x lf5)).
Lemma candidate_128: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_129: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_130: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma candidate_131: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (mult lf5 (Succ x)).
Lemma candidate_132: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_133: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_134: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_135: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_136: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_137: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_138: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_139: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_140: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_141: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_142: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_143: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_144: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult x (Succ y))).
Lemma candidate_145: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus x (mult y (Succ x))).
Lemma candidate_146: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult lf5 x)).
Lemma candidate_147: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult x lf5)).
Lemma candidate_148: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus lf5 (mult lf5 x)).
Lemma candidate_149: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus lf5 (mult x lf5)).
Lemma candidate_150: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_151: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_152: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (plus (mult x lf5) lf5).
Lemma candidate_153: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (Succ (plus (mult x lf5) y)) (mult lf5 (Succ x)).
Lemma candidate_154: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (mult x (Succ Zero))).
Lemma candidate_155: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult lf5 (Succ Zero))).
Lemma candidate_156: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_157: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_158: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_159: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_160: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_161: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_162: forall (y : natural) (x : natural) (lf2 : natural), @eq natural (Succ (plus (mult x (Succ y)) y)) lf2.
Lemma candidate_163: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (Succ (plus y (mult x (Succ y)))).
Lemma candidate_164: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (Succ (plus x (mult y (Succ x)))).
Lemma candidate_165: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero))).
Lemma candidate_166: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero))).
Lemma candidate_167: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_168: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_169: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y (plus x Zero)) (plus x Zero)).
Lemma candidate_170: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (plus y (Succ Zero))).
Lemma candidate_171: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult x y)).
Lemma candidate_172: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult y x)).
Lemma candidate_173: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y x) x).
Lemma candidate_174: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (Succ y)).
Lemma candidate_175: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) y) (plus y (mult x (Succ y))).
Lemma candidate_176: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) y) (plus x (mult y (Succ x))).
Lemma candidate_177: forall (y : natural), @eq natural (Succ y) (Succ (plus y (qfac y Zero))).
Lemma candidate_178: forall (y : natural), @eq natural (Succ y) (plus (mult y (Succ Zero)) (Succ Zero)).
Lemma candidate_179: forall (y : natural), @eq natural (Succ y) (Succ (mult y (Succ Zero))).
Lemma candidate_180: forall (y : natural), @eq natural (Succ y) (Succ (plus y Zero)).
Lemma candidate_181: forall (y : natural), @eq natural (Succ y) (plus y (Succ Zero)).
Lemma candidate_182: forall (y : natural), @eq natural (Succ y) (Succ y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 586 seconds
Duplicates removed: 118
Filtered by Quickchick: 9
Filtered by script: 8
Remaining: 47

Lemmas: 
Lemma candidate_47: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_25: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_11: forall (y : natural), @eq natural (Succ y) (plus y (Succ Zero)).
Lemma candidate_10: forall (y : natural), @eq natural (Succ y) (Succ (plus y Zero)).
Lemma candidate_9: forall (y : natural), @eq natural (Succ y) (Succ (mult y (Succ Zero))).
Lemma candidate_33: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y x) x).
Lemma candidate_32: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult y x)).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus x (mult x y)).
Lemma candidate_24: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_23: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_7: forall (y : natural), @eq natural (Succ y) (Succ (plus y (qfac y Zero))).
Lemma candidate_2: forall (y : natural) (lf4 : natural), @eq natural (Succ (plus lf4 y)) (plus lf4 (Succ y)).
Lemma candidate_113: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult x lf5)).
Lemma candidate_112: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) y) (plus y (mult lf5 x)).
Lemma candidate_66: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_20: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_22: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult lf5 (Succ Zero))).
Lemma candidate_21: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (mult x (Succ Zero))).
Lemma candidate_64: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_63: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (mult x (plus y (Succ Zero))).
Lemma candidate_18: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_17: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_8: forall (y : natural), @eq natural (Succ y) (plus (mult y (Succ Zero)) (Succ Zero)).
Lemma candidate_176: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) y) (plus x (mult y (Succ x))).
Lemma candidate_175: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) y) (plus y (mult x (Succ y))).
Lemma candidate_62: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_16: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_29: forall (y : natural) (x : natural), @eq natural (mult x (Succ y)) (plus (mult y (plus x Zero)) (plus x Zero)).
Lemma candidate_168: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_164: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (Succ (plus x (mult y (Succ x)))).
Lemma candidate_163: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (Succ (plus y (mult x (Succ y)))).
Lemma candidate_85: forall (y : natural) (x : natural), @eq natural (plus (mult y (Succ x)) (Succ x))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_81: forall (y : natural) (x : natural), @eq natural (Succ (plus x (mult y (Succ x))))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_80: forall (y : natural) (x : natural), @eq natural (Succ (plus y (mult x (Succ y))))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_40: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult y (Succ x)) (Succ x)).
Lemma candidate_36: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (Succ (plus x (mult y (Succ x)))).
Lemma candidate_35: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (Succ (plus y (mult x (Succ y)))).
Lemma candidate_61: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_15: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_166: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero))).
Lemma candidate_165: forall (y : natural) (x : natural), @eq natural (Succ (plus (mult x (Succ y)) y))   (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero))).
Lemma candidate_83: forall (y : natural) (x : natural), @eq natural (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero)))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_82: forall (y : natural) (x : natural), @eq natural (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero)))   (plus (mult x (Succ y)) (Succ y)).
Lemma candidate_38: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult y (plus x (Succ Zero))) (plus x (Succ Zero))).
Lemma candidate_37: forall (y : natural) (x : natural), @eq natural (plus (mult x (Succ y)) (Succ y))   (plus (mult x (plus y (Succ Zero))) (plus y (Succ Zero))).
File Information
- File name: goal17
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal17_theorem0_39_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal17_theorem0_39_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rev (rev (lfappend x0 y0))) (lfappend (rev (rev x0)) (rev (rev y0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y)))

* Hypothesis:
x : lst
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst

* Terms:
@eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))) : Prop
x : lst
lfappend (rev (rev x)) (rev (rev y)) : lst
rev (rev y) : lst
rev (rev x) : lst
rev (lfappend x y) : lst
lst : Set
y : lst
lfappend x y : lst
rev y : lst
rev x : lst
rev (rev (lfappend x y)) : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev (lfappend x y)
lf7 : lst = rev y
lf1 : lst = lfappend (rev (rev x)) (rev (rev y))
lf4 : lst = lfappend x y
lf5 : lst = rev (rev y)
lf2 : lst = rev (rev (lfappend x y))
lf8 : lst = rev x
lf6 : lst = rev (rev x)

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj5: forall (lf1 : lst) (lf3 : lst), @eq lst (rev lf3) lf1.
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf6 lf5).
Lemma conj34: forall (lf8 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf8) lf5).
Lemma conj36: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) lf5).
Lemma conj37: forall (lf6 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 lf5).
Lemma conj38: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) lf5).
Lemma conj40: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) lf5).
Lemma conj41: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend lf6 (rev lf7)).
Lemma conj42: forall (lf8 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev lf8) (rev lf7)).
Lemma conj44: forall (lf2 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf7)).
Lemma conj45: forall (lf6 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev lf7)).
Lemma conj46: forall (lf8 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev lf7)).
Lemma conj48: forall (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj105: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend lf6 (rev (rev y))).
Lemma conj106: forall (lf8 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf8) (rev (rev y))).
Lemma conj108: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj109: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev (rev y))).
Lemma conj110: forall (lf8 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev (rev y))).
Lemma conj112: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj133: forall (lf4 : lst) (lf1 : lst), @eq lst (rev (rev lf4)) lf1.
Lemma conj149: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) lf1.
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 lf5).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) lf5).
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) lf5).
Lemma conj173: forall (lf6 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev lf7)).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev lf7)).
Lemma conj176: forall (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 lf5).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) lf5).
Lemma conj184: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma conj189: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev lf7)).
Lemma conj192: forall (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj237: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev (rev y))).
Lemma conj238: forall (lf8 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev (rev y))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj253: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).
Lemma conj256: forall (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))).


<---VALIDITY CHECKS--->
Time elapsed: 157 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))).

Invalid:
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).
Lemma conj253: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj238: forall (lf8 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev (rev y))).
Lemma conj237: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev (rev y))).
Lemma conj192: forall (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev lf7)).
Lemma conj189: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev lf7)).
Lemma conj184: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) lf5).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 lf5).
Lemma conj176: forall (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev lf7)).
Lemma conj173: forall (lf6 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev lf7)).
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) lf5).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) lf5).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 lf5).
Lemma conj149: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) lf1.
Lemma conj133: forall (lf4 : lst) (lf1 : lst), @eq lst (rev (rev lf4)) lf1.
Lemma conj112: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj110: forall (lf8 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev (rev y))).
Lemma conj109: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev (rev y))).
Lemma conj108: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj106: forall (lf8 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf8) (rev (rev y))).
Lemma conj105: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend lf6 (rev (rev y))).
Lemma conj48: forall (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj46: forall (lf8 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev lf7)).
Lemma conj45: forall (lf6 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev lf7)).
Lemma conj44: forall (lf2 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf7)).
Lemma conj42: forall (lf8 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev lf8) (rev lf7)).
Lemma conj41: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend lf6 (rev lf7)).
Lemma conj40: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) lf5).
Lemma conj38: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) lf5).
Lemma conj37: forall (lf6 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 lf5).
Lemma conj36: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) lf5).
Lemma conj34: forall (lf8 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf8) lf5).
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf6 lf5).
Lemma conj5: forall (lf1 : lst) (lf3 : lst), @eq lst (rev lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 157 seconds
Generalizations:
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).
Lemma conj253: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj238: forall (lf8 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev (rev y))).
Lemma conj237: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev (rev y))).
Lemma conj192: forall (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev lf7)).
Lemma conj189: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev lf7)).
Lemma conj184: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) lf5).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 lf5).
Lemma conj176: forall (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev lf7)).
Lemma conj173: forall (lf6 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev lf7)).
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) lf5).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) lf5).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 lf5).
Lemma conj149: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) lf1.
Lemma conj133: forall (lf4 : lst) (lf1 : lst), @eq lst (rev (rev lf4)) lf1.
Lemma conj112: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj110: forall (lf8 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev (rev y))).
Lemma conj109: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev (rev y))).
Lemma conj108: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj106: forall (lf8 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf8) (rev (rev y))).
Lemma conj105: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend lf6 (rev (rev y))).
Lemma conj48: forall (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj46: forall (lf8 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev lf7)).
Lemma conj45: forall (lf6 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev lf7)).
Lemma conj44: forall (lf2 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf7)).
Lemma conj42: forall (lf8 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev lf8) (rev lf7)).
Lemma conj41: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend lf6 (rev lf7)).
Lemma conj40: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) lf5).
Lemma conj38: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) lf5).
Lemma conj37: forall (lf6 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 lf5).
Lemma conj36: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) lf5).
Lemma conj34: forall (lf8 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf8) lf5).
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf6 lf5).
Lemma conj5: forall (lf1 : lst) (lf3 : lst), @eq lst (rev lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 218 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj5: forall (lf1 : lst) (lf3 : lst), @eq lst (rev lf3) lf1.
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend lf6 lf5).
Lemma conj34: forall (lf8 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf8) lf5).
Lemma conj36: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) lf5).
Lemma conj37: forall (lf6 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 lf5).
Lemma conj38: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) lf5).
Lemma conj40: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) lf5).
Lemma conj41: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend lf6 (rev lf7)).
Lemma conj42: forall (lf8 : lst) (lf2 : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev lf8) (rev lf7)).
Lemma conj44: forall (lf2 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf7)).
Lemma conj45: forall (lf6 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev lf7)).
Lemma conj46: forall (lf8 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev lf7)).
Lemma conj48: forall (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj105: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend lf6 (rev (rev y))).
Lemma conj106: forall (lf8 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf8) (rev (rev y))).
Lemma conj108: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj109: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend lf6 (rev (rev y))).
Lemma conj110: forall (lf8 : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf8) (rev (rev y))).
Lemma conj112: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj133: forall (lf4 : lst) (lf1 : lst), @eq lst (rev (rev lf4)) lf1.
Lemma conj149: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) lf1.
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 lf5).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) lf5).
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) lf5).
Lemma conj173: forall (lf6 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev lf7)).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev lf7)).
Lemma conj176: forall (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 lf5).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) lf5).
Lemma conj184: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma conj189: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev lf7)).
Lemma conj192: forall (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma conj237: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend lf6 (rev (rev y))).
Lemma conj238: forall (lf8 : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev (rev y))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj253: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).


<---CREATE SKETCHES--->
Time elapsed: 218 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst (##hole##) lf1
Sketch conj5_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj33_sketch0 : @eq lst lf2 (##hole##)
Sketch conj33_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj34_sketch0 : @eq lst lf2 (lfappend (##hole##) lf5)
Sketch conj34_sketch1 : @eq lst lf2 (##hole##)
Sketch conj34_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj34_term_sketch1 : @eq lst (lfappend (rev lf8) lf5) (##hole##)
Sketch conj36_sketch0 : @eq lst lf2 (lfappend (##hole##) lf5)
Sketch conj36_sketch1 : @eq lst lf2 (##hole##)
Sketch conj36_sketch2 : @eq lst lf2 (lfappend (rev (##hole##)) lf5)
Sketch conj36_term_sketch0 : @eq lst (rev (rev x)) (##hole##)
Sketch conj36_term_sketch1 : @eq lst (lfappend (rev (rev x)) lf5) (##hole##)
Sketch conj36_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj37_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj37_sketch1 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj37_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj38_sketch0 : @eq lst (rev lf3) (lfappend (##hole##) lf5)
Sketch conj38_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj38_sketch2 : @eq lst (##hole##) (lfappend (rev lf8) lf5)
Sketch conj38_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj38_term_sketch1 : @eq lst (lfappend (rev lf8) lf5) (##hole##)
Sketch conj38_term_sketch2 : @eq lst (rev lf3) (##hole##)
Sketch conj40_sketch0 : @eq lst (##hole##) (lfappend (rev (rev x)) lf5)
Sketch conj40_sketch1 : @eq lst (rev lf3) (lfappend (##hole##) lf5)
Sketch conj40_sketch2 : @eq lst (rev lf3) (##hole##)
Sketch conj40_sketch3 : @eq lst (rev lf3) (lfappend (rev (##hole##)) lf5)
Sketch conj40_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj40_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj40_term_sketch2 : @eq lst (lfappend (rev (rev x)) lf5) (##hole##)
Sketch conj40_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj41_sketch0 : @eq lst lf2 (##hole##)
Sketch conj41_sketch1 : @eq lst lf2 (lfappend lf6 (##hole##))
Sketch conj41_term_sketch0 : @eq lst (lfappend lf6 (rev lf7)) (##hole##)
Sketch conj41_term_sketch1 : @eq lst (rev lf7) (##hole##)
Sketch conj42_sketch0 : @eq lst lf2 (lfappend (##hole##) (rev lf7))
Sketch conj42_sketch1 : @eq lst lf2 (##hole##)
Sketch conj42_sketch2 : @eq lst lf2 (lfappend (rev lf8) (##hole##))
Sketch conj42_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj42_term_sketch1 : @eq lst (lfappend (rev lf8) (rev lf7)) (##hole##)
Sketch conj42_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj44_sketch0 : @eq lst lf2 (##hole##)
Sketch conj44_sketch1 : @eq lst lf2 (lfappend (##hole##) (rev lf7))
Sketch conj44_sketch2 : @eq lst lf2 (lfappend (rev (rev x)) (##hole##))
Sketch conj44_sketch3 : @eq lst lf2 (lfappend (rev (##hole##)) (rev lf7))
Sketch conj44_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev lf7)) (##hole##)
Sketch conj44_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj44_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj44_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj45_sketch0 : @eq lst (##hole##) (lfappend lf6 (rev lf7))
Sketch conj45_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj45_sketch2 : @eq lst (rev lf3) (lfappend lf6 (##hole##))
Sketch conj45_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj45_term_sketch1 : @eq lst (lfappend lf6 (rev lf7)) (##hole##)
Sketch conj45_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj46_sketch0 : @eq lst (rev lf3) (lfappend (##hole##) (rev lf7))
Sketch conj46_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj46_sketch2 : @eq lst (##hole##) (lfappend (rev lf8) (rev lf7))
Sketch conj46_sketch3 : @eq lst (rev lf3) (lfappend (rev lf8) (##hole##))
Sketch conj46_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj46_term_sketch1 : @eq lst (lfappend (rev lf8) (rev lf7)) (##hole##)
Sketch conj46_term_sketch2 : @eq lst (rev lf3) (##hole##)
Sketch conj46_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj48_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj48_sketch1 : @eq lst (##hole##) (lfappend (rev (rev x)) (rev lf7))
Sketch conj48_sketch2 : @eq lst (rev lf3) (lfappend (##hole##) (rev lf7))
Sketch conj48_sketch3 : @eq lst (rev lf3) (lfappend (rev (rev x)) (##hole##))
Sketch conj48_sketch4 : @eq lst (rev lf3) (lfappend (rev (##hole##)) (rev lf7))
Sketch conj48_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev lf7)) (##hole##)
Sketch conj48_term_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj48_term_sketch2 : @eq lst (rev (rev x)) (##hole##)
Sketch conj48_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj48_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj105_sketch0 : @eq lst lf2 (lfappend lf6 (##hole##))
Sketch conj105_sketch1 : @eq lst lf2 (##hole##)
Sketch conj105_sketch2 : @eq lst lf2 (lfappend lf6 (rev (##hole##)))
Sketch conj105_term_sketch0 : @eq lst (rev (rev y)) (##hole##)
Sketch conj105_term_sketch1 : @eq lst (lfappend lf6 (rev (rev y))) (##hole##)
Sketch conj105_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj106_sketch0 : @eq lst lf2 (lfappend (##hole##) (rev (rev y)))
Sketch conj106_sketch1 : @eq lst lf2 (lfappend (rev lf8) (##hole##))
Sketch conj106_sketch2 : @eq lst lf2 (##hole##)
Sketch conj106_sketch3 : @eq lst lf2 (lfappend (rev lf8) (rev (##hole##)))
Sketch conj106_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj106_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj106_term_sketch2 : @eq lst (lfappend (rev lf8) (rev (rev y))) (##hole##)
Sketch conj106_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj108_sketch0 : @eq lst lf2 (##hole##)
Sketch conj108_sketch1 : @eq lst lf2 (lfappend (rev (rev x)) (##hole##))
Sketch conj108_sketch2 : @eq lst lf2 (lfappend (##hole##) (rev (rev y)))
Sketch conj108_sketch3 : @eq lst lf2 (lfappend (rev (rev x)) (rev (##hole##)))
Sketch conj108_sketch4 : @eq lst lf2 (lfappend (rev (##hole##)) (rev (rev y)))
Sketch conj108_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev (rev y))) (##hole##)
Sketch conj108_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj108_term_sketch2 : @eq lst (rev (rev x)) (##hole##)
Sketch conj108_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj108_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj109_sketch0 : @eq lst (##hole##) (lfappend lf6 (rev (rev y)))
Sketch conj109_sketch1 : @eq lst (rev lf3) (lfappend lf6 (##hole##))
Sketch conj109_sketch2 : @eq lst (rev lf3) (##hole##)
Sketch conj109_sketch3 : @eq lst (rev lf3) (lfappend lf6 (rev (##hole##)))
Sketch conj109_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj109_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj109_term_sketch2 : @eq lst (lfappend lf6 (rev (rev y))) (##hole##)
Sketch conj109_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj110_sketch0 : @eq lst (rev lf3) (lfappend (##hole##) (rev (rev y)))
Sketch conj110_sketch1 : @eq lst (##hole##) (lfappend (rev lf8) (rev (rev y)))
Sketch conj110_sketch2 : @eq lst (rev lf3) (lfappend (rev lf8) (##hole##))
Sketch conj110_sketch3 : @eq lst (rev lf3) (##hole##)
Sketch conj110_sketch4 : @eq lst (rev lf3) (lfappend (rev lf8) (rev (##hole##)))
Sketch conj110_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj110_term_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj110_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj110_term_sketch3 : @eq lst (lfappend (rev lf8) (rev (rev y))) (##hole##)
Sketch conj110_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj112_sketch0 : @eq lst (##hole##) (lfappend (rev (rev x)) (rev (rev y)))
Sketch conj112_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj112_sketch2 : @eq lst (rev lf3) (lfappend (rev (rev x)) (##hole##))
Sketch conj112_sketch3 : @eq lst (rev lf3) (lfappend (##hole##) (rev (rev y)))
Sketch conj112_sketch4 : @eq lst (rev lf3) (lfappend (rev (rev x)) (rev (##hole##)))
Sketch conj112_sketch5 : @eq lst (rev lf3) (lfappend (rev (##hole##)) (rev (rev y)))
Sketch conj112_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj112_term_sketch1 : @eq lst (lfappend (rev (rev x)) (rev (rev y))) (##hole##)
Sketch conj112_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj112_term_sketch3 : @eq lst (rev (rev x)) (##hole##)
Sketch conj112_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj112_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj133_sketch0 : @eq lst (##hole##) lf1
Sketch conj133_sketch1 : @eq lst (rev (##hole##)) lf1
Sketch conj133_term_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj133_term_sketch1 : @eq lst (rev lf4) (##hole##)
Sketch conj149_sketch0 : @eq lst (rev (##hole##)) lf1
Sketch conj149_sketch1 : @eq lst (rev (rev (##hole##))) lf1
Sketch conj149_sketch2 : @eq lst (##hole##) lf1
Sketch conj149_term_sketch0 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj149_term_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj149_term_sketch2 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj165_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj165_sketch1 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj165_sketch2 : @eq lst (rev (##hole##)) (lfappend lf6 lf5)
Sketch conj165_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj165_term_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj165_term_sketch2 : @eq lst (rev lf4) (##hole##)
Sketch conj166_sketch0 : @eq lst (rev (rev lf4)) (lfappend (##hole##) lf5)
Sketch conj166_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj166_sketch2 : @eq lst (##hole##) (lfappend (rev lf8) lf5)
Sketch conj166_sketch3 : @eq lst (rev (##hole##)) (lfappend (rev lf8) lf5)
Sketch conj166_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj166_term_sketch1 : @eq lst (lfappend (rev lf8) lf5) (##hole##)
Sketch conj166_term_sketch2 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj166_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj168_sketch0 : @eq lst (##hole##) (lfappend (rev (rev x)) lf5)
Sketch conj168_sketch1 : @eq lst (rev (rev lf4)) (lfappend (##hole##) lf5)
Sketch conj168_sketch2 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj168_sketch3 : @eq lst (rev (rev lf4)) (lfappend (rev (##hole##)) lf5)
Sketch conj168_sketch4 : @eq lst (rev (##hole##)) (lfappend (rev (rev x)) lf5)
Sketch conj168_term_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj168_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj168_term_sketch2 : @eq lst (lfappend (rev (rev x)) lf5) (##hole##)
Sketch conj168_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj168_term_sketch4 : @eq lst (rev lf4) (##hole##)
Sketch conj173_sketch0 : @eq lst (##hole##) (lfappend lf6 (rev lf7))
Sketch conj173_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj173_sketch2 : @eq lst (rev (rev lf4)) (lfappend lf6 (##hole##))
Sketch conj173_sketch3 : @eq lst (rev (##hole##)) (lfappend lf6 (rev lf7))
Sketch conj173_term_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj173_term_sketch1 : @eq lst (lfappend lf6 (rev lf7)) (##hole##)
Sketch conj173_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj173_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj174_sketch0 : @eq lst (rev (rev lf4)) (lfappend (##hole##) (rev lf7))
Sketch conj174_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj174_sketch2 : @eq lst (##hole##) (lfappend (rev lf8) (rev lf7))
Sketch conj174_sketch3 : @eq lst (rev (rev lf4)) (lfappend (rev lf8) (##hole##))
Sketch conj174_sketch4 : @eq lst (rev (##hole##)) (lfappend (rev lf8) (rev lf7))
Sketch conj174_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj174_term_sketch1 : @eq lst (lfappend (rev lf8) (rev lf7)) (##hole##)
Sketch conj174_term_sketch2 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj174_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj174_term_sketch4 : @eq lst (rev lf4) (##hole##)
Sketch conj176_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj176_sketch1 : @eq lst (##hole##) (lfappend (rev (rev x)) (rev lf7))
Sketch conj176_sketch2 : @eq lst (rev (rev lf4)) (lfappend (##hole##) (rev lf7))
Sketch conj176_sketch3 : @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (##hole##))
Sketch conj176_sketch4 : @eq lst (rev (rev lf4)) (lfappend (rev (##hole##)) (rev lf7))
Sketch conj176_sketch5 : @eq lst (rev (##hole##)) (lfappend (rev (rev x)) (rev lf7))
Sketch conj176_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev lf7)) (##hole##)
Sketch conj176_term_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj176_term_sketch2 : @eq lst (rev (rev x)) (##hole##)
Sketch conj176_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj176_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj176_term_sketch5 : @eq lst (rev lf4) (##hole##)
Sketch conj181_sketch0 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj181_sketch1 : @eq lst (rev (##hole##)) (lfappend lf6 lf5)
Sketch conj181_sketch2 : @eq lst (rev (rev (##hole##))) (lfappend lf6 lf5)
Sketch conj181_sketch3 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj181_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj181_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj181_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj181_term_sketch3 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj182_sketch0 : @eq lst (rev (rev (lfappend x y))) (lfappend (##hole##) lf5)
Sketch conj182_sketch1 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj182_sketch2 : @eq lst (rev (##hole##)) (lfappend (rev lf8) lf5)
Sketch conj182_sketch3 : @eq lst (rev (rev (##hole##))) (lfappend (rev lf8) lf5)
Sketch conj182_sketch4 : @eq lst (##hole##) (lfappend (rev lf8) lf5)
Sketch conj182_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj182_term_sketch1 : @eq lst (lfappend (rev lf8) lf5) (##hole##)
Sketch conj182_term_sketch2 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj182_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj182_term_sketch4 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj184_sketch0 : @eq lst (rev (rev (lfappend x y))) (lfappend (##hole##) lf5)
Sketch conj184_sketch1 : @eq lst (rev (##hole##)) (lfappend (rev (rev x)) lf5)
Sketch conj184_sketch2 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj184_sketch3 : @eq lst (rev (rev (##hole##))) (lfappend (rev (rev x)) lf5)
Sketch conj184_sketch4 : @eq lst (rev (rev (lfappend x y))) (lfappend (rev (##hole##)) lf5)
Sketch conj184_sketch5 : @eq lst (##hole##) (lfappend (rev (rev x)) lf5)
Sketch conj184_term_sketch0 : @eq lst (rev (rev x)) (##hole##)
Sketch conj184_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj184_term_sketch2 : @eq lst (lfappend (rev (rev x)) lf5) (##hole##)
Sketch conj184_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj184_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj184_term_sketch5 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj189_sketch0 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj189_sketch1 : @eq lst (rev (##hole##)) (lfappend lf6 (rev lf7))
Sketch conj189_sketch2 : @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (##hole##))
Sketch conj189_sketch3 : @eq lst (rev (rev (##hole##))) (lfappend lf6 (rev lf7))
Sketch conj189_sketch4 : @eq lst (##hole##) (lfappend lf6 (rev lf7))
Sketch conj189_term_sketch0 : @eq lst (lfappend lf6 (rev lf7)) (##hole##)
Sketch conj189_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj189_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj189_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj189_term_sketch4 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj190_sketch0 : @eq lst (rev (rev (lfappend x y))) (lfappend (##hole##) (rev lf7))
Sketch conj190_sketch1 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj190_sketch2 : @eq lst (rev (##hole##)) (lfappend (rev lf8) (rev lf7))
Sketch conj190_sketch3 : @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (##hole##))
Sketch conj190_sketch4 : @eq lst (rev (rev (##hole##))) (lfappend (rev lf8) (rev lf7))
Sketch conj190_sketch5 : @eq lst (##hole##) (lfappend (rev lf8) (rev lf7))
Sketch conj190_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj190_term_sketch1 : @eq lst (lfappend (rev lf8) (rev lf7)) (##hole##)
Sketch conj190_term_sketch2 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj190_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj190_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj190_term_sketch5 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj192_sketch0 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj192_sketch1 : @eq lst (rev (rev (lfappend x y))) (lfappend (##hole##) (rev lf7))
Sketch conj192_sketch2 : @eq lst (rev (##hole##)) (lfappend (rev (rev x)) (rev lf7))
Sketch conj192_sketch3 : @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (##hole##))
Sketch conj192_sketch4 : @eq lst (rev (rev (##hole##))) (lfappend (rev (rev x)) (rev lf7))
Sketch conj192_sketch5 : @eq lst (rev (rev (lfappend x y))) (lfappend (rev (##hole##)) (rev lf7))
Sketch conj192_sketch6 : @eq lst (##hole##) (lfappend (rev (rev x)) (rev lf7))
Sketch conj192_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev lf7)) (##hole##)
Sketch conj192_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj192_term_sketch2 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj192_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj192_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj192_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj192_term_sketch6 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj237_sketch0 : @eq lst (##hole##) (lfappend lf6 (rev (rev y)))
Sketch conj237_sketch1 : @eq lst (rev (rev lf4)) (lfappend lf6 (##hole##))
Sketch conj237_sketch2 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj237_sketch3 : @eq lst (rev (rev lf4)) (lfappend lf6 (rev (##hole##)))
Sketch conj237_sketch4 : @eq lst (rev (##hole##)) (lfappend lf6 (rev (rev y)))
Sketch conj237_term_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj237_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj237_term_sketch2 : @eq lst (lfappend lf6 (rev (rev y))) (##hole##)
Sketch conj237_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj237_term_sketch4 : @eq lst (rev lf4) (##hole##)
Sketch conj238_sketch0 : @eq lst (rev (rev lf4)) (lfappend (##hole##) (rev (rev y)))
Sketch conj238_sketch1 : @eq lst (##hole##) (lfappend (rev lf8) (rev (rev y)))
Sketch conj238_sketch2 : @eq lst (rev (rev lf4)) (lfappend (rev lf8) (##hole##))
Sketch conj238_sketch3 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj238_sketch4 : @eq lst (rev (rev lf4)) (lfappend (rev lf8) (rev (##hole##)))
Sketch conj238_sketch5 : @eq lst (rev (##hole##)) (lfappend (rev lf8) (rev (rev y)))
Sketch conj238_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj238_term_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj238_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj238_term_sketch3 : @eq lst (lfappend (rev lf8) (rev (rev y))) (##hole##)
Sketch conj238_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj238_term_sketch5 : @eq lst (rev lf4) (##hole##)
Sketch conj240_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj240_sketch1 : @eq lst (##hole##) (lfappend (rev (rev x)) (rev (rev y)))
Sketch conj240_sketch2 : @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (##hole##))
Sketch conj240_sketch3 : @eq lst (rev (rev lf4)) (lfappend (##hole##) (rev (rev y)))
Sketch conj240_sketch4 : @eq lst (rev (rev lf4)) (lfappend (rev (rev x)) (rev (##hole##)))
Sketch conj240_sketch5 : @eq lst (rev (rev lf4)) (lfappend (rev (##hole##)) (rev (rev y)))
Sketch conj240_sketch6 : @eq lst (rev (##hole##)) (lfappend (rev (rev x)) (rev (rev y)))
Sketch conj240_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev (rev y))) (##hole##)
Sketch conj240_term_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj240_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj240_term_sketch3 : @eq lst (rev (rev x)) (##hole##)
Sketch conj240_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj240_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj240_term_sketch6 : @eq lst (rev lf4) (##hole##)
Sketch conj253_sketch0 : @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (##hole##))
Sketch conj253_sketch1 : @eq lst (rev (##hole##)) (lfappend lf6 (rev (rev y)))
Sketch conj253_sketch2 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj253_sketch3 : @eq lst (rev (rev (##hole##))) (lfappend lf6 (rev (rev y)))
Sketch conj253_sketch4 : @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (##hole##)))
Sketch conj253_sketch5 : @eq lst (##hole##) (lfappend lf6 (rev (rev y)))
Sketch conj253_term_sketch0 : @eq lst (rev (rev y)) (##hole##)
Sketch conj253_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj253_term_sketch2 : @eq lst (lfappend lf6 (rev (rev y))) (##hole##)
Sketch conj253_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj253_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj253_term_sketch5 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj254_sketch0 : @eq lst (rev (rev (lfappend x y))) (lfappend (##hole##) (rev (rev y)))
Sketch conj254_sketch1 : @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (##hole##))
Sketch conj254_sketch2 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj254_sketch3 : @eq lst (rev (##hole##)) (lfappend (rev lf8) (rev (rev y)))
Sketch conj254_sketch4 : @eq lst (rev (rev (##hole##))) (lfappend (rev lf8) (rev (rev y)))
Sketch conj254_sketch5 : @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (##hole##)))
Sketch conj254_sketch6 : @eq lst (##hole##) (lfappend (rev lf8) (rev (rev y)))
Sketch conj254_term_sketch0 : @eq lst (rev lf8) (##hole##)
Sketch conj254_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj254_term_sketch2 : @eq lst (lfappend (rev lf8) (rev (rev y))) (##hole##)
Sketch conj254_term_sketch3 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj254_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj254_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj254_term_sketch6 : @eq lst (rev (rev (lfappend x y))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 4092 seconds
Problems per Sketch:
Sketch conj254_term_sketch5 --> Problem  synth_31
Sketch conj238_sketch4 --> Problem  synth_70
Sketch conj48_sketch3 --> Problem  synth_26
Sketch conj44_sketch2 --> Problem  synth_20
Sketch conj184_sketch0 --> Problem  synth_60
Sketch conj184_sketch4 --> Problem  synth_61
Sketch conj181_term_sketch3 --> Problem  synth_37
Sketch conj253_term_sketch5 --> Problem  synth_37
Sketch conj238_sketch0 --> Problem  synth_69
Sketch conj184_term_sketch1 --> Problem  synth_46
Sketch conj108_term_sketch2 --> Problem  synth_9
Sketch conj240_sketch6 --> Problem  synth_46
Sketch conj110_sketch1 --> Problem  synth_34
Sketch conj182_term_sketch4 --> Problem  synth_37
Sketch conj109_term_sketch1 --> Problem  synth_29
Sketch conj190_term_sketch0 --> Problem  synth_6
Sketch conj173_sketch0 --> Problem  synth_15
Sketch conj110_term_sketch4 --> Problem  synth_31
Sketch conj237_term_sketch4 --> Problem  synth_45
Sketch conj133_sketch0 --> Problem  synth_1
Sketch conj184_term_sketch4 --> Problem  synth_11
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj149_term_sketch2 --> Problem  synth_37
Sketch conj254_sketch1 --> Problem  synth_64
Sketch conj192_term_sketch0 --> Problem  synth_22
Sketch conj238_term_sketch0 --> Problem  synth_6
Sketch conj192_sketch6 --> Problem  synth_22
Sketch conj253_sketch5 --> Problem  synth_30
Sketch conj192_sketch3 --> Problem  synth_65
Sketch conj105_sketch1 --> Problem  synth_3
Sketch conj174_sketch2 --> Problem  synth_19
Sketch conj253_term_sketch0 --> Problem  synth_29
Sketch conj237_sketch0 --> Problem  synth_30
Sketch conj182_sketch2 --> Problem  synth_49
Sketch conj181_sketch2 --> Problem  synth_4
Sketch conj46_term_sketch3 --> Problem  synth_16
Sketch conj42_term_sketch1 --> Problem  synth_19
Sketch conj176_term_sketch0 --> Problem  synth_22
Sketch conj237_sketch1 --> Problem  synth_52
Sketch conj168_sketch3 --> Problem  synth_50
Sketch conj238_sketch2 --> Problem  synth_55
Sketch conj112_sketch1 --> Problem  synth_2
Sketch conj48_term_sketch0 --> Problem  synth_22
Sketch conj46_sketch1 --> Problem  synth_2
Sketch conj110_sketch2 --> Problem  synth_25
Sketch conj192_term_sketch1 --> Problem  synth_9
Sketch conj189_sketch4 --> Problem  synth_15
Sketch conj106_sketch2 --> Problem  synth_3
Sketch conj112_term_sketch1 --> Problem  synth_37
Sketch conj240_term_sketch1 --> Problem  synth_44
Sketch conj44_sketch1 --> Problem  synth_17
Sketch conj38_sketch1 --> Problem  synth_2
Sketch conj182_sketch4 --> Problem  synth_7
Sketch conj254_sketch0 --> Problem  synth_75
Sketch conj112_term_sketch2 --> Problem  synth_29
Sketch conj45_sketch0 --> Problem  synth_15
Sketch conj105_term_sketch1 --> Problem  synth_30
Sketch conj42_sketch2 --> Problem  synth_18
Sketch conj237_term_sketch1 --> Problem  synth_29
Sketch conj106_term_sketch3 --> Problem  synth_31
Sketch conj149_term_sketch1 --> Problem  synth_37
Sketch conj190_term_sketch3 --> Problem  synth_16
Sketch conj184_term_sketch5 --> Problem  synth_37
Sketch conj48_term_sketch3 --> Problem  synth_16
Sketch conj190_sketch2 --> Problem  synth_56
Sketch conj189_sketch2 --> Problem  synth_62
Sketch conj237_sketch2 --> Problem  synth_44
Sketch conj182_term_sketch2 --> Problem  synth_46
Sketch conj190_term_sketch4 --> Problem  synth_37
Sketch conj173_term_sketch3 --> Problem  synth_45
Sketch conj41_sketch1 --> Problem  synth_14
Sketch conj181_sketch0 --> Problem  synth_37
Sketch conj254_term_sketch2 --> Problem  synth_34
Sketch conj184_term_sketch2 --> Problem  synth_10
Sketch conj41_sketch0 --> Problem  synth_3
Sketch conj165_sketch2 --> Problem  synth_47
Sketch conj240_term_sketch5 --> Problem  synth_11
Sketch conj108_sketch3 --> Problem  synth_35
Sketch conj176_term_sketch4 --> Problem  synth_11
Sketch conj46_sketch3 --> Problem  synth_25
Sketch conj38_sketch2 --> Problem  synth_7
Sketch conj240_term_sketch0 --> Problem  synth_37
Sketch conj44_term_sketch0 --> Problem  synth_22
Sketch conj112_sketch3 --> Problem  synth_39
Sketch conj189_sketch0 --> Problem  synth_37
Sketch conj110_term_sketch0 --> Problem  synth_6
Sketch conj106_term_sketch1 --> Problem  synth_29
Sketch conj254_sketch2 --> Problem  synth_37
Sketch conj108_term_sketch3 --> Problem  synth_31
Sketch conj149_sketch2 --> Problem  synth_1
Sketch conj184_sketch5 --> Problem  synth_10
Sketch conj192_sketch0 --> Problem  synth_37
Sketch conj253_term_sketch1 --> Problem  synth_46
Sketch conj181_sketch1 --> Problem  synth_47
Sketch conj165_sketch1 --> Problem  synth_4
Sketch conj38_term_sketch1 --> Problem  synth_7
Sketch conj106_sketch0 --> Problem  synth_32
Sketch conj33_sketch0 --> Problem  synth_3
Sketch conj192_term_sketch6 --> Problem  synth_37
Sketch conj166_term_sketch0 --> Problem  synth_6
Sketch conj106_term_sketch0 --> Problem  synth_6
Sketch conj105_sketch2 --> Problem  synth_28
Sketch conj182_sketch1 --> Problem  synth_37
Sketch conj190_sketch3 --> Problem  synth_64
Sketch conj176_sketch3 --> Problem  synth_57
Sketch conj40_term_sketch3 --> Problem  synth_11
Sketch conj168_term_sketch0 --> Problem  synth_44
Sketch conj190_term_sketch1 --> Problem  synth_19
Sketch conj254_sketch6 --> Problem  synth_34
Sketch conj45_sketch1 --> Problem  synth_2
Sketch conj254_term_sketch4 --> Problem  synth_37
Sketch conj254_sketch4 --> Problem  synth_34
Sketch conj109_term_sketch3 --> Problem  synth_31
Sketch conj184_term_sketch0 --> Problem  synth_9
Sketch conj112_sketch2 --> Problem  synth_26
Sketch conj182_term_sketch3 --> Problem  synth_37
Sketch conj45_term_sketch0 --> Problem  synth_2
Sketch conj192_sketch2 --> Problem  synth_59
Sketch conj33_term_sketch0 --> Problem  synth_4
Sketch conj110_term_sketch2 --> Problem  synth_29
Sketch conj38_term_sketch2 --> Problem  synth_2
Sketch conj110_sketch3 --> Problem  synth_2
Sketch conj41_term_sketch0 --> Problem  synth_15
Sketch conj108_term_sketch4 --> Problem  synth_11
Sketch conj182_term_sketch1 --> Problem  synth_7
Sketch conj133_term_sketch1 --> Problem  synth_45
Sketch conj192_term_sketch2 --> Problem  synth_46
Sketch conj182_term_sketch0 --> Problem  synth_6
Sketch conj238_term_sketch3 --> Problem  synth_34
Sketch conj182_sketch3 --> Problem  synth_7
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj34_sketch0 --> Problem  synth_5
Sketch conj192_term_sketch5 --> Problem  synth_11
Sketch conj106_sketch1 --> Problem  synth_18
Sketch conj192_sketch1 --> Problem  synth_63
Sketch conj38_term_sketch0 --> Problem  synth_6
Sketch conj240_term_sketch4 --> Problem  synth_31
Sketch conj181_term_sketch2 --> Problem  synth_37
Sketch conj192_sketch5 --> Problem  synth_66
Sketch conj254_term_sketch6 --> Problem  synth_37
Sketch conj176_term_sketch1 --> Problem  synth_44
Sketch conj176_sketch5 --> Problem  synth_59
Sketch conj36_term_sketch2 --> Problem  synth_11
Sketch conj253_term_sketch4 --> Problem  synth_31
Sketch conj46_term_sketch0 --> Problem  synth_6
Sketch conj46_sketch2 --> Problem  synth_19
Sketch conj182_sketch0 --> Problem  synth_60
Sketch conj44_term_sketch1 --> Problem  synth_9
Sketch conj48_sketch1 --> Problem  synth_22
Sketch conj253_sketch0 --> Problem  synth_62
Sketch conj176_sketch1 --> Problem  synth_22
Sketch conj168_sketch1 --> Problem  synth_48
Sketch conj189_term_sketch0 --> Problem  synth_15
Sketch conj237_sketch3 --> Problem  synth_67
Sketch conj109_sketch0 --> Problem  synth_30
Sketch conj192_sketch4 --> Problem  synth_22
Sketch conj168_term_sketch1 --> Problem  synth_9
Sketch conj166_term_sketch3 --> Problem  synth_45
Sketch conj112_sketch5 --> Problem  synth_42
Sketch conj189_term_sketch3 --> Problem  synth_37
Sketch conj46_sketch0 --> Problem  synth_24
Sketch conj176_sketch2 --> Problem  synth_54
Sketch conj240_sketch5 --> Problem  synth_73
Sketch conj41_term_sketch1 --> Problem  synth_16
Sketch conj238_sketch3 --> Problem  synth_44
Sketch conj40_sketch2 --> Problem  synth_2
Sketch conj37_sketch1 --> Problem  synth_4
Sketch conj176_term_sketch3 --> Problem  synth_16
Sketch conj184_sketch1 --> Problem  synth_51
Sketch conj174_term_sketch0 --> Problem  synth_6
Sketch conj42_sketch0 --> Problem  synth_17
Sketch conj254_term_sketch0 --> Problem  synth_6
Sketch conj184_sketch2 --> Problem  synth_37
Sketch conj105_sketch0 --> Problem  synth_14
Sketch conj174_term_sketch4 --> Problem  synth_45
Sketch conj238_sketch1 --> Problem  synth_34
Sketch conj40_term_sketch0 --> Problem  synth_2
Sketch conj240_sketch0 --> Problem  synth_44
Sketch conj176_sketch0 --> Problem  synth_44
Sketch conj173_term_sketch2 --> Problem  synth_16
Sketch conj237_sketch4 --> Problem  synth_68
Sketch conj42_term_sketch0 --> Problem  synth_6
Sketch conj240_term_sketch6 --> Problem  synth_45
Sketch conj133_sketch1 --> Problem  synth_43
Sketch conj42_sketch1 --> Problem  synth_3
Sketch conj166_term_sketch2 --> Problem  synth_44
Sketch conj238_term_sketch2 --> Problem  synth_29
Sketch conj105_term_sketch2 --> Problem  synth_31
Sketch conj38_sketch0 --> Problem  synth_12
Sketch conj36_sketch0 --> Problem  synth_5
Sketch conj173_sketch2 --> Problem  synth_52
Sketch conj110_term_sketch3 --> Problem  synth_34
Sketch conj253_term_sketch3 --> Problem  synth_37
Sketch conj240_sketch3 --> Problem  synth_69
Sketch conj174_sketch4 --> Problem  synth_56
Sketch conj254_term_sketch3 --> Problem  synth_46
Sketch conj189_term_sketch2 --> Problem  synth_16
Sketch conj109_term_sketch2 --> Problem  synth_30
Sketch conj40_sketch3 --> Problem  synth_13
Sketch conj48_sketch4 --> Problem  synth_27
Sketch conj181_term_sketch0 --> Problem  synth_4
Sketch conj40_sketch1 --> Problem  synth_12
Sketch conj240_term_sketch3 --> Problem  synth_9
Sketch conj166_sketch0 --> Problem  synth_48
Sketch conj109_sketch1 --> Problem  synth_23
Sketch conj238_term_sketch4 --> Problem  synth_31
Sketch conj190_sketch0 --> Problem  synth_63
Sketch conj184_term_sketch3 --> Problem  synth_37
Sketch conj237_term_sketch0 --> Problem  synth_44
Sketch conj254_term_sketch1 --> Problem  synth_29
Sketch conj112_term_sketch0 --> Problem  synth_2
Sketch conj105_term_sketch0 --> Problem  synth_29
Sketch conj42_term_sketch2 --> Problem  synth_16
Sketch conj108_term_sketch0 --> Problem  synth_37
Sketch conj109_sketch2 --> Problem  synth_2
Sketch conj44_sketch0 --> Problem  synth_3
Sketch conj40_sketch0 --> Problem  synth_10
Sketch conj237_term_sketch2 --> Problem  synth_30
Sketch conj238_term_sketch1 --> Problem  synth_44
Sketch conj37_sketch0 --> Problem  synth_2
Sketch conj109_term_sketch0 --> Problem  synth_2
Sketch conj36_term_sketch0 --> Problem  synth_9
Sketch conj184_sketch3 --> Problem  synth_10
Sketch conj108_sketch1 --> Problem  synth_20
Sketch conj253_sketch4 --> Problem  synth_74
Sketch conj108_sketch0 --> Problem  synth_3
Sketch conj133_term_sketch0 --> Problem  synth_44
Sketch conj166_sketch2 --> Problem  synth_7
Sketch conj112_sketch4 --> Problem  synth_41
Sketch conj112_term_sketch5 --> Problem  synth_11
Sketch conj237_term_sketch3 --> Problem  synth_31
Sketch conj168_term_sketch3 --> Problem  synth_11
Sketch conj108_sketch2 --> Problem  synth_32
Sketch conj190_sketch1 --> Problem  synth_37
Sketch conj109_sketch3 --> Problem  synth_38
Sketch conj176_term_sketch2 --> Problem  synth_9
Sketch conj149_term_sketch0 --> Problem  synth_46
Sketch conj253_term_sketch2 --> Problem  synth_30
Sketch conj173_sketch1 --> Problem  synth_44
Sketch conj108_term_sketch1 --> Problem  synth_29
Sketch conj34_sketch1 --> Problem  synth_3
Sketch conj174_term_sketch3 --> Problem  synth_16
Sketch conj174_term_sketch2 --> Problem  synth_44
Sketch conj174_term_sketch1 --> Problem  synth_19
Sketch conj166_term_sketch1 --> Problem  synth_7
Sketch conj165_term_sketch1 --> Problem  synth_44
Sketch conj108_sketch4 --> Problem  synth_36
Sketch conj110_sketch0 --> Problem  synth_39
Sketch conj238_sketch5 --> Problem  synth_71
Sketch conj190_sketch5 --> Problem  synth_19
Sketch conj253_sketch1 --> Problem  synth_68
Sketch conj173_term_sketch1 --> Problem  synth_15
Sketch conj112_term_sketch3 --> Problem  synth_9
Sketch conj45_term_sketch2 --> Problem  synth_16
Sketch conj149_sketch1 --> Problem  synth_1
Sketch conj112_sketch0 --> Problem  synth_37
Sketch conj44_term_sketch2 --> Problem  synth_16
Sketch conj254_sketch3 --> Problem  synth_71
Sketch conj168_sketch2 --> Problem  synth_44
Sketch conj40_term_sketch1 --> Problem  synth_9
Sketch conj189_sketch3 --> Problem  synth_15
Sketch conj189_term_sketch4 --> Problem  synth_37
Sketch conj240_term_sketch2 --> Problem  synth_29
Sketch conj173_term_sketch0 --> Problem  synth_44
Sketch conj110_term_sketch1 --> Problem  synth_2
Sketch conj106_sketch3 --> Problem  synth_33
Sketch conj189_term_sketch1 --> Problem  synth_46
Sketch conj48_term_sketch2 --> Problem  synth_9
Sketch conj192_term_sketch3 --> Problem  synth_16
Sketch conj240_sketch1 --> Problem  synth_37
Sketch conj46_term_sketch2 --> Problem  synth_2
Sketch conj168_term_sketch4 --> Problem  synth_45
Sketch conj166_sketch1 --> Problem  synth_44
Sketch conj168_sketch4 --> Problem  synth_51
Sketch conj165_sketch0 --> Problem  synth_44
Sketch conj240_sketch4 --> Problem  synth_72
Sketch conj36_sketch2 --> Problem  synth_8
Sketch conj168_sketch0 --> Problem  synth_10
Sketch conj174_sketch3 --> Problem  synth_55
Sketch conj48_term_sketch1 --> Problem  synth_2
Sketch conj238_term_sketch5 --> Problem  synth_45
Sketch conj176_term_sketch5 --> Problem  synth_45
Sketch conj110_sketch4 --> Problem  synth_40
Sketch conj34_term_sketch1 --> Problem  synth_7
Sketch conj34_term_sketch0 --> Problem  synth_6
Sketch conj190_term_sketch5 --> Problem  synth_37
Sketch conj44_term_sketch3 --> Problem  synth_11
Sketch conj181_sketch3 --> Problem  synth_4
Sketch conj45_sketch2 --> Problem  synth_23
Sketch conj165_term_sketch0 --> Problem  synth_4
Sketch conj40_term_sketch2 --> Problem  synth_10
Sketch conj106_term_sketch2 --> Problem  synth_34
Sketch conj166_sketch3 --> Problem  synth_49
Sketch conj37_term_sketch0 --> Problem  synth_4
Sketch conj240_sketch2 --> Problem  synth_57
Sketch conj189_sketch1 --> Problem  synth_53
Sketch conj253_sketch2 --> Problem  synth_37
Sketch conj176_sketch4 --> Problem  synth_58
Sketch conj36_sketch1 --> Problem  synth_3
Sketch conj168_term_sketch2 --> Problem  synth_10
Sketch conj48_sketch0 --> Problem  synth_2
Sketch conj253_sketch3 --> Problem  synth_30
Sketch conj44_sketch3 --> Problem  synth_21
Sketch conj190_sketch4 --> Problem  synth_19
Sketch conj48_term_sketch4 --> Problem  synth_11
Sketch conj46_term_sketch1 --> Problem  synth_19
Sketch conj192_term_sketch4 --> Problem  synth_37
Sketch conj37_term_sketch1 --> Problem  synth_2
Sketch conj45_term_sketch1 --> Problem  synth_15
Sketch conj165_term_sketch2 --> Problem  synth_45
Sketch conj149_sketch0 --> Problem  synth_43
Sketch conj112_term_sketch4 --> Problem  synth_31
Sketch conj181_term_sketch1 --> Problem  synth_46
Sketch conj36_term_sketch1 --> Problem  synth_10
Sketch conj174_sketch0 --> Problem  synth_54
Sketch conj48_sketch2 --> Problem  synth_24
Sketch conj254_sketch5 --> Problem  synth_76
Sketch conj174_sketch1 --> Problem  synth_44
Sketch conj173_sketch3 --> Problem  synth_53
Sketch conj190_term_sketch2 --> Problem  synth_46


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 4686 seconds

Problem: synth_63
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_68
 lfappend (rev y) (rev (lfappend lf6 Nil))
 lfappend (rev y) (lfappend (rev lf6) Nil)
 rev (lfappend lf6 (rev (rev y)))
 rev (lfappend lf6 (lfappend y Nil))
 lfappend (rev y) (rev lf6)
 rev (lfappend lf6 y)

Problem: synth_67

Problem: synth_64
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_11
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_54

Problem: synth_39

Problem: synth_46
 lfappend (rev y) (rev (lfappend x Nil))
 lfappend (rev y) (lfappend (rev x) Nil)
 rev (lfappend x (rev (rev y)))
 rev (lfappend x (lfappend y Nil))
 lfappend (rev y) (rev x)
 rev (lfappend x y)

Problem: synth_66
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_57

Problem: synth_59
 lfappend (rev (rev lf7)) (rev x)
 lfappend (lfappend lf7 Nil) (rev x)
 rev (rev (lfappend lf7 (rev x)))
 lfappend (lfappend lf7 (rev x)) Nil
 rev (lfappend x (rev lf7))
 lfappend lf7 (rev x)

Problem: synth_31
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_8

Problem: synth_34
 rev (lfappend (rev y) (rev (rev lf8)))
 rev (lfappend (rev y) (lfappend lf8 Nil))
 rev (lfappend (rev y) lf8)
 lfappend (rev lf8) (rev (rev y))
 lfappend (rev lf8) (lfappend y Nil)
 lfappend (rev lf8) y

Problem: synth_5

Problem: synth_37
 lfappend (rev (rev x)) y
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_58

Problem: synth_53
 lfappend (rev (rev lf7)) (rev lf6)
 lfappend (lfappend lf7 Nil) (rev lf6)
 rev (rev (lfappend lf7 (rev lf6)))
 lfappend (lfappend lf7 (rev lf6)) Nil
 rev (lfappend lf6 (rev lf7))
 lfappend lf7 (rev lf6)

Problem: synth_2
 lfappend (rev (lfappend lf3 Nil)) Nil
 lfappend (lfappend (rev lf3) Nil) Nil
 rev (rev (rev lf3))
 rev (lfappend lf3 Nil)
 lfappend (rev lf3) Nil
 rev lf3

Problem: synth_22
 lfappend (rev (rev x)) (rev lf7)
 lfappend (lfappend x Nil) (rev lf7)
 rev (rev (lfappend x (rev lf7)))
 lfappend (lfappend x (rev lf7)) Nil
 rev (lfappend lf7 (rev x))
 lfappend x (rev lf7)

Problem: synth_18

Problem: synth_21

Problem: synth_72

Problem: synth_56
 lfappend (rev (rev lf7)) lf8
 lfappend (lfappend lf7 Nil) lf8
 lfappend (lfappend lf7 lf8) Nil
 lfappend lf7 (rev (rev lf8))
 lfappend lf7 (lfappend lf8 Nil)
 lfappend lf7 lf8

Problem: synth_41

Problem: synth_49
 rev (lfappend (rev lf8) (rev (rev lf5)))
 rev (lfappend (rev lf8) (lfappend lf5 Nil))
 rev (lfappend (rev lf8) lf5)
 lfappend (rev lf5) (rev (rev lf8))
 lfappend (rev lf5) (lfappend lf8 Nil)
 lfappend (rev lf5) lf8

Problem: synth_75
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_25

Problem: synth_13

Problem: synth_6
 lfappend (rev (lfappend lf8 Nil)) Nil
 lfappend (lfappend (rev lf8) Nil) Nil
 rev (rev (rev lf8))
 rev (lfappend lf8 Nil)
 lfappend (rev lf8) Nil
 rev lf8

Problem: synth_4
 lfappend (rev (rev lf6)) lf5
 lfappend (lfappend lf6 Nil) lf5
 lfappend (lfappend lf6 lf5) Nil
 lfappend lf6 (rev (rev lf5))
 lfappend lf6 (lfappend lf5 Nil)
 lfappend lf6 lf5

Problem: synth_38

Problem: synth_65
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_23

Problem: synth_19
 lfappend (rev lf8) (rev (lfappend lf7 Nil))
 lfappend (rev lf8) (lfappend (rev lf7) Nil)
 rev (lfappend lf7 (rev (rev lf8)))
 rev (lfappend lf7 (lfappend lf8 Nil))
 lfappend (rev lf8) (rev lf7)
 rev (lfappend lf7 lf8)

Problem: synth_10
 lfappend (rev (rev x)) lf5
 lfappend (lfappend x Nil) lf5
 lfappend (lfappend x lf5) Nil
 lfappend x (rev (rev lf5))
 lfappend x (lfappend lf5 Nil)
 lfappend x lf5

Problem: synth_24

Problem: synth_32

Problem: synth_48

Problem: synth_51
 lfappend (rev lf5) (rev (lfappend x Nil))
 lfappend (rev lf5) (lfappend (rev x) Nil)
 rev (lfappend x (rev (rev lf5)))
 rev (lfappend x (lfappend lf5 Nil))
 lfappend (rev lf5) (rev x)
 rev (lfappend x lf5)

Problem: synth_35

Problem: synth_28

Problem: synth_73

Problem: synth_17

Problem: synth_29
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_45
 lfappend (rev (lfappend lf4 Nil)) Nil
 lfappend (lfappend (rev lf4) Nil) Nil
 rev (rev (rev lf4))
 rev (lfappend lf4 Nil)
 lfappend (rev lf4) Nil
 rev lf4

Problem: synth_76
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_26

Problem: synth_70

Problem: synth_9
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_30
 lfappend (rev (rev lf6)) y
 lfappend (lfappend lf6 Nil) y
 lfappend (lfappend lf6 y) Nil
 lfappend lf6 (rev (rev y))
 lfappend lf6 (lfappend y Nil)
 lfappend lf6 y

Problem: synth_1
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_69

Problem: synth_55

Problem: synth_71
 rev (lfappend (rev lf8) (rev (rev y)))
 rev (lfappend (rev lf8) (lfappend y Nil))
 rev (lfappend (rev lf8) y)
 lfappend (rev y) (rev (rev lf8))
 lfappend (rev y) (lfappend lf8 Nil)
 lfappend (rev y) lf8

Problem: synth_15
 lfappend (rev (rev lf6)) (rev lf7)
 lfappend (lfappend lf6 Nil) (rev lf7)
 rev (rev (lfappend lf6 (rev lf7)))
 lfappend (lfappend lf6 (rev lf7)) Nil
 rev (lfappend lf7 (rev lf6))
 lfappend lf6 (rev lf7)

Problem: synth_14

Problem: synth_12

Problem: synth_62
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_74
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_50

Problem: synth_20

Problem: synth_7
 rev (lfappend (rev lf5) (rev (rev lf8)))
 rev (lfappend (rev lf5) (lfappend lf8 Nil))
 rev (lfappend (rev lf5) lf8)
 lfappend (rev lf8) (rev (rev lf5))
 lfappend (rev lf8) (lfappend lf5 Nil)
 lfappend (rev lf8) lf5

Problem: synth_61
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_27

Problem: synth_42

Problem: synth_16
 lfappend (rev (lfappend lf7 Nil)) Nil
 lfappend (lfappend (rev lf7) Nil) Nil
 rev (rev (rev lf7))
 rev (lfappend lf7 Nil)
 lfappend (rev lf7) Nil
 rev lf7

Problem: synth_40

Problem: synth_33

Problem: synth_47
 lfappend (rev lf5) (rev (lfappend lf6 Nil))
 lfappend (rev lf5) (lfappend (rev lf6) Nil)
 rev (lfappend lf6 (rev (rev lf5)))
 rev (lfappend lf6 (lfappend lf5 Nil))
 lfappend (rev lf5) (rev lf6)
 rev (lfappend lf6 lf5)

Problem: synth_3
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_52

Problem: synth_44
 rev (lfappend (rev lf4) Nil)
 lfappend (rev (rev lf4)) Nil
 lfappend (lfappend lf4 Nil) Nil
 rev (rev lf4)
 lfappend lf4 Nil
 lf4

Problem: synth_60
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_36

Problem: synth_43
 lfappend (rev (lfappend lf1 Nil)) Nil
 lfappend (lfappend (rev lf1) Nil) Nil
 rev (rev (rev lf1))
 rev (lfappend lf1 Nil)
 lfappend (rev lf1) Nil
 rev lf1

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 4688 seconds
Lemmas:
Lemma candidate_1: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_9: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_10: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_11: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_12: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_13: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_14: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_19: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_20: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_21: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_22: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_23: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_24: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_25: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_26: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_27: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_28: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_29: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_30: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_31: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_32: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_33: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_34: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_35: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_36: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_37: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_38: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) (rev (rev lf8)))).
Lemma candidate_39: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5)   (rev (lfappend (rev lf5) (lfappend lf8 Nil))).
Lemma candidate_40: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) lf8)).
Lemma candidate_41: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (rev (rev lf5))).
Lemma candidate_42: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (lfappend lf5 Nil)).
Lemma candidate_43: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_44: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_45: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_46: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_47: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_48: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_49: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_50: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_51: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_52: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_53: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_54: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_55: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_56: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_57: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_58: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_59: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (rev (rev lf5))).
Lemma candidate_60: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_61: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x lf5).
Lemma candidate_62: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_63: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_64: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_65: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_66: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_67: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_68: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_69: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_70: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_71: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_72: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_73: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_74: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_75: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_76: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_77: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_78: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_79: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_80: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_81: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_82: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_83: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_84: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_85: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_86: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_87: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_88: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_89: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_90: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_91: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_92: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_93: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_94: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_95: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_96: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_97: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_98: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_99: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend lf8 Nil)))   (lfappend (rev lf8) lf5).
Lemma candidate_100: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) lf8)) (lfappend (rev lf8) lf5).
Lemma candidate_101: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_102: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend lf5 Nil)) (lfappend (rev lf8) lf5).
Lemma candidate_103: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_104: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_105: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_106: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_107: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_108: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_109: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_110: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) (rev (rev lf8)))).
Lemma candidate_111: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5)   (rev (lfappend (rev lf5) (lfappend lf8 Nil))).
Lemma candidate_112: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) lf8)).
Lemma candidate_113: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (rev (rev lf5))).
Lemma candidate_114: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (lfappend lf5 Nil)).
Lemma candidate_115: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_116: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_117: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_118: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_119: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_120: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_121: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_122: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_123: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x Nil) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_124: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x lf5) Nil) (lfappend (rev (rev x)) lf5).
Lemma candidate_125: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (rev (rev lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_126: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (lfappend lf5 Nil)) (lfappend (rev (rev x)) lf5).
Lemma candidate_127: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_128: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_129: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_130: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_131: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_132: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_133: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_134: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_135: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_136: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_137: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_138: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_139: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_140: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_141: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_142: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_143: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_144: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_145: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_146: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_147: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_148: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_149: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (rev (rev lf5))).
Lemma candidate_150: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_151: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x lf5).
Lemma candidate_152: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_153: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_154: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_155: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_156: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_157: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_158: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_159: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_160: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_161: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_162: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_163: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_164: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (rev (rev lf6)) (rev lf7)).
Lemma candidate_165: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 Nil) (rev lf7)).
Lemma candidate_166: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (rev (lfappend lf6 (rev lf7)))).
Lemma candidate_167: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 (rev lf7)) Nil).
Lemma candidate_168: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (lfappend lf7 (rev lf6))).
Lemma candidate_169: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_170: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_171: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_172: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_173: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_174: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_175: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_176: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_177: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_178: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_179: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_180: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_181: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_182: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_183: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_184: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_185: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_186: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_187: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_188: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (rev (lfappend lf7 Nil))).
Lemma candidate_189: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (lfappend (rev lf7) Nil)).
Lemma candidate_190: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 (rev (rev lf8)))).
Lemma candidate_191: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (rev (lfappend lf7 (lfappend lf8 Nil))).
Lemma candidate_192: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_193: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 lf8)).
Lemma candidate_194: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_195: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_196: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_197: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_198: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_199: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_200: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_201: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_202: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_203: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_204: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_205: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_206: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_207: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_208: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (rev (lfappend x (rev lf7)))).
Lemma candidate_209: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x (rev lf7)) Nil).
Lemma candidate_210: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (lfappend lf7 (rev x))).
Lemma candidate_211: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend x (rev lf7)).
Lemma candidate_212: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_213: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_214: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_215: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_216: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_217: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_218: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_219: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_220: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_221: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_222: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_223: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_224: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_225: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_226: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_227: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_228: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_229: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_230: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_231: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_232: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_233: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (rev lf7)) Nil) (lfappend lf6 (rev lf7)).
Lemma candidate_234: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend lf7 (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_235: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_236: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_237: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_238: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_239: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_240: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_241: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_242: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_243: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_244: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_245: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_246: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_247: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_248: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (rev (rev lf6)) (rev lf7)).
Lemma candidate_249: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 Nil) (rev lf7)).
Lemma candidate_250: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (rev (lfappend lf6 (rev lf7)))).
Lemma candidate_251: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 (rev lf7)) Nil).
Lemma candidate_252: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (lfappend lf7 (rev lf6))).
Lemma candidate_253: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_254: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_255: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_256: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_257: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_258: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_259: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_260: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_261: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_262: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_263: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_264: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_265: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_266: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (lfappend lf7 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_267: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend (rev lf7) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_268: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (rev (rev lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_269: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_270: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_271: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_272: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_273: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_274: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_275: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_276: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_277: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_278: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (rev (lfappend lf7 Nil))).
Lemma candidate_279: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (lfappend (rev lf7) Nil)).
Lemma candidate_280: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 (rev (rev lf8)))).
Lemma candidate_281: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (rev (lfappend lf7 (lfappend lf8 Nil))).
Lemma candidate_282: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_283: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 lf8)).
Lemma candidate_284: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_285: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_286: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_287: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_288: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_289: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_290: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_291: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_292: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_293: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_294: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_295: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_296: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_297: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_298: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_299: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_300: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_301: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_302: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_303: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) (rev lf7))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_304: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_305: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x (rev lf7)) Nil)   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_306: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend lf7 (rev x))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_307: forall (lf7 : lst) (x : lst), @eq lst (lfappend x (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_308: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_309: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_310: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (rev (lfappend x (rev lf7)))).
Lemma candidate_311: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x (rev lf7)) Nil).
Lemma candidate_312: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (lfappend lf7 (rev x))).
Lemma candidate_313: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend x (rev lf7)).
Lemma candidate_314: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_315: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_316: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_317: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_318: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_319: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_320: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_321: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_322: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_323: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_324: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_325: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_326: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_327: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_328: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_329: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_330: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_331: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_332: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_333: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_334: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_335: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_336: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_337: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_338: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_339: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_340: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_341: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_342: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_343: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_344: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_345: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_346: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_347: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_348: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_349: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_350: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (rev (rev lf6)) y).
Lemma candidate_351: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 Nil) y).
Lemma candidate_352: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 y) Nil).
Lemma candidate_353: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_354: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_355: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 y).
Lemma candidate_356: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_357: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_358: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_359: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_360: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_361: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_362: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_363: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_364: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_365: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_366: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_367: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_368: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_369: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_370: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_371: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_372: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_373: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_374: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_375: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_376: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_377: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_378: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_379: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_380: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf8)))).
Lemma candidate_381: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf8 Nil))).
Lemma candidate_382: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (rev (lfappend (rev y) lf8)).
Lemma candidate_383: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_384: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_385: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) y).
Lemma candidate_386: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_387: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_388: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_389: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_390: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_391: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_392: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_393: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_394: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_395: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_396: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_397: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_398: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (rev (rev x)) y).
Lemma candidate_399: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x Nil) y).
Lemma candidate_400: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x y) Nil).
Lemma candidate_401: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (rev (rev y))).
Lemma candidate_402: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (lfappend y Nil)).
Lemma candidate_403: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x y).
Lemma candidate_404: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_405: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_406: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_407: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_408: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_409: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_410: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_411: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_412: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_413: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_414: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_415: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_416: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_417: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_418: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_419: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_420: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_421: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_422: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_423: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_424: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_425: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_426: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_427: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_428: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_429: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_430: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 y) Nil) (lfappend lf6 (rev (rev y))).
Lemma candidate_431: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_432: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend y Nil)) (lfappend lf6 (rev (rev y))).
Lemma candidate_433: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 y) (lfappend lf6 (rev (rev y))).
Lemma candidate_434: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_435: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_436: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_437: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_438: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_439: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_440: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_441: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_442: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_443: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_444: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_445: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_446: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_447: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_448: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_449: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_450: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_451: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_452: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (rev (rev lf6)) y).
Lemma candidate_453: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 Nil) y).
Lemma candidate_454: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 y) Nil).
Lemma candidate_455: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_456: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_457: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 y).
Lemma candidate_458: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_459: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_460: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_461: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_462: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_463: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_464: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_465: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_466: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) lf8)) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_467: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_468: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend y Nil))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_469: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) y) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_470: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_471: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_472: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_473: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_474: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_475: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_476: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_477: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_478: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_479: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_480: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_481: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_482: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_483: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_484: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_485: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_486: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_487: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_488: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_489: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_490: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_491: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_492: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_493: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_494: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf8)))).
Lemma candidate_495: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf8 Nil))).
Lemma candidate_496: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (rev (lfappend (rev y) lf8)).
Lemma candidate_497: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_498: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_499: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) y).
Lemma candidate_500: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_501: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_502: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_503: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_504: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_505: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_506: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_507: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_508: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_509: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_510: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_511: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_512: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_513: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_514: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_515: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_516: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_517: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_518: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_519: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_520: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_521: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_522: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_523: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_524: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (rev (rev x)) y).
Lemma candidate_525: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x Nil) y).
Lemma candidate_526: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x y) Nil).
Lemma candidate_527: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (rev (rev y))).
Lemma candidate_528: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (lfappend y Nil)).
Lemma candidate_529: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x y).
Lemma candidate_530: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_531: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_532: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_533: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_534: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_535: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_536: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_537: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_538: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_539: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_540: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_541: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_542: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_543: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_544: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_545: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_546: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_547: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_548: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_549: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_550: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_551: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_552: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_553: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_554: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_555: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_556: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_557: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_558: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_559: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_560: forall (lf1 : lst), @eq lst (rev (lfappend (rev (lfappend lf1 Nil)) Nil)) lf1.
Lemma candidate_561: forall (lf1 : lst), @eq lst (rev (lfappend (lfappend (rev lf1) Nil) Nil)) lf1.
Lemma candidate_562: forall (lf1 : lst), @eq lst (rev (rev (rev (rev lf1)))) lf1.
Lemma candidate_563: forall (lf1 : lst), @eq lst (rev (rev (lfappend lf1 Nil))) lf1.
Lemma candidate_564: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_565: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_566: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_567: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_568: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_569: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_570: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_571: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_572: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_573: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_574: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_575: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_576: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_577: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_578: forall (lf1 : lst), @eq lst (rev (lfappend (rev (lfappend lf1 Nil)) Nil)) lf1.
Lemma candidate_579: forall (lf1 : lst), @eq lst (rev (lfappend (lfappend (rev lf1) Nil) Nil)) lf1.
Lemma candidate_580: forall (lf1 : lst), @eq lst (rev (rev (rev (rev lf1)))) lf1.
Lemma candidate_581: forall (lf1 : lst), @eq lst (rev (rev (lfappend lf1 Nil))) lf1.
Lemma candidate_582: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_583: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_584: forall (lf1 : lst), @eq lst (rev (rev (rev (lfappend (rev lf1) Nil)))) lf1.
Lemma candidate_585: forall (lf1 : lst), @eq lst (rev (rev (lfappend (rev (rev lf1)) Nil))) lf1.
Lemma candidate_586: forall (lf1 : lst), @eq lst (rev (rev (lfappend (lfappend lf1 Nil) Nil))) lf1.
Lemma candidate_587: forall (lf1 : lst), @eq lst (rev (rev (rev (rev lf1)))) lf1.
Lemma candidate_588: forall (lf1 : lst), @eq lst (rev (rev (lfappend lf1 Nil))) lf1.
Lemma candidate_589: forall (lf1 : lst), @eq lst (rev (rev (lf1))) lf1.
Lemma candidate_590: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_591: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_592: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_593: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_594: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_595: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_596: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_597: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_598: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_599: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_600: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_601: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_602: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_603: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_604: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_605: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_606: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_607: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_608: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_609: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_610: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_611: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_612: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_613: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_614: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_615: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_616: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_617: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_618: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_619: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_620: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_621: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_622: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_623: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_624: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_625: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_626: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (rev (lfappend lf6 Nil))))   (lfappend lf6 lf5).
Lemma candidate_627: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend (rev lf6) Nil)))   (lfappend lf6 lf5).
Lemma candidate_628: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev lf5))))) (lfappend lf6 lf5).
Lemma candidate_629: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend lf5 Nil)))) (lfappend lf6 lf5).
Lemma candidate_630: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (rev lf6))) (lfappend lf6 lf5).
Lemma candidate_631: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 lf5))) (lfappend lf6 lf5).
Lemma candidate_632: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_633: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_634: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_635: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_636: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_637: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_638: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_639: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_640: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_641: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_642: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_643: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_644: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_645: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_646: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_647: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_648: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_649: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_650: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_651: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_652: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_653: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_654: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_655: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_656: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_657: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend lf8 Nil)))   (lfappend (rev lf8) lf5).
Lemma candidate_658: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) lf8)) (lfappend (rev lf8) lf5).
Lemma candidate_659: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_660: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend lf5 Nil)) (lfappend (rev lf8) lf5).
Lemma candidate_661: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_662: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev lf5)))))   (lfappend (rev lf8) lf5).
Lemma candidate_663: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend lf5 Nil))))   (lfappend (rev lf8) lf5).
Lemma candidate_664: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_665: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_666: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend lf8 Nil)))   (lfappend (rev lf8) lf5).
Lemma candidate_667: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) lf8)) (lfappend (rev lf8) lf5).
Lemma candidate_668: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_669: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_670: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_671: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_672: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_673: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_674: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) (rev (rev lf8)))).
Lemma candidate_675: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5)   (rev (lfappend (rev lf5) (lfappend lf8 Nil))).
Lemma candidate_676: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) lf8)).
Lemma candidate_677: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (rev (rev lf5))).
Lemma candidate_678: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (lfappend lf5 Nil)).
Lemma candidate_679: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_680: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_681: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_682: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_683: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_684: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_685: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_686: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_687: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_688: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_689: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_690: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_691: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_692: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_693: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x Nil) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_694: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x lf5) Nil) (lfappend (rev (rev x)) lf5).
Lemma candidate_695: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (rev (rev lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_696: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (lfappend lf5 Nil)) (lfappend (rev (rev x)) lf5).
Lemma candidate_697: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_698: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_699: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_700: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_701: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_702: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_703: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_704: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (lfappend x Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_705: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend (rev x) Nil)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_706: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (rev (rev lf5))))) (lfappend (rev (rev x)) lf5).
Lemma candidate_707: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (lfappend lf5 Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_708: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev x))) (lfappend (rev (rev x)) lf5).
Lemma candidate_709: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_710: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_711: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_712: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_713: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_714: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_715: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_716: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_717: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_718: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_719: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_720: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_721: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_722: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_723: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_724: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_725: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (rev (rev lf5))).
Lemma candidate_726: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_727: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x lf5).
Lemma candidate_728: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_729: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_730: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_731: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_732: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_733: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_734: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_735: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_736: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_737: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_738: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_739: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_740: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_741: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_742: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_743: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (rev lf7)) Nil) (lfappend lf6 (rev lf7)).
Lemma candidate_744: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend lf7 (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_745: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_746: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_747: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_748: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_749: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_750: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_751: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_752: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev (rev lf7)) (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_753: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) (rev lf6)))   (lfappend lf6 (rev lf7)).
Lemma candidate_754: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev lf6))))) (lfappend lf6 (rev lf7)).
Lemma candidate_755: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf7 (rev lf6)) Nil))   (lfappend lf6 (rev lf7)).
Lemma candidate_756: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_757: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend lf7 (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_758: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_759: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_760: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_761: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_762: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_763: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_764: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (rev (rev lf6)) (rev lf7)).
Lemma candidate_765: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 Nil) (rev lf7)).
Lemma candidate_766: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (rev (lfappend lf6 (rev lf7)))).
Lemma candidate_767: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 (rev lf7)) Nil).
Lemma candidate_768: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (lfappend lf7 (rev lf6))).
Lemma candidate_769: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_770: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_771: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_772: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_773: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_774: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_775: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_776: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_777: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_778: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_779: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_780: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_781: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_782: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_783: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_784: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_785: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_786: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_787: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_788: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (lfappend lf7 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_789: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend (rev lf7) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_790: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (rev (rev lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_791: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_792: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_793: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_794: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev (rev lf7)) lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_795: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) lf8))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_796: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (lfappend lf7 lf8) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_797: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (rev (rev lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_798: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_799: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_800: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_801: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_802: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_803: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_804: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_805: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_806: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (rev (lfappend lf7 Nil))).
Lemma candidate_807: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (lfappend (rev lf7) Nil)).
Lemma candidate_808: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 (rev (rev lf8)))).
Lemma candidate_809: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (rev (lfappend lf7 (lfappend lf8 Nil))).
Lemma candidate_810: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_811: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 lf8)).
Lemma candidate_812: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_813: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_814: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_815: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_816: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_817: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_818: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_819: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_820: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_821: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_822: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_823: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_824: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_825: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_826: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_827: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_828: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_829: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_830: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_831: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_832: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_833: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_834: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_835: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_836: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_837: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) (rev lf7))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_838: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_839: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x (rev lf7)) Nil)   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_840: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend lf7 (rev x))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_841: forall (lf7 : lst) (x : lst), @eq lst (lfappend x (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_842: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (rev (rev lf7)) (rev x)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_843: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) (rev x)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_844: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev x)))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_845: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf7 (rev x)) Nil))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_846: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_847: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend lf7 (rev x))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_848: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_849: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_850: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (rev (lfappend x (rev lf7)))).
Lemma candidate_851: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x (rev lf7)) Nil).
Lemma candidate_852: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (lfappend lf7 (rev x))).
Lemma candidate_853: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend x (rev lf7)).
Lemma candidate_854: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_855: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_856: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_857: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_858: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_859: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_860: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_861: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_862: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_863: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_864: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_865: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_866: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_867: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_868: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_869: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_870: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_871: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_872: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_873: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_874: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_875: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_876: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_877: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_878: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_879: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_880: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_881: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_882: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_883: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_884: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_885: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_886: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_887: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_888: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_889: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_890: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (rev (lfappend lf6 Nil))))   (lfappend lf6 lf5).
Lemma candidate_891: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend (rev lf6) Nil)))   (lfappend lf6 lf5).
Lemma candidate_892: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev lf5))))) (lfappend lf6 lf5).
Lemma candidate_893: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend lf5 Nil)))) (lfappend lf6 lf5).
Lemma candidate_894: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (rev lf6))) (lfappend lf6 lf5).
Lemma candidate_895: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 lf5))) (lfappend lf6 lf5).
Lemma candidate_896: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (rev (rev lf6)) lf5))) (lfappend lf6 lf5).
Lemma candidate_897: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 Nil) lf5))) (lfappend lf6 lf5).
Lemma candidate_898: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 lf5) Nil))) (lfappend lf6 lf5).
Lemma candidate_899: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev lf5))))) (lfappend lf6 lf5).
Lemma candidate_900: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend lf5 Nil)))) (lfappend lf6 lf5).
Lemma candidate_901: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 lf5))) (lfappend lf6 lf5).
Lemma candidate_902: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_903: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_904: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_905: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_906: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_907: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_908: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_909: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_910: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_911: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_912: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_913: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_914: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_915: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_916: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_917: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_918: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_919: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_920: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_921: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_922: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_923: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_924: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_925: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_926: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_927: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_928: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_929: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_930: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_931: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_932: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) lf5).
Lemma candidate_933: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (rev (rev x)) Nil) lf5).
Lemma candidate_934: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (lfappend x Nil) Nil) lf5).
Lemma candidate_935: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma candidate_936: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) lf5).
Lemma candidate_937: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (x) lf5).
Lemma candidate_938: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_939: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_940: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_941: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_942: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_943: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_944: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev lf5)))))   (lfappend (rev lf8) lf5).
Lemma candidate_945: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend lf5 Nil))))   (lfappend (rev lf8) lf5).
Lemma candidate_946: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_947: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_948: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend lf8 Nil)))   (lfappend (rev lf8) lf5).
Lemma candidate_949: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) lf8)) (lfappend (rev lf8) lf5).
Lemma candidate_950: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (rev (rev lf8))))))   (lfappend (rev lf8) lf5).
Lemma candidate_951: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (lfappend lf8 Nil)))))   (lfappend (rev lf8) lf5).
Lemma candidate_952: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_953: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev lf5)))))   (lfappend (rev lf8) lf5).
Lemma candidate_954: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend lf5 Nil))))   (lfappend (rev lf8) lf5).
Lemma candidate_955: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_956: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_957: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend lf8 Nil)))   (lfappend (rev lf8) lf5).
Lemma candidate_958: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) lf8)) (lfappend (rev lf8) lf5).
Lemma candidate_959: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_960: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend lf5 Nil)) (lfappend (rev lf8) lf5).
Lemma candidate_961: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_962: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_963: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_964: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_965: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_966: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_967: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_968: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) (rev (rev lf8)))).
Lemma candidate_969: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5)   (rev (lfappend (rev lf5) (lfappend lf8 Nil))).
Lemma candidate_970: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) lf8)).
Lemma candidate_971: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (rev (rev lf5))).
Lemma candidate_972: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (lfappend lf5 Nil)).
Lemma candidate_973: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) lf5).
Lemma candidate_974: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_975: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_976: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_977: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_978: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_979: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_980: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_981: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_982: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_983: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_984: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_985: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_986: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_987: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_988: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_989: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_990: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_991: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_992: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) lf5).
Lemma candidate_993: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (rev (rev x)) Nil) lf5).
Lemma candidate_994: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (lfappend x Nil) Nil) lf5).
Lemma candidate_995: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma candidate_996: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) lf5).
Lemma candidate_997: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (x) lf5).
Lemma candidate_998: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (lfappend x Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_999: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend (rev x) Nil)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_1000: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (rev (rev lf5))))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1001: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (lfappend lf5 Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_1002: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev x))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1003: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1004: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1005: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1006: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1007: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1008: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1009: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1010: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend (rev (rev x)) lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1011: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend (lfappend x Nil) lf5)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_1012: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend (lfappend x lf5) Nil)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_1013: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (rev (rev lf5))))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1014: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (lfappend lf5 Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_1015: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1016: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev (lfappend x Nil)) Nil)) lf5).
Lemma candidate_1017: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (lfappend (rev x) Nil) Nil)) lf5).
Lemma candidate_1018: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev (rev (rev x)))) lf5).
Lemma candidate_1019: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev (lfappend x Nil))) lf5).
Lemma candidate_1020: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) lf5).
Lemma candidate_1021: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1022: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_1023: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x Nil) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_1024: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x lf5) Nil) (lfappend (rev (rev x)) lf5).
Lemma candidate_1025: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (rev (rev lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_1026: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (lfappend lf5 Nil)) (lfappend (rev (rev x)) lf5).
Lemma candidate_1027: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_1028: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_1029: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_1030: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_1031: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_1032: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_1033: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_1034: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1035: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1036: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1037: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1038: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_1039: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_1040: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_1041: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_1042: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_1043: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (rev (rev lf5))).
Lemma candidate_1044: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_1045: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x lf5).
Lemma candidate_1046: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_1047: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_1048: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_1049: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1050: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1051: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1052: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1053: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1054: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1055: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1056: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1057: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1058: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1059: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1060: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1061: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1062: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1063: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1064: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1065: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1066: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1067: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1068: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1069: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1070: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev (rev lf7)) (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_1071: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) (rev lf6)))   (lfappend lf6 (rev lf7)).
Lemma candidate_1072: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev lf6))))) (lfappend lf6 (rev lf7)).
Lemma candidate_1073: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf7 (rev lf6)) Nil))   (lfappend lf6 (rev lf7)).
Lemma candidate_1074: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_1075: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend lf7 (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_1076: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (rev (lfappend (rev y) Nil))).
Lemma candidate_1077: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (lfappend (rev (rev y)) Nil)).
Lemma candidate_1078: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (lfappend (lfappend y Nil) Nil)).
Lemma candidate_1079: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1080: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_1081: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (y)).
Lemma candidate_1082: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (rev (rev lf6)) (rev lf7))))   (lfappend lf6 (rev lf7)).
Lemma candidate_1083: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 Nil) (rev lf7))))   (lfappend lf6 (rev lf7)).
Lemma candidate_1084: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (rev (rev (lfappend lf6 (rev lf7))))))   (lfappend lf6 (rev lf7)).
Lemma candidate_1085: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 (rev lf7)) Nil)))   (lfappend lf6 (rev lf7)).
Lemma candidate_1086: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev lf6))))) (lfappend lf6 (rev lf7)).
Lemma candidate_1087: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_1088: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_1089: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_1090: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_1091: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (rev lf7)) Nil) (lfappend lf6 (rev lf7)).
Lemma candidate_1092: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend lf7 (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_1093: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_1094: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (rev (rev lf6)) (rev lf7)).
Lemma candidate_1095: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 Nil) (rev lf7)).
Lemma candidate_1096: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (rev (lfappend lf6 (rev lf7)))).
Lemma candidate_1097: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 (rev lf7)) Nil).
Lemma candidate_1098: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (lfappend lf7 (rev lf6))).
Lemma candidate_1099: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_1100: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1101: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1102: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1103: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1104: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_1105: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_1106: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_1107: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_1108: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_1109: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_1110: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_1111: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_1112: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_1113: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_1114: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_1115: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1116: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1117: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1118: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1119: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1120: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1121: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1122: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1123: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1124: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) (rev lf7)).
Lemma candidate_1125: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (rev (rev x)) Nil) (rev lf7)).
Lemma candidate_1126: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (lfappend x Nil) Nil) (rev lf7)).
Lemma candidate_1127: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1128: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_1129: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (x) (rev lf7)).
Lemma candidate_1130: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1131: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1132: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1133: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1134: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1135: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1136: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev (rev lf7)) lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1137: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) lf8))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1138: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (lfappend lf7 lf8) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1139: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (rev (rev lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1140: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1141: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1142: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (lfappend (rev y) Nil))).
Lemma candidate_1143: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (lfappend (rev (rev y)) Nil)).
Lemma candidate_1144: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_1145: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1146: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_1147: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (y)).
Lemma candidate_1148: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (lfappend lf7 Nil)))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1149: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend (rev lf7) Nil))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1150: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev (rev lf8))))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1151: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend lf7 (lfappend lf8 Nil)))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1152: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev lf7))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1153: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend lf7 lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1154: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (lfappend lf7 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1155: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend (rev lf7) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1156: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (rev (rev lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1157: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1158: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1159: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1160: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_1161: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_1162: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_1163: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_1164: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_1165: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_1166: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (rev (lfappend lf7 Nil))).
Lemma candidate_1167: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (lfappend (rev lf7) Nil)).
Lemma candidate_1168: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 (rev (rev lf8)))).
Lemma candidate_1169: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (rev (lfappend lf7 (lfappend lf8 Nil))).
Lemma candidate_1170: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1171: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 lf8)).
Lemma candidate_1172: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1173: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1174: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1175: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1176: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_1177: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_1178: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_1179: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_1180: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_1181: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_1182: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_1183: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_1184: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_1185: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_1186: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_1187: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1188: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1189: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1190: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1191: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1192: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1193: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1194: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1195: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1196: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1197: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1198: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1199: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1200: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1201: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1202: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) (rev lf7)).
Lemma candidate_1203: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (rev (rev x)) Nil) (rev lf7)).
Lemma candidate_1204: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (lfappend x Nil) Nil) (rev lf7)).
Lemma candidate_1205: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1206: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_1207: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (x) (rev lf7)).
Lemma candidate_1208: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (rev (rev lf7)) (rev x)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1209: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) (rev x)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1210: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev x)))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1211: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf7 (rev x)) Nil))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1212: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1213: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend lf7 (rev x))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1214: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev x)) (rev (lfappend (rev y) Nil))).
Lemma candidate_1215: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev x)) (lfappend (rev (rev y)) Nil)).
Lemma candidate_1216: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev x)) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_1217: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1218: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (lfappend y Nil)).
Lemma candidate_1219: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (y)).
Lemma candidate_1220: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend (rev (rev x)) (rev lf7))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1221: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend (lfappend x Nil) (rev lf7))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1222: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (rev (rev (lfappend x (rev lf7))))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1223: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend (lfappend x (rev lf7)) Nil)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1224: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev x)))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1225: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1226: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev (lfappend x Nil)) Nil)) (rev lf7)).
Lemma candidate_1227: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (lfappend (rev x) Nil) Nil)) (rev lf7)).
Lemma candidate_1228: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev (rev (rev x)))) (rev lf7)).
Lemma candidate_1229: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev (lfappend x Nil))) (rev lf7)).
Lemma candidate_1230: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) (rev lf7)).
Lemma candidate_1231: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1232: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1233: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) (rev lf7))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1234: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1235: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x (rev lf7)) Nil)   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1236: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend lf7 (rev x))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1237: forall (lf7 : lst) (x : lst), @eq lst (lfappend x (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1238: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1239: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_1240: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (rev (lfappend x (rev lf7)))).
Lemma candidate_1241: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x (rev lf7)) Nil).
Lemma candidate_1242: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (lfappend lf7 (rev x))).
Lemma candidate_1243: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend x (rev lf7)).
Lemma candidate_1244: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_1245: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_1246: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_1247: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_1248: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_1249: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_1250: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1251: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1252: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1253: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1254: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_1255: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_1256: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_1257: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_1258: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_1259: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_1260: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_1261: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_1262: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_1263: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_1264: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_1265: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1266: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1267: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1268: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1269: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1270: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1271: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1272: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1273: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1274: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1275: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1276: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1277: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1278: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1279: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1280: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_1281: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_1282: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 y) Nil) (lfappend lf6 (rev (rev y))).
Lemma candidate_1283: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1284: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend y Nil)) (lfappend lf6 (rev (rev y))).
Lemma candidate_1285: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 y) (lfappend lf6 (rev (rev y))).
Lemma candidate_1286: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_1287: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_1288: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_1289: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_1290: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_1291: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_1292: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev (lfappend lf6 Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1293: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (lfappend (rev lf6) Nil)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1294: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev y))))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1295: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend y Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1296: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev lf6))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1297: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1298: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_1299: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_1300: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_1301: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_1302: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_1303: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_1304: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1305: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1306: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1307: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1308: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1309: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1310: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (rev (rev lf6)) y).
Lemma candidate_1311: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 Nil) y).
Lemma candidate_1312: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 y) Nil).
Lemma candidate_1313: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1314: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_1315: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 y).
Lemma candidate_1316: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1317: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1318: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1319: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1320: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1321: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1322: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_1323: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_1324: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_1325: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_1326: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_1327: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_1328: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1329: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1330: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) lf8)) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1331: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1332: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend y Nil))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1333: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) y) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1334: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_1335: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_1336: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_1337: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_1338: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_1339: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_1340: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev y)))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1341: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend y Nil))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1342: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1343: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1344: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1345: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) lf8)) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1346: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_1347: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_1348: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_1349: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_1350: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_1351: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_1352: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_1353: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_1354: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_1355: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_1356: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_1357: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_1358: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1359: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1360: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1361: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1362: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1363: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1364: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf8)))).
Lemma candidate_1365: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf8 Nil))).
Lemma candidate_1366: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (rev (lfappend (rev y) lf8)).
Lemma candidate_1367: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1368: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_1369: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) y).
Lemma candidate_1370: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1371: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1372: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1373: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1374: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1375: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1376: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_1377: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_1378: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_1379: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_1380: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_1381: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_1382: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_1383: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_1384: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_1385: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_1386: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_1387: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_1388: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1389: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1390: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1391: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1392: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1393: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1394: forall (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (rev (lfappend x Nil))))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1395: forall (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (lfappend (rev x) Nil)))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1396: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev (rev y)))))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1397: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x (lfappend y Nil))))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1398: forall (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (rev x)))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1399: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1400: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (rev (rev x)) y).
Lemma candidate_1401: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1402: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1403: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (rev (rev y))).
Lemma candidate_1404: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1405: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x y).
Lemma candidate_1406: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_1407: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_1408: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_1409: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_1410: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_1411: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_1412: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1413: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1414: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1415: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1416: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1417: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1418: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_1419: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_1420: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_1421: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_1422: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_1423: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_1424: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1425: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1426: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1427: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1428: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1429: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1430: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1431: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1432: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1433: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1434: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1435: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1436: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_1437: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_1438: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_1439: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_1440: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_1441: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_1442: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (rev (lfappend (rev y) Nil))).
Lemma candidate_1443: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (lfappend (rev (rev y)) Nil)).
Lemma candidate_1444: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (lfappend (lfappend y Nil) Nil)).
Lemma candidate_1445: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1446: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_1447: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (y)).
Lemma candidate_1448: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev (lfappend lf6 Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1449: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (lfappend (rev lf6) Nil)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1450: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev y))))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1451: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend y Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1452: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev lf6))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1453: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1454: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1455: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1456: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1457: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1458: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1459: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1460: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (rev (rev lf6)) y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1461: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 Nil) y)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1462: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 y) Nil)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1463: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev y))))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1464: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend y Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1465: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1466: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (rev (lfappend (rev (lfappend y Nil)) Nil))).
Lemma candidate_1467: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (rev (lfappend (lfappend (rev y) Nil) Nil))).
Lemma candidate_1468: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev (rev (rev y))))).
Lemma candidate_1469: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (rev (rev (lfappend y Nil)))).
Lemma candidate_1470: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend lf6 (rev (lfappend (rev y) Nil))).
Lemma candidate_1471: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1472: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_1473: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_1474: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 y) Nil) (lfappend lf6 (rev (rev y))).
Lemma candidate_1475: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1476: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend y Nil)) (lfappend lf6 (rev (rev y))).
Lemma candidate_1477: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 y) (lfappend lf6 (rev (rev y))).
Lemma candidate_1478: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1479: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1480: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1481: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1482: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1483: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1484: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1485: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1486: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1487: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1488: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_1489: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_1490: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (rev (rev lf6)) y).
Lemma candidate_1491: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 Nil) y).
Lemma candidate_1492: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 y) Nil).
Lemma candidate_1493: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1494: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_1495: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 y).
Lemma candidate_1496: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_1497: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_1498: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_1499: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1500: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1501: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1502: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1503: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1504: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1505: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1506: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1507: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1508: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1509: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1510: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1511: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1512: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1513: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1514: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) (rev (rev y))).
Lemma candidate_1515: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (rev (rev x)) Nil) (rev (rev y))).
Lemma candidate_1516: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (lfappend x Nil) Nil) (rev (rev y))).
Lemma candidate_1517: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1518: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) (rev (rev y))).
Lemma candidate_1519: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (x) (rev (rev y))).
Lemma candidate_1520: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (lfappend (rev y) Nil))).
Lemma candidate_1521: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (lfappend (rev (rev y)) Nil)).
Lemma candidate_1522: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_1523: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1524: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_1525: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (y)).
Lemma candidate_1526: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1527: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1528: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1529: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1530: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1531: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_1532: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev y)))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1533: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend y Nil))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1534: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1535: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1536: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1537: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) lf8)) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1538: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev y) (rev (rev lf8))))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1539: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev y) (lfappend lf8 Nil)))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1540: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev y) lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1541: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev y)))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1542: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend y Nil))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1543: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1544: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (lfappend (rev (lfappend y Nil)) Nil))).
Lemma candidate_1545: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (lfappend (lfappend (rev y) Nil) Nil))).
Lemma candidate_1546: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (rev (rev (rev y))))).
Lemma candidate_1547: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (rev (lfappend y Nil)))).
Lemma candidate_1548: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev lf8) (rev (lfappend (rev y) Nil))).
Lemma candidate_1549: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1550: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1551: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1552: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) lf8)) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1553: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1554: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend y Nil))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1555: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) y) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1556: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_1557: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_1558: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_1559: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_1560: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_1561: forall (lf8 : lst), @eq lst (rev lf8) (rev lf8).
Lemma candidate_1562: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1563: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1564: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1565: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1566: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1567: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1568: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf8)))).
Lemma candidate_1569: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf8 Nil))).
Lemma candidate_1570: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (rev (lfappend (rev y) lf8)).
Lemma candidate_1571: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1572: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_1573: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) y).
Lemma candidate_1574: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1575: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1576: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1577: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1578: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_1579: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_1580: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_1581: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_1582: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_1583: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1584: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1585: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1586: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1587: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1588: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1589: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1590: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1591: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1592: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_1593: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1594: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_1595: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_1596: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_1597: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 6580 seconds
Duplicates removed: 1286
Filtered by Quickchick: 40
Filtered by script: 21
Remaining: 250

Lemmas: 
Lemma candidate_349: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_55: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_589: forall (lf1 : lst), @eq lst (rev (rev (lf1))) lf1.
Lemma candidate_571: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_358: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_64: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_360: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_359: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_348: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_66: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_65: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_54: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_574: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_562: forall (lf1 : lst), @eq lst (rev (rev (rev (rev lf1)))) lf1.
Lemma candidate_172: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_34: forall (lf8 : lst), @eq lst (rev lf8) (rev (rev (rev lf8))).
Lemma candidate_10: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_576: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_575: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_570: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_563: forall (lf1 : lst), @eq lst (rev (rev (lfappend lf1 Nil))) lf1.
Lemma candidate_174: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_173: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_36: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev lf8) Nil).
Lemma candidate_35: forall (lf8 : lst), @eq lst (rev lf8) (rev (lfappend lf8 Nil)).
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_14: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_12: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_11: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_3: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_613: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_605: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_602: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_345: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_344: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_51: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_50: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_606: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_604: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_603: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_433: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 y) (lfappend lf6 (rev (rev y))).
Lemma candidate_357: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_356: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_355: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 y).
Lemma candidate_346: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_127: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_63: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_62: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_61: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x lf5).
Lemma candidate_52: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_585: forall (lf1 : lst), @eq lst (rev (rev (lfappend (rev (rev lf1)) Nil))) lf1.
Lemma candidate_584: forall (lf1 : lst), @eq lst (rev (rev (rev (lfappend (rev lf1) Nil)))) lf1.
Lemma candidate_567: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_566: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_600: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_631: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 lf5))) (lfappend lf6 lf5).
Lemma candidate_586: forall (lf1 : lst), @eq lst (rev (rev (lfappend (lfappend lf1 Nil) Nil))) lf1.
Lemma candidate_573: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_572: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_568: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_561: forall (lf1 : lst), @eq lst (rev (lfappend (lfappend (rev lf1) Nil) Nil)) lf1.
Lemma candidate_560: forall (lf1 : lst), @eq lst (rev (lfappend (rev (lfappend lf1 Nil)) Nil)) lf1.
Lemma candidate_171: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_170: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_77: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_74: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_33: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (lfappend (rev lf8) Nil) Nil).
Lemma candidate_32: forall (lf8 : lst), @eq lst (rev lf8) (lfappend (rev (lfappend lf8 Nil)) Nil).
Lemma candidate_23: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_20: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_9: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_8: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_78: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_76: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_75: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_24: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_22: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_21: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_611: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_608: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_598: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_511: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_403: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x y).
Lemma candidate_1519: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (x) (rev (rev y))).
Lemma candidate_1219: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (y)).
Lemma candidate_630: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (rev lf6))) (lfappend lf6 lf5).
Lemma candidate_271: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_234: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend lf7 (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_193: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 lf8)).
Lemma candidate_168: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (lfappend lf7 (rev lf6))).
Lemma candidate_100: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) lf8)) (lfappend (rev lf8) lf5).
Lemma candidate_40: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) lf8)).
Lemma candidate_612: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_610: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_609: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_599: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1297: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_709: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_469: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) y) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_428: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_385: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (lfappend (rev lf8) y).
Lemma candidate_350: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (rev (rev lf6)) y).
Lemma candidate_307: forall (lf7 : lst) (x : lst), @eq lst (lfappend x (rev lf7)) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_211: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (lfappend x (rev lf7)).
Lemma candidate_125: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (rev (rev lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_59: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (rev (rev lf5))).
Lemma candidate_432: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend y Nil)) (lfappend lf6 (rev (rev y))).
Lemma candidate_430: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 y) Nil) (lfappend lf6 (rev (rev y))).
Lemma candidate_429: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) y) (lfappend lf6 (rev (rev y))).
Lemma candidate_354: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_352: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 y) Nil).
Lemma candidate_351: forall (y : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev y))) (lfappend (lfappend lf6 Nil) y).
Lemma candidate_126: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (lfappend lf5 Nil)) (lfappend (rev (rev x)) lf5).
Lemma candidate_124: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x lf5) Nil) (lfappend (rev (rev x)) lf5).
Lemma candidate_123: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x Nil) lf5) (lfappend (rev (rev x)) lf5).
Lemma candidate_60: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_58: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_57: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_896: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (rev (rev lf6)) lf5))) (lfappend lf6 lf5).
Lemma candidate_664: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_628: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev lf5))))) (lfappend lf6 lf5).
Lemma candidate_232: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev lf7)))) (lfappend lf6 (rev lf7)).
Lemma candidate_230: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_166: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (rev (rev (lfappend lf6 (rev lf7)))).
Lemma candidate_164: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (rev (rev lf6)) (rev lf7)).
Lemma candidate_101: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev lf5))) (lfappend (rev lf8) lf5).
Lemma candidate_41: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (rev (rev lf5))).
Lemma candidate_597: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_596: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1296: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev lf6))) (lfappend lf6 (rev (rev y))).
Lemma candidate_708: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev x))) (lfappend (rev (rev x)) lf5).
Lemma candidate_466: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) lf8)) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_382: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y))) (rev (lfappend (rev y) lf8)).
Lemma candidate_306: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend lf7 (rev x))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_210: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (lfappend lf7 (rev x))).
Lemma candidate_898: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 lf5) Nil))) (lfappend lf6 lf5).
Lemma candidate_897: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 Nil) lf5))) (lfappend lf6 lf5).
Lemma candidate_629: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend lf5 Nil)))) (lfappend lf6 lf5).
Lemma candidate_233: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (rev lf7)) Nil) (lfappend lf6 (rev lf7)).
Lemma candidate_231: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (rev lf7)) (lfappend lf6 (rev lf7)).
Lemma candidate_167: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 (rev lf7)) Nil).
Lemma candidate_165: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev lf7)) (lfappend (lfappend lf6 Nil) (rev lf7)).
Lemma candidate_102: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend lf5 Nil)) (lfappend (rev lf8) lf5).
Lemma candidate_42: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (lfappend (rev lf8) (lfappend lf5 Nil)).
Lemma candidate_509: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_506: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_401: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (rev (rev y))).
Lemma candidate_398: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (rev (rev x)) y).
Lemma candidate_1153: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend lf7 lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_952: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_794: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev (rev lf7)) lf8)) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_754: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev lf6))))) (lfappend lf6 (rev lf7)).
Lemma candidate_752: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev (rev lf7)) (rev lf6))) (lfappend lf6 (rev lf7)).
Lemma candidate_268: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (rev (rev lf8)))) (lfappend (rev lf8) (rev lf7)).
Lemma candidate_190: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7)) (rev (lfappend lf7 (rev (rev lf8)))).
Lemma candidate_98: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev lf8)))) (lfappend (rev lf8) lf5).
Lemma candidate_38: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5) (rev (lfappend (rev lf5) (rev (rev lf8)))).
Lemma candidate_1518: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) (rev (rev y))).
Lemma candidate_1218: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (lfappend y Nil)).
Lemma candidate_510: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_508: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_507: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_402: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (lfappend y Nil)).
Lemma candidate_400: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x y) Nil).
Lemma candidate_399: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x Nil) y).
Lemma candidate_1460: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (rev (rev lf6)) y))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1342: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) y))) (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1294: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (rev (rev y))))) (lfappend lf6 (rev (rev y))).
Lemma candidate_1010: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend (rev (rev x)) lf5))) (lfappend (rev (rev x)) lf5).
Lemma candidate_706: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (rev (rev lf5))))) (lfappend (rev (rev x)) lf5).
Lemma candidate_304: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev lf7)))) (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_208: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7)) (rev (rev (lfappend x (rev lf7)))).
Lemma candidate_796: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (lfappend lf7 lf8) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_795: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) lf8))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_755: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf7 (rev lf6)) Nil))   (lfappend lf6 (rev lf7)).
Lemma candidate_753: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) (rev lf6)))   (lfappend lf6 (rev lf7)).
Lemma candidate_627: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend (rev lf6) Nil)))   (lfappend lf6 lf5).
Lemma candidate_626: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf5) (rev (lfappend lf6 Nil))))   (lfappend lf6 lf5).
Lemma candidate_269: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (lfappend lf7 (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_191: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (rev (lfappend lf7 (lfappend lf8 Nil))).
Lemma candidate_99: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend lf8 Nil)))   (lfappend (rev lf8) lf5).
Lemma candidate_39: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) lf5)   (rev (lfappend (rev lf5) (lfappend lf8 Nil))).
Lemma candidate_1398: forall (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (rev x)))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1462: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 y) Nil)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1461: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 Nil) y)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1295: forall (y : lst) (lf6 : lst), @eq lst (rev (rev (lfappend lf6 (lfappend y Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1012: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend (lfappend x lf5) Nil)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_1011: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend (lfappend x Nil) lf5)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_707: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (lfappend lf5 Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_468: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend y Nil))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_384: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (lfappend (rev lf8) (lfappend y Nil)).
Lemma candidate_305: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x (rev lf7)) Nil)   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_303: forall (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) (rev lf7))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_209: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x (rev lf7)) Nil).
Lemma candidate_207: forall (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev lf7))   (lfappend (lfappend x Nil) (rev lf7)).
Lemma candidate_1152: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev lf7))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1084: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (rev (rev (lfappend lf6 (rev lf7))))))   (lfappend lf6 (rev lf7)).
Lemma candidate_1082: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (rev (rev lf6)) (rev lf7))))   (lfappend lf6 (rev lf7)).
Lemma candidate_662: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev lf5)))))   (lfappend (rev lf8) lf5).
Lemma candidate_1540: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev y) lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_844: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev x)))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_842: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (rev (rev lf7)) (rev x)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_464: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf8))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_380: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf8)))).
Lemma candidate_1085: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 (rev lf7)) Nil)))   (lfappend lf6 (rev lf7)).
Lemma candidate_1083: forall (lf7 : lst) (lf6 : lst), @eq lst (rev (rev (lfappend (lfappend lf6 Nil) (rev lf7))))   (lfappend lf6 (rev lf7)).
Lemma candidate_663: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend lf5 Nil))))   (lfappend (rev lf8) lf5).
Lemma candidate_267: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (lfappend (rev lf7) Nil))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_266: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (lfappend lf7 Nil)))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_189: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (lfappend (rev lf7) Nil)).
Lemma candidate_188: forall (lf7 : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev lf7))   (lfappend (rev lf8) (rev (lfappend lf7 Nil))).
Lemma candidate_1396: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x (rev (rev y)))))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1293: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (lfappend (rev lf6) Nil)))   (lfappend lf6 (rev (rev y))).
Lemma candidate_1292: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev (lfappend lf6 Nil))))   (lfappend lf6 (rev (rev y))).
Lemma candidate_845: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf7 (rev x)) Nil))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_843: forall (lf7 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf7 Nil) (rev x)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_705: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend (rev x) Nil)))   (lfappend (rev (rev x)) lf5).
Lemma candidate_704: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (lfappend x Nil))))   (lfappend (rev (rev x)) lf5).
Lemma candidate_465: forall (y : lst) (lf8 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf8 Nil)))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_381: forall (y : lst) (lf8 : lst), @eq lst (lfappend (rev lf8) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf8 Nil))).
Lemma candidate_1150: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend lf7 (rev (rev lf8))))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_950: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (rev (rev lf8))))))   (lfappend (rev lf8) lf5).
Lemma candidate_1515: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (rev (rev x)) Nil) (rev (rev y))).
Lemma candidate_1514: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (lfappend (rev x) Nil)) (rev (rev y))).
Lemma candidate_1397: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x (lfappend y Nil))))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1215: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev x)) (lfappend (rev (rev y)) Nil)).
Lemma candidate_1214: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev x)) (rev (lfappend (rev y) Nil))).
Lemma candidate_1340: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (rev y)))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1222: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (rev (rev (lfappend x (rev lf7))))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1220: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend (rev (rev x)) (rev lf7))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1151: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend lf7 (lfappend lf8 Nil)))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_951: forall (lf5 : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (lfappend lf8 Nil)))))   (lfappend (rev lf8) lf5).
Lemma candidate_1516: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (lfappend (lfappend x Nil) Nil) (rev (rev y))).
Lemma candidate_1216: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y)))   (lfappend (rev (rev x)) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_1341: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend y Nil))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1223: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend (lfappend x (rev lf7)) Nil)))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1221: forall (lf7 : lst) (x : lst), @eq lst (rev (rev (lfappend (lfappend x Nil) (rev lf7))))   (lfappend (rev (rev x)) (rev lf7)).
Lemma candidate_1395: forall (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (lfappend (rev x) Nil)))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1394: forall (y : lst) (x : lst), @eq lst (rev (lfappend (rev y) (rev (lfappend x Nil))))   (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_1538: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev y) (rev (rev lf8))))))   (lfappend (rev lf8) (rev (rev y))).
Lemma candidate_1149: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (lfappend (rev lf7) Nil))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1148: forall (lf7 : lst) (lf8 : lst), @eq lst (rev (rev (lfappend (rev lf8) (rev (lfappend lf7 Nil)))))   (lfappend (rev lf8) (rev lf7)).
Lemma candidate_1539: forall (y : lst) (lf8 : lst), @eq lst (rev (rev (rev (lfappend (rev y) (lfappend lf8 Nil)))))   (lfappend (rev lf8) (rev (rev y))).
File Information
- File name: goal19
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal19_lem2_33_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal19_lem2_33_lem
- Namespace: adtind
- Proof name: lem2
- Theorem: Theorem lem2: forall l0 : lst, @eq lst (rev (rev l0)) l0.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l)

* Hypothesis:
IHl : @eq lst (rev (rev l)) l
l : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
l : lst
n : natural

* Terms:
rev (lfappend (rev l) (Cons n Nil)) : lst
@eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l) : Prop
rev (rev l) : lst
lst : Set
Cons n l : lst
Cons n Nil : lst
@eq lst (rev (rev l)) l : Prop
natural : Set
l : lst
rev l : lst
n : natural
Nil : lst
lfappend (rev l) (Cons n Nil) : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons n Nil
lf1 : lst = rev (lfappend (rev l) (Cons n Nil))
lf4 : lst = Cons n l
lf5 : lst = rev l
lf2 : lst = lfappend (rev l) (Cons n Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.
Lemma conj9: forall (lf1 : lst) (l : lst) (n : natural), @eq lst lf1 (Cons n l).
Lemma conj17: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj19: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) lf4.
Lemma conj23: forall (lf4 : lst) (l : lst) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) lf4.
Lemma conj25: forall (lf2 : lst) (l : lst) (n : natural), @eq lst (rev lf2) (Cons n l).
Lemma conj27: forall (lf5 : lst) (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) (Cons n l).
Lemma conj31: forall (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) (Cons n l).
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) lf4.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) lf4.
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) lf4.
Lemma conj56: forall (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) lf4.
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma conj60: forall (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma conj63: forall (lf6 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma conj64: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).


<---VALIDITY CHECKS--->
Time elapsed: 78 seconds
Valid:
Lemma conj64: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).

Invalid:
Lemma conj63: forall (lf6 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma conj60: forall (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma conj56: forall (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) lf4.
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) lf4.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) lf4.
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) lf4.
Lemma conj31: forall (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) (Cons n l).
Lemma conj27: forall (lf5 : lst) (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) (Cons n l).
Lemma conj25: forall (lf2 : lst) (l : lst) (n : natural), @eq lst (rev lf2) (Cons n l).
Lemma conj23: forall (lf4 : lst) (l : lst) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) lf4.
Lemma conj19: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) lf4.
Lemma conj17: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj9: forall (lf1 : lst) (l : lst) (n : natural), @eq lst lf1 (Cons n l).
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 95 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma conj60_imp: forall (lf5 : lst) (l : lst) (n : natural), forall _ : @eq lst (rev lf5) l,
@eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma conj60: forall (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma conj59_imp: forall (lf6 : lst) (lf5 : lst) (l : lst) (n : natural), forall _ : @eq lst (rev lf5) l,
@eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma conj56: forall (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) lf4.
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) lf4.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) lf4.
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) lf4.
Lemma conj31: forall (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) (Cons n l).
Lemma conj27: forall (lf5 : lst) (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) (Cons n l).
Lemma conj25: forall (lf2 : lst) (l : lst) (n : natural), @eq lst (rev lf2) (Cons n l).
Lemma conj23: forall (lf4 : lst) (l : lst) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) lf4.
Lemma conj19: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) lf4.
Lemma conj17: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj9: forall (lf1 : lst) (l : lst) (n : natural), @eq lst lf1 (Cons n l).
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 121 seconds
Valid:
Lemma conj60_imp: forall (lf5 : lst) (l : lst) (n : natural), forall _ : @eq lst (rev lf5) l,
@eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).

Invalid:
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.
Lemma conj9: forall (lf1 : lst) (l : lst) (n : natural), @eq lst lf1 (Cons n l).
Lemma conj17: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj19: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) lf4.
Lemma conj23: forall (lf4 : lst) (l : lst) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) lf4.
Lemma conj25: forall (lf2 : lst) (l : lst) (n : natural), @eq lst (rev lf2) (Cons n l).
Lemma conj27: forall (lf5 : lst) (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf5 lf3)) (Cons n l).
Lemma conj31: forall (l : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev l) lf3)) (Cons n l).
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) lf4.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) lf4.
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) lf4.
Lemma conj56: forall (lf4 : lst) (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) lf4.
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma conj59_imp: forall (lf6 : lst) (lf5 : lst) (l : lst) (n : natural), forall _ : @eq lst (rev lf5) l,
@eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma conj60: forall (lf5 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma conj63: forall (lf6 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).


<---CREATE SKETCHES--->
Time elapsed: 122 seconds
Sketches:
Sketch conj9_sketch0 : @eq lst lf1 (##hole##)
Sketch conj9_term_sketch0 : @eq lst (Cons n l) (##hole##)
Sketch conj17_sketch0 : @eq lst (##hole##) lf4
Sketch conj17_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj19_sketch0 : @eq lst (rev (##hole##)) lf4
Sketch conj19_sketch1 : @eq lst (##hole##) lf4
Sketch conj19_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (rev (lfappend lf5 lf3)) (##hole##)
Sketch conj23_sketch0 : @eq lst (##hole##) lf4
Sketch conj23_sketch1 : @eq lst (rev (##hole##)) lf4
Sketch conj23_sketch2 : @eq lst (rev (lfappend (##hole##) lf3)) lf4
Sketch conj23_term_sketch0 : @eq lst (rev (lfappend (rev l) lf3)) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (lfappend (rev l) lf3) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj25_sketch0 : @eq lst (##hole##) (Cons n l)
Sketch conj25_sketch1 : @eq lst (rev lf2) (##hole##)
Sketch conj25_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj27_sketch0 : @eq lst (rev (##hole##)) (Cons n l)
Sketch conj27_sketch1 : @eq lst (##hole##) (Cons n l)
Sketch conj27_sketch2 : @eq lst (rev (lfappend lf5 lf3)) (##hole##)
Sketch conj27_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (rev (lfappend lf5 lf3)) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj31_sketch0 : @eq lst (##hole##) (Cons n l)
Sketch conj31_sketch1 : @eq lst (rev (lfappend (rev l) lf3)) (##hole##)
Sketch conj31_sketch2 : @eq lst (rev (##hole##)) (Cons n l)
Sketch conj31_sketch3 : @eq lst (rev (lfappend (##hole##) lf3)) (Cons n l)
Sketch conj31_term_sketch0 : @eq lst (rev (lfappend (rev l) lf3)) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (lfappend (rev l) lf3) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (rev l) (##hole##)
Sketch conj51_sketch0 : @eq lst (rev (##hole##)) lf4
Sketch conj51_sketch1 : @eq lst (##hole##) lf4
Sketch conj51_sketch2 : @eq lst (rev (lfappend lf5 (##hole##))) lf4
Sketch conj51_term_sketch0 : @eq lst (lfappend lf5 (Cons n lf6)) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (rev (lfappend lf5 (Cons n lf6))) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (Cons n lf6) (##hole##)
Sketch conj52_sketch0 : @eq lst (rev (lfappend lf5 (##hole##))) lf4
Sketch conj52_sketch1 : @eq lst (rev (##hole##)) lf4
Sketch conj52_sketch2 : @eq lst (##hole##) lf4
Sketch conj52_sketch3 : @eq lst (rev (lfappend lf5 (Cons n (##hole##)))) lf4
Sketch conj52_term_sketch0 : @eq lst (Cons n Nil) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (lfappend lf5 (Cons n Nil)) (##hole##)
Sketch conj52_term_sketch2 : @eq lst (rev (lfappend lf5 (Cons n Nil))) (##hole##)
Sketch conj52_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj55_sketch0 : @eq lst (rev (lfappend (rev l) (##hole##))) lf4
Sketch conj55_sketch1 : @eq lst (##hole##) lf4
Sketch conj55_sketch2 : @eq lst (rev (lfappend (##hole##) (Cons n lf6))) lf4
Sketch conj55_sketch3 : @eq lst (rev (##hole##)) lf4
Sketch conj55_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (rev (lfappend (rev l) (Cons n lf6))) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (lfappend (rev l) (Cons n lf6)) (##hole##)
Sketch conj56_sketch0 : @eq lst (##hole##) lf4
Sketch conj56_sketch1 : @eq lst (rev (lfappend (rev l) (##hole##))) lf4
Sketch conj56_sketch2 : @eq lst (rev (lfappend (##hole##) (Cons n Nil))) lf4
Sketch conj56_sketch3 : @eq lst (rev (lfappend (rev l) (Cons n (##hole##)))) lf4
Sketch conj56_sketch4 : @eq lst (rev (##hole##)) lf4
Sketch conj56_term_sketch0 : @eq lst (rev (lfappend (rev l) (Cons n Nil))) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj56_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj56_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj56_term_sketch4 : @eq lst (lfappend (rev l) (Cons n Nil)) (##hole##)
Sketch conj59_sketch0 : @eq lst (rev (##hole##)) (Cons n l)
Sketch conj59_sketch1 : @eq lst (##hole##) (Cons n l)
Sketch conj59_sketch2 : @eq lst (rev (lfappend lf5 (##hole##))) (Cons n l)
Sketch conj59_sketch3 : @eq lst (rev (lfappend lf5 (Cons n lf6))) (##hole##)
Sketch conj59_term_sketch0 : @eq lst (lfappend lf5 (Cons n lf6)) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (rev (lfappend lf5 (Cons n lf6))) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (Cons n lf6) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (Cons n l) (##hole##)
Sketch conj59_imp_sketch0 : forall _ : @eq lst (rev lf5) l, @eq lst (rev (##hole##)) (Cons n l)
Sketch conj59_imp_sketch1 : forall _ : @eq lst (rev lf5) l, @eq lst (##hole##) (Cons n l)
Sketch conj59_imp_sketch2 : forall _ : @eq lst (rev lf5) l,
@eq lst (rev (lfappend lf5 (##hole##))) (Cons n l)
Sketch conj59_imp_sketch3 : forall _ : @eq lst (rev lf5) l,
@eq lst (rev (lfappend lf5 (Cons n lf6))) (##hole##)
Sketch conj59_imp_sketch4 : forall _ : @eq lst (##hole##) l,
@eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l)
Sketch conj59_imp_term_sketch0 : @eq lst (lfappend lf5 (Cons n lf6)) (##hole##)
Sketch conj59_imp_term_sketch1 : @eq lst (rev (lfappend lf5 (Cons n lf6))) (##hole##)
Sketch conj59_imp_term_sketch2 : @eq lst (Cons n lf6) (##hole##)
Sketch conj59_imp_term_sketch3 : @eq lst (Cons n l) (##hole##)
Sketch conj59_imp_term_sketch4 : @eq lst (rev lf5) (##hole##)
Sketch conj60_sketch0 : @eq lst (rev (lfappend lf5 (Cons n Nil))) (##hole##)
Sketch conj60_sketch1 : @eq lst (rev (lfappend lf5 (##hole##))) (Cons n l)
Sketch conj60_sketch2 : @eq lst (rev (##hole##)) (Cons n l)
Sketch conj60_sketch3 : @eq lst (##hole##) (Cons n l)
Sketch conj60_sketch4 : @eq lst (rev (lfappend lf5 (Cons n (##hole##)))) (Cons n l)
Sketch conj60_term_sketch0 : @eq lst (Cons n l) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lfappend lf5 (Cons n Nil)) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (rev (lfappend lf5 (Cons n Nil))) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj63_sketch0 : @eq lst (rev (lfappend (rev l) (##hole##))) (Cons n l)
Sketch conj63_sketch1 : @eq lst (rev (lfappend (rev l) (Cons n lf6))) (##hole##)
Sketch conj63_sketch2 : @eq lst (##hole##) (Cons n l)
Sketch conj63_sketch3 : @eq lst (rev (lfappend (##hole##) (Cons n lf6))) (Cons n l)
Sketch conj63_sketch4 : @eq lst (rev (##hole##)) (Cons n l)
Sketch conj63_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (rev (lfappend (rev l) (Cons n lf6))) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (rev l) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend (rev l) (Cons n lf6)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1014 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_3
Sketch conj52_sketch1 --> Problem  synth_5
Sketch conj60_term_sketch1 --> Problem  synth_19
Sketch conj59_term_sketch2 --> Problem  synth_17
Sketch conj25_sketch1 --> Problem  synth_4
Sketch conj63_sketch4 --> Problem  synth_12
Sketch conj23_sketch0 --> Problem  synth_3
Sketch conj60_term_sketch4 --> Problem  synth_22
Sketch conj59_term_sketch1 --> Problem  synth_16
Sketch conj59_imp_sketch2 --> Problem  synth_34
Sketch conj59_sketch1 --> Problem  synth_2
Sketch conj60_sketch0 --> Problem  synth_21
Sketch conj56_sketch4 --> Problem  synth_5
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj63_term_sketch0 --> Problem  synth_17
Sketch conj56_term_sketch0 --> Problem  synth_29
Sketch conj31_sketch0 --> Problem  synth_2
Sketch conj31_term_sketch3 --> Problem  synth_11
Sketch conj55_sketch3 --> Problem  synth_5
Sketch conj31_term_sketch1 --> Problem  synth_2
Sketch conj59_imp_term_sketch4 --> Problem  synth_37
Sketch conj60_term_sketch3 --> Problem  synth_21
Sketch conj23_sketch1 --> Problem  synth_5
Sketch conj60_term_sketch2 --> Problem  synth_20
Sketch conj60_sketch1 --> Problem  synth_31
Sketch conj55_sketch1 --> Problem  synth_3
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj60_sketch2 --> Problem  synth_12
Sketch conj59_sketch3 --> Problem  synth_16
Sketch conj27_term_sketch2 --> Problem  synth_2
Sketch conj63_term_sketch4 --> Problem  synth_26
Sketch conj59_sketch2 --> Problem  synth_31
Sketch conj52_term_sketch1 --> Problem  synth_20
Sketch conj23_term_sketch2 --> Problem  synth_11
Sketch conj19_term_sketch1 --> Problem  synth_7
Sketch conj51_term_sketch2 --> Problem  synth_17
Sketch conj27_sketch2 --> Problem  synth_7
Sketch conj60_term_sketch0 --> Problem  synth_2
Sketch conj52_term_sketch2 --> Problem  synth_21
Sketch conj31_sketch2 --> Problem  synth_12
Sketch conj27_sketch1 --> Problem  synth_2
Sketch conj59_imp_sketch1 --> Problem  synth_33
Sketch conj60_sketch3 --> Problem  synth_2
Sketch conj51_sketch0 --> Problem  synth_5
Sketch conj31_sketch3 --> Problem  synth_13
Sketch conj23_term_sketch0 --> Problem  synth_9
Sketch conj56_term_sketch3 --> Problem  synth_22
Sketch conj19_term_sketch0 --> Problem  synth_6
Sketch conj59_imp_term_sketch2 --> Problem  synth_17
Sketch conj59_imp_term_sketch1 --> Problem  synth_16
Sketch conj52_term_sketch3 --> Problem  synth_22
Sketch conj63_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch1 --> Problem  synth_16
Sketch conj51_term_sketch0 --> Problem  synth_15
Sketch conj56_sketch3 --> Problem  synth_28
Sketch conj55_term_sketch0 --> Problem  synth_17
Sketch conj52_term_sketch0 --> Problem  synth_19
Sketch conj27_term_sketch1 --> Problem  synth_7
Sketch conj23_sketch2 --> Problem  synth_8
Sketch conj19_sketch0 --> Problem  synth_5
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj63_sketch2 --> Problem  synth_2
Sketch conj59_imp_sketch4 --> Problem  synth_36
Sketch conj25_term_sketch1 --> Problem  synth_2
Sketch conj55_term_sketch1 --> Problem  synth_25
Sketch conj52_sketch0 --> Problem  synth_14
Sketch conj59_imp_term_sketch3 --> Problem  synth_2
Sketch conj56_term_sketch4 --> Problem  synth_30
Sketch conj59_imp_term_sketch0 --> Problem  synth_15
Sketch conj59_sketch0 --> Problem  synth_12
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj23_term_sketch1 --> Problem  synth_10
Sketch conj63_term_sketch3 --> Problem  synth_11
Sketch conj63_sketch0 --> Problem  synth_39
Sketch conj55_term_sketch3 --> Problem  synth_26
Sketch conj63_sketch3 --> Problem  synth_40
Sketch conj59_imp_sketch0 --> Problem  synth_32
Sketch conj59_term_sketch0 --> Problem  synth_15
Sketch conj52_sketch3 --> Problem  synth_18
Sketch conj31_term_sketch0 --> Problem  synth_9
Sketch conj59_term_sketch3 --> Problem  synth_2
Sketch conj51_sketch1 --> Problem  synth_3
Sketch conj55_sketch0 --> Problem  synth_23
Sketch conj63_sketch1 --> Problem  synth_25
Sketch conj56_term_sketch2 --> Problem  synth_11
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj56_term_sketch1 --> Problem  synth_19
Sketch conj56_sketch2 --> Problem  synth_27
Sketch conj19_sketch1 --> Problem  synth_3
Sketch conj59_imp_sketch3 --> Problem  synth_35
Sketch conj25_sketch0 --> Problem  synth_2
Sketch conj60_sketch4 --> Problem  synth_38
Sketch conj56_sketch0 --> Problem  synth_3
Sketch conj56_sketch1 --> Problem  synth_23
Sketch conj31_sketch1 --> Problem  synth_9
Sketch conj31_term_sketch2 --> Problem  synth_10
Sketch conj55_term_sketch2 --> Problem  synth_11
Sketch conj27_term_sketch0 --> Problem  synth_6
Sketch conj51_sketch2 --> Problem  synth_14
Sketch conj25_term_sketch0 --> Problem  synth_4
Sketch conj63_term_sketch2 --> Problem  synth_25
Sketch conj55_sketch2 --> Problem  synth_24


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1238 seconds

Problem: synth_28
 Nil

Problem: synth_17
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)
 lfappend (rev lf6) (Cons n Nil)
 Cons n (rev lf6)
 Cons n lf6
 Cons n Nil

Problem: synth_29
 Cons n (lfappend (rev (rev l)) Nil)
 Cons n (lfappend (lfappend l Nil) Nil)
 rev (lfappend (rev l) (Cons n Nil))
 Cons n (rev (rev l))
 Cons n (lfappend l Nil)
 Cons n l

Problem: synth_26
 rev (lfappend lf6 (Cons n l))
 lfappend (rev (lfappend l lf6)) (Cons n Nil)
 lfappend (rev (lfappend l Nil)) (Cons n Nil)
 lfappend (rev l) (Cons n (rev lf6))
 lfappend (rev l) (Cons n lf6)
 lfappend (rev l) (Cons n Nil)

Problem: synth_9
 lfappend (rev lf3) (rev (rev l))
 lfappend (rev lf3) (lfappend l Nil)
 lfappend lf3 (rev (rev l))
 lfappend lf3 (lfappend l Nil)
 lfappend (rev lf3) l
 lfappend lf3 l

Problem: synth_30
 lfappend (lfappend (rev l) Nil) (Cons n Nil)
 rev (rev (lfappend (rev l) (Cons n Nil)))
 lfappend (lfappend (rev l) (Cons n Nil)) Nil
 lfappend (rev (rev (rev l))) (Cons n Nil)
 lfappend (rev (lfappend l Nil)) (Cons n Nil)
 lfappend (rev l) (Cons n Nil)

Problem: synth_11
 lfappend (rev (lfappend l Nil)) Nil
 lfappend (lfappend (rev l) Nil) Nil
 rev (rev (rev l))
 rev (lfappend l Nil)
 lfappend (rev l) Nil
 rev l

Problem: synth_39
 Cons n Nil

Problem: synth_1
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_15
 lfappend (rev (lfappend lf6 (rev lf5))) (Cons n Nil)
 rev (lfappend lf6 (Cons n (rev lf5)))
 lfappend lf5 (Cons n (rev lf6))
 lfappend lf5 (Cons n lf6)
 lfappend lf5 (Cons n Nil)
 lfappend (rev (rev lf5)) (Cons n Nil)

Problem: synth_31
 Cons n Nil

Problem: synth_14

Problem: synth_8

Problem: synth_34
 Cons n Nil

Problem: synth_12
 lfappend (lfappend (rev l) Nil) (Cons n Nil)
 rev (rev (lfappend (rev l) (Cons n Nil)))
 lfappend (lfappend (rev l) (Cons n Nil)) Nil
 lfappend (rev (rev (rev l))) (Cons n Nil)
 lfappend (rev (lfappend l Nil)) (Cons n Nil)
 lfappend (rev l) (Cons n Nil)

Problem: synth_5
 lfappend (rev (lfappend lf4 Nil)) Nil
 lfappend (lfappend (rev lf4) Nil) Nil
 rev (rev (rev lf4))
 rev (lfappend lf4 Nil)
 lfappend (rev lf4) Nil
 rev lf4

Problem: synth_37
 lfappend (rev (lfappend lf5 Nil)) Nil
 lfappend (lfappend (rev lf5) Nil) Nil
 rev (rev (rev lf5))
 rev (lfappend lf5 Nil)
 lfappend (rev lf5) Nil
 rev lf5

Problem: synth_2
 Cons n (lfappend (rev (rev l)) Nil)
 Cons n (lfappend (lfappend l Nil) Nil)
 rev (lfappend (rev l) (Cons n Nil))
 Cons n (rev (rev l))
 Cons n (lfappend l Nil)
 Cons n l

Problem: synth_22
 Nil

Problem: synth_20
 lfappend (rev (lfappend (rev lf5) Nil)) (Cons n Nil)
 lfappend (lfappend lf5 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) Nil
 lfappend (lfappend lf5 Nil) (Cons n Nil)
 lfappend lf5 (Cons n Nil)
 lfappend (rev (rev lf5)) (Cons n Nil)

Problem: synth_18
 Nil

Problem: synth_21
 Cons n (rev (rev (rev lf5)))
 Cons n (rev (lfappend lf5 Nil))
 rev (lfappend lf5 (Cons n Nil))
 rev (lfappend (rev (rev lf5)) (Cons n Nil))
 Cons n (lfappend (rev lf5) Nil)
 Cons n (rev lf5)

Problem: synth_25
 Cons n (rev (rev l))
 Cons n (lfappend lf6 l)
 lfappend lf6 (Cons n l)
 Cons n (lfappend l lf6)
 Cons n (lfappend l Nil)
 Cons n l

Problem: synth_13
 lfappend (rev (lfappend l Nil)) Nil
 lfappend (lfappend (rev l) Nil) Nil
 rev (rev (rev l))
 rev (lfappend l Nil)
 lfappend (rev l) Nil
 rev l

Problem: synth_6
 lfappend (lfappend lf5 lf3) Nil
 lfappend lf5 (rev (rev lf3))
 lfappend lf5 (lfappend lf3 Nil)
 rev (lfappend lf3 (rev lf5))
 lfappend lf5 (rev lf3)
 lfappend lf5 lf3

Problem: synth_7
 rev (rev (lfappend lf3 (rev lf5)))
 lfappend (lfappend lf3 (rev lf5)) Nil
 lfappend (rev lf3) (rev lf5)
 rev (lfappend lf5 (rev lf3))
 rev (lfappend lf5 lf3)
 lfappend lf3 (rev lf5)

Problem: synth_4
 lfappend (rev (lfappend lf2 Nil)) Nil
 lfappend (lfappend (rev lf2) Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 rev lf2

Problem: synth_38
 Nil

Problem: synth_23

Problem: synth_27

Problem: synth_16
 Cons n (lfappend (rev lf5) lf6)
 Cons n (lfappend (rev lf5) Nil)
 lfappend (rev lf6) (Cons n (rev lf5))
 Cons n (lfappend lf6 (rev lf5))
 lfappend lf6 (Cons n (rev lf5))
 Cons n (rev lf5)

Problem: synth_19
 Cons n Nil

Problem: synth_40
 rev (lfappend l lf6)
 rev (lfappend l Nil)
 lfappend (rev l) lf6
 lfappend (rev l) Nil
 lfappend lf6 (rev l)
 rev l

Problem: synth_10
 rev (lfappend (rev lf3) l)
 lfappend (rev l) (rev (rev lf3))
 lfappend (rev l) (lfappend lf3 Nil)
 lfappend (rev l) (rev lf3)
 rev (lfappend lf3 l)
 lfappend (rev l) lf3

Problem: synth_33
 rev (lfappend (rev l) (Cons n Nil))
 Cons n (lfappend (rev lf5) Nil)
 Cons n (rev (rev l))
 Cons n (lfappend l Nil)
 Cons n (rev lf5)
 Cons n l

Problem: synth_24

Problem: synth_3
 rev (lfappend (rev lf4) Nil)
 lfappend (rev (rev lf4)) Nil
 lfappend (lfappend lf4 Nil) Nil
 rev (rev lf4)
 lfappend lf4 Nil
 lf4

Problem: synth_32
 lfappend (lfappend lf5 Nil) (Cons n Nil)
 lfappend (rev (rev (rev l))) (Cons n Nil)
 lfappend (rev (lfappend l Nil)) (Cons n Nil)
 lfappend lf5 (Cons n Nil)
 lfappend (rev (rev lf5)) (Cons n Nil)
 lfappend (rev l) (Cons n Nil)

Problem: synth_36
 rev (rev l)
 lfappend lf6 l
 lfappend l lf6
 lfappend l Nil
 rev lf5
 l

Problem: synth_35
 Cons n (lfappend lf6 l)
 lfappend lf6 (Cons n l)
 Cons n (lfappend l lf6)
 Cons n (lfappend l Nil)
 Cons n (rev lf5)
 Cons n l

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1239 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_2: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_9: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_10: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_11: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_12: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_13: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_14: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_15: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_16: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_17: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_18: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_19: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_20: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_21: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_22: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_23: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_24: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_25: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_26: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_27: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_28: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_29: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_30: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_31: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_32: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_33: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_34: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_35: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_36: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_37: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_38: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_39: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend (lfappend lf5 lf3) Nil).
Lemma candidate_40: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_41: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_42: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (lfappend lf3 (rev lf5))).
Lemma candidate_43: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev lf3)).
Lemma candidate_44: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_45: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (rev (lfappend lf3 (rev lf5)))).
Lemma candidate_46: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (lfappend lf3 (rev lf5)) Nil).
Lemma candidate_47: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (rev lf3) (rev lf5)).
Lemma candidate_48: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (lfappend lf5 (rev lf3))).
Lemma candidate_49: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (lfappend lf5 lf3)).
Lemma candidate_50: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend lf3 (rev lf5)).
Lemma candidate_51: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_52: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_53: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_54: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_55: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_56: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_57: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_58: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_59: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_60: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_61: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_62: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_63: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (rev (rev l))).
Lemma candidate_64: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (lfappend l Nil)).
Lemma candidate_65: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 (rev (rev l))).
Lemma candidate_66: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 (lfappend l Nil)).
Lemma candidate_67: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) l).
Lemma candidate_68: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 l).
Lemma candidate_69: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (rev (lfappend (rev lf3) l)).
Lemma candidate_70: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (rev (rev lf3))).
Lemma candidate_71: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (lfappend lf3 Nil)).
Lemma candidate_72: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (rev lf3)).
Lemma candidate_73: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (rev (lfappend lf3 l)).
Lemma candidate_74: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) lf3).
Lemma candidate_75: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_76: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_77: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_78: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_79: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_80: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_81: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_82: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_83: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_84: forall (l : lst) (n : natural), @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_85: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_86: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_87: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_88: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_89: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_90: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_91: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_92: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_93: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_94: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_95: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_96: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_97: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_98: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_99: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_100: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_101: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_102: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_103: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_104: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_105: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_106: forall (l : lst) (n : natural), @eq lst (rev (rev (rev (lfappend (rev l) (Cons n Nil))))) (Cons n l).
Lemma candidate_107: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) (Cons n Nil)) Nil)) (Cons n l).
Lemma candidate_108: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_109: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_110: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_111: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_112: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_113: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_114: forall (l : lst) (n : natural), @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_115: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_116: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_117: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (rev (lfappend lf3 (rev lf5)))).
Lemma candidate_118: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (lfappend lf3 (rev lf5)) Nil).
Lemma candidate_119: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (rev lf3) (rev lf5)).
Lemma candidate_120: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (lfappend lf5 (rev lf3))).
Lemma candidate_121: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (lfappend lf5 lf3)).
Lemma candidate_122: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend lf3 (rev lf5)).
Lemma candidate_123: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend (lfappend lf5 lf3) Nil).
Lemma candidate_124: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_125: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_126: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (lfappend lf3 (rev lf5))).
Lemma candidate_127: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev lf3)).
Lemma candidate_128: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_129: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (rev (lfappend lf3 (rev lf5)))).
Lemma candidate_130: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (lfappend lf3 (rev lf5)) Nil).
Lemma candidate_131: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (rev lf3) (rev lf5)).
Lemma candidate_132: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (lfappend lf5 (rev lf3))).
Lemma candidate_133: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (rev (lfappend lf5 lf3)).
Lemma candidate_134: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend lf3 (rev lf5)).
Lemma candidate_135: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_136: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_137: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_138: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_139: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_140: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_141: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_142: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_143: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_144: forall (l : lst) (n : natural), @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_145: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_146: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_147: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (rev (rev l))).
Lemma candidate_148: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (lfappend l Nil)).
Lemma candidate_149: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 (rev (rev l))).
Lemma candidate_150: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 (lfappend l Nil)).
Lemma candidate_151: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) l).
Lemma candidate_152: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 l).
Lemma candidate_153: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_154: forall (l : lst) (n : natural), @eq lst (rev (rev (rev (lfappend (rev l) (Cons n Nil))))) (Cons n l).
Lemma candidate_155: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) (Cons n Nil)) Nil)) (Cons n l).
Lemma candidate_156: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_157: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_158: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_159: forall (lf3 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev (lfappend l Nil)) Nil) lf3)) (Cons n l).
Lemma candidate_160: forall (lf3 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (lfappend (rev l) Nil) Nil) lf3)) (Cons n l).
Lemma candidate_161: forall (lf3 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) lf3)) (Cons n l).
Lemma candidate_162: forall (lf3 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) lf3)) (Cons n l).
Lemma candidate_163: forall (lf3 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) lf3)) (Cons n l).
Lemma candidate_164: forall (lf3 : lst) (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) lf3)) (Cons n l).
Lemma candidate_165: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (rev (rev l))).
Lemma candidate_166: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (lfappend l Nil)).
Lemma candidate_167: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 (rev (rev l))).
Lemma candidate_168: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 (lfappend l Nil)).
Lemma candidate_169: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) l).
Lemma candidate_170: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend lf3 l).
Lemma candidate_171: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_172: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_173: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_174: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_175: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_176: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_177: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (rev (lfappend (rev lf3) l)).
Lemma candidate_178: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (rev (rev lf3))).
Lemma candidate_179: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (lfappend lf3 Nil)).
Lemma candidate_180: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (rev lf3)).
Lemma candidate_181: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (rev (lfappend lf3 l)).
Lemma candidate_182: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) lf3).
Lemma candidate_183: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_184: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_185: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_186: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_187: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_188: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_189: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_190: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_191: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_192: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_193: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_194: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_195: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_196: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_197: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_198: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_199: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_200: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_201: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6))   (lfappend (rev (lfappend lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_202: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (rev (lfappend lf6 (Cons n (rev lf5)))).
Lemma candidate_203: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n (rev lf6))).
Lemma candidate_204: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n lf6)).
Lemma candidate_205: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n Nil)).
Lemma candidate_206: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_207: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) lf6)).
Lemma candidate_208: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_209: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6)))   (lfappend (rev lf6) (Cons n (rev lf5))).
Lemma candidate_210: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend lf6 (rev lf5))).
Lemma candidate_211: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (lfappend lf6 (Cons n (rev lf5))).
Lemma candidate_212: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (rev lf5)).
Lemma candidate_213: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_214: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_215: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_216: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_217: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_218: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_219: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_220: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_221: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_222: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_223: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_224: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_225: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_226: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_227: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_228: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_229: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_230: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_231: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n (Nil)))) lf4.
Lemma candidate_232: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_233: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (rev (lfappend (rev lf5) Nil)) (Cons n Nil)).
Lemma candidate_234: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend lf5 (Cons n Nil)) Nil).
Lemma candidate_235: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) Nil).
Lemma candidate_236: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend lf5 Nil) (Cons n Nil)).
Lemma candidate_237: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil)) (lfappend lf5 (Cons n Nil)).
Lemma candidate_238: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil)) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_239: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (rev (rev lf5)))).
Lemma candidate_240: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (lfappend lf5 Nil))).
Lemma candidate_241: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (rev (lfappend lf5 (Cons n Nil))).
Lemma candidate_242: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil)))   (rev (lfappend (rev (rev lf5)) (Cons n Nil))).
Lemma candidate_243: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_244: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev lf5)).
Lemma candidate_245: @eq lst Nil (Nil).
Lemma candidate_246: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_247: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_248: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_249: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_250: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_251: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_252: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_253: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_254: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_255: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_256: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_257: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_258: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_259: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_260: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_261: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_262: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_263: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_264: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (rev (rev l))).
Lemma candidate_265: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend lf6 l)).
Lemma candidate_266: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (lfappend lf6 (Cons n l)).
Lemma candidate_267: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend l lf6)).
Lemma candidate_268: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend l Nil)).
Lemma candidate_269: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma candidate_270: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_271: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_272: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_273: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_274: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_275: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_276: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (rev (lfappend lf6 (Cons n l))).
Lemma candidate_277: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6))   (lfappend (rev (lfappend l lf6)) (Cons n Nil)).
Lemma candidate_278: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_279: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (lfappend (rev l) (Cons n (rev lf6))).
Lemma candidate_280: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (lfappend (rev l) (Cons n lf6)).
Lemma candidate_281: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_282: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_283: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_284: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_285: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_286: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_287: forall (lf4 : lst), @eq lst (lf4) lf4.
Lemma candidate_288: forall (n : natural) (l : lst) (lf4 : lst), @eq lst (rev (lfappend (rev l) (Cons n (Nil)))) lf4.
Lemma candidate_289: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_290: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_291: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_292: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_293: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_294: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_295: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil)))   (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_296: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil)))   (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_297: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil)))   (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_298: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n (rev (rev l))).
Lemma candidate_299: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n (lfappend l Nil)).
Lemma candidate_300: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_301: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_302: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_303: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_304: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_305: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_306: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_307: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_308: @eq lst Nil (Nil).
Lemma candidate_309: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) Nil) (Cons n Nil)).
Lemma candidate_310: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (rev (rev (lfappend (rev l) (Cons n Nil)))).
Lemma candidate_311: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) (Cons n Nil)) Nil).
Lemma candidate_312: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (rev (rev l))) (Cons n Nil)).
Lemma candidate_313: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_314: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_315: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_316: forall (l : lst) (n : natural), @eq lst (rev (rev (rev (lfappend (rev l) (Cons n Nil))))) (Cons n l).
Lemma candidate_317: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) (Cons n Nil)) Nil)) (Cons n l).
Lemma candidate_318: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_319: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_320: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_321: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_322: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_323: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_324: forall (l : lst) (n : natural), @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_325: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_326: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_327: forall (l : lst) (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma candidate_328: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) lf6)).
Lemma candidate_329: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_330: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6)))   (lfappend (rev lf6) (Cons n (rev lf5))).
Lemma candidate_331: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend lf6 (rev lf5))).
Lemma candidate_332: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (lfappend lf6 (Cons n (rev lf5))).
Lemma candidate_333: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (rev lf5)).
Lemma candidate_334: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6))   (lfappend (rev (lfappend lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_335: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (rev (lfappend lf6 (Cons n (rev lf5)))).
Lemma candidate_336: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n (rev lf6))).
Lemma candidate_337: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n lf6)).
Lemma candidate_338: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n Nil)).
Lemma candidate_339: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_340: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) lf6)).
Lemma candidate_341: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_342: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6)))   (lfappend (rev lf6) (Cons n (rev lf5))).
Lemma candidate_343: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend lf6 (rev lf5))).
Lemma candidate_344: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (lfappend lf6 (Cons n (rev lf5))).
Lemma candidate_345: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (rev lf5)).
Lemma candidate_346: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_347: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_348: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_349: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_350: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_351: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_352: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_353: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_354: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_355: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_356: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_357: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_358: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (lfappend lf5 Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_359: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_360: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_361: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma candidate_362: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev (rev lf5)) (Cons n Nil))) (Cons n l).
Lemma candidate_363: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_364: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_365: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (lfappend (rev lf5) Nil)) (Cons n l).
Lemma candidate_366: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_367: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_368: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (rev lf5)) (Cons n l).
Lemma candidate_369: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n l) (Cons n l).
Lemma candidate_370: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma candidate_371: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend lf6 l)).
Lemma candidate_372: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (lfappend lf6 (Cons n l)).
Lemma candidate_373: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend l lf6)).
Lemma candidate_374: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend l Nil)).
Lemma candidate_375: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (rev lf5)).
Lemma candidate_376: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_377: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev (rev l)) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_378: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (lfappend lf6 l) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_379: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (lfappend l lf6) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_380: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (lfappend l Nil) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_381: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_382: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (l) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n l).
Lemma candidate_383: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6))   (lfappend (rev (lfappend lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_384: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (rev (lfappend lf6 (Cons n (rev lf5)))).
Lemma candidate_385: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n (rev lf6))).
Lemma candidate_386: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n lf6)).
Lemma candidate_387: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend lf5 (Cons n Nil)).
Lemma candidate_388: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (Cons n lf6)) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_389: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) lf6)).
Lemma candidate_390: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_391: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6)))   (lfappend (rev lf6) (Cons n (rev lf5))).
Lemma candidate_392: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (lfappend lf6 (rev lf5))).
Lemma candidate_393: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (lfappend lf6 (Cons n (rev lf5))).
Lemma candidate_394: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6))) (Cons n (rev lf5)).
Lemma candidate_395: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_396: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_397: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_398: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_399: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_400: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_401: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_402: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_403: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_404: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_405: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_406: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_407: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_408: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_409: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_410: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_411: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_412: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_413: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (rev (rev lf5)))).
Lemma candidate_414: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (lfappend lf5 Nil))).
Lemma candidate_415: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (rev (lfappend lf5 (Cons n Nil))).
Lemma candidate_416: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil)))   (rev (lfappend (rev (rev lf5)) (Cons n Nil))).
Lemma candidate_417: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_418: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev lf5)).
Lemma candidate_419: forall (l : lst) (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma candidate_420: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_421: forall (l : lst) (n : natural), @eq lst (rev (rev (rev (lfappend (rev l) (Cons n Nil))))) (Cons n l).
Lemma candidate_422: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) (Cons n Nil)) Nil)) (Cons n l).
Lemma candidate_423: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_424: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_425: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_426: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_427: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_428: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_429: forall (l : lst) (n : natural), @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_430: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_431: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_432: forall (l : lst) (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n (Nil)))) (Cons n l).
Lemma candidate_433: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_434: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_435: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_436: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_437: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_438: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_439: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_440: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (rev (lfappend (rev lf5) Nil)) (Cons n Nil)).
Lemma candidate_441: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend lf5 (Cons n Nil)) Nil).
Lemma candidate_442: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) Nil).
Lemma candidate_443: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend lf5 Nil) (Cons n Nil)).
Lemma candidate_444: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil)) (lfappend lf5 (Cons n Nil)).
Lemma candidate_445: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil)) (lfappend (rev (rev lf5)) (Cons n Nil)).
Lemma candidate_446: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (rev (rev lf5)))).
Lemma candidate_447: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (lfappend lf5 Nil))).
Lemma candidate_448: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (rev (lfappend lf5 (Cons n Nil))).
Lemma candidate_449: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil)))   (rev (lfappend (rev (rev lf5)) (Cons n Nil))).
Lemma candidate_450: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_451: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev lf5)).
Lemma candidate_452: @eq lst Nil (Nil).
Lemma candidate_453: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_454: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (rev (rev l))).
Lemma candidate_455: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend lf6 l)).
Lemma candidate_456: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (lfappend lf6 (Cons n l)).
Lemma candidate_457: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend l lf6)).
Lemma candidate_458: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend l Nil)).
Lemma candidate_459: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma candidate_460: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_461: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_462: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_463: forall (l : lst) (n : natural), @eq lst (Cons n (rev (rev l))) (Cons n l).
Lemma candidate_464: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_465: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_466: forall (l : lst) (n : natural) (lf6 : lst), @eq lst (rev (lfappend (rev (lfappend l lf6)) (Cons n lf6))) (Cons n l).
Lemma candidate_467: forall (l : lst) (n : natural) (lf6 : lst), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n lf6))) (Cons n l).
Lemma candidate_468: forall (l : lst) (n : natural) (lf6 : lst), @eq lst (rev (lfappend (lfappend (rev l) lf6) (Cons n lf6))) (Cons n l).
Lemma candidate_469: forall (l : lst) (n : natural) (lf6 : lst), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n lf6))) (Cons n l).
Lemma candidate_470: forall (l : lst) (n : natural) (lf6 : lst), @eq lst (rev (lfappend (lfappend lf6 (rev l)) (Cons n lf6))) (Cons n l).
Lemma candidate_471: forall (l : lst) (n : natural) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma candidate_472: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_473: forall (l : lst) (n : natural), @eq lst (rev (rev (rev (lfappend (rev l) (Cons n Nil))))) (Cons n l).
Lemma candidate_474: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) (Cons n Nil)) Nil)) (Cons n l).
Lemma candidate_475: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_476: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_477: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l).
Lemma candidate_478: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_479: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_480: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_481: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_482: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_483: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_484: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_485: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_486: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_487: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (rev (rev l))).
Lemma candidate_488: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_489: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n l).
Lemma candidate_490: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (rev (rev l))).
Lemma candidate_491: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend lf6 l)).
Lemma candidate_492: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (lfappend lf6 (Cons n l)).
Lemma candidate_493: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend l lf6)).
Lemma candidate_494: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n (lfappend l Nil)).
Lemma candidate_495: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (rev (lfappend (rev l) (Cons n lf6))) (Cons n l).
Lemma candidate_496: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_497: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_498: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_499: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_500: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_501: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_502: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (rev (lfappend lf6 (Cons n l))).
Lemma candidate_503: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6))   (lfappend (rev (lfappend l lf6)) (Cons n Nil)).
Lemma candidate_504: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_505: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (lfappend (rev l) (Cons n (rev lf6))).
Lemma candidate_506: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (lfappend (rev l) (Cons n lf6)).
Lemma candidate_507: forall (n : natural) (l : lst) (lf6 : lst), @eq lst (lfappend (rev l) (Cons n lf6)) (lfappend (rev l) (Cons n Nil)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1740 seconds
Duplicates removed: 342
Filtered by Quickchick: 62
Filtered by script: 34
Remaining: 69

Lemmas: 
Lemma candidate_19: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_79: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_78: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_29: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_411: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_410: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_30: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_25: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_24: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_16: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) lf4.
Lemma candidate_15: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_85: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_13: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend l Nil)).
Lemma candidate_17: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) lf4.
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_76: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_75: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_81: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (rev (rev l)) Nil)) (Cons n l).
Lemma candidate_11: forall (l : lst) (n : natural), @eq lst (Cons n l) (rev (lfappend (rev l) (Cons n Nil))).
Lemma candidate_9: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_408: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_407: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_28: forall (lf4 : lst), @eq lst (rev (lfappend (lfappend (rev lf4) Nil) Nil)) lf4.
Lemma candidate_27: forall (lf4 : lst), @eq lst (rev (lfappend (rev (lfappend lf4 Nil)) Nil)) lf4.
Lemma candidate_22: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_21: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_82: forall (l : lst) (n : natural), @eq lst (Cons n (lfappend (lfappend l Nil) Nil)) (Cons n l).
Lemma candidate_69: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (rev (lfappend (rev lf3) l)).
Lemma candidate_67: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) l).
Lemma candidate_10: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_244: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev lf5)).
Lemma candidate_41: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_39: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend (lfappend lf5 lf3) Nil).
Lemma candidate_47: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 lf3)) (lfappend (rev lf3) (rev lf5)).
Lemma candidate_298: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n (rev (rev l))).
Lemma candidate_108: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_106: forall (l : lst) (n : natural), @eq lst (rev (rev (rev (lfappend (rev l) (Cons n Nil))))) (Cons n l).
Lemma candidate_71: forall (lf3 : lst) (l : lst), @eq lst (lfappend (rev l) lf3) (lfappend (rev l) (lfappend lf3 Nil)).
Lemma candidate_368: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (rev lf5)) (Cons n l).
Lemma candidate_299: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n (lfappend l Nil)).
Lemma candidate_109: forall (l : lst) (n : natural), @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
Lemma candidate_107: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) (Cons n Nil)) Nil)) (Cons n l).
Lemma candidate_105: forall (l : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev l) Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_63: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (rev (rev l))).
Lemma candidate_239: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (rev (rev lf5)))).
Lemma candidate_64: forall (lf3 : lst) (l : lst), @eq lst (rev (lfappend (rev l) lf3)) (lfappend (rev lf3) (lfappend l Nil)).
Lemma candidate_243: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (lfappend (rev lf5) Nil)).
Lemma candidate_240: forall (n : natural) (lf5 : lst), @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n (rev (lfappend lf5 Nil))).
Lemma candidate_367: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (lfappend l Nil)) (Cons n l).
Lemma candidate_236: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend lf5 Nil) (Cons n Nil)).
Lemma candidate_234: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend lf5 (Cons n Nil)) Nil).
Lemma candidate_209: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (Cons n lf6)))   (lfappend (rev lf6) (Cons n (rev lf5))).
Lemma candidate_365: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (Cons n (lfappend (rev lf5) Nil)) (Cons n l).
Lemma candidate_2: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n Nil))) (Cons n l).
Lemma candidate_295: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil)))   (Cons n (lfappend (rev (rev l)) Nil)).
Lemma candidate_313: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_311: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) (Cons n Nil)) Nil).
Lemma candidate_309: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) Nil) (Cons n Nil)).
Lemma candidate_296: forall (n : natural) (l : lst), @eq lst (rev (lfappend (rev l) (Cons n Nil)))   (Cons n (lfappend (lfappend l Nil) Nil)).
Lemma candidate_235: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) Nil).
Lemma candidate_233: forall (n : natural) (lf5 : lst), @eq lst (lfappend lf5 (Cons n Nil))   (lfappend (rev (lfappend (rev lf5) Nil)) (Cons n Nil)).
Lemma candidate_362: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev (rev lf5)) (Cons n Nil))) (Cons n l).
Lemma candidate_372: forall (n : natural) (l : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend lf5 (Cons n lf6))) (lfappend lf6 (Cons n l)).
Lemma candidate_358: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (lfappend lf5 Nil) (Cons n Nil))) (Cons n l).
Lemma candidate_359: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev (rev (rev l))) (Cons n Nil))) (Cons n l).
Lemma candidate_360: forall (n : natural) (l : lst) (lf5 : lst), forall _ : @eq lst (rev lf5) l, @eq lst (rev (lfappend (rev (lfappend l Nil)) (Cons n Nil))) (Cons n l).
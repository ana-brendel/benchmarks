File Information
- File name: goal10
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal10_append_assoc_37_append_Nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal10_append_assoc_37_append_Nil
- Namespace: adtind
- Proof name: lfappend_assoc
- Theorem: Theorem lfappend_assoc: forall l0 l2 l3 : lst,
@eq lst (lfappend l0 (lfappend l2 l3)) (lfappend (lfappend l0 l2) l3).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil))

* Hypothesis:
l1 : lst
IHl1 : forall l2 l3 : lst,
@eq lst (lfappend l1 (lfappend l2 l3)) (lfappend (lfappend l1 l2) l3)
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
l1 : lst
n : natural

* Terms:
Cons n (lfappend (lfappend l1 Nil) Nil) : lst
lfappend l1 (lfappend _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
@eq lst (lfappend l1 (lfappend _UNBOUND_REL_2 _UNBOUND_REL_1))
  (lfappend (lfappend l1 _UNBOUND_REL_2) _UNBOUND_REL_1) : Prop
lfappend (lfappend l1 _UNBOUND_REL_2) _UNBOUND_REL_1 : lst
lfappend _UNBOUND_REL_2 _UNBOUND_REL_1 : lst
forall l2 l3 : lst,
@eq lst (lfappend l1 (lfappend l2 l3)) (lfappend (lfappend l1 l2) l3) : Prop
l1 : lst
forall l3 : lst,
@eq lst (lfappend l1 (lfappend _UNBOUND_REL_2 l3))
  (lfappend (lfappend l1 _UNBOUND_REL_2) l3) : Prop
lst : Set
lfappend (lfappend l1 Nil) Nil : lst
lfappend l1 _UNBOUND_REL_2 : lst
Cons n (lfappend l1 Nil) : lst
lfappend l1 Nil : lst
natural : Set
n : natural
Nil : lst
@eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)) : Prop

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons n (lfappend l1 Nil)
lf1 : lst = Cons n (lfappend (lfappend l1 Nil) Nil)
lf4 : lst = lfappend l1 Nil
lf5 : lst = Nil
lf2 : lst = lfappend (lfappend l1 Nil) Nil

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.
Lemma conj9: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n lf2).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 lf5)).
Lemma conj12: forall (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 Nil)).
Lemma conj14: forall (l1 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj16: forall (l1 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma conj17: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n lf4) lf1.
Lemma conj21: forall (l1 : lst) (lf5 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) lf1.
Lemma conj23: forall (l1 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) lf1.
Lemma conj25: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n lf2).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n (lfappend lf4 lf5)).
Lemma conj28: forall (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma conj29: forall (l1 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n lf2).
Lemma conj30: forall (l1 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj31: forall (l1 : lst) (lf2 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) (Cons n lf2).
Lemma conj32: forall (l1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)).


<---VALIDITY CHECKS--->
Time elapsed: 96 seconds
Valid:
Lemma conj32: forall (l1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma conj28: forall (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).

Invalid:
Lemma conj31: forall (l1 : lst) (lf2 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) (Cons n lf2).
Lemma conj30: forall (l1 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj29: forall (l1 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n lf2).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n (lfappend lf4 lf5)).
Lemma conj25: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n lf2).
Lemma conj23: forall (l1 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) lf1.
Lemma conj21: forall (l1 : lst) (lf5 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) lf1.
Lemma conj17: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n lf4) lf1.
Lemma conj16: forall (l1 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma conj14: forall (l1 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj12: forall (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 Nil)).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 lf5)).
Lemma conj9: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n lf2).
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 113 seconds
Generalizations:
Lemma conj31: forall (l1 : lst) (lf2 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) (Cons n lf2).
Lemma conj30: forall (l1 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj29: forall (l1 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n lf2).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n (lfappend lf4 lf5)).
Lemma conj25: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n lf2).
Lemma conj23: forall (l1 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) lf1.
Lemma conj21: forall (l1 : lst) (lf5 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) lf1.
Lemma conj17: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n lf4) lf1.
Lemma conj16: forall (l1 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma conj14: forall (l1 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj12: forall (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 Nil)).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 lf5)).
Lemma conj9: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n lf2).
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 139 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.
Lemma conj9: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n lf2).
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 lf5)).
Lemma conj12: forall (lf4 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend lf4 Nil)).
Lemma conj14: forall (l1 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj16: forall (l1 : lst) (n : natural) (lf3 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma conj17: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n lf4) lf1.
Lemma conj21: forall (l1 : lst) (lf5 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) lf1.
Lemma conj23: forall (l1 : lst) (lf1 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) lf1.
Lemma conj25: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n lf2).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (Cons n lf4) (Cons n (lfappend lf4 lf5)).
Lemma conj29: forall (l1 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n lf2).
Lemma conj30: forall (l1 : lst) (lf5 : lst) (n : natural), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma conj31: forall (l1 : lst) (lf2 : lst) (n : natural), @eq lst (Cons n (lfappend l1 Nil)) (Cons n lf2).


<---CREATE SKETCHES--->
Time elapsed: 139 seconds
Sketches:
Sketch conj9_sketch0 : @eq lst lf3 (##hole##)
Sketch conj9_term_sketch0 : @eq lst (Cons n lf2) (##hole##)
Sketch conj10_sketch0 : @eq lst lf3 (##hole##)
Sketch conj10_sketch1 : @eq lst lf3 (Cons n (##hole##))
Sketch conj10_term_sketch0 : @eq lst (Cons n (lfappend lf4 lf5)) (##hole##)
Sketch conj10_term_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj12_sketch0 : @eq lst lf3 (Cons n (##hole##))
Sketch conj12_sketch1 : @eq lst lf3 (##hole##)
Sketch conj12_sketch2 : @eq lst lf3 (Cons n (lfappend lf4 (##hole##)))
Sketch conj12_term_sketch0 : @eq lst (lfappend lf4 Nil) (##hole##)
Sketch conj12_term_sketch1 : @eq lst (Cons n (lfappend lf4 Nil)) (##hole##)
Sketch conj12_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj14_sketch0 : @eq lst lf3 (##hole##)
Sketch conj14_sketch1 : @eq lst lf3 (Cons n (##hole##))
Sketch conj14_sketch2 : @eq lst lf3 (Cons n (lfappend (##hole##) lf5))
Sketch conj14_term_sketch0 : @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (lfappend (lfappend l1 lf5) lf5) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (lfappend l1 lf5) (##hole##)
Sketch conj16_sketch0 : @eq lst lf3 (##hole##)
Sketch conj16_sketch1 : @eq lst lf3 (Cons n (##hole##))
Sketch conj16_sketch2 : @eq lst lf3 (Cons n (lfappend (##hole##) Nil))
Sketch conj16_sketch3 : @eq lst lf3 (Cons n (lfappend (lfappend l1 (##hole##)) (##hole##)))
Sketch conj16_term_sketch0 : @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil)) (##hole##)
Sketch conj16_term_sketch1 : @eq lst (lfappend (lfappend l1 Nil) Nil) (##hole##)
Sketch conj16_term_sketch2 : @eq lst (lfappend l1 Nil) (##hole##)
Sketch conj16_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj17_sketch0 : @eq lst (##hole##) lf1
Sketch conj17_term_sketch0 : @eq lst (Cons n lf4) (##hole##)
Sketch conj21_sketch0 : @eq lst (##hole##) lf1
Sketch conj21_sketch1 : @eq lst (Cons n (##hole##)) lf1
Sketch conj21_term_sketch0 : @eq lst (Cons n (lfappend l1 lf5)) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (lfappend l1 lf5) (##hole##)
Sketch conj23_sketch0 : @eq lst (##hole##) lf1
Sketch conj23_sketch1 : @eq lst (Cons n (##hole##)) lf1
Sketch conj23_sketch2 : @eq lst (Cons n (lfappend l1 (##hole##))) lf1
Sketch conj23_term_sketch0 : @eq lst (Cons n (lfappend l1 Nil)) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (lfappend l1 Nil) (##hole##)
Sketch conj23_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj25_sketch0 : @eq lst (Cons n lf4) (##hole##)
Sketch conj25_sketch1 : @eq lst (##hole##) (Cons n lf2)
Sketch conj25_term_sketch0 : @eq lst (Cons n lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq lst (Cons n lf4) (##hole##)
Sketch conj26_sketch0 : @eq lst (Cons n lf4) (##hole##)
Sketch conj26_sketch1 : @eq lst (Cons n lf4) (Cons n (##hole##))
Sketch conj26_sketch2 : @eq lst (##hole##) (Cons n (lfappend lf4 lf5))
Sketch conj26_term_sketch0 : @eq lst (Cons n (lfappend lf4 lf5)) (##hole##)
Sketch conj26_term_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (Cons n lf4) (##hole##)
Sketch conj29_sketch0 : @eq lst (Cons n (lfappend l1 lf5)) (##hole##)
Sketch conj29_sketch1 : @eq lst (##hole##) (Cons n lf2)
Sketch conj29_sketch2 : @eq lst (Cons n (##hole##)) (Cons n lf2)
Sketch conj29_term_sketch0 : @eq lst (Cons n lf2) (##hole##)
Sketch conj29_term_sketch1 : @eq lst (Cons n (lfappend l1 lf5)) (##hole##)
Sketch conj29_term_sketch2 : @eq lst (lfappend l1 lf5) (##hole##)
Sketch conj30_sketch0 : @eq lst (Cons n (lfappend l1 lf5)) (##hole##)
Sketch conj30_sketch1 : @eq lst (##hole##) (Cons n (lfappend (lfappend l1 lf5) lf5))
Sketch conj30_sketch2 : @eq lst (Cons n (lfappend l1 lf5)) (Cons n (##hole##))
Sketch conj30_sketch3 : @eq lst (Cons n (##hole##)) (Cons n (lfappend (##hole##) lf5))
Sketch conj30_term_sketch0 : @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (##hole##)
Sketch conj30_term_sketch1 : @eq lst (Cons n (lfappend l1 lf5)) (##hole##)
Sketch conj30_term_sketch2 : @eq lst (lfappend (lfappend l1 lf5) lf5) (##hole##)
Sketch conj30_term_sketch3 : @eq lst (lfappend l1 lf5) (##hole##)
Sketch conj31_sketch0 : @eq lst (Cons n (lfappend l1 Nil)) (##hole##)
Sketch conj31_sketch1 : @eq lst (##hole##) (Cons n lf2)
Sketch conj31_sketch2 : @eq lst (Cons n (##hole##)) (Cons n lf2)
Sketch conj31_sketch3 : @eq lst (Cons n (lfappend l1 (##hole##))) (Cons n lf2)
Sketch conj31_term_sketch0 : @eq lst (Cons n lf2) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (Cons n (lfappend l1 Nil)) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (lfappend l1 Nil) (##hole##)
Sketch conj31_term_sketch3 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1066 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_11
Sketch conj12_sketch0 --> Problem  synth_3
Sketch conj16_sketch3 --> Problem  synth_13
Sketch conj26_sketch2 --> Problem  synth_4
Sketch conj25_sketch1 --> Problem  synth_2
Sketch conj23_sketch0 --> Problem  synth_16
Sketch conj16_term_sketch1 --> Problem  synth_15
Sketch conj14_term_sketch2 --> Problem  synth_12
Sketch conj29_term_sketch2 --> Problem  synth_12
Sketch conj30_term_sketch3 --> Problem  synth_12
Sketch conj17_term_sketch0 --> Problem  synth_8
Sketch conj21_term_sketch1 --> Problem  synth_12
Sketch conj31_sketch0 --> Problem  synth_14
Sketch conj31_term_sketch3 --> Problem  synth_9
Sketch conj26_term_sketch2 --> Problem  synth_8
Sketch conj14_term_sketch1 --> Problem  synth_12
Sketch conj31_term_sketch1 --> Problem  synth_14
Sketch conj12_term_sketch0 --> Problem  synth_7
Sketch conj30_sketch2 --> Problem  synth_21
Sketch conj23_sketch1 --> Problem  synth_17
Sketch conj10_sketch1 --> Problem  synth_3
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj16_sketch1 --> Problem  synth_3
Sketch conj12_sketch1 --> Problem  synth_1
Sketch conj12_sketch2 --> Problem  synth_6
Sketch conj29_sketch0 --> Problem  synth_11
Sketch conj23_term_sketch2 --> Problem  synth_9
Sketch conj21_sketch0 --> Problem  synth_16
Sketch conj26_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch2 --> Problem  synth_15
Sketch conj30_term_sketch1 --> Problem  synth_11
Sketch conj31_sketch2 --> Problem  synth_20
Sketch conj30_term_sketch0 --> Problem  synth_11
Sketch conj29_term_sketch1 --> Problem  synth_11
Sketch conj31_sketch3 --> Problem  synth_23
Sketch conj23_term_sketch0 --> Problem  synth_14
Sketch conj12_term_sketch2 --> Problem  synth_9
Sketch conj10_sketch0 --> Problem  synth_1
Sketch conj29_sketch1 --> Problem  synth_2
Sketch conj14_sketch1 --> Problem  synth_3
Sketch conj26_term_sketch1 --> Problem  synth_5
Sketch conj14_sketch2 --> Problem  synth_10
Sketch conj23_sketch2 --> Problem  synth_18
Sketch conj17_sketch0 --> Problem  synth_16
Sketch conj16_sketch2 --> Problem  synth_3
Sketch conj10_term_sketch1 --> Problem  synth_5
Sketch conj30_sketch3 --> Problem  synth_22
Sketch conj25_term_sketch1 --> Problem  synth_8
Sketch conj30_sketch1 --> Problem  synth_11
Sketch conj26_sketch0 --> Problem  synth_8
Sketch conj12_term_sketch1 --> Problem  synth_8
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj23_term_sketch1 --> Problem  synth_15
Sketch conj26_sketch1 --> Problem  synth_19
Sketch conj29_term_sketch0 --> Problem  synth_2
Sketch conj31_term_sketch0 --> Problem  synth_2
Sketch conj21_term_sketch0 --> Problem  synth_11
Sketch conj30_term_sketch2 --> Problem  synth_12
Sketch conj10_term_sketch0 --> Problem  synth_4
Sketch conj25_sketch0 --> Problem  synth_8
Sketch conj21_sketch1 --> Problem  synth_17
Sketch conj16_sketch0 --> Problem  synth_1
Sketch conj14_sketch0 --> Problem  synth_1
Sketch conj14_term_sketch0 --> Problem  synth_11
Sketch conj16_term_sketch0 --> Problem  synth_14
Sketch conj31_sketch1 --> Problem  synth_2
Sketch conj16_term_sketch3 --> Problem  synth_9
Sketch conj31_term_sketch2 --> Problem  synth_15
Sketch conj29_sketch2 --> Problem  synth_20
Sketch conj25_term_sketch0 --> Problem  synth_2


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1218 seconds

Problem: synth_22

Problem: synth_20
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_18
 Nil

Problem: synth_17

Problem: synth_21
 lfappend l1 (rev lf5)
 rev (rev l1)
 lfappend l1 lf5
 lfappend lf5 l1
 lfappend l1 Nil
 l1

Problem: synth_9
 Nil

Problem: synth_13
 Nil

Problem: synth_6
 Nil

Problem: synth_11
 Cons n (rev (rev l1))
 Cons n (lfappend l1 lf5)
 Cons n (lfappend lf5 l1)
 lfappend lf5 (Cons n l1)
 Cons n (lfappend l1 Nil)
 Cons n l1

Problem: synth_7
 rev (lfappend (rev lf4) Nil)
 lfappend (rev (rev lf4)) Nil
 lfappend (lfappend lf4 Nil) Nil
 rev (rev lf4)
 lfappend lf4 Nil
 lf4

Problem: synth_4
 Cons n (rev (rev lf4))
 Cons n (lfappend lf5 lf4)
 lfappend lf5 (Cons n lf4)
 Cons n (lfappend lf4 lf5)
 Cons n (lfappend lf4 Nil)
 Cons n lf4

Problem: synth_1
 rev (lfappend (rev lf3) Nil)
 lfappend (rev (rev lf3)) Nil
 lfappend (lfappend lf3 Nil) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_23
 Nil

Problem: synth_16
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_19
 rev (lfappend (rev lf4) Nil)
 lfappend (rev (rev lf4)) Nil
 lfappend (lfappend lf4 Nil) Nil
 rev (rev lf4)
 lfappend lf4 Nil
 lf4

Problem: synth_15
 rev (lfappend (rev l1) Nil)
 lfappend (rev (rev l1)) Nil
 lfappend (lfappend l1 Nil) Nil
 rev (rev l1)
 lfappend l1 Nil
 l1

Problem: synth_14
 Cons n (lfappend (rev (rev l1)) Nil)
 Cons n (lfappend (lfappend l1 Nil) Nil)
 rev (lfappend (rev l1) (Cons n Nil))
 Cons n (rev (rev l1))
 Cons n (lfappend l1 Nil)
 Cons n l1

Problem: synth_10

Problem: synth_8
 Cons n (lfappend (rev (rev lf4)) Nil)
 Cons n (lfappend (lfappend lf4 Nil) Nil)
 rev (lfappend (rev lf4) (Cons n Nil))
 Cons n (rev (rev lf4))
 Cons n (lfappend lf4 Nil)
 Cons n lf4

Problem: synth_3

Problem: synth_12
 lfappend l1 (rev lf5)
 rev (rev l1)
 lfappend l1 lf5
 lfappend lf5 l1
 lfappend l1 Nil
 l1

Problem: synth_5
 lfappend lf4 (rev lf5)
 rev (rev lf4)
 lfappend lf5 lf4
 lfappend lf4 lf5
 lfappend lf4 Nil
 lf4

Problem: synth_2
 Cons n (lfappend (rev (rev lf2)) Nil)
 Cons n (lfappend (lfappend lf2 Nil) Nil)
 rev (lfappend (rev lf2) (Cons n Nil))
 Cons n (rev (rev lf2))
 Cons n (lfappend lf2 Nil)
 Cons n lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1219 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_2: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_3: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_4: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_5: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_6: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_7: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_8: forall (lf3 : lst), @eq lst lf3 (lf3).
Lemma candidate_9: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_10: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_11: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (lfappend (rev lf2) (Cons n Nil))).
Lemma candidate_12: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (rev (rev lf2))).
Lemma candidate_13: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend lf2 Nil)).
Lemma candidate_14: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_15: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_16: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_17: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_18: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_19: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_20: forall (lf3 : lst), @eq lst lf3 (lf3).
Lemma candidate_21: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (rev (rev lf4))).
Lemma candidate_22: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf5 lf4)).
Lemma candidate_23: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (lfappend lf5 (Cons n lf4)).
Lemma candidate_24: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf4 lf5)).
Lemma candidate_25: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf4 Nil)).
Lemma candidate_26: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n lf4).
Lemma candidate_27: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_28: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (rev lf4)).
Lemma candidate_29: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf5 lf4).
Lemma candidate_30: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_31: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 Nil).
Lemma candidate_32: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lf4).
Lemma candidate_33: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_34: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_35: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_36: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_37: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_38: forall (lf3 : lst), @eq lst lf3 (lf3).
Lemma candidate_39: forall (lf3 : lst) (n : natural) (lf4 : lst), @eq lst lf3 (Cons n (lfappend lf4 (Nil))).
Lemma candidate_40: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_41: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_42: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_43: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_44: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (lfappend lf4 Nil).
Lemma candidate_45: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (lf4).
Lemma candidate_46: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_47: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil))   (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_48: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_49: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n (rev (rev lf4))).
Lemma candidate_50: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n (lfappend lf4 Nil)).
Lemma candidate_51: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n lf4).
Lemma candidate_52: @eq lst Nil (Nil).
Lemma candidate_53: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_54: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_55: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_56: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_57: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_58: forall (lf3 : lst), @eq lst lf3 (lf3).
Lemma candidate_59: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (rev (rev l1))).
Lemma candidate_60: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_61: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_62: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_63: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_64: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n l1).
Lemma candidate_65: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend l1 (rev lf5)).
Lemma candidate_66: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (rev (rev l1)).
Lemma candidate_67: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend l1 lf5).
Lemma candidate_68: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend lf5 l1).
Lemma candidate_69: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend l1 Nil).
Lemma candidate_70: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (l1).
Lemma candidate_71: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 (rev lf5)).
Lemma candidate_72: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (rev (rev l1)).
Lemma candidate_73: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 lf5).
Lemma candidate_74: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend lf5 l1).
Lemma candidate_75: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 Nil).
Lemma candidate_76: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (l1).
Lemma candidate_77: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_78: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_79: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_80: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_81: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_82: forall (lf3 : lst), @eq lst lf3 (lf3).
Lemma candidate_83: forall (lf3 : lst) (n : natural) (l1 : lst), @eq lst lf3 (Cons n (lfappend (lfappend l1 (Nil)) (Nil))).
Lemma candidate_84: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil))   (Cons n (lfappend (rev (rev l1)) Nil)).
Lemma candidate_85: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil))   (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_86: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil))   (rev (lfappend (rev l1) (Cons n Nil))).
Lemma candidate_87: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil)) (Cons n (rev (rev l1))).
Lemma candidate_88: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil)) (Cons n (lfappend l1 Nil)).
Lemma candidate_89: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil)) (Cons n l1).
Lemma candidate_90: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (rev (lfappend (rev l1) Nil)).
Lemma candidate_91: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (lfappend (rev (rev l1)) Nil).
Lemma candidate_92: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (lfappend (lfappend l1 Nil) Nil).
Lemma candidate_93: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (rev (rev l1)).
Lemma candidate_94: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (lfappend l1 Nil).
Lemma candidate_95: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (l1).
Lemma candidate_96: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (lfappend (rev l1) Nil)).
Lemma candidate_97: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (rev (rev l1)) Nil).
Lemma candidate_98: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (lfappend l1 Nil) Nil).
Lemma candidate_99: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (rev l1)).
Lemma candidate_100: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend l1 Nil).
Lemma candidate_101: forall (l1 : lst), @eq lst (lfappend l1 Nil) (l1).
Lemma candidate_102: @eq lst Nil (Nil).
Lemma candidate_103: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_104: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_105: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_106: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_107: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_108: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_109: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_110: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_111: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_112: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_113: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_114: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n lf4).
Lemma candidate_115: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_116: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_117: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_118: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_119: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_120: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_121: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (rev (rev l1))).
Lemma candidate_122: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_123: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_124: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_125: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_126: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n l1).
Lemma candidate_127: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 (rev lf5)).
Lemma candidate_128: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (rev (rev l1)).
Lemma candidate_129: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 lf5).
Lemma candidate_130: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend lf5 l1).
Lemma candidate_131: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 Nil).
Lemma candidate_132: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (l1).
Lemma candidate_133: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_134: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_135: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_136: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_137: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_138: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_139: forall (n : natural) (lf1 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 (Nil))) lf1.
Lemma candidate_140: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (rev (rev l1)) Nil)).
Lemma candidate_141: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_142: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (rev (lfappend (rev l1) (Cons n Nil))).
Lemma candidate_143: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (rev (rev l1))).
Lemma candidate_144: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend l1 Nil)).
Lemma candidate_145: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n l1).
Lemma candidate_146: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (lfappend (rev l1) Nil)).
Lemma candidate_147: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (rev (rev l1)) Nil).
Lemma candidate_148: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (lfappend l1 Nil) Nil).
Lemma candidate_149: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (rev l1)).
Lemma candidate_150: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend l1 Nil).
Lemma candidate_151: forall (l1 : lst), @eq lst (lfappend l1 Nil) (l1).
Lemma candidate_152: @eq lst Nil (Nil).
Lemma candidate_153: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_154: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_155: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_156: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_157: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_158: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n lf4).
Lemma candidate_159: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (rev (rev lf2)) Nil)) (Cons n lf2).
Lemma candidate_160: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (lfappend lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_161: forall (n : natural) (lf2 : lst), @eq lst (rev (lfappend (rev lf2) (Cons n Nil))) (Cons n lf2).
Lemma candidate_162: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_163: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_164: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_165: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_166: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_167: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (lfappend (rev lf2) (Cons n Nil))).
Lemma candidate_168: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (rev (rev lf2))).
Lemma candidate_169: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend lf2 Nil)).
Lemma candidate_170: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_171: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_172: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_173: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_174: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_175: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_176: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n lf4).
Lemma candidate_177: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_178: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_179: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_180: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_181: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_182: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n lf4).
Lemma candidate_183: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (lfappend (rev lf4) Nil))).
Lemma candidate_184: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_185: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_186: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_187: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_188: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lf4)).
Lemma candidate_189: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (rev (rev lf4))) (Cons n (lfappend lf4 lf5)).
Lemma candidate_190: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf5 lf4)) (Cons n (lfappend lf4 lf5)).
Lemma candidate_191: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n lf4)) (Cons n (lfappend lf4 lf5)).
Lemma candidate_192: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf4 lf5)).
Lemma candidate_193: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n (lfappend lf4 lf5)).
Lemma candidate_194: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 lf5)).
Lemma candidate_195: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (rev (rev lf4))).
Lemma candidate_196: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf5 lf4)).
Lemma candidate_197: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (lfappend lf5 (Cons n lf4)).
Lemma candidate_198: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf4 lf5)).
Lemma candidate_199: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n (lfappend lf4 Nil)).
Lemma candidate_200: forall (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (Cons n (lfappend lf4 lf5)) (Cons n lf4).
Lemma candidate_201: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_202: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (rev lf4)).
Lemma candidate_203: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf5 lf4).
Lemma candidate_204: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_205: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 Nil).
Lemma candidate_206: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lf4).
Lemma candidate_207: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_208: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_209: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_210: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_211: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_212: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n lf4).
Lemma candidate_213: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (rev (rev l1))).
Lemma candidate_214: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_215: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_216: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_217: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_218: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n l1).
Lemma candidate_219: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (rev (rev lf2)) Nil)) (Cons n lf2).
Lemma candidate_220: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (lfappend lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_221: forall (n : natural) (lf2 : lst), @eq lst (rev (lfappend (rev lf2) (Cons n Nil))) (Cons n lf2).
Lemma candidate_222: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_223: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_224: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_225: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (lfappend (rev lf2) Nil))) (Cons n lf2).
Lemma candidate_226: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (rev (rev lf2)) Nil)) (Cons n lf2).
Lemma candidate_227: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (lfappend lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_228: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_229: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_230: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lf2)) (Cons n lf2).
Lemma candidate_231: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_232: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_233: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (lfappend (rev lf2) (Cons n Nil))).
Lemma candidate_234: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (rev (rev lf2))).
Lemma candidate_235: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend lf2 Nil)).
Lemma candidate_236: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_237: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (rev (rev l1))).
Lemma candidate_238: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_239: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_240: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_241: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_242: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n l1).
Lemma candidate_243: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 (rev lf5)).
Lemma candidate_244: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (rev (rev l1)).
Lemma candidate_245: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 lf5).
Lemma candidate_246: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend lf5 l1).
Lemma candidate_247: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 Nil).
Lemma candidate_248: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (l1).
Lemma candidate_249: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (rev (rev l1))).
Lemma candidate_250: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_251: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_252: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_253: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_254: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n l1).
Lemma candidate_255: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (rev (rev l1))) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma candidate_256: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma candidate_257: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend lf5 l1)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma candidate_258: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (lfappend lf5 (Cons n l1)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma candidate_259: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma candidate_260: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend (lfappend l1 lf5) lf5)).
Lemma candidate_261: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 (rev lf5))).
Lemma candidate_262: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (rev (rev l1))).
Lemma candidate_263: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_264: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_265: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_266: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (l1)).
Lemma candidate_267: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (rev (rev l1))).
Lemma candidate_268: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_269: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_270: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_271: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_272: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf5) lf5)) (Cons n l1).
Lemma candidate_273: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (rev (rev l1))).
Lemma candidate_274: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 lf5)).
Lemma candidate_275: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend lf5 l1)).
Lemma candidate_276: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (lfappend lf5 (Cons n l1)).
Lemma candidate_277: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 Nil)).
Lemma candidate_278: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n l1).
Lemma candidate_279: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend l1 (rev lf5)).
Lemma candidate_280: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (rev (rev l1)).
Lemma candidate_281: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend l1 lf5).
Lemma candidate_282: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend lf5 l1).
Lemma candidate_283: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (lfappend l1 Nil).
Lemma candidate_284: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend (lfappend l1 lf5) lf5) (l1).
Lemma candidate_285: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 (rev lf5)).
Lemma candidate_286: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (rev (rev l1)).
Lemma candidate_287: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 lf5).
Lemma candidate_288: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend lf5 l1).
Lemma candidate_289: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 Nil).
Lemma candidate_290: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (l1).
Lemma candidate_291: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (rev (rev l1)) Nil)).
Lemma candidate_292: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_293: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (rev (lfappend (rev l1) (Cons n Nil))).
Lemma candidate_294: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (rev (rev l1))).
Lemma candidate_295: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend l1 Nil)).
Lemma candidate_296: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n l1).
Lemma candidate_297: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (rev (rev lf2)) Nil)) (Cons n lf2).
Lemma candidate_298: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (lfappend lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_299: forall (n : natural) (lf2 : lst), @eq lst (rev (lfappend (rev lf2) (Cons n Nil))) (Cons n lf2).
Lemma candidate_300: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_301: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_302: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_303: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (lfappend (rev lf2) Nil))) (Cons n lf2).
Lemma candidate_304: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (rev (rev lf2)) Nil)) (Cons n lf2).
Lemma candidate_305: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (lfappend lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_306: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_307: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_308: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lf2)) (Cons n lf2).
Lemma candidate_309: forall (n : natural) (lf2 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 (Nil))) (Cons n lf2).
Lemma candidate_310: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_311: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_312: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (lfappend (rev lf2) (Cons n Nil))).
Lemma candidate_313: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (rev (rev lf2))).
Lemma candidate_314: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend lf2 Nil)).
Lemma candidate_315: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n lf2).
Lemma candidate_316: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (rev (rev l1)) Nil)).
Lemma candidate_317: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_318: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (rev (lfappend (rev l1) (Cons n Nil))).
Lemma candidate_319: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (rev (rev l1))).
Lemma candidate_320: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend l1 Nil)).
Lemma candidate_321: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n l1).
Lemma candidate_322: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (lfappend (rev l1) Nil)).
Lemma candidate_323: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (rev (rev l1)) Nil).
Lemma candidate_324: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (lfappend l1 Nil) Nil).
Lemma candidate_325: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (rev l1)).
Lemma candidate_326: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend l1 Nil).
Lemma candidate_327: forall (l1 : lst), @eq lst (lfappend l1 Nil) (l1).
Lemma candidate_328: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1749 seconds
Duplicates removed: 206
Filtered by Quickchick: 49
Filtered by script: 22
Remaining: 51

Lemmas: 
Lemma candidate_106: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_107: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_101: forall (l1 : lst), @eq lst (lfappend l1 Nil) (l1).
Lemma candidate_7: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_45: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (lf4).
Lemma candidate_99: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (rev l1)).
Lemma candidate_104: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_103: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_43: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_4: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_3: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_162: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_112: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_105: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_95: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (l1).
Lemma candidate_12: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (rev (rev lf2))).
Lemma candidate_5: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_145: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n l1).
Lemma candidate_163: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_51: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n lf4).
Lemma candidate_13: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend lf2 Nil)).
Lemma candidate_2: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_97: forall (l1 : lst), @eq lst (lfappend l1 Nil) (lfappend (rev (rev l1)) Nil).
Lemma candidate_96: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (lfappend (rev l1) Nil)).
Lemma candidate_93: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (rev (rev l1)).
Lemma candidate_41: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_40: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_143: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (rev (rev l1))).
Lemma candidate_225: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (lfappend (rev lf2) Nil))) (Cons n lf2).
Lemma candidate_183: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (lfappend (rev lf4) Nil))).
Lemma candidate_161: forall (n : natural) (lf2 : lst), @eq lst (rev (lfappend (rev lf2) (Cons n Nil))) (Cons n lf2).
Lemma candidate_159: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (rev (rev lf2)) Nil)) (Cons n lf2).
Lemma candidate_111: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_109: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_49: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n (rev (rev lf4))).
Lemma candidate_11: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (lfappend (rev lf2) (Cons n Nil))).
Lemma candidate_9: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_89: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil)) (Cons n l1).
Lemma candidate_160: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend (lfappend lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_110: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_10: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_91: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (lfappend (rev (rev l1)) Nil).
Lemma candidate_90: forall (l1 : lst), @eq lst (lfappend (lfappend l1 Nil) Nil) (rev (lfappend (rev l1) Nil)).
Lemma candidate_142: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (rev (lfappend (rev l1) (Cons n Nil))).
Lemma candidate_140: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (rev (rev l1)) Nil)).
Lemma candidate_87: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil)) (Cons n (rev (rev l1))).
Lemma candidate_48: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_46: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_86: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil))   (rev (lfappend (rev l1) (Cons n Nil))).
Lemma candidate_84: forall (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) Nil))   (Cons n (lfappend (rev (rev l1)) Nil)).
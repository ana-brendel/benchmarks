File Information
- File name: goal64
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal64_theorem0_41_negb_invol
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal64_theorem0_41_negb_invol
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (w z0 : lst) (x0 y0 : natural),
@eq bool (even (len (lfappend w z0)))
  (even (len (lfappend w (Cons x0 (Cons y0 z0))))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq bool (even (len z)) (negb (negb (even (len z))))

* Hypothesis:
x : natural
y : natural
z : lst

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
z : lst

* Terms:
negb (negb (even (len z))) : bool
even (len z) : bool
bool : Set
@eq bool (even (len z)) (negb (negb (even (len z)))) : Prop
negb (even (len z)) : bool
lst : Set
z : lst
len z : natural
natural : Set

* Functions:
len  : forall _ : lst, natural
even  : forall _ : natural, bool
negb  : forall _ : bool, bool
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : bool = even (len z)
lf1 : bool = negb (negb (even (len z)))
lf4 : natural = len z
lf2 : bool = negb (even (len z))

Generalizations:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf3 lf1.
Lemma conj5: forall (lf2 : bool) (lf3 : bool), @eq bool lf3 (negb lf2).
Lemma conj6: forall (lf3 : bool), @eq bool lf3 (negb (negb lf3)).
Lemma conj9: forall (lf4 : natural) (lf1 : bool), @eq bool (even lf4) lf1.
Lemma conj11: forall (lf1 : bool) (z : lst), @eq bool (even (len z)) lf1.
Lemma conj13: forall (lf2 : bool) (lf4 : natural), @eq bool (even lf4) (negb lf2).
Lemma conj14: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma conj15: forall (lf2 : bool) (z : lst), @eq bool (even (len z)) (negb lf2).
Lemma conj16: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len z)))).


<---VALIDITY CHECKS--->
Time elapsed: 44 seconds
Valid:
Lemma conj16: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len z)))).
Lemma conj14: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma conj6: forall (lf3 : bool), @eq bool lf3 (negb (negb lf3)).

Invalid:
Lemma conj15: forall (lf2 : bool) (z : lst), @eq bool (even (len z)) (negb lf2).
Lemma conj13: forall (lf2 : bool) (lf4 : natural), @eq bool (even lf4) (negb lf2).
Lemma conj11: forall (lf1 : bool) (z : lst), @eq bool (even (len z)) lf1.
Lemma conj9: forall (lf4 : natural) (lf1 : bool), @eq bool (even lf4) lf1.
Lemma conj5: forall (lf2 : bool) (lf3 : bool), @eq bool lf3 (negb lf2).
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf3 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 45 seconds
Generalizations:
Lemma conj15: forall (lf2 : bool) (z : lst), @eq bool (even (len z)) (negb lf2).
Lemma conj13: forall (lf2 : bool) (lf4 : natural), @eq bool (even lf4) (negb lf2).
Lemma conj11: forall (lf1 : bool) (z : lst), @eq bool (even (len z)) lf1.
Lemma conj9: forall (lf4 : natural) (lf1 : bool), @eq bool (even lf4) lf1.
Lemma conj5: forall (lf2 : bool) (lf3 : bool), @eq bool lf3 (negb lf2).
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf3 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 59 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf3 lf1.
Lemma conj5: forall (lf2 : bool) (lf3 : bool), @eq bool lf3 (negb lf2).
Lemma conj9: forall (lf4 : natural) (lf1 : bool), @eq bool (even lf4) lf1.
Lemma conj11: forall (lf1 : bool) (z : lst), @eq bool (even (len z)) lf1.
Lemma conj13: forall (lf2 : bool) (lf4 : natural), @eq bool (even lf4) (negb lf2).
Lemma conj15: forall (lf2 : bool) (z : lst), @eq bool (even (len z)) (negb lf2).


<---CREATE SKETCHES--->
Time elapsed: 59 seconds
Sketches:
Sketch conj5_sketch0 : @eq bool lf3 (##hole##)
Sketch conj5_term_sketch0 : @eq bool (negb lf2) (##hole##)
Sketch conj9_sketch0 : @eq bool (##hole##) lf1
Sketch conj9_term_sketch0 : @eq bool (even lf4) (##hole##)
Sketch conj11_sketch0 : @eq bool (##hole##) lf1
Sketch conj11_sketch1 : @eq bool (even (##hole##)) lf1
Sketch conj11_term_sketch0 : @eq bool (even (len z)) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (len z) (##hole##)
Sketch conj13_sketch0 : @eq bool (##hole##) (negb lf2)
Sketch conj13_sketch1 : @eq bool (even lf4) (##hole##)
Sketch conj13_term_sketch0 : @eq bool (even lf4) (##hole##)
Sketch conj13_term_sketch1 : @eq bool (negb lf2) (##hole##)
Sketch conj15_sketch0 : @eq bool (##hole##) (negb lf2)
Sketch conj15_sketch1 : @eq bool (even (len z)) (##hole##)
Sketch conj15_sketch2 : @eq bool (even (##hole##)) (negb lf2)
Sketch conj15_term_sketch0 : @eq bool (even (len z)) (##hole##)
Sketch conj15_term_sketch1 : @eq bool (negb lf2) (##hole##)
Sketch conj15_term_sketch2 : @eq natural (len z) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 167 seconds
Problems per Sketch:
Sketch conj15_sketch1 --> Problem  synth_6
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj15_sketch2 --> Problem  synth_8
Sketch conj15_term_sketch1 --> Problem  synth_2
Sketch conj11_term_sketch0 --> Problem  synth_6
Sketch conj11_term_sketch1 --> Problem  synth_7
Sketch conj15_term_sketch2 --> Problem  synth_7
Sketch conj13_term_sketch0 --> Problem  synth_4
Sketch conj15_sketch0 --> Problem  synth_2
Sketch conj13_sketch1 --> Problem  synth_4
Sketch conj11_sketch1 --> Problem  synth_5
Sketch conj13_term_sketch1 --> Problem  synth_2
Sketch conj13_sketch0 --> Problem  synth_2
Sketch conj9_sketch0 --> Problem  synth_3
Sketch conj11_sketch0 --> Problem  synth_3
Sketch conj15_term_sketch0 --> Problem  synth_6
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj9_term_sketch0 --> Problem  synth_4


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 253 seconds

Problem: synth_8

Problem: synth_3
 negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))))
 negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))
 negb (negb (negb (negb (negb (negb lf1)))))
 negb (negb (negb (negb lf1)))
 negb (negb lf1)
 lf1

Problem: synth_6
 negb (negb (even (len (lfappend z Nil))))
 negb (negb (negb (negb (even (len z)))))
 even (len (lfappend z (lfappend z z)))
 even (len (lfappend z Nil))
 negb (negb (even (len z)))
 even (len z)

Problem: synth_7
 len (lfappend (lfappend (lfappend z Nil) Nil) Nil)
 len (lfappend (lfappend z Nil) Nil)
 len (lfappend z Nil)
 len z

Problem: synth_5

Problem: synth_4
 negb (negb (negb (negb (negb (negb (negb (negb (even lf4))))))))
 negb (negb (negb (negb (negb (negb (even lf4))))))
 negb (negb (negb (negb (even lf4))))
 negb (negb (even lf4))
 even lf4

Problem: synth_1
 negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf3)))))))))
 negb (negb (negb (negb (negb (negb (negb (negb lf3)))))))
 negb (negb (negb (negb (negb (negb lf3)))))
 negb (negb (negb (negb lf3)))
 negb (negb lf3)
 lf3

Problem: synth_2
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))
 negb (negb (negb (negb (negb (negb (negb lf2))))))
 negb (negb (negb (negb (negb lf2))))
 negb (negb (negb lf2))
 negb lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 253 seconds
Lemmas:
Lemma candidate_1: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len z)))).
Lemma candidate_2: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma candidate_3: forall (lf3 : bool), @eq bool lf3 (negb (negb lf3)).
Lemma candidate_4: forall (lf3 : bool), @eq bool lf3   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf3)))))))))).
Lemma candidate_5: forall (lf3 : bool), @eq bool lf3 (negb (negb (negb (negb (negb (negb (negb (negb lf3)))))))).
Lemma candidate_6: forall (lf3 : bool), @eq bool lf3 (negb (negb (negb (negb (negb (negb lf3)))))).
Lemma candidate_7: forall (lf3 : bool), @eq bool lf3 (negb (negb (negb (negb lf3)))).
Lemma candidate_8: forall (lf3 : bool), @eq bool lf3 (negb (negb lf3)).
Lemma candidate_9: forall (lf3 : bool), @eq bool lf3 (lf3).
Lemma candidate_10: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_11: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_12: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_13: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_14: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_15: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_16: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_17: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_18: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_19: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_20: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_21: forall (lf4 : natural), @eq bool (even lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf4))))))))).
Lemma candidate_22: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (negb (negb (even lf4))))))).
Lemma candidate_23: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (even lf4))))).
Lemma candidate_24: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma candidate_25: forall (lf4 : natural), @eq bool (even lf4) (even lf4).
Lemma candidate_26: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_27: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_28: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_29: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_30: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_31: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_32: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len (lfappend z Nil))))).
Lemma candidate_33: forall (z : lst), @eq bool (even (len z)) (negb (negb (negb (negb (even (len z)))))).
Lemma candidate_34: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z (lfappend z z)))).
Lemma candidate_35: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z Nil))).
Lemma candidate_36: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len z)))).
Lemma candidate_37: forall (z : lst), @eq bool (even (len z)) (even (len z)).
Lemma candidate_38: forall (z : lst), @eq natural (len z) (len (lfappend (lfappend (lfappend z Nil) Nil) Nil)).
Lemma candidate_39: forall (z : lst), @eq natural (len z) (len (lfappend (lfappend z Nil) Nil)).
Lemma candidate_40: forall (z : lst), @eq natural (len z) (len (lfappend z Nil)).
Lemma candidate_41: forall (z : lst), @eq natural (len z) (len z).
Lemma candidate_42: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))))   (negb lf2).
Lemma candidate_43: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb lf2))))))) (negb lf2).
Lemma candidate_44: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb lf2))))) (negb lf2).
Lemma candidate_45: forall (lf2 : bool), @eq bool (negb (negb (negb lf2))) (negb lf2).
Lemma candidate_46: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_47: forall (lf4 : natural), @eq bool (even lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf4))))))))).
Lemma candidate_48: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (negb (negb (even lf4))))))).
Lemma candidate_49: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (even lf4))))).
Lemma candidate_50: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma candidate_51: forall (lf4 : natural), @eq bool (even lf4) (even lf4).
Lemma candidate_52: forall (lf4 : natural), @eq bool (even lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf4))))))))).
Lemma candidate_53: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (negb (negb (even lf4))))))).
Lemma candidate_54: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (even lf4))))).
Lemma candidate_55: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma candidate_56: forall (lf4 : natural), @eq bool (even lf4) (even lf4).
Lemma candidate_57: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_58: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_59: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_60: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_61: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_62: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))))   (negb lf2).
Lemma candidate_63: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb lf2))))))) (negb lf2).
Lemma candidate_64: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb lf2))))) (negb lf2).
Lemma candidate_65: forall (lf2 : bool), @eq bool (negb (negb (negb lf2))) (negb lf2).
Lemma candidate_66: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_67: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len (lfappend z Nil))))).
Lemma candidate_68: forall (z : lst), @eq bool (even (len z)) (negb (negb (negb (negb (even (len z)))))).
Lemma candidate_69: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z (lfappend z z)))).
Lemma candidate_70: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z Nil))).
Lemma candidate_71: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len z)))).
Lemma candidate_72: forall (z : lst), @eq bool (even (len z)) (even (len z)).
Lemma candidate_73: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len (lfappend z Nil))))).
Lemma candidate_74: forall (z : lst), @eq bool (even (len z)) (negb (negb (negb (negb (even (len z)))))).
Lemma candidate_75: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z (lfappend z z)))).
Lemma candidate_76: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z Nil))).
Lemma candidate_77: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len z)))).
Lemma candidate_78: forall (z : lst), @eq bool (even (len z)) (even (len z)).
Lemma candidate_79: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_80: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_81: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_82: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_83: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_84: forall (z : lst), @eq natural (len z) (len (lfappend (lfappend (lfappend z Nil) Nil) Nil)).
Lemma candidate_85: forall (z : lst), @eq natural (len z) (len (lfappend (lfappend z Nil) Nil)).
Lemma candidate_86: forall (z : lst), @eq natural (len z) (len (lfappend z Nil)).
Lemma candidate_87: forall (z : lst), @eq natural (len z) (len z).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 440 seconds
Duplicates removed: 52
Filtered by Quickchick: 0
Filtered by script: 6
Remaining: 29

Lemmas: 
Lemma candidate_19: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_3: forall (lf3 : bool), @eq bool lf3 (negb (negb lf3)).
Lemma candidate_40: forall (z : lst), @eq natural (len z) (len (lfappend z Nil)).
Lemma candidate_45: forall (lf2 : bool), @eq bool (negb (negb (negb lf2))) (negb lf2).
Lemma candidate_18: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_13: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_7: forall (lf3 : bool), @eq bool lf3 (negb (negb (negb (negb lf3)))).
Lemma candidate_2: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (even lf4))).
Lemma candidate_35: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z Nil))).
Lemma candidate_39: forall (z : lst), @eq natural (len z) (len (lfappend (lfappend z Nil) Nil)).
Lemma candidate_44: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb lf2))))) (negb lf2).
Lemma candidate_23: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (even lf4))))).
Lemma candidate_17: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_12: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_6: forall (lf3 : bool), @eq bool lf3 (negb (negb (negb (negb (negb (negb lf3)))))).
Lemma candidate_34: forall (z : lst), @eq bool (even (len z)) (even (len (lfappend z (lfappend z z)))).
Lemma candidate_33: forall (z : lst), @eq bool (even (len z)) (negb (negb (negb (negb (even (len z)))))).
Lemma candidate_32: forall (z : lst), @eq bool (even (len z)) (negb (negb (even (len (lfappend z Nil))))).
Lemma candidate_43: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb lf2))))))) (negb lf2).
Lemma candidate_38: forall (z : lst), @eq natural (len z) (len (lfappend (lfappend (lfappend z Nil) Nil) Nil)).
Lemma candidate_22: forall (lf4 : natural), @eq bool (even lf4) (negb (negb (negb (negb (negb (negb (even lf4))))))).
Lemma candidate_16: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_11: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_5: forall (lf3 : bool), @eq bool lf3 (negb (negb (negb (negb (negb (negb (negb (negb lf3)))))))).
Lemma candidate_42: forall (lf2 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))))   (negb lf2).
Lemma candidate_21: forall (lf4 : natural), @eq bool (even lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf4))))))))).
Lemma candidate_10: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_4: forall (lf3 : bool), @eq bool lf3   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf3)))))))))).
Lemma candidate_15: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
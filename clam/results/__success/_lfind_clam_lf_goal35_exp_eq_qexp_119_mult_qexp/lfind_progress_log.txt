File Information
- File name: goal35
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal35_exp_eq_qexp_119_mult_qexp
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal35_exp_eq_qexp_119_mult_qexp
- Namespace: adtind
- Proof name: exp_eq_qexp
- Theorem: Theorem exp_eq_qexp: forall x0 y0 : natural, @eq natural (exp x0 y0) (qexp x0 y0 (Succ Zero)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x)

* Hypothesis:
x : natural
y : natural
IHy : @eq natural (exp x y) (qexp x y (Succ Zero))

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
@eq natural (exp x y) (qexp x y (Succ Zero)) : Prop
x : natural
qexp x y (Succ Zero) : natural
Zero : natural
y : natural
exp x y : natural
Succ Zero : natural
qexp x y x : natural
natural : Set
mult (qexp x y (Succ Zero)) x : natural
@eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x) : Prop

* Functions:
exp  : forall (_ : natural) (_ : natural), natural
Succ  : forall _ : natural, natural
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
qexp  : forall (_ : natural) (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = qexp x y x
lf1 : natural = mult (qexp x y (Succ Zero)) x
lf4 : natural = Succ Zero
lf5 : natural = Zero
lf2 : natural = qexp x y (Succ Zero)

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj9: forall (lf2 : natural) (x : natural) (lf3 : natural), @eq natural (mult lf2 x) lf3.
Lemma conj10: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y lf4) x) lf3.
Lemma conj14: forall (lf5 : natural) (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) lf3.
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ Zero)) x) lf3.
Lemma conj17: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y x).
Lemma conj25: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (mult lf2 x) (qexp x y x).
Lemma conj26: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma conj32: forall (x : natural) (y : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).


<---VALIDITY CHECKS--->
Time elapsed: 19 seconds
Valid:
Lemma conj32: forall (x : natural) (y : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).

Invalid:
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma conj26: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma conj25: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (mult lf2 x) (qexp x y x).
Lemma conj17: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y x).
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ Zero)) x) lf3.
Lemma conj14: forall (lf5 : natural) (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) lf3.
Lemma conj10: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y lf4) x) lf3.
Lemma conj9: forall (lf2 : natural) (x : natural) (lf3 : natural), @eq natural (mult lf2 x) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 29 seconds
Generalizations:
Lemma conj30_imp: forall (lf5 : natural) (x : natural) (y : natural), forall _ : @eq natural (exp x y) (qexp x y (Succ lf5)),
@eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma conj26_imp: forall (x : natural) (lf4 : natural) (y : natural), forall _ : @eq natural (exp x y) (qexp x y lf4),
@eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma conj26: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma conj25_imp: forall (lf2 : natural) (x : natural) (y : natural), forall _ : @eq natural (exp x y) lf2, @eq natural (mult lf2 x) (qexp x y x).
Lemma conj25: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (mult lf2 x) (qexp x y x).
Lemma conj17: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y x).
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ Zero)) x) lf3.
Lemma conj14: forall (lf5 : natural) (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) lf3.
Lemma conj10_imp: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), forall _ : @eq natural (exp x y) (qexp x y lf4),
@eq natural (mult (qexp x y lf4) x) lf3.
Lemma conj10: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y lf4) x) lf3.
Lemma conj9: forall (lf2 : natural) (x : natural) (lf3 : natural), @eq natural (mult lf2 x) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 56 seconds
Valid:
Lemma conj25_imp: forall (lf2 : natural) (x : natural) (y : natural), forall _ : @eq natural (exp x y) lf2, @eq natural (mult lf2 x) (qexp x y x).
Lemma conj26_imp: forall (x : natural) (lf4 : natural) (y : natural), forall _ : @eq natural (exp x y) (qexp x y lf4),
@eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma conj30_imp: forall (lf5 : natural) (x : natural) (y : natural), forall _ : @eq natural (exp x y) (qexp x y (Succ lf5)),
@eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj9: forall (lf2 : natural) (x : natural) (lf3 : natural), @eq natural (mult lf2 x) lf3.
Lemma conj10: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y lf4) x) lf3.
Lemma conj10_imp: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), forall _ : @eq natural (exp x y) (qexp x y lf4),
@eq natural (mult (qexp x y lf4) x) lf3.
Lemma conj14: forall (lf5 : natural) (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) lf3.
Lemma conj16: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (mult (qexp x y (Succ Zero)) x) lf3.
Lemma conj17: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y x).
Lemma conj25: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (mult lf2 x) (qexp x y x).
Lemma conj26: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma conj30: forall (lf5 : natural) (x : natural) (y : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).


<---CREATE SKETCHES--->
Time elapsed: 56 seconds
Sketches:
Sketch conj9_sketch0 : @eq natural (##hole##) lf3
Sketch conj9_term_sketch0 : @eq natural (mult lf2 x) (##hole##)
Sketch conj10_sketch0 : @eq natural (##hole##) lf3
Sketch conj10_sketch1 : @eq natural (mult (##hole##) x) lf3
Sketch conj10_term_sketch0 : @eq natural (mult (qexp x y lf4) x) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj10_imp_sketch0 : forall _ : @eq natural (##hole##) (qexp x y lf4),
@eq natural (mult (qexp x y lf4) x) lf3
Sketch conj10_imp_sketch1 : forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (##hole##) lf3
Sketch conj10_imp_sketch2 : forall _ : @eq natural (exp x y) (##hole##),
@eq natural (mult (##hole##) x) lf3
Sketch conj10_imp_term_sketch0 : @eq natural (exp x y) (##hole##)
Sketch conj10_imp_term_sketch1 : @eq natural (mult (qexp x y lf4) x) (##hole##)
Sketch conj10_imp_term_sketch2 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj14_sketch0 : @eq natural (##hole##) lf3
Sketch conj14_sketch1 : @eq natural (mult (##hole##) x) lf3
Sketch conj14_sketch2 : @eq natural (mult (qexp x y (##hole##)) x) lf3
Sketch conj14_term_sketch0 : @eq natural (mult (qexp x y (Succ lf5)) x) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (qexp x y (Succ lf5)) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj16_sketch0 : @eq natural (mult (##hole##) x) lf3
Sketch conj16_sketch1 : @eq natural (mult (qexp x y (Succ (##hole##))) x) lf3
Sketch conj16_sketch2 : @eq natural (mult (qexp x y (##hole##)) x) lf3
Sketch conj16_sketch3 : @eq natural (##hole##) lf3
Sketch conj16_term_sketch0 : @eq natural (qexp x y (Succ Zero)) (##hole##)
Sketch conj16_term_sketch1 : @eq natural Zero (##hole##)
Sketch conj16_term_sketch2 : @eq natural (Succ Zero) (##hole##)
Sketch conj16_term_sketch3 : @eq natural (mult (qexp x y (Succ Zero)) x) (##hole##)
Sketch conj17_sketch0 : @eq natural lf1 (##hole##)
Sketch conj17_term_sketch0 : @eq natural (qexp x y x) (##hole##)
Sketch conj25_sketch0 : @eq natural (##hole##) (qexp x y x)
Sketch conj25_sketch1 : @eq natural (mult lf2 x) (##hole##)
Sketch conj25_term_sketch0 : @eq natural (mult lf2 x) (##hole##)
Sketch conj25_term_sketch1 : @eq natural (qexp x y x) (##hole##)
Sketch conj26_sketch0 : @eq natural (##hole##) (qexp x y x)
Sketch conj26_sketch1 : @eq natural (mult (qexp x y lf4) x) (##hole##)
Sketch conj26_sketch2 : @eq natural (mult (##hole##) x) (qexp x y x)
Sketch conj26_term_sketch0 : @eq natural (mult (qexp x y lf4) x) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (qexp x y x) (##hole##)
Sketch conj26_term_sketch2 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj30_sketch0 : @eq natural (##hole##) (qexp x y x)
Sketch conj30_sketch1 : @eq natural (mult (##hole##) x) (qexp x y x)
Sketch conj30_sketch2 : @eq natural (mult (qexp x y (##hole##)) x) (qexp x y x)
Sketch conj30_sketch3 : @eq natural (mult (qexp x y (Succ lf5)) x) (##hole##)
Sketch conj30_term_sketch0 : @eq natural (mult (qexp x y (Succ lf5)) x) (##hole##)
Sketch conj30_term_sketch1 : @eq natural (qexp x y (Succ lf5)) (##hole##)
Sketch conj30_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj30_term_sketch3 : @eq natural (qexp x y x) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 92 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_17
Sketch conj10_imp_sketch2 --> Problem  synth_8
Sketch conj26_term_sketch1 --> Problem  synth_17
Sketch conj16_sketch3 --> Problem  synth_1
Sketch conj14_sketch2 --> Problem  synth_10
Sketch conj26_sketch2 --> Problem  synth_9
Sketch conj25_sketch1 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_18
Sketch conj16_sketch2 --> Problem  synth_10
Sketch conj10_term_sketch1 --> Problem  synth_5
Sketch conj30_sketch3 --> Problem  synth_11
Sketch conj16_term_sketch1 --> Problem  synth_15
Sketch conj10_imp_sketch0 --> Problem  synth_6
Sketch conj14_term_sketch2 --> Problem  synth_13
Sketch conj25_term_sketch1 --> Problem  synth_17
Sketch conj30_sketch1 --> Problem  synth_9
Sketch conj26_sketch0 --> Problem  synth_17
Sketch conj30_term_sketch3 --> Problem  synth_17
Sketch conj17_term_sketch0 --> Problem  synth_17
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj26_term_sketch2 --> Problem  synth_5
Sketch conj14_term_sketch1 --> Problem  synth_12
Sketch conj26_sketch1 --> Problem  synth_4
Sketch conj10_imp_term_sketch1 --> Problem  synth_4
Sketch conj30_sketch2 --> Problem  synth_19
Sketch conj10_imp_term_sketch0 --> Problem  synth_9
Sketch conj10_sketch1 --> Problem  synth_3
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj16_sketch1 --> Problem  synth_14
Sketch conj10_imp_sketch1 --> Problem  synth_7
Sketch conj30_term_sketch2 --> Problem  synth_13
Sketch conj10_term_sketch0 --> Problem  synth_4
Sketch conj25_sketch0 --> Problem  synth_17
Sketch conj26_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch2 --> Problem  synth_16
Sketch conj30_term_sketch1 --> Problem  synth_12
Sketch conj16_sketch0 --> Problem  synth_3
Sketch conj14_sketch0 --> Problem  synth_1
Sketch conj14_term_sketch0 --> Problem  synth_11
Sketch conj30_term_sketch0 --> Problem  synth_11
Sketch conj16_term_sketch0 --> Problem  synth_9
Sketch conj10_imp_term_sketch2 --> Problem  synth_5
Sketch conj16_term_sketch3 --> Problem  synth_17
Sketch conj25_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch0 --> Problem  synth_1
Sketch conj14_sketch1 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 348 seconds

Problem: synth_18
 plus lf1 Zero
 lf1

Problem: synth_17
 qexp x y x
 mult (exp x y) x

Problem: synth_9
 exp x (plus y Zero)
 qexp x y (Succ Zero)
 exp x y

Problem: synth_13
 plus lf5 (Succ lf5)
 plus lf5 (Succ Zero)
 exp lf5 lf5
 exp Zero lf5
 Succ lf5
 Succ Zero

Problem: synth_6
 exp x y

Problem: synth_11
 qexp x y (plus (mult lf5 x) x)
 qexp x y x
 mult (exp x y) x

Problem: synth_7
 exp lf3 lf4
 mult lf3 lf4
 plus lf3 Zero
 lf3

Problem: synth_4
 qexp x y (mult lf4 x)
 qexp x y x
 mult (exp x y) x

Problem: synth_1
 plus lf3 Zero
 lf3

Problem: synth_16
 Succ Zero

Problem: synth_19
 Succ (mult (exp Zero x) Zero)
 Succ (mult y Zero)
 Succ (mult x Zero)
 exp (Succ Zero) y
 exp (Succ Zero) x
 Succ Zero

Problem: synth_15
 Zero

Problem: synth_14
 mult lf3 Zero
 mult y Zero
 mult x Zero
 Zero

Problem: synth_10
 Succ Zero

Problem: synth_8
 exp x y

Problem: synth_3

Problem: synth_12
 exp x (plus y lf5)
 exp x (plus y Zero)
 qexp x y (Succ lf5)
 qexp x y (Succ Zero)
 exp x y

Problem: synth_5
 exp x (plus y Zero)
 qexp x y (Succ Zero)
 qexp x y lf4
 exp x y

Problem: synth_2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 348 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).
Lemma candidate_2: forall (y : natural) (x : natural) (lf2 : natural), forall _ : @eq natural (exp x y) lf2, @eq natural (mult lf2 x) (qexp x y x).
Lemma candidate_3: forall (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma candidate_4: forall (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (exp x y) (qexp x y (Succ lf5)), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_6: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_7: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_8: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_9: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y (mult lf4 x)).
Lemma candidate_10: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma candidate_11: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (mult (exp x y) x).
Lemma candidate_12: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (exp x (plus y Zero)).
Lemma candidate_13: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (Succ Zero)).
Lemma candidate_14: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y lf4).
Lemma candidate_15: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (exp x y).
Lemma candidate_16: forall (lf3 : natural) (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (mult (qexp x y lf4) x) lf3.
Lemma candidate_17: forall (lf3 : natural) (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (exp lf3 lf4) lf3.
Lemma candidate_18: forall (lf3 : natural) (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (mult lf3 lf4) lf3.
Lemma candidate_19: forall (lf3 : natural) (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_20: forall (lf3 : natural) (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (lf3) lf3.
Lemma candidate_21: forall (lf3 : natural) (y : natural) (x : natural), forall _ : @eq natural (exp x y) (exp x y), @eq natural (mult (exp x y) x) lf3.
Lemma candidate_22: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_23: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_24: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_25: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y (mult lf4 x)).
Lemma candidate_26: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma candidate_27: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (mult (exp x y) x).
Lemma candidate_28: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (exp x (plus y Zero)).
Lemma candidate_29: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (Succ Zero)).
Lemma candidate_30: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y lf4).
Lemma candidate_31: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (exp x y).
Lemma candidate_32: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_33: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_34: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) lf3.
Lemma candidate_35: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y (plus (mult lf5 x) x)).
Lemma candidate_36: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma candidate_37: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (mult (exp x y) x).
Lemma candidate_38: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (exp x (plus y lf5)).
Lemma candidate_39: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (exp x (plus y Zero)).
Lemma candidate_40: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (qexp x y (Succ lf5)).
Lemma candidate_41: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (qexp x y (Succ Zero)).
Lemma candidate_42: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (exp x y).
Lemma candidate_43: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ lf5)).
Lemma candidate_44: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_45: forall (lf5 : natural), @eq natural (Succ lf5) (exp lf5 lf5).
Lemma candidate_46: forall (lf5 : natural), @eq natural (Succ lf5) (exp Zero lf5).
Lemma candidate_47: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_48: forall (lf5 : natural), @eq natural (Succ lf5) (Succ Zero).
Lemma candidate_49: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult lf3 Zero))) x) lf3.
Lemma candidate_50: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult y Zero))) x) lf3.
Lemma candidate_51: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult x Zero))) x) lf3.
Lemma candidate_52: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (Zero))) x) lf3.
Lemma candidate_53: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) lf3.
Lemma candidate_54: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_55: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_56: forall (y : natural) (x : natural), @eq natural (qexp x y (Succ Zero)) (exp x (plus y Zero)).
Lemma candidate_57: forall (y : natural) (x : natural), @eq natural (qexp x y (Succ Zero)) (qexp x y (Succ Zero)).
Lemma candidate_58: forall (y : natural) (x : natural), @eq natural (qexp x y (Succ Zero)) (exp x y).
Lemma candidate_59: @eq natural Zero (Zero).
Lemma candidate_60: @eq natural (Succ Zero) (Succ Zero).
Lemma candidate_61: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).
Lemma candidate_62: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (mult (exp x y) x).
Lemma candidate_63: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_64: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_65: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_66: forall (y : natural) (x : natural), @eq natural (qexp x y x) (mult (exp x y) x).
Lemma candidate_67: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_68: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_69: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_70: forall (y : natural) (x : natural), @eq natural (qexp x y x) (mult (exp x y) x).
Lemma candidate_71: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_72: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_73: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y (mult lf4 x)).
Lemma candidate_74: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma candidate_75: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (mult (exp x y) x).
Lemma candidate_76: forall (y : natural) (x : natural), @eq natural (mult (exp x (plus y Zero)) x) (qexp x y x).
Lemma candidate_77: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).
Lemma candidate_78: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_79: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y (mult lf4 x)).
Lemma candidate_80: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma candidate_81: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (mult (exp x y) x).
Lemma candidate_82: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_83: forall (y : natural) (x : natural), @eq natural (qexp x y x) (mult (exp x y) x).
Lemma candidate_84: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (exp x (plus y Zero)).
Lemma candidate_85: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (Succ Zero)).
Lemma candidate_86: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y lf4).
Lemma candidate_87: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (exp x y).
Lemma candidate_88: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_89: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_90: forall (y : natural) (x : natural), @eq natural (mult (exp x (plus y Zero)) x) (qexp x y x).
Lemma candidate_91: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).
Lemma candidate_92: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_93: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult (exp Zero x) Zero))) x) (qexp x y x).
Lemma candidate_94: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult y Zero))) x) (qexp x y x).
Lemma candidate_95: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult x Zero))) x) (qexp x y x).
Lemma candidate_96: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (exp (Succ Zero) y)) x) (qexp x y x).
Lemma candidate_97: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (exp (Succ Zero) x)) x) (qexp x y x).
Lemma candidate_98: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x).
Lemma candidate_99: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y (plus (mult lf5 x) x)).
Lemma candidate_100: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma candidate_101: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (mult (exp x y) x).
Lemma candidate_102: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y (plus (mult lf5 x) x)).
Lemma candidate_103: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
Lemma candidate_104: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (mult (exp x y) x).
Lemma candidate_105: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (exp x (plus y lf5)).
Lemma candidate_106: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (exp x (plus y Zero)).
Lemma candidate_107: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (qexp x y (Succ lf5)).
Lemma candidate_108: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (qexp x y (Succ Zero)).
Lemma candidate_109: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (Succ lf5)) (exp x y).
Lemma candidate_110: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ lf5)).
Lemma candidate_111: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_112: forall (lf5 : natural), @eq natural (Succ lf5) (exp lf5 lf5).
Lemma candidate_113: forall (lf5 : natural), @eq natural (Succ lf5) (exp Zero lf5).
Lemma candidate_114: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_115: forall (lf5 : natural), @eq natural (Succ lf5) (Succ Zero).
Lemma candidate_116: forall (y : natural) (x : natural), @eq natural (qexp x y x) (qexp x y x).
Lemma candidate_117: forall (y : natural) (x : natural), @eq natural (qexp x y x) (mult (exp x y) x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 435 seconds
Duplicates removed: 60
Filtered by Quickchick: 24
Filtered by script: 14
Remaining: 19

Lemmas: 
Lemma candidate_63: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_68: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_66: forall (y : natural) (x : natural), @eq natural (qexp x y x) (mult (exp x y) x).
Lemma candidate_22: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_44: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_76: forall (y : natural) (x : natural), @eq natural (mult (exp x (plus y Zero)) x) (qexp x y x).
Lemma candidate_56: forall (y : natural) (x : natural), @eq natural (qexp x y (Succ Zero)) (exp x (plus y Zero)).
Lemma candidate_9: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (mult (qexp x y lf4) x) (qexp x y (mult lf4 x)).
Lemma candidate_97: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (exp (Succ Zero) x)) x) (qexp x y x).
Lemma candidate_96: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (exp (Succ Zero) y)) x) (qexp x y x).
Lemma candidate_95: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult x Zero))) x) (qexp x y x).
Lemma candidate_94: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult y Zero))) x) (qexp x y x).
Lemma candidate_35: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y (plus (mult lf5 x) x)).
Lemma candidate_2: forall (y : natural) (x : natural) (lf2 : natural), forall _ : @eq natural (exp x y) lf2, @eq natural (mult lf2 x) (qexp x y x).
Lemma candidate_93: forall (y : natural) (x : natural), @eq natural (mult (qexp x y (Succ (mult (exp Zero x) Zero))) x) (qexp x y x).
Lemma candidate_19: forall (lf3 : natural) (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_3: forall (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (exp x y) (qexp x y lf4), @eq natural (mult (qexp x y lf4) x) (qexp x y x).
Lemma candidate_4: forall (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (exp x y) (qexp x y (Succ lf5)), @eq natural (mult (qexp x y (Succ lf5)) x) (qexp x y x).
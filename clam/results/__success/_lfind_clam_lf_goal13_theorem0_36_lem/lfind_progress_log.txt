File Information
- File name: goal13
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal13_theorem0_36_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal13_theorem0_36_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : natural, @eq natural (half (plus x0 x0)) x0.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x))

* Hypothesis:
IHx : @eq natural (half (plus (Succ x) (Succ x))) (Succ x)
x : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural

* Terms:
Succ x : natural
plus (Succ x) (Succ x) : natural
half (plus (Succ x) (Succ x)) : natural
half (plus x (Succ (Succ x))) : natural
Succ (half (plus x (Succ (Succ x)))) : natural
plus x (Succ (Succ x)) : natural
x : natural
@eq natural (half (plus (Succ x) (Succ x))) (Succ x) : Prop
natural : Set
Succ (Succ x) : natural
@eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x)) : Prop

* Functions:
Succ  : forall _ : natural, natural
half  : forall _ : natural, natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : natural = plus x (Succ (Succ x))
lf1 : natural = Succ (half (plus x (Succ (Succ x))))
lf4 : natural = Succ (Succ x)
lf5 : natural = Succ x
lf2 : natural = half (plus x (Succ (Succ x)))

Generalizations:
Lemma conj1: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 lf4.
Lemma conj5: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj7: forall (x : natural) (lf1 : natural), @eq natural lf1 (Succ (Succ x)).
Lemma conj9: forall (lf2 : natural) (lf4 : natural), @eq natural (Succ lf2) lf4.
Lemma conj10: forall (lf4 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) lf4.
Lemma conj13: forall (lf2 : natural) (lf5 : natural), @eq natural (Succ lf2) (Succ lf5).
Lemma conj14: forall (lf5 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ lf5).
Lemma conj15: forall (lf2 : natural) (x : natural), @eq natural (Succ lf2) (Succ (Succ x)).
Lemma conj16: forall (x : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (Succ x)).
Lemma conj26: forall (x : natural) (lf4 : natural), @eq natural (Succ (half (plus x lf4))) lf4.
Lemma conj30: forall (lf5 : natural) (x : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ lf5).
Lemma conj32: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x)).


<---VALIDITY CHECKS--->
Time elapsed: 21 seconds
Valid:
Lemma conj32: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x)).

Invalid:
Lemma conj30: forall (lf5 : natural) (x : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ lf5).
Lemma conj26: forall (x : natural) (lf4 : natural), @eq natural (Succ (half (plus x lf4))) lf4.
Lemma conj16: forall (x : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (Succ x)).
Lemma conj15: forall (lf2 : natural) (x : natural), @eq natural (Succ lf2) (Succ (Succ x)).
Lemma conj14: forall (lf5 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ lf5).
Lemma conj13: forall (lf2 : natural) (lf5 : natural), @eq natural (Succ lf2) (Succ lf5).
Lemma conj10: forall (lf4 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) lf4.
Lemma conj9: forall (lf2 : natural) (lf4 : natural), @eq natural (Succ lf2) lf4.
Lemma conj7: forall (x : natural) (lf1 : natural), @eq natural lf1 (Succ (Succ x)).
Lemma conj5: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj1: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 33 seconds
Generalizations:
Lemma conj30: forall (lf5 : natural) (x : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ lf5).
Lemma conj26: forall (x : natural) (lf4 : natural), @eq natural (Succ (half (plus x lf4))) lf4.
Lemma conj16: forall (x : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (Succ x)).
Lemma conj15: forall (lf2 : natural) (x : natural), @eq natural (Succ lf2) (Succ (Succ x)).
Lemma conj14: forall (lf5 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ lf5).
Lemma conj13: forall (lf2 : natural) (lf5 : natural), @eq natural (Succ lf2) (Succ lf5).
Lemma conj10: forall (lf4 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) lf4.
Lemma conj9: forall (lf2 : natural) (lf4 : natural), @eq natural (Succ lf2) lf4.
Lemma conj7: forall (x : natural) (lf1 : natural), @eq natural lf1 (Succ (Succ x)).
Lemma conj5: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj1: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 50 seconds
Valid:

Invalid:
Lemma conj1: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 lf4.
Lemma conj5: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj7: forall (x : natural) (lf1 : natural), @eq natural lf1 (Succ (Succ x)).
Lemma conj9: forall (lf2 : natural) (lf4 : natural), @eq natural (Succ lf2) lf4.
Lemma conj10: forall (lf4 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) lf4.
Lemma conj13: forall (lf2 : natural) (lf5 : natural), @eq natural (Succ lf2) (Succ lf5).
Lemma conj14: forall (lf5 : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ lf5).
Lemma conj15: forall (lf2 : natural) (x : natural), @eq natural (Succ lf2) (Succ (Succ x)).
Lemma conj16: forall (x : natural) (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (Succ x)).
Lemma conj26: forall (x : natural) (lf4 : natural), @eq natural (Succ (half (plus x lf4))) lf4.
Lemma conj30: forall (lf5 : natural) (x : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ lf5).


<---CREATE SKETCHES--->
Time elapsed: 50 seconds
Sketches:
Sketch conj5_sketch0 : @eq natural lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq natural (Succ lf5) (##hole##)
Sketch conj7_sketch0 : @eq natural lf1 (Succ (##hole##))
Sketch conj7_sketch1 : @eq natural lf1 (##hole##)
Sketch conj7_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj7_term_sketch1 : @eq natural (Succ (Succ x)) (##hole##)
Sketch conj9_sketch0 : @eq natural (##hole##) lf4
Sketch conj9_term_sketch0 : @eq natural (Succ lf2) (##hole##)
Sketch conj10_sketch0 : @eq natural (Succ (##hole##)) lf4
Sketch conj10_sketch1 : @eq natural (##hole##) lf4
Sketch conj10_term_sketch0 : @eq natural (half lf3) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (Succ (half lf3)) (##hole##)
Sketch conj13_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj13_sketch1 : @eq natural (Succ lf2) (##hole##)
Sketch conj13_term_sketch0 : @eq natural (Succ lf2) (##hole##)
Sketch conj13_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj14_sketch0 : @eq natural (Succ (##hole##)) (Succ lf5)
Sketch conj14_sketch1 : @eq natural (##hole##) (Succ lf5)
Sketch conj14_sketch2 : @eq natural (Succ (half lf3)) (##hole##)
Sketch conj14_term_sketch0 : @eq natural (half lf3) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (Succ (half lf3)) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj15_sketch0 : @eq natural (Succ lf2) (Succ (##hole##))
Sketch conj15_sketch1 : @eq natural (##hole##) (Succ (Succ x))
Sketch conj15_sketch2 : @eq natural (Succ lf2) (##hole##)
Sketch conj15_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj15_term_sketch1 : @eq natural (Succ lf2) (##hole##)
Sketch conj15_term_sketch2 : @eq natural (Succ (Succ x)) (##hole##)
Sketch conj16_sketch0 : @eq natural (Succ (half lf3)) (Succ (##hole##))
Sketch conj16_sketch1 : @eq natural (Succ (##hole##)) (Succ (Succ x))
Sketch conj16_sketch2 : @eq natural (##hole##) (Succ (Succ x))
Sketch conj16_sketch3 : @eq natural (Succ (half lf3)) (##hole##)
Sketch conj16_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj16_term_sketch1 : @eq natural (half lf3) (##hole##)
Sketch conj16_term_sketch2 : @eq natural (Succ (half lf3)) (##hole##)
Sketch conj16_term_sketch3 : @eq natural (Succ (Succ x)) (##hole##)
Sketch conj26_sketch0 : @eq natural (Succ (##hole##)) lf4
Sketch conj26_sketch1 : @eq natural (##hole##) lf4
Sketch conj26_sketch2 : @eq natural (Succ (half (##hole##))) lf4
Sketch conj26_term_sketch0 : @eq natural (half (plus x lf4)) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (Succ (half (plus x lf4))) (##hole##)
Sketch conj26_term_sketch2 : @eq natural (plus x lf4) (##hole##)
Sketch conj30_sketch0 : @eq natural (Succ (##hole##)) (Succ lf5)
Sketch conj30_sketch1 : @eq natural (##hole##) (Succ lf5)
Sketch conj30_sketch2 : @eq natural (Succ (half (##hole##))) (Succ lf5)
Sketch conj30_sketch3 : @eq natural (Succ (half (plus x (##hole##)))) (##hole##)
Sketch conj30_term_sketch0 : @eq natural (half (plus x (Succ lf5))) (##hole##)
Sketch conj30_term_sketch1 : @eq natural (Succ (half (plus x (Succ lf5)))) (##hole##)
Sketch conj30_term_sketch2 : @eq natural (plus x (Succ lf5)) (##hole##)
Sketch conj30_term_sketch3 : @eq natural (Succ lf5) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 63 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_11
Sketch conj15_sketch1 --> Problem  synth_5
Sketch conj7_sketch1 --> Problem  synth_1
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj26_term_sketch1 --> Problem  synth_15
Sketch conj16_sketch3 --> Problem  synth_10
Sketch conj14_sketch2 --> Problem  synth_10
Sketch conj15_term_sketch1 --> Problem  synth_7
Sketch conj26_sketch2 --> Problem  synth_13
Sketch conj16_sketch2 --> Problem  synth_5
Sketch conj10_term_sketch1 --> Problem  synth_10
Sketch conj30_sketch3 --> Problem  synth_5
Sketch conj15_term_sketch2 --> Problem  synth_5
Sketch conj16_term_sketch1 --> Problem  synth_9
Sketch conj14_term_sketch2 --> Problem  synth_2
Sketch conj30_sketch1 --> Problem  synth_2
Sketch conj26_sketch0 --> Problem  synth_8
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj30_term_sketch3 --> Problem  synth_2
Sketch conj13_term_sketch1 --> Problem  synth_2
Sketch conj9_sketch0 --> Problem  synth_6
Sketch conj26_term_sketch2 --> Problem  synth_16
Sketch conj14_term_sketch1 --> Problem  synth_10
Sketch conj7_term_sketch1 --> Problem  synth_5
Sketch conj26_sketch1 --> Problem  synth_6
Sketch conj30_sketch2 --> Problem  synth_17
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch1 --> Problem  synth_6
Sketch conj9_term_sketch0 --> Problem  synth_7
Sketch conj16_sketch1 --> Problem  synth_4
Sketch conj30_term_sketch2 --> Problem  synth_20
Sketch conj10_term_sketch0 --> Problem  synth_9
Sketch conj15_sketch2 --> Problem  synth_7
Sketch conj26_term_sketch0 --> Problem  synth_14
Sketch conj16_term_sketch2 --> Problem  synth_10
Sketch conj7_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch1 --> Problem  synth_19
Sketch conj13_term_sketch0 --> Problem  synth_7
Sketch conj15_sketch0 --> Problem  synth_12
Sketch conj16_sketch0 --> Problem  synth_9
Sketch conj13_sketch1 --> Problem  synth_7
Sketch conj14_sketch0 --> Problem  synth_11
Sketch conj14_term_sketch0 --> Problem  synth_9
Sketch conj30_term_sketch0 --> Problem  synth_18
Sketch conj16_term_sketch0 --> Problem  synth_4
Sketch conj13_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch3 --> Problem  synth_5
Sketch conj10_sketch0 --> Problem  synth_8
Sketch conj15_term_sketch0 --> Problem  synth_4
Sketch conj14_sketch1 --> Problem  synth_2


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 77 seconds

Problem: synth_20
 Succ (plus x (Succ x))
 Succ (plus lf5 x)
 Succ (plus x lf5)
 plus lf5 (Succ x)
 plus x (Succ lf5)
 plus lf5 lf5

Problem: synth_18
 half (plus lf5 lf5)
 Succ (plus x Zero)
 plus x (Succ Zero)
 plus lf5 Zero
 Succ x
 lf5

Problem: synth_17
 plus lf5 (half (plus lf5 (Succ lf5)))
 plus lf5 (half (plus lf5 lf5))
 plus (plus lf5 Zero) lf5
 plus (plus lf5 lf5) Zero
 plus lf5 (plus lf5 Zero)
 plus lf5 lf5

Problem: synth_9
 plus match lf3 with | Succ n => Succ (half n) | Zero => Zero end Zero
 half (plus lf3 (Succ Zero))
 half (plus lf3 Zero)
 plus (half lf3) Zero
 match lf3 with | Succ n => Succ (half n) | Zero => Zero end
 half lf3

Problem: synth_13
 plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf4))))
 plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus (half (half lf4)) (plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end))
 plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end))
 plus (half (half lf4)) (plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end match lf4 with | Succ n => Succ (half n) | Zero => Zero end))
 plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus (half (half lf4)) (half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))
 plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))

Problem: synth_6
 plus (plus lf4 Zero) Zero
 plus (half lf4) match lf4 with | Succ n => Succ (half n) | Zero => Zero end
 half (plus lf4 (Succ lf4))
 half (plus lf4 lf4)
 plus lf4 Zero
 lf4

Problem: synth_11
 plus (plus lf5 Zero) Zero
 plus (half lf5) match lf5 with | Succ n => Succ (half n) | Zero => Zero end
 half (plus lf5 (Succ lf5))
 half (plus lf5 lf5)
 plus lf5 Zero
 lf5

Problem: synth_7
 match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end
 Succ (half (plus lf2 lf2))
 plus (plus lf2 (Succ Zero)) Zero
 Succ (plus lf2 Zero)
 plus lf2 (Succ Zero)
 Succ lf2

Problem: synth_4
 Succ (half (plus x x))
 plus (plus x (Succ Zero)) Zero
 Succ (plus x (half (half x)))
 Succ (plus x Zero)
 plus x (Succ Zero)
 Succ x

Problem: synth_1
 plus (plus lf1 Zero) Zero
 plus (half lf1) match lf1 with | Succ n => Succ (half n) | Zero => Zero end
 half (plus lf1 (Succ lf1))
 half (plus lf1 lf1)
 plus lf1 Zero
 lf1

Problem: synth_16
 plus x (Succ (Succ x))
 plus x (plus lf4 Zero)
 plus lf4 (plus x Zero)
 Succ (plus x (Succ x))
 plus x lf4
 plus lf4 x

Problem: synth_19
 plus x (Succ (Succ Zero))
 Succ (plus x (Succ Zero))
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ (Succ x)
 Succ lf5

Problem: synth_15
 half (plus lf4 (Succ lf4))
 Succ (plus x (Succ Zero))
 half (plus lf4 lf4)
 Succ (Succ x)
 plus lf4 Zero
 lf4

Problem: synth_14
 half (plus lf4 (Succ x))
 half (plus x lf4)
 half (plus lf4 x)
 Succ (plus x Zero)
 plus x (Succ Zero)
 Succ x

Problem: synth_10
 match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end
 Succ (half (plus lf3 Zero))
 Succ (plus (half lf3) Zero)
 plus (half lf3) (Succ Zero)
 Succ match lf3 with | Succ n => Succ (half n) | Zero => Zero end
 Succ (half lf3)

Problem: synth_8
 half (half (plus lf4 (plus lf4 (Succ lf4))))
 half (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end lf4)
 plus (half (half lf4)) (half (plus lf4 (Succ Zero)))
 plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf4))
 plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end
 half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end)

Problem: synth_3
 half (half (plus lf1 (plus lf1 (Succ lf1))))
 half (plus match lf1 with | Succ n => Succ (half n) | Zero => Zero end lf1)
 plus (half (half lf1)) (half (plus lf1 (Succ Zero)))
 plus match lf1 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf1))
 plus (half (half lf1)) match lf1 with | Succ n => Succ (half n) | Zero => Zero end
 half (plus lf1 match lf1 with | Succ n => Succ (half n) | Zero => Zero end)

Problem: synth_12
 plus (plus lf2 Zero) Zero
 plus (half lf2) match lf2 with | Succ n => Succ (half n) | Zero => Zero end
 half (plus lf2 (Succ lf2))
 half (plus lf2 lf2)
 plus lf2 Zero
 lf2

Problem: synth_5
 plus (plus x (Succ Zero)) (Succ Zero)
 Succ (Succ (plus x (half (half x))))
 Succ (Succ (plus x Zero))
 plus x (Succ (Succ Zero))
 Succ (plus x (Succ Zero))
 Succ (Succ x)

Problem: synth_2
 match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end
 Succ (half (plus lf5 lf5))
 plus (plus lf5 (Succ Zero)) Zero
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ lf5

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 77 seconds
Lemmas:
Lemma candidate_1: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x)).
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1   (plus (half lf1) match lf1 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (half (plus lf1 (Succ lf1))).
Lemma candidate_5: forall (lf1 : natural), @eq natural lf1 (half (plus lf1 lf1)).
Lemma candidate_6: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_7: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_8: forall (lf5 : natural), @eq natural (Succ lf5)   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_9: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (half (plus lf5 lf5))).
Lemma candidate_10: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_11: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_12: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_13: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_14: forall (lf1 : natural), @eq natural lf1 (Succ (half (half (plus lf1 (plus lf1 (Succ lf1)))))).
Lemma candidate_15: forall (lf1 : natural), @eq natural lf1   (Succ      (half (plus match lf1 with | Succ n => Succ (half n) | Zero => Zero end lf1))).
Lemma candidate_16: forall (lf1 : natural), @eq natural lf1 (Succ (plus (half (half lf1)) (half (plus lf1 (Succ Zero))))).
Lemma candidate_17: forall (lf1 : natural), @eq natural lf1   (Succ      (plus match lf1 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf1)))).
Lemma candidate_18: forall (lf1 : natural), @eq natural lf1   (Succ      (plus (half (half lf1)) match lf1 with | Succ n => Succ (half n) | Zero => Zero end)).
Lemma candidate_19: forall (lf1 : natural), @eq natural lf1   (Succ      (half (plus lf1 match lf1 with | Succ n => Succ (half n) | Zero => Zero end))).
Lemma candidate_20: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_21: forall (lf1 : natural), @eq natural lf1   (plus (half lf1) match lf1 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_22: forall (lf1 : natural), @eq natural lf1 (half (plus lf1 (Succ lf1))).
Lemma candidate_23: forall (lf1 : natural), @eq natural lf1 (half (plus lf1 lf1)).
Lemma candidate_24: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_25: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_26: forall (x : natural), @eq natural (Succ x) (Succ (half (plus x x))).
Lemma candidate_27: forall (x : natural), @eq natural (Succ x) (plus (plus x (Succ Zero)) Zero).
Lemma candidate_28: forall (x : natural), @eq natural (Succ x) (Succ (plus x (half (half x)))).
Lemma candidate_29: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_30: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_31: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_32: forall (x : natural), @eq natural (Succ (Succ x)) (plus (plus x (Succ Zero)) (Succ Zero)).
Lemma candidate_33: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x (half (half x))))).
Lemma candidate_34: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x Zero))).
Lemma candidate_35: forall (x : natural), @eq natural (Succ (Succ x)) (plus x (Succ (Succ Zero))).
Lemma candidate_36: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (plus x (Succ Zero))).
Lemma candidate_37: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ x)).
Lemma candidate_38: forall (lf4 : natural), @eq natural (plus (plus lf4 Zero) Zero) lf4.
Lemma candidate_39: forall (lf4 : natural), @eq natural   (plus (half lf4) match lf4 with | Succ n => Succ (half n) | Zero => Zero end)   lf4.
Lemma candidate_40: forall (lf4 : natural), @eq natural (half (plus lf4 (Succ lf4))) lf4.
Lemma candidate_41: forall (lf4 : natural), @eq natural (half (plus lf4 lf4)) lf4.
Lemma candidate_42: forall (lf4 : natural), @eq natural (plus lf4 Zero) lf4.
Lemma candidate_43: forall (lf4 : natural), @eq natural (lf4) lf4.
Lemma candidate_44: forall (lf2 : natural), @eq natural (Succ lf2)   (match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_45: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 lf2))).
Lemma candidate_46: forall (lf2 : natural), @eq natural (Succ lf2) (plus (plus lf2 (Succ Zero)) Zero).
Lemma candidate_47: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_48: forall (lf2 : natural), @eq natural (Succ lf2) (plus lf2 (Succ Zero)).
Lemma candidate_49: forall (lf2 : natural), @eq natural (Succ lf2) (Succ lf2).
Lemma candidate_50: forall (lf4 : natural), @eq natural (Succ (half (half (plus lf4 (plus lf4 (Succ lf4)))))) lf4.
Lemma candidate_51: forall (lf4 : natural), @eq natural   (Succ      (half (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end lf4)))   lf4.
Lemma candidate_52: forall (lf4 : natural), @eq natural (Succ (plus (half (half lf4)) (half (plus lf4 (Succ Zero))))) lf4.
Lemma candidate_53: forall (lf4 : natural), @eq natural   (Succ      (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf4))))   lf4.
Lemma candidate_54: forall (lf4 : natural), @eq natural   (Succ      (plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end))   lf4.
Lemma candidate_55: forall (lf4 : natural), @eq natural   (Succ      (half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))   lf4.
Lemma candidate_56: forall (lf4 : natural), @eq natural (plus (plus lf4 Zero) Zero) lf4.
Lemma candidate_57: forall (lf4 : natural), @eq natural   (plus (half lf4) match lf4 with | Succ n => Succ (half n) | Zero => Zero end)   lf4.
Lemma candidate_58: forall (lf4 : natural), @eq natural (half (plus lf4 (Succ lf4))) lf4.
Lemma candidate_59: forall (lf4 : natural), @eq natural (half (plus lf4 lf4)) lf4.
Lemma candidate_60: forall (lf4 : natural), @eq natural (plus lf4 Zero) lf4.
Lemma candidate_61: forall (lf4 : natural), @eq natural (lf4) lf4.
Lemma candidate_62: forall (lf3 : natural), @eq natural (half lf3)   (plus match lf3 with | Succ n => Succ (half n) | Zero => Zero end Zero).
Lemma candidate_63: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 (Succ Zero))).
Lemma candidate_64: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 Zero)).
Lemma candidate_65: forall (lf3 : natural), @eq natural (half lf3) (plus (half lf3) Zero).
Lemma candidate_66: forall (lf3 : natural), @eq natural (half lf3)   (match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_67: forall (lf3 : natural), @eq natural (half lf3) (half lf3).
Lemma candidate_68: forall (lf3 : natural), @eq natural (Succ (half lf3))   (match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_69: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_70: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_71: forall (lf3 : natural), @eq natural (Succ (half lf3)) (plus (half lf3) (Succ Zero)).
Lemma candidate_72: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_73: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half lf3)).
Lemma candidate_74: forall (lf5 : natural), @eq natural   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end)   (Succ lf5).
Lemma candidate_75: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 lf5))) (Succ lf5).
Lemma candidate_76: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_77: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_78: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_79: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_80: forall (lf2 : natural), @eq natural (Succ lf2)   (match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_81: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 lf2))).
Lemma candidate_82: forall (lf2 : natural), @eq natural (Succ lf2) (plus (plus lf2 (Succ Zero)) Zero).
Lemma candidate_83: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_84: forall (lf2 : natural), @eq natural (Succ lf2) (plus lf2 (Succ Zero)).
Lemma candidate_85: forall (lf2 : natural), @eq natural (Succ lf2) (Succ lf2).
Lemma candidate_86: forall (lf2 : natural), @eq natural (Succ lf2)   (match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_87: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 lf2))).
Lemma candidate_88: forall (lf2 : natural), @eq natural (Succ lf2) (plus (plus lf2 (Succ Zero)) Zero).
Lemma candidate_89: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_90: forall (lf2 : natural), @eq natural (Succ lf2) (plus lf2 (Succ Zero)).
Lemma candidate_91: forall (lf2 : natural), @eq natural (Succ lf2) (Succ lf2).
Lemma candidate_92: forall (lf5 : natural), @eq natural (Succ lf5)   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_93: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (half (plus lf5 lf5))).
Lemma candidate_94: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_95: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_96: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_97: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_98: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_99: forall (lf5 : natural), @eq natural   (Succ      (plus (half lf5) match lf5 with | Succ n => Succ (half n) | Zero => Zero end))   (Succ lf5).
Lemma candidate_100: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (Succ lf5)))) (Succ lf5).
Lemma candidate_101: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 lf5))) (Succ lf5).
Lemma candidate_102: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_103: forall (lf5 : natural), @eq natural (Succ (lf5)) (Succ lf5).
Lemma candidate_104: forall (lf5 : natural), @eq natural   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end)   (Succ lf5).
Lemma candidate_105: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 lf5))) (Succ lf5).
Lemma candidate_106: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_107: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_108: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_109: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_110: forall (lf3 : natural), @eq natural (Succ (half lf3))   (match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_111: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_112: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_113: forall (lf3 : natural), @eq natural (Succ (half lf3)) (plus (half lf3) (Succ Zero)).
Lemma candidate_114: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_115: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half lf3)).
Lemma candidate_116: forall (lf3 : natural), @eq natural (half lf3)   (plus match lf3 with | Succ n => Succ (half n) | Zero => Zero end Zero).
Lemma candidate_117: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 (Succ Zero))).
Lemma candidate_118: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 Zero)).
Lemma candidate_119: forall (lf3 : natural), @eq natural (half lf3) (plus (half lf3) Zero).
Lemma candidate_120: forall (lf3 : natural), @eq natural (half lf3)   (match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_121: forall (lf3 : natural), @eq natural (half lf3) (half lf3).
Lemma candidate_122: forall (lf3 : natural), @eq natural (Succ (half lf3))   (match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_123: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_124: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_125: forall (lf3 : natural), @eq natural (Succ (half lf3)) (plus (half lf3) (Succ Zero)).
Lemma candidate_126: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_127: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half lf3)).
Lemma candidate_128: forall (lf5 : natural), @eq natural (Succ lf5)   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_129: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (half (plus lf5 lf5))).
Lemma candidate_130: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_131: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_132: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_133: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_134: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus (plus lf2 Zero) Zero)).
Lemma candidate_135: forall (lf2 : natural), @eq natural (Succ lf2)   (Succ      (plus (half lf2) match lf2 with | Succ n => Succ (half n) | Zero => Zero end)).
Lemma candidate_136: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 (Succ lf2)))).
Lemma candidate_137: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 lf2))).
Lemma candidate_138: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_139: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (lf2)).
Lemma candidate_140: forall (x : natural), @eq natural (plus (plus x (Succ Zero)) (Succ Zero)) (Succ (Succ x)).
Lemma candidate_141: forall (x : natural), @eq natural (Succ (Succ (plus x (half (half x))))) (Succ (Succ x)).
Lemma candidate_142: forall (x : natural), @eq natural (Succ (Succ (plus x Zero))) (Succ (Succ x)).
Lemma candidate_143: forall (x : natural), @eq natural (plus x (Succ (Succ Zero))) (Succ (Succ x)).
Lemma candidate_144: forall (x : natural), @eq natural (Succ (plus x (Succ Zero))) (Succ (Succ x)).
Lemma candidate_145: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ x)).
Lemma candidate_146: forall (lf2 : natural), @eq natural (Succ lf2)   (match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_147: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 lf2))).
Lemma candidate_148: forall (lf2 : natural), @eq natural (Succ lf2) (plus (plus lf2 (Succ Zero)) Zero).
Lemma candidate_149: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_150: forall (lf2 : natural), @eq natural (Succ lf2) (plus lf2 (Succ Zero)).
Lemma candidate_151: forall (lf2 : natural), @eq natural (Succ lf2) (Succ lf2).
Lemma candidate_152: forall (x : natural), @eq natural (Succ x) (Succ (half (plus x x))).
Lemma candidate_153: forall (x : natural), @eq natural (Succ x) (plus (plus x (Succ Zero)) Zero).
Lemma candidate_154: forall (x : natural), @eq natural (Succ x) (Succ (plus x (half (half x)))).
Lemma candidate_155: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_156: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_157: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_158: forall (lf2 : natural), @eq natural (Succ lf2)   (match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_159: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 lf2))).
Lemma candidate_160: forall (lf2 : natural), @eq natural (Succ lf2) (plus (plus lf2 (Succ Zero)) Zero).
Lemma candidate_161: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_162: forall (lf2 : natural), @eq natural (Succ lf2) (plus lf2 (Succ Zero)).
Lemma candidate_163: forall (lf2 : natural), @eq natural (Succ lf2) (Succ lf2).
Lemma candidate_164: forall (x : natural), @eq natural (Succ (Succ x)) (plus (plus x (Succ Zero)) (Succ Zero)).
Lemma candidate_165: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x (half (half x))))).
Lemma candidate_166: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x Zero))).
Lemma candidate_167: forall (x : natural), @eq natural (Succ (Succ x)) (plus x (Succ (Succ Zero))).
Lemma candidate_168: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (plus x (Succ Zero))).
Lemma candidate_169: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ x)).
Lemma candidate_170: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ      (plus match lf3 with | Succ n => Succ (half n) | Zero => Zero end Zero)).
Lemma candidate_171: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 (Succ Zero)))).
Lemma candidate_172: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_173: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_174: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ (match lf3 with | Succ n => Succ (half n) | Zero => Zero end)).
Lemma candidate_175: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half lf3)).
Lemma candidate_176: forall (x : natural), @eq natural (Succ (Succ (half (plus x x)))) (Succ (Succ x)).
Lemma candidate_177: forall (x : natural), @eq natural (Succ (plus (plus x (Succ Zero)) Zero)) (Succ (Succ x)).
Lemma candidate_178: forall (x : natural), @eq natural (Succ (Succ (plus x (half (half x))))) (Succ (Succ x)).
Lemma candidate_179: forall (x : natural), @eq natural (Succ (Succ (plus x Zero))) (Succ (Succ x)).
Lemma candidate_180: forall (x : natural), @eq natural (Succ (plus x (Succ Zero))) (Succ (Succ x)).
Lemma candidate_181: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ x)).
Lemma candidate_182: forall (x : natural), @eq natural (plus (plus x (Succ Zero)) (Succ Zero)) (Succ (Succ x)).
Lemma candidate_183: forall (x : natural), @eq natural (Succ (Succ (plus x (half (half x))))) (Succ (Succ x)).
Lemma candidate_184: forall (x : natural), @eq natural (Succ (Succ (plus x Zero))) (Succ (Succ x)).
Lemma candidate_185: forall (x : natural), @eq natural (plus x (Succ (Succ Zero))) (Succ (Succ x)).
Lemma candidate_186: forall (x : natural), @eq natural (Succ (plus x (Succ Zero))) (Succ (Succ x)).
Lemma candidate_187: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ x)).
Lemma candidate_188: forall (lf3 : natural), @eq natural (Succ (half lf3))   (match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_189: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_190: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_191: forall (lf3 : natural), @eq natural (Succ (half lf3)) (plus (half lf3) (Succ Zero)).
Lemma candidate_192: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_193: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half lf3)).
Lemma candidate_194: forall (x : natural), @eq natural (Succ x) (Succ (half (plus x x))).
Lemma candidate_195: forall (x : natural), @eq natural (Succ x) (plus (plus x (Succ Zero)) Zero).
Lemma candidate_196: forall (x : natural), @eq natural (Succ x) (Succ (plus x (half (half x)))).
Lemma candidate_197: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_198: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_199: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_200: forall (lf3 : natural), @eq natural (half lf3)   (plus match lf3 with | Succ n => Succ (half n) | Zero => Zero end Zero).
Lemma candidate_201: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 (Succ Zero))).
Lemma candidate_202: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 Zero)).
Lemma candidate_203: forall (lf3 : natural), @eq natural (half lf3) (plus (half lf3) Zero).
Lemma candidate_204: forall (lf3 : natural), @eq natural (half lf3)   (match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_205: forall (lf3 : natural), @eq natural (half lf3) (half lf3).
Lemma candidate_206: forall (lf3 : natural), @eq natural (Succ (half lf3))   (match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_207: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_208: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_209: forall (lf3 : natural), @eq natural (Succ (half lf3)) (plus (half lf3) (Succ Zero)).
Lemma candidate_210: forall (lf3 : natural), @eq natural (Succ (half lf3))   (Succ match lf3 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_211: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half lf3)).
Lemma candidate_212: forall (x : natural), @eq natural (Succ (Succ x)) (plus (plus x (Succ Zero)) (Succ Zero)).
Lemma candidate_213: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x (half (half x))))).
Lemma candidate_214: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x Zero))).
Lemma candidate_215: forall (x : natural), @eq natural (Succ (Succ x)) (plus x (Succ (Succ Zero))).
Lemma candidate_216: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (plus x (Succ Zero))).
Lemma candidate_217: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ x)).
Lemma candidate_218: forall (lf4 : natural), @eq natural (Succ (half (half (plus lf4 (plus lf4 (Succ lf4)))))) lf4.
Lemma candidate_219: forall (lf4 : natural), @eq natural   (Succ      (half (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end lf4)))   lf4.
Lemma candidate_220: forall (lf4 : natural), @eq natural (Succ (plus (half (half lf4)) (half (plus lf4 (Succ Zero))))) lf4.
Lemma candidate_221: forall (lf4 : natural), @eq natural   (Succ      (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf4))))   lf4.
Lemma candidate_222: forall (lf4 : natural), @eq natural   (Succ      (plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end))   lf4.
Lemma candidate_223: forall (lf4 : natural), @eq natural   (Succ      (half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))   lf4.
Lemma candidate_224: forall (lf4 : natural), @eq natural (plus (plus lf4 Zero) Zero) lf4.
Lemma candidate_225: forall (lf4 : natural), @eq natural   (plus (half lf4) match lf4 with | Succ n => Succ (half n) | Zero => Zero end)   lf4.
Lemma candidate_226: forall (lf4 : natural), @eq natural (half (plus lf4 (Succ lf4))) lf4.
Lemma candidate_227: forall (lf4 : natural), @eq natural (half (plus lf4 lf4)) lf4.
Lemma candidate_228: forall (lf4 : natural), @eq natural (plus lf4 Zero) lf4.
Lemma candidate_229: forall (lf4 : natural), @eq natural (lf4) lf4.
Lemma candidate_230: forall (lf4 : natural), @eq natural   (Succ      (half         (plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (half lf4)))))))   lf4.
Lemma candidate_231: forall (lf4 : natural), @eq natural   (Succ      (half         (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus (half (half lf4)) (plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))))   lf4.
Lemma candidate_232: forall (lf4 : natural), @eq natural   (Succ      (half         (plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus (half (half lf4)) match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))))   lf4.
Lemma candidate_233: forall (lf4 : natural), @eq natural   (Succ      (half         (plus (half (half lf4)) (plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end match lf4 with | Succ n => Succ (half n) | Zero => Zero end)))))   lf4.
Lemma candidate_234: forall (lf4 : natural), @eq natural   (Succ      (half         (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (plus (half (half lf4)) (half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end))))))   lf4.
Lemma candidate_235: forall (lf4 : natural), @eq natural   (Succ      (half         (plus (half (half lf4)) (plus match lf4 with | Succ n => Succ (half n) | Zero => Zero end (half (plus lf4 match lf4 with | Succ n => Succ (half n) | Zero => Zero end))))))   lf4.
Lemma candidate_236: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (half (plus lf4 (Succ x))).
Lemma candidate_237: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (half (plus x lf4)).
Lemma candidate_238: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (half (plus lf4 x)).
Lemma candidate_239: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (Succ (plus x Zero)).
Lemma candidate_240: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (plus x (Succ Zero)).
Lemma candidate_241: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (Succ x).
Lemma candidate_242: forall (lf4 : natural) (x : natural), @eq natural (Succ (half (plus x lf4))) (half (plus lf4 (Succ lf4))).
Lemma candidate_243: forall (lf4 : natural) (x : natural), @eq natural (Succ (half (plus x lf4))) (Succ (plus x (Succ Zero))).
Lemma candidate_244: forall (lf4 : natural) (x : natural), @eq natural (Succ (half (plus x lf4))) (half (plus lf4 lf4)).
Lemma candidate_245: forall (lf4 : natural) (x : natural), @eq natural (Succ (half (plus x lf4))) (Succ (Succ x)).
Lemma candidate_246: forall (lf4 : natural) (x : natural), @eq natural (Succ (half (plus x lf4))) (plus lf4 Zero).
Lemma candidate_247: forall (lf4 : natural) (x : natural), @eq natural (Succ (half (plus x lf4))) (lf4).
Lemma candidate_248: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (Succ (Succ x))).
Lemma candidate_249: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (plus lf4 Zero)).
Lemma candidate_250: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 (plus x Zero)).
Lemma candidate_251: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (Succ (plus x (Succ x))).
Lemma candidate_252: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x lf4).
Lemma candidate_253: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 x).
Lemma candidate_254: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_255: forall (lf5 : natural), @eq natural   (Succ      (plus (half lf5) match lf5 with | Succ n => Succ (half n) | Zero => Zero end))   (Succ lf5).
Lemma candidate_256: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (Succ lf5)))) (Succ lf5).
Lemma candidate_257: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 lf5))) (Succ lf5).
Lemma candidate_258: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_259: forall (lf5 : natural), @eq natural (Succ (lf5)) (Succ lf5).
Lemma candidate_260: forall (lf5 : natural), @eq natural   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end)   (Succ lf5).
Lemma candidate_261: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 lf5))) (Succ lf5).
Lemma candidate_262: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_263: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_264: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_265: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_266: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (half (plus lf5 (Succ lf5)))))) (Succ lf5).
Lemma candidate_267: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (half (plus lf5 lf5))))) (Succ lf5).
Lemma candidate_268: forall (lf5 : natural), @eq natural (Succ (half (plus (plus lf5 Zero) lf5))) (Succ lf5).
Lemma candidate_269: forall (lf5 : natural), @eq natural (Succ (half (plus (plus lf5 lf5) Zero))) (Succ lf5).
Lemma candidate_270: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (plus lf5 Zero)))) (Succ lf5).
Lemma candidate_271: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 lf5))) (Succ lf5).
Lemma candidate_272: forall (x : natural), @eq natural (Succ (half (plus x (plus (plus x (Succ Zero)) (Succ Zero)))))   (plus (plus x (Succ Zero)) (Succ Zero)).
Lemma candidate_273: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ (plus x (half (half x))))))))   (Succ (Succ (plus x (half (half x))))).
Lemma candidate_274: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ (plus x Zero))))))   (Succ (Succ (plus x Zero))).
Lemma candidate_275: forall (x : natural), @eq natural (Succ (half (plus x (plus x (Succ (Succ Zero))))))   (plus x (Succ (Succ Zero))).
Lemma candidate_276: forall (x : natural), @eq natural (Succ (half (plus x (Succ (plus x (Succ Zero))))))   (Succ (plus x (Succ Zero))).
Lemma candidate_277: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x)).
Lemma candidate_278: forall (x : natural) (lf5 : natural), @eq natural (half (plus x (Succ lf5))) (half (plus lf5 lf5)).
Lemma candidate_279: forall (x : natural) (lf5 : natural), @eq natural (half (plus x (Succ lf5))) (Succ (plus x Zero)).
Lemma candidate_280: forall (x : natural) (lf5 : natural), @eq natural (half (plus x (Succ lf5))) (plus x (Succ Zero)).
Lemma candidate_281: forall (x : natural) (lf5 : natural), @eq natural (half (plus x (Succ lf5))) (plus lf5 Zero).
Lemma candidate_282: forall (x : natural) (lf5 : natural), @eq natural (half (plus x (Succ lf5))) (Succ x).
Lemma candidate_283: forall (x : natural) (lf5 : natural), @eq natural (half (plus x (Succ lf5))) (lf5).
Lemma candidate_284: forall (x : natural) (lf5 : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (plus x (Succ (Succ Zero))).
Lemma candidate_285: forall (x : natural) (lf5 : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ (plus x (Succ Zero))).
Lemma candidate_286: forall (x : natural) (lf5 : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ (plus lf5 Zero)).
Lemma candidate_287: forall (x : natural) (lf5 : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (plus lf5 (Succ Zero)).
Lemma candidate_288: forall (x : natural) (lf5 : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ (Succ x)).
Lemma candidate_289: forall (x : natural) (lf5 : natural), @eq natural (Succ (half (plus x (Succ lf5)))) (Succ lf5).
Lemma candidate_290: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (Succ (plus x (Succ x))).
Lemma candidate_291: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (Succ (plus lf5 x)).
Lemma candidate_292: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (Succ (plus x lf5)).
Lemma candidate_293: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (plus lf5 (Succ x)).
Lemma candidate_294: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (plus x (Succ lf5)).
Lemma candidate_295: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (plus lf5 lf5).
Lemma candidate_296: forall (lf5 : natural), @eq natural (Succ lf5)   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_297: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (half (plus lf5 lf5))).
Lemma candidate_298: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_299: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_300: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_301: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 318 seconds
Duplicates removed: 166
Filtered by Quickchick: 54
Filtered by script: 21
Remaining: 60

Lemmas: 
Lemma candidate_42: forall (lf4 : natural), @eq natural (plus lf4 Zero) lf4.
Lemma candidate_6: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_253: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 x).
Lemma candidate_30: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_29: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_38: forall (lf4 : natural), @eq natural (plus (plus lf4 Zero) Zero) lf4.
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_40: forall (lf4 : natural), @eq natural (half (plus lf4 (Succ lf4))) lf4.
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (half (plus lf1 (Succ lf1))).
Lemma candidate_78: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_77: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_65: forall (lf3 : natural), @eq natural (half lf3) (plus (half lf3) Zero).
Lemma candidate_64: forall (lf3 : natural), @eq natural (half lf3) (half (plus lf3 Zero)).
Lemma candidate_48: forall (lf2 : natural), @eq natural (Succ lf2) (plus lf2 (Succ Zero)).
Lemma candidate_47: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus lf2 Zero)).
Lemma candidate_12: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_11: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_250: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 (plus x Zero)).
Lemma candidate_249: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (plus lf4 Zero)).
Lemma candidate_293: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (plus lf5 (Succ x)).
Lemma candidate_292: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (Succ (plus x lf5)).
Lemma candidate_291: forall (x : natural) (lf5 : natural), @eq natural (plus x (Succ lf5)) (Succ (plus lf5 x)).
Lemma candidate_238: forall (lf4 : natural) (x : natural), @eq natural (half (plus x lf4)) (half (plus lf4 x)).
Lemma candidate_27: forall (x : natural), @eq natural (Succ x) (plus (plus x (Succ Zero)) Zero).
Lemma candidate_144: forall (x : natural), @eq natural (Succ (plus x (Succ Zero))) (Succ (Succ x)).
Lemma candidate_143: forall (x : natural), @eq natural (plus x (Succ (Succ Zero))) (Succ (Succ x)).
Lemma candidate_142: forall (x : natural), @eq natural (Succ (Succ (plus x Zero))) (Succ (Succ x)).
Lemma candidate_36: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (plus x (Succ Zero))).
Lemma candidate_35: forall (x : natural), @eq natural (Succ (Succ x)) (plus x (Succ (Succ Zero))).
Lemma candidate_34: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x Zero))).
Lemma candidate_134: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (plus (plus lf2 Zero) Zero)).
Lemma candidate_98: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_76: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_46: forall (lf2 : natural), @eq natural (Succ lf2) (plus (plus lf2 (Succ Zero)) Zero).
Lemma candidate_10: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_136: forall (lf2 : natural), @eq natural (Succ lf2) (Succ (half (plus lf2 (Succ lf2)))).
Lemma candidate_100: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (Succ lf5)))) (Succ lf5).
Lemma candidate_71: forall (lf3 : natural), @eq natural (Succ (half lf3)) (plus (half lf3) (Succ Zero)).
Lemma candidate_70: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (plus (half lf3) Zero)).
Lemma candidate_69: forall (lf3 : natural), @eq natural (Succ (half lf3)) (Succ (half (plus lf3 Zero))).
Lemma candidate_270: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (plus lf5 Zero)))) (Succ lf5).
Lemma candidate_269: forall (lf5 : natural), @eq natural (Succ (half (plus (plus lf5 lf5) Zero))) (Succ lf5).
Lemma candidate_268: forall (lf5 : natural), @eq natural (Succ (half (plus (plus lf5 Zero) lf5))) (Succ lf5).
Lemma candidate_33: forall (x : natural), @eq natural (Succ (Succ x)) (Succ (Succ (plus x (half (half x))))).
Lemma candidate_177: forall (x : natural), @eq natural (Succ (plus (plus x (Succ Zero)) Zero)) (Succ (Succ x)).
Lemma candidate_140: forall (x : natural), @eq natural (plus (plus x (Succ Zero)) (Succ Zero)) (Succ (Succ x)).
Lemma candidate_32: forall (x : natural), @eq natural (Succ (Succ x)) (plus (plus x (Succ Zero)) (Succ Zero)).
Lemma candidate_267: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (half (plus lf5 lf5))))) (Succ lf5).
Lemma candidate_266: forall (lf5 : natural), @eq natural (Succ (half (plus lf5 (half (plus lf5 (Succ lf5)))))) (Succ lf5).
Lemma candidate_276: forall (x : natural), @eq natural (Succ (half (plus x (Succ (plus x (Succ Zero))))))   (Succ (plus x (Succ Zero))).
Lemma candidate_275: forall (x : natural), @eq natural (Succ (half (plus x (plus x (Succ (Succ Zero))))))   (plus x (Succ (Succ Zero))).
Lemma candidate_274: forall (x : natural), @eq natural (Succ (half (plus x (Succ (Succ (plus x Zero))))))   (Succ (Succ (plus x Zero))).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1   (plus (half lf1) match lf1 with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_39: forall (lf4 : natural), @eq natural   (plus (half lf4) match lf4 with | Succ n => Succ (half n) | Zero => Zero end)   lf4.
Lemma candidate_44: forall (lf2 : natural), @eq natural (Succ lf2)   (match plus lf2 (Succ lf2) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_8: forall (lf5 : natural), @eq natural (Succ lf5)   (match plus lf5 (Succ lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_68: forall (lf3 : natural), @eq natural (Succ (half lf3))   (match plus lf3 (Succ Zero) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_135: forall (lf2 : natural), @eq natural (Succ lf2)   (Succ      (plus (half lf2) match lf2 with | Succ n => Succ (half n) | Zero => Zero end)).
Lemma candidate_272: forall (x : natural), @eq natural (Succ (half (plus x (plus (plus x (Succ Zero)) (Succ Zero)))))   (plus (plus x (Succ Zero)) (Succ Zero)).
Lemma candidate_99: forall (lf5 : natural), @eq natural   (Succ      (plus (half lf5) match lf5 with | Succ n => Succ (half n) | Zero => Zero end))   (Succ lf5).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal19_theorem0_40_lem2

Number of Lemmas: 451
Number of Lemmas (after duplicates removed): 131
Number of Lemmas (after QuickChick used to filter): 131
* Number of Candidate Lemmas: 117

Time until ranking: 1645
Time to complete: 5271

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 5

Lemma candidate_43: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_319: forall (lf2 : lst), @eq lst lf2 (rev (rev (lf2))).
Lemma candidate_187: forall (lf4 : lst), @eq lst (lf4) (rev (rev lf4)).
Lemma candidate_175: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).

Category 3 (provable):
Count = 10

Lemma candidate_60: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_179: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_71: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_65: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_23: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_58: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_333: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_9: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).

Category 3 (not provable):
Count = 102

Lemma candidate_59: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_46: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_48: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_47: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_42: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_178: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_166: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (rev lf2)))).
Lemma candidate_70: forall (lf3 : lst), @eq lst (rev (rev (rev lf3))) (rev lf3).
Lemma candidate_64: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_22: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_186: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_180: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_174: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_167: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend lf2 Nil))).
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend (rev lf3) Nil) (rev lf3).
Lemma candidate_66: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_57: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_56: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_24: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_349: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).
Lemma candidate_343: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_335: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_332: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_55: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_39: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_38: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_397: forall (y : lst) (x : lst), @eq lst (lfappend (x) y) (rev (rev (lfappend x y))).
Lemma candidate_336: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_334: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_199: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 y))).
Lemma candidate_45: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_44: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_40: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_11: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_8: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_315: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend (rev (rev lf2)) Nil))).
Lemma candidate_314: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (lfappend (rev lf2) Nil)))).
Lemma candidate_183: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) (rev (rev lf4)).
Lemma candidate_182: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) (rev (rev lf4)).
Lemma candidate_171: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_170: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_330: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_12: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_10: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_316: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend (lfappend lf2 Nil) Nil))).
Lemma candidate_184: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) (rev (rev lf4)).
Lemma candidate_177: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_176: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_172: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_165: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (lfappend (rev lf2) Nil) Nil)).
Lemma candidate_164: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev (lfappend lf2 Nil)) Nil)).
Lemma candidate_69: forall (lf3 : lst), @eq lst (lfappend (lfappend (rev lf3) Nil) Nil) (rev lf3).
Lemma candidate_68: forall (lf3 : lst), @eq lst (lfappend (rev (lfappend lf3 Nil)) Nil) (rev lf3).
Lemma candidate_63: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_62: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_21: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_20: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_198: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev lf5))).
Lemma candidate_28: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_347: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (rev (rev (lfappend x y))).
Lemma candidate_341: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_328: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_53: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_348: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (rev (rev (lfappend x y))).
Lemma candidate_346: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (rev (rev (lfappend x y))).
Lemma candidate_345: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_342: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_340: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_339: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_329: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_54: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_52: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_51: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_356: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (rev (rev lf5)) y))).
Lemma candidate_232: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) y))).
Lemma candidate_196: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (rev (rev y))))).
Lemma candidate_29: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_270: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (lfappend (rev y) (rev x))).
Lemma candidate_358: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (lfappend lf5 y) Nil))).
Lemma candidate_357: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (lfappend lf5 Nil) y))).
Lemma candidate_197: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (lfappend y Nil)))).
Lemma candidate_30: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_327: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_326: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_406: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (rev (lfappend (rev y) lf6)))).
Lemma candidate_26: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_268: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x (rev (rev y))))).
Lemma candidate_195: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (lfappend (rev lf5) Nil))).
Lemma candidate_194: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev (lfappend lf5 Nil)))).
Lemma candidate_27: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_393: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev x)) Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_392: forall (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend (rev x) Nil)) y) (rev (rev (lfappend x y))).
Lemma candidate_269: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x (lfappend y Nil)))).
Lemma candidate_230: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) (rev (rev y))))).
Lemma candidate_394: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend x Nil) Nil) y)   (rev (rev (lfappend x y))).
Lemma candidate_231: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (lfappend (rev lf6) (lfappend y Nil)))).
Lemma candidate_267: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y)   (rev (lfappend (rev y) (lfappend (rev x) Nil))).
Lemma candidate_266: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y)   (rev (lfappend (rev y) (rev (lfappend x Nil)))).
Lemma candidate_404: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (rev (lfappend (rev y) (rev (rev lf6)))))).
Lemma candidate_405: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (rev (lfappend (rev y) (lfappend lf6 Nil))))).
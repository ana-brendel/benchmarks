LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal5_theorem0_46_lem

Number of Lemmas: 641
Number of Lemmas (after duplicates removed): 169
Number of Lemmas (after QuickChick used to filter): 114
* Number of Candidate Lemmas: 81

Time until ranking: 1372
Time to complete: 4544

Stuck state true independent of hypotheses: true

Category 1:
Count = 1

Lemma candidate_2: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).

Category 2:
Count = 8

Lemma candidate_21: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_33: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_124: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len x)).
Lemma candidate_31: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_46: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_65: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_3: forall (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma candidate_252: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend lf7 x)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).

Category 3 (provable):
Count = 9

Lemma candidate_131: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_8: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_335: forall (lf6 : lst), @eq natural (Succ (len (lfappend lf6 Nil))) (Succ (len lf6)).
Lemma candidate_137: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_249: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len x)) (Succ lf4).
Lemma candidate_92: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_45: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_98: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_96: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).

Category 3 (not provable):
Count = 63

Lemma candidate_39: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_41: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_40: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_277: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_278: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_130: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_7: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_276: forall (x : lst), @eq natural (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_275: forall (x : lst), @eq natural (len x) (len (rev (lfappend x Nil))).
Lemma candidate_144: forall (x : lst), @eq natural (len (rev x)) (len (lfappend x Nil)).
Lemma candidate_129: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend (rev lf6) Nil)).
Lemma candidate_128: forall (lf6 : lst), @eq natural (len lf6) (len (rev (lfappend lf6 Nil))).
Lemma candidate_6: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_5: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_38: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_37: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_142: forall (x : lst), @eq natural (len (rev x)) (len (lfappend (rev x) Nil)).
Lemma candidate_141: forall (x : lst), @eq natural (len (rev x)) (len (rev (lfappend x Nil))).
Lemma candidate_334: forall (lf6 : lst), @eq natural (Succ (len (rev (rev lf6)))) (Succ (len lf6)).
Lemma candidate_136: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev (rev lf6)))).
Lemma candidate_13: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_25: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_14: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_12: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_371: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len (rev x))).
Lemma candidate_150: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (lfappend x Nil))).
Lemma candidate_34: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_26: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_19: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_18: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_93: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_27: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_32: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_333: forall (lf6 : lst), @eq natural (len (lfappend (rev lf6) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_135: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_369: forall (x : lst), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ (len (rev x))).
Lemma candidate_148: forall (x : lst), @eq natural (Succ (len (rev x))) (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_91: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_100: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev (rev x)))).
Lemma candidate_332: forall (lf6 : lst), @eq natural (len (lfappend (rev (rev lf6)) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_134: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev (rev lf6)) (Cons Zero Nil))).
Lemma candidate_248: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (rev x))) (Succ lf4).
Lemma candidate_368: forall (x : lst), @eq natural (len (lfappend (rev (rev x)) (Cons Zero Nil)))   (Succ (len (rev x))).
Lemma candidate_147: forall (x : lst), @eq natural (Succ (len (rev x)))   (len (lfappend (rev (rev x)) (Cons Zero Nil))).
Lemma candidate_122: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (Succ (len (lfappend x Nil))).
Lemma candidate_64: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_246: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (rev (rev x)))) (Succ lf4).
Lemma candidate_108: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_106: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_89: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_247: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (lfappend x Nil))) (Succ lf4).
Lemma candidate_109: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_107: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_105: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_90: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_120: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_97: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_95: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_245: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ lf4).
Lemma candidate_251: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend x lf7)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_258: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_257: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
File Information
- File name: goal5
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal5_theorem0_46_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal5_theorem0_46_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : lst, @eq natural (len (rev x0)) (len x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x)))

* Hypothesis:
IHx : @eq natural (len (rev x)) (len x)
x : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
lfappend (rev x) (Cons n Nil) : lst
len (rev x) : natural
Succ (len (rev x)) : natural
x : lst
len x : natural
lst : Set
Cons n Nil : lst
@eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))) : Prop
@eq natural (len (rev x)) (len x) : Prop
natural : Set
n : natural
rev x : lst
Nil : lst
len (lfappend (rev x) (Cons n Nil)) : natural

* Functions:
rev  : forall _ : lst, lst
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
Succ  : forall _ : natural, natural
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = Succ (len (rev x))
lf7 : lst = Nil
lf1 : natural = len (lfappend (rev x) (Cons n Nil))
lf4 : natural = len (rev x)
lf5 : lst = Cons n Nil
lf2 : lst = lfappend (rev x) (Cons n Nil)
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf5)) lf3.
Lemma conj20: forall (lf5 : lst) (x : lst) (lf3 : natural), @eq natural (len (lfappend (rev x) lf5)) lf3.
Lemma conj23: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj24: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) lf3.
Lemma conj55: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj56: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) lf3.
Lemma conj65: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 (Succ lf4).
Lemma conj73: forall (lf6 : lst) (lf1 : natural), @eq natural lf1 (Succ (len lf6)).
Lemma conj74: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len (rev x))).
Lemma conj81: forall (lf2 : lst) (lf4 : natural), @eq natural (len lf2) (Succ lf4).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : natural), @eq natural (len (lfappend lf6 lf5)) (Succ lf4).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : natural), @eq natural (len (lfappend (rev x) lf5)) (Succ lf4).
Lemma conj87: forall (lf6 : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf4).
Lemma conj88: forall (x : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma conj89: forall (lf6 : lst) (lf2 : lst), @eq natural (len lf2) (Succ (len lf6)).
Lemma conj90: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len (rev x))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma conj95: forall (lf6 : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma conj119: forall (lf6 : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf4).
Lemma conj120: forall (x : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma conj127: forall (lf6 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma conj128: forall (x : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))).


<---VALIDITY CHECKS--->
Time elapsed: 49 seconds
Valid:
Lemma conj128: forall (x : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))).
Lemma conj127: forall (lf6 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).

Invalid:
Lemma conj120: forall (x : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma conj119: forall (lf6 : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf4).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma conj95: forall (lf6 : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma conj90: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len (rev x))).
Lemma conj89: forall (lf6 : lst) (lf2 : lst), @eq natural (len lf2) (Succ (len lf6)).
Lemma conj88: forall (x : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma conj87: forall (lf6 : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf4).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : natural), @eq natural (len (lfappend (rev x) lf5)) (Succ lf4).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : natural), @eq natural (len (lfappend lf6 lf5)) (Succ lf4).
Lemma conj81: forall (lf2 : lst) (lf4 : natural), @eq natural (len lf2) (Succ lf4).
Lemma conj74: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len (rev x))).
Lemma conj73: forall (lf6 : lst) (lf1 : natural), @eq natural lf1 (Succ (len lf6)).
Lemma conj65: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 (Succ lf4).
Lemma conj56: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) lf3.
Lemma conj55: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj24: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) lf3.
Lemma conj23: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj20: forall (lf5 : lst) (x : lst) (lf3 : natural), @eq natural (len (lfappend (rev x) lf5)) lf3.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf5)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 73 seconds
Generalizations:
Lemma conj120: forall (x : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma conj120_imp: forall (x : lst) (lf4 : natural) (n : natural), forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma conj119: forall (lf6 : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf4).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma conj95: forall (lf6 : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma conj90: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len (rev x))).
Lemma conj89: forall (lf6 : lst) (lf2 : lst), @eq natural (len lf2) (Succ (len lf6)).
Lemma conj88: forall (x : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma conj88_imp: forall (x : lst) (lf4 : natural) (lf7 : lst) (n : natural), forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma conj87: forall (lf6 : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf4).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : natural), @eq natural (len (lfappend (rev x) lf5)) (Succ lf4).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : natural), @eq natural (len (lfappend lf6 lf5)) (Succ lf4).
Lemma conj81: forall (lf2 : lst) (lf4 : natural), @eq natural (len lf2) (Succ lf4).
Lemma conj74: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len (rev x))).
Lemma conj73: forall (lf6 : lst) (lf1 : natural), @eq natural lf1 (Succ (len lf6)).
Lemma conj65: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 (Succ lf4).
Lemma conj56: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) lf3.
Lemma conj55: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj24: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) lf3.
Lemma conj23: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj20: forall (lf5 : lst) (x : lst) (lf3 : natural), @eq natural (len (lfappend (rev x) lf5)) lf3.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf5)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 114 seconds
Valid:
Lemma conj120_imp: forall (x : lst) (lf4 : natural) (n : natural), forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf5)) lf3.
Lemma conj20: forall (lf5 : lst) (x : lst) (lf3 : natural), @eq natural (len (lfappend (rev x) lf5)) lf3.
Lemma conj23: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj24: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) lf3.
Lemma conj55: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj56: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) lf3.
Lemma conj65: forall (lf4 : natural) (lf1 : natural), @eq natural lf1 (Succ lf4).
Lemma conj73: forall (lf6 : lst) (lf1 : natural), @eq natural lf1 (Succ (len lf6)).
Lemma conj74: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len (rev x))).
Lemma conj81: forall (lf2 : lst) (lf4 : natural), @eq natural (len lf2) (Succ lf4).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : natural), @eq natural (len (lfappend lf6 lf5)) (Succ lf4).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : natural), @eq natural (len (lfappend (rev x) lf5)) (Succ lf4).
Lemma conj87: forall (lf6 : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf4).
Lemma conj88_imp: forall (x : lst) (lf4 : natural) (lf7 : lst) (n : natural), forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma conj88: forall (x : lst) (lf4 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma conj89: forall (lf6 : lst) (lf2 : lst), @eq natural (len lf2) (Succ (len lf6)).
Lemma conj90: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len (rev x))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma conj95: forall (lf6 : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma conj119: forall (lf6 : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf4).
Lemma conj120: forall (x : lst) (lf4 : natural) (n : natural), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).


<---CREATE SKETCHES--->
Time elapsed: 114 seconds
Sketches:
Sketch conj17_sketch0 : @eq natural (##hole##) lf3
Sketch conj17_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj19_sketch0 : @eq natural (len (##hole##)) lf3
Sketch conj19_sketch1 : @eq natural (##hole##) lf3
Sketch conj19_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (len (lfappend lf6 lf5)) (##hole##)
Sketch conj20_sketch0 : @eq natural (len (##hole##)) lf3
Sketch conj20_sketch1 : @eq natural (##hole##) lf3
Sketch conj20_sketch2 : @eq natural (len (lfappend (##hole##) lf5)) lf3
Sketch conj20_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj20_term_sketch1 : @eq natural (len (lfappend (rev x) lf5)) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj23_sketch0 : @eq natural (##hole##) lf3
Sketch conj23_sketch1 : @eq natural (len (##hole##)) lf3
Sketch conj23_sketch2 : @eq natural (len (lfappend lf6 (##hole##))) lf3
Sketch conj23_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj24_sketch0 : @eq natural (##hole##) lf3
Sketch conj24_sketch1 : @eq natural (len (##hole##)) lf3
Sketch conj24_sketch2 : @eq natural (len (lfappend (rev x) (##hole##))) lf3
Sketch conj24_sketch3 : @eq natural (len (lfappend (##hole##) (Cons n lf7))) lf3
Sketch conj24_term_sketch0 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj24_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj24_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj55_sketch0 : @eq natural (##hole##) lf3
Sketch conj55_sketch1 : @eq natural (len (##hole##)) lf3
Sketch conj55_sketch2 : @eq natural (len (lfappend lf6 (##hole##))) lf3
Sketch conj55_sketch3 : @eq natural (len (lfappend lf6 (Cons n (##hole##)))) lf3
Sketch conj55_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj55_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj56_sketch0 : @eq natural (len (##hole##)) lf3
Sketch conj56_sketch1 : @eq natural (len (lfappend (rev x) (##hole##))) lf3
Sketch conj56_sketch2 : @eq natural (len (lfappend (rev x) (Cons n (##hole##)))) lf3
Sketch conj56_sketch3 : @eq natural (len (lfappend (##hole##) (Cons n Nil))) lf3
Sketch conj56_sketch4 : @eq natural (##hole##) lf3
Sketch conj56_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj56_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj56_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj56_term_sketch4 : @eq natural (len (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj65_sketch0 : @eq natural lf1 (##hole##)
Sketch conj65_term_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj73_sketch0 : @eq natural lf1 (Succ (##hole##))
Sketch conj73_sketch1 : @eq natural lf1 (##hole##)
Sketch conj73_term_sketch0 : @eq natural (len lf6) (##hole##)
Sketch conj73_term_sketch1 : @eq natural (Succ (len lf6)) (##hole##)
Sketch conj74_sketch0 : @eq natural lf1 (Succ (##hole##))
Sketch conj74_sketch1 : @eq natural lf1 (##hole##)
Sketch conj74_sketch2 : @eq natural lf1 (Succ (len (##hole##)))
Sketch conj74_term_sketch0 : @eq natural (len (rev x)) (##hole##)
Sketch conj74_term_sketch1 : @eq natural (Succ (len (rev x))) (##hole##)
Sketch conj74_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj81_sketch0 : @eq natural (##hole##) (Succ lf4)
Sketch conj81_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj81_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj81_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj83_sketch0 : @eq natural (len (##hole##)) (Succ lf4)
Sketch conj83_sketch1 : @eq natural (len (lfappend lf6 lf5)) (##hole##)
Sketch conj83_sketch2 : @eq natural (##hole##) (Succ lf4)
Sketch conj83_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj83_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj83_term_sketch2 : @eq natural (len (lfappend lf6 lf5)) (##hole##)
Sketch conj84_sketch0 : @eq natural (len (##hole##)) (Succ lf4)
Sketch conj84_sketch1 : @eq natural (len (lfappend (rev x) lf5)) (##hole##)
Sketch conj84_sketch2 : @eq natural (##hole##) (Succ lf4)
Sketch conj84_sketch3 : @eq natural (len (lfappend (##hole##) lf5)) (Succ lf4)
Sketch conj84_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj84_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj84_term_sketch2 : @eq natural (len (lfappend (rev x) lf5)) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj87_sketch0 : @eq natural (##hole##) (Succ lf4)
Sketch conj87_sketch1 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj87_sketch2 : @eq natural (len (##hole##)) (Succ lf4)
Sketch conj87_sketch3 : @eq natural (len (lfappend lf6 (##hole##))) (Succ lf4)
Sketch conj87_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj87_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj87_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj88_imp_sketch0 : forall _ : @eq natural lf4 (len x), @eq natural (##hole##) (Succ lf4)
Sketch conj88_imp_sketch1 : forall _ : @eq natural lf4 (##hole##),
@eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4)
Sketch conj88_imp_sketch2 : forall _ : @eq natural lf4 (len x), @eq natural (len (##hole##)) (Succ lf4)
Sketch conj88_imp_sketch3 : forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj88_imp_sketch4 : forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (rev x) (##hole##))) (Succ lf4)
Sketch conj88_imp_sketch5 : forall _ : @eq natural lf4 (len x),
@eq natural (len (lfappend (##hole##) (Cons n lf7))) (Succ lf4)
Sketch conj88_imp_term_sketch0 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj88_imp_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj88_imp_term_sketch2 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj88_imp_term_sketch3 : @eq natural (Succ lf4) (##hole##)
Sketch conj88_imp_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj88_imp_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj88_sketch0 : @eq natural (##hole##) (Succ lf4)
Sketch conj88_sketch1 : @eq natural (len (##hole##)) (Succ lf4)
Sketch conj88_sketch2 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj88_sketch3 : @eq natural (len (lfappend (rev x) (##hole##))) (Succ lf4)
Sketch conj88_sketch4 : @eq natural (len (lfappend (##hole##) (Cons n lf7))) (Succ lf4)
Sketch conj88_term_sketch0 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj88_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj88_term_sketch2 : @eq natural (Succ lf4) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj88_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj89_sketch0 : @eq natural (len lf2) (Succ (##hole##))
Sketch conj89_sketch1 : @eq natural (##hole##) (Succ (len lf6))
Sketch conj89_sketch2 : @eq natural (len lf2) (##hole##)
Sketch conj89_term_sketch0 : @eq natural (len lf6) (##hole##)
Sketch conj89_term_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj89_term_sketch2 : @eq natural (Succ (len lf6)) (##hole##)
Sketch conj90_sketch0 : @eq natural (len lf2) (Succ (##hole##))
Sketch conj90_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj90_sketch2 : @eq natural (##hole##) (Succ (len (rev x)))
Sketch conj90_sketch3 : @eq natural (len lf2) (Succ (len (##hole##)))
Sketch conj90_term_sketch0 : @eq natural (len (rev x)) (##hole##)
Sketch conj90_term_sketch1 : @eq natural (Succ (len (rev x))) (##hole##)
Sketch conj90_term_sketch2 : @eq natural (len lf2) (##hole##)
Sketch conj90_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj91_sketch0 : @eq natural (len (##hole##)) (Succ (len lf6))
Sketch conj91_sketch1 : @eq natural (len (lfappend lf6 lf5)) (Succ (##hole##))
Sketch conj91_sketch2 : @eq natural (len (lfappend lf6 lf5)) (##hole##)
Sketch conj91_sketch3 : @eq natural (##hole##) (Succ (len lf6))
Sketch conj91_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj91_term_sketch1 : @eq natural (len lf6) (##hole##)
Sketch conj91_term_sketch2 : @eq natural (Succ (len lf6)) (##hole##)
Sketch conj91_term_sketch3 : @eq natural (len (lfappend lf6 lf5)) (##hole##)
Sketch conj92_sketch0 : @eq natural (len (lfappend (rev x) lf5)) (Succ (##hole##))
Sketch conj92_sketch1 : @eq natural (len (lfappend (rev x) lf5)) (##hole##)
Sketch conj92_sketch2 : @eq natural (len (##hole##)) (Succ (len (rev x)))
Sketch conj92_sketch3 : @eq natural (##hole##) (Succ (len (rev x)))
Sketch conj92_sketch4 : @eq natural (len (lfappend (##hole##) lf5)) (Succ (len (##hole##)))
Sketch conj92_term_sketch0 : @eq natural (len (rev x)) (##hole##)
Sketch conj92_term_sketch1 : @eq natural (Succ (len (rev x))) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj92_term_sketch3 : @eq natural (len (lfappend (rev x) lf5)) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj95_sketch0 : @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (##hole##))
Sketch conj95_sketch1 : @eq natural (##hole##) (Succ (len lf6))
Sketch conj95_sketch2 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_sketch3 : @eq natural (len (##hole##)) (Succ (len lf6))
Sketch conj95_sketch4 : @eq natural (len (lfappend lf6 (##hole##))) (Succ (len lf6))
Sketch conj95_term_sketch0 : @eq natural (len lf6) (##hole##)
Sketch conj95_term_sketch1 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_term_sketch2 : @eq natural (Succ (len lf6)) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj96_sketch0 : @eq natural (##hole##) (Succ (len (rev x)))
Sketch conj96_sketch1 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (##hole##))
Sketch conj96_sketch2 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj96_sketch3 : @eq natural (len (##hole##)) (Succ (len (rev x)))
Sketch conj96_sketch4 : @eq natural (len (lfappend (##hole##) (Cons n lf7))) (Succ (len (##hole##)))
Sketch conj96_sketch5 : @eq natural (len (lfappend (rev x) (##hole##))) (Succ (len (rev x)))
Sketch conj96_term_sketch0 : @eq natural (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj96_term_sketch1 : @eq natural (len (rev x)) (##hole##)
Sketch conj96_term_sketch2 : @eq natural (Succ (len (rev x))) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (Cons n lf7) (##hole##)
Sketch conj119_sketch0 : @eq natural (##hole##) (Succ lf4)
Sketch conj119_sketch1 : @eq natural (len (##hole##)) (Succ lf4)
Sketch conj119_sketch2 : @eq natural (len (lfappend lf6 (##hole##))) (Succ lf4)
Sketch conj119_sketch3 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj119_sketch4 : @eq natural (len (lfappend lf6 (Cons n (##hole##)))) (Succ lf4)
Sketch conj119_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj119_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj119_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj119_term_sketch3 : @eq natural (Succ lf4) (##hole##)
Sketch conj119_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj120_sketch0 : @eq natural (len (##hole##)) (Succ lf4)
Sketch conj120_sketch1 : @eq natural (len (lfappend (rev x) (##hole##))) (Succ lf4)
Sketch conj120_sketch2 : @eq natural (len (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj120_sketch3 : @eq natural (len (lfappend (rev x) (Cons n (##hole##)))) (Succ lf4)
Sketch conj120_sketch4 : @eq natural (len (lfappend (##hole##) (Cons n Nil))) (Succ lf4)
Sketch conj120_sketch5 : @eq natural (##hole##) (Succ lf4)
Sketch conj120_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj120_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj120_term_sketch2 : @eq natural (Succ lf4) (##hole##)
Sketch conj120_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj120_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj120_term_sketch5 : @eq natural (len (lfappend (rev x) (Cons n Nil))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 396 seconds
Problems per Sketch:
Sketch conj88_term_sketch4 --> Problem  synth_9
Sketch conj88_imp_term_sketch3 --> Problem  synth_28
Sketch conj83_sketch1 --> Problem  synth_5
Sketch conj84_sketch1 --> Problem  synth_8
Sketch conj23_sketch0 --> Problem  synth_1
Sketch conj120_term_sketch3 --> Problem  synth_22
Sketch conj96_sketch4 --> Problem  synth_55
Sketch conj20_term_sketch2 --> Problem  synth_9
Sketch conj65_term_sketch0 --> Problem  synth_28
Sketch conj56_sketch4 --> Problem  synth_1
Sketch conj24_sketch2 --> Problem  synth_14
Sketch conj24_sketch1 --> Problem  synth_3
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj87_term_sketch1 --> Problem  synth_28
Sketch conj56_term_sketch0 --> Problem  synth_25
Sketch conj55_sketch3 --> Problem  synth_18
Sketch conj119_sketch0 --> Problem  synth_28
Sketch conj88_sketch0 --> Problem  synth_28
Sketch conj89_sketch0 --> Problem  synth_45
Sketch conj81_term_sketch1 --> Problem  synth_28
Sketch conj120_term_sketch0 --> Problem  synth_25
Sketch conj84_sketch2 --> Problem  synth_28
Sketch conj92_term_sketch2 --> Problem  synth_7
Sketch conj89_term_sketch1 --> Problem  synth_2
Sketch conj23_term_sketch2 --> Problem  synth_13
Sketch conj92_term_sketch3 --> Problem  synth_8
Sketch conj24_term_sketch0 --> Problem  synth_16
Sketch conj83_term_sketch1 --> Problem  synth_28
Sketch conj73_term_sketch1 --> Problem  synth_31
Sketch conj90_sketch0 --> Problem  synth_45
Sketch conj19_term_sketch1 --> Problem  synth_5
Sketch conj96_term_sketch2 --> Problem  synth_34
Sketch conj91_sketch3 --> Problem  synth_31
Sketch conj120_sketch1 --> Problem  synth_42
Sketch conj88_term_sketch2 --> Problem  synth_28
Sketch conj120_term_sketch1 --> Problem  synth_21
Sketch conj23_term_sketch0 --> Problem  synth_11
Sketch conj84_term_sketch3 --> Problem  synth_9
Sketch conj120_term_sketch2 --> Problem  synth_28
Sketch conj91_term_sketch3 --> Problem  synth_5
Sketch conj119_term_sketch1 --> Problem  synth_20
Sketch conj95_sketch1 --> Problem  synth_31
Sketch conj23_sketch2 --> Problem  synth_10
Sketch conj120_sketch2 --> Problem  synth_26
Sketch conj96_sketch1 --> Problem  synth_54
Sketch conj20_sketch2 --> Problem  synth_6
Sketch conj92_sketch4 --> Problem  synth_51
Sketch conj88_term_sketch3 --> Problem  synth_13
Sketch conj96_term_sketch1 --> Problem  synth_33
Sketch conj55_term_sketch1 --> Problem  synth_20
Sketch conj88_imp_sketch3 --> Problem  synth_41
Sketch conj87_term_sketch3 --> Problem  synth_13
Sketch conj84_term_sketch1 --> Problem  synth_28
Sketch conj89_term_sketch2 --> Problem  synth_31
Sketch conj56_term_sketch4 --> Problem  synth_26
Sketch conj95_term_sketch4 --> Problem  synth_13
Sketch conj74_sketch2 --> Problem  synth_32
Sketch conj91_sketch2 --> Problem  synth_5
Sketch conj92_sketch2 --> Problem  synth_50
Sketch conj95_term_sketch3 --> Problem  synth_12
Sketch conj96_term_sketch4 --> Problem  synth_9
Sketch conj90_term_sketch3 --> Problem  synth_9
Sketch conj89_sketch2 --> Problem  synth_2
Sketch conj73_term_sketch0 --> Problem  synth_30
Sketch conj96_term_sketch5 --> Problem  synth_13
Sketch conj88_imp_term_sketch4 --> Problem  synth_13
Sketch conj74_sketch0 --> Problem  synth_29
Sketch conj73_sketch0 --> Problem  synth_29
Sketch conj55_sketch0 --> Problem  synth_1
Sketch conj119_term_sketch0 --> Problem  synth_19
Sketch conj119_sketch1 --> Problem  synth_35
Sketch conj87_term_sketch0 --> Problem  synth_11
Sketch conj83_sketch0 --> Problem  synth_35
Sketch conj74_sketch1 --> Problem  synth_27
Sketch conj73_sketch1 --> Problem  synth_27
Sketch conj56_term_sketch1 --> Problem  synth_21
Sketch conj56_sketch2 --> Problem  synth_23
Sketch conj96_term_sketch3 --> Problem  synth_17
Sketch conj87_sketch1 --> Problem  synth_11
Sketch conj74_term_sketch2 --> Problem  synth_9
Sketch conj92_sketch1 --> Problem  synth_8
Sketch conj81_sketch1 --> Problem  synth_2
Sketch conj87_sketch3 --> Problem  synth_37
Sketch conj56_sketch1 --> Problem  synth_14
Sketch conj24_term_sketch3 --> Problem  synth_9
Sketch conj120_term_sketch5 --> Problem  synth_26
Sketch conj92_term_sketch4 --> Problem  synth_9
Sketch conj84_sketch3 --> Problem  synth_36
Sketch conj90_sketch3 --> Problem  synth_46
Sketch conj81_sketch0 --> Problem  synth_28
Sketch conj74_term_sketch0 --> Problem  synth_33
Sketch conj119_sketch3 --> Problem  synth_19
Sketch conj84_term_sketch2 --> Problem  synth_8
Sketch conj120_sketch3 --> Problem  synth_58
Sketch conj84_sketch0 --> Problem  synth_35
Sketch conj92_term_sketch1 --> Problem  synth_34
Sketch conj95_sketch4 --> Problem  synth_53
Sketch conj96_term_sketch0 --> Problem  synth_16
Sketch conj88_imp_sketch5 --> Problem  synth_43
Sketch conj83_term_sketch2 --> Problem  synth_5
Sketch conj65_sketch0 --> Problem  synth_27
Sketch conj87_sketch2 --> Problem  synth_35
Sketch conj24_sketch0 --> Problem  synth_1
Sketch conj90_sketch2 --> Problem  synth_34
Sketch conj23_sketch1 --> Problem  synth_3
Sketch conj120_term_sketch4 --> Problem  synth_9
Sketch conj119_sketch4 --> Problem  synth_57
Sketch conj55_sketch1 --> Problem  synth_3
Sketch conj88_imp_sketch0 --> Problem  synth_38
Sketch conj84_term_sketch0 --> Problem  synth_7
Sketch conj20_sketch0 --> Problem  synth_3
Sketch conj91_sketch0 --> Problem  synth_47
Sketch conj88_imp_sketch2 --> Problem  synth_40
Sketch conj20_term_sketch0 --> Problem  synth_7
Sketch conj91_term_sketch0 --> Problem  synth_4
Sketch conj95_sketch3 --> Problem  synth_47
Sketch conj91_term_sketch2 --> Problem  synth_31
Sketch conj119_term_sketch2 --> Problem  synth_21
Sketch conj88_imp_term_sketch1 --> Problem  synth_33
Sketch conj96_sketch2 --> Problem  synth_16
Sketch conj88_sketch1 --> Problem  synth_35
Sketch conj56_term_sketch3 --> Problem  synth_9
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj90_term_sketch0 --> Problem  synth_33
Sketch conj24_term_sketch1 --> Problem  synth_17
Sketch conj87_term_sketch2 --> Problem  synth_12
Sketch conj24_sketch3 --> Problem  synth_15
Sketch conj92_sketch3 --> Problem  synth_34
Sketch conj88_sketch2 --> Problem  synth_16
Sketch conj56_sketch3 --> Problem  synth_24
Sketch conj89_sketch1 --> Problem  synth_31
Sketch conj55_term_sketch0 --> Problem  synth_19
Sketch conj19_sketch0 --> Problem  synth_3
Sketch conj17_sketch0 --> Problem  synth_1
Sketch conj88_imp_term_sketch2 --> Problem  synth_17
Sketch conj96_sketch3 --> Problem  synth_50
Sketch conj83_term_sketch0 --> Problem  synth_4
Sketch conj96_sketch0 --> Problem  synth_34
Sketch conj120_sketch4 --> Problem  synth_59
Sketch conj96_sketch5 --> Problem  synth_56
Sketch conj23_term_sketch1 --> Problem  synth_12
Sketch conj95_term_sketch1 --> Problem  synth_11
Sketch conj95_term_sketch0 --> Problem  synth_30
Sketch conj20_sketch1 --> Problem  synth_1
Sketch conj90_term_sketch2 --> Problem  synth_2
Sketch conj55_term_sketch3 --> Problem  synth_22
Sketch conj88_imp_sketch4 --> Problem  synth_42
Sketch conj88_term_sketch0 --> Problem  synth_16
Sketch conj120_sketch0 --> Problem  synth_35
Sketch conj119_term_sketch4 --> Problem  synth_22
Sketch conj56_term_sketch2 --> Problem  synth_22
Sketch conj87_sketch0 --> Problem  synth_28
Sketch conj88_term_sketch1 --> Problem  synth_17
Sketch conj88_imp_term_sketch0 --> Problem  synth_16
Sketch conj20_term_sketch1 --> Problem  synth_8
Sketch conj89_term_sketch0 --> Problem  synth_30
Sketch conj92_sketch0 --> Problem  synth_49
Sketch conj88_sketch3 --> Problem  synth_42
Sketch conj19_sketch1 --> Problem  synth_1
Sketch conj88_sketch4 --> Problem  synth_44
Sketch conj91_sketch1 --> Problem  synth_48
Sketch conj24_term_sketch2 --> Problem  synth_13
Sketch conj95_sketch2 --> Problem  synth_11
Sketch conj120_sketch5 --> Problem  synth_28
Sketch conj83_sketch2 --> Problem  synth_28
Sketch conj91_term_sketch1 --> Problem  synth_30
Sketch conj88_imp_term_sketch5 --> Problem  synth_9
Sketch conj74_term_sketch1 --> Problem  synth_34
Sketch conj56_sketch0 --> Problem  synth_3
Sketch conj119_sketch2 --> Problem  synth_37
Sketch conj92_term_sketch0 --> Problem  synth_33
Sketch conj119_term_sketch3 --> Problem  synth_28
Sketch conj95_term_sketch2 --> Problem  synth_31
Sketch conj95_sketch0 --> Problem  synth_52
Sketch conj81_term_sketch0 --> Problem  synth_2
Sketch conj55_term_sketch2 --> Problem  synth_21
Sketch conj90_term_sketch1 --> Problem  synth_34
Sketch conj90_sketch1 --> Problem  synth_2
Sketch conj55_sketch2 --> Problem  synth_10
Sketch conj88_imp_sketch1 --> Problem  synth_39


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 887 seconds

Problem: synth_28
 Succ lf4

Problem: synth_17
 lfappend (rev (lfappend lf7 x)) (Cons n Nil)
 rev (lfappend lf7 (Cons n x))
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 lfappend (rev x) (Cons n Nil)

Problem: synth_29

Problem: synth_45

Problem: synth_26
 len (lfappend (rev x) (Cons n Nil))
 len (lfappend (rev x) (Cons Zero Nil))
 Succ (len (rev (rev x)))
 Succ (len (lfappend x Nil))
 Succ (len (rev x))
 Succ (len x)

Problem: synth_9
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_30
 len (rev (lfappend lf6 Nil))
 len (lfappend (rev lf6) Nil)
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 len (rev lf6)
 len lf6

Problem: synth_11
 Succ (len (rev (rev lf6)))
 Succ (len (lfappend lf6 lf7))
 Succ (len (lfappend lf7 lf6))
 Succ (len (lfappend lf6 Nil))
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_54
 len (rev (rev x))
 len (lfappend x lf7)
 len (lfappend lf7 x)
 len (lfappend x Nil)
 len (rev x)
 len x

Problem: synth_39
 len (lfappend x lf7)
 len (lfappend lf7 x)
 len (lfappend x Nil)
 len (rev x)
 len x
 lf4

Problem: synth_1
 lf3

Problem: synth_46

Problem: synth_55

Problem: synth_57
 Nil

Problem: synth_59

Problem: synth_15

Problem: synth_31
 len (lfappend (rev (rev lf6)) (Cons Zero Nil))
 len (lfappend (rev lf6) (Cons Zero Nil))
 Succ (len (rev (rev lf6)))
 Succ (len (lfappend lf6 Nil))
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_14

Problem: synth_8
 len (lfappend lf5 (rev x))
 len (lfappend x (rev lf5))
 len (lfappend lf5 x)
 len (lfappend x lf5)
 Succ (len (rev x))
 Succ (len x)

Problem: synth_34
 len (lfappend (rev (rev x)) (Cons Zero Nil))
 len (lfappend (rev x) (Cons Zero Nil))
 Succ (len (rev (rev x)))
 Succ (len (lfappend x Nil))
 Succ (len (rev x))
 Succ (len x)

Problem: synth_12
 lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)
 rev (lfappend lf7 (Cons n (rev lf6)))
 lfappend lf6 (Cons n (rev lf7))
 lfappend lf6 (Cons n lf7)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_5
 len (lfappend lf6 (rev lf5))
 len (lfappend lf5 (rev lf6))
 len (lfappend lf6 lf5)
 len (lfappend lf5 lf6)
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_37

Problem: synth_58
 Nil

Problem: synth_53

Problem: synth_50

Problem: synth_2
 len (rev (lfappend lf2 Nil))
 len (lfappend (rev lf2) Nil)
 len (rev (rev lf2))
 len (lfappend lf2 Nil)
 len (rev lf2)
 len lf2

Problem: synth_22
 Nil

Problem: synth_20
 lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)
 lfappend (lfappend lf6 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_18
 Nil

Problem: synth_21
 Cons n Nil

Problem: synth_56

Problem: synth_41
 Succ (len (lfappend x lf7))
 Succ (len (lfappend lf7 x))
 Succ (len (lfappend x Nil))
 Succ (len (rev x))
 Succ (len x)
 Succ lf4

Problem: synth_49
 len (rev (lfappend x Nil))
 len (lfappend (rev x) Nil)
 len (rev (rev x))
 len (lfappend x Nil)
 len (rev x)
 len x

Problem: synth_25
 lfappend (lfappend (rev x) Nil) (Cons n Nil)
 rev (rev (lfappend (rev x) (Cons n Nil)))
 lfappend (lfappend (rev x) (Cons n Nil)) Nil
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_13
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_6

Problem: synth_7
 rev (lfappend (rev lf5) x)
 lfappend (rev x) (rev (rev lf5))
 lfappend (rev x) (lfappend lf5 Nil)
 lfappend (rev x) (rev lf5)
 rev (lfappend lf5 x)
 lfappend (rev x) lf5

Problem: synth_4
 lfappend (lfappend lf6 lf5) Nil
 lfappend lf6 (rev (rev lf5))
 lfappend lf6 (lfappend lf5 Nil)
 rev (lfappend lf5 (rev lf6))
 lfappend lf6 (rev lf5)
 lfappend lf6 lf5

Problem: synth_38
 len (lfappend (rev x) (Cons Zero Nil))
 Succ (len (rev (rev x)))
 Succ (len (lfappend x Nil))
 Succ (len (rev x))
 Succ (len x)
 Succ lf4

Problem: synth_23
 Nil

Problem: synth_27
 lf1

Problem: synth_42

Problem: synth_16
 Succ (len (rev (rev x)))
 Succ (len (lfappend x lf7))
 Succ (len (lfappend lf7 x))
 Succ (len (lfappend x Nil))
 Succ (len (rev x))
 Succ (len x)

Problem: synth_19
 len (lfappend (rev lf6) (Cons n Nil))
 len (lfappend (rev lf6) (Cons Zero Nil))
 Succ (len (rev (rev lf6)))
 Succ (len (lfappend lf6 Nil))
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_40

Problem: synth_10

Problem: synth_33
 len (rev (lfappend x Nil))
 len (lfappend (rev x) Nil)
 len (rev (rev x))
 len (lfappend x Nil)
 len (rev x)
 len x

Problem: synth_47

Problem: synth_24

Problem: synth_3

Problem: synth_52
 len (rev (rev lf6))
 len (lfappend lf6 lf7)
 len (lfappend lf7 lf6)
 len (lfappend lf6 Nil)
 len (rev lf6)
 len lf6

Problem: synth_32

Problem: synth_48
 len (rev (lfappend lf6 Nil))
 len (lfappend (rev lf6) Nil)
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 len (rev lf6)
 len lf6

Problem: synth_44

Problem: synth_36

Problem: synth_51

Problem: synth_35

Problem: synth_43
 rev (lfappend lf7 x)
 rev (lfappend x Nil)
 lfappend (rev x) lf7
 lfappend (rev x) Nil
 lfappend lf7 (rev x)
 rev x

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 888 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))).
Lemma candidate_2: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_3: forall (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma candidate_4: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_5: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_6: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_7: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_8: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_9: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_10: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_11: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_12: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_13: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_14: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_15: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_16: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_17: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_18: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_19: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_20: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 lf5)).
Lemma candidate_21: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_22: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev lf6))).
Lemma candidate_23: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma candidate_24: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_25: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_26: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_27: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_28: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_29: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_30: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_31: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_32: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_33: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_34: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_35: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma candidate_36: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len x)).
Lemma candidate_37: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_38: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_39: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_40: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_41: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_42: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_43: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_44: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev (rev lf6)))).
Lemma candidate_45: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_46: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_47: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_48: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_49: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_50: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_51: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_52: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_53: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_54: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_55: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_56: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_57: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_58: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_59: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_60: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_61: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_62: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_63: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_64: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_65: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_66: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_67: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_68: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_69: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_70: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_71: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_72: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_73: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_74: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_75: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_76: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_77: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_78: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_79: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_80: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_81: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_82: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_83: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_84: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_85: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_86: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_87: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_88: forall (lf3 : natural) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n (Nil)))) lf3.
Lemma candidate_89: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_90: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_91: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_92: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_93: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_94: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_95: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_96: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_97: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_98: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_99: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_100: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_101: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_102: @eq lst Nil (Nil).
Lemma candidate_103: forall (lf3 : natural) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n (Nil)))) lf3.
Lemma candidate_104: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_105: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_106: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_107: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_108: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_109: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_110: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_111: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_112: @eq lst Nil (Nil).
Lemma candidate_113: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_114: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_115: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_116: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_117: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_118: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_119: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_120: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_121: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev (rev x)))).
Lemma candidate_122: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (Succ (len (lfappend x Nil))).
Lemma candidate_123: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))).
Lemma candidate_124: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len x)).
Lemma candidate_125: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_126: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_127: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_128: forall (lf6 : lst), @eq natural (len lf6) (len (rev (lfappend lf6 Nil))).
Lemma candidate_129: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend (rev lf6) Nil)).
Lemma candidate_130: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_131: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_132: forall (lf6 : lst), @eq natural (len lf6) (len (rev lf6)).
Lemma candidate_133: forall (lf6 : lst), @eq natural (len lf6) (len lf6).
Lemma candidate_134: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev (rev lf6)) (Cons Zero Nil))).
Lemma candidate_135: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_136: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev (rev lf6)))).
Lemma candidate_137: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_138: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev lf6))).
Lemma candidate_139: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_140: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_141: forall (x : lst), @eq natural (len (rev x)) (len (rev (lfappend x Nil))).
Lemma candidate_142: forall (x : lst), @eq natural (len (rev x)) (len (lfappend (rev x) Nil)).
Lemma candidate_143: forall (x : lst), @eq natural (len (rev x)) (len (rev (rev x))).
Lemma candidate_144: forall (x : lst), @eq natural (len (rev x)) (len (lfappend x Nil)).
Lemma candidate_145: forall (x : lst), @eq natural (len (rev x)) (len (rev x)).
Lemma candidate_146: forall (x : lst), @eq natural (len (rev x)) (len x).
Lemma candidate_147: forall (x : lst), @eq natural (Succ (len (rev x)))   (len (lfappend (rev (rev x)) (Cons Zero Nil))).
Lemma candidate_148: forall (x : lst), @eq natural (Succ (len (rev x))) (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_149: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev (rev x)))).
Lemma candidate_150: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (lfappend x Nil))).
Lemma candidate_151: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_152: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_153: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_154: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_155: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_156: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_157: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_158: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_159: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_160: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_161: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_162: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_163: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_164: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_165: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_166: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_167: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_168: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_169: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_170: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_171: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_172: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_173: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_174: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_175: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 lf5)).
Lemma candidate_176: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_177: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev lf6))).
Lemma candidate_178: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma candidate_179: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_180: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_181: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_182: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_183: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_184: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_185: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_186: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_187: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_188: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_189: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 lf5)).
Lemma candidate_190: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_191: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev lf6))).
Lemma candidate_192: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma candidate_193: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_194: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_195: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_196: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_197: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma candidate_198: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len x)).
Lemma candidate_199: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_200: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_201: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_202: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_203: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_204: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_205: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_206: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_207: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_208: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_209: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_210: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_211: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma candidate_212: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len x)).
Lemma candidate_213: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_214: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_215: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_216: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_217: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_218: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_219: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_220: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev (rev lf6)))).
Lemma candidate_221: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_222: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_223: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_224: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_225: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_226: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev (rev lf6)))).
Lemma candidate_227: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_228: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_229: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_230: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_231: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_232: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_233: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_234: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_235: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_236: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_237: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_238: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_239: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_240: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_241: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_242: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_243: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_244: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_245: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ lf4).
Lemma candidate_246: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (rev (rev x)))) (Succ lf4).
Lemma candidate_247: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (lfappend x Nil))) (Succ lf4).
Lemma candidate_248: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (rev x))) (Succ lf4).
Lemma candidate_249: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len x)) (Succ lf4).
Lemma candidate_250: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_251: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend x lf7)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_252: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend lf7 x)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_253: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend x Nil)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_254: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (rev x)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_255: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_256: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (lf4), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_257: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_258: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_259: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_260: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_261: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_262: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_263: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev (lfappend lf7 x)) (Cons n lf7))) (Succ lf4).
Lemma candidate_264: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev (lfappend x Nil)) (Cons n lf7))) (Succ lf4).
Lemma candidate_265: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (lfappend (rev x) lf7) (Cons n lf7))) (Succ lf4).
Lemma candidate_266: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (lfappend (rev x) Nil) (Cons n lf7))) (Succ lf4).
Lemma candidate_267: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (lfappend lf7 (rev x)) (Cons n lf7))) (Succ lf4).
Lemma candidate_268: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_269: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_270: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_271: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_272: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_273: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_274: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_275: forall (x : lst), @eq natural (len x) (len (rev (lfappend x Nil))).
Lemma candidate_276: forall (x : lst), @eq natural (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_277: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_278: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_279: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_280: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_281: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_282: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_283: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_284: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_285: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_286: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_287: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_288: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_289: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_290: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_291: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_292: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_293: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_294: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_295: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_296: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_297: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_298: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_299: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_300: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_301: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_302: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_303: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_304: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_305: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_306: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_307: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_308: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_309: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_310: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_311: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_312: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_313: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_314: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_315: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_316: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_317: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_318: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_319: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_320: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_321: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_322: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_323: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_324: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_325: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_326: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_327: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_328: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_329: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_330: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_331: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_332: forall (lf6 : lst), @eq natural (len (lfappend (rev (rev lf6)) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_333: forall (lf6 : lst), @eq natural (len (lfappend (rev lf6) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_334: forall (lf6 : lst), @eq natural (Succ (len (rev (rev lf6)))) (Succ (len lf6)).
Lemma candidate_335: forall (lf6 : lst), @eq natural (Succ (len (lfappend lf6 Nil))) (Succ (len lf6)).
Lemma candidate_336: forall (lf6 : lst), @eq natural (Succ (len (rev lf6))) (Succ (len lf6)).
Lemma candidate_337: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_338: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_339: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_340: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_341: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_342: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_343: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_344: forall (lf6 : lst), @eq natural (len lf6) (len (rev (lfappend lf6 Nil))).
Lemma candidate_345: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend (rev lf6) Nil)).
Lemma candidate_346: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_347: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_348: forall (lf6 : lst), @eq natural (len lf6) (len (rev lf6)).
Lemma candidate_349: forall (lf6 : lst), @eq natural (len lf6) (len lf6).
Lemma candidate_350: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_351: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_352: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_353: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_354: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_355: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_356: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev (rev lf6)) (Cons Zero Nil))).
Lemma candidate_357: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_358: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev (rev lf6)))).
Lemma candidate_359: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_360: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev lf6))).
Lemma candidate_361: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_362: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_363: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_364: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_365: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_366: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_367: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_368: forall (x : lst), @eq natural (len (lfappend (rev (rev x)) (Cons Zero Nil)))   (Succ (len (rev x))).
Lemma candidate_369: forall (x : lst), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ (len (rev x))).
Lemma candidate_370: forall (x : lst), @eq natural (Succ (len (rev (rev x)))) (Succ (len (rev x))).
Lemma candidate_371: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len (rev x))).
Lemma candidate_372: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_373: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_374: forall (x : lst), @eq natural (len (rev x)) (len (rev (lfappend x Nil))).
Lemma candidate_375: forall (x : lst), @eq natural (len (rev x)) (len (lfappend (rev x) Nil)).
Lemma candidate_376: forall (x : lst), @eq natural (len (rev x)) (len (rev (rev x))).
Lemma candidate_377: forall (x : lst), @eq natural (len (rev x)) (len (lfappend x Nil)).
Lemma candidate_378: forall (x : lst), @eq natural (len (rev x)) (len (rev x)).
Lemma candidate_379: forall (x : lst), @eq natural (len (rev x)) (len x).
Lemma candidate_380: forall (x : lst), @eq natural (Succ (len (rev x)))   (len (lfappend (rev (rev x)) (Cons Zero Nil))).
Lemma candidate_381: forall (x : lst), @eq natural (Succ (len (rev x))) (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_382: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev (rev x)))).
Lemma candidate_383: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (lfappend x Nil))).
Lemma candidate_384: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_385: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_386: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_387: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_388: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_389: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_390: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_391: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_392: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_393: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_394: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_395: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_396: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_397: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_398: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev (lfappend lf6 Nil)))).
Lemma candidate_399: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (lfappend (rev lf6) Nil))).
Lemma candidate_400: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev (rev lf6)))).
Lemma candidate_401: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_402: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev lf6))).
Lemma candidate_403: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma candidate_404: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_405: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_406: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 lf5)).
Lemma candidate_407: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_408: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev lf6))).
Lemma candidate_409: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma candidate_410: forall (lf6 : lst), @eq natural (len (lfappend (rev (rev lf6)) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_411: forall (lf6 : lst), @eq natural (len (lfappend (rev lf6) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_412: forall (lf6 : lst), @eq natural (Succ (len (rev (rev lf6)))) (Succ (len lf6)).
Lemma candidate_413: forall (lf6 : lst), @eq natural (Succ (len (lfappend lf6 Nil))) (Succ (len lf6)).
Lemma candidate_414: forall (lf6 : lst), @eq natural (Succ (len (rev lf6))) (Succ (len lf6)).
Lemma candidate_415: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_416: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_417: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_418: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_419: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_420: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_421: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_422: forall (lf6 : lst), @eq natural (len lf6) (len (rev (lfappend lf6 Nil))).
Lemma candidate_423: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend (rev lf6) Nil)).
Lemma candidate_424: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_425: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_426: forall (lf6 : lst), @eq natural (len lf6) (len (rev lf6)).
Lemma candidate_427: forall (lf6 : lst), @eq natural (len lf6) (len lf6).
Lemma candidate_428: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev (rev lf6)) (Cons Zero Nil))).
Lemma candidate_429: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_430: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev (rev lf6)))).
Lemma candidate_431: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_432: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev lf6))).
Lemma candidate_433: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_434: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_435: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_436: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 lf5)).
Lemma candidate_437: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_438: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len (rev lf6))).
Lemma candidate_439: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (Succ (len lf6)).
Lemma candidate_440: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev (lfappend x Nil)))).
Lemma candidate_441: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (lfappend (rev x) Nil))).
Lemma candidate_442: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev (rev x)))).
Lemma candidate_443: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (lfappend x Nil))).
Lemma candidate_444: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma candidate_445: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len x)).
Lemma candidate_446: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_447: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_448: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_449: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_450: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma candidate_451: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len x)).
Lemma candidate_452: forall (x : lst), @eq natural (len (lfappend (rev (rev x)) (Cons Zero Nil)))   (Succ (len (rev x))).
Lemma candidate_453: forall (x : lst), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ (len (rev x))).
Lemma candidate_454: forall (x : lst), @eq natural (Succ (len (rev (rev x)))) (Succ (len (rev x))).
Lemma candidate_455: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len (rev x))).
Lemma candidate_456: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_457: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_458: forall (x : lst), @eq natural (len (rev x)) (len (rev (lfappend x Nil))).
Lemma candidate_459: forall (x : lst), @eq natural (len (rev x)) (len (lfappend (rev x) Nil)).
Lemma candidate_460: forall (x : lst), @eq natural (len (rev x)) (len (rev (rev x))).
Lemma candidate_461: forall (x : lst), @eq natural (len (rev x)) (len (lfappend x Nil)).
Lemma candidate_462: forall (x : lst), @eq natural (len (rev x)) (len (rev x)).
Lemma candidate_463: forall (x : lst), @eq natural (len (rev x)) (len x).
Lemma candidate_464: forall (x : lst), @eq natural (Succ (len (rev x)))   (len (lfappend (rev (rev x)) (Cons Zero Nil))).
Lemma candidate_465: forall (x : lst), @eq natural (Succ (len (rev x))) (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_466: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev (rev x)))).
Lemma candidate_467: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (lfappend x Nil))).
Lemma candidate_468: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_469: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_470: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_471: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_472: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_473: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_474: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_475: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_476: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_477: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_478: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_479: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_480: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len (rev x))).
Lemma candidate_481: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (Succ (len x)).
Lemma candidate_482: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_483: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_484: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_485: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_486: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_487: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_488: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev (rev lf6)))).
Lemma candidate_489: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_490: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_491: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_492: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_493: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_494: forall (lf6 : lst), @eq natural (len (lfappend (rev (rev lf6)) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_495: forall (lf6 : lst), @eq natural (len (lfappend (rev lf6) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_496: forall (lf6 : lst), @eq natural (Succ (len (rev (rev lf6)))) (Succ (len lf6)).
Lemma candidate_497: forall (lf6 : lst), @eq natural (Succ (len (lfappend lf6 Nil))) (Succ (len lf6)).
Lemma candidate_498: forall (lf6 : lst), @eq natural (Succ (len (rev lf6))) (Succ (len lf6)).
Lemma candidate_499: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_500: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev (rev lf6)))).
Lemma candidate_501: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_502: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_503: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_504: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_505: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_506: forall (lf6 : lst), @eq natural (len lf6) (len (rev (lfappend lf6 Nil))).
Lemma candidate_507: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend (rev lf6) Nil)).
Lemma candidate_508: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_509: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_510: forall (lf6 : lst), @eq natural (len lf6) (len (rev lf6)).
Lemma candidate_511: forall (lf6 : lst), @eq natural (len lf6) (len lf6).
Lemma candidate_512: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev (rev lf6)))).
Lemma candidate_513: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_514: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_515: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_516: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_517: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_518: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev (rev lf6)) (Cons Zero Nil))).
Lemma candidate_519: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_520: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev (rev lf6)))).
Lemma candidate_521: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_522: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev lf6))).
Lemma candidate_523: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len lf6)).
Lemma candidate_524: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_525: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_526: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_527: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_528: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_529: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_530: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_531: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_532: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_533: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_534: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_535: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_536: forall (x : lst), @eq natural (len (lfappend (rev (rev x)) (Cons Zero Nil)))   (Succ (len (rev x))).
Lemma candidate_537: forall (x : lst), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ (len (rev x))).
Lemma candidate_538: forall (x : lst), @eq natural (Succ (len (rev (rev x)))) (Succ (len (rev x))).
Lemma candidate_539: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len (rev x))).
Lemma candidate_540: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_541: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_542: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_543: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_544: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_545: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_546: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_547: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_548: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_549: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_550: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_551: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_552: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_553: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_554: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev (rev x)))).
Lemma candidate_555: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_556: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_557: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x Nil))).
Lemma candidate_558: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len (rev x))).
Lemma candidate_559: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ (len x)).
Lemma candidate_560: forall (x : lst), @eq natural (len (rev x)) (len (rev (lfappend x Nil))).
Lemma candidate_561: forall (x : lst), @eq natural (len (rev x)) (len (lfappend (rev x) Nil)).
Lemma candidate_562: forall (x : lst), @eq natural (len (rev x)) (len (rev (rev x))).
Lemma candidate_563: forall (x : lst), @eq natural (len (rev x)) (len (lfappend x Nil)).
Lemma candidate_564: forall (x : lst), @eq natural (len (rev x)) (len (rev x)).
Lemma candidate_565: forall (x : lst), @eq natural (len (rev x)) (len x).
Lemma candidate_566: forall (x : lst), @eq natural (Succ (len (rev x)))   (len (lfappend (rev (rev x)) (Cons Zero Nil))).
Lemma candidate_567: forall (x : lst), @eq natural (Succ (len (rev x))) (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_568: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev (rev x)))).
Lemma candidate_569: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (lfappend x Nil))).
Lemma candidate_570: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (rev x))).
Lemma candidate_571: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_572: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_573: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_574: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_575: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_576: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_577: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_578: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_579: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_580: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_581: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_582: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_583: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_584: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_585: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_586: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_587: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_588: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_589: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_590: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_591: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_592: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_593: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_594: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_595: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_596: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_597: forall (n : natural) (lf4 : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n (Nil)))) (Succ lf4).
Lemma candidate_598: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_599: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_600: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_601: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_602: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_603: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_604: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_605: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_606: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_607: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_608: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_609: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_610: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_611: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_612: @eq lst Nil (Nil).
Lemma candidate_613: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_614: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_615: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev (rev x)))).
Lemma candidate_616: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (Succ (len (lfappend x Nil))).
Lemma candidate_617: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))).
Lemma candidate_618: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len x)).
Lemma candidate_619: forall (n : natural) (lf4 : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n (Nil)))) (Succ lf4).
Lemma candidate_620: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_621: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_622: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_623: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_624: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_625: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_626: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_627: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_628: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_629: @eq lst Nil (Nil).
Lemma candidate_630: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_631: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_632: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_633: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_634: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_635: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_636: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_637: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_638: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev (rev x)))).
Lemma candidate_639: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (Succ (len (lfappend x Nil))).
Lemma candidate_640: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))).
Lemma candidate_641: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1369 seconds
Duplicates removed: 472
Filtered by Quickchick: 55
Filtered by script: 33
Remaining: 81

Lemmas: 
Lemma candidate_39: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_41: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_40: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_277: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_278: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_130: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_7: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_131: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_8: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_276: forall (x : lst), @eq natural (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_275: forall (x : lst), @eq natural (len x) (len (rev (lfappend x Nil))).
Lemma candidate_144: forall (x : lst), @eq natural (len (rev x)) (len (lfappend x Nil)).
Lemma candidate_129: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend (rev lf6) Nil)).
Lemma candidate_128: forall (lf6 : lst), @eq natural (len lf6) (len (rev (lfappend lf6 Nil))).
Lemma candidate_6: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_5: forall (lf2 : lst), @eq natural (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_38: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_37: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_142: forall (x : lst), @eq natural (len (rev x)) (len (lfappend (rev x) Nil)).
Lemma candidate_141: forall (x : lst), @eq natural (len (rev x)) (len (rev (lfappend x Nil))).
Lemma candidate_334: forall (lf6 : lst), @eq natural (Succ (len (rev (rev lf6)))) (Succ (len lf6)).
Lemma candidate_136: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (rev (rev lf6)))).
Lemma candidate_13: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_25: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_335: forall (lf6 : lst), @eq natural (Succ (len (lfappend lf6 Nil))) (Succ (len lf6)).
Lemma candidate_137: forall (lf6 : lst), @eq natural (Succ (len lf6)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_14: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_12: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_21: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 lf6)).
Lemma candidate_371: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len (rev x))).
Lemma candidate_150: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len (lfappend x Nil))).
Lemma candidate_2: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_34: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x lf5)).
Lemma candidate_33: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 x)).
Lemma candidate_124: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len x)).
Lemma candidate_26: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_19: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf5 (rev lf6))).
Lemma candidate_18: forall (lf5 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf5)) (len (lfappend lf6 (rev lf5))).
Lemma candidate_93: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_27: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_32: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend x (rev lf5))).
Lemma candidate_31: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend (rev x) lf5)) (len (lfappend lf5 (rev x))).
Lemma candidate_333: forall (lf6 : lst), @eq natural (len (lfappend (rev lf6) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_135: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_369: forall (x : lst), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ (len (rev x))).
Lemma candidate_249: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len x)) (Succ lf4).
Lemma candidate_148: forall (x : lst), @eq natural (Succ (len (rev x))) (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_91: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_100: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev (rev x)))).
Lemma candidate_332: forall (lf6 : lst), @eq natural (len (lfappend (rev (rev lf6)) (Cons Zero Nil))) (Succ (len lf6)).
Lemma candidate_134: forall (lf6 : lst), @eq natural (Succ (len lf6)) (len (lfappend (rev (rev lf6)) (Cons Zero Nil))).
Lemma candidate_92: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_46: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_45: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_248: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (rev x))) (Succ lf4).
Lemma candidate_98: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_96: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_368: forall (x : lst), @eq natural (len (lfappend (rev (rev x)) (Cons Zero Nil)))   (Succ (len (rev x))).
Lemma candidate_147: forall (x : lst), @eq natural (Succ (len (rev x)))   (len (lfappend (rev (rev x)) (Cons Zero Nil))).
Lemma candidate_122: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (Succ (len (lfappend x Nil))).
Lemma candidate_65: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_64: forall (lf7 : lst) (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
Lemma candidate_246: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (rev (rev x)))) (Succ lf4).
Lemma candidate_108: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_106: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_89: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_247: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (Succ (len (lfappend x Nil))) (Succ lf4).
Lemma candidate_109: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_107: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_105: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_90: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons Zero Nil))).
Lemma candidate_120: forall (n : natural) (x : lst), @eq natural (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons Zero Nil))).
Lemma candidate_97: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_95: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_3: forall (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ lf4).
Lemma candidate_245: forall (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons Zero Nil))) (Succ lf4).
Lemma candidate_252: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend lf7 x)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_251: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len (lfappend x lf7)), @eq natural (len (lfappend (rev x) (Cons n lf7))) (Succ lf4).
Lemma candidate_258: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend lf7 x))).
Lemma candidate_257: forall (lf7 : lst) (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (len x), @eq natural (len (lfappend (rev x) (Cons n lf7)))   (Succ (len (lfappend x lf7))).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal21_theorem0_50_append_assoc

Number of Lemmas: 387
Number of Lemmas (after duplicates removed): 116
Number of Lemmas (after QuickChick used to filter): 83
* Number of Candidate Lemmas: 59

Time until ranking: 1700
Time to complete: 4221

Stuck state true independent of hypotheses: true

Category 1:
Count = 1

Lemma candidate_31: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x) (lfappend y (lfappend lf4 x)).

Category 2:
Count = 3

Lemma candidate_214: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend y (lfappend (lfappend lf4 Nil) x)).
Lemma candidate_28: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend y (rotate (len x) (lfappend x lf4))).
Lemma candidate_346: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend y (Cons n lf6)) x)   (lfappend y (Cons n (lfappend lf6 x))).

Category 3 (provable):
Count = 24

Lemma candidate_77: forall (n : natural), @eq lst (Cons n Nil) (Cons n (rotate n Nil)).
Lemma candidate_88: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_87: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 (rotate (len lf1) Nil)).
Lemma candidate_74: forall (n : natural), @eq lst (Cons n Nil) (Cons n (rotate n (rotate n Nil))).
Lemma candidate_127: forall (y : lst) (lf5 : lst), @eq lst (lfappend y (lfappend lf5 Nil)) (lfappend y lf5).
Lemma candidate_124: forall (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend y Nil) lf5) (lfappend y lf5).
Lemma candidate_97: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y (lfappend lf5 Nil)).
Lemma candidate_95: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend (lfappend y lf5) Nil).
Lemma candidate_94: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend (lfappend y Nil) lf5).
Lemma candidate_24: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_21: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y lf4) Nil).
Lemma candidate_20: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y Nil) lf4).
Lemma candidate_9: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_179: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_71: forall (n : natural) (y : lst), @eq lst (lfappend y (Cons n Nil)) (lfappend y (Cons n (rotate n Nil))).
Lemma candidate_69: forall (n : natural) (y : lst), @eq lst (lfappend y (Cons n Nil)) (lfappend (lfappend y Nil) (Cons n Nil)).
Lemma candidate_70: forall (n : natural) (y : lst), @eq lst (lfappend y (Cons n Nil)) (lfappend y (rotate (len y) (Cons n Nil))).
Lemma candidate_177: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rotate n Nil) (lfappend y (Cons n x)))   (lfappend y (Cons n x)).
Lemma candidate_105: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (rotate n Nil) (lfappend y (Cons n x))).
Lemma candidate_26: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend (lfappend y Nil) (lfappend lf4 x)).
Lemma candidate_201: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend y Nil) (Cons n Nil)) x)   (lfappend y (Cons n x)).
Lemma candidate_83: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x)   (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_81: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x)   (lfappend (rotate n Nil) (lfappend y (Cons n x))).

Category 3 (not provable):
Count = 31

Lemma candidate_90: forall (lf1 : lst), @eq lst lf1 (rotate (len lf1) lf1).
Lemma candidate_5: forall (lf3 : lst), @eq lst (rotate (len lf3) lf3) lf3.
Lemma candidate_78: forall (n : natural), @eq lst (Cons n Nil) (rotate n (Cons n Nil)).
Lemma candidate_113: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rotate (len x) x)).
Lemma candidate_2: forall (lf3 : lst), @eq lst (lfappend lf3 (rotate (len lf3) Nil)) lf3.
Lemma candidate_112: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x (rotate n Nil))).
Lemma candidate_76: forall (n : natural), @eq lst (Cons n Nil) (rotate n (rotate n (Cons n Nil))).
Lemma candidate_75: forall (n : natural), @eq lst (Cons n Nil) (rotate n (Cons n (rotate n Nil))).
Lemma candidate_12: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_10: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_8: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rotate (len x) x)).
Lemma candidate_123: forall (y : lst) (lf5 : lst), @eq lst (lfappend y (rotate (len lf5) lf5)) (lfappend y lf5).
Lemma candidate_93: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y (rotate (len lf5) lf5)).
Lemma candidate_181: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_109: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_107: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_72: forall (n : natural) (y : lst), @eq lst (lfappend y (Cons n Nil)) (lfappend y (rotate n (Cons n Nil))).
Lemma candidate_205: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (rotate n (Cons n Nil))) x)   (lfappend y (Cons n x)).
Lemma candidate_204: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (Cons n (rotate n Nil))) x)   (lfappend y (Cons n x)).
Lemma candidate_215: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend y (lfappend (lfappend lf4 x) Nil)).
Lemma candidate_29: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend y (lfappend lf4 (lfappend x Nil))).
Lemma candidate_27: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend (lfappend y lf4) (lfappend x Nil)).
Lemma candidate_213: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend y lf4) x)   (lfappend y (lfappend lf4 (rotate (len x) x))).
Lemma candidate_178: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_106: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_85: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x)   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_68: forall (n : natural) (y : lst), @eq lst (lfappend y (Cons n Nil))   (lfappend (lfappend y Nil) (rotate n (Cons n Nil))).
Lemma candidate_340: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (Cons n (rotate (len x) Nil))) x)   (lfappend y (Cons n x)).
Lemma candidate_203: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (rotate (len x) (Cons n Nil))) x)   (lfappend y (Cons n x)).
Lemma candidate_202: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (rotate (len y) (Cons n Nil))) x)   (lfappend y (Cons n x)).
Lemma candidate_82: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x)   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
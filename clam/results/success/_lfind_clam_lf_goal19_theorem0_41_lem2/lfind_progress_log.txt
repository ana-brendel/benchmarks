File Information
- File name: goal19
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal19_theorem0_41_lem2
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal19_theorem0_41_lem2
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (lfappend (rev (rev x0)) y0) (rev (rev (lfappend x0 y0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend x y) (rev (rev (lfappend x y)))

* Hypothesis:
x : lst
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst

* Terms:
x : lst
rev (lfappend x y) : lst
lst : Set
y : lst
lfappend x y : lst
@eq lst (lfappend x y) (rev (rev (lfappend x y))) : Prop
rev (rev (lfappend x y)) : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lfappend x y
lf1 : lst = rev (rev (lfappend x y))
lf2 : lst = rev (lfappend x y)

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf3 (rev lf2).
Lemma conj4: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma conj5: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj7: forall (lf2 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (rev lf2).
Lemma conj8: forall (x : lst) (y : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).


<---VALIDITY CHECKS--->
Time elapsed: 45 seconds
Valid:
Lemma conj8: forall (x : lst) (y : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).
Lemma conj4: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).

Invalid:
Lemma conj7: forall (lf2 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (rev lf2).
Lemma conj5: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf3 (rev lf2).
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 46 seconds
Generalizations:
Lemma conj7: forall (lf2 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (rev lf2).
Lemma conj5: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf3 (rev lf2).
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 56 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf3 lf1.
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf3 (rev lf2).
Lemma conj5: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj7: forall (lf2 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (rev lf2).


<---CREATE SKETCHES--->
Time elapsed: 56 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst lf3 (##hole##)
Sketch conj3_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj5_sketch0 : @eq lst (##hole##) lf1
Sketch conj5_term_sketch0 : @eq lst (lfappend x y) (##hole##)
Sketch conj7_sketch0 : @eq lst (lfappend x y) (##hole##)
Sketch conj7_sketch1 : @eq lst (##hole##) (rev lf2)
Sketch conj7_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj7_term_sketch1 : @eq lst (lfappend x y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 127 seconds
Problems per Sketch:
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj7_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj7_term_sketch1 --> Problem  synth_4
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj5_term_sketch0 --> Problem  synth_4
Sketch conj7_sketch0 --> Problem  synth_4


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 131 seconds

Problem: synth_3
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_4
 lfappend (rev (rev x)) y
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_1
 rev (lfappend (rev lf3) Nil)
 lfappend (rev (rev lf3)) Nil
 lfappend (lfappend lf3 Nil) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_2
 lfappend (rev (lfappend lf2 Nil)) Nil
 lfappend (lfappend (rev lf2) Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 rev lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 132 seconds
Lemmas:
Lemma candidate_1: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).
Lemma candidate_2: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_3: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_4: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_5: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_6: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_7: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_8: forall (lf3 : lst), @eq lst lf3 (lf3).
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_13: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_14: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_15: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_17: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_20: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_21: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_22: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_23: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_24: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_25: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_26: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_27: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_28: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_29: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_30: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_31: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_32: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_33: forall (lf2 : lst), @eq lst (lfappend (rev (lfappend lf2 Nil)) Nil) (rev lf2).
Lemma candidate_34: forall (lf2 : lst), @eq lst (lfappend (lfappend (rev lf2) Nil) Nil) (rev lf2).
Lemma candidate_35: forall (lf2 : lst), @eq lst (rev (rev (rev lf2))) (rev lf2).
Lemma candidate_36: forall (lf2 : lst), @eq lst (rev (lfappend lf2 Nil)) (rev lf2).
Lemma candidate_37: forall (lf2 : lst), @eq lst (lfappend (rev lf2) Nil) (rev lf2).
Lemma candidate_38: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_39: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_40: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_41: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_42: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_43: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_44: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_45: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_46: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_47: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_48: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_49: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_50: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 302 seconds
Duplicates removed: 21
Filtered by Quickchick: 0
Filtered by script: 4
Remaining: 25

Lemmas: 
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_2: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_19: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_7: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_35: forall (lf2 : lst), @eq lst (rev (rev (rev lf2))) (rev lf2).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_37: forall (lf2 : lst), @eq lst (lfappend (rev lf2) Nil) (rev lf2).
Lemma candidate_36: forall (lf2 : lst), @eq lst (rev (lfappend lf2 Nil)) (rev lf2).
Lemma candidate_16: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_15: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_13: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_4: forall (lf3 : lst), @eq lst lf3 (lfappend (rev (rev lf3)) Nil).
Lemma candidate_3: forall (lf3 : lst), @eq lst lf3 (rev (lfappend (rev lf3) Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_5: forall (lf3 : lst), @eq lst lf3 (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_24: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_21: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_25: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_23: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_22: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_34: forall (lf2 : lst), @eq lst (lfappend (lfappend (rev lf2) Nil) Nil) (rev lf2).
Lemma candidate_33: forall (lf2 : lst), @eq lst (lfappend (rev (lfappend lf2 Nil)) Nil) (rev lf2).
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
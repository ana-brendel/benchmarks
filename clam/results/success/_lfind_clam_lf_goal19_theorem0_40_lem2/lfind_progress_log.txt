File Information
- File name: goal19
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal19_theorem0_40_lem2
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal19_theorem0_40_lem2
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (lfappend (rev (rev x0)) y0) (rev (rev (lfappend x0 y0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y)))

* Hypothesis:
x : lst
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst

* Terms:
x : lst
@eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))) : Prop
rev (lfappend x y) : lst
rev (rev x) : lst
lst : Set
y : lst
lfappend x y : lst
rev (rev (lfappend x y)) : lst
rev x : lst
lfappend (rev (rev x)) y : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev (lfappend x y)
lf1 : lst = rev (rev (lfappend x y))
lf4 : lst = lfappend x y
lf5 : lst = rev (rev x)
lf2 : lst = lfappend (rev (rev x)) y
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend lf5 y) lf1.
Lemma conj7: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) lf1.
Lemma conj8: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) lf1.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (rev lf3).
Lemma conj19: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf5 y) (rev lf3).
Lemma conj23: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev lf6) y) (rev lf3).
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev x)) y) (rev lf3).
Lemma conj49: forall (lf2 : lst) (lf4 : lst), @eq lst lf2 (rev (rev lf4)).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev lf4)).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev lf4)).
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev lf4)).
Lemma conj57: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (rev (rev (lfappend x y))).
Lemma conj59: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend x y))).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend x y))).
Lemma conj64: forall (x : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).


<---VALIDITY CHECKS--->
Time elapsed: 86 seconds
Valid:
Lemma conj64: forall (x : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend x y))).
Lemma conj59: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend x y))).
Lemma conj57: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (rev (rev (lfappend x y))).
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev lf4)).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev lf4)).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev lf4)).
Lemma conj49: forall (lf2 : lst) (lf4 : lst), @eq lst lf2 (rev (rev lf4)).
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev x)) y) (rev lf3).
Lemma conj23: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev lf6) y) (rev lf3).
Lemma conj19: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf5 y) (rev lf3).
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (rev lf3).
Lemma conj8: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) lf1.
Lemma conj7: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) lf1.
Lemma conj3: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend lf5 y) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 86 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend x y))).
Lemma conj59: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend x y))).
Lemma conj57: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (rev (rev (lfappend x y))).
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev lf4)).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev lf4)).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev lf4)).
Lemma conj49: forall (lf2 : lst) (lf4 : lst), @eq lst lf2 (rev (rev lf4)).
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev x)) y) (rev lf3).
Lemma conj23: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev lf6) y) (rev lf3).
Lemma conj19: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf5 y) (rev lf3).
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (rev lf3).
Lemma conj8: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) lf1.
Lemma conj7: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) lf1.
Lemma conj3: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend lf5 y) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 110 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend lf5 y) lf1.
Lemma conj7: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) lf1.
Lemma conj8: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) lf1.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (rev lf3).
Lemma conj19: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf5 y) (rev lf3).
Lemma conj23: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev lf6) y) (rev lf3).
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev x)) y) (rev lf3).
Lemma conj49: forall (lf2 : lst) (lf4 : lst), @eq lst lf2 (rev (rev lf4)).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev lf4)).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev lf4)).
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev lf4)).
Lemma conj57: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (rev (rev (lfappend x y))).
Lemma conj59: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend x y))).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend x y))).


<---CREATE SKETCHES--->
Time elapsed: 110 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst (##hole##) lf1
Sketch conj3_term_sketch0 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj7_sketch0 : @eq lst (lfappend (##hole##) y) lf1
Sketch conj7_sketch1 : @eq lst (##hole##) lf1
Sketch conj7_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj7_term_sketch1 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj8_sketch0 : @eq lst (lfappend (##hole##) y) lf1
Sketch conj8_sketch1 : @eq lst (lfappend (rev (##hole##)) y) lf1
Sketch conj8_sketch2 : @eq lst (##hole##) lf1
Sketch conj8_term_sketch0 : @eq lst (rev (rev x)) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (rev x) (##hole##)
Sketch conj8_term_sketch2 : @eq lst (lfappend (rev (rev x)) y) (##hole##)
Sketch conj17_sketch0 : @eq lst lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj19_sketch0 : @eq lst (##hole##) (rev lf3)
Sketch conj19_sketch1 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj19_term_sketch0 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj23_sketch0 : @eq lst (lfappend (##hole##) y) (rev lf3)
Sketch conj23_sketch1 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj23_sketch2 : @eq lst (##hole##) (rev lf3)
Sketch conj23_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (rev lf3) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj24_sketch0 : @eq lst (lfappend (rev (rev x)) y) (##hole##)
Sketch conj24_sketch1 : @eq lst (lfappend (##hole##) y) (rev lf3)
Sketch conj24_sketch2 : @eq lst (lfappend (rev (##hole##)) y) (rev lf3)
Sketch conj24_sketch3 : @eq lst (##hole##) (rev lf3)
Sketch conj24_term_sketch0 : @eq lst (rev lf3) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj24_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj24_term_sketch3 : @eq lst (lfappend (rev (rev x)) y) (##hole##)
Sketch conj49_sketch0 : @eq lst lf2 (##hole##)
Sketch conj49_sketch1 : @eq lst lf2 (rev (##hole##))
Sketch conj49_term_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (rev lf4) (##hole##)
Sketch conj51_sketch0 : @eq lst (##hole##) (rev (rev lf4))
Sketch conj51_sketch1 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj51_sketch2 : @eq lst (lfappend lf5 y) (rev (##hole##))
Sketch conj51_term_sketch0 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (rev lf4) (##hole##)
Sketch conj55_sketch0 : @eq lst (lfappend (##hole##) y) (rev (rev lf4))
Sketch conj55_sketch1 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj55_sketch2 : @eq lst (##hole##) (rev (rev lf4))
Sketch conj55_sketch3 : @eq lst (lfappend (rev lf6) y) (rev (##hole##))
Sketch conj55_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj56_sketch0 : @eq lst (lfappend (rev (rev x)) y) (##hole##)
Sketch conj56_sketch1 : @eq lst (lfappend (##hole##) y) (rev (rev lf4))
Sketch conj56_sketch2 : @eq lst (lfappend (rev (rev x)) y) (rev (##hole##))
Sketch conj56_sketch3 : @eq lst (lfappend (rev (##hole##)) y) (rev (rev lf4))
Sketch conj56_sketch4 : @eq lst (##hole##) (rev (rev lf4))
Sketch conj56_term_sketch0 : @eq lst (rev (rev lf4)) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj56_term_sketch2 : @eq lst (rev lf4) (##hole##)
Sketch conj56_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj56_term_sketch4 : @eq lst (lfappend (rev (rev x)) y) (##hole##)
Sketch conj57_sketch0 : @eq lst lf2 (rev (##hole##))
Sketch conj57_sketch1 : @eq lst lf2 (rev (rev (##hole##)))
Sketch conj57_sketch2 : @eq lst lf2 (##hole##)
Sketch conj57_term_sketch0 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj57_term_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj57_term_sketch2 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj59_sketch0 : @eq lst (##hole##) (rev (rev (lfappend x y)))
Sketch conj59_sketch1 : @eq lst (lfappend lf5 y) (rev (##hole##))
Sketch conj59_sketch2 : @eq lst (lfappend lf5 y) (rev (rev (##hole##)))
Sketch conj59_sketch3 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj59_term_sketch0 : @eq lst (lfappend lf5 y) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (rev (rev (lfappend x y))) (##hole##)
Sketch conj63_sketch0 : @eq lst (lfappend (##hole##) y) (rev (rev (lfappend x y)))
Sketch conj63_sketch1 : @eq lst (lfappend (rev lf6) y) (rev (##hole##))
Sketch conj63_sketch2 : @eq lst (lfappend (rev lf6) y) (rev (rev (##hole##)))
Sketch conj63_sketch3 : @eq lst (##hole##) (rev (rev (lfappend x y)))
Sketch conj63_sketch4 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj63_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend (rev lf6) y) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (rev (rev (lfappend x y))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 940 seconds
Problems per Sketch:
Sketch conj7_sketch1 --> Problem  synth_1
Sketch conj59_term_sketch2 --> Problem  synth_9
Sketch conj63_sketch4 --> Problem  synth_5
Sketch conj23_sketch0 --> Problem  synth_12
Sketch conj57_term_sketch2 --> Problem  synth_9
Sketch conj59_term_sketch1 --> Problem  synth_20
Sketch conj8_sketch1 --> Problem  synth_6
Sketch conj59_sketch1 --> Problem  synth_17
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj56_sketch4 --> Problem  synth_15
Sketch conj24_sketch2 --> Problem  synth_13
Sketch conj24_sketch1 --> Problem  synth_12
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj63_term_sketch0 --> Problem  synth_4
Sketch conj56_term_sketch0 --> Problem  synth_15
Sketch conj55_sketch3 --> Problem  synth_19
Sketch conj24_sketch0 --> Problem  synth_9
Sketch conj7_term_sketch1 --> Problem  synth_5
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj23_sketch1 --> Problem  synth_5
Sketch conj55_sketch1 --> Problem  synth_5
Sketch conj59_sketch3 --> Problem  synth_2
Sketch conj63_term_sketch4 --> Problem  synth_9
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_2
Sketch conj23_term_sketch2 --> Problem  synth_5
Sketch conj24_term_sketch0 --> Problem  synth_11
Sketch conj7_term_sketch0 --> Problem  synth_4
Sketch conj19_term_sketch1 --> Problem  synth_11
Sketch conj57_term_sketch0 --> Problem  synth_20
Sketch conj51_term_sketch2 --> Problem  synth_16
Sketch conj8_sketch0 --> Problem  synth_3
Sketch conj51_sketch0 --> Problem  synth_15
Sketch conj23_term_sketch0 --> Problem  synth_4
Sketch conj56_term_sketch3 --> Problem  synth_8
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj8_term_sketch2 --> Problem  synth_9
Sketch conj24_term_sketch1 --> Problem  synth_7
Sketch conj63_term_sketch1 --> Problem  synth_20
Sketch conj24_sketch3 --> Problem  synth_11
Sketch conj57_sketch2 --> Problem  synth_10
Sketch conj51_term_sketch1 --> Problem  synth_15
Sketch conj51_term_sketch0 --> Problem  synth_2
Sketch conj56_sketch3 --> Problem  synth_21
Sketch conj55_term_sketch0 --> Problem  synth_4
Sketch conj23_sketch2 --> Problem  synth_11
Sketch conj19_sketch0 --> Problem  synth_11
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj49_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_5
Sketch conj55_term_sketch1 --> Problem  synth_15
Sketch conj56_term_sketch4 --> Problem  synth_9
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_9
Sketch conj49_term_sketch1 --> Problem  synth_16
Sketch conj8_sketch2 --> Problem  synth_1
Sketch conj23_term_sketch1 --> Problem  synth_11
Sketch conj63_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch0 --> Problem  synth_22
Sketch conj55_term_sketch3 --> Problem  synth_16
Sketch conj63_sketch3 --> Problem  synth_9
Sketch conj59_term_sketch0 --> Problem  synth_2
Sketch conj59_term_sketch3 --> Problem  synth_9
Sketch conj51_sketch1 --> Problem  synth_2
Sketch conj55_sketch0 --> Problem  synth_18
Sketch conj63_sketch1 --> Problem  synth_19
Sketch conj56_term_sketch2 --> Problem  synth_16
Sketch conj57_sketch1 --> Problem  synth_10
Sketch conj56_term_sketch1 --> Problem  synth_7
Sketch conj56_sketch2 --> Problem  synth_20
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj57_term_sketch1 --> Problem  synth_9
Sketch conj24_term_sketch2 --> Problem  synth_8
Sketch conj56_sketch0 --> Problem  synth_9
Sketch conj57_sketch0 --> Problem  synth_14
Sketch conj56_sketch1 --> Problem  synth_18
Sketch conj24_term_sketch3 --> Problem  synth_9
Sketch conj55_term_sketch2 --> Problem  synth_5
Sketch conj51_sketch2 --> Problem  synth_17
Sketch conj63_term_sketch2 --> Problem  synth_9
Sketch conj55_sketch2 --> Problem  synth_15
Sketch conj49_sketch1 --> Problem  synth_14
Sketch conj49_term_sketch0 --> Problem  synth_15


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1046 seconds

Problem: synth_22
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_20
 lfappend (rev y) (rev (lfappend x Nil))
 lfappend (rev y) (lfappend (rev x) Nil)
 rev (lfappend x (rev (rev y)))
 rev (lfappend x (lfappend y Nil))
 lfappend (rev y) (rev x)
 rev (lfappend x y)

Problem: synth_18

Problem: synth_17
 lfappend (rev y) (rev (lfappend lf5 Nil))
 lfappend (rev y) (lfappend (rev lf5) Nil)
 rev (lfappend lf5 (rev (rev y)))
 rev (lfappend lf5 (lfappend y Nil))
 lfappend (rev y) (rev lf5)
 rev (lfappend lf5 y)

Problem: synth_21

Problem: synth_9
 lfappend (rev (rev x)) y
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_13

Problem: synth_6

Problem: synth_11
 lfappend (rev (lfappend lf3 Nil)) Nil
 lfappend (lfappend (rev lf3) Nil) Nil
 rev (rev (rev lf3))
 rev (lfappend lf3 Nil)
 lfappend (rev lf3) Nil
 rev lf3

Problem: synth_7
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_4
 lfappend (rev (lfappend lf6 Nil)) Nil
 lfappend (lfappend (rev lf6) Nil) Nil
 rev (rev (rev lf6))
 rev (lfappend lf6 Nil)
 lfappend (rev lf6) Nil
 rev lf6

Problem: synth_1
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_16
 lfappend (rev (lfappend lf4 Nil)) Nil
 lfappend (lfappend (rev lf4) Nil) Nil
 rev (rev (rev lf4))
 rev (lfappend lf4 Nil)
 lfappend (rev lf4) Nil
 rev lf4

Problem: synth_19
 rev (lfappend (rev lf6) (rev (rev y)))
 rev (lfappend (rev lf6) (lfappend y Nil))
 rev (lfappend (rev lf6) y)
 lfappend (rev y) (rev (rev lf6))
 lfappend (rev y) (lfappend lf6 Nil)
 lfappend (rev y) lf6

Problem: synth_15
 rev (lfappend (rev lf4) Nil)
 lfappend (rev (rev lf4)) Nil
 lfappend (lfappend lf4 Nil) Nil
 rev (rev lf4)
 lfappend lf4 Nil
 lf4

Problem: synth_14
 lfappend (rev (lfappend lf2 Nil)) Nil
 lfappend (lfappend (rev lf2) Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 rev lf2

Problem: synth_10
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_8
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_3

Problem: synth_12

Problem: synth_5
 rev (lfappend (rev y) (rev (rev lf6)))
 rev (lfappend (rev y) (lfappend lf6 Nil))
 rev (lfappend (rev y) lf6)
 lfappend (rev lf6) (rev (rev y))
 lfappend (rev lf6) (lfappend y Nil)
 lfappend (rev lf6) y

Problem: synth_2
 lfappend (rev (rev lf5)) y
 lfappend (lfappend lf5 Nil) y
 lfappend (lfappend lf5 y) Nil
 lfappend lf5 (rev (rev y))
 lfappend lf5 (lfappend y Nil)
 lfappend lf5 y

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1047 seconds
Lemmas:
Lemma candidate_1: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_9: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_10: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_11: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_12: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_13: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_14: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_15: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_17: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_20: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_21: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_22: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_23: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_24: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_25: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_26: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_27: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_28: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_29: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_30: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_31: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_32: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_33: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_34: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_35: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_36: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_37: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_38: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_39: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_40: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_41: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_42: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_43: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_44: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_45: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_46: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_47: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_48: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_49: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_50: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) y).
Lemma candidate_51: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_52: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_53: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_54: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_55: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_56: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_57: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_58: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_59: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_60: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_61: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_62: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_63: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_64: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_65: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_66: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_67: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_68: forall (lf3 : lst), @eq lst (lfappend (rev (lfappend lf3 Nil)) Nil) (rev lf3).
Lemma candidate_69: forall (lf3 : lst), @eq lst (lfappend (lfappend (rev lf3) Nil) Nil) (rev lf3).
Lemma candidate_70: forall (lf3 : lst), @eq lst (rev (rev (rev lf3))) (rev lf3).
Lemma candidate_71: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend (rev lf3) Nil) (rev lf3).
Lemma candidate_73: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_74: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_75: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_76: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_77: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_78: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_79: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_80: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_81: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_82: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_83: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_84: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_85: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_86: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_87: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_88: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_89: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_90: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_91: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_92: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_93: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_94: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_95: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_96: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_97: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_98: forall (lf3 : lst), @eq lst (lfappend (rev (lfappend lf3 Nil)) Nil) (rev lf3).
Lemma candidate_99: forall (lf3 : lst), @eq lst (lfappend (lfappend (rev lf3) Nil) Nil) (rev lf3).
Lemma candidate_100: forall (lf3 : lst), @eq lst (rev (rev (rev lf3))) (rev lf3).
Lemma candidate_101: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_102: forall (lf3 : lst), @eq lst (lfappend (rev lf3) Nil) (rev lf3).
Lemma candidate_103: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_104: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_105: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_106: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_107: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_108: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_109: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_110: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_111: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_112: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_113: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_114: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_115: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_116: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_117: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_118: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_119: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_120: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_121: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_122: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) y).
Lemma candidate_123: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_124: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_125: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_126: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_127: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_128: forall (lf3 : lst), @eq lst (lfappend (rev (lfappend lf3 Nil)) Nil) (rev lf3).
Lemma candidate_129: forall (lf3 : lst), @eq lst (lfappend (lfappend (rev lf3) Nil) Nil) (rev lf3).
Lemma candidate_130: forall (lf3 : lst), @eq lst (rev (rev (rev lf3))) (rev lf3).
Lemma candidate_131: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_132: forall (lf3 : lst), @eq lst (lfappend (rev lf3) Nil) (rev lf3).
Lemma candidate_133: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_134: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_135: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_136: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_137: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_138: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_139: forall (lf3 : lst), @eq lst (rev lf3) (rev lf3).
Lemma candidate_140: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_141: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_142: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_143: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_144: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_145: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_146: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_147: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_148: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_149: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_150: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_151: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_152: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) y).
Lemma candidate_153: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_154: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_155: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_156: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_157: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_158: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_159: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_160: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_161: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_162: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_163: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_164: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev (lfappend lf2 Nil)) Nil)).
Lemma candidate_165: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (lfappend (rev lf2) Nil) Nil)).
Lemma candidate_166: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (rev lf2)))).
Lemma candidate_167: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend lf2 Nil))).
Lemma candidate_168: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_169: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_170: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_171: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_172: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_173: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_174: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_175: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_176: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_177: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_178: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_179: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_180: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_181: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_182: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) (rev (rev lf4)).
Lemma candidate_183: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) (rev (rev lf4)).
Lemma candidate_184: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) (rev (rev lf4)).
Lemma candidate_185: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_186: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_187: forall (lf4 : lst), @eq lst (lf4) (rev (rev lf4)).
Lemma candidate_188: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_189: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_190: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_191: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_192: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_193: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_194: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev (lfappend lf5 Nil)))).
Lemma candidate_195: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (lfappend (rev lf5) Nil))).
Lemma candidate_196: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (rev (rev y))))).
Lemma candidate_197: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (lfappend y Nil)))).
Lemma candidate_198: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev lf5))).
Lemma candidate_199: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 y))).
Lemma candidate_200: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_201: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_202: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_203: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_204: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_205: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_206: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_207: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_208: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_209: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_210: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_211: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_212: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_213: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_214: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_215: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_216: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_217: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_218: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_219: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_220: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_221: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_222: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_223: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_224: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) (rev (rev lf4)).
Lemma candidate_225: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) (rev (rev lf4)).
Lemma candidate_226: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) (rev (rev lf4)).
Lemma candidate_227: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_228: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_229: forall (lf4 : lst), @eq lst (lf4) (rev (rev lf4)).
Lemma candidate_230: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) (rev (rev y))))).
Lemma candidate_231: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (lfappend (rev lf6) (lfappend y Nil)))).
Lemma candidate_232: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) y))).
Lemma candidate_233: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_234: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_235: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_236: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_237: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_238: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_239: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_240: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_241: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_242: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_243: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_244: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_245: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_246: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_247: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_248: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_249: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_250: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_251: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_252: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_253: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_254: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_255: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_256: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_257: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_258: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_259: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_260: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) y).
Lemma candidate_261: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_262: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_263: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_264: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_265: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_266: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y)   (rev (lfappend (rev y) (rev (lfappend x Nil)))).
Lemma candidate_267: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y)   (rev (lfappend (rev y) (lfappend (rev x) Nil))).
Lemma candidate_268: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x (rev (rev y))))).
Lemma candidate_269: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x (lfappend y Nil)))).
Lemma candidate_270: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (lfappend (rev y) (rev x))).
Lemma candidate_271: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).
Lemma candidate_272: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) (rev (rev lf4)).
Lemma candidate_273: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) (rev (rev lf4)).
Lemma candidate_274: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) (rev (rev lf4)).
Lemma candidate_275: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_276: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_277: forall (lf4 : lst), @eq lst (lf4) (rev (rev lf4)).
Lemma candidate_278: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_279: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_280: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_281: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (rev lf4)).
Lemma candidate_282: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_283: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_284: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_285: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_286: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_287: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_288: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_289: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_290: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_291: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_292: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_293: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_294: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_295: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_296: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_297: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_298: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_299: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_300: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_301: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_302: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (rev (rev x)) y).
Lemma candidate_303: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_304: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_305: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_306: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_307: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_308: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev (lfappend lf2 Nil)) Nil)).
Lemma candidate_309: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (lfappend (rev lf2) Nil) Nil)).
Lemma candidate_310: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (rev lf2)))).
Lemma candidate_311: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend lf2 Nil))).
Lemma candidate_312: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_313: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_314: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (lfappend (rev lf2) Nil)))).
Lemma candidate_315: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend (rev (rev lf2)) Nil))).
Lemma candidate_316: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend (lfappend lf2 Nil) Nil))).
Lemma candidate_317: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (rev lf2)))).
Lemma candidate_318: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend lf2 Nil))).
Lemma candidate_319: forall (lf2 : lst), @eq lst lf2 (rev (rev (lf2))).
Lemma candidate_320: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_321: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_322: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_323: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_324: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_325: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_326: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_327: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_328: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_329: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_330: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_331: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_332: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_333: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_334: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_335: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_336: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_337: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_338: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_339: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_340: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_341: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_342: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_343: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_344: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).
Lemma candidate_345: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_346: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (rev (rev (lfappend x y))).
Lemma candidate_347: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (rev (rev (lfappend x y))).
Lemma candidate_348: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (rev (rev (lfappend x y))).
Lemma candidate_349: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).
Lemma candidate_350: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev (lfappend lf5 Nil)))).
Lemma candidate_351: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (lfappend (rev lf5) Nil))).
Lemma candidate_352: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (rev (rev y))))).
Lemma candidate_353: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (lfappend y Nil)))).
Lemma candidate_354: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev lf5))).
Lemma candidate_355: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 y))).
Lemma candidate_356: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (rev (rev lf5)) y))).
Lemma candidate_357: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (lfappend lf5 Nil) y))).
Lemma candidate_358: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (lfappend lf5 y) Nil))).
Lemma candidate_359: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (rev (rev y))))).
Lemma candidate_360: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (lfappend y Nil)))).
Lemma candidate_361: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 y))).
Lemma candidate_362: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_363: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_364: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_365: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_366: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_367: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_368: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_369: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_370: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_371: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_372: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_373: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 y).
Lemma candidate_374: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_375: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_376: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_377: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_378: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_379: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_380: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_381: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_382: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_383: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_384: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_385: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_386: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_387: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_388: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_389: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_390: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_391: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_392: forall (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend (rev x) Nil)) y) (rev (rev (lfappend x y))).
Lemma candidate_393: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev x)) Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_394: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend x Nil) Nil) y)   (rev (rev (lfappend x y))).
Lemma candidate_395: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).
Lemma candidate_396: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_397: forall (y : lst) (x : lst), @eq lst (lfappend (x) y) (rev (rev (lfappend x y))).
Lemma candidate_398: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) (rev (rev y))))).
Lemma candidate_399: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (lfappend (rev lf6) (lfappend y Nil)))).
Lemma candidate_400: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) y))).
Lemma candidate_401: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_402: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_403: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_404: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (rev (lfappend (rev y) (rev (rev lf6)))))).
Lemma candidate_405: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (rev (lfappend (rev y) (lfappend lf6 Nil))))).
Lemma candidate_406: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (rev (lfappend (rev y) lf6)))).
Lemma candidate_407: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) (rev (rev y))))).
Lemma candidate_408: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (lfappend (rev lf6) (lfappend y Nil)))).
Lemma candidate_409: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) y))).
Lemma candidate_410: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))).
Lemma candidate_411: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_412: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (rev (rev (lfappend x y))).
Lemma candidate_413: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (rev (rev (lfappend x y))).
Lemma candidate_414: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (rev (rev (lfappend x y))).
Lemma candidate_415: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).
Lemma candidate_416: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_417: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_418: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_419: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_420: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_421: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_422: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_423: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_424: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_425: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_426: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_427: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_428: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_429: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_430: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_431: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_432: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_433: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_434: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_435: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_436: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_437: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_438: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_439: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_440: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_441: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_442: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_443: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_444: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_445: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) y).
Lemma candidate_446: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) y).
Lemma candidate_447: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_448: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_449: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_450: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_451: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1644 seconds
Duplicates removed: 320
Filtered by Quickchick: 0
Filtered by script: 14
Remaining: 117

Lemmas: 
Lemma candidate_43: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_59: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_319: forall (lf2 : lst), @eq lst lf2 (rev (rev (lf2))).
Lemma candidate_187: forall (lf4 : lst), @eq lst (lf4) (rev (rev lf4)).
Lemma candidate_175: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lf4).
Lemma candidate_60: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_46: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_48: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_47: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_42: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_178: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_166: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (rev lf2)))).
Lemma candidate_70: forall (lf3 : lst), @eq lst (rev (rev (rev lf3))) (rev lf3).
Lemma candidate_64: forall (lf3 : lst), @eq lst (rev lf3) (rev (rev (rev lf3))).
Lemma candidate_22: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_186: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) (rev (rev lf4)).
Lemma candidate_180: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_179: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_174: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend lf4 Nil).
Lemma candidate_167: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend lf2 Nil))).
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend (rev lf3) Nil) (rev lf3).
Lemma candidate_71: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_66: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev lf3) Nil).
Lemma candidate_65: forall (lf3 : lst), @eq lst (rev lf3) (rev (lfappend lf3 Nil)).
Lemma candidate_57: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_56: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_24: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_23: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_3: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_58: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_349: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (rev (lfappend x y))).
Lemma candidate_343: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x y).
Lemma candidate_335: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_332: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_55: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x y).
Lemma candidate_39: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_38: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_397: forall (y : lst) (x : lst), @eq lst (lfappend (x) y) (rev (rev (lfappend x y))).
Lemma candidate_336: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_334: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_333: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_199: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 y))).
Lemma candidate_45: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_44: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_40: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_11: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (rev (rev y))).
Lemma candidate_8: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (rev (rev lf5)) y).
Lemma candidate_315: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend (rev (rev lf2)) Nil))).
Lemma candidate_314: forall (lf2 : lst), @eq lst lf2 (rev (rev (rev (lfappend (rev lf2) Nil)))).
Lemma candidate_183: forall (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) Nil) (rev (rev lf4)).
Lemma candidate_182: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) (rev (rev lf4)).
Lemma candidate_171: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (rev (rev lf4)) Nil).
Lemma candidate_170: forall (lf4 : lst), @eq lst (rev (rev lf4)) (rev (lfappend (rev lf4) Nil)).
Lemma candidate_330: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_12: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend lf5 (lfappend y Nil)).
Lemma candidate_10: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 y) Nil).
Lemma candidate_9: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend (lfappend lf5 Nil) y).
Lemma candidate_316: forall (lf2 : lst), @eq lst lf2 (rev (rev (lfappend (lfappend lf2 Nil) Nil))).
Lemma candidate_184: forall (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) Nil) (rev (rev lf4)).
Lemma candidate_177: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_176: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_172: forall (lf4 : lst), @eq lst (rev (rev lf4)) (lfappend (lfappend lf4 Nil) Nil).
Lemma candidate_165: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (lfappend (rev lf2) Nil) Nil)).
Lemma candidate_164: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev (lfappend lf2 Nil)) Nil)).
Lemma candidate_69: forall (lf3 : lst), @eq lst (lfappend (lfappend (rev lf3) Nil) Nil) (rev lf3).
Lemma candidate_68: forall (lf3 : lst), @eq lst (lfappend (rev (lfappend lf3 Nil)) Nil) (rev lf3).
Lemma candidate_63: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_62: forall (lf3 : lst), @eq lst (rev lf3) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_21: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_20: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_198: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev lf5))).
Lemma candidate_28: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) lf6)).
Lemma candidate_347: forall (y : lst) (x : lst), @eq lst (lfappend x (rev (rev y))) (rev (rev (lfappend x y))).
Lemma candidate_341: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (rev (rev y))).
Lemma candidate_328: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_53: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (rev (rev y))).
Lemma candidate_348: forall (y : lst) (x : lst), @eq lst (lfappend x (lfappend y Nil)) (rev (rev (lfappend x y))).
Lemma candidate_346: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x y) Nil) (rev (rev (lfappend x y))).
Lemma candidate_345: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_342: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend x (lfappend y Nil)).
Lemma candidate_340: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x y) Nil).
Lemma candidate_339: forall (y : lst) (x : lst), @eq lst (rev (rev (lfappend x y))) (lfappend (lfappend x Nil) y).
Lemma candidate_329: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_54: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend x (lfappend y Nil)).
Lemma candidate_52: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x y) Nil).
Lemma candidate_51: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (lfappend (lfappend x Nil) y).
Lemma candidate_356: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (rev (rev lf5)) y))).
Lemma candidate_232: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) y))).
Lemma candidate_196: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (rev (rev y))))).
Lemma candidate_29: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_270: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (lfappend (rev y) (rev x))).
Lemma candidate_358: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (lfappend lf5 y) Nil))).
Lemma candidate_357: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend (lfappend lf5 Nil) y))).
Lemma candidate_197: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (rev (lfappend lf5 (lfappend y Nil)))).
Lemma candidate_30: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_327: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_326: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_406: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (rev (lfappend (rev y) lf6)))).
Lemma candidate_26: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_268: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x (rev (rev y))))).
Lemma candidate_195: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (lfappend (rev lf5) Nil))).
Lemma candidate_194: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (rev (lfappend (rev y) (rev (lfappend lf5 Nil)))).
Lemma candidate_27: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_393: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev x)) Nil) y) (rev (rev (lfappend x y))).
Lemma candidate_392: forall (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend (rev x) Nil)) y) (rev (rev (lfappend x y))).
Lemma candidate_269: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x (lfappend y Nil)))).
Lemma candidate_230: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (rev (rev (lfappend (rev lf6) (rev (rev y))))).
Lemma candidate_394: forall (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend x Nil) Nil) y)   (rev (rev (lfappend x y))).
Lemma candidate_231: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (lfappend (rev lf6) (lfappend y Nil)))).
Lemma candidate_267: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y)   (rev (lfappend (rev y) (lfappend (rev x) Nil))).
Lemma candidate_266: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) y)   (rev (lfappend (rev y) (rev (lfappend x Nil)))).
Lemma candidate_404: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (rev (lfappend (rev y) (rev (rev lf6)))))).
Lemma candidate_405: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y)   (rev (rev (rev (lfappend (rev y) (lfappend lf6 Nil))))).
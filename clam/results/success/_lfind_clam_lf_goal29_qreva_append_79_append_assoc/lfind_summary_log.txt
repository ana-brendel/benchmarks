LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal29_qreva_append_79_append_assoc

Number of Lemmas: 1676
Number of Lemmas (after duplicates removed): 341
Number of Lemmas (after QuickChick used to filter): 220
* Number of Candidate Lemmas: 185

Time until ranking: 11591
Time to complete: 21324

Stuck state true independent of hypotheses: true

Category 1:
Count = 4

Lemma candidate_441: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (lfappend lf5 lf6)).
Lemma candidate_4: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_459: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend lf5 (Cons n0 y))).
Lemma candidate_3: forall (n0 : natural) (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).

Category 2:
Count = 27

Lemma candidate_1011: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_218: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_236: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_1057: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 x) lf6) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1015: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva (qreva lf5 x) lf6).
Lemma candidate_1061: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva x (lfappend lf5 lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1019: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (lfappend lf5 lf6)).
Lemma candidate_1451: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (qreva x (Cons n Nil)) lf6).
Lemma candidate_1356: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n lf6)) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1227: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_599: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_1059: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (lfappend lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1017: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (lfappend lf5 lf6)).
Lemma candidate_1444: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (qreva (rev lf5) lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1226: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1033: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva (qreva lf5 x) (Cons n0 y)).
Lemma candidate_1037: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend lf5 (Cons n0 y))).
Lemma candidate_1505: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1401: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1240: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1036: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_620: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_458: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_1511: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1510: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1239: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).

Category 3 (provable):
Count = 12

Lemma candidate_63: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_9: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_27: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_91: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_13: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_471: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_600: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (lfappend lf7 Nil) (Cons n Nil)).
Lemma candidate_501: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_797: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_42: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_839: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) (Cons n0 y)).

Category 3 (not provable):
Count = 142

Lemma candidate_62: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_8: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_225: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_61: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_60: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_7: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_222: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_224: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_223: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_59: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_50: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_221: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_26: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_51: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_434: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_93: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) lf6) (lfappend lf3 lf6).
Lemma candidate_69: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_15: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_48: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_47: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_24: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_23: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_433: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_92: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (rev lf3))) (lfappend lf3 lf6).
Lemma candidate_68: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_14: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_216: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_90: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (rev (rev lf6))) (lfappend lf3 lf6).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_12: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_49: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_217: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_25: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_56: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_89: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_11: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_123: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (qreva (rev lf3) (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_81: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_57: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_603: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_545: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_33: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_54: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_215: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_122: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (qreva y (Cons n0 (rev lf3)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_80: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_601: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (qreva lf7 Nil) (Cons n Nil)).
Lemma candidate_32: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_119: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (rev (rev y)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_77: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_233: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_605: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_29: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_120: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (lfappend y Nil))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_78: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_53: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_1209: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1208: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_235: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_234: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_788: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_469: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (lfappend lf5 lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_439: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (qreva (rev lf7) (lfappend lf5 lf6)).
Lemma candidate_30: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_121: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (lfappend (rev y) (Cons n0 (rev lf3))))   (lfappend lf3 (Cons n0 y)).
Lemma candidate_79: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_800: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (rev lf7) (Cons n Nil)) lf6).
Lemma candidate_723: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_602: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)).
Lemma candidate_598: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_31: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_45: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_1354: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1225: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1210: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_785: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (rev (qreva lf6 (rev lf5))))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_1211: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1093: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (qreva lf5 x) (Cons n0 y))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_798: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_722: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_597: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_43: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_1351: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n (rev (rev lf6))))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1222: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1097: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_802: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) lf6).
Lemma candidate_719: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n (rev (rev lf6))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_594: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_257: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_55: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_41: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_1448: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) lf6).
Lemma candidate_1447: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) lf6).
Lemma candidate_1441: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (rev (qreva lf6 (rev lf5))))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1353: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1352: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1224: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1223: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1096: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_720: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_595: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_260: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_259: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_258: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_500: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_799: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) lf6).
Lemma candidate_721: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_596: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_842: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (rev lf7) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_756: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_619: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_44: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1449: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) lf6).
Lemma candidate_851: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (rev (qreva y (Cons n0 (rev lf5)))))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_1450: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) lf6).
Lemma candidate_840: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_754: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (qreva lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_617: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_1396: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva (rev (rev x)) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1235: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_844: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_752: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (rev (rev lf7)) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_615: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_1507: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev (qreva y (Cons n0 (rev lf5)))))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1502: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1501: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1399: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1398: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1397: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1238: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1237: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1236: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_753: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_616: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_841: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_755: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_618: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1503: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1504: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) (Cons n0 y)).
File Information
- File name: goal79
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal79_theorem0_44_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal79_theorem0_44_append_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rev (lfappend (rev x0) y0)) (lfappend (rev y0) x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (rev (lfappend (rev x) y0)) (lfappend (rev y0) x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lfappend (rev _UNBOUND_REL_1) x : lst
x : lst
lfappend (rev y) (Cons n Nil) : lst
rev (lfappend (rev x) _UNBOUND_REL_1) : lst
y : lst
lfappend (rev x) _UNBOUND_REL_1 : lst
rev y : lst
@eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x)) : Prop
lfappend (rev y) (Cons n x) : lst
rev _UNBOUND_REL_1 : lst
Cons n x : lst
lst : Set
Cons n Nil : lst
forall y0 : lst, @eq lst (rev (lfappend (rev x) y0)) (lfappend (rev y0) x) : Prop
natural : Set
n : natural
lfappend (lfappend (rev y) (Cons n Nil)) x : lst
rev x : lst
Nil : lst
@eq lst (rev (lfappend (rev x) _UNBOUND_REL_1))
  (lfappend (rev _UNBOUND_REL_1) x) : Prop

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend (rev y) (Cons n x)
lf7 : lst = Nil
lf1 : lst = lfappend (lfappend (rev y) (Cons n Nil)) x
lf4 : lst = Cons n Nil
lf5 : lst = Cons n x
lf2 : lst = lfappend (rev y) (Cons n Nil)
lf6 : lst = rev y

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 169 seconds
Valid:
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).

Invalid:
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 229 seconds
Generalizations:
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 295 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).


<---CREATE SKETCHES--->
Time elapsed: 296 seconds
Sketches:
Sketch conj17_sketch0 : @eq lst (##hole##) lf3
Sketch conj17_term_sketch0 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj19_sketch0 : @eq lst (lfappend (##hole##) x) lf3
Sketch conj19_sketch1 : @eq lst (##hole##) lf3
Sketch conj19_term_sketch0 : @eq lst (lfappend lf6 lf4) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (lfappend (lfappend lf6 lf4) x) (##hole##)
Sketch conj20_sketch0 : @eq lst (##hole##) lf3
Sketch conj20_sketch1 : @eq lst (lfappend (##hole##) x) lf3
Sketch conj20_sketch2 : @eq lst (lfappend (lfappend (##hole##) lf4) x) lf3
Sketch conj20_term_sketch0 : @eq lst (lfappend (lfappend (rev y) lf4) x) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (lfappend (rev y) lf4) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj27_sketch0 : @eq lst (lfappend (##hole##) x) lf3
Sketch conj27_sketch1 : @eq lst (lfappend (lfappend lf6 (##hole##)) x) lf3
Sketch conj27_sketch2 : @eq lst (##hole##) lf3
Sketch conj27_term_sketch0 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (Cons n lf7) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (##hole##)
Sketch conj28_sketch0 : @eq lst (lfappend (##hole##) x) lf3
Sketch conj28_sketch1 : @eq lst (##hole##) lf3
Sketch conj28_sketch2 : @eq lst (lfappend (lfappend (rev y) (##hole##)) x) lf3
Sketch conj28_sketch3 : @eq lst (lfappend (lfappend (##hole##) (Cons n lf7)) x) lf3
Sketch conj28_term_sketch0 : @eq lst (lfappend (rev y) (Cons n lf7)) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj59_sketch0 : @eq lst (lfappend (##hole##) x) lf3
Sketch conj59_sketch1 : @eq lst (lfappend (lfappend lf6 (##hole##)) x) lf3
Sketch conj59_sketch2 : @eq lst (##hole##) lf3
Sketch conj59_sketch3 : @eq lst (lfappend (lfappend lf6 (Cons n (##hole##))) x) lf3
Sketch conj59_term_sketch0 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (##hole##)
Sketch conj59_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_sketch0 : @eq lst (lfappend (##hole##) x) lf3
Sketch conj60_sketch1 : @eq lst (lfappend (lfappend (rev y) (##hole##)) x) lf3
Sketch conj60_sketch2 : @eq lst (##hole##) lf3
Sketch conj60_sketch3 : @eq lst (lfappend (lfappend (rev y) (Cons n (##hole##))) x) lf3
Sketch conj60_sketch4 : @eq lst (lfappend (lfappend (##hole##) (Cons n Nil)) x) lf3
Sketch conj60_term_sketch0 : @eq lst (lfappend (rev y) (Cons n Nil)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (##hole##)
Sketch conj60_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj65_sketch0 : @eq lst lf1 (##hole##)
Sketch conj65_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj66_sketch0 : @eq lst lf1 (##hole##)
Sketch conj66_sketch1 : @eq lst lf1 (lfappend (##hole##) lf5)
Sketch conj66_term_sketch0 : @eq lst (lfappend (rev y) lf5) (##hole##)
Sketch conj66_term_sketch1 : @eq lst (rev y) (##hole##)
Sketch conj69_sketch0 : @eq lst lf1 (##hole##)
Sketch conj69_sketch1 : @eq lst lf1 (lfappend lf6 (##hole##))
Sketch conj69_term_sketch0 : @eq lst (lfappend lf6 (Cons n x)) (##hole##)
Sketch conj69_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj70_sketch0 : @eq lst lf1 (##hole##)
Sketch conj70_sketch1 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj70_sketch2 : @eq lst lf1 (lfappend (##hole##) (Cons n x))
Sketch conj70_term_sketch0 : @eq lst (lfappend (rev y) (Cons n x)) (##hole##)
Sketch conj70_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj70_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj81_sketch0 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj81_sketch1 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj81_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj81_term_sketch1 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj82_sketch0 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj82_sketch1 : @eq lst (lfappend lf2 x) (lfappend (##hole##) lf5)
Sketch conj82_sketch2 : @eq lst (##hole##) (lfappend (rev y) lf5)
Sketch conj82_term_sketch0 : @eq lst (lfappend (rev y) lf5) (##hole##)
Sketch conj82_term_sketch1 : @eq lst (rev y) (##hole##)
Sketch conj82_term_sketch2 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj83_sketch0 : @eq lst (lfappend (##hole##) x) (lfappend lf6 lf5)
Sketch conj83_sketch1 : @eq lst (lfappend (lfappend lf6 lf4) x) (##hole##)
Sketch conj83_sketch2 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj83_term_sketch0 : @eq lst (lfappend lf6 lf4) (##hole##)
Sketch conj83_term_sketch1 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj83_term_sketch2 : @eq lst (lfappend (lfappend lf6 lf4) x) (##hole##)
Sketch conj84_sketch0 : @eq lst (##hole##) (lfappend (rev y) lf5)
Sketch conj84_sketch1 : @eq lst (lfappend (lfappend (rev y) lf4) x) (##hole##)
Sketch conj84_sketch2 : @eq lst (lfappend (##hole##) x) (lfappend (rev y) lf5)
Sketch conj84_sketch3 : @eq lst (lfappend (lfappend (##hole##) lf4) x) (lfappend (##hole##) lf5)
Sketch conj84_term_sketch0 : @eq lst (lfappend (lfappend (rev y) lf4) x) (##hole##)
Sketch conj84_term_sketch1 : @eq lst (lfappend (rev y) lf5) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (lfappend (rev y) lf4) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj85_sketch0 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj85_sketch1 : @eq lst (lfappend lf2 x) (lfappend lf6 (##hole##))
Sketch conj85_sketch2 : @eq lst (##hole##) (lfappend lf6 (Cons n x))
Sketch conj85_term_sketch0 : @eq lst (lfappend lf6 (Cons n x)) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj86_sketch0 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj86_sketch1 : @eq lst (lfappend lf2 x) (lfappend (rev y) (##hole##))
Sketch conj86_sketch2 : @eq lst (lfappend lf2 x) (lfappend (##hole##) (Cons n x))
Sketch conj86_sketch3 : @eq lst (##hole##) (lfappend (rev y) (Cons n x))
Sketch conj86_term_sketch0 : @eq lst (lfappend (rev y) (Cons n x)) (##hole##)
Sketch conj86_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj86_term_sketch3 : @eq lst (lfappend lf2 x) (##hole##)
Sketch conj87_sketch0 : @eq lst (lfappend (##hole##) x) (lfappend lf6 (Cons n x))
Sketch conj87_sketch1 : @eq lst (lfappend (lfappend lf6 lf4) x) (##hole##)
Sketch conj87_sketch2 : @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (##hole##))
Sketch conj87_sketch3 : @eq lst (##hole##) (lfappend lf6 (Cons n x))
Sketch conj87_term_sketch0 : @eq lst (lfappend lf6 lf4) (##hole##)
Sketch conj87_term_sketch1 : @eq lst (lfappend lf6 (Cons n x)) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj87_term_sketch3 : @eq lst (lfappend (lfappend lf6 lf4) x) (##hole##)
Sketch conj88_sketch0 : @eq lst (##hole##) (lfappend (rev y) (Cons n x))
Sketch conj88_sketch1 : @eq lst (lfappend (lfappend (rev y) lf4) x) (##hole##)
Sketch conj88_sketch2 : @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (##hole##))
Sketch conj88_sketch3 : @eq lst (lfappend (##hole##) x) (lfappend (rev y) (Cons n x))
Sketch conj88_sketch4 : @eq lst (lfappend (lfappend (##hole##) lf4) x)
  (lfappend (##hole##) (Cons n x))
Sketch conj88_term_sketch0 : @eq lst (lfappend (lfappend (rev y) lf4) x) (##hole##)
Sketch conj88_term_sketch1 : @eq lst (lfappend (rev y) (Cons n x)) (##hole##)
Sketch conj88_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (lfappend (rev y) lf4) (##hole##)
Sketch conj88_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj91_sketch0 : @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (##hole##)
Sketch conj91_sketch1 : @eq lst (lfappend (##hole##) x) (lfappend lf6 lf5)
Sketch conj91_sketch2 : @eq lst (lfappend (lfappend lf6 (##hole##)) x) (lfappend lf6 lf5)
Sketch conj91_sketch3 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj91_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj91_term_sketch1 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (##hole##)
Sketch conj92_sketch0 : @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (##hole##)
Sketch conj92_sketch1 : @eq lst (lfappend (##hole##) x) (lfappend (rev y) lf5)
Sketch conj92_sketch2 : @eq lst (##hole##) (lfappend (rev y) lf5)
Sketch conj92_sketch3 : @eq lst (lfappend (lfappend (##hole##) (Cons n lf7)) x)
  (lfappend (##hole##) lf5)
Sketch conj92_sketch4 : @eq lst (lfappend (lfappend (rev y) (##hole##)) x) (lfappend (rev y) lf5)
Sketch conj92_term_sketch0 : @eq lst (lfappend (rev y) lf5) (##hole##)
Sketch conj92_term_sketch1 : @eq lst (lfappend (rev y) (Cons n lf7)) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_sketch0 : @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (##hole##)
Sketch conj95_sketch1 : @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (##hole##))
Sketch conj95_sketch2 : @eq lst (lfappend (##hole##) x) (lfappend lf6 (Cons n x))
Sketch conj95_sketch3 : @eq lst (lfappend (lfappend lf6 (##hole##)) x) (lfappend lf6 (Cons n x))
Sketch conj95_sketch4 : @eq lst (##hole##) (lfappend lf6 (Cons n x))
Sketch conj95_term_sketch0 : @eq lst (lfappend lf6 (Cons n x)) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (##hole##)
Sketch conj96_sketch0 : @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (##hole##)
Sketch conj96_sketch1 : @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (##hole##))
Sketch conj96_sketch2 : @eq lst (lfappend (##hole##) x) (lfappend (rev y) (Cons n x))
Sketch conj96_sketch3 : @eq lst (##hole##) (lfappend (rev y) (Cons n x))
Sketch conj96_sketch4 : @eq lst (lfappend (lfappend (##hole##) (Cons n lf7)) x)
  (lfappend (##hole##) (Cons n x))
Sketch conj96_sketch5 : @eq lst (lfappend (lfappend (rev y) (##hole##)) x)
  (lfappend (rev y) (Cons n x))
Sketch conj96_term_sketch0 : @eq lst (lfappend (rev y) (Cons n x)) (##hole##)
Sketch conj96_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (lfappend (rev y) (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (Cons n lf7) (##hole##)
Sketch conj123_sketch0 : @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (##hole##)
Sketch conj123_sketch1 : @eq lst (lfappend (##hole##) x) (lfappend lf6 lf5)
Sketch conj123_sketch2 : @eq lst (lfappend (lfappend lf6 (##hole##)) x) (lfappend lf6 lf5)
Sketch conj123_sketch3 : @eq lst (##hole##) (lfappend lf6 lf5)
Sketch conj123_sketch4 : @eq lst (lfappend (lfappend lf6 (Cons n (##hole##))) x) (lfappend lf6 lf5)
Sketch conj123_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj123_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj123_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj123_term_sketch3 : @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (##hole##)
Sketch conj123_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj124_sketch0 : @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (##hole##)
Sketch conj124_sketch1 : @eq lst (lfappend (##hole##) x) (lfappend (rev y) lf5)
Sketch conj124_sketch2 : @eq lst (lfappend (lfappend (rev y) (##hole##)) x) (lfappend (rev y) lf5)
Sketch conj124_sketch3 : @eq lst (##hole##) (lfappend (rev y) lf5)
Sketch conj124_sketch4 : @eq lst (lfappend (lfappend (##hole##) (Cons n Nil)) x)
  (lfappend (##hole##) lf5)
Sketch conj124_sketch5 : @eq lst (lfappend (lfappend (rev y) (Cons n (##hole##))) x)
  (lfappend (rev y) lf5)
Sketch conj124_term_sketch0 : @eq lst (lfappend (rev y) lf5) (##hole##)
Sketch conj124_term_sketch1 : @eq lst (lfappend (rev y) (Cons n Nil)) (##hole##)
Sketch conj124_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj124_term_sketch3 : @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (##hole##)
Sketch conj124_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj124_term_sketch5 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2815 seconds
Problems per Sketch:
Sketch conj88_term_sketch4 --> Problem  synth_9
Sketch conj124_term_sketch0 --> Problem  synth_30
Sketch conj69_sketch0 --> Problem  synth_27
Sketch conj83_sketch1 --> Problem  synth_5
Sketch conj60_term_sketch1 --> Problem  synth_20
Sketch conj59_term_sketch2 --> Problem  synth_21
Sketch conj84_sketch1 --> Problem  synth_7
Sketch conj66_sketch0 --> Problem  synth_27
Sketch conj59_term_sketch1 --> Problem  synth_20
Sketch conj96_sketch4 --> Problem  synth_53
Sketch conj59_sketch1 --> Problem  synth_10
Sketch conj60_sketch0 --> Problem  synth_3
Sketch conj20_term_sketch2 --> Problem  synth_9
Sketch conj124_term_sketch1 --> Problem  synth_25
Sketch conj65_term_sketch0 --> Problem  synth_28
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj87_term_sketch1 --> Problem  synth_21
Sketch conj124_term_sketch2 --> Problem  synth_20
Sketch conj88_sketch0 --> Problem  synth_26
Sketch conj60_term_sketch3 --> Problem  synth_22
Sketch conj124_sketch5 --> Problem  synth_57
Sketch conj123_sketch4 --> Problem  synth_55
Sketch conj81_term_sketch1 --> Problem  synth_2
Sketch conj60_sketch2 --> Problem  synth_1
Sketch conj59_sketch3 --> Problem  synth_18
Sketch conj70_sketch2 --> Problem  synth_34
Sketch conj84_sketch2 --> Problem  synth_37
Sketch conj85_sketch0 --> Problem  synth_2
Sketch conj124_sketch1 --> Problem  synth_37
Sketch conj92_term_sketch2 --> Problem  synth_17
Sketch conj28_sketch2 --> Problem  synth_14
Sketch conj123_sketch3 --> Problem  synth_28
Sketch conj92_term_sketch3 --> Problem  synth_9
Sketch conj86_sketch0 --> Problem  synth_2
Sketch conj83_term_sketch1 --> Problem  synth_28
Sketch conj19_term_sketch1 --> Problem  synth_5
Sketch conj28_term_sketch2 --> Problem  synth_12
Sketch conj82_term_sketch2 --> Problem  synth_2
Sketch conj27_sketch1 --> Problem  synth_10
Sketch conj96_term_sketch2 --> Problem  synth_16
Sketch conj70_term_sketch1 --> Problem  synth_32
Sketch conj91_sketch3 --> Problem  synth_28
Sketch conj60_sketch3 --> Problem  synth_23
Sketch conj88_term_sketch2 --> Problem  synth_32
Sketch conj84_term_sketch3 --> Problem  synth_9
Sketch conj66_sketch1 --> Problem  synth_29
Sketch conj123_term_sketch1 --> Problem  synth_19
Sketch conj91_term_sketch3 --> Problem  synth_13
Sketch conj95_sketch1 --> Problem  synth_50
Sketch conj27_term_sketch1 --> Problem  synth_12
Sketch conj96_sketch1 --> Problem  synth_52
Sketch conj20_sketch2 --> Problem  synth_6
Sketch conj92_sketch4 --> Problem  synth_49
Sketch conj88_term_sketch3 --> Problem  synth_8
Sketch conj96_term_sketch1 --> Problem  synth_32
Sketch conj124_sketch4 --> Problem  synth_56
Sketch conj87_term_sketch3 --> Problem  synth_5
Sketch conj84_term_sketch1 --> Problem  synth_30
Sketch conj85_term_sketch0 --> Problem  synth_21
Sketch conj69_term_sketch0 --> Problem  synth_21
Sketch conj95_term_sketch4 --> Problem  synth_13
Sketch conj91_sketch2 --> Problem  synth_47
Sketch conj92_sketch2 --> Problem  synth_30
Sketch conj95_term_sketch3 --> Problem  synth_12
Sketch conj96_term_sketch4 --> Problem  synth_9
Sketch conj96_term_sketch5 --> Problem  synth_12
Sketch conj70_term_sketch2 --> Problem  synth_9
Sketch conj87_term_sketch0 --> Problem  synth_4
Sketch conj83_sketch0 --> Problem  synth_36
Sketch conj27_sketch0 --> Problem  synth_3
Sketch conj85_term_sketch2 --> Problem  synth_2
Sketch conj96_term_sketch3 --> Problem  synth_17
Sketch conj87_sketch1 --> Problem  synth_5
Sketch conj92_sketch1 --> Problem  synth_37
Sketch conj81_sketch1 --> Problem  synth_28
Sketch conj60_sketch4 --> Problem  synth_24
Sketch conj87_sketch3 --> Problem  synth_21
Sketch conj123_sketch2 --> Problem  synth_47
Sketch conj85_term_sketch1 --> Problem  synth_32
Sketch conj92_term_sketch4 --> Problem  synth_12
Sketch conj84_sketch3 --> Problem  synth_38
Sketch conj27_term_sketch0 --> Problem  synth_11
Sketch conj81_sketch0 --> Problem  synth_2
Sketch conj84_term_sketch2 --> Problem  synth_8
Sketch conj84_sketch0 --> Problem  synth_30
Sketch conj28_sketch0 --> Problem  synth_3
Sketch conj66_term_sketch0 --> Problem  synth_30
Sketch conj124_term_sketch4 --> Problem  synth_9
Sketch conj70_sketch1 --> Problem  synth_33
Sketch conj70_term_sketch0 --> Problem  synth_26
Sketch conj92_term_sketch1 --> Problem  synth_16
Sketch conj60_term_sketch4 --> Problem  synth_9
Sketch conj95_sketch4 --> Problem  synth_21
Sketch conj96_term_sketch0 --> Problem  synth_26
Sketch conj83_term_sketch2 --> Problem  synth_5
Sketch conj123_sketch1 --> Problem  synth_36
Sketch conj82_term_sketch1 --> Problem  synth_9
Sketch conj65_sketch0 --> Problem  synth_27
Sketch conj28_term_sketch1 --> Problem  synth_17
Sketch conj87_sketch2 --> Problem  synth_43
Sketch conj123_term_sketch4 --> Problem  synth_22
Sketch conj60_term_sketch2 --> Problem  synth_26
Sketch conj60_sketch1 --> Problem  synth_14
Sketch conj28_term_sketch3 --> Problem  synth_9
Sketch conj27_term_sketch2 --> Problem  synth_13
Sketch conj123_term_sketch3 --> Problem  synth_21
Sketch conj59_sketch2 --> Problem  synth_1
Sketch conj84_term_sketch0 --> Problem  synth_7
Sketch conj20_sketch0 --> Problem  synth_1
Sketch conj82_sketch0 --> Problem  synth_2
Sketch conj91_sketch0 --> Problem  synth_13
Sketch conj20_term_sketch0 --> Problem  synth_7
Sketch conj91_term_sketch0 --> Problem  synth_28
Sketch conj95_sketch3 --> Problem  synth_51
Sketch conj91_term_sketch2 --> Problem  synth_12
Sketch conj86_sketch1 --> Problem  synth_40
Sketch conj27_sketch2 --> Problem  synth_1
Sketch conj82_sketch1 --> Problem  synth_35
Sketch conj60_term_sketch0 --> Problem  synth_25
Sketch conj85_sketch2 --> Problem  synth_21
Sketch conj96_sketch2 --> Problem  synth_45
Sketch conj85_sketch1 --> Problem  synth_39
Sketch conj70_sketch0 --> Problem  synth_27
Sketch conj69_sketch1 --> Problem  synth_31
Sketch conj123_term_sketch2 --> Problem  synth_20
Sketch conj88_sketch1 --> Problem  synth_7
Sketch conj82_sketch2 --> Problem  synth_30
Sketch conj86_sketch2 --> Problem  synth_41
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj86_term_sketch1 --> Problem  synth_32
Sketch conj87_term_sketch2 --> Problem  synth_32
Sketch conj92_sketch3 --> Problem  synth_48
Sketch conj88_sketch2 --> Problem  synth_44
Sketch conj82_term_sketch0 --> Problem  synth_30
Sketch conj19_sketch0 --> Problem  synth_3
Sketch conj17_sketch0 --> Problem  synth_1
Sketch conj124_sketch2 --> Problem  synth_49
Sketch conj96_sketch3 --> Problem  synth_26
Sketch conj83_term_sketch0 --> Problem  synth_4
Sketch conj69_term_sketch1 --> Problem  synth_32
Sketch conj66_term_sketch1 --> Problem  synth_9
Sketch conj124_term_sketch5 --> Problem  synth_22
Sketch conj124_sketch3 --> Problem  synth_30
Sketch conj96_sketch0 --> Problem  synth_17
Sketch conj59_sketch0 --> Problem  synth_3
Sketch conj96_sketch5 --> Problem  synth_54
Sketch conj95_term_sketch1 --> Problem  synth_32
Sketch conj95_term_sketch0 --> Problem  synth_21
Sketch conj20_sketch1 --> Problem  synth_3
Sketch conj88_term_sketch0 --> Problem  synth_7
Sketch conj59_term_sketch0 --> Problem  synth_19
Sketch conj28_term_sketch0 --> Problem  synth_16
Sketch conj59_term_sketch3 --> Problem  synth_22
Sketch conj123_sketch0 --> Problem  synth_21
Sketch conj86_term_sketch0 --> Problem  synth_26
Sketch conj86_term_sketch2 --> Problem  synth_9
Sketch conj87_sketch0 --> Problem  synth_42
Sketch conj88_term_sketch1 --> Problem  synth_26
Sketch conj20_term_sketch1 --> Problem  synth_8
Sketch conj124_sketch0 --> Problem  synth_26
Sketch conj92_sketch0 --> Problem  synth_17
Sketch conj88_sketch3 --> Problem  synth_45
Sketch conj86_term_sketch3 --> Problem  synth_2
Sketch conj19_sketch1 --> Problem  synth_1
Sketch conj88_sketch4 --> Problem  synth_46
Sketch conj91_sketch1 --> Problem  synth_36
Sketch conj86_sketch3 --> Problem  synth_26
Sketch conj28_sketch3 --> Problem  synth_15
Sketch conj28_sketch1 --> Problem  synth_1
Sketch conj95_sketch2 --> Problem  synth_42
Sketch conj83_sketch2 --> Problem  synth_28
Sketch conj123_term_sketch0 --> Problem  synth_28
Sketch conj91_term_sketch1 --> Problem  synth_11
Sketch conj92_term_sketch0 --> Problem  synth_30
Sketch conj95_term_sketch2 --> Problem  synth_11
Sketch conj95_sketch0 --> Problem  synth_13
Sketch conj81_term_sketch0 --> Problem  synth_28
Sketch conj124_term_sketch3 --> Problem  synth_26


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 3317 seconds

Problem: synth_28
 lfappend (rev (rev lf6)) lf5
 lfappend (lfappend lf6 Nil) lf5
 lfappend (lfappend lf6 lf5) Nil
 lfappend lf6 (rev (rev lf5))
 lfappend lf6 (lfappend lf5 Nil)
 lfappend lf6 lf5

Problem: synth_17
 lfappend (rev y) (Cons n (lfappend lf7 x))
 lfappend (rev y) (Cons n (lfappend x Nil))
 lfappend (lfappend lf7 (rev y)) (Cons n x)
 lfappend lf7 (lfappend (rev y) (Cons n x))
 rev (lfappend (rev x) (Cons n y))
 lfappend (rev y) (Cons n x)

Problem: synth_29

Problem: synth_45
 lfappend (lfappend (rev y) Nil) (Cons n Nil)
 rev (rev (lfappend (rev y) (Cons n Nil)))
 lfappend (lfappend (rev y) (Cons n Nil)) Nil
 lfappend (rev (rev (rev y))) (Cons n Nil)
 lfappend (rev (lfappend y Nil)) (Cons n Nil)
 lfappend (rev y) (Cons n Nil)

Problem: synth_26
 lfappend (lfappend (rev y) (Cons n Nil)) x
 lfappend (lfappend (rev y) (Cons n x)) Nil
 lfappend (rev y) (Cons n (rev (rev x)))
 lfappend (rev y) (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n y))
 lfappend (rev y) (Cons n x)

Problem: synth_9
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_30
 rev (lfappend (rev lf5) (rev (rev y)))
 rev (lfappend (rev lf5) (lfappend y Nil))
 rev (lfappend (rev lf5) y)
 lfappend (rev y) (rev (rev lf5))
 lfappend (rev y) (lfappend lf5 Nil)
 lfappend (rev y) lf5

Problem: synth_11
 rev (lfappend lf7 (Cons n (rev lf6)))
 lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)
 lfappend lf6 (Cons n (rev lf7))
 lfappend lf6 (Cons n lf7)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_54
 Cons n Nil

Problem: synth_39

Problem: synth_1
 rev (lfappend (rev lf3) Nil)
 lfappend (rev (rev lf3)) Nil
 lfappend (lfappend lf3 Nil) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_46

Problem: synth_55
 Nil

Problem: synth_57
 Nil

Problem: synth_15

Problem: synth_31

Problem: synth_14

Problem: synth_8
 rev (lfappend (rev lf4) y)
 lfappend (rev y) (rev (rev lf4))
 lfappend (rev y) (lfappend lf4 Nil)
 lfappend (rev y) (rev lf4)
 rev (lfappend lf4 y)
 lfappend (rev y) lf4

Problem: synth_34

Problem: synth_12
 Cons n (lfappend lf7 Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_5
 lfappend lf6 (lfappend lf4 (lfappend x Nil))
 lfappend lf6 (lfappend (rev lf4) x)
 rev (lfappend (rev x) (lfappend lf4 (rev lf6)))
 lfappend (lfappend lf6 (rev lf4)) x
 lfappend (lfappend lf6 lf4) x
 lfappend lf6 (lfappend lf4 x)

Problem: synth_37

Problem: synth_53

Problem: synth_50
 Cons n (rev (rev x))
 Cons n (lfappend x lf7)
 lfappend lf7 (Cons n x)
 Cons n (lfappend lf7 x)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_2
 lfappend (rev (rev lf2)) x
 lfappend (lfappend lf2 Nil) x
 lfappend (lfappend lf2 x) Nil
 lfappend lf2 (rev (rev x))
 lfappend lf2 (lfappend x Nil)
 lfappend lf2 x

Problem: synth_22
 Nil

Problem: synth_20
 Cons n Nil

Problem: synth_18
 Nil

Problem: synth_21
 lfappend (rev (rev lf6)) (Cons n x)
 lfappend (lfappend lf6 Nil) (Cons n x)
 lfappend lf6 (Cons n (rev (rev x)))
 lfappend lf6 (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n (rev lf6)))
 lfappend lf6 (Cons n x)

Problem: synth_56

Problem: synth_41

Problem: synth_49

Problem: synth_25
 lfappend (lfappend (rev y) Nil) (Cons n Nil)
 rev (rev (lfappend (rev y) (Cons n Nil)))
 lfappend (lfappend (rev y) (Cons n Nil)) Nil
 lfappend (rev (rev (rev y))) (Cons n Nil)
 lfappend (rev (lfappend y Nil)) (Cons n Nil)
 lfappend (rev y) (Cons n Nil)

Problem: synth_13
 lfappend lf6 (lfappend lf7 (Cons n x))
 lfappend lf7 (lfappend lf6 (Cons n x))
 lfappend lf6 (Cons n (lfappend lf7 x))
 lfappend lf6 (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n (rev lf6)))
 lfappend lf6 (Cons n x)

Problem: synth_6

Problem: synth_7
 lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))
 lfappend (rev y) (lfappend lf4 (rev (rev x)))
 lfappend (rev y) (lfappend lf4 (lfappend x Nil))
 lfappend (rev y) (lfappend (rev lf4) x)
 rev (lfappend (rev x) (lfappend lf4 y))
 lfappend (rev y) (lfappend lf4 x)

Problem: synth_4
 lfappend (lfappend lf6 lf4) Nil
 lfappend lf6 (rev (rev lf4))
 lfappend lf6 (lfappend lf4 Nil)
 rev (lfappend lf4 (rev lf6))
 lfappend lf6 (rev lf4)
 lfappend lf6 lf4

Problem: synth_38

Problem: synth_23
 Nil

Problem: synth_27
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_42
 lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)
 lfappend (lfappend lf6 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_16
 rev (lfappend lf7 (Cons n y))
 lfappend (rev (lfappend lf7 y)) (Cons n Nil)
 lfappend (rev (lfappend y Nil)) (Cons n Nil)
 lfappend (rev y) (Cons n (rev lf7))
 lfappend (rev y) (Cons n lf7)
 lfappend (rev y) (Cons n Nil)

Problem: synth_19
 lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)
 lfappend (lfappend lf6 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_40

Problem: synth_10

Problem: synth_33

Problem: synth_47

Problem: synth_24

Problem: synth_3

Problem: synth_52
 Cons n (rev (rev x))
 Cons n (lfappend x lf7)
 lfappend lf7 (Cons n x)
 Cons n (lfappend lf7 x)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_32
 Cons n (lfappend (rev (rev x)) Nil)
 Cons n (lfappend (lfappend x Nil) Nil)
 rev (lfappend (rev x) (Cons n Nil))
 Cons n (rev (rev x))
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_48

Problem: synth_44
 lfappend (rev lf4) (rev (rev x))
 lfappend (rev lf4) (lfappend x Nil)
 lfappend lf4 (rev (rev x))
 lfappend lf4 (lfappend x Nil)
 lfappend (rev lf4) x
 lfappend lf4 x

Problem: synth_36

Problem: synth_51
 Cons n Nil

Problem: synth_35

Problem: synth_43
 lfappend (rev lf4) (rev (rev x))
 lfappend (rev lf4) (lfappend x Nil)
 lfappend lf4 (rev (rev x))
 lfappend lf4 (lfappend x Nil)
 lfappend (rev lf4) x
 lfappend lf4 x

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 3318 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_3: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_5: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_6: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_7: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_8: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_9: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_10: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_11: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_12: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_13: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_14: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_15: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_16: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_17: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_18: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_19: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_20: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_21: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_22: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_24: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (lfappend lf4 (rev lf6))).
Lemma candidate_25: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev lf4)).
Lemma candidate_26: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 lf4).
Lemma candidate_27: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_28: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend (rev lf4) x)).
Lemma candidate_29: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (rev (lfappend (rev x) (lfappend lf4 (rev lf6)))).
Lemma candidate_30: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 (rev lf4)) x).
Lemma candidate_31: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 lf4) x).
Lemma candidate_32: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_33: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_34: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_35: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_36: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_37: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_38: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_39: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_40: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_41: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_42: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) x)).
Lemma candidate_43: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (rev (lfappend (rev x) (lfappend lf4 y))).
Lemma candidate_44: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_45: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev (lfappend (rev lf4) y)).
Lemma candidate_46: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev (rev lf4))).
Lemma candidate_47: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_48: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev lf4)).
Lemma candidate_49: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev (lfappend lf4 y)).
Lemma candidate_50: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) lf4).
Lemma candidate_51: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_52: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_53: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_54: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_55: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_56: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_57: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_58: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_59: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_60: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_61: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_62: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_63: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_64: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_65: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_66: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_67: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_68: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_69: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_70: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_71: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_72: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_73: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_74: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_75: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (lfappend lf7 (Cons n x))).
Lemma candidate_76: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf7 (lfappend lf6 (Cons n x))).
Lemma candidate_77: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_78: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_79: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_80: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_81: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_82: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_83: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_84: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_85: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_86: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_87: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (rev (lfappend lf7 (Cons n y))).
Lemma candidate_88: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7))   (lfappend (rev (lfappend lf7 y)) (Cons n Nil)).
Lemma candidate_89: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7))   (lfappend (rev (lfappend y Nil)) (Cons n Nil)).
Lemma candidate_90: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n (rev lf7))).
Lemma candidate_91: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n lf7)).
Lemma candidate_92: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n Nil)).
Lemma candidate_93: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_94: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_95: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (lfappend lf7 (rev y)) (Cons n x)).
Lemma candidate_96: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend lf7 (lfappend (rev y) (Cons n x))).
Lemma candidate_97: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_98: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_99: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_100: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_101: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_102: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_103: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_104: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_105: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_106: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_107: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_108: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_109: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_110: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_111: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_112: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_113: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_114: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_115: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_116: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_117: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n (Nil))) x) lf3.
Lemma candidate_118: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_119: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_120: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_121: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_122: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_123: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_124: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_125: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_126: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_127: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_128: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_129: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_130: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_131: @eq lst Nil (Nil).
Lemma candidate_132: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_133: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_134: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_135: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_136: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_137: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_138: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n (Nil))) x) lf3.
Lemma candidate_139: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (lfappend (rev y) Nil) (Cons n Nil)).
Lemma candidate_140: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (rev (rev (lfappend (rev y) (Cons n Nil)))).
Lemma candidate_141: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (lfappend (rev y) (Cons n Nil)) Nil).
Lemma candidate_142: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (rev (rev (rev y))) (Cons n Nil)).
Lemma candidate_143: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (rev (lfappend y Nil)) (Cons n Nil)).
Lemma candidate_144: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil)) (lfappend (rev y) (Cons n Nil)).
Lemma candidate_145: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_146: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_147: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_148: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_149: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_150: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_151: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_152: @eq lst Nil (Nil).
Lemma candidate_153: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_154: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_155: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_156: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_157: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_158: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_159: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_160: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_161: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_162: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_163: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_164: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_165: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_166: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_167: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_168: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_169: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_170: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_171: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_172: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_173: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_174: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_175: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_176: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_177: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (rev (rev y)))).
Lemma candidate_178: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (lfappend y Nil))).
Lemma candidate_179: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) y)).
Lemma candidate_180: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (rev (rev lf5))).
Lemma candidate_181: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (lfappend lf5 Nil)).
Lemma candidate_182: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_183: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_184: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_185: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_186: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_187: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_188: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_189: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_190: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_191: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_192: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_193: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_194: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_195: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_196: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_197: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_198: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_199: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_200: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_201: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_202: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_203: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_204: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_205: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_206: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_207: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_208: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_209: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_210: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_211: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_212: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_215: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_216: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_217: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_218: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_219: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_220: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_221: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_222: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_223: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_224: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_225: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_226: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_227: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_228: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_229: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_230: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_231: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_232: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_233: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_234: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_235: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_236: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_237: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_238: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_239: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_240: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_241: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_242: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_243: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_244: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_245: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_246: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_247: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_248: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_249: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_250: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_251: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_252: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_253: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_254: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_255: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_256: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_257: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_258: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_259: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_260: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_261: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev y)))) (lfappend (rev y) lf5).
Lemma candidate_262: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend y Nil))) (lfappend (rev y) lf5).
Lemma candidate_263: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) y)) (lfappend (rev y) lf5).
Lemma candidate_264: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (rev (rev lf5))) (lfappend (rev y) lf5).
Lemma candidate_265: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend lf5 Nil)) (lfappend (rev y) lf5).
Lemma candidate_266: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_267: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (rev (rev y)))).
Lemma candidate_268: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (lfappend y Nil))).
Lemma candidate_269: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) y)).
Lemma candidate_270: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (rev (rev lf5))).
Lemma candidate_271: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (lfappend lf5 Nil)).
Lemma candidate_272: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_273: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_274: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_275: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_276: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_277: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_278: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_279: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_280: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_281: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_282: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_283: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_284: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_285: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_286: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend (rev lf4) x)).
Lemma candidate_287: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (rev (lfappend (rev x) (lfappend lf4 (rev lf6)))).
Lemma candidate_288: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 (rev lf4)) x).
Lemma candidate_289: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 lf4) x).
Lemma candidate_290: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_291: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_292: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_293: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_294: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_295: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_296: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_297: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_298: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_299: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_300: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (lfappend lf4 (rev lf6))).
Lemma candidate_301: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev lf4)).
Lemma candidate_302: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 lf4).
Lemma candidate_303: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_304: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_305: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_306: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_307: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_308: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_309: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_310: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend (rev lf4) x)).
Lemma candidate_311: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (rev (lfappend (rev x) (lfappend lf4 (rev lf6)))).
Lemma candidate_312: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 (rev lf4)) x).
Lemma candidate_313: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 lf4) x).
Lemma candidate_314: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_315: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev y)))) (lfappend (rev y) lf5).
Lemma candidate_316: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend y Nil))) (lfappend (rev y) lf5).
Lemma candidate_317: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) y)) (lfappend (rev y) lf5).
Lemma candidate_318: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (rev (rev lf5))) (lfappend (rev y) lf5).
Lemma candidate_319: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend lf5 Nil)) (lfappend (rev y) lf5).
Lemma candidate_320: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_321: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_322: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_323: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_324: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) x)).
Lemma candidate_325: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (rev (lfappend (rev x) (lfappend lf4 y))).
Lemma candidate_326: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_327: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_328: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_329: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_330: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) x)).
Lemma candidate_331: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (rev (lfappend (rev x) (lfappend lf4 y))).
Lemma candidate_332: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_333: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (rev (rev y)))).
Lemma candidate_334: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (lfappend y Nil))).
Lemma candidate_335: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) y)).
Lemma candidate_336: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (rev (rev lf5))).
Lemma candidate_337: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (lfappend lf5 Nil)).
Lemma candidate_338: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_339: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev (lfappend (rev lf4) y)).
Lemma candidate_340: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev (rev lf4))).
Lemma candidate_341: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_342: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev lf4)).
Lemma candidate_343: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev (lfappend lf4 y)).
Lemma candidate_344: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) lf4).
Lemma candidate_345: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_346: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_347: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_348: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_349: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_350: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_351: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_352: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_353: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_354: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_355: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_356: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_357: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_358: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_359: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev (rev x)))) (lfappend lf6 (Cons n x)).
Lemma candidate_360: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend x Nil))) (lfappend lf6 (Cons n x)).
Lemma candidate_361: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev lf6)))) (lfappend lf6 (Cons n x)).
Lemma candidate_362: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_363: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_364: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_365: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_366: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_367: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_368: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_369: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_370: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_371: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_372: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_373: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_374: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_375: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_376: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_377: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_378: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_379: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_380: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_381: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_382: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_383: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_384: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_385: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_386: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_387: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_388: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n x)) Nil)   (lfappend (rev y) (Cons n x)).
Lemma candidate_389: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (rev (rev x))))   (lfappend (rev y) (Cons n x)).
Lemma candidate_390: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (lfappend x Nil)))   (lfappend (rev y) (Cons n x)).
Lemma candidate_391: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n y))) (lfappend (rev y) (Cons n x)).
Lemma candidate_392: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_393: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_394: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_395: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_396: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_397: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_398: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_399: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_400: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_401: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_402: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_403: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_404: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_405: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_406: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_407: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_408: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_409: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_410: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_411: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_412: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_413: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_414: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_415: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_416: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 x).
Lemma candidate_417: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_418: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend lf6 (Cons n Nil)) Nil) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_419: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_420: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_421: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_422: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_423: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_424: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend (rev lf4) x)).
Lemma candidate_425: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (rev (lfappend (rev x) (lfappend lf4 (rev lf6)))).
Lemma candidate_426: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 (rev lf4)) x).
Lemma candidate_427: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 lf4) x).
Lemma candidate_428: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_429: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend (rev lf4) (rev (rev x)))).
Lemma candidate_430: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_431: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (rev (rev x)))).
Lemma candidate_432: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_433: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend (rev lf4) x)).
Lemma candidate_434: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_435: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_436: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_437: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev (rev x)))) (lfappend lf6 (Cons n x)).
Lemma candidate_438: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend x Nil))) (lfappend lf6 (Cons n x)).
Lemma candidate_439: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev lf6)))) (lfappend lf6 (Cons n x)).
Lemma candidate_440: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_441: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_442: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_443: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_444: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (lfappend lf4 (rev lf6))).
Lemma candidate_445: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev lf4)).
Lemma candidate_446: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 lf4).
Lemma candidate_447: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_448: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_449: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_450: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_451: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_452: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_453: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_454: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_455: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_456: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_457: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_458: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_459: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_460: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend (rev lf4) x)).
Lemma candidate_461: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (rev (lfappend (rev x) (lfappend lf4 (rev lf6)))).
Lemma candidate_462: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 (rev lf4)) x).
Lemma candidate_463: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend (lfappend lf6 lf4) x).
Lemma candidate_464: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_465: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_466: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n x)) Nil)   (lfappend (rev y) (Cons n x)).
Lemma candidate_467: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (rev (rev x))))   (lfappend (rev y) (Cons n x)).
Lemma candidate_468: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (lfappend x Nil)))   (lfappend (rev y) (Cons n x)).
Lemma candidate_469: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n y))) (lfappend (rev y) (Cons n x)).
Lemma candidate_470: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_471: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_472: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_473: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_474: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) x)).
Lemma candidate_475: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (rev (lfappend (rev x) (lfappend lf4 y))).
Lemma candidate_476: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_477: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (rev (rev x)))).
Lemma candidate_478: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_479: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_480: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_481: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) x)).
Lemma candidate_482: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_483: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend (rev y) Nil) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_484: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev (lfappend (rev y) (Cons n Nil)))) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_485: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend (rev y) (Cons n Nil)) Nil) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_486: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev (rev y))) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_487: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (lfappend y Nil)) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_488: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_489: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) (lfappend x Nil))).
Lemma candidate_490: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_491: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_492: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend (rev lf4) x)).
Lemma candidate_493: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (rev (lfappend (rev x) (lfappend lf4 y))).
Lemma candidate_494: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_495: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_496: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_497: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_498: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_499: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_500: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_501: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_502: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_503: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_504: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_505: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_506: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_507: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev (lfappend (rev lf4) y)).
Lemma candidate_508: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev (rev lf4))).
Lemma candidate_509: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_510: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev lf4)).
Lemma candidate_511: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev (lfappend lf4 y)).
Lemma candidate_512: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) lf4).
Lemma candidate_513: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_514: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_515: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_516: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_517: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_518: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_519: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (lfappend lf7 (Cons n x))).
Lemma candidate_520: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf7 (lfappend lf6 (Cons n x))).
Lemma candidate_521: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_522: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_523: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_524: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_525: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_526: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_527: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_528: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_529: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_530: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_531: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_532: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_533: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_534: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_535: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_536: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_537: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_538: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_539: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_540: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_541: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_542: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_543: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_544: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_545: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_546: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_547: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_548: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_549: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (lfappend lf7 (Cons n x))).
Lemma candidate_550: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf7 (lfappend lf6 (Cons n x))).
Lemma candidate_551: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_552: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_553: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_554: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_555: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_556: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_557: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (lfappend lf7 (rev y)) (Cons n x)).
Lemma candidate_558: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend lf7 (lfappend (rev y) (Cons n x))).
Lemma candidate_559: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_560: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_561: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev y)))) (lfappend (rev y) lf5).
Lemma candidate_562: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend y Nil))) (lfappend (rev y) lf5).
Lemma candidate_563: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) y)) (lfappend (rev y) lf5).
Lemma candidate_564: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (rev (rev lf5))) (lfappend (rev y) lf5).
Lemma candidate_565: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend lf5 Nil)) (lfappend (rev y) lf5).
Lemma candidate_566: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_567: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (rev (rev y)))).
Lemma candidate_568: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (lfappend y Nil))).
Lemma candidate_569: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) y)).
Lemma candidate_570: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (rev (rev lf5))).
Lemma candidate_571: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (lfappend lf5 Nil)).
Lemma candidate_572: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_573: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (rev (lfappend lf7 (Cons n y))).
Lemma candidate_574: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7))   (lfappend (rev (lfappend lf7 y)) (Cons n Nil)).
Lemma candidate_575: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7))   (lfappend (rev (lfappend y Nil)) (Cons n Nil)).
Lemma candidate_576: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n (rev lf7))).
Lemma candidate_577: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n lf7)).
Lemma candidate_578: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n Nil)).
Lemma candidate_579: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_580: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_581: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (lfappend lf7 (rev y)) (Cons n x)).
Lemma candidate_582: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend lf7 (lfappend (rev y) (Cons n x))).
Lemma candidate_583: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_584: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_585: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_586: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_587: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_588: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_589: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_590: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_591: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_592: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_593: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_594: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_595: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_596: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_597: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (lfappend lf7 (Cons n x))).
Lemma candidate_598: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf7 (lfappend lf6 (Cons n x))).
Lemma candidate_599: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_600: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_601: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_602: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_603: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_604: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x lf7))).
Lemma candidate_605: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (lfappend lf7 (Cons n x))).
Lemma candidate_606: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_607: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_608: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_609: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_610: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend lf6 (Cons n Nil)) Nil) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_611: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_612: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_613: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_614: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_615: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_616: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_617: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_618: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev (rev x)))) (lfappend lf6 (Cons n x)).
Lemma candidate_619: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend x Nil))) (lfappend lf6 (Cons n x)).
Lemma candidate_620: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev lf6)))) (lfappend lf6 (Cons n x)).
Lemma candidate_621: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_622: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_623: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_624: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_625: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_626: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_627: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_628: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_629: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_630: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_631: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_632: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_633: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_634: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_635: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_636: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_637: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_638: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_639: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_640: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_641: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_642: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_643: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_644: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_645: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_646: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (lfappend lf7 (Cons n x))).
Lemma candidate_647: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf7 (lfappend lf6 (Cons n x))).
Lemma candidate_648: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_649: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_650: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_651: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_652: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_653: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_654: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (lfappend lf7 (rev y)) (Cons n x)).
Lemma candidate_655: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend lf7 (lfappend (rev y) (Cons n x))).
Lemma candidate_656: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_657: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_658: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_659: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x lf7))).
Lemma candidate_660: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (lfappend lf7 (Cons n x))).
Lemma candidate_661: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_662: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_663: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_664: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend (rev y) Nil) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_665: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev (lfappend (rev y) (Cons n Nil)))) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_666: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend (rev y) (Cons n Nil)) Nil) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_667: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev (rev y))) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_668: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (lfappend y Nil)) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_669: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_670: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_671: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n x)) Nil)   (lfappend (rev y) (Cons n x)).
Lemma candidate_672: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (rev (rev x))))   (lfappend (rev y) (Cons n x)).
Lemma candidate_673: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (lfappend x Nil)))   (lfappend (rev y) (Cons n x)).
Lemma candidate_674: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n y))) (lfappend (rev y) (Cons n x)).
Lemma candidate_675: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_676: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_677: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_678: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_679: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_680: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_681: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_682: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (lfappend (rev y) (Cons n x)).
Lemma candidate_683: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_684: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_685: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_686: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_687: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_688: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_689: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (rev (lfappend lf7 (Cons n y))).
Lemma candidate_690: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7))   (lfappend (rev (lfappend lf7 y)) (Cons n Nil)).
Lemma candidate_691: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7))   (lfappend (rev (lfappend y Nil)) (Cons n Nil)).
Lemma candidate_692: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n (rev lf7))).
Lemma candidate_693: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n lf7)).
Lemma candidate_694: forall (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n lf7)) (lfappend (rev y) (Cons n Nil)).
Lemma candidate_695: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_696: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_697: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (lfappend lf7 (rev y)) (Cons n x)).
Lemma candidate_698: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend lf7 (lfappend (rev y) (Cons n x))).
Lemma candidate_699: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_700: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_701: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_702: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_703: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_704: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_705: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_706: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_707: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_708: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_709: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_710: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_711: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_712: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_713: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_714: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_715: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_716: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_717: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_718: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_719: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_720: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_721: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_722: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_723: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_724: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_725: forall (n : natural) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n (Nil))) x) (lfappend lf6 lf5).
Lemma candidate_726: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_727: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_728: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_729: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_730: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_731: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_732: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_733: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_734: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_735: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_736: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_737: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_738: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_739: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_740: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_741: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_742: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_743: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_744: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_745: @eq lst Nil (Nil).
Lemma candidate_746: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_747: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_748: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_749: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_750: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_751: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_752: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev y)))) (lfappend (rev y) lf5).
Lemma candidate_753: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend y Nil))) (lfappend (rev y) lf5).
Lemma candidate_754: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) y)) (lfappend (rev y) lf5).
Lemma candidate_755: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (rev (rev lf5))) (lfappend (rev y) lf5).
Lemma candidate_756: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend lf5 Nil)) (lfappend (rev y) lf5).
Lemma candidate_757: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_758: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n (Nil))) x) (lfappend (rev y) lf5).
Lemma candidate_759: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (rev (rev y)))).
Lemma candidate_760: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (lfappend y Nil))).
Lemma candidate_761: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) y)).
Lemma candidate_762: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (rev (rev lf5))).
Lemma candidate_763: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (lfappend lf5 Nil)).
Lemma candidate_764: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) lf5).
Lemma candidate_765: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (lfappend (rev y) Nil) (Cons n Nil)).
Lemma candidate_766: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (rev (rev (lfappend (rev y) (Cons n Nil)))).
Lemma candidate_767: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (lfappend (rev y) (Cons n Nil)) Nil).
Lemma candidate_768: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (rev (rev (rev y))) (Cons n Nil)).
Lemma candidate_769: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (rev (lfappend y Nil)) (Cons n Nil)).
Lemma candidate_770: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil)) (lfappend (rev y) (Cons n Nil)).
Lemma candidate_771: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_772: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_773: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_774: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_775: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_776: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_777: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_778: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_779: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_780: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_781: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_782: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_783: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_784: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 4349 seconds
Duplicates removed: 609
Filtered by Quickchick: 46
Filtered by script: 30
Remaining: 99

Lemmas: 
Lemma candidate_162: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_6: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_163: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_7: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_53: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_54: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_204: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_160: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_205: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_161: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_5: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_69: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_52: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_51: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_12: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (rev (rev x))).
Lemma candidate_9: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (rev (rev lf2)) x).
Lemma candidate_201: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_13: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend lf2 (lfappend x Nil)).
Lemma candidate_11: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 x) Nil).
Lemma candidate_10: forall (x : lst) (lf2 : lst), @eq lst (lfappend lf2 x) (lfappend (lfappend lf2 Nil) x).
Lemma candidate_240: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev lf5))) (lfappend lf6 lf5).
Lemma candidate_237: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) lf5) (lfappend lf6 lf5).
Lemma candidate_168: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_165: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (rev (rev lf6)) lf5).
Lemma candidate_22: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_202: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_241: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 Nil)) (lfappend lf6 lf5).
Lemma candidate_239: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf5) Nil) (lfappend lf6 lf5).
Lemma candidate_238: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) lf5) (lfappend lf6 lf5).
Lemma candidate_169: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_167: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_166: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 Nil) lf5).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_21: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_264: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (rev (rev lf5))) (lfappend (rev y) lf5).
Lemma candidate_180: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (rev (rev lf5))).
Lemma candidate_46: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (rev (rev lf4))).
Lemma candidate_265: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend lf5 Nil)) (lfappend (rev y) lf5).
Lemma candidate_181: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (lfappend (rev y) (lfappend lf5 Nil)).
Lemma candidate_47: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_359: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev (rev x)))) (lfappend lf6 (Cons n x)).
Lemma candidate_357: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf6)) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_261: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (rev (rev y)))) (lfappend (rev y) lf5).
Lemma candidate_197: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_195: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_177: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (rev (rev y)))).
Lemma candidate_32: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (lfappend lf4 x)).
Lemma candidate_391: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n y))) (lfappend (rev y) (Cons n x)).
Lemma candidate_217: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x)) (rev (lfappend (rev x) (Cons n y))).
Lemma candidate_360: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend x Nil))) (lfappend lf6 (Cons n x)).
Lemma candidate_358: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 Nil) (Cons n x)) (lfappend lf6 (Cons n x)).
Lemma candidate_262: forall (y : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend y Nil))) (lfappend (rev y) lf5).
Lemma candidate_198: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_196: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_178: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev y) lf5) (rev (lfappend (rev lf5) (lfappend y Nil))).
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma candidate_123: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_361: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev lf6)))) (lfappend lf6 (Cons n x)).
Lemma candidate_199: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n x)) (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_121: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_119: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_389: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (rev (rev x))))   (lfappend (rev y) (Cons n x)).
Lemma candidate_215: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_44: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 x)).
Lemma candidate_390: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n (lfappend x Nil)))   (lfappend (rev y) (Cons n x)).
Lemma candidate_388: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n x)) Nil)   (lfappend (rev y) (Cons n x)).
Lemma candidate_216: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (Cons n x))   (lfappend (lfappend (rev y) (Cons n Nil)) x).
Lemma candidate_431: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (rev (rev x)))).
Lemma candidate_142: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (rev (rev (rev y))) (Cons n Nil)).
Lemma candidate_422: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_143: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (rev (lfappend y Nil)) (Cons n Nil)).
Lemma candidate_141: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (lfappend (rev y) (Cons n Nil)) Nil).
Lemma candidate_139: forall (n : natural) (y : lst), @eq lst (lfappend (rev y) (Cons n Nil))   (lfappend (lfappend (rev y) Nil) (Cons n Nil)).
Lemma candidate_127: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (rev (rev x)))).
Lemma candidate_125: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (rev (rev lf6)) (Cons n x)).
Lemma candidate_27: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 lf4) x)   (lfappend lf6 (lfappend lf4 (lfappend x Nil))).
Lemma candidate_420: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_418: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend lf6 (Cons n Nil)) Nil) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_128: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend lf6 (Cons n (lfappend x Nil))).
Lemma candidate_126: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (lfappend (lfappend lf6 Nil) (Cons n x)).
Lemma candidate_77: forall (lf7 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x)   (lfappend lf6 (Cons n (lfappend lf7 x))).
Lemma candidate_120: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_40: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (rev (rev x)))).
Lemma candidate_129: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x)   (rev (lfappend (rev x) (Cons n (rev lf6)))).
Lemma candidate_486: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev (rev y))) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_484: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev (lfappend (rev y) (Cons n Nil)))) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_148: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (rev (rev x)))).
Lemma candidate_41: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) lf4) x)   (lfappend (rev y) (lfappend lf4 (lfappend x Nil))).
Lemma candidate_487: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (lfappend y Nil)) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_485: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend (rev y) (Cons n Nil)) Nil) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_483: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend (rev y) Nil) (Cons n Nil)) x)   (lfappend (rev y) (Cons n x)).
Lemma candidate_149: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (rev y) (Cons n (lfappend x Nil))).
Lemma candidate_147: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)   (lfappend (lfappend (rev y) (Cons n x)) Nil).
Lemma candidate_93: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)   (lfappend (rev y) (Cons n (lfappend lf7 x))).
Lemma candidate_419: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil) x)   (lfappend lf6 (Cons n x)).
Lemma candidate_417: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)) x)   (lfappend lf6 (Cons n x)).
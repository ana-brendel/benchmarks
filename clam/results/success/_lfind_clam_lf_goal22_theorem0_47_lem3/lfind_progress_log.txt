File Information
- File name: goal22
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal22_theorem0_47_lem3
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal22_theorem0_47_lem3
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x y0 : lst,
@eq bool (even (len (lfappend x y0))) (even (len (lfappend y0 x))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq bool (even (len y)) (even (len (lfappend y Nil)))

* Hypothesis:
y : lst

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
y : lst

* Terms:
len (lfappend y Nil) : natural
len y : natural
even (len y) : bool
bool : Set
lfappend y Nil : lst
lst : Set
y : lst
@eq bool (even (len y)) (even (len (lfappend y Nil))) : Prop
even (len (lfappend y Nil)) : bool
Nil : lst

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
even  : forall _ : natural, bool
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend y Nil
lf1 : bool = even (len (lfappend y Nil))
lf4 : bool = even (len y)
lf5 : natural = len y
lf2 : natural = len (lfappend y Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf4 lf1.
Lemma conj9: forall (lf5 : natural) (lf1 : bool), @eq bool (even lf5) lf1.
Lemma conj13: forall (lf1 : bool) (y : lst), @eq bool (even (len y)) lf1.
Lemma conj17: forall (lf2 : natural) (lf4 : bool), @eq bool lf4 (even lf2).
Lemma conj19: forall (lf4 : bool) (lf3 : lst), @eq bool lf4 (even (len lf3)).
Lemma conj25: forall (lf2 : natural) (lf5 : natural), @eq bool (even lf5) (even lf2).
Lemma conj27: forall (lf5 : natural) (lf3 : lst), @eq bool (even lf5) (even (len lf3)).
Lemma conj29: forall (lf2 : natural) (y : lst), @eq bool (even (len y)) (even lf2).
Lemma conj31: forall (y : lst) (lf3 : lst), @eq bool (even (len y)) (even (len lf3)).
Lemma conj51: forall (lf6 : lst) (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y lf6))).
Lemma conj52: forall (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y Nil))).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y lf6))).
Lemma conj60: forall (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y Nil))).
Lemma conj63: forall (lf6 : lst) (y : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).
Lemma conj64: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).


<---VALIDITY CHECKS--->
Time elapsed: 74 seconds
Valid:
Lemma conj64: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).

Invalid:
Lemma conj63: forall (lf6 : lst) (y : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).
Lemma conj60: forall (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y Nil))).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y lf6))).
Lemma conj52: forall (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y Nil))).
Lemma conj51: forall (lf6 : lst) (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y lf6))).
Lemma conj31: forall (y : lst) (lf3 : lst), @eq bool (even (len y)) (even (len lf3)).
Lemma conj29: forall (lf2 : natural) (y : lst), @eq bool (even (len y)) (even lf2).
Lemma conj27: forall (lf5 : natural) (lf3 : lst), @eq bool (even lf5) (even (len lf3)).
Lemma conj25: forall (lf2 : natural) (lf5 : natural), @eq bool (even lf5) (even lf2).
Lemma conj19: forall (lf4 : bool) (lf3 : lst), @eq bool lf4 (even (len lf3)).
Lemma conj17: forall (lf2 : natural) (lf4 : bool), @eq bool lf4 (even lf2).
Lemma conj13: forall (lf1 : bool) (y : lst), @eq bool (even (len y)) lf1.
Lemma conj9: forall (lf5 : natural) (lf1 : bool), @eq bool (even lf5) lf1.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf4 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 75 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (y : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).
Lemma conj60: forall (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y Nil))).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y lf6))).
Lemma conj52: forall (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y Nil))).
Lemma conj51: forall (lf6 : lst) (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y lf6))).
Lemma conj31: forall (y : lst) (lf3 : lst), @eq bool (even (len y)) (even (len lf3)).
Lemma conj29: forall (lf2 : natural) (y : lst), @eq bool (even (len y)) (even lf2).
Lemma conj27: forall (lf5 : natural) (lf3 : lst), @eq bool (even lf5) (even (len lf3)).
Lemma conj25: forall (lf2 : natural) (lf5 : natural), @eq bool (even lf5) (even lf2).
Lemma conj19: forall (lf4 : bool) (lf3 : lst), @eq bool lf4 (even (len lf3)).
Lemma conj17: forall (lf2 : natural) (lf4 : bool), @eq bool lf4 (even lf2).
Lemma conj13: forall (lf1 : bool) (y : lst), @eq bool (even (len y)) lf1.
Lemma conj9: forall (lf5 : natural) (lf1 : bool), @eq bool (even lf5) lf1.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf4 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 106 seconds
Valid:

Invalid:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf4 lf1.
Lemma conj9: forall (lf5 : natural) (lf1 : bool), @eq bool (even lf5) lf1.
Lemma conj13: forall (lf1 : bool) (y : lst), @eq bool (even (len y)) lf1.
Lemma conj17: forall (lf2 : natural) (lf4 : bool), @eq bool lf4 (even lf2).
Lemma conj19: forall (lf4 : bool) (lf3 : lst), @eq bool lf4 (even (len lf3)).
Lemma conj25: forall (lf2 : natural) (lf5 : natural), @eq bool (even lf5) (even lf2).
Lemma conj27: forall (lf5 : natural) (lf3 : lst), @eq bool (even lf5) (even (len lf3)).
Lemma conj29: forall (lf2 : natural) (y : lst), @eq bool (even (len y)) (even lf2).
Lemma conj31: forall (y : lst) (lf3 : lst), @eq bool (even (len y)) (even (len lf3)).
Lemma conj51: forall (lf6 : lst) (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y lf6))).
Lemma conj52: forall (lf4 : bool) (y : lst), @eq bool lf4 (even (len (lfappend y Nil))).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y lf6))).
Lemma conj60: forall (lf5 : natural) (y : lst), @eq bool (even lf5) (even (len (lfappend y Nil))).
Lemma conj63: forall (lf6 : lst) (y : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).


<---CREATE SKETCHES--->
Time elapsed: 106 seconds
Sketches:
Sketch conj9_sketch0 : @eq bool (##hole##) lf1
Sketch conj9_term_sketch0 : @eq bool (even lf5) (##hole##)
Sketch conj13_sketch0 : @eq bool (even (##hole##)) lf1
Sketch conj13_sketch1 : @eq bool (##hole##) lf1
Sketch conj13_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj13_term_sketch1 : @eq bool (even (len y)) (##hole##)
Sketch conj17_sketch0 : @eq bool lf4 (##hole##)
Sketch conj17_term_sketch0 : @eq bool (even lf2) (##hole##)
Sketch conj19_sketch0 : @eq bool lf4 (even (##hole##))
Sketch conj19_sketch1 : @eq bool lf4 (##hole##)
Sketch conj19_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq bool (even (len lf3)) (##hole##)
Sketch conj25_sketch0 : @eq bool (even lf5) (##hole##)
Sketch conj25_sketch1 : @eq bool (##hole##) (even lf2)
Sketch conj25_term_sketch0 : @eq bool (even lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq bool (even lf5) (##hole##)
Sketch conj27_sketch0 : @eq bool (even lf5) (even (##hole##))
Sketch conj27_sketch1 : @eq bool (even lf5) (##hole##)
Sketch conj27_sketch2 : @eq bool (##hole##) (even (len lf3))
Sketch conj27_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj27_term_sketch1 : @eq bool (even (len lf3)) (##hole##)
Sketch conj27_term_sketch2 : @eq bool (even lf5) (##hole##)
Sketch conj29_sketch0 : @eq bool (even (##hole##)) (even lf2)
Sketch conj29_sketch1 : @eq bool (##hole##) (even lf2)
Sketch conj29_sketch2 : @eq bool (even (len y)) (##hole##)
Sketch conj29_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj29_term_sketch1 : @eq bool (even (len y)) (##hole##)
Sketch conj29_term_sketch2 : @eq bool (even lf2) (##hole##)
Sketch conj31_sketch0 : @eq bool (even (len y)) (even (##hole##))
Sketch conj31_sketch1 : @eq bool (even (len y)) (##hole##)
Sketch conj31_sketch2 : @eq bool (even (##hole##)) (even (len lf3))
Sketch conj31_sketch3 : @eq bool (##hole##) (even (len lf3))
Sketch conj31_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj31_term_sketch1 : @eq bool (even (len lf3)) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (len y) (##hole##)
Sketch conj31_term_sketch3 : @eq bool (even (len y)) (##hole##)
Sketch conj51_sketch0 : @eq bool lf4 (even (##hole##))
Sketch conj51_sketch1 : @eq bool lf4 (##hole##)
Sketch conj51_sketch2 : @eq bool lf4 (even (len (##hole##)))
Sketch conj51_term_sketch0 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj51_term_sketch1 : @eq bool (even (len (lfappend y lf6))) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj52_sketch0 : @eq bool lf4 (even (##hole##))
Sketch conj52_sketch1 : @eq bool lf4 (even (len (##hole##)))
Sketch conj52_sketch2 : @eq bool lf4 (##hole##)
Sketch conj52_sketch3 : @eq bool lf4 (even (len (lfappend y (##hole##))))
Sketch conj52_term_sketch0 : @eq natural (len (lfappend y Nil)) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (lfappend y Nil) (##hole##)
Sketch conj52_term_sketch2 : @eq bool (even (len (lfappend y Nil))) (##hole##)
Sketch conj52_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj59_sketch0 : @eq bool (even lf5) (even (##hole##))
Sketch conj59_sketch1 : @eq bool (even lf5) (##hole##)
Sketch conj59_sketch2 : @eq bool (##hole##) (even (len (lfappend y lf6)))
Sketch conj59_sketch3 : @eq bool (even lf5) (even (len (##hole##)))
Sketch conj59_term_sketch0 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj59_term_sketch1 : @eq bool (even (len (lfappend y lf6))) (##hole##)
Sketch conj59_term_sketch2 : @eq bool (even lf5) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj60_sketch0 : @eq bool (even lf5) (even (##hole##))
Sketch conj60_sketch1 : @eq bool (even lf5) (even (len (##hole##)))
Sketch conj60_sketch2 : @eq bool (##hole##) (even (len (lfappend y Nil)))
Sketch conj60_sketch3 : @eq bool (even lf5) (##hole##)
Sketch conj60_sketch4 : @eq bool (even lf5) (even (len (lfappend y (##hole##))))
Sketch conj60_term_sketch0 : @eq natural (len (lfappend y Nil)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (lfappend y Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq bool (even lf5) (##hole##)
Sketch conj60_term_sketch3 : @eq bool (even (len (lfappend y Nil))) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj63_sketch0 : @eq bool (even (len y)) (even (##hole##))
Sketch conj63_sketch1 : @eq bool (even (len y)) (##hole##)
Sketch conj63_sketch2 : @eq bool (even (##hole##)) (even (len (lfappend y lf6)))
Sketch conj63_sketch3 : @eq bool (##hole##) (even (len (lfappend y lf6)))
Sketch conj63_sketch4 : @eq bool (even (len y)) (even (len (##hole##)))
Sketch conj63_term_sketch0 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj63_term_sketch1 : @eq bool (even (len (lfappend y lf6))) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (len y) (##hole##)
Sketch conj63_term_sketch3 : @eq bool (even (len y)) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend y lf6) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 608 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_6
Sketch conj52_sketch1 --> Problem  synth_13
Sketch conj60_term_sketch1 --> Problem  synth_18
Sketch conj59_term_sketch2 --> Problem  synth_2
Sketch conj25_sketch1 --> Problem  synth_7
Sketch conj63_sketch4 --> Problem  synth_18
Sketch conj60_term_sketch4 --> Problem  synth_19
Sketch conj59_term_sketch1 --> Problem  synth_15
Sketch conj29_term_sketch2 --> Problem  synth_7
Sketch conj59_sketch1 --> Problem  synth_2
Sketch conj60_sketch0 --> Problem  synth_11
Sketch conj17_term_sketch0 --> Problem  synth_7
Sketch conj13_term_sketch1 --> Problem  synth_5
Sketch conj63_term_sketch0 --> Problem  synth_14
Sketch conj31_sketch0 --> Problem  synth_4
Sketch conj31_term_sketch3 --> Problem  synth_5
Sketch conj31_term_sketch1 --> Problem  synth_10
Sketch conj60_term_sketch3 --> Problem  synth_5
Sketch conj60_term_sketch2 --> Problem  synth_2
Sketch conj60_sketch1 --> Problem  synth_20
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj60_sketch2 --> Problem  synth_5
Sketch conj59_sketch3 --> Problem  synth_20
Sketch conj27_term_sketch2 --> Problem  synth_2
Sketch conj63_term_sketch4 --> Problem  synth_16
Sketch conj59_sketch2 --> Problem  synth_15
Sketch conj29_sketch0 --> Problem  synth_12
Sketch conj52_term_sketch1 --> Problem  synth_18
Sketch conj13_term_sketch0 --> Problem  synth_4
Sketch conj19_term_sketch1 --> Problem  synth_10
Sketch conj51_term_sketch2 --> Problem  synth_16
Sketch conj27_sketch2 --> Problem  synth_10
Sketch conj60_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch2 --> Problem  synth_5
Sketch conj31_sketch2 --> Problem  synth_9
Sketch conj27_sketch1 --> Problem  synth_2
Sketch conj60_sketch3 --> Problem  synth_2
Sketch conj51_sketch0 --> Problem  synth_8
Sketch conj29_term_sketch1 --> Problem  synth_5
Sketch conj31_sketch3 --> Problem  synth_10
Sketch conj19_term_sketch0 --> Problem  synth_9
Sketch conj29_sketch1 --> Problem  synth_7
Sketch conj52_term_sketch3 --> Problem  synth_19
Sketch conj63_term_sketch1 --> Problem  synth_15
Sketch conj51_term_sketch1 --> Problem  synth_15
Sketch conj51_term_sketch0 --> Problem  synth_14
Sketch conj52_term_sketch0 --> Problem  synth_4
Sketch conj27_term_sketch1 --> Problem  synth_10
Sketch conj19_sketch0 --> Problem  synth_8
Sketch conj17_sketch0 --> Problem  synth_6
Sketch conj63_sketch2 --> Problem  synth_14
Sketch conj25_term_sketch1 --> Problem  synth_2
Sketch conj52_sketch0 --> Problem  synth_8
Sketch conj59_sketch0 --> Problem  synth_11
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj63_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch0 --> Problem  synth_4
Sketch conj63_sketch3 --> Problem  synth_15
Sketch conj29_term_sketch0 --> Problem  synth_4
Sketch conj59_term_sketch0 --> Problem  synth_14
Sketch conj52_sketch3 --> Problem  synth_17
Sketch conj31_term_sketch0 --> Problem  synth_9
Sketch conj59_term_sketch3 --> Problem  synth_16
Sketch conj51_sketch1 --> Problem  synth_6
Sketch conj63_sketch1 --> Problem  synth_5
Sketch conj27_sketch0 --> Problem  synth_11
Sketch conj19_sketch1 --> Problem  synth_6
Sketch conj25_sketch0 --> Problem  synth_2
Sketch conj60_sketch4 --> Problem  synth_21
Sketch conj13_sketch1 --> Problem  synth_1
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj31_sketch1 --> Problem  synth_5
Sketch conj31_term_sketch2 --> Problem  synth_4
Sketch conj27_term_sketch0 --> Problem  synth_9
Sketch conj51_sketch2 --> Problem  synth_13
Sketch conj29_sketch2 --> Problem  synth_5
Sketch conj25_term_sketch0 --> Problem  synth_7
Sketch conj63_term_sketch2 --> Problem  synth_4


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 855 seconds

Problem: synth_20

Problem: synth_18
 lfappend (lfappend (lfappend y Nil) Nil) Nil
 lfappend (lfappend y Nil) Nil
 lfappend y Nil
 y

Problem: synth_17
 Nil

Problem: synth_21
 Nil

Problem: synth_9
 len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)
 len (lfappend (lfappend lf3 Nil) Nil)
 len (lfappend lf3 Nil)
 len lf3

Problem: synth_13

Problem: synth_6
 lf4

Problem: synth_11
 lf5

Problem: synth_7
 negb (negb (negb (negb (negb (negb (negb (negb (even lf2))))))))
 negb (negb (negb (negb (negb (negb (even lf2))))))
 negb (negb (negb (negb (even lf2))))
 negb (negb (even lf2))
 even lf2

Problem: synth_4
 len (lfappend (lfappend (lfappend y Nil) Nil) Nil)
 len (lfappend (lfappend y Nil) Nil)
 len (lfappend y Nil)
 len y

Problem: synth_1
 lf1

Problem: synth_16
 lfappend lf6 (lfappend y Nil)
 lfappend y (lfappend lf6 Nil)
 lfappend lf6 y
 lfappend y lf6
 lfappend y Nil
 y

Problem: synth_19
 Nil

Problem: synth_15
 even (len (lfappend y (lfappend lf6 Nil)))
 even (len (lfappend lf6 y))
 even (len (lfappend y lf6))
 even (len (lfappend y Nil))
 negb (negb (even (len y)))
 even (len y)

Problem: synth_14
 len (lfappend lf6 (lfappend y Nil))
 len (lfappend y (lfappend lf6 Nil))
 len (lfappend lf6 y)
 len (lfappend y lf6)
 len (lfappend y Nil)
 len y

Problem: synth_10
 negb (negb (even (len (lfappend lf3 Nil))))
 negb (negb (negb (negb (even (len lf3)))))
 even (len (lfappend lf3 (lfappend lf3 lf3)))
 even (len (lfappend lf3 Nil))
 negb (negb (even (len lf3)))
 even (len lf3)

Problem: synth_8

Problem: synth_3

Problem: synth_12
 lf2

Problem: synth_5
 negb (negb (even (len (lfappend y Nil))))
 negb (negb (negb (negb (even (len y)))))
 even (len (lfappend y (lfappend y y)))
 even (len (lfappend y Nil))
 negb (negb (even (len y)))
 even (len y)

Problem: synth_2
 negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))
 negb (negb (negb (negb (negb (negb (even lf5))))))
 negb (negb (negb (negb (even lf5))))
 negb (negb (even lf5))
 even lf5

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 855 seconds
Lemmas:
Lemma candidate_1: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_2: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_3: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_4: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_5: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_6: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_7: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_8: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_9: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_10: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_11: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_12: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_13: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_14: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_15: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_16: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_17: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_18: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_19: forall (lf4 : bool), @eq bool lf4 (lf4).
Lemma candidate_20: forall (lf2 : natural), @eq bool (even lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf2))))))))).
Lemma candidate_21: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (negb (negb (even lf2))))))).
Lemma candidate_22: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (even lf2))))).
Lemma candidate_23: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (even lf2))).
Lemma candidate_24: forall (lf2 : natural), @eq bool (even lf2) (even lf2).
Lemma candidate_25: forall (lf4 : bool), @eq bool lf4 (lf4).
Lemma candidate_26: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_27: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_28: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_29: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_30: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len (lfappend lf3 Nil))))).
Lemma candidate_31: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (negb (negb (even (len lf3)))))).
Lemma candidate_32: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 (lfappend lf3 lf3)))).
Lemma candidate_33: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 Nil))).
Lemma candidate_34: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len lf3)))).
Lemma candidate_35: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len lf3)).
Lemma candidate_36: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_37: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_38: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_39: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_40: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_41: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf2)))))))))   (even lf2).
Lemma candidate_42: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf2))))))) (even lf2).
Lemma candidate_43: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (even lf2))))) (even lf2).
Lemma candidate_44: forall (lf2 : natural), @eq bool (negb (negb (even lf2))) (even lf2).
Lemma candidate_45: forall (lf2 : natural), @eq bool (even lf2) (even lf2).
Lemma candidate_46: forall (lf2 : natural), @eq bool (even lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf2))))))))).
Lemma candidate_47: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (negb (negb (even lf2))))))).
Lemma candidate_48: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (even lf2))))).
Lemma candidate_49: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (even lf2))).
Lemma candidate_50: forall (lf2 : natural), @eq bool (even lf2) (even lf2).
Lemma candidate_51: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_52: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_53: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_54: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_55: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_56: forall (lf5 : natural), @eq bool (even lf5) (even (lf5)).
Lemma candidate_57: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_58: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_59: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_60: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_61: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_62: forall (lf3 : lst), @eq bool (negb (negb (even (len (lfappend lf3 Nil))))) (even (len lf3)).
Lemma candidate_63: forall (lf3 : lst), @eq bool (negb (negb (negb (negb (even (len lf3)))))) (even (len lf3)).
Lemma candidate_64: forall (lf3 : lst), @eq bool (even (len (lfappend lf3 (lfappend lf3 lf3)))) (even (len lf3)).
Lemma candidate_65: forall (lf3 : lst), @eq bool (even (len (lfappend lf3 Nil))) (even (len lf3)).
Lemma candidate_66: forall (lf3 : lst), @eq bool (negb (negb (even (len lf3)))) (even (len lf3)).
Lemma candidate_67: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len lf3)).
Lemma candidate_68: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_69: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_70: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_71: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_72: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len (lfappend lf3 Nil))))).
Lemma candidate_73: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (negb (negb (even (len lf3)))))).
Lemma candidate_74: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 (lfappend lf3 lf3)))).
Lemma candidate_75: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 Nil))).
Lemma candidate_76: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len lf3)))).
Lemma candidate_77: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len lf3)).
Lemma candidate_78: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_79: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_80: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_81: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_82: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_83: forall (lf2 : natural), @eq bool (even (lf2)) (even lf2).
Lemma candidate_84: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf2)))))))))   (even lf2).
Lemma candidate_85: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf2))))))) (even lf2).
Lemma candidate_86: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (even lf2))))) (even lf2).
Lemma candidate_87: forall (lf2 : natural), @eq bool (negb (negb (even lf2))) (even lf2).
Lemma candidate_88: forall (lf2 : natural), @eq bool (even lf2) (even lf2).
Lemma candidate_89: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_90: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_91: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_92: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_93: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_94: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_95: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_96: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_97: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_98: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_99: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_100: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_101: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_102: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_103: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_104: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_105: forall (lf2 : natural), @eq bool (even lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf2))))))))).
Lemma candidate_106: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (negb (negb (even lf2))))))).
Lemma candidate_107: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (even lf2))))).
Lemma candidate_108: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (even lf2))).
Lemma candidate_109: forall (lf2 : natural), @eq bool (even lf2) (even lf2).
Lemma candidate_110: forall (y : lst), @eq bool (even (len y))   (even (len (lfappend (lfappend (lfappend y Nil) Nil) Nil))).
Lemma candidate_111: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend (lfappend y Nil) Nil))).
Lemma candidate_112: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_113: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_114: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_115: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_116: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_117: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_118: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_119: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_120: forall (lf3 : lst), @eq bool (even (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)))   (even (len lf3)).
Lemma candidate_121: forall (lf3 : lst), @eq bool (even (len (lfappend (lfappend lf3 Nil) Nil))) (even (len lf3)).
Lemma candidate_122: forall (lf3 : lst), @eq bool (even (len (lfappend lf3 Nil))) (even (len lf3)).
Lemma candidate_123: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len lf3)).
Lemma candidate_124: forall (lf3 : lst), @eq bool (negb (negb (even (len (lfappend lf3 Nil))))) (even (len lf3)).
Lemma candidate_125: forall (lf3 : lst), @eq bool (negb (negb (negb (negb (even (len lf3)))))) (even (len lf3)).
Lemma candidate_126: forall (lf3 : lst), @eq bool (even (len (lfappend lf3 (lfappend lf3 lf3)))) (even (len lf3)).
Lemma candidate_127: forall (lf3 : lst), @eq bool (even (len (lfappend lf3 Nil))) (even (len lf3)).
Lemma candidate_128: forall (lf3 : lst), @eq bool (negb (negb (even (len lf3)))) (even (len lf3)).
Lemma candidate_129: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len lf3)).
Lemma candidate_130: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_131: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_132: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_133: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_134: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len (lfappend lf3 Nil))))).
Lemma candidate_135: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (negb (negb (even (len lf3)))))).
Lemma candidate_136: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 (lfappend lf3 lf3)))).
Lemma candidate_137: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 Nil))).
Lemma candidate_138: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len lf3)))).
Lemma candidate_139: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len lf3)).
Lemma candidate_140: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_141: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_142: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_143: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_144: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_145: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_146: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_147: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_148: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_149: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_150: forall (lf4 : bool), @eq bool lf4 (lf4).
Lemma candidate_151: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_152: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_153: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_154: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_155: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y Nil)).
Lemma candidate_156: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len y).
Lemma candidate_157: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6)))   (even (len (lfappend y (lfappend lf6 Nil)))).
Lemma candidate_158: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend lf6 y))).
Lemma candidate_159: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y lf6))).
Lemma candidate_160: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y Nil))).
Lemma candidate_161: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (negb (negb (even (len y)))).
Lemma candidate_162: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len y)).
Lemma candidate_163: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_164: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_165: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend lf6 y).
Lemma candidate_166: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_167: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y Nil).
Lemma candidate_168: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (y).
Lemma candidate_169: forall (lf4 : bool), @eq bool lf4 (lf4).
Lemma candidate_170: forall (y : lst) (lf4 : bool), @eq bool lf4 (even (len (lfappend y (Nil)))).
Lemma candidate_171: forall (y : lst), @eq natural (len (lfappend y Nil))   (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_172: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_173: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend y Nil)).
Lemma candidate_174: forall (y : lst), @eq natural (len (lfappend y Nil)) (len y).
Lemma candidate_175: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend (lfappend y Nil) Nil) Nil).
Lemma candidate_176: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend y Nil) Nil).
Lemma candidate_177: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_178: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_179: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_180: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_181: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (even (len (lfappend y (lfappend y y)))).
Lemma candidate_182: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (even (len (lfappend y Nil))).
Lemma candidate_183: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (negb (negb (even (len y)))).
Lemma candidate_184: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (even (len y)).
Lemma candidate_185: @eq lst Nil (Nil).
Lemma candidate_186: forall (lf5 : natural), @eq bool (even lf5) (even (lf5)).
Lemma candidate_187: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_188: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_189: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_190: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_191: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_192: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y (lfappend lf6 Nil))))   (even (len (lfappend y lf6))).
Lemma candidate_193: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend lf6 y))) (even (len (lfappend y lf6))).
Lemma candidate_194: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y lf6))).
Lemma candidate_195: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y Nil))) (even (len (lfappend y lf6))).
Lemma candidate_196: forall (y : lst) (lf6 : lst), @eq bool (negb (negb (even (len y)))) (even (len (lfappend y lf6))).
Lemma candidate_197: forall (y : lst) (lf6 : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).
Lemma candidate_198: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_199: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_200: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_201: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_202: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y Nil)).
Lemma candidate_203: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len y).
Lemma candidate_204: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6)))   (even (len (lfappend y (lfappend lf6 Nil)))).
Lemma candidate_205: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend lf6 y))).
Lemma candidate_206: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y lf6))).
Lemma candidate_207: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y Nil))).
Lemma candidate_208: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (negb (negb (even (len y)))).
Lemma candidate_209: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len y)).
Lemma candidate_210: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_211: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_212: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_213: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_214: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_215: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_216: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_217: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend lf6 y).
Lemma candidate_218: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_219: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y Nil).
Lemma candidate_220: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (y).
Lemma candidate_221: forall (lf5 : natural), @eq bool (even lf5) (even (lf5)).
Lemma candidate_222: forall (y : lst), @eq bool (negb (negb (even (len (lfappend y Nil)))))   (even (len (lfappend y Nil))).
Lemma candidate_223: forall (y : lst), @eq bool (negb (negb (negb (negb (even (len y))))))   (even (len (lfappend y Nil))).
Lemma candidate_224: forall (y : lst), @eq bool (even (len (lfappend y (lfappend y y))))   (even (len (lfappend y Nil))).
Lemma candidate_225: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (even (len (lfappend y Nil))).
Lemma candidate_226: forall (y : lst), @eq bool (negb (negb (even (len y)))) (even (len (lfappend y Nil))).
Lemma candidate_227: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_228: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_229: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_230: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_231: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_232: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_233: forall (y : lst) (lf5 : natural), @eq bool (even lf5) (even (len (lfappend y (Nil)))).
Lemma candidate_234: forall (y : lst), @eq natural (len (lfappend y Nil))   (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_235: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_236: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend y Nil)).
Lemma candidate_237: forall (y : lst), @eq natural (len (lfappend y Nil)) (len y).
Lemma candidate_238: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend (lfappend y Nil) Nil) Nil).
Lemma candidate_239: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend y Nil) Nil).
Lemma candidate_240: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_241: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_242: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_243: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_244: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_245: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_246: forall (lf5 : natural), @eq bool (even lf5) (even lf5).
Lemma candidate_247: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_248: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_249: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (even (len (lfappend y (lfappend y y)))).
Lemma candidate_250: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (even (len (lfappend y Nil))).
Lemma candidate_251: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (negb (negb (even (len y)))).
Lemma candidate_252: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (even (len y)).
Lemma candidate_253: @eq lst Nil (Nil).
Lemma candidate_254: forall (y : lst), @eq bool (even (len y))   (even (len (lfappend (lfappend (lfappend y Nil) Nil) Nil))).
Lemma candidate_255: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend (lfappend y Nil) Nil))).
Lemma candidate_256: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_257: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_258: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_259: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_260: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_261: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_262: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_263: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_264: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend lf6 (lfappend y Nil))))   (even (len (lfappend y lf6))).
Lemma candidate_265: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y (lfappend lf6 Nil))))   (even (len (lfappend y lf6))).
Lemma candidate_266: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend lf6 y))) (even (len (lfappend y lf6))).
Lemma candidate_267: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y lf6))).
Lemma candidate_268: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y Nil))) (even (len (lfappend y lf6))).
Lemma candidate_269: forall (y : lst) (lf6 : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).
Lemma candidate_270: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y (lfappend lf6 Nil))))   (even (len (lfappend y lf6))).
Lemma candidate_271: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend lf6 y))) (even (len (lfappend y lf6))).
Lemma candidate_272: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y lf6))).
Lemma candidate_273: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y Nil))) (even (len (lfappend y lf6))).
Lemma candidate_274: forall (y : lst) (lf6 : lst), @eq bool (negb (negb (even (len y)))) (even (len (lfappend y lf6))).
Lemma candidate_275: forall (y : lst) (lf6 : lst), @eq bool (even (len y)) (even (len (lfappend y lf6))).
Lemma candidate_276: forall (y : lst), @eq bool (even (len y))   (even (len (lfappend (lfappend (lfappend y Nil) Nil) Nil))).
Lemma candidate_277: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend (lfappend y Nil) Nil))).
Lemma candidate_278: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_279: forall (y : lst), @eq bool (even (len y)) (even (len (y))).
Lemma candidate_280: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_281: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_282: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_283: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_284: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y Nil)).
Lemma candidate_285: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len y).
Lemma candidate_286: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6)))   (even (len (lfappend y (lfappend lf6 Nil)))).
Lemma candidate_287: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend lf6 y))).
Lemma candidate_288: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y lf6))).
Lemma candidate_289: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len (lfappend y Nil))).
Lemma candidate_290: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (negb (negb (even (len y)))).
Lemma candidate_291: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6))) (even (len y)).
Lemma candidate_292: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_293: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_294: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_295: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_296: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_297: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_298: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_299: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y Nil))).
Lemma candidate_300: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_301: forall (y : lst), @eq bool (even (len y)) (even (len y)).
Lemma candidate_302: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend lf6 (lfappend y Nil)).
Lemma candidate_303: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_304: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend lf6 y).
Lemma candidate_305: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_306: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y Nil).
Lemma candidate_307: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1321 seconds
Duplicates removed: 215
Filtered by Quickchick: 14
Filtered by script: 23
Remaining: 55

Lemmas: 
Lemma candidate_178: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_174: forall (y : lst), @eq natural (len (lfappend y Nil)) (len y).
Lemma candidate_11: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_44: forall (lf2 : natural), @eq bool (negb (negb (even lf2))) (even lf2).
Lemma candidate_23: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (even lf2))).
Lemma candidate_6: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (even lf5))).
Lemma candidate_28: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_17: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len y)))).
Lemma candidate_176: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend y Nil) Nil).
Lemma candidate_164: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_66: forall (lf3 : lst), @eq bool (negb (negb (even (len lf3)))) (even (len lf3)).
Lemma candidate_34: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len lf3)))).
Lemma candidate_153: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_10: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_43: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (even lf2))))) (even lf2).
Lemma candidate_22: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (even lf2))))).
Lemma candidate_5: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (even lf5))))).
Lemma candidate_27: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_15: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend y (lfappend y y)))).
Lemma candidate_14: forall (y : lst), @eq bool (even (len y)) (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_226: forall (y : lst), @eq bool (negb (negb (even (len y)))) (even (len (lfappend y Nil))).
Lemma candidate_183: forall (y : lst), @eq bool (even (len (lfappend y Nil))) (negb (negb (even (len y)))).
Lemma candidate_13: forall (y : lst), @eq bool (even (len y)) (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_111: forall (y : lst), @eq bool (even (len y)) (even (len (lfappend (lfappend y Nil) Nil))).
Lemma candidate_63: forall (lf3 : lst), @eq bool (negb (negb (negb (negb (even (len lf3)))))) (even (len lf3)).
Lemma candidate_31: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (negb (negb (even (len lf3)))))).
Lemma candidate_175: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend (lfappend y Nil) Nil) Nil).
Lemma candidate_62: forall (lf3 : lst), @eq bool (negb (negb (even (len (lfappend lf3 Nil))))) (even (len lf3)).
Lemma candidate_30: forall (lf3 : lst), @eq bool (even (len lf3)) (negb (negb (even (len (lfappend lf3 Nil))))).
Lemma candidate_172: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_152: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_151: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_121: forall (lf3 : lst), @eq bool (even (len (lfappend (lfappend lf3 Nil) Nil))) (even (len lf3)).
Lemma candidate_64: forall (lf3 : lst), @eq bool (even (len (lfappend lf3 (lfappend lf3 lf3)))) (even (len lf3)).
Lemma candidate_42: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf2))))))) (even lf2).
Lemma candidate_32: forall (lf3 : lst), @eq bool (even (len lf3)) (even (len (lfappend lf3 (lfappend lf3 lf3)))).
Lemma candidate_21: forall (lf2 : natural), @eq bool (even lf2) (negb (negb (negb (negb (negb (negb (even lf2))))))).
Lemma candidate_9: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_4: forall (lf5 : natural), @eq bool (even lf5) (negb (negb (negb (negb (negb (negb (even lf5))))))).
Lemma candidate_26: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_224: forall (y : lst), @eq bool (even (len (lfappend y (lfappend y y))))   (even (len (lfappend y Nil))).
Lemma candidate_181: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (even (len (lfappend y (lfappend y y)))).
Lemma candidate_223: forall (y : lst), @eq bool (negb (negb (negb (negb (even (len y))))))   (even (len (lfappend y Nil))).
Lemma candidate_180: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (negb (negb (negb (negb (even (len y)))))).
Lemma candidate_222: forall (y : lst), @eq bool (negb (negb (even (len (lfappend y Nil)))))   (even (len (lfappend y Nil))).
Lemma candidate_179: forall (y : lst), @eq bool (even (len (lfappend y Nil)))   (negb (negb (even (len (lfappend y Nil))))).
Lemma candidate_264: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend lf6 (lfappend y Nil))))   (even (len (lfappend y lf6))).
Lemma candidate_192: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y (lfappend lf6 Nil))))   (even (len (lfappend y lf6))).
Lemma candidate_157: forall (y : lst) (lf6 : lst), @eq bool (even (len (lfappend y lf6)))   (even (len (lfappend y (lfappend lf6 Nil)))).
Lemma candidate_110: forall (y : lst), @eq bool (even (len y))   (even (len (lfappend (lfappend (lfappend y Nil) Nil) Nil))).
Lemma candidate_41: forall (lf2 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf2)))))))))   (even lf2).
Lemma candidate_20: forall (lf2 : natural), @eq bool (even lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf2))))))))).
Lemma candidate_3: forall (lf5 : natural), @eq bool (even lf5)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf5))))))))).
Lemma candidate_171: forall (y : lst), @eq natural (len (lfappend y Nil))   (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_120: forall (lf3 : lst), @eq bool (even (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)))   (even (len lf3)).
File Information
- File name: goal23
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal23_lem_46_lem2
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal23_lem_46_lem2
- Namespace: adtind
- Proof name: lem
- Theorem: Theorem lem: forall l0 l3 : lst, @eq natural (len (lfappend l0 l3)) (len (lfappend l3 l0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1)))

* Hypothesis:
l1 : lst
IHl1 : forall l0 : lst, @eq natural (len (lfappend l1 l0)) (len (lfappend l0 l1))
n : natural
l2 : lst

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
l1 : lst
n : natural
l2 : lst

* Terms:
forall l0 : lst, @eq natural (len (lfappend l1 l0)) (len (lfappend l0 l1)) : Prop
len (lfappend l2 (Cons n l1)) : natural
lfappend _UNBOUND_REL_1 l1 : lst
lfappend l2 (Cons n l1) : lst
l2 : lst
l1 : lst
@eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))) : Prop
len (lfappend _UNBOUND_REL_1 l1) : natural
len (lfappend l1 _UNBOUND_REL_1) : natural
len (lfappend l2 l1) : natural
Succ (len (lfappend l2 l1)) : natural
lst : Set
natural : Set
@eq natural (len (lfappend l1 _UNBOUND_REL_1))
  (len (lfappend _UNBOUND_REL_1 l1)) : Prop
n : natural
Cons n l1 : lst
lfappend l1 _UNBOUND_REL_1 : lst
lfappend l2 l1 : lst

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
Succ  : forall _ : natural, natural
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend l2 (Cons n l1)
lf1 : natural = len (lfappend l2 (Cons n l1))
lf4 : natural = len (lfappend l2 l1)
lf5 : lst = lfappend l2 l1
lf2 : natural = Succ (len (lfappend l2 l1))
lf6 : lst = Cons n l1

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj15: forall (l1 : lst) (lf1 : natural) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) lf1.
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj31: forall (l1 : lst) (l2 : lst) (lf3 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len lf3).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 lf6)).
Lemma conj50: forall (l1 : lst) (lf2 : natural) (n : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 (Cons n l1))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 lf6)).
Lemma conj52: forall (l1 : lst) (lf4 : natural) (n : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 (Cons n l1))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 lf6)).
Lemma conj60: forall (l1 : lst) (lf5 : lst) (n : natural) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 (Cons n l1))).
Lemma conj63: forall (lf6 : lst) (l1 : lst) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 lf6)).
Lemma conj64: forall (l1 : lst) (n : natural) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))).


<---VALIDITY CHECKS--->
Time elapsed: 38 seconds
Valid:
Lemma conj64: forall (l1 : lst) (n : natural) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))).

Invalid:
Lemma conj63: forall (lf6 : lst) (l1 : lst) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 lf6)).
Lemma conj60: forall (l1 : lst) (lf5 : lst) (n : natural) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 (Cons n l1))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 lf6)).
Lemma conj52: forall (l1 : lst) (lf4 : natural) (n : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 (Cons n l1))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 lf6)).
Lemma conj50: forall (l1 : lst) (lf2 : natural) (n : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 (Cons n l1))).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 lf6)).
Lemma conj31: forall (l1 : lst) (l2 : lst) (lf3 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj15: forall (l1 : lst) (lf1 : natural) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 52 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (l1 : lst) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 lf6)).
Lemma conj60: forall (l1 : lst) (lf5 : lst) (n : natural) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 (Cons n l1))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 lf6)).
Lemma conj52: forall (l1 : lst) (lf4 : natural) (n : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 (Cons n l1))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 lf6)).
Lemma conj50: forall (l1 : lst) (lf2 : natural) (n : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 (Cons n l1))).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 lf6)).
Lemma conj31: forall (l1 : lst) (l2 : lst) (lf3 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj15: forall (l1 : lst) (lf1 : natural) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 74 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj15: forall (l1 : lst) (lf1 : natural) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) lf1.
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj31: forall (l1 : lst) (l2 : lst) (lf3 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len lf3).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 lf6)).
Lemma conj50: forall (l1 : lst) (lf2 : natural) (n : natural) (l2 : lst), @eq natural lf2 (len (lfappend l2 (Cons n l1))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 lf6)).
Lemma conj52: forall (l1 : lst) (lf4 : natural) (n : natural) (l2 : lst), @eq natural (Succ lf4) (len (lfappend l2 (Cons n l1))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 lf6)).
Lemma conj60: forall (l1 : lst) (lf5 : lst) (n : natural) (l2 : lst), @eq natural (Succ (len lf5)) (len (lfappend l2 (Cons n l1))).
Lemma conj63: forall (lf6 : lst) (l1 : lst) (l2 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 lf6)).


<---CREATE SKETCHES--->
Time elapsed: 75 seconds
Sketches:
Sketch conj3_sketch0 : @eq natural (##hole##) lf1
Sketch conj3_term_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj11_sketch0 : @eq natural (Succ (##hole##)) lf1
Sketch conj11_sketch1 : @eq natural (##hole##) lf1
Sketch conj11_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj15_sketch0 : @eq natural (Succ (##hole##)) lf1
Sketch conj15_sketch1 : @eq natural (##hole##) lf1
Sketch conj15_sketch2 : @eq natural (Succ (len (##hole##))) lf1
Sketch conj15_term_sketch0 : @eq natural (len (lfappend l2 l1)) (##hole##)
Sketch conj15_term_sketch1 : @eq natural (Succ (len (lfappend l2 l1))) (##hole##)
Sketch conj15_term_sketch2 : @eq lst (lfappend l2 l1) (##hole##)
Sketch conj17_sketch0 : @eq natural lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj19_sketch1 : @eq natural (##hole##) (len lf3)
Sketch conj19_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj27_sketch0 : @eq natural (Succ (##hole##)) (len lf3)
Sketch conj27_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj27_sketch2 : @eq natural (##hole##) (len lf3)
Sketch conj27_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj27_term_sketch1 : @eq natural (len lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj31_sketch0 : @eq natural (Succ (len (lfappend l2 l1))) (##hole##)
Sketch conj31_sketch1 : @eq natural (Succ (##hole##)) (len lf3)
Sketch conj31_sketch2 : @eq natural (##hole##) (len lf3)
Sketch conj31_sketch3 : @eq natural (Succ (len (##hole##))) (len lf3)
Sketch conj31_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj31_term_sketch1 : @eq natural (len (lfappend l2 l1)) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (Succ (len (lfappend l2 l1))) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (lfappend l2 l1) (##hole##)
Sketch conj49_sketch0 : @eq natural lf2 (##hole##)
Sketch conj49_sketch1 : @eq natural lf2 (len (##hole##))
Sketch conj49_term_sketch0 : @eq natural (len (lfappend l2 lf6)) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (lfappend l2 lf6) (##hole##)
Sketch conj50_sketch0 : @eq natural lf2 (##hole##)
Sketch conj50_sketch1 : @eq natural lf2 (len (##hole##))
Sketch conj50_sketch2 : @eq natural lf2 (len (lfappend l2 (##hole##)))
Sketch conj50_term_sketch0 : @eq natural (len (lfappend l2 (Cons n l1))) (##hole##)
Sketch conj50_term_sketch1 : @eq lst (lfappend l2 (Cons n l1)) (##hole##)
Sketch conj50_term_sketch2 : @eq lst (Cons n l1) (##hole##)
Sketch conj51_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj51_sketch1 : @eq natural (##hole##) (len (lfappend l2 lf6))
Sketch conj51_sketch2 : @eq natural (Succ lf4) (len (##hole##))
Sketch conj51_term_sketch0 : @eq natural (len (lfappend l2 lf6)) (##hole##)
Sketch conj51_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (lfappend l2 lf6) (##hole##)
Sketch conj52_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj52_sketch1 : @eq natural (Succ lf4) (len (##hole##))
Sketch conj52_sketch2 : @eq natural (##hole##) (len (lfappend l2 (Cons n l1)))
Sketch conj52_sketch3 : @eq natural (Succ lf4) (len (lfappend l2 (##hole##)))
Sketch conj52_term_sketch0 : @eq natural (len (lfappend l2 (Cons n l1))) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (lfappend l2 (Cons n l1)) (##hole##)
Sketch conj52_term_sketch2 : @eq natural (Succ lf4) (##hole##)
Sketch conj52_term_sketch3 : @eq lst (Cons n l1) (##hole##)
Sketch conj59_sketch0 : @eq natural (Succ (##hole##)) (len (lfappend l2 lf6))
Sketch conj59_sketch1 : @eq natural (##hole##) (len (lfappend l2 lf6))
Sketch conj59_sketch2 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj59_sketch3 : @eq natural (Succ (len lf5)) (len (##hole##))
Sketch conj59_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj59_term_sketch2 : @eq natural (len (lfappend l2 lf6)) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lfappend l2 lf6) (##hole##)
Sketch conj60_sketch0 : @eq natural (Succ (##hole##)) (len (lfappend l2 (Cons n l1)))
Sketch conj60_sketch1 : @eq natural (##hole##) (len (lfappend l2 (Cons n l1)))
Sketch conj60_sketch2 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj60_sketch3 : @eq natural (Succ (len lf5)) (len (##hole##))
Sketch conj60_sketch4 : @eq natural (Succ (len lf5)) (len (lfappend l2 (##hole##)))
Sketch conj60_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj60_term_sketch2 : @eq natural (len (lfappend l2 (Cons n l1))) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (lfappend l2 (Cons n l1)) (##hole##)
Sketch conj60_term_sketch4 : @eq lst (Cons n l1) (##hole##)
Sketch conj63_sketch0 : @eq natural (Succ (len (lfappend l2 l1))) (##hole##)
Sketch conj63_sketch1 : @eq natural (Succ (##hole##)) (len (lfappend l2 lf6))
Sketch conj63_sketch2 : @eq natural (##hole##) (len (lfappend l2 lf6))
Sketch conj63_sketch3 : @eq natural (Succ (len (lfappend l2 l1))) (len (##hole##))
Sketch conj63_sketch4 : @eq natural (Succ (len (##hole##))) (len (lfappend l2 lf6))
Sketch conj63_term_sketch0 : @eq natural (len (lfappend l2 lf6)) (##hole##)
Sketch conj63_term_sketch1 : @eq natural (len (lfappend l2 l1)) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (Succ (len (lfappend l2 l1))) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend l2 lf6) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend l2 l1) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 287 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_18
Sketch conj52_sketch1 --> Problem  synth_21
Sketch conj60_term_sketch1 --> Problem  synth_5
Sketch conj59_term_sketch2 --> Problem  synth_15
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj63_sketch4 --> Problem  synth_28
Sketch conj15_term_sketch2 --> Problem  synth_9
Sketch conj60_term_sketch4 --> Problem  synth_20
Sketch conj59_term_sketch1 --> Problem  synth_5
Sketch conj59_sketch1 --> Problem  synth_15
Sketch conj60_sketch0 --> Problem  synth_25
Sketch conj11_sketch1 --> Problem  synth_1
Sketch conj50_sketch2 --> Problem  synth_17
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj63_term_sketch0 --> Problem  synth_15
Sketch conj31_sketch0 --> Problem  synth_8
Sketch conj50_term_sketch2 --> Problem  synth_20
Sketch conj31_term_sketch3 --> Problem  synth_9
Sketch conj31_term_sketch1 --> Problem  synth_7
Sketch conj60_term_sketch3 --> Problem  synth_19
Sketch conj60_term_sketch2 --> Problem  synth_18
Sketch conj60_sketch1 --> Problem  synth_18
Sketch conj60_sketch2 --> Problem  synth_5
Sketch conj59_sketch3 --> Problem  synth_24
Sketch conj27_term_sketch2 --> Problem  synth_5
Sketch conj63_term_sketch4 --> Problem  synth_9
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_5
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch1 --> Problem  synth_19
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch2 --> Problem  synth_16
Sketch conj27_sketch2 --> Problem  synth_11
Sketch conj60_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch2 --> Problem  synth_2
Sketch conj31_sketch2 --> Problem  synth_11
Sketch conj27_sketch1 --> Problem  synth_5
Sketch conj60_sketch3 --> Problem  synth_24
Sketch conj51_sketch0 --> Problem  synth_2
Sketch conj31_sketch3 --> Problem  synth_13
Sketch conj19_term_sketch0 --> Problem  synth_11
Sketch conj52_term_sketch3 --> Problem  synth_20
Sketch conj63_term_sketch1 --> Problem  synth_7
Sketch conj15_sketch1 --> Problem  synth_1
Sketch conj51_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch0 --> Problem  synth_15
Sketch conj15_term_sketch1 --> Problem  synth_8
Sketch conj52_term_sketch0 --> Problem  synth_18
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj49_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_15
Sketch conj52_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_23
Sketch conj49_term_sketch1 --> Problem  synth_16
Sketch conj63_term_sketch3 --> Problem  synth_16
Sketch conj63_sketch0 --> Problem  synth_8
Sketch conj63_sketch3 --> Problem  synth_27
Sketch conj50_term_sketch0 --> Problem  synth_18
Sketch conj59_term_sketch0 --> Problem  synth_4
Sketch conj52_sketch3 --> Problem  synth_22
Sketch conj31_term_sketch0 --> Problem  synth_11
Sketch conj59_term_sketch3 --> Problem  synth_16
Sketch conj51_sketch1 --> Problem  synth_15
Sketch conj50_term_sketch1 --> Problem  synth_19
Sketch conj50_sketch0 --> Problem  synth_10
Sketch conj63_sketch1 --> Problem  synth_23
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj19_sketch1 --> Problem  synth_11
Sketch conj15_sketch2 --> Problem  synth_6
Sketch conj50_sketch1 --> Problem  synth_14
Sketch conj15_sketch0 --> Problem  synth_3
Sketch conj60_sketch4 --> Problem  synth_26
Sketch conj31_sketch1 --> Problem  synth_12
Sketch conj31_term_sketch2 --> Problem  synth_8
Sketch conj11_sketch0 --> Problem  synth_3
Sketch conj27_term_sketch0 --> Problem  synth_4
Sketch conj51_sketch2 --> Problem  synth_21
Sketch conj63_term_sketch2 --> Problem  synth_8
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj49_sketch1 --> Problem  synth_14
Sketch conj49_term_sketch0 --> Problem  synth_15


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 547 seconds

Problem: synth_28

Problem: synth_22

Problem: synth_20
 Cons n (lfappend (lfappend l1 Nil) Nil)
 Cons n (lfappend l1 Nil)
 Cons n l1

Problem: synth_18
 len (lfappend l1 (Cons n l2))
 len (lfappend l1 (Cons Zero l2))
 len (lfappend l2 (Cons n l1))
 len (lfappend l2 (Cons Zero l1))
 Succ (len (lfappend l1 l2))
 Succ (len (lfappend l2 l1))

Problem: synth_17

Problem: synth_21

Problem: synth_26

Problem: synth_9
 lfappend (lfappend l2 (lfappend l1 Nil)) Nil
 lfappend (lfappend l2 Nil) (lfappend l1 Nil)
 lfappend (lfappend l2 Nil) l1
 lfappend (lfappend l2 l1) Nil
 lfappend l2 (lfappend l1 Nil)
 lfappend l2 l1

Problem: synth_25
 len (lfappend (lfappend l1 l2) Nil)
 len (lfappend (lfappend l2 l1) Nil)
 len (lfappend l1 (lfappend l2 Nil))
 len (lfappend l2 (lfappend l1 Nil))
 len (lfappend l1 l2)
 len (lfappend l2 l1)

Problem: synth_13

Problem: synth_6

Problem: synth_11
 half (len (lfappend lf3 (Cons Zero lf3)))
 half (len (lfappend lf3 (lfappend lf3 Nil)))
 match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end
 half (len (lfappend lf3 lf3))
 len (lfappend lf3 Nil)
 len lf3

Problem: synth_7
 len (lfappend (lfappend l1 l2) Nil)
 len (lfappend (lfappend l2 l1) Nil)
 len (lfappend l1 (lfappend l2 Nil))
 len (lfappend l2 (lfappend l1 Nil))
 len (lfappend l1 l2)
 len (lfappend l2 l1)

Problem: synth_4
 half (len (lfappend lf5 (Cons Zero lf5)))
 half (len (lfappend lf5 (lfappend lf5 Nil)))
 match len (lfappend lf5 lf5) with | Succ n => Succ (half n) | Zero => Zero end
 half (len (lfappend lf5 lf5))
 len (lfappend lf5 Nil)
 len lf5

Problem: synth_1
 lf1

Problem: synth_23

Problem: synth_27

Problem: synth_16
 lfappend (lfappend l2 (lfappend lf6 Nil)) Nil
 lfappend (lfappend l2 Nil) (lfappend lf6 Nil)
 lfappend (lfappend l2 Nil) lf6
 lfappend (lfappend l2 lf6) Nil
 lfappend l2 (lfappend lf6 Nil)
 lfappend l2 lf6

Problem: synth_19
 lfappend (lfappend l2 (Cons n Nil)) l1
 lfappend (lfappend l2 (Cons n l1)) Nil
 lfappend (lfappend l2 Nil) (Cons n (lfappend l1 Nil))
 lfappend (lfappend l2 Nil) (Cons n l1)
 lfappend l2 (Cons n (lfappend l1 Nil))
 lfappend l2 (Cons n l1)

Problem: synth_15
 len (lfappend (lfappend lf6 l2) Nil)
 len (lfappend (lfappend l2 lf6) Nil)
 len (lfappend lf6 (lfappend l2 Nil))
 len (lfappend l2 (lfappend lf6 Nil))
 len (lfappend lf6 l2)
 len (lfappend l2 lf6)

Problem: synth_14

Problem: synth_10
 lf2

Problem: synth_8
 Succ (len (lfappend l1 (lfappend l2 Nil)))
 Succ (len (lfappend l2 (lfappend l1 Nil)))
 len (lfappend l1 (Cons Zero l2))
 len (lfappend l2 (Cons Zero l1))
 Succ (len (lfappend l1 l2))
 Succ (len (lfappend l2 l1))

Problem: synth_24

Problem: synth_3

Problem: synth_12

Problem: synth_5
 len (lfappend lf5 (Cons (len lf5) Nil))
 len (lfappend lf5 (Cons (Succ Zero) Nil))
 Succ (half (len (lfappend lf5 lf5)))
 len (lfappend lf5 (Cons Zero Nil))
 Succ (len (lfappend lf5 Nil))
 Succ (len lf5)

Problem: synth_2
 Succ lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 548 seconds
Lemmas:
Lemma candidate_1: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_2: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_3: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_4: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_5: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (Cons Zero lf5)))).
Lemma candidate_6: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_7: forall (lf5 : lst), @eq natural (len lf5)   (match len (lfappend lf5 lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_8: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 lf5))).
Lemma candidate_9: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_10: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_11: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_12: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_13: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_14: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_15: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_16: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_17: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_18: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l1 l2) Nil)).
Lemma candidate_19: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l2 l1) Nil)).
Lemma candidate_20: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 (lfappend l2 Nil))).
Lemma candidate_21: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 (lfappend l1 Nil))).
Lemma candidate_22: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 l2)).
Lemma candidate_23: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 l1)).
Lemma candidate_24: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l1 (lfappend l2 Nil)))).
Lemma candidate_25: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l2 (lfappend l1 Nil)))).
Lemma candidate_26: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_27: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_28: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_29: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_30: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 (lfappend l1 Nil)) Nil).
Lemma candidate_31: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) (lfappend l1 Nil)).
Lemma candidate_32: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) l1).
Lemma candidate_33: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 l1) Nil).
Lemma candidate_34: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 (lfappend l1 Nil)).
Lemma candidate_35: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 l1).
Lemma candidate_36: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_37: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (Cons Zero lf3)))).
Lemma candidate_38: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (lfappend lf3 Nil)))).
Lemma candidate_39: forall (lf3 : lst), @eq natural (len lf3)   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_40: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 lf3))).
Lemma candidate_41: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_42: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_43: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_44: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (Cons Zero lf3)))) (len lf3).
Lemma candidate_45: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (lfappend lf3 Nil)))) (len lf3).
Lemma candidate_46: forall (lf3 : lst), @eq natural   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end)   (len lf3).
Lemma candidate_47: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 lf3))) (len lf3).
Lemma candidate_48: forall (lf3 : lst), @eq natural (len (lfappend lf3 Nil)) (len lf3).
Lemma candidate_49: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_50: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (Cons Zero lf3)))).
Lemma candidate_51: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (lfappend lf3 Nil)))).
Lemma candidate_52: forall (lf3 : lst), @eq natural (len lf3)   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_53: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 lf3))).
Lemma candidate_54: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_55: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_56: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_57: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_58: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_59: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_60: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_61: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_62: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_63: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (Cons Zero lf3)))) (len lf3).
Lemma candidate_64: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (lfappend lf3 Nil)))) (len lf3).
Lemma candidate_65: forall (lf3 : lst), @eq natural   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end)   (len lf3).
Lemma candidate_66: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 lf3))) (len lf3).
Lemma candidate_67: forall (lf3 : lst), @eq natural (len (lfappend lf3 Nil)) (len lf3).
Lemma candidate_68: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_69: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (Cons Zero lf5)))).
Lemma candidate_70: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_71: forall (lf5 : lst), @eq natural (len lf5)   (match len (lfappend lf5 lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_72: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 lf5))).
Lemma candidate_73: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_74: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_75: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (Cons Zero lf3)))).
Lemma candidate_76: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (lfappend lf3 Nil)))).
Lemma candidate_77: forall (lf3 : lst), @eq natural (len lf3)   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_78: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 lf3))).
Lemma candidate_79: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_80: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_81: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_82: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_83: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_84: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_85: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_86: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_87: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l1 (lfappend l2 Nil)))).
Lemma candidate_88: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l2 (lfappend l1 Nil)))).
Lemma candidate_89: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_90: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_91: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_92: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_93: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (Cons Zero lf3)))) (len lf3).
Lemma candidate_94: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (lfappend lf3 Nil)))) (len lf3).
Lemma candidate_95: forall (lf3 : lst), @eq natural   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end)   (len lf3).
Lemma candidate_96: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 lf3))) (len lf3).
Lemma candidate_97: forall (lf3 : lst), @eq natural (len (lfappend lf3 Nil)) (len lf3).
Lemma candidate_98: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_99: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (Cons Zero lf3)))).
Lemma candidate_100: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (lfappend lf3 Nil)))).
Lemma candidate_101: forall (lf3 : lst), @eq natural (len lf3)   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_102: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 lf3))).
Lemma candidate_103: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_104: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_105: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l1 l2) Nil)).
Lemma candidate_106: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l2 l1) Nil)).
Lemma candidate_107: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 (lfappend l2 Nil))).
Lemma candidate_108: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 (lfappend l1 Nil))).
Lemma candidate_109: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 l2)).
Lemma candidate_110: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 l1)).
Lemma candidate_111: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l1 (lfappend l2 Nil)))).
Lemma candidate_112: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l2 (lfappend l1 Nil)))).
Lemma candidate_113: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_114: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_115: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_116: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_117: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 (lfappend l1 Nil)) Nil).
Lemma candidate_118: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) (lfappend l1 Nil)).
Lemma candidate_119: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) l1).
Lemma candidate_120: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 l1) Nil).
Lemma candidate_121: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 (lfappend l1 Nil)).
Lemma candidate_122: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 l1).
Lemma candidate_123: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_124: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend lf6 l2) Nil)).
Lemma candidate_125: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend l2 lf6) Nil)).
Lemma candidate_126: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 (lfappend l2 Nil))).
Lemma candidate_127: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 (lfappend lf6 Nil))).
Lemma candidate_128: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 l2)).
Lemma candidate_129: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_130: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 (lfappend lf6 Nil)) Nil).
Lemma candidate_131: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) (lfappend lf6 Nil)).
Lemma candidate_132: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) lf6).
Lemma candidate_133: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 lf6) Nil).
Lemma candidate_134: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 (lfappend lf6 Nil)).
Lemma candidate_135: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 lf6).
Lemma candidate_136: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_137: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l1 (Cons n l2))).
Lemma candidate_138: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_139: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_140: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_141: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_142: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_143: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n Nil)) l1).
Lemma candidate_144: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n l1)) Nil).
Lemma candidate_145: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1))   (lfappend (lfappend l2 Nil) (Cons n (lfappend l1 Nil))).
Lemma candidate_146: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 Nil) (Cons n l1)).
Lemma candidate_147: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n (lfappend l1 Nil))).
Lemma candidate_148: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n l1)).
Lemma candidate_149: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_150: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend l1 Nil)).
Lemma candidate_151: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n l1).
Lemma candidate_152: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_153: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 l2) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_154: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend l2 lf6) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_155: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend l2 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_156: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 (lfappend lf6 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_157: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 l2)) (len (lfappend l2 lf6)).
Lemma candidate_158: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_159: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend lf6 l2) Nil)).
Lemma candidate_160: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend l2 lf6) Nil)).
Lemma candidate_161: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 (lfappend l2 Nil))).
Lemma candidate_162: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 (lfappend lf6 Nil))).
Lemma candidate_163: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 l2)).
Lemma candidate_164: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_165: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_166: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 (lfappend lf6 Nil)) Nil).
Lemma candidate_167: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) (lfappend lf6 Nil)).
Lemma candidate_168: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) lf6).
Lemma candidate_169: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 lf6) Nil).
Lemma candidate_170: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 (lfappend lf6 Nil)).
Lemma candidate_171: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 lf6).
Lemma candidate_172: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_173: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l1 (Cons n l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_174: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l1 (Cons Zero l2)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_175: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_176: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons Zero l1)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_177: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l1 l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_178: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_179: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l1 (Cons n l2))).
Lemma candidate_180: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_181: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_182: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_183: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_184: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_185: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n Nil)) l1).
Lemma candidate_186: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n l1)) Nil).
Lemma candidate_187: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1))   (lfappend (lfappend l2 Nil) (Cons n (lfappend l1 Nil))).
Lemma candidate_188: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 Nil) (Cons n l1)).
Lemma candidate_189: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n (lfappend l1 Nil))).
Lemma candidate_190: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n l1)).
Lemma candidate_191: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_192: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_193: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend l1 Nil)).
Lemma candidate_194: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n l1).
Lemma candidate_195: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 l2) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_196: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend l2 lf6) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_197: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend l2 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_198: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 (lfappend lf6 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_199: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 l2)) (len (lfappend l2 lf6)).
Lemma candidate_200: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_201: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_202: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_203: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_204: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_205: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_206: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_207: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (Cons Zero lf5)))).
Lemma candidate_208: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_209: forall (lf5 : lst), @eq natural (len lf5)   (match len (lfappend lf5 lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_210: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 lf5))).
Lemma candidate_211: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_212: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_213: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_214: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_215: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_216: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_217: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_218: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_219: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend lf6 l2) Nil)).
Lemma candidate_220: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend l2 lf6) Nil)).
Lemma candidate_221: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 (lfappend l2 Nil))).
Lemma candidate_222: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 (lfappend lf6 Nil))).
Lemma candidate_223: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 l2)).
Lemma candidate_224: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_225: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 (lfappend lf6 Nil)) Nil).
Lemma candidate_226: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) (lfappend lf6 Nil)).
Lemma candidate_227: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) lf6).
Lemma candidate_228: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 lf6) Nil).
Lemma candidate_229: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 (lfappend lf6 Nil)).
Lemma candidate_230: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 lf6).
Lemma candidate_231: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend (lfappend l1 l2) Nil)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_232: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend (lfappend l2 l1) Nil)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_233: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l1 (lfappend l2 Nil))))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_234: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l2 (lfappend l1 Nil))))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_235: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l1 l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_236: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_237: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l1 (Cons n l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_238: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l1 (Cons Zero l2)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_239: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_240: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons Zero l1)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_241: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l1 l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_242: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_243: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_244: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_245: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_246: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_247: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_248: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_249: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (Cons Zero lf5)))).
Lemma candidate_250: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_251: forall (lf5 : lst), @eq natural (len lf5)   (match len (lfappend lf5 lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_252: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 lf5))).
Lemma candidate_253: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_254: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_255: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_256: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_257: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_258: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_259: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_260: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_261: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l1 (Cons n l2))).
Lemma candidate_262: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_263: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_264: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_265: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_266: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_267: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n Nil)) l1).
Lemma candidate_268: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n l1)) Nil).
Lemma candidate_269: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1))   (lfappend (lfappend l2 Nil) (Cons n (lfappend l1 Nil))).
Lemma candidate_270: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 Nil) (Cons n l1)).
Lemma candidate_271: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n (lfappend l1 Nil))).
Lemma candidate_272: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n l1)).
Lemma candidate_273: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_274: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend l1 Nil)).
Lemma candidate_275: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n l1).
Lemma candidate_276: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l1 (lfappend l2 Nil)))).
Lemma candidate_277: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l2 (lfappend l1 Nil)))).
Lemma candidate_278: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_279: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_280: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_281: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_282: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 l2) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_283: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend l2 lf6) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_284: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend l2 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_285: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 (lfappend lf6 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_286: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 l2)) (len (lfappend l2 lf6)).
Lemma candidate_287: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_288: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend lf6 l2) Nil)).
Lemma candidate_289: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend l2 lf6) Nil)).
Lemma candidate_290: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 (lfappend l2 Nil))).
Lemma candidate_291: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 (lfappend lf6 Nil))).
Lemma candidate_292: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 l2)).
Lemma candidate_293: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 lf6)).
Lemma candidate_294: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l1 l2) Nil)).
Lemma candidate_295: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l2 l1) Nil)).
Lemma candidate_296: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 (lfappend l2 Nil))).
Lemma candidate_297: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 (lfappend l1 Nil))).
Lemma candidate_298: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 l2)).
Lemma candidate_299: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 l1)).
Lemma candidate_300: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l1 (lfappend l2 Nil)))).
Lemma candidate_301: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l2 (lfappend l1 Nil)))).
Lemma candidate_302: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_303: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_304: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l1 l2))).
Lemma candidate_305: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_306: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 (lfappend lf6 Nil)) Nil).
Lemma candidate_307: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) (lfappend lf6 Nil)).
Lemma candidate_308: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) lf6).
Lemma candidate_309: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 lf6) Nil).
Lemma candidate_310: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 (lfappend lf6 Nil)).
Lemma candidate_311: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 lf6).
Lemma candidate_312: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 (lfappend l1 Nil)) Nil).
Lemma candidate_313: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) (lfappend l1 Nil)).
Lemma candidate_314: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) l1).
Lemma candidate_315: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 l1) Nil).
Lemma candidate_316: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 (lfappend l1 Nil)).
Lemma candidate_317: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 l1).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 717 seconds
Duplicates removed: 233
Filtered by Quickchick: 0
Filtered by script: 27
Remaining: 57

Lemmas: 
Lemma candidate_150: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend l1 Nil)).
Lemma candidate_47: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 lf3))) (len lf3).
Lemma candidate_40: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 lf3))).
Lemma candidate_8: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 lf5))).
Lemma candidate_34: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend l2 (lfappend l1 Nil)).
Lemma candidate_33: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 l1) Nil).
Lemma candidate_32: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) l1).
Lemma candidate_134: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend l2 (lfappend lf6 Nil)).
Lemma candidate_133: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 lf6) Nil).
Lemma candidate_132: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) lf6).
Lemma candidate_149: forall (n : natural) (l1 : lst), @eq lst (Cons n l1) (Cons n (lfappend (lfappend l1 Nil) Nil)).
Lemma candidate_44: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (Cons Zero lf3)))) (len lf3).
Lemma candidate_37: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (Cons Zero lf3)))).
Lemma candidate_5: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (Cons Zero lf5)))).
Lemma candidate_13: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (half (len (lfappend lf5 lf5)))).
Lemma candidate_45: forall (lf3 : lst), @eq natural (half (len (lfappend lf3 (lfappend lf3 Nil)))) (len lf3).
Lemma candidate_38: forall (lf3 : lst), @eq natural (len lf3) (half (len (lfappend lf3 (lfappend lf3 Nil)))).
Lemma candidate_6: forall (lf5 : lst), @eq natural (len lf5) (half (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_31: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 Nil) (lfappend l1 Nil)).
Lemma candidate_30: forall (l2 : lst) (l1 : lst), @eq lst (lfappend l2 l1) (lfappend (lfappend l2 (lfappend l1 Nil)) Nil).
Lemma candidate_21: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l2 (lfappend l1 Nil))).
Lemma candidate_20: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend l1 (lfappend l2 Nil))).
Lemma candidate_19: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l2 l1) Nil)).
Lemma candidate_18: forall (l2 : lst) (l1 : lst), @eq natural (len (lfappend l2 l1)) (len (lfappend (lfappend l1 l2) Nil)).
Lemma candidate_177: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l1 l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_142: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (Succ (len (lfappend l2 l1))).
Lemma candidate_131: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 Nil) (lfappend lf6 Nil)).
Lemma candidate_130: forall (l2 : lst) (lf6 : lst), @eq lst (lfappend l2 lf6) (lfappend (lfappend l2 (lfappend lf6 Nil)) Nil).
Lemma candidate_156: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 (lfappend lf6 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_155: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend l2 Nil))) (len (lfappend l2 lf6)).
Lemma candidate_153: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 l2) Nil)) (len (lfappend l2 lf6)).
Lemma candidate_147: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend l2 (Cons n (lfappend l1 Nil))).
Lemma candidate_146: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 Nil) (Cons n l1)).
Lemma candidate_144: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n l1)) Nil).
Lemma candidate_143: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1)) (lfappend (lfappend l2 (Cons n Nil)) l1).
Lemma candidate_127: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend l2 (lfappend lf6 Nil))).
Lemma candidate_126: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend lf6 (lfappend l2 Nil))).
Lemma candidate_125: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend l2 lf6) Nil)).
Lemma candidate_124: forall (l2 : lst) (lf6 : lst), @eq natural (len (lfappend l2 lf6)) (len (lfappend (lfappend lf6 l2) Nil)).
Lemma candidate_173: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l1 (Cons n l2))) (len (lfappend l2 (Cons n l1))).
Lemma candidate_137: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1))) (len (lfappend l1 (Cons n l2))).
Lemma candidate_27: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_26: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_176: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons Zero l1)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_174: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l1 (Cons Zero l2)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_140: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l2 (Cons Zero l1))).
Lemma candidate_138: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (len (lfappend l2 (Cons n l1)))   (len (lfappend l1 (Cons Zero l2))).
Lemma candidate_25: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l2 (lfappend l1 Nil)))).
Lemma candidate_24: forall (l2 : lst) (l1 : lst), @eq natural (Succ (len (lfappend l2 l1)))   (Succ (len (lfappend l1 (lfappend l2 Nil)))).
Lemma candidate_234: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l2 (lfappend l1 Nil))))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_233: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend l1 (lfappend l2 Nil))))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_232: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend (lfappend l2 l1) Nil)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_231: forall (l2 : lst) (n : natural) (l1 : lst), @eq natural (Succ (len (lfappend (lfappend l1 l2) Nil)))   (len (lfappend l2 (Cons n l1))).
Lemma candidate_145: forall (l2 : lst) (n : natural) (l1 : lst), @eq lst (lfappend l2 (Cons n l1))   (lfappend (lfappend l2 Nil) (Cons n (lfappend l1 Nil))).
Lemma candidate_39: forall (lf3 : lst), @eq natural (len lf3)   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_7: forall (lf5 : lst), @eq natural (len lf5)   (match len (lfappend lf5 lf5) with | Succ n => Succ (half n) | Zero => Zero end).
Lemma candidate_46: forall (lf3 : lst), @eq natural   (match len (lfappend lf3 lf3) with | Succ n => Succ (half n) | Zero => Zero end)   (len lf3).
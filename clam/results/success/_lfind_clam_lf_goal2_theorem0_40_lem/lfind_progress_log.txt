File Information
- File name: goal2
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal2_theorem0_40_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal2_theorem0_40_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst, @eq natural (len (lfappend x0 y0)) (len (lfappend y0 x0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x)))

* Hypothesis:
IHx : forall y0 : lst, @eq natural (len (lfappend x y0)) (len (lfappend y0 x))
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
Succ (len (lfappend y x)) : natural
forall y0 : lst, @eq natural (len (lfappend x y0)) (len (lfappend y0 x)) : Prop
len (lfappend y (Cons n x)) : natural
x : lst
lfappend y x : lst
y : lst
lfappend x _UNBOUND_REL_1 : lst
len (lfappend y x) : natural
lfappend _UNBOUND_REL_1 x : lst
lfappend y (Cons n x) : lst
Cons n x : lst
len (lfappend x _UNBOUND_REL_1) : natural
lst : Set
len (lfappend _UNBOUND_REL_1 x) : natural
natural : Set
n : natural
@eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))) : Prop
@eq natural (len (lfappend x _UNBOUND_REL_1))
  (len (lfappend _UNBOUND_REL_1 x)) : Prop

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
Succ  : forall _ : natural, natural
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = lfappend y (Cons n x)
lf1 : natural = len (lfappend y (Cons n x))
lf4 : natural = len (lfappend y x)
lf5 : lst = lfappend y x
lf2 : natural = Succ (len (lfappend y x))
lf6 : lst = Cons n x

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj15: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (Succ (len (lfappend y x))) lf1.
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj31: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (Succ (len (lfappend y x))) (len lf3).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (y : lst), @eq natural lf2 (len (lfappend y lf6)).
Lemma conj50: forall (lf2 : natural) (x : lst) (y : lst) (n : natural), @eq natural lf2 (len (lfappend y (Cons n x))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (y : lst), @eq natural (Succ lf4) (len (lfappend y lf6)).
Lemma conj52: forall (x : lst) (lf4 : natural) (y : lst) (n : natural), @eq natural (Succ lf4) (len (lfappend y (Cons n x))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq natural (Succ (len lf5)) (len (lfappend y lf6)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq natural (Succ (len lf5)) (len (lfappend y (Cons n x))).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y lf6)).
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))).


<---VALIDITY CHECKS--->
Time elapsed: 36 seconds
Valid:
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y lf6)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq natural (Succ (len lf5)) (len (lfappend y (Cons n x))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq natural (Succ (len lf5)) (len (lfappend y lf6)).
Lemma conj52: forall (x : lst) (lf4 : natural) (y : lst) (n : natural), @eq natural (Succ lf4) (len (lfappend y (Cons n x))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (y : lst), @eq natural (Succ lf4) (len (lfappend y lf6)).
Lemma conj50: forall (lf2 : natural) (x : lst) (y : lst) (n : natural), @eq natural lf2 (len (lfappend y (Cons n x))).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (y : lst), @eq natural lf2 (len (lfappend y lf6)).
Lemma conj31: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (Succ (len (lfappend y x))) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj15: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (Succ (len (lfappend y x))) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 52 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y lf6)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq natural (Succ (len lf5)) (len (lfappend y (Cons n x))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq natural (Succ (len lf5)) (len (lfappend y lf6)).
Lemma conj52: forall (x : lst) (lf4 : natural) (y : lst) (n : natural), @eq natural (Succ lf4) (len (lfappend y (Cons n x))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (y : lst), @eq natural (Succ lf4) (len (lfappend y lf6)).
Lemma conj50: forall (lf2 : natural) (x : lst) (y : lst) (n : natural), @eq natural lf2 (len (lfappend y (Cons n x))).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (y : lst), @eq natural lf2 (len (lfappend y lf6)).
Lemma conj31: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (Succ (len (lfappend y x))) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj15: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (Succ (len (lfappend y x))) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 76 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural), @eq natural (Succ lf4) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : natural), @eq natural (Succ (len lf5)) lf1.
Lemma conj15: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (Succ (len (lfappend y x))) lf1.
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural lf2 (len lf3).
Lemma conj19: forall (lf4 : natural) (lf3 : lst), @eq natural (Succ lf4) (len lf3).
Lemma conj27: forall (lf5 : lst) (lf3 : lst), @eq natural (Succ (len lf5)) (len lf3).
Lemma conj31: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (Succ (len (lfappend y x))) (len lf3).
Lemma conj49: forall (lf6 : lst) (lf2 : natural) (y : lst), @eq natural lf2 (len (lfappend y lf6)).
Lemma conj50: forall (lf2 : natural) (x : lst) (y : lst) (n : natural), @eq natural lf2 (len (lfappend y (Cons n x))).
Lemma conj51: forall (lf6 : lst) (lf4 : natural) (y : lst), @eq natural (Succ lf4) (len (lfappend y lf6)).
Lemma conj52: forall (x : lst) (lf4 : natural) (y : lst) (n : natural), @eq natural (Succ lf4) (len (lfappend y (Cons n x))).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq natural (Succ (len lf5)) (len (lfappend y lf6)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq natural (Succ (len lf5)) (len (lfappend y (Cons n x))).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y lf6)).


<---CREATE SKETCHES--->
Time elapsed: 76 seconds
Sketches:
Sketch conj3_sketch0 : @eq natural (##hole##) lf1
Sketch conj3_term_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj11_sketch0 : @eq natural (Succ (##hole##)) lf1
Sketch conj11_sketch1 : @eq natural (##hole##) lf1
Sketch conj11_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj15_sketch0 : @eq natural (##hole##) lf1
Sketch conj15_sketch1 : @eq natural (Succ (##hole##)) lf1
Sketch conj15_sketch2 : @eq natural (Succ (len (##hole##))) lf1
Sketch conj15_term_sketch0 : @eq natural (Succ (len (lfappend y x))) (##hole##)
Sketch conj15_term_sketch1 : @eq natural (len (lfappend y x)) (##hole##)
Sketch conj15_term_sketch2 : @eq lst (lfappend y x) (##hole##)
Sketch conj17_sketch0 : @eq natural lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj19_sketch1 : @eq natural (##hole##) (len lf3)
Sketch conj19_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj27_sketch0 : @eq natural (Succ (##hole##)) (len lf3)
Sketch conj27_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj27_sketch2 : @eq natural (##hole##) (len lf3)
Sketch conj27_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj27_term_sketch1 : @eq natural (len lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj31_sketch0 : @eq natural (Succ (len (lfappend y x))) (##hole##)
Sketch conj31_sketch1 : @eq natural (##hole##) (len lf3)
Sketch conj31_sketch2 : @eq natural (Succ (##hole##)) (len lf3)
Sketch conj31_sketch3 : @eq natural (Succ (len (##hole##))) (len lf3)
Sketch conj31_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj31_term_sketch1 : @eq natural (Succ (len (lfappend y x))) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (len (lfappend y x)) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (lfappend y x) (##hole##)
Sketch conj49_sketch0 : @eq natural lf2 (##hole##)
Sketch conj49_sketch1 : @eq natural lf2 (len (##hole##))
Sketch conj49_term_sketch0 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj50_sketch0 : @eq natural lf2 (len (##hole##))
Sketch conj50_sketch1 : @eq natural lf2 (##hole##)
Sketch conj50_sketch2 : @eq natural lf2 (len (lfappend y (##hole##)))
Sketch conj50_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj50_term_sketch1 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj50_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj51_sketch0 : @eq natural (Succ lf4) (##hole##)
Sketch conj51_sketch1 : @eq natural (Succ lf4) (len (##hole##))
Sketch conj51_sketch2 : @eq natural (##hole##) (len (lfappend y lf6))
Sketch conj51_term_sketch0 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj51_term_sketch2 : @eq natural (Succ lf4) (##hole##)
Sketch conj52_sketch0 : @eq natural (Succ lf4) (len (##hole##))
Sketch conj52_sketch1 : @eq natural (Succ lf4) (##hole##)
Sketch conj52_sketch2 : @eq natural (Succ lf4) (len (lfappend y (##hole##)))
Sketch conj52_sketch3 : @eq natural (##hole##) (len (lfappend y (Cons n x)))
Sketch conj52_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj52_term_sketch1 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj52_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj52_term_sketch3 : @eq natural (Succ lf4) (##hole##)
Sketch conj59_sketch0 : @eq natural (Succ (##hole##)) (len (lfappend y lf6))
Sketch conj59_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj59_sketch2 : @eq natural (##hole##) (len (lfappend y lf6))
Sketch conj59_sketch3 : @eq natural (Succ (len lf5)) (len (##hole##))
Sketch conj59_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj59_term_sketch2 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj60_sketch0 : @eq natural (Succ (##hole##)) (len (lfappend y (Cons n x)))
Sketch conj60_sketch1 : @eq natural (##hole##) (len (lfappend y (Cons n x)))
Sketch conj60_sketch2 : @eq natural (Succ (len lf5)) (len (##hole##))
Sketch conj60_sketch3 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj60_sketch4 : @eq natural (Succ (len lf5)) (len (lfappend y (##hole##)))
Sketch conj60_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (Succ (len lf5)) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj60_term_sketch3 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj60_term_sketch4 : @eq lst (Cons n x) (##hole##)
Sketch conj63_sketch0 : @eq natural (##hole##) (len (lfappend y lf6))
Sketch conj63_sketch1 : @eq natural (Succ (len (lfappend y x))) (##hole##)
Sketch conj63_sketch2 : @eq natural (Succ (##hole##)) (len (lfappend y lf6))
Sketch conj63_sketch3 : @eq natural (Succ (len (##hole##))) (len (lfappend y lf6))
Sketch conj63_sketch4 : @eq natural (Succ (len (lfappend y x))) (len (##hole##))
Sketch conj63_term_sketch0 : @eq natural (Succ (len (lfappend y x))) (##hole##)
Sketch conj63_term_sketch1 : @eq natural (len (lfappend y lf6)) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (len (lfappend y x)) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend y x) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend y lf6) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 237 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_22
Sketch conj52_sketch1 --> Problem  synth_2
Sketch conj60_term_sketch1 --> Problem  synth_5
Sketch conj59_term_sketch2 --> Problem  synth_5
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj63_sketch4 --> Problem  synth_28
Sketch conj15_term_sketch2 --> Problem  synth_9
Sketch conj60_term_sketch4 --> Problem  synth_20
Sketch conj59_term_sketch1 --> Problem  synth_15
Sketch conj59_sketch1 --> Problem  synth_5
Sketch conj60_sketch0 --> Problem  synth_25
Sketch conj11_sketch1 --> Problem  synth_1
Sketch conj50_sketch2 --> Problem  synth_17
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj63_term_sketch0 --> Problem  synth_7
Sketch conj31_sketch0 --> Problem  synth_7
Sketch conj50_term_sketch2 --> Problem  synth_20
Sketch conj31_term_sketch3 --> Problem  synth_9
Sketch conj31_term_sketch1 --> Problem  synth_7
Sketch conj60_term_sketch3 --> Problem  synth_19
Sketch conj60_term_sketch2 --> Problem  synth_18
Sketch conj60_sketch1 --> Problem  synth_19
Sketch conj60_sketch2 --> Problem  synth_24
Sketch conj59_sketch3 --> Problem  synth_24
Sketch conj27_term_sketch2 --> Problem  synth_5
Sketch conj63_term_sketch4 --> Problem  synth_16
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_15
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch1 --> Problem  synth_19
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch2 --> Problem  synth_2
Sketch conj27_sketch2 --> Problem  synth_11
Sketch conj60_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch2 --> Problem  synth_20
Sketch conj31_sketch2 --> Problem  synth_12
Sketch conj27_sketch1 --> Problem  synth_5
Sketch conj60_sketch3 --> Problem  synth_5
Sketch conj51_sketch0 --> Problem  synth_2
Sketch conj31_sketch3 --> Problem  synth_13
Sketch conj19_term_sketch0 --> Problem  synth_11
Sketch conj52_term_sketch3 --> Problem  synth_2
Sketch conj63_term_sketch1 --> Problem  synth_15
Sketch conj15_sketch1 --> Problem  synth_3
Sketch conj51_term_sketch1 --> Problem  synth_16
Sketch conj51_term_sketch0 --> Problem  synth_15
Sketch conj15_term_sketch1 --> Problem  synth_8
Sketch conj52_term_sketch0 --> Problem  synth_18
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj49_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_23
Sketch conj52_sketch0 --> Problem  synth_21
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_23
Sketch conj49_term_sketch1 --> Problem  synth_16
Sketch conj63_term_sketch3 --> Problem  synth_9
Sketch conj63_sketch0 --> Problem  synth_15
Sketch conj63_sketch3 --> Problem  synth_27
Sketch conj50_term_sketch0 --> Problem  synth_18
Sketch conj59_term_sketch0 --> Problem  synth_4
Sketch conj52_sketch3 --> Problem  synth_19
Sketch conj31_term_sketch0 --> Problem  synth_11
Sketch conj59_term_sketch3 --> Problem  synth_16
Sketch conj51_sketch1 --> Problem  synth_21
Sketch conj50_term_sketch1 --> Problem  synth_19
Sketch conj50_sketch0 --> Problem  synth_14
Sketch conj63_sketch1 --> Problem  synth_7
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj19_sketch1 --> Problem  synth_11
Sketch conj15_sketch2 --> Problem  synth_6
Sketch conj50_sketch1 --> Problem  synth_10
Sketch conj15_sketch0 --> Problem  synth_1
Sketch conj60_sketch4 --> Problem  synth_26
Sketch conj31_sketch1 --> Problem  synth_11
Sketch conj31_term_sketch2 --> Problem  synth_8
Sketch conj11_sketch0 --> Problem  synth_3
Sketch conj27_term_sketch0 --> Problem  synth_4
Sketch conj51_sketch2 --> Problem  synth_15
Sketch conj63_term_sketch2 --> Problem  synth_8
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj49_sketch1 --> Problem  synth_14
Sketch conj49_term_sketch0 --> Problem  synth_15


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 526 seconds

Problem: synth_28

Problem: synth_22

Problem: synth_20
 Cons n (lfappend (lfappend x Nil) Nil)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_18
 lfappend (lfappend y (Cons n Nil)) x
 lfappend (lfappend y (Cons n x)) Nil
 lfappend (lfappend y Nil) (Cons n (lfappend x Nil))
 lfappend (lfappend y Nil) (Cons n x)
 lfappend y (Cons n (lfappend x Nil))
 lfappend y (Cons n x)

Problem: synth_17

Problem: synth_21

Problem: synth_26

Problem: synth_9
 lfappend (lfappend y (lfappend x Nil)) Nil
 lfappend (lfappend y Nil) (lfappend x Nil)
 lfappend (lfappend y Nil) x
 lfappend (lfappend y x) Nil
 lfappend y (lfappend x Nil)
 lfappend y x

Problem: synth_25
 len (lfappend (lfappend x y) Nil)
 len (lfappend (lfappend y x) Nil)
 len (lfappend x (lfappend y Nil))
 len (lfappend y (lfappend x Nil))
 len (lfappend x y)
 len (lfappend y x)

Problem: synth_13

Problem: synth_6

Problem: synth_11
 len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)
 len (lfappend (lfappend lf3 Nil) Nil)
 len (lfappend lf3 Nil)
 len lf3

Problem: synth_7
 Succ (len (lfappend x (lfappend y Nil)))
 Succ (len (lfappend y (lfappend x Nil)))
 len (lfappend x (Cons Zero y))
 len (lfappend y (Cons Zero x))
 Succ (len (lfappend x y))
 Succ (len (lfappend y x))

Problem: synth_4
 len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)
 len (lfappend (lfappend lf5 Nil) Nil)
 len (lfappend lf5 Nil)
 len lf5

Problem: synth_1
 lf1

Problem: synth_23

Problem: synth_27

Problem: synth_16
 lfappend (lfappend y (lfappend lf6 Nil)) Nil
 lfappend (lfappend y Nil) (lfappend lf6 Nil)
 lfappend (lfappend y Nil) lf6
 lfappend (lfappend y lf6) Nil
 lfappend y (lfappend lf6 Nil)
 lfappend y lf6

Problem: synth_19
 len (lfappend x (Cons n y))
 len (lfappend x (Cons Zero y))
 len (lfappend y (Cons n x))
 len (lfappend y (Cons Zero x))
 Succ (len (lfappend x y))
 Succ (len (lfappend y x))

Problem: synth_15
 len (lfappend (lfappend lf6 y) Nil)
 len (lfappend (lfappend y lf6) Nil)
 len (lfappend lf6 (lfappend y Nil))
 len (lfappend y (lfappend lf6 Nil))
 len (lfappend lf6 y)
 len (lfappend y lf6)

Problem: synth_14

Problem: synth_10
 lf2

Problem: synth_8
 len (lfappend (lfappend x y) Nil)
 len (lfappend (lfappend y x) Nil)
 len (lfappend x (lfappend y Nil))
 len (lfappend y (lfappend x Nil))
 len (lfappend x y)
 len (lfappend y x)

Problem: synth_24

Problem: synth_3

Problem: synth_12

Problem: synth_5
 len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))
 len (lfappend lf5 (Cons (len lf5) Nil))
 len (lfappend lf5 (Cons (Succ Zero) Nil))
 len (lfappend lf5 (Cons Zero Nil))
 Succ (len (lfappend lf5 Nil))
 Succ (len lf5)

Problem: synth_2
 Succ lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 526 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))).
Lemma candidate_2: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_3: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_4: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_5: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_6: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_7: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_8: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_9: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_10: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_11: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_12: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_13: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_14: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_15: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_16: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_17: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_18: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_19: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_20: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend x y))).
Lemma candidate_21: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend y x))).
Lemma candidate_22: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_23: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_24: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_25: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_26: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x y)).
Lemma candidate_27: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y x)).
Lemma candidate_28: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y (lfappend x Nil)) Nil).
Lemma candidate_29: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) (lfappend x Nil)).
Lemma candidate_30: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) x).
Lemma candidate_31: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y x) Nil).
Lemma candidate_32: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y (lfappend x Nil)).
Lemma candidate_33: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y x).
Lemma candidate_34: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_35: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_36: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_37: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_38: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_39: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_40: forall (lf3 : lst), @eq natural (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)) (len lf3).
Lemma candidate_41: forall (lf3 : lst), @eq natural (len (lfappend (lfappend lf3 Nil) Nil)) (len lf3).
Lemma candidate_42: forall (lf3 : lst), @eq natural (len (lfappend lf3 Nil)) (len lf3).
Lemma candidate_43: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_44: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_45: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_46: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_47: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_48: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_49: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_50: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_51: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_52: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_53: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_54: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_55: forall (lf3 : lst), @eq natural (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)) (len lf3).
Lemma candidate_56: forall (lf3 : lst), @eq natural (len (lfappend (lfappend lf3 Nil) Nil)) (len lf3).
Lemma candidate_57: forall (lf3 : lst), @eq natural (len (lfappend lf3 Nil)) (len lf3).
Lemma candidate_58: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_59: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_60: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_61: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_62: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_63: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_64: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_65: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_66: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_67: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_68: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_69: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_70: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_71: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_72: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_73: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_74: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_75: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_76: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_77: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend x y))).
Lemma candidate_78: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend y x))).
Lemma candidate_79: forall (lf3 : lst), @eq natural (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)) (len lf3).
Lemma candidate_80: forall (lf3 : lst), @eq natural (len (lfappend (lfappend lf3 Nil) Nil)) (len lf3).
Lemma candidate_81: forall (lf3 : lst), @eq natural (len (lfappend lf3 Nil)) (len lf3).
Lemma candidate_82: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_83: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_84: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_85: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_86: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_87: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_88: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_89: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_90: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_91: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend x y))).
Lemma candidate_92: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend y x))).
Lemma candidate_93: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_94: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_95: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_96: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_97: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x y)).
Lemma candidate_98: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y x)).
Lemma candidate_99: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y (lfappend x Nil)) Nil).
Lemma candidate_100: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) (lfappend x Nil)).
Lemma candidate_101: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) x).
Lemma candidate_102: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y x) Nil).
Lemma candidate_103: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y (lfappend x Nil)).
Lemma candidate_104: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y x).
Lemma candidate_105: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_106: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend lf6 y) Nil)).
Lemma candidate_107: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend y lf6) Nil)).
Lemma candidate_108: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_109: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_110: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_111: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_112: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y (lfappend lf6 Nil)) Nil).
Lemma candidate_113: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) (lfappend lf6 Nil)).
Lemma candidate_114: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_115: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_116: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_117: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_118: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_119: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_120: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_121: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_122: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_123: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_124: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_125: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_126: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_127: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_128: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_129: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_130: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_131: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_132: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_133: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_134: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_135: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 y) Nil)) (len (lfappend y lf6)).
Lemma candidate_136: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend y lf6) Nil)) (len (lfappend y lf6)).
Lemma candidate_137: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend y Nil))) (len (lfappend y lf6)).
Lemma candidate_138: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y (lfappend lf6 Nil))) (len (lfappend y lf6)).
Lemma candidate_139: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 y)) (len (lfappend y lf6)).
Lemma candidate_140: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_141: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend lf6 y) Nil)).
Lemma candidate_142: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend y lf6) Nil)).
Lemma candidate_143: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_144: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_145: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_146: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_147: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y (lfappend lf6 Nil)) Nil).
Lemma candidate_148: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) (lfappend lf6 Nil)).
Lemma candidate_149: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_150: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_151: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_152: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_153: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_154: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_155: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons n y))) (len (lfappend y (Cons n x))).
Lemma candidate_156: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons Zero y))) (len (lfappend y (Cons n x))).
Lemma candidate_157: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_158: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons Zero x))) (len (lfappend y (Cons n x))).
Lemma candidate_159: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x y))) (len (lfappend y (Cons n x))).
Lemma candidate_160: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))).
Lemma candidate_161: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_162: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_163: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_164: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_165: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_166: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_167: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_168: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_169: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_170: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_171: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_172: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_173: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_174: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_175: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_176: forall (lf4 : natural), @eq natural (Succ lf4) (Succ lf4).
Lemma candidate_177: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_178: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_179: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_180: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_181: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_182: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_183: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 y) Nil)) (len (lfappend y lf6)).
Lemma candidate_184: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend y lf6) Nil)) (len (lfappend y lf6)).
Lemma candidate_185: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend y Nil))) (len (lfappend y lf6)).
Lemma candidate_186: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y (lfappend lf6 Nil))) (len (lfappend y lf6)).
Lemma candidate_187: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 y)) (len (lfappend y lf6)).
Lemma candidate_188: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_189: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_190: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_191: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_192: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_193: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend lf6 y) Nil)).
Lemma candidate_194: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend y lf6) Nil)).
Lemma candidate_195: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_196: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_197: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_198: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_199: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_200: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_201: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_202: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_203: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_204: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_205: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y (lfappend lf6 Nil)) Nil).
Lemma candidate_206: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) (lfappend lf6 Nil)).
Lemma candidate_207: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_208: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_209: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_210: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_211: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend (lfappend x y) Nil)))   (len (lfappend y (Cons n x))).
Lemma candidate_212: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend (lfappend y x) Nil)))   (len (lfappend y (Cons n x))).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x (lfappend y Nil))))   (len (lfappend y (Cons n x))).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y (lfappend x Nil))))   (len (lfappend y (Cons n x))).
Lemma candidate_215: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x y))) (len (lfappend y (Cons n x))).
Lemma candidate_216: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))).
Lemma candidate_217: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons n y))) (len (lfappend y (Cons n x))).
Lemma candidate_218: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons Zero y))) (len (lfappend y (Cons n x))).
Lemma candidate_219: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_220: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons Zero x))) (len (lfappend y (Cons n x))).
Lemma candidate_221: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x y))) (len (lfappend y (Cons n x))).
Lemma candidate_222: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))).
Lemma candidate_223: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_224: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_225: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_226: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_227: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_228: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_229: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_230: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_231: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_232: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_233: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_234: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_235: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_236: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_237: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_238: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len lf5)).
Lemma candidate_239: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_240: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_241: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_242: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_243: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_244: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_245: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_246: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_247: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_248: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_249: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_250: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_251: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_252: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_253: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_254: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 y) Nil)) (len (lfappend y lf6)).
Lemma candidate_255: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend y lf6) Nil)) (len (lfappend y lf6)).
Lemma candidate_256: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend y Nil))) (len (lfappend y lf6)).
Lemma candidate_257: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y (lfappend lf6 Nil))) (len (lfappend y lf6)).
Lemma candidate_258: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 y)) (len (lfappend y lf6)).
Lemma candidate_259: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_260: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_261: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_262: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_263: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_264: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend x y))).
Lemma candidate_265: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend y x))).
Lemma candidate_266: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_267: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_268: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_269: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_270: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend x y))).
Lemma candidate_271: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (Succ (len (lfappend y x))).
Lemma candidate_272: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend lf6 y) Nil)).
Lemma candidate_273: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend y lf6) Nil)).
Lemma candidate_274: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_275: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_276: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 y)).
Lemma candidate_277: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y lf6)).
Lemma candidate_278: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_279: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_280: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_281: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_282: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x y)).
Lemma candidate_283: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y x)).
Lemma candidate_284: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y (lfappend x Nil)) Nil).
Lemma candidate_285: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) (lfappend x Nil)).
Lemma candidate_286: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) x).
Lemma candidate_287: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y x) Nil).
Lemma candidate_288: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y (lfappend x Nil)).
Lemma candidate_289: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y x).
Lemma candidate_290: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y (lfappend lf6 Nil)) Nil).
Lemma candidate_291: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) (lfappend lf6 Nil)).
Lemma candidate_292: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_293: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_294: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_295: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 680 seconds
Duplicates removed: 217
Filtered by Quickchick: 0
Filtered by script: 27
Remaining: 51

Lemmas: 
Lemma candidate_132: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_32: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y (lfappend x Nil)).
Lemma candidate_31: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y x) Nil).
Lemma candidate_30: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) x).
Lemma candidate_116: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_115: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_114: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_131: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_41: forall (lf3 : lst), @eq natural (len (lfappend (lfappend lf3 Nil) Nil)) (len lf3).
Lemma candidate_36: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_6: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_29: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) (lfappend x Nil)).
Lemma candidate_28: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y (lfappend x Nil)) Nil).
Lemma candidate_25: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_24: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_23: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_22: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_159: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x y))) (len (lfappend y (Cons n x))).
Lemma candidate_130: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_123: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_122: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_120: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_119: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_155: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons n y))) (len (lfappend y (Cons n x))).
Lemma candidate_125: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_113: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) (lfappend lf6 Nil)).
Lemma candidate_112: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y (lfappend lf6 Nil)) Nil).
Lemma candidate_138: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y (lfappend lf6 Nil))) (len (lfappend y lf6)).
Lemma candidate_137: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend y Nil))) (len (lfappend y lf6)).
Lemma candidate_135: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 y) Nil)) (len (lfappend y lf6)).
Lemma candidate_109: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_108: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_107: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend y lf6) Nil)).
Lemma candidate_106: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend lf6 y) Nil)).
Lemma candidate_19: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_18: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_158: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons Zero x))) (len (lfappend y (Cons n x))).
Lemma candidate_156: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons Zero y))) (len (lfappend y (Cons n x))).
Lemma candidate_128: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_126: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_40: forall (lf3 : lst), @eq natural (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)) (len lf3).
Lemma candidate_35: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_5: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_9: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).
Lemma candidate_17: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_16: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y (lfappend x Nil))))   (len (lfappend y (Cons n x))).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x (lfappend y Nil))))   (len (lfappend y (Cons n x))).
Lemma candidate_212: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend (lfappend y x) Nil)))   (len (lfappend y (Cons n x))).
Lemma candidate_211: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend (lfappend x y) Nil)))   (len (lfappend y (Cons n x))).
Lemma candidate_121: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal2_theorem0_40_lem

Number of Lemmas: 295
Number of Lemmas (after duplicates removed): 78
Number of Lemmas (after QuickChick used to filter): 78
* Number of Candidate Lemmas: 51

Time until ranking: 680
Time to complete: 2868

Stuck state true independent of hypotheses: true

Category 1:
Count = 1

Lemma candidate_130: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).

Category 2:
Count = 5

Lemma candidate_159: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x y))) (len (lfappend y (Cons n x))).
Lemma candidate_155: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons n y))) (len (lfappend y (Cons n x))).
Lemma candidate_125: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_156: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend x (Cons Zero y))) (len (lfappend y (Cons n x))).
Lemma candidate_126: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).

Category 3 (provable):
Count = 19

Lemma candidate_30: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) x).
Lemma candidate_116: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_115: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_114: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_41: forall (lf3 : lst), @eq natural (len (lfappend (lfappend lf3 Nil) Nil)) (len lf3).
Lemma candidate_36: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_6: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_113: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) (lfappend lf6 Nil)).
Lemma candidate_112: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y (lfappend lf6 Nil)) Nil).
Lemma candidate_138: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y (lfappend lf6 Nil))) (len (lfappend y lf6)).
Lemma candidate_109: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend y (lfappend lf6 Nil))).
Lemma candidate_107: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend y lf6) Nil)).
Lemma candidate_19: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_158: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons Zero x))) (len (lfappend y (Cons n x))).
Lemma candidate_128: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_40: forall (lf3 : lst), @eq natural (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)) (len lf3).
Lemma candidate_35: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_5: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_9: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).

Category 3 (not provable):
Count = 26

Lemma candidate_132: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_32: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend y (lfappend x Nil)).
Lemma candidate_31: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y x) Nil).
Lemma candidate_131: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_29: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y Nil) (lfappend x Nil)).
Lemma candidate_28: forall (y : lst) (x : lst), @eq lst (lfappend y x) (lfappend (lfappend y (lfappend x Nil)) Nil).
Lemma candidate_25: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_24: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_23: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_22: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_123: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_122: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_120: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_119: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_137: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend lf6 (lfappend y Nil))) (len (lfappend y lf6)).
Lemma candidate_135: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend (lfappend lf6 y) Nil)) (len (lfappend y lf6)).
Lemma candidate_108: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend lf6 (lfappend y Nil))).
Lemma candidate_106: forall (y : lst) (lf6 : lst), @eq natural (len (lfappend y lf6)) (len (lfappend (lfappend lf6 y) Nil)).
Lemma candidate_18: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_17: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend y (lfappend x Nil)))).
Lemma candidate_16: forall (y : lst) (x : lst), @eq natural (Succ (len (lfappend y x)))   (Succ (len (lfappend x (lfappend y Nil)))).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend y (lfappend x Nil))))   (len (lfappend y (Cons n x))).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend x (lfappend y Nil))))   (len (lfappend y (Cons n x))).
Lemma candidate_212: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend (lfappend y x) Nil)))   (len (lfappend y (Cons n x))).
Lemma candidate_211: forall (n : natural) (y : lst) (x : lst), @eq natural (Succ (len (lfappend (lfappend x y) Nil)))   (len (lfappend y (Cons n x))).
Lemma candidate_121: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal30_append_assoc_35_append_nil

Number of Lemmas: 1834
Number of Lemmas (after duplicates removed): 322
Number of Lemmas (after QuickChick used to filter): 207
* Number of Candidate Lemmas: 156

Time until ranking: 9061
Time to complete: 14186

Stuck state true independent of hypotheses: true

Category 1:
Count = 14

Lemma candidate_1491: forall (l2 : lst), @eq lst (lfappend l2 Nil) (l2).
Lemma candidate_169: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_99: forall (lf6 : lst), @eq lst (lfappend lf6 Nil) (lf6).
Lemma candidate_167: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_1503: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 (lfappend l2 Nil)) (Cons n0 l2).
Lemma candidate_356: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_187: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend lf4 Nil)) (Cons n lf4).
Lemma candidate_175: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend lf3 Nil)).
Lemma candidate_105: forall (n : natural) (lf6 : lst), @eq lst (Cons n (lfappend lf6 Nil)) (Cons n lf6).
Lemma candidate_13: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_806: forall (n : natural) (lf6 : lst), @eq lst (Cons n (lf6)) (Cons n (lfappend lf6 Nil)).
Lemma candidate_401: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend (lf3) Nil)).
Lemma candidate_115: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend (lfappend l1 lf8) Nil) (lfappend (lfappend l1 Nil) lf8).

Category 2:
Count = 26

Lemma candidate_168: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_186: forall (n : natural) (lf4 : lst), @eq lst (Cons n (rev (rev lf4))) (Cons n lf4).
Lemma candidate_174: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (rev (rev lf3))).
Lemma candidate_78: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 l2) (Cons n0 (rev (rev l2))).
Lemma candidate_12: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_546: forall (n0 : natural) (lf7 : lst), @eq lst (Cons n0 lf7) (Cons n0 (rev (rev lf7))).
Lemma candidate_498: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 (rev (rev lf5))).
Lemma candidate_495: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend (rev (rev l1)) lf5).
Lemma candidate_54: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend l1 lf8) (lfappend l1 (rev (rev lf8))).
Lemma candidate_51: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend l1 lf8) (lfappend (rev (rev l1)) lf8).
Lemma candidate_354: forall (n : natural) (lf6 : lst), @eq lst (Cons n (rev (rev lf6))) (Cons n (lfappend lf6 Nil)).
Lemma candidate_201: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (rev (lfappend (rev lf3) Nil))).
Lemma candidate_492: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 (rev (rev lf5)))).
Lemma candidate_83: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 l2)) (lfappend l1 (Cons n0 (rev (rev l2)))).
Lemma candidate_81: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 l2)) (lfappend (rev (rev l1)) (Cons n0 l2)).
Lemma candidate_157: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend (lfappend l1 (Cons n0 l2)) Nil) (lfappend l1 (Cons n0 l2)).
Lemma candidate_85: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 l2))   (rev (lfappend (rev l2) (Cons n0 (rev l1)))).
Lemma candidate_154: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend (lfappend l1 (Cons n0 l2)) Nil)   (lfappend l1 (Cons n0 (rev (rev l2)))).
Lemma candidate_152: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend (lfappend l1 (Cons n0 l2)) Nil)   (lfappend (rev (rev l1)) (Cons n0 l2)).
Lemma candidate_153: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend (lfappend l1 (Cons n0 l2)) Nil)   (lfappend (lfappend l1 Nil) (Cons n0 l2)).
Lemma candidate_156: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend (lfappend l1 (Cons n0 l2)) Nil)   (rev (lfappend (rev l2) (Cons n0 (rev l1)))).
Lemma candidate_1249: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend l1 (lfappend (lfappend lf8 Nil) Nil)))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_1643: forall (l2 : lst) (n0 : natural) (n : natural) (lf9 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 lf9))))   (Cons n (lfappend (rev (lfappend (rev l2) (Cons n0 (rev l1)))) lf9)).

Category 3 (provable):
Count = 13

Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_79: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 l2) (Cons n0 (lfappend l2 Nil)).
Lemma candidate_547: forall (n0 : natural) (lf7 : lst), @eq lst (Cons n0 lf7) (Cons n0 (lfappend lf7 Nil)).
Lemma candidate_119: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend (lfappend l1 lf8) Nil) (lfappend l1 lf8).
Lemma candidate_55: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend l1 lf8) (lfappend l1 (lfappend lf8 Nil)).
Lemma candidate_53: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend l1 lf8) (lfappend (lfappend l1 lf8) Nil).
Lemma candidate_184: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend (lfappend lf4 Nil) Nil)) (Cons n lf4).
Lemma candidate_172: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_76: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 l2) (Cons n0 (lfappend (lfappend l2 Nil) Nil)).
Lemma candidate_10: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_544: forall (n0 : natural) (lf7 : lst), @eq lst (Cons n0 lf7) (Cons n0 (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_398: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3)   (Cons n (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_1787: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (lfappend (lfappend l1 Nil) (Cons n0 l2)) Nil)).

Category 3 (not provable):
Count = 103

Lemma candidate_1489: forall (l2 : lst), @eq lst (lfappend l2 Nil) (rev (rev l2)).
Lemma candidate_166: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_165: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_97: forall (lf6 : lst), @eq lst (lfappend lf6 Nil) (rev (rev lf6)).
Lemma candidate_1487: forall (l2 : lst), @eq lst (lfappend l2 Nil) (lfappend (rev (rev l2)) Nil).
Lemma candidate_1486: forall (l2 : lst), @eq lst (lfappend l2 Nil) (rev (lfappend (rev l2) Nil)).
Lemma candidate_95: forall (lf6 : lst), @eq lst (lfappend lf6 Nil) (lfappend (rev (rev lf6)) Nil).
Lemma candidate_94: forall (lf6 : lst), @eq lst (lfappend lf6 Nil) (rev (lfappend (rev lf6) Nil)).
Lemma candidate_499: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend l1 (lfappend lf5 Nil)).
Lemma candidate_497: forall (lf5 : lst) (l1 : lst), @eq lst (lfappend l1 lf5) (lfappend (lfappend l1 lf5) Nil).
Lemma candidate_1501: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 (lfappend l2 Nil)) (Cons n0 (rev (rev l2))).
Lemma candidate_513: forall (n : natural) (lf4 : lst), @eq lst (Cons n (rev (lfappend (rev lf4) Nil))) (Cons n lf4).
Lemma candidate_185: forall (n : natural) (lf4 : lst), @eq lst (rev (lfappend (rev lf4) (Cons n Nil))) (Cons n lf4).
Lemma candidate_183: forall (n : natural) (lf4 : lst), @eq lst (Cons n (lfappend (rev (rev lf4)) Nil)) (Cons n lf4).
Lemma candidate_173: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (rev (lfappend (rev lf3) (Cons n Nil))).
Lemma candidate_171: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend (rev (rev lf3)) Nil)).
Lemma candidate_103: forall (n : natural) (lf6 : lst), @eq lst (Cons n (lfappend lf6 Nil)) (Cons n (rev (rev lf6))).
Lemma candidate_77: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 l2) (rev (lfappend (rev l2) (Cons n0 Nil))).
Lemma candidate_75: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 l2) (Cons n0 (lfappend (rev (rev l2)) Nil)).
Lemma candidate_11: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_9: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend (rev (rev lf4)) Nil)).
Lemma candidate_545: forall (n0 : natural) (lf7 : lst), @eq lst (Cons n0 lf7) (rev (lfappend (rev lf7) (Cons n0 Nil))).
Lemma candidate_543: forall (n0 : natural) (lf7 : lst), @eq lst (Cons n0 lf7) (Cons n0 (lfappend (rev (rev lf7)) Nil)).
Lemma candidate_117: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend (lfappend l1 lf8) Nil) (lfappend l1 (rev (rev lf8))).
Lemma candidate_114: forall (l1 : lst) (lf8 : lst), @eq lst (lfappend (lfappend l1 lf8) Nil) (lfappend (rev (rev l1)) lf8).
Lemma candidate_489: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (rev (rev l1)) lf5)).
Lemma candidate_1500: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 (lfappend l2 Nil)) (rev (lfappend (rev l2) (Cons n0 Nil))).
Lemma candidate_1498: forall (l2 : lst) (n0 : natural), @eq lst (Cons n0 (lfappend l2 Nil)) (Cons n0 (lfappend (rev (rev l2)) Nil)).
Lemma candidate_801: forall (n : natural) (lf6 : lst), @eq lst (Cons n (rev (lfappend (rev lf6) Nil))) (Cons n (lfappend lf6 Nil)).
Lemma candidate_551: forall (n0 : natural) (lf7 : lst) (l1 : lst), @eq lst (lfappend l1 (Cons n0 lf7)) (lfappend l1 (Cons n0 (rev (rev lf7)))).
Lemma candidate_549: forall (n0 : natural) (lf7 : lst) (l1 : lst), @eq lst (lfappend l1 (Cons n0 lf7)) (lfappend (rev (rev l1)) (Cons n0 lf7)).
Lemma candidate_397: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend (lfappend (rev (rev lf3)) Nil) Nil)).
Lemma candidate_396: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend (rev (lfappend (rev lf3) Nil)) Nil)).
Lemma candidate_353: forall (n : natural) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n Nil))) (Cons n (lfappend lf6 Nil)).
Lemma candidate_351: forall (n : natural) (lf6 : lst), @eq lst (Cons n (lfappend (rev (rev lf6)) Nil)) (Cons n (lfappend lf6 Nil)).
Lemma candidate_102: forall (n : natural) (lf6 : lst), @eq lst (Cons n (lfappend lf6 Nil)) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_100: forall (n : natural) (lf6 : lst), @eq lst (Cons n (lfappend lf6 Nil)) (Cons n (lfappend (rev (rev lf6)) Nil)).
Lemma candidate_1497: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 (lfappend l2 Nil))) (lfappend l1 (Cons n0 l2)).
Lemma candidate_493: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend l1 (lfappend lf5 Nil))).
Lemma candidate_491: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5)) (Cons n (lfappend (lfappend l1 lf5) Nil)).
Lemma candidate_394: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend l1 lf8)) (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_125: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf8) Nil)) (Cons n (lfappend l1 lf8)).
Lemma candidate_84: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 l2)) (lfappend l1 (Cons n0 (lfappend l2 Nil))).
Lemma candidate_1252: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend l1 (lf8)))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_906: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend l1 (lf5)) Nil)).
Lemma candidate_552: forall (n0 : natural) (lf7 : lst) (l1 : lst), @eq lst (lfappend l1 (Cons n0 lf7))   (lfappend l1 (Cons n0 (lfappend lf7 Nil))).
Lemma candidate_553: forall (n0 : natural) (lf7 : lst) (l1 : lst), @eq lst (lfappend l1 (Cons n0 lf7))   (rev (lfappend (rev lf7) (Cons n0 (rev l1)))).
Lemma candidate_1494: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 (lfappend l2 Nil)))   (lfappend l1 (Cons n0 (rev (rev l2)))).
Lemma candidate_1492: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 (lfappend l2 Nil)))   (lfappend (rev (rev l1)) (Cons n0 l2)).
Lemma candidate_861: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend l1 (rev (rev lf5))) Nil)).
Lemma candidate_858: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend (rev (rev l1)) lf5) Nil)).
Lemma candidate_392: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend l1 (rev (rev lf8))))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_389: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend (rev (rev l1)) lf8))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_123: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf8) Nil))   (Cons n (lfappend l1 (rev (rev lf8)))).
Lemma candidate_120: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf8) Nil))   (Cons n (lfappend (rev (rev l1)) lf8)).
Lemma candidate_1493: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 (lfappend l2 Nil)))   (lfappend (lfappend l1 Nil) (Cons n0 l2)).
Lemma candidate_862: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend l1 (lfappend lf5 Nil)) Nil)).
Lemma candidate_860: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend (lfappend l1 lf5) Nil) Nil)).
Lemma candidate_859: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend (lfappend l1 Nil) lf5) Nil)).
Lemma candidate_390: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) lf8))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_121: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend (lfappend l1 lf8) Nil))   (Cons n (lfappend (lfappend l1 Nil) lf8)).
Lemma candidate_558: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend l1 (Cons n0 (rev (rev lf7))))).
Lemma candidate_555: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (rev (rev l1)) (Cons n0 lf7))).
Lemma candidate_1496: forall (l2 : lst) (n0 : natural) (l1 : lst), @eq lst (lfappend l1 (Cons n0 (lfappend l2 Nil)))   (rev (lfappend (rev l2) (Cons n0 (rev l1)))).
Lemma candidate_1485: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend l1 (Cons n0 l2))).
Lemma candidate_438: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l2)))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_163: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil))   (Cons n (lfappend l1 (Cons n0 l2))).
Lemma candidate_1271: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (lfappend l1 (Cons n0 lf7)) Nil)).
Lemma candidate_559: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend l1 (Cons n0 (lfappend lf7 Nil)))).
Lemma candidate_557: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (rev (lfappend (rev lf7) (Cons n0 (rev l1))))).
Lemma candidate_1248: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend l1 (lfappend (rev (rev lf8)) Nil)))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_1247: forall (n : natural) (l1 : lst) (lf8 : lst), @eq lst (Cons n (lfappend l1 (rev (lfappend (rev lf8) Nil))))   (Cons n (lfappend (lfappend l1 lf8) Nil)).
Lemma candidate_902: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend l1 (lfappend (rev (rev lf5)) Nil)) Nil)).
Lemma candidate_901: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend l1 (rev (lfappend (rev lf5) Nil))) Nil)).
Lemma candidate_1483: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend l1 (Cons n0 (rev (rev l2))))).
Lemma candidate_1480: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (rev (rev l1)) (Cons n0 l2))).
Lemma candidate_903: forall (n : natural) (lf5 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 lf5))   (Cons n (lfappend (lfappend l1 (lfappend (lfappend lf5 Nil) Nil)) Nil)).
Lemma candidate_436: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (rev (rev l2)))))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_433: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (rev (rev l1)) (Cons n0 l2)))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_161: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil))   (Cons n (lfappend l1 (Cons n0 (rev (rev l2))))).
Lemma candidate_158: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil))   (Cons n (lfappend (rev (rev l1)) (Cons n0 l2))).
Lemma candidate_1268: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (lfappend l1 (Cons n0 (rev (rev lf7)))) Nil)).
Lemma candidate_1266: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (lfappend (rev (rev l1)) (Cons n0 lf7)) Nil)).
Lemma candidate_1481: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l2))).
Lemma candidate_434: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l2)))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_159: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l2))).
Lemma candidate_1269: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (lfappend l1 (Cons n0 (lfappend lf7 Nil))) Nil)).
Lemma candidate_1267: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (lfappend (lfappend l1 Nil) (Cons n0 lf7)) Nil)).
Lemma candidate_1482: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (rev (lfappend (rev l2) (Cons n0 (rev l1))))).
Lemma candidate_435: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (rev (lfappend (rev l2) (Cons n0 (rev l1)))))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_160: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil))   (Cons n (rev (lfappend (rev l2) (Cons n0 (rev l1))))).
Lemma candidate_1270: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n (lfappend (rev (lfappend (rev lf7) (Cons n0 (rev l1)))) Nil)).
Lemma candidate_1788: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (lfappend l1 (Cons n0 (rev (rev l2)))) Nil)).
Lemma candidate_1786: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (lfappend (rev (rev l1)) (Cons n0 l2)) Nil)).
Lemma candidate_1311: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (rev (lfappend (rev l2) (Cons n0 Nil)))))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_1309: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend (rev (rev l2)) Nil))))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_1789: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (lfappend l1 (Cons n0 (lfappend l2 Nil))) Nil)).
Lemma candidate_1642: forall (l2 : lst) (n0 : natural) (n : natural) (lf9 : lst) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 lf9))))   (Cons n (lfappend (lfappend l1 (Cons n0 (lfappend l2 Nil))) lf9)).
Lemma candidate_1310: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend (lfappend l2 Nil) Nil))))   (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)).
Lemma candidate_1790: forall (l2 : lst) (n0 : natural) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil))))   (Cons n (lfappend (rev (lfappend (rev l2) (Cons n0 (rev l1)))) Nil)).
Lemma candidate_1323: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n      (lfappend (lfappend l1 (rev (lfappend (rev lf7) (Cons n0 Nil)))) Nil)).
Lemma candidate_1321: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n      (lfappend (lfappend l1 (Cons n0 (lfappend (rev (rev lf7)) Nil))) Nil)).
Lemma candidate_1322: forall (n0 : natural) (lf7 : lst) (n : natural) (l1 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 lf7)))   (Cons n      (lfappend (lfappend l1 (Cons n0 (lfappend (lfappend lf7 Nil) Nil))) Nil)).
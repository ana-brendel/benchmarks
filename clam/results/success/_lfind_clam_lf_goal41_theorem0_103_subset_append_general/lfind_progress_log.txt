File Information
- File name: goal41
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal41_theorem0_103_subset_append_general
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal41_theorem0_103_subset_append_general
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : lst) (_ : @eq bool (lst_subset x0 y0) true),
@eq bool (lst_eq (lst_intersection x0 y0) x0) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true

* Hypothesis:
IHx : forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true
H0 : @eq bool (lst_mem n y) true
H1 : @eq bool (lst_subset x (lst_intersection x y)) true
x : lst
H : @eq bool (lst_subset (lst_intersection x y) x) true
y : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lst_eq (lst_intersection x y) x : bool
x : lst
forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
y : lst
true : bool
@eq bool (lst_mem n y) true : Prop
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
@eq bool (lst_subset x y) true : Prop
@eq bool (lst_subset (lst_intersection x y) x) true : Prop
bool : Set
lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)) : bool
lst_subset (lst_intersection x y) x : bool
lst : Set
lst_mem n y : bool
Cons n Nil : lst
lst_subset x (lst_intersection x y) : bool
@eq bool (lst_subset x (lst_intersection x y)) true : Prop
@eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true : Prop
lst_subset x y : bool
natural : Set
lst_intersection x y : lst
n : natural
Nil : lst
lfappend (Cons n Nil) (lst_intersection x y) : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
lst_subset  : forall (_ : lst) (_ : lst), bool
lst_eq  : forall (_ : lst) (_ : lst), bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_intersection  : forall (_ : lst) (_ : lst), lst
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lst_intersection x y
lf1 : bool = lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))
lf4 : lst = Cons n Nil
lf5 : bool = true
lf2 : lst = lfappend (Cons n Nil) (lst_intersection x y)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (x : lst), @eq bool (lst_subset x lf2) lf5.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma conj21: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.


<---VALIDITY CHECKS--->
Time elapsed: 93 seconds
Valid:

Invalid:
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma conj21: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (x : lst), @eq bool (lst_subset x lf2) lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.

<---ADD IMPLICATIONS--->
Time elapsed: 156 seconds
Generalizations:
Lemma conj64_imp: forall (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_mem n y) true)
        (@eq bool (lst_subset x (lst_intersection x y)) true),
@eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.
Lemma conj63_imp: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_mem n y) true)
        (@eq bool (lst_subset x (lst_intersection x y)) true),
@eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma conj60_imp: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma conj59_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma conj55_imp: forall (x : lst) (lf4 : lst) (y : lst), forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
@eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma conj51_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma conj32_imp: forall (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma conj31_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma conj28_imp: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma conj27_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma conj23_imp: forall (x : lst) (lf4 : lst) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma conj21: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj19_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (x : lst), @eq bool (lst_subset x lf2) lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.


<---VALIDITY CHECKS--->
Time elapsed: 200 seconds
Valid:
Lemma conj19_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma conj23_imp: forall (x : lst) (lf4 : lst) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma conj28_imp: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma conj31_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma conj32_imp: forall (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma conj51_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma conj55_imp: forall (x : lst) (lf4 : lst) (y : lst), forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
@eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma conj59_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma conj60_imp: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma conj63_imp: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_mem n y) true)
        (@eq bool (lst_subset x (lst_intersection x y)) true),
@eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma conj64_imp: forall (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_mem n y) true)
        (@eq bool (lst_subset x (lst_intersection x y)) true),
@eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.

Invalid:
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (x : lst), @eq bool (lst_subset x lf2) lf5.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma conj21: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma conj27_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.


<---CREATE SKETCHES--->
Time elapsed: 200 seconds
Sketches:
Sketch conj5_sketch0 : @eq bool lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq bool true (##hole##)
Sketch conj17_sketch0 : @eq bool (##hole##) lf5
Sketch conj17_term_sketch0 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj19_sketch0 : @eq bool (lst_subset x (##hole##)) lf5
Sketch conj19_sketch1 : @eq bool (##hole##) lf5
Sketch conj19_term_sketch0 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq bool (lst_subset x (lfappend lf4 lf3)) (##hole##)
Sketch conj21_sketch0 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj21_sketch1 : @eq bool (##hole##) true
Sketch conj21_term_sketch0 : @eq bool true (##hole##)
Sketch conj21_term_sketch1 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj23_sketch0 : @eq bool (lst_subset x (##hole##)) true
Sketch conj23_sketch1 : @eq bool (##hole##) true
Sketch conj23_sketch2 : @eq bool (lst_subset x (lfappend lf4 lf3)) (##hole##)
Sketch conj23_term_sketch0 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj23_term_sketch1 : @eq bool (lst_subset x (lfappend lf4 lf3)) (##hole##)
Sketch conj23_term_sketch2 : @eq bool true (##hole##)
Sketch conj27_sketch0 : @eq bool (lst_subset x (##hole##)) lf5
Sketch conj27_sketch1 : @eq bool (lst_subset x (lfappend (##hole##) lf3)) lf5
Sketch conj27_sketch2 : @eq bool (##hole##) lf5
Sketch conj27_term_sketch0 : @eq lst (lfappend (Cons n lf6) lf3) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj27_term_sketch2 : @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (##hole##)
Sketch conj27_imp_sketch0 : forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (##hole##) lf5),
@eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5
Sketch conj27_imp_sketch1 : forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (##hole##)) lf5
Sketch conj27_imp_sketch2 : forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend (##hole##) lf3)) lf5
Sketch conj27_imp_sketch3 : forall _ : and (@eq bool (##hole##) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5
Sketch conj27_imp_sketch4 : forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (##hole##) lf5
Sketch conj27_imp_term_sketch0 : @eq bool (lst_subset lf3 x) (##hole##)
Sketch conj27_imp_term_sketch1 : @eq lst (lfappend (Cons n lf6) lf3) (##hole##)
Sketch conj27_imp_term_sketch2 : @eq lst (Cons n lf6) (##hole##)
Sketch conj27_imp_term_sketch3 : @eq bool (lst_subset x lf3) (##hole##)
Sketch conj27_imp_term_sketch4 : @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (##hole##)
Sketch conj28_sketch0 : @eq bool (##hole##) lf5
Sketch conj28_sketch1 : @eq bool (lst_subset x (lfappend (##hole##) lf3)) lf5
Sketch conj28_sketch2 : @eq bool (lst_subset x (##hole##)) lf5
Sketch conj28_sketch3 : @eq bool (lst_subset x (lfappend (Cons n (##hole##)) lf3)) lf5
Sketch conj28_term_sketch0 : @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (lfappend (Cons n Nil) lf3) (##hole##)
Sketch conj28_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj31_sketch0 : @eq bool (lst_subset x (##hole##)) true
Sketch conj31_sketch1 : @eq bool (lst_subset x (lfappend (##hole##) lf3)) true
Sketch conj31_sketch2 : @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (##hole##)
Sketch conj31_sketch3 : @eq bool (##hole##) true
Sketch conj31_term_sketch0 : @eq lst (lfappend (Cons n lf6) lf3) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj31_term_sketch2 : @eq bool true (##hole##)
Sketch conj31_term_sketch3 : @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (##hole##)
Sketch conj32_sketch0 : @eq bool (##hole##) true
Sketch conj32_sketch1 : @eq bool (lst_subset x (lfappend (##hole##) lf3)) true
Sketch conj32_sketch2 : @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (##hole##)
Sketch conj32_sketch3 : @eq bool (lst_subset x (##hole##)) true
Sketch conj32_sketch4 : @eq bool (lst_subset x (lfappend (Cons n (##hole##)) lf3)) true
Sketch conj32_term_sketch0 : @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (##hole##)
Sketch conj32_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj32_term_sketch2 : @eq bool true (##hole##)
Sketch conj32_term_sketch3 : @eq lst (lfappend (Cons n Nil) lf3) (##hole##)
Sketch conj32_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj51_sketch0 : @eq bool (lst_subset x (##hole##)) lf5
Sketch conj51_sketch1 : @eq bool (lst_subset x (lfappend lf4 (##hole##))) lf5
Sketch conj51_sketch2 : @eq bool (##hole##) lf5
Sketch conj51_term_sketch0 : @eq lst (lfappend lf4 (lst_intersection x y)) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj51_term_sketch2 : @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) (##hole##)
Sketch conj55_sketch0 : @eq bool (lst_subset x (##hole##)) true
Sketch conj55_sketch1 : @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) (##hole##)
Sketch conj55_sketch2 : @eq bool (lst_subset x (lfappend lf4 (##hole##))) true
Sketch conj55_sketch3 : @eq bool (##hole##) true
Sketch conj55_term_sketch0 : @eq lst (lfappend lf4 (lst_intersection x y)) (##hole##)
Sketch conj55_term_sketch1 : @eq bool true (##hole##)
Sketch conj55_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj55_term_sketch3 : @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) (##hole##)
Sketch conj59_sketch0 : @eq bool (lst_subset x (lfappend (##hole##) (lst_intersection x y))) lf5
Sketch conj59_sketch1 : @eq bool (lst_subset x (lfappend (Cons n lf6) (##hole##))) lf5
Sketch conj59_sketch2 : @eq bool (##hole##) lf5
Sketch conj59_sketch3 : @eq bool (lst_subset x (##hole##)) lf5
Sketch conj59_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj59_term_sketch2 : @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))
  (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (##hole##)
Sketch conj60_sketch0 : @eq bool (##hole##) lf5
Sketch conj60_sketch1 : @eq bool (lst_subset x (lfappend (##hole##) (lst_intersection x y))) lf5
Sketch conj60_sketch2 : @eq bool (lst_subset x (lfappend (Cons n Nil) (##hole##))) lf5
Sketch conj60_sketch3 : @eq bool (lst_subset x (lfappend (Cons n (##hole##)) (lst_intersection x y)))
  lf5
Sketch conj60_sketch4 : @eq bool (lst_subset x (##hole##)) lf5
Sketch conj60_term_sketch0 : @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))
  (##hole##)
Sketch conj60_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj60_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_term_sketch4 : @eq lst (lfappend (Cons n Nil) (lst_intersection x y)) (##hole##)
Sketch conj63_sketch0 : @eq bool (lst_subset x (lfappend (##hole##) (lst_intersection x y))) true
Sketch conj63_sketch1 : @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))
  (##hole##)
Sketch conj63_sketch2 : @eq bool (lst_subset x (lfappend (Cons n lf6) (##hole##))) true
Sketch conj63_sketch3 : @eq bool (##hole##) true
Sketch conj63_sketch4 : @eq bool (lst_subset x (##hole##)) true
Sketch conj63_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq bool true (##hole##)
Sketch conj63_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj63_term_sketch3 : @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))
  (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (##hole##)
Sketch conj64_sketch0 : @eq bool (##hole##) true
Sketch conj64_sketch1 : @eq bool (lst_subset x (lfappend (##hole##) (lst_intersection x y))) true
Sketch conj64_sketch2 : @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))
  (##hole##)
Sketch conj64_sketch3 : @eq bool (lst_subset x (lfappend (Cons n Nil) (##hole##))) true
Sketch conj64_sketch4 : @eq bool (lst_subset x (lfappend (Cons n (##hole##)) (lst_intersection x y)))
  true
Sketch conj64_sketch5 : @eq bool (lst_subset x (##hole##)) true
Sketch conj64_term_sketch0 : @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))
  (##hole##)
Sketch conj64_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj64_term_sketch2 : @eq bool true (##hole##)
Sketch conj64_term_sketch3 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj64_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_term_sketch5 : @eq lst (lfappend (Cons n Nil) (lst_intersection x y)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1448 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_25
Sketch conj28_sketch0 --> Problem  synth_3
Sketch conj64_term_sketch0 --> Problem  synth_42
Sketch conj60_term_sketch1 --> Problem  synth_23
Sketch conj59_term_sketch2 --> Problem  synth_38
Sketch conj27_imp_sketch4 --> Problem  synth_18
Sketch conj63_sketch4 --> Problem  synth_10
Sketch conj23_sketch0 --> Problem  synth_10
Sketch conj60_term_sketch4 --> Problem  synth_43
Sketch conj59_term_sketch1 --> Problem  synth_32
Sketch conj59_sketch1 --> Problem  synth_37
Sketch conj60_sketch0 --> Problem  synth_3
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch1 --> Problem  synth_23
Sketch conj21_term_sketch1 --> Problem  synth_4
Sketch conj63_term_sketch0 --> Problem  synth_14
Sketch conj31_sketch0 --> Problem  synth_10
Sketch conj31_term_sketch3 --> Problem  synth_15
Sketch conj55_sketch3 --> Problem  synth_9
Sketch conj31_term_sketch1 --> Problem  synth_14
Sketch conj32_sketch0 --> Problem  synth_9
Sketch conj60_term_sketch3 --> Problem  synth_25
Sketch conj23_sketch1 --> Problem  synth_9
Sketch conj64_term_sketch5 --> Problem  synth_43
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj60_term_sketch2 --> Problem  synth_32
Sketch conj60_sketch1 --> Problem  synth_36
Sketch conj55_sketch1 --> Problem  synth_34
Sketch conj28_term_sketch3 --> Problem  synth_25
Sketch conj60_sketch2 --> Problem  synth_40
Sketch conj59_sketch3 --> Problem  synth_5
Sketch conj27_term_sketch2 --> Problem  synth_15
Sketch conj64_term_sketch1 --> Problem  synth_23
Sketch conj63_term_sketch4 --> Problem  synth_39
Sketch conj32_sketch3 --> Problem  synth_10
Sketch conj59_sketch2 --> Problem  synth_3
Sketch conj32_term_sketch3 --> Problem  synth_24
Sketch conj28_sketch2 --> Problem  synth_5
Sketch conj23_term_sketch2 --> Problem  synth_2
Sketch conj21_sketch0 --> Problem  synth_8
Sketch conj27_imp_sketch0 --> Problem  synth_16
Sketch conj19_term_sketch1 --> Problem  synth_7
Sketch conj51_term_sketch2 --> Problem  synth_33
Sketch conj27_sketch2 --> Problem  synth_3
Sketch conj28_term_sketch2 --> Problem  synth_24
Sketch conj60_term_sketch0 --> Problem  synth_42
Sketch conj31_sketch2 --> Problem  synth_27
Sketch conj27_sketch1 --> Problem  synth_12
Sketch conj60_sketch3 --> Problem  synth_41
Sketch conj32_term_sketch2 --> Problem  synth_2
Sketch conj51_sketch0 --> Problem  synth_5
Sketch conj31_sketch3 --> Problem  synth_9
Sketch conj23_term_sketch0 --> Problem  synth_6
Sketch conj19_term_sketch0 --> Problem  synth_6
Sketch conj32_sketch2 --> Problem  synth_28
Sketch conj63_term_sketch1 --> Problem  synth_2
Sketch conj32_sketch1 --> Problem  synth_26
Sketch conj27_imp_sketch3 --> Problem  synth_17
Sketch conj51_term_sketch1 --> Problem  synth_32
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj51_term_sketch0 --> Problem  synth_31
Sketch conj55_term_sketch0 --> Problem  synth_31
Sketch conj27_imp_term_sketch4 --> Problem  synth_15
Sketch conj27_term_sketch1 --> Problem  synth_14
Sketch conj23_sketch2 --> Problem  synth_11
Sketch conj19_sketch0 --> Problem  synth_5
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj63_sketch2 --> Problem  synth_46
Sketch conj55_term_sketch1 --> Problem  synth_2
Sketch conj27_imp_term_sketch0 --> Problem  synth_19
Sketch conj59_sketch0 --> Problem  synth_36
Sketch conj64_term_sketch4 --> Problem  synth_25
Sketch conj64_sketch1 --> Problem  synth_44
Sketch conj23_term_sketch1 --> Problem  synth_7
Sketch conj63_term_sketch3 --> Problem  synth_38
Sketch conj63_sketch0 --> Problem  synth_44
Sketch conj55_term_sketch3 --> Problem  synth_33
Sketch conj63_sketch3 --> Problem  synth_9
Sketch conj59_term_sketch0 --> Problem  synth_14
Sketch conj31_term_sketch0 --> Problem  synth_13
Sketch conj28_term_sketch0 --> Problem  synth_22
Sketch conj59_term_sketch3 --> Problem  synth_39
Sketch conj51_sketch1 --> Problem  synth_30
Sketch conj55_sketch0 --> Problem  synth_10
Sketch conj63_sketch1 --> Problem  synth_45
Sketch conj27_sketch0 --> Problem  synth_5
Sketch conj32_term_sketch0 --> Problem  synth_22
Sketch conj64_sketch4 --> Problem  synth_49
Sketch conj64_sketch2 --> Problem  synth_47
Sketch conj64_sketch3 --> Problem  synth_48
Sketch conj21_term_sketch0 --> Problem  synth_2
Sketch conj19_sketch1 --> Problem  synth_3
Sketch conj28_sketch3 --> Problem  synth_21
Sketch conj27_imp_term_sketch2 --> Problem  synth_14
Sketch conj64_term_sketch2 --> Problem  synth_2
Sketch conj28_sketch1 --> Problem  synth_12
Sketch conj32_sketch4 --> Problem  synth_29
Sketch conj27_imp_term_sketch3 --> Problem  synth_20
Sketch conj27_imp_sketch1 --> Problem  synth_12
Sketch conj21_sketch1 --> Problem  synth_9
Sketch conj32_term_sketch1 --> Problem  synth_23
Sketch conj27_imp_term_sketch1 --> Problem  synth_13
Sketch conj64_sketch5 --> Problem  synth_10
Sketch conj60_sketch4 --> Problem  synth_5
Sketch conj27_imp_sketch2 --> Problem  synth_12
Sketch conj31_sketch1 --> Problem  synth_26
Sketch conj64_sketch0 --> Problem  synth_9
Sketch conj31_term_sketch2 --> Problem  synth_2
Sketch conj55_term_sketch2 --> Problem  synth_32
Sketch conj27_term_sketch0 --> Problem  synth_13
Sketch conj51_sketch2 --> Problem  synth_3
Sketch conj63_term_sketch2 --> Problem  synth_32
Sketch conj55_sketch2 --> Problem  synth_35
Sketch conj64_term_sketch3 --> Problem  synth_32


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1569 seconds

Problem: synth_28
 lst_subset lf3 Nil
 lst_eq lf3 Nil
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 true

Problem: synth_17
 lst_eq lf3 x
 lst_eq lf6 x
 lst_subset x lf6
 lst_eq x lf6
 lst_subset x Nil
 lst_eq x Nil

Problem: synth_29
 lst_intersection lf3 x
 lfappend lf3 Nil
 lst_intersection lf3 Nil
 lst_intersection x Nil
 lf3
 Nil

Problem: synth_45
 lst_subset lf6 Nil
 lst_eq lf6 Nil
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 true

Problem: synth_26
 Cons Zero (lfappend lf3 Nil)
 Cons Zero (lst_intersection lf3 Nil)
 Cons Zero (lst_intersection x Nil)
 lfappend lf3 (Cons Zero Nil)
 Cons Zero lf3
 Cons Zero Nil

Problem: synth_9

Problem: synth_30
 lst_intersection x (lst_intersection lf4 Nil)
 lst_intersection lf4 (lst_intersection x Nil)
 lst_intersection x (lst_intersection x Nil)
 lst_intersection lf4 Nil
 lst_intersection x Nil
 Nil

Problem: synth_11
 lst_subset x x
 lst_eq x x
 lst_subset lf3 Nil
 lst_eq lf3 Nil
 mem lf4 Zero
 true

Problem: synth_39
 lfappend lf6 (Cons n Nil)
 lfappend lf6 (Cons Zero Nil)
 Cons n lf6
 Cons Zero lf6
 Cons n Nil
 Cons Zero Nil

Problem: synth_1
 true

Problem: synth_46
 lst_intersection lf6 lf6
 lst_intersection x Nil
 lfappend lf6 Nil
 lst_intersection lf6 Nil
 lf6
 Nil

Problem: synth_15
 lst_subset x (Cons n lf3)
 lst_subset x (Cons Zero lf3)
 lst_subset x (Cons n lf6)
 lst_subset x (Cons Zero lf6)
 lst_subset x (Cons n Nil)
 lst_subset x (Cons Zero Nil)

Problem: synth_31
 Cons Zero (lst_intersection x Nil)
 lst_intersection lf4 (Cons Zero Nil)
 lst_intersection lf4 lf4
 lfappend lf4 Nil
 Cons Zero Nil
 lf4

Problem: synth_14
 lfappend lf6 (Cons n Nil)
 lfappend lf6 (Cons Zero Nil)
 Cons n lf6
 Cons Zero lf6
 Cons n Nil
 Cons Zero Nil

Problem: synth_8
 lst_eq x x
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 lst_mem Zero lf2
 mem lf2 Zero
 true

Problem: synth_34
 lst_eq lf4 lf4
 lst_mem Zero lf4
 lst_subset x x
 lst_eq x x
 mem lf4 Zero
 true

Problem: synth_12
 Cons Zero (lfappend lf3 Nil)
 Cons Zero (lst_intersection lf3 Nil)
 Cons Zero (lst_intersection x Nil)
 lfappend lf3 (Cons Zero Nil)
 Cons Zero lf3
 Cons Zero Nil

Problem: synth_5
 lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))
 if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil
 lfappend (lst_intersection x Nil) (Cons Zero Nil)
 Cons Zero (lst_intersection x (lst_intersection x Nil))
 Cons Zero (lst_intersection x Nil)
 Cons Zero Nil

Problem: synth_37
 lst_intersection lf6 lf6
 lst_intersection x Nil
 lfappend lf6 Nil
 lst_intersection lf6 Nil
 lf6
 Nil

Problem: synth_2
 true

Problem: synth_22
 lst_subset x (Cons n (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons n lf3)
 lst_subset x (Cons Zero lf3)
 lst_subset x (Cons n Nil)
 lst_subset x (Cons Zero Nil)

Problem: synth_20
 lst_eq x (lst_intersection x Nil)
 lst_subset x lf3
 lst_eq x lf3
 lst_eq lf3 x
 lst_subset x Nil
 lst_eq x Nil

Problem: synth_18
 lst_subset x (lfappend lf3 (Cons Zero Nil))
 lst_subset x (lst_intersection x (Cons Zero Nil))
 lst_eq x (lst_intersection x (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons Zero lf3)
 lst_subset x (Cons Zero Nil)

Problem: synth_21
 lst_intersection lf3 x
 lfappend lf3 Nil
 lst_intersection lf3 Nil
 lst_intersection x Nil
 lf3
 Nil

Problem: synth_41
 lst_intersection y (Cons Zero Nil)
 lst_intersection x y
 lst_intersection y x
 lst_intersection y Nil
 lst_intersection x Nil
 Nil

Problem: synth_49
 lst_intersection y (Cons Zero Nil)
 lst_intersection x y
 lst_intersection y x
 lst_intersection y Nil
 lst_intersection x Nil
 Nil

Problem: synth_25
 Nil

Problem: synth_13
 Cons n lf3
 Cons Zero lf3
 Cons n lf6
 Cons Zero lf6
 Cons n Nil
 Cons Zero Nil

Problem: synth_6
 Cons Zero lf3
 lfappend lf3 lf4
 lst_intersection lf4 lf4
 lfappend lf4 Nil
 Cons Zero Nil
 lf4

Problem: synth_7
 lst_subset x (lst_intersection lf4 x)
 lst_eq x (lst_intersection lf4 x)
 lst_eq lf4 (Cons Zero x)
 lst_subset x (lfappend lf4 Nil)
 lst_subset x (Cons Zero Nil)
 lst_subset x lf4

Problem: synth_4
 lst_subset x (lfappend lf2 lf2)
 lst_subset x (lst_intersection lf2 lf2)
 lst_subset x (Cons Zero lf2)
 lst_subset x (lfappend lf2 Nil)
 lst_subset x (Cons Zero Nil)
 lst_subset x lf2

Problem: synth_38
 lst_subset x (Cons n y)
 lst_subset x (Cons Zero y)
 lst_subset x (Cons n lf6)
 lst_subset x (Cons Zero lf6)
 lst_subset x (Cons n Nil)
 lst_subset x (Cons Zero Nil)

Problem: synth_23
 if orb (lfeqb n Zero) (orb (lfeqb n Zero) false) then Cons n Nil else Nil
 if orb (lfeqb n n) false then Cons n Nil else Nil
 if orb match n with | Succ _ => false | Zero => true end false then Cons Zero Nil else Nil
 if orb (lfeqb n Zero) false then Cons n Nil else Nil
 Cons n Nil
 Cons Zero Nil

Problem: synth_27
 lst_subset lf6 Nil
 lst_eq lf6 Nil
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 true

Problem: synth_42
 lst_subset x (Cons n (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons n y)
 lst_subset x (Cons Zero y)
 lst_subset x (Cons n Nil)
 lst_subset x (Cons Zero Nil)

Problem: synth_16
 lst_eq lf6 Nil
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 lf5
 true

Problem: synth_19
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 lst_subset lf3 Nil
 lst_eq lf3 Nil
 true

Problem: synth_40
 lst_intersection (lfappend x Nil) Nil
 lfappend (lst_intersection x Nil) Nil
 lst_intersection (lst_intersection x Nil) Nil
 lst_intersection x (lst_intersection x Nil)
 lst_intersection x Nil
 Nil

Problem: synth_10
 lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))
 if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil
 lfappend (lst_intersection x Nil) (Cons Zero Nil)
 Cons Zero (lst_intersection x (lst_intersection x Nil))
 Cons Zero (lst_intersection x Nil)
 Cons Zero Nil

Problem: synth_33
 lst_subset x (lst_intersection lf4 x)
 lst_eq x (lst_intersection lf4 x)
 lst_eq lf4 (Cons Zero x)
 lst_subset x (lfappend lf4 Nil)
 lst_subset x (Cons Zero Nil)
 lst_subset x lf4

Problem: synth_47
 lst_subset x x
 lst_eq x x
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 true

Problem: synth_24
 lfappend lf3 (Cons n Nil)
 lfappend lf3 (Cons Zero Nil)
 Cons n lf3
 Cons Zero lf3
 Cons n Nil
 Cons Zero Nil

Problem: synth_3

Problem: synth_32
 lst_intersection y (Cons Zero Nil)
 lst_intersection x y
 lst_intersection y x
 lst_intersection y Nil
 lst_intersection x Nil
 Nil

Problem: synth_48
 lst_intersection (lfappend x Nil) Nil
 lfappend (lst_intersection x Nil) Nil
 lst_intersection (lst_intersection x Nil) Nil
 lst_intersection x (lst_intersection x Nil)
 lst_intersection x Nil
 Nil

Problem: synth_44
 Cons Zero (lst_intersection y (Cons Zero Nil))
 Cons Zero (lst_intersection x y)
 Cons Zero (lst_intersection y x)
 Cons Zero (lst_intersection y Nil)
 Cons Zero (lst_intersection x Nil)
 Cons Zero Nil

Problem: synth_36
 Cons Zero (lst_intersection y (Cons Zero Nil))
 Cons Zero (lst_intersection x y)
 Cons Zero (lst_intersection y x)
 Cons Zero (lst_intersection y Nil)
 Cons Zero (lst_intersection x Nil)
 Cons Zero Nil

Problem: synth_35
 lst_intersection x (lst_intersection lf4 Nil)
 lst_intersection lf4 (lst_intersection x Nil)
 lst_intersection x (lst_intersection x Nil)
 lst_intersection lf4 Nil
 lst_intersection x Nil
 Nil

Problem: synth_43
 Cons n (lst_intersection y Nil)
 Cons Zero (lst_intersection y Nil)
 Cons n (lst_intersection x Nil)
 Cons Zero (lst_intersection x Nil)
 Cons n Nil
 Cons Zero Nil

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1570 seconds
Lemmas:
Lemma candidate_1: forall (lf3 : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend lf4 lf3)) lf5.
Lemma candidate_2: forall (lf3 : lst) (lf4 : lst) (x : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma candidate_3: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma candidate_4: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma candidate_5: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma candidate_6: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma candidate_7: forall (y : lst) (lf4 : lst) (x : lst), forall _ : @eq bool (lst_subset x (lst_intersection x y)) true, @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma candidate_8: forall (n : natural) (y : lst) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
Lemma candidate_9: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), forall   _ : and (@eq bool (lst_mem n y) true)         (@eq bool (lst_subset x (lst_intersection x y)) true), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst), forall   _ : and (@eq bool (lst_mem n y) true)         (@eq bool (lst_subset x (lst_intersection x y)) true), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.
Lemma candidate_12: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_13: @eq bool true (true).
Lemma candidate_14: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 lf2)).
Lemma candidate_15: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lst_intersection lf2 lf2)).
Lemma candidate_16: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero lf2)).
Lemma candidate_17: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_18: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero Nil)).
Lemma candidate_19: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x lf2).
Lemma candidate_20: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   lf5.
Lemma candidate_21: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   lf5.
Lemma candidate_22: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   lf5.
Lemma candidate_23: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_24: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_25: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_26: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (Cons Zero lf3).
Lemma candidate_27: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf3 lf4).
Lemma candidate_28: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lst_intersection lf4 lf4).
Lemma candidate_29: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 Nil).
Lemma candidate_30: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (Cons Zero Nil).
Lemma candidate_31: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lf4).
Lemma candidate_32: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3))   (lst_subset x (lst_intersection lf4 x)).
Lemma candidate_33: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3))   (lst_eq x (lst_intersection lf4 x)).
Lemma candidate_34: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_eq lf4 (Cons Zero x)).
Lemma candidate_35: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x (lfappend lf4 Nil)).
Lemma candidate_36: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x (Cons Zero Nil)).
Lemma candidate_37: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x lf4).
Lemma candidate_38: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq x x).
Lemma candidate_39: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset lf2 lf2).
Lemma candidate_40: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq lf2 lf2).
Lemma candidate_41: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_mem Zero lf2).
Lemma candidate_42: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (mem lf2 Zero).
Lemma candidate_43: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (true).
Lemma candidate_44: @eq bool true (true).
Lemma candidate_45: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 lf2)).
Lemma candidate_46: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lst_intersection lf2 lf2)).
Lemma candidate_47: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero lf2)).
Lemma candidate_48: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_49: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero Nil)).
Lemma candidate_50: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x lf2).
Lemma candidate_51: forall (x : lst), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   true.
Lemma candidate_52: forall (x : lst), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   true.
Lemma candidate_53: forall (x : lst), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   true.
Lemma candidate_54: forall (x : lst), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_55: forall (x : lst), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) true.
Lemma candidate_56: forall (x : lst), @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_57: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x x).
Lemma candidate_58: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_eq x x).
Lemma candidate_59: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset lf3 Nil).
Lemma candidate_60: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_eq lf3 Nil).
Lemma candidate_61: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (mem lf4 Zero).
Lemma candidate_62: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (true).
Lemma candidate_63: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (Cons Zero lf3).
Lemma candidate_64: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf3 lf4).
Lemma candidate_65: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lst_intersection lf4 lf4).
Lemma candidate_66: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 Nil).
Lemma candidate_67: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (Cons Zero Nil).
Lemma candidate_68: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lf4).
Lemma candidate_69: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3))   (lst_subset x (lst_intersection lf4 x)).
Lemma candidate_70: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3))   (lst_eq x (lst_intersection lf4 x)).
Lemma candidate_71: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_eq lf4 (Cons Zero x)).
Lemma candidate_72: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x (lfappend lf4 Nil)).
Lemma candidate_73: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x (Cons Zero Nil)).
Lemma candidate_74: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 lf3)) (lst_subset x lf4).
Lemma candidate_75: @eq bool true (true).
Lemma candidate_76: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   lf5.
Lemma candidate_77: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   lf5.
Lemma candidate_78: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   lf5.
Lemma candidate_79: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_80: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_81: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_82: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero (lfappend lf3 Nil)) lf3)) lf5.
Lemma candidate_83: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection lf3 Nil)) lf3))   lf5.
Lemma candidate_84: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection x Nil)) lf3))   lf5.
Lemma candidate_85: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lfappend lf3 (Cons Zero Nil)) lf3)) lf5.
Lemma candidate_86: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero lf3) lf3)) lf5.
Lemma candidate_87: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero Nil) lf3)) lf5.
Lemma candidate_88: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n lf3).
Lemma candidate_89: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero lf3).
Lemma candidate_90: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n lf6).
Lemma candidate_91: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero lf6).
Lemma candidate_92: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n Nil).
Lemma candidate_93: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero Nil).
Lemma candidate_94: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_95: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_96: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_97: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero lf6).
Lemma candidate_98: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_99: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero Nil).
Lemma candidate_100: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n lf3)).
Lemma candidate_101: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero lf3)).
Lemma candidate_102: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n lf6)).
Lemma candidate_103: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero lf6)).
Lemma candidate_104: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n Nil)).
Lemma candidate_105: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_106: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_eq lf6 Nil) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_107: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lfeqb n n) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_108: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5)         (@eq bool (match n with | Succ _ => false | Zero => true end) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_109: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lfeqb n Zero) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_110: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lf5) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_111: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (true) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_112: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero (lfappend lf3 Nil))) lf5.
Lemma candidate_113: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero (lst_intersection lf3 Nil))) lf5.
Lemma candidate_114: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_115: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend lf3 (Cons Zero Nil))) lf5.
Lemma candidate_116: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero lf3)) lf5.
Lemma candidate_117: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_118: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero (lfappend lf3 Nil)) lf3)) lf5.
Lemma candidate_119: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection lf3 Nil)) lf3))   lf5.
Lemma candidate_120: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection x Nil)) lf3))   lf5.
Lemma candidate_121: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (lfappend lf3 (Cons Zero Nil)) lf3)) lf5.
Lemma candidate_122: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero lf3) lf3)) lf5.
Lemma candidate_123: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero Nil) lf3)) lf5.
Lemma candidate_124: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq lf3 x) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_125: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq lf6 x) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_126: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf6) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_127: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq x lf6) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_128: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x Nil) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_129: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq x Nil) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_130: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend lf3 (Cons Zero Nil))) lf5.
Lemma candidate_131: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lst_intersection x (Cons Zero Nil))) lf5.
Lemma candidate_132: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_eq x (lst_intersection x (Cons Zero Nil))) lf5.
Lemma candidate_133: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero (Cons Zero Nil))) lf5.
Lemma candidate_134: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero lf3)) lf5.
Lemma candidate_135: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_136: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 x).
Lemma candidate_137: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset x x).
Lemma candidate_138: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq x x).
Lemma candidate_139: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 Nil).
Lemma candidate_140: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq lf3 Nil).
Lemma candidate_141: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (true).
Lemma candidate_142: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n lf3).
Lemma candidate_143: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero lf3).
Lemma candidate_144: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n lf6).
Lemma candidate_145: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero lf6).
Lemma candidate_146: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n Nil).
Lemma candidate_147: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero Nil).
Lemma candidate_148: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_149: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_150: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_151: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero lf6).
Lemma candidate_152: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_153: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero Nil).
Lemma candidate_154: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x (lst_intersection x Nil)).
Lemma candidate_155: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x lf3).
Lemma candidate_156: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x lf3).
Lemma candidate_157: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq lf3 x).
Lemma candidate_158: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x Nil).
Lemma candidate_159: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x Nil).
Lemma candidate_160: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n lf3)).
Lemma candidate_161: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero lf3)).
Lemma candidate_162: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n lf6)).
Lemma candidate_163: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero lf6)).
Lemma candidate_164: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n Nil)).
Lemma candidate_165: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_166: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero (lfappend lf3 Nil)) lf3)) lf5.
Lemma candidate_167: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection lf3 Nil)) lf3))   lf5.
Lemma candidate_168: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection x Nil)) lf3))   lf5.
Lemma candidate_169: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lfappend lf3 (Cons Zero Nil)) lf3)) lf5.
Lemma candidate_170: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero lf3) lf3)) lf5.
Lemma candidate_171: forall (lf3 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero Nil) lf3)) lf5.
Lemma candidate_172: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   lf5.
Lemma candidate_173: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   lf5.
Lemma candidate_174: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   lf5.
Lemma candidate_175: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_176: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_177: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_178: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (lst_intersection lf3 x)) lf3)) lf5.
Lemma candidate_179: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (lfappend lf3 Nil)) lf3)) lf5.
Lemma candidate_180: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (lst_intersection lf3 Nil)) lf3))   lf5.
Lemma candidate_181: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (lst_intersection x Nil)) lf3)) lf5.
Lemma candidate_182: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (lf3)) lf3)) lf5.
Lemma candidate_183: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (Nil)) lf3)) lf5.
Lemma candidate_184: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_185: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_186: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons n lf3)).
Lemma candidate_187: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons Zero lf3)).
Lemma candidate_188: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons n Nil)).
Lemma candidate_189: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_190: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_191: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_192: forall (n : natural), @eq lst (Cons n Nil)   (if orb match n with | Succ _ => false | Zero => true end false then Cons Zero Nil else Nil).
Lemma candidate_193: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n Zero) false then Cons n Nil else Nil).
Lemma candidate_194: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_195: forall (n : natural), @eq lst (Cons n Nil) (Cons Zero Nil).
Lemma candidate_196: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (lfappend lf3 (Cons n Nil)).
Lemma candidate_197: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (lfappend lf3 (Cons Zero Nil)).
Lemma candidate_198: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons n lf3).
Lemma candidate_199: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons Zero lf3).
Lemma candidate_200: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons n Nil).
Lemma candidate_201: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons Zero Nil).
Lemma candidate_202: @eq lst Nil (Nil).
Lemma candidate_203: forall (x : lst), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   true.
Lemma candidate_204: forall (x : lst), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   true.
Lemma candidate_205: forall (x : lst), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   true.
Lemma candidate_206: forall (x : lst), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_207: forall (x : lst), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) true.
Lemma candidate_208: forall (x : lst), @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_209: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero (lfappend lf3 Nil)) lf3)) true.
Lemma candidate_210: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection lf3 Nil)) lf3))   true.
Lemma candidate_211: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection x Nil)) lf3))   true.
Lemma candidate_212: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (lfappend lf3 (Cons Zero Nil)) lf3)) true.
Lemma candidate_213: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero lf3) lf3)) true.
Lemma candidate_214: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero Nil) lf3)) true.
Lemma candidate_215: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (lst_subset lf6 Nil).
Lemma candidate_216: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (lst_eq lf6 Nil).
Lemma candidate_217: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (lfeqb n n).
Lemma candidate_218: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_219: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (lfeqb n Zero).
Lemma candidate_220: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) (true).
Lemma candidate_221: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n lf3).
Lemma candidate_222: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero lf3).
Lemma candidate_223: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n lf6).
Lemma candidate_224: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero lf6).
Lemma candidate_225: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons n Nil).
Lemma candidate_226: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (Cons n lf6) lf3) (Cons Zero Nil).
Lemma candidate_227: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_228: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_229: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_230: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero lf6).
Lemma candidate_231: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_232: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero Nil).
Lemma candidate_233: @eq bool true (true).
Lemma candidate_234: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n lf3)).
Lemma candidate_235: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero lf3)).
Lemma candidate_236: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n lf6)).
Lemma candidate_237: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero lf6)).
Lemma candidate_238: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons n Nil)).
Lemma candidate_239: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_240: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero (lfappend lf3 Nil)) lf3)) true.
Lemma candidate_241: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection lf3 Nil)) lf3))   true.
Lemma candidate_242: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero (lst_intersection x Nil)) lf3))   true.
Lemma candidate_243: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (lfappend lf3 (Cons Zero Nil)) lf3)) true.
Lemma candidate_244: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero lf3) lf3)) true.
Lemma candidate_245: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero Nil) lf3)) true.
Lemma candidate_246: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (lst_subset lf3 Nil).
Lemma candidate_247: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (lst_eq lf3 Nil).
Lemma candidate_248: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (lfeqb n n).
Lemma candidate_249: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_250: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (lfeqb n Zero).
Lemma candidate_251: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) (true).
Lemma candidate_252: forall (x : lst), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   true.
Lemma candidate_253: forall (x : lst), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   true.
Lemma candidate_254: forall (x : lst), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   true.
Lemma candidate_255: forall (x : lst), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_256: forall (x : lst), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) true.
Lemma candidate_257: forall (x : lst), @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_258: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (lst_intersection lf3 x)) lf3)) true.
Lemma candidate_259: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (lfappend lf3 Nil)) lf3)) true.
Lemma candidate_260: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (lst_intersection lf3 Nil)) lf3))   true.
Lemma candidate_261: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (lst_intersection x Nil)) lf3)) true.
Lemma candidate_262: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (lf3)) lf3)) true.
Lemma candidate_263: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (Nil)) lf3)) true.
Lemma candidate_264: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_265: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_266: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons n lf3)).
Lemma candidate_267: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons Zero lf3)).
Lemma candidate_268: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons n Nil)).
Lemma candidate_269: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_270: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_271: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_272: forall (n : natural), @eq lst (Cons n Nil)   (if orb match n with | Succ _ => false | Zero => true end false then Cons Zero Nil else Nil).
Lemma candidate_273: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n Zero) false then Cons n Nil else Nil).
Lemma candidate_274: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_275: forall (n : natural), @eq lst (Cons n Nil) (Cons Zero Nil).
Lemma candidate_276: @eq bool true (true).
Lemma candidate_277: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (lfappend lf3 (Cons n Nil)).
Lemma candidate_278: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (lfappend lf3 (Cons Zero Nil)).
Lemma candidate_279: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons n lf3).
Lemma candidate_280: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons Zero lf3).
Lemma candidate_281: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons n Nil).
Lemma candidate_282: forall (lf3 : lst) (n : natural), @eq lst (lfappend (Cons n Nil) lf3) (Cons Zero Nil).
Lemma candidate_283: @eq lst Nil (Nil).
Lemma candidate_284: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   lf5.
Lemma candidate_285: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   lf5.
Lemma candidate_286: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   lf5.
Lemma candidate_287: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_288: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_289: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_290: forall (lf4 : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend lf4 (lst_intersection x (lst_intersection lf4 Nil)))) lf5.
Lemma candidate_291: forall (lf4 : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend lf4 (lst_intersection lf4 (lst_intersection x Nil)))) lf5.
Lemma candidate_292: forall (lf4 : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x (lfappend lf4 (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_293: forall (lf4 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend lf4 (lst_intersection lf4 Nil))) lf5.
Lemma candidate_294: forall (lf4 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x Nil))) lf5.
Lemma candidate_295: forall (lf4 : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend lf4 (Nil))) lf5.
Lemma candidate_296: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y))   (Cons Zero (lst_intersection x Nil)).
Lemma candidate_297: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y))   (lst_intersection lf4 (Cons Zero Nil)).
Lemma candidate_298: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (lst_intersection lf4 lf4).
Lemma candidate_299: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (lfappend lf4 Nil).
Lemma candidate_300: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (Cons Zero Nil).
Lemma candidate_301: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (lf4).
Lemma candidate_302: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (Cons Zero Nil)).
Lemma candidate_303: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_304: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_305: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y Nil).
Lemma candidate_306: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x Nil).
Lemma candidate_307: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (Nil).
Lemma candidate_308: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x (lst_intersection lf4 x)).
Lemma candidate_309: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_eq x (lst_intersection lf4 x)).
Lemma candidate_310: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_eq lf4 (Cons Zero x)).
Lemma candidate_311: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x (lfappend lf4 Nil)).
Lemma candidate_312: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_313: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x lf4).
Lemma candidate_314: forall (x : lst), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   true.
Lemma candidate_315: forall (x : lst), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   true.
Lemma candidate_316: forall (x : lst), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   true.
Lemma candidate_317: forall (x : lst), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_318: forall (x : lst), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) true.
Lemma candidate_319: forall (x : lst), @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_320: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_eq lf4 lf4).
Lemma candidate_321: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_mem Zero lf4).
Lemma candidate_322: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x x).
Lemma candidate_323: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) (lst_eq x x).
Lemma candidate_324: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) (mem lf4 Zero).
Lemma candidate_325: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) (true).
Lemma candidate_326: forall (lf4 : lst) (x : lst), @eq bool   (lst_subset x      (lfappend lf4 (lst_intersection x (lst_intersection lf4 Nil)))) true.
Lemma candidate_327: forall (lf4 : lst) (x : lst), @eq bool   (lst_subset x      (lfappend lf4 (lst_intersection lf4 (lst_intersection x Nil)))) true.
Lemma candidate_328: forall (lf4 : lst) (x : lst), @eq bool   (lst_subset x (lfappend lf4 (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_329: forall (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection lf4 Nil))) true.
Lemma candidate_330: forall (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x Nil))) true.
Lemma candidate_331: forall (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (Nil))) true.
Lemma candidate_332: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y))   (Cons Zero (lst_intersection x Nil)).
Lemma candidate_333: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y))   (lst_intersection lf4 (Cons Zero Nil)).
Lemma candidate_334: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (lst_intersection lf4 lf4).
Lemma candidate_335: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (lfappend lf4 Nil).
Lemma candidate_336: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (Cons Zero Nil).
Lemma candidate_337: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lst_intersection x y)) (lf4).
Lemma candidate_338: @eq bool true (true).
Lemma candidate_339: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (Cons Zero Nil)).
Lemma candidate_340: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_341: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_342: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y Nil).
Lemma candidate_343: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x Nil).
Lemma candidate_344: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (Nil).
Lemma candidate_345: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x (lst_intersection lf4 x)).
Lemma candidate_346: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_eq x (lst_intersection lf4 x)).
Lemma candidate_347: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_eq lf4 (Cons Zero x)).
Lemma candidate_348: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x (lfappend lf4 Nil)).
Lemma candidate_349: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_350: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y)))   (lst_subset x lf4).
Lemma candidate_351: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y (Cons Zero Nil)))         (lst_intersection x y))) lf5.
Lemma candidate_352: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x y)) (lst_intersection x y)))   lf5.
Lemma candidate_353: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y x)) (lst_intersection x y)))   lf5.
Lemma candidate_354: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y Nil)) (lst_intersection x y)))   lf5.
Lemma candidate_355: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x Nil)) (lst_intersection x y)))   lf5.
Lemma candidate_356: forall (y : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero Nil) (lst_intersection x y))) lf5.
Lemma candidate_357: forall (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection lf6 lf6)))   lf5.
Lemma candidate_358: forall (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x Nil))) lf5.
Lemma candidate_359: forall (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lfappend lf6 Nil))) lf5.
Lemma candidate_360: forall (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection lf6 Nil)))   lf5.
Lemma candidate_361: forall (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lf6))) lf5.
Lemma candidate_362: forall (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (Nil))) lf5.
Lemma candidate_363: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   lf5.
Lemma candidate_364: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   lf5.
Lemma candidate_365: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   lf5.
Lemma candidate_366: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_367: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_368: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_369: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_370: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_371: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_372: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero lf6).
Lemma candidate_373: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_374: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero Nil).
Lemma candidate_375: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (Cons Zero Nil)).
Lemma candidate_376: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_377: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_378: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y Nil).
Lemma candidate_379: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x Nil).
Lemma candidate_380: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (Nil).
Lemma candidate_381: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_382: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_383: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons n lf6)).
Lemma candidate_384: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons Zero lf6)).
Lemma candidate_385: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_386: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_387: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y))   (lfappend lf6 (Cons n Nil)).
Lemma candidate_388: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y))   (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_389: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons n lf6).
Lemma candidate_390: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons Zero lf6).
Lemma candidate_391: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons n Nil).
Lemma candidate_392: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons Zero Nil).
Lemma candidate_393: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y (Cons Zero Nil)))         (lst_intersection x y))) lf5.
Lemma candidate_394: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x y)) (lst_intersection x y)))   lf5.
Lemma candidate_395: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y x)) (lst_intersection x y)))   lf5.
Lemma candidate_396: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y Nil)) (lst_intersection x y)))   lf5.
Lemma candidate_397: forall (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x Nil)) (lst_intersection x y)))   lf5.
Lemma candidate_398: forall (y : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons Zero Nil) (lst_intersection x y))) lf5.
Lemma candidate_399: forall (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lst_intersection (lfappend x Nil) Nil))) lf5.
Lemma candidate_400: forall (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lfappend (lst_intersection x Nil) Nil))) lf5.
Lemma candidate_401: forall (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lst_intersection (lst_intersection x Nil) Nil)))   lf5.
Lemma candidate_402: forall (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_403: forall (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x Nil))) lf5.
Lemma candidate_404: forall (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n Nil) (Nil))) lf5.
Lemma candidate_405: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection y (Cons Zero Nil)))         (lst_intersection x y))) lf5.
Lemma candidate_406: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection x y)) (lst_intersection x y))) lf5.
Lemma candidate_407: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection y x)) (lst_intersection x y))) lf5.
Lemma candidate_408: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection y Nil)) (lst_intersection x y))) lf5.
Lemma candidate_409: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection x Nil)) (lst_intersection x y))) lf5.
Lemma candidate_410: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (Cons n (Nil)) (lst_intersection x y))) lf5.
Lemma candidate_411: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   lf5.
Lemma candidate_412: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   lf5.
Lemma candidate_413: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   lf5.
Lemma candidate_414: forall (x : lst) (lf5 : bool), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   lf5.
Lemma candidate_415: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) lf5.
Lemma candidate_416: forall (x : lst) (lf5 : bool), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_417: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_418: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_419: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_420: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_421: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_422: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_423: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_424: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_425: forall (n : natural), @eq lst (Cons n Nil)   (if orb match n with | Succ _ => false | Zero => true end false then Cons Zero Nil else Nil).
Lemma candidate_426: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n Zero) false then Cons n Nil else Nil).
Lemma candidate_427: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_428: forall (n : natural), @eq lst (Cons n Nil) (Cons Zero Nil).
Lemma candidate_429: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (Cons Zero Nil)).
Lemma candidate_430: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_431: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_432: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y Nil).
Lemma candidate_433: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x Nil).
Lemma candidate_434: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (Nil).
Lemma candidate_435: @eq lst Nil (Nil).
Lemma candidate_436: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons n (lst_intersection y Nil)).
Lemma candidate_437: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons Zero (lst_intersection y Nil)).
Lemma candidate_438: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons n (lst_intersection x Nil)).
Lemma candidate_439: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons Zero (lst_intersection x Nil)).
Lemma candidate_440: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y)) (Cons n Nil).
Lemma candidate_441: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y)) (Cons Zero Nil).
Lemma candidate_442: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y (Cons Zero Nil)))         (lst_intersection x y))) true.
Lemma candidate_443: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x y)) (lst_intersection x y)))   true.
Lemma candidate_444: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y x)) (lst_intersection x y)))   true.
Lemma candidate_445: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y Nil)) (lst_intersection x y)))   true.
Lemma candidate_446: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x Nil)) (lst_intersection x y)))   true.
Lemma candidate_447: forall (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero Nil) (lst_intersection x y)))   true.
Lemma candidate_448: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset lf6 Nil).
Lemma candidate_449: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_eq lf6 Nil).
Lemma candidate_450: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lfeqb n n).
Lemma candidate_451: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_452: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lfeqb n Zero).
Lemma candidate_453: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) (true).
Lemma candidate_454: forall (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection lf6 lf6)))   true.
Lemma candidate_455: forall (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x Nil))) true.
Lemma candidate_456: forall (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lfappend lf6 Nil))) true.
Lemma candidate_457: forall (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection lf6 Nil)))   true.
Lemma candidate_458: forall (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lf6))) true.
Lemma candidate_459: forall (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (Nil))) true.
Lemma candidate_460: forall (x : lst), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   true.
Lemma candidate_461: forall (x : lst), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   true.
Lemma candidate_462: forall (x : lst), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   true.
Lemma candidate_463: forall (x : lst), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_464: forall (x : lst), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) true.
Lemma candidate_465: forall (x : lst), @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_466: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_467: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_468: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_469: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero lf6).
Lemma candidate_470: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_471: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons Zero Nil).
Lemma candidate_472: @eq bool true (true).
Lemma candidate_473: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (Cons Zero Nil)).
Lemma candidate_474: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_475: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_476: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y Nil).
Lemma candidate_477: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x Nil).
Lemma candidate_478: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (Nil).
Lemma candidate_479: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_480: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_481: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons n lf6)).
Lemma candidate_482: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons Zero lf6)).
Lemma candidate_483: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_484: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_485: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y))   (lfappend lf6 (Cons n Nil)).
Lemma candidate_486: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y))   (lfappend lf6 (Cons Zero Nil)).
Lemma candidate_487: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons n lf6).
Lemma candidate_488: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons Zero lf6).
Lemma candidate_489: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons n Nil).
Lemma candidate_490: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) (lst_intersection x y)) (Cons Zero Nil).
Lemma candidate_491: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y (Cons Zero Nil)))         (lst_intersection x y))) true.
Lemma candidate_492: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x y)) (lst_intersection x y)))   true.
Lemma candidate_493: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y x)) (lst_intersection x y)))   true.
Lemma candidate_494: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection y Nil)) (lst_intersection x y)))   true.
Lemma candidate_495: forall (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons Zero (lst_intersection x Nil)) (lst_intersection x y)))   true.
Lemma candidate_496: forall (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons Zero Nil) (lst_intersection x y)))   true.
Lemma candidate_497: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x x).
Lemma candidate_498: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_eq x x).
Lemma candidate_499: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lfeqb n n).
Lemma candidate_500: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_501: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lfeqb n Zero).
Lemma candidate_502: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) (true).
Lemma candidate_503: forall (n : natural) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lst_intersection (lfappend x Nil) Nil))) true.
Lemma candidate_504: forall (n : natural) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lfappend (lst_intersection x Nil) Nil))) true.
Lemma candidate_505: forall (n : natural) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lst_intersection (lst_intersection x Nil) Nil)))   true.
Lemma candidate_506: forall (n : natural) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n Nil) (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_507: forall (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x Nil))) true.
Lemma candidate_508: forall (n : natural) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (Nil))) true.
Lemma candidate_509: forall (n : natural) (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection y (Cons Zero Nil)))         (lst_intersection x y))) true.
Lemma candidate_510: forall (n : natural) (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection x y)) (lst_intersection x y))) true.
Lemma candidate_511: forall (n : natural) (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection y x)) (lst_intersection x y))) true.
Lemma candidate_512: forall (n : natural) (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection y Nil)) (lst_intersection x y)))   true.
Lemma candidate_513: forall (n : natural) (y : lst) (x : lst), @eq bool   (lst_subset x      (lfappend (Cons n (lst_intersection x Nil)) (lst_intersection x y)))   true.
Lemma candidate_514: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n (Nil)) (lst_intersection x y))) true.
Lemma candidate_515: forall (x : lst), @eq bool   (lst_subset x      (lfappend (lst_intersection x Nil) (Cons Zero (lst_intersection x Nil))))   true.
Lemma candidate_516: forall (x : lst), @eq bool   (lst_subset x      (if lst_mem Zero (lfappend x (Cons Zero Nil)) then Cons Zero Nil else Nil))   true.
Lemma candidate_517: forall (x : lst), @eq bool (lst_subset x (lfappend (lst_intersection x Nil) (Cons Zero Nil)))   true.
Lemma candidate_518: forall (x : lst), @eq bool   (lst_subset x (Cons Zero (lst_intersection x (lst_intersection x Nil))))   true.
Lemma candidate_519: forall (x : lst), @eq bool (lst_subset x (Cons Zero (lst_intersection x Nil))) true.
Lemma candidate_520: forall (x : lst), @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_521: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_522: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_523: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_524: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_525: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_526: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_527: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_528: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_529: forall (n : natural), @eq lst (Cons n Nil)   (if orb match n with | Succ _ => false | Zero => true end false then Cons Zero Nil else Nil).
Lemma candidate_530: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n Zero) false then Cons n Nil else Nil).
Lemma candidate_531: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_532: forall (n : natural), @eq lst (Cons n Nil) (Cons Zero Nil).
Lemma candidate_533: @eq bool true (true).
Lemma candidate_534: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (Cons Zero Nil)).
Lemma candidate_535: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_536: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_537: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y Nil).
Lemma candidate_538: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x Nil).
Lemma candidate_539: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (Nil).
Lemma candidate_540: @eq lst Nil (Nil).
Lemma candidate_541: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons n (lst_intersection y Nil)).
Lemma candidate_542: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons Zero (lst_intersection y Nil)).
Lemma candidate_543: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons n (lst_intersection x Nil)).
Lemma candidate_544: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y))   (Cons Zero (lst_intersection x Nil)).
Lemma candidate_545: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y)) (Cons n Nil).
Lemma candidate_546: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (Cons n Nil) (lst_intersection x y)) (Cons Zero Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 2339 seconds
Duplicates removed: 259
Filtered by Quickchick: 252
Filtered by script: 10
Remaining: 25

Lemmas: 
Lemma candidate_158: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x Nil).
Lemma candidate_17: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_14: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 lf2)).
Lemma candidate_15: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lst_intersection lf2 lf2)).
Lemma candidate_191: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_2: forall (lf3 : lst) (lf4 : lst) (x : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (lfappend lf4 lf3)) true.
Lemma candidate_419: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_5: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) true.
Lemma candidate_4: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) true.
Lemma candidate_111: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (true) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_117: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (Cons Zero Nil)) lf5.
Lemma candidate_7: forall (y : lst) (lf4 : lst) (x : lst), forall _ : @eq bool (lst_subset x (lst_intersection x y)) true, @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) true.
Lemma candidate_107: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lfeqb n n) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_127: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq x lf6) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_126: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf6) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) lf3)) lf5.
Lemma candidate_3: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons n Nil) lf3)) lf5.
Lemma candidate_123: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero Nil) lf3)) lf5.
Lemma candidate_132: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_eq x (lst_intersection x (Cons Zero Nil))) lf5.
Lemma candidate_131: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lst_intersection x (Cons Zero Nil))) lf5.
Lemma candidate_118: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x (lfappend (Cons Zero (lfappend lf3 Nil)) lf3)) lf5.
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst), forall   _ : and (@eq bool (lst_mem n y) true)         (@eq bool (lst_subset x (lst_intersection x y)) true), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true.
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), forall   _ : and (@eq bool (lst_mem n y) true)         (@eq bool (lst_subset x (lst_intersection x y)) true), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) true.
Lemma candidate_6: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset x (lfappend lf4 (lst_intersection x y))) lf5.
Lemma candidate_9: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) lf5.
Lemma candidate_8: forall (n : natural) (y : lst) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset x (lfappend (Cons n lf6) (lst_intersection x y))) lf5.
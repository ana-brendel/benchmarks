File Information
- File name: goal9
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal9_drop_assoc_46_drop_Nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal9_drop_assoc_46_drop_Nil
- Namespace: adtind
- Proof name: drop_assoc
- Theorem: Theorem drop_assoc: forall (x0 y0 : natural) (z : lst),
@eq lst (drop x0 (drop y0 z)) (drop y0 (drop x0 z)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop x (drop y Nil)) (drop y (drop x Nil))

* Hypothesis:
x : natural
y : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
@eq lst (drop x (drop y Nil)) (drop y (drop x Nil)) : Prop
x : natural
drop x (drop y Nil) : lst
y : natural
drop y (drop x Nil) : lst
lst : Set
drop y Nil : lst
natural : Set
drop x Nil : lst
Nil : lst

* Functions:
drop  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = drop y Nil
lf1 : lst = drop x (drop y Nil)
lf4 : lst = drop x Nil
lf5 : lst = Nil
lf2 : lst = drop y (drop x Nil)

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : natural), @eq lst lf1 (drop y lf4).
Lemma conj6: forall (lf5 : lst) (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x lf5)).
Lemma conj8: forall (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x Nil)).
Lemma conj9: forall (lf2 : lst) (x : natural) (lf3 : lst), @eq lst (drop x lf3) lf2.
Lemma conj10: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj14: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj16: forall (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x Nil)).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y lf5)) lf2.
Lemma conj26: forall (lf5 : lst) (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y lf5)) (drop y lf4).
Lemma conj27: forall (lf2 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y Nil)) lf2.
Lemma conj28: forall (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y Nil)) (drop y lf4).
Lemma conj30: forall (lf5 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma conj32: forall (x : natural) (y : natural), @eq lst (drop x (drop y Nil)) (drop y (drop x Nil)).


<---VALIDITY CHECKS--->
Time elapsed: 32 seconds
Valid:
Lemma conj32: forall (x : natural) (y : natural), @eq lst (drop x (drop y Nil)) (drop y (drop x Nil)).
Lemma conj30: forall (lf5 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).

Invalid:
Lemma conj28: forall (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y Nil)) (drop y lf4).
Lemma conj27: forall (lf2 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y Nil)) lf2.
Lemma conj26: forall (lf5 : lst) (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y lf5)) (drop y lf4).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y lf5)) lf2.
Lemma conj16: forall (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x Nil)).
Lemma conj14: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj10: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj9: forall (lf2 : lst) (x : natural) (lf3 : lst), @eq lst (drop x lf3) lf2.
Lemma conj8: forall (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x Nil)).
Lemma conj6: forall (lf5 : lst) (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x lf5)).
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : natural), @eq lst lf1 (drop y lf4).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 32 seconds
Generalizations:
Lemma conj28: forall (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y Nil)) (drop y lf4).
Lemma conj27: forall (lf2 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y Nil)) lf2.
Lemma conj26: forall (lf5 : lst) (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y lf5)) (drop y lf4).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y lf5)) lf2.
Lemma conj16: forall (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x Nil)).
Lemma conj14: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj10: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj9: forall (lf2 : lst) (x : natural) (lf3 : lst), @eq lst (drop x lf3) lf2.
Lemma conj8: forall (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x Nil)).
Lemma conj6: forall (lf5 : lst) (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x lf5)).
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : natural), @eq lst lf1 (drop y lf4).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 55 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : natural), @eq lst lf1 (drop y lf4).
Lemma conj6: forall (lf5 : lst) (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x lf5)).
Lemma conj8: forall (x : natural) (lf1 : lst) (y : natural), @eq lst lf1 (drop y (drop x Nil)).
Lemma conj9: forall (lf2 : lst) (x : natural) (lf3 : lst), @eq lst (drop x lf3) lf2.
Lemma conj10: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj14: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj16: forall (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x Nil)).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y lf5)) lf2.
Lemma conj26: forall (lf5 : lst) (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y lf5)) (drop y lf4).
Lemma conj27: forall (lf2 : lst) (x : natural) (y : natural), @eq lst (drop x (drop y Nil)) lf2.
Lemma conj28: forall (x : natural) (lf4 : lst) (y : natural), @eq lst (drop x (drop y Nil)) (drop y lf4).


<---CREATE SKETCHES--->
Time elapsed: 55 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj6_sketch0 : @eq lst lf1 (##hole##)
Sketch conj6_sketch1 : @eq lst lf1 (drop y (##hole##))
Sketch conj6_term_sketch0 : @eq lst (drop y (drop x lf5)) (##hole##)
Sketch conj6_term_sketch1 : @eq lst (drop x lf5) (##hole##)
Sketch conj8_sketch0 : @eq lst lf1 (##hole##)
Sketch conj8_sketch1 : @eq lst lf1 (drop y (##hole##))
Sketch conj8_sketch2 : @eq lst lf1 (drop y (drop x (##hole##)))
Sketch conj8_term_sketch0 : @eq lst (drop y (drop x Nil)) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (drop x Nil) (##hole##)
Sketch conj8_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj9_sketch0 : @eq lst (##hole##) lf2
Sketch conj9_term_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj10_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj10_sketch1 : @eq lst (##hole##) (drop y lf4)
Sketch conj10_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj10_term_sketch1 : @eq lst (drop x lf3) (##hole##)
Sketch conj14_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj14_sketch1 : @eq lst (drop x lf3) (drop y (##hole##))
Sketch conj14_sketch2 : @eq lst (##hole##) (drop y (drop x lf5))
Sketch conj14_term_sketch0 : @eq lst (drop y (drop x lf5)) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (drop x lf5) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (drop x lf3) (##hole##)
Sketch conj16_sketch0 : @eq lst (##hole##) (drop y (drop x Nil))
Sketch conj16_sketch1 : @eq lst (drop x lf3) (##hole##)
Sketch conj16_sketch2 : @eq lst (drop x lf3) (drop y (##hole##))
Sketch conj16_sketch3 : @eq lst (drop x lf3) (drop y (drop x (##hole##)))
Sketch conj16_term_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj16_term_sketch1 : @eq lst (drop y (drop x Nil)) (##hole##)
Sketch conj16_term_sketch2 : @eq lst (drop x Nil) (##hole##)
Sketch conj16_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj25_sketch0 : @eq lst (##hole##) lf2
Sketch conj25_sketch1 : @eq lst (drop x (##hole##)) lf2
Sketch conj25_term_sketch0 : @eq lst (drop x (drop y lf5)) (##hole##)
Sketch conj25_term_sketch1 : @eq lst (drop y lf5) (##hole##)
Sketch conj26_sketch0 : @eq lst (drop x (drop y lf5)) (##hole##)
Sketch conj26_sketch1 : @eq lst (##hole##) (drop y lf4)
Sketch conj26_sketch2 : @eq lst (drop x (##hole##)) (drop y lf4)
Sketch conj26_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj26_term_sketch1 : @eq lst (drop x (drop y lf5)) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (drop y lf5) (##hole##)
Sketch conj27_sketch0 : @eq lst (##hole##) lf2
Sketch conj27_sketch1 : @eq lst (drop x (##hole##)) lf2
Sketch conj27_sketch2 : @eq lst (drop x (drop y (##hole##))) lf2
Sketch conj27_term_sketch0 : @eq lst (drop x (drop y Nil)) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (drop y Nil) (##hole##)
Sketch conj27_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj28_sketch0 : @eq lst (drop x (drop y Nil)) (##hole##)
Sketch conj28_sketch1 : @eq lst (##hole##) (drop y lf4)
Sketch conj28_sketch2 : @eq lst (drop x (##hole##)) (drop y lf4)
Sketch conj28_sketch3 : @eq lst (drop x (drop y (##hole##))) (drop y lf4)
Sketch conj28_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (drop x (drop y Nil)) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (drop y Nil) (##hole##)
Sketch conj28_term_sketch3 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 111 seconds
Problems per Sketch:
Sketch conj28_sketch0 --> Problem  synth_7
Sketch conj26_term_sketch1 --> Problem  synth_4
Sketch conj16_sketch3 --> Problem  synth_12
Sketch conj14_sketch2 --> Problem  synth_4
Sketch conj27_term_sketch1 --> Problem  synth_17
Sketch conj26_sketch2 --> Problem  synth_15
Sketch conj25_sketch1 --> Problem  synth_13
Sketch conj16_sketch2 --> Problem  synth_12
Sketch conj10_term_sketch1 --> Problem  synth_11
Sketch conj16_term_sketch1 --> Problem  synth_7
Sketch conj14_term_sketch2 --> Problem  synth_11
Sketch conj25_term_sketch1 --> Problem  synth_14
Sketch conj8_sketch1 --> Problem  synth_3
Sketch conj26_sketch0 --> Problem  synth_4
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj28_term_sketch1 --> Problem  synth_7
Sketch conj9_sketch0 --> Problem  synth_10
Sketch conj8_sketch2 --> Problem  synth_6
Sketch conj26_term_sketch2 --> Problem  synth_14
Sketch conj14_term_sketch1 --> Problem  synth_5
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj26_sketch1 --> Problem  synth_2
Sketch conj28_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch1 --> Problem  synth_2
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj9_term_sketch0 --> Problem  synth_11
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_9
Sketch conj27_sketch0 --> Problem  synth_10
Sketch conj16_sketch1 --> Problem  synth_11
Sketch conj27_term_sketch2 --> Problem  synth_9
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj28_sketch2 --> Problem  synth_15
Sketch conj28_sketch3 --> Problem  synth_15
Sketch conj25_sketch0 --> Problem  synth_10
Sketch conj26_term_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch2 --> Problem  synth_8
Sketch conj28_sketch1 --> Problem  synth_2
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj27_sketch2 --> Problem  synth_16
Sketch conj28_term_sketch2 --> Problem  synth_17
Sketch conj16_sketch0 --> Problem  synth_7
Sketch conj14_sketch0 --> Problem  synth_11
Sketch conj27_sketch1 --> Problem  synth_13
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch0 --> Problem  synth_11
Sketch conj8_sketch0 --> Problem  synth_1
Sketch conj16_term_sketch3 --> Problem  synth_9
Sketch conj27_term_sketch0 --> Problem  synth_7
Sketch conj25_term_sketch0 --> Problem  synth_4
Sketch conj10_sketch0 --> Problem  synth_11
Sketch conj8_term_sketch2 --> Problem  synth_9
Sketch conj14_sketch1 --> Problem  synth_12


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 128 seconds

Problem: synth_17
 match drop y Nil with | Cons _ z => drop y z | Nil => Nil end
 match drop y Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop y (drop y Nil)
 match drop y Nil with | Cons _ _ => drop y Nil | Nil => Nil end
 drop y Nil
 Nil

Problem: synth_9
 Nil

Problem: synth_13
 match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop x lf2
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 drop x Nil
 lf2
 Nil

Problem: synth_6
 drop x lf1
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 drop y Nil
 drop x Nil
 lf1
 Nil

Problem: synth_11
 match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop x lf3
 match lf3 with | Cons _ _ => lf3 | Nil => Nil end
 drop x Nil
 lf3
 Nil

Problem: synth_7
 drop y (drop x Nil)
 drop x (drop x Nil)
 match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end
 drop y Nil
 drop x Nil
 Nil

Problem: synth_4
 drop x lf5
 match lf5 with | Cons _ _ => lf5 | Nil => Nil end
 drop y Nil
 drop x Nil
 lf5
 Nil

Problem: synth_1
 match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end
 match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 lf1
 Nil

Problem: synth_16
 drop x lf2
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 drop y Nil
 drop x Nil
 lf2
 Nil

Problem: synth_15
 drop x lf4
 match lf4 with | Cons _ _ => lf4 | Nil => Nil end
 drop y Nil
 drop x Nil
 lf4
 Nil

Problem: synth_14
 match lf5 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop y lf5
 match lf5 with | Cons _ _ => lf5 | Nil => Nil end
 drop y Nil
 lf5
 Nil

Problem: synth_10
 match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end
 match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 lf2
 Nil

Problem: synth_8
 match drop x Nil with | Cons _ z => drop x z | Nil => Nil end
 match drop x Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop x (drop x Nil)
 match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end
 drop x Nil
 Nil

Problem: synth_3
 match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop y lf1
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 drop y Nil
 lf1
 Nil

Problem: synth_12
 drop x lf3
 match lf3 with | Cons _ _ => lf3 | Nil => Nil end
 drop y Nil
 drop x Nil
 lf3
 Nil

Problem: synth_5
 match lf5 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop x lf5
 match lf5 with | Cons _ _ => lf5 | Nil => Nil end
 drop x Nil
 lf5
 Nil

Problem: synth_2
 match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 drop y lf4
 match lf4 with | Cons _ _ => lf4 | Nil => Nil end
 drop y Nil
 lf4
 Nil

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 128 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y (drop x Nil)).
Lemma candidate_2: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (Nil).
Lemma candidate_9: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_10: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_11: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_12: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y Nil).
Lemma candidate_13: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (lf4).
Lemma candidate_14: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (Nil).
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_20: forall (lf1 : lst), @eq lst lf1 (Nil).
Lemma candidate_21: forall (y : natural) (lf1 : lst), @eq lst lf1   (drop y (match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_22: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (drop y lf1)).
Lemma candidate_23: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (match lf1 with | Cons _ _ => lf1 | Nil => Nil end)).
Lemma candidate_24: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (drop y Nil)).
Lemma candidate_25: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (lf1)).
Lemma candidate_26: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (Nil)).
Lemma candidate_27: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x lf5).
Lemma candidate_28: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_29: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y Nil).
Lemma candidate_30: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x Nil).
Lemma candidate_31: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (lf5).
Lemma candidate_32: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (Nil).
Lemma candidate_33: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match lf5 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_34: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x lf5).
Lemma candidate_35: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_36: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x Nil).
Lemma candidate_37: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (lf5).
Lemma candidate_38: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (Nil).
Lemma candidate_39: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_40: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_41: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_42: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_43: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_44: forall (lf1 : lst), @eq lst lf1 (Nil).
Lemma candidate_45: forall (y : natural) (lf1 : lst), @eq lst lf1   (drop y (match lf1 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_46: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (drop y lf1)).
Lemma candidate_47: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (match lf1 with | Cons _ _ => lf1 | Nil => Nil end)).
Lemma candidate_48: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (drop y Nil)).
Lemma candidate_49: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (lf1)).
Lemma candidate_50: forall (y : natural) (lf1 : lst), @eq lst lf1 (drop y (Nil)).
Lemma candidate_51: forall (y : natural) (lf1 : lst) (x : natural), @eq lst lf1 (drop y (drop x (drop x lf1))).
Lemma candidate_52: forall (y : natural) (lf1 : lst) (x : natural), @eq lst lf1   (drop y (drop x (match lf1 with | Cons _ _ => lf1 | Nil => Nil end))).
Lemma candidate_53: forall (y : natural) (lf1 : lst) (x : natural), @eq lst lf1 (drop y (drop x (drop y Nil))).
Lemma candidate_54: forall (y : natural) (lf1 : lst) (x : natural), @eq lst lf1 (drop y (drop x (drop x Nil))).
Lemma candidate_55: forall (y : natural) (lf1 : lst) (x : natural), @eq lst lf1 (drop y (drop x (lf1))).
Lemma candidate_56: forall (y : natural) (lf1 : lst) (x : natural), @eq lst lf1 (drop y (drop x (Nil))).
Lemma candidate_57: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop y (drop x Nil)).
Lemma candidate_58: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop x (drop x Nil)).
Lemma candidate_59: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_60: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop y Nil).
Lemma candidate_61: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop x Nil).
Lemma candidate_62: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (Nil).
Lemma candidate_63: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_64: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_65: forall (x : natural), @eq lst (drop x Nil) (drop x (drop x Nil)).
Lemma candidate_66: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_67: forall (x : natural), @eq lst (drop x Nil) (drop x Nil).
Lemma candidate_68: forall (x : natural), @eq lst (drop x Nil) (Nil).
Lemma candidate_69: @eq lst Nil (Nil).
Lemma candidate_70: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)   lf2.
Lemma candidate_71: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_72: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end) lf2.
Lemma candidate_73: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_74: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_75: forall (lf2 : lst), @eq lst (Nil) lf2.
Lemma candidate_76: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_77: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_78: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_79: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_80: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_81: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_82: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_83: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_84: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_85: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_86: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_87: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_88: forall (y : natural) (lf4 : lst), @eq lst (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)   (drop y lf4).
Lemma candidate_89: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_90: forall (y : natural) (lf4 : lst), @eq lst (match lf4 with | Cons _ _ => lf4 | Nil => Nil end) (drop y lf4).
Lemma candidate_91: forall (y : natural) (lf4 : lst), @eq lst (drop y Nil) (drop y lf4).
Lemma candidate_92: forall (y : natural) (lf4 : lst), @eq lst (lf4) (drop y lf4).
Lemma candidate_93: forall (y : natural) (lf4 : lst), @eq lst (Nil) (drop y lf4).
Lemma candidate_94: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_95: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_96: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_97: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y Nil).
Lemma candidate_98: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (lf4).
Lemma candidate_99: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (Nil).
Lemma candidate_100: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_101: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_102: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_103: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_104: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_105: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_106: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_107: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_108: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_109: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_110: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_111: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_112: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x lf3)).
Lemma candidate_113: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3)   (drop y (match lf3 with | Cons _ _ => lf3 | Nil => Nil end)).
Lemma candidate_114: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop y Nil)).
Lemma candidate_115: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x Nil)).
Lemma candidate_116: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (lf3)).
Lemma candidate_117: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (Nil)).
Lemma candidate_118: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop y (drop x lf5)).
Lemma candidate_119: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_120: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y Nil) (drop y (drop x lf5)).
Lemma candidate_121: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x Nil) (drop y (drop x lf5)).
Lemma candidate_122: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (lf5) (drop y (drop x lf5)).
Lemma candidate_123: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (Nil) (drop y (drop x lf5)).
Lemma candidate_124: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x lf5).
Lemma candidate_125: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_126: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y Nil).
Lemma candidate_127: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x Nil).
Lemma candidate_128: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (lf5).
Lemma candidate_129: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (Nil).
Lemma candidate_130: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match lf5 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_131: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x lf5).
Lemma candidate_132: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_133: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x Nil).
Lemma candidate_134: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (lf5).
Lemma candidate_135: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (Nil).
Lemma candidate_136: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_137: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_138: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_139: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_140: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_141: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_142: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop y (drop x Nil)).
Lemma candidate_143: forall (y : natural) (x : natural), @eq lst (drop x (drop x Nil)) (drop y (drop x Nil)).
Lemma candidate_144: forall (y : natural) (x : natural), @eq lst (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end)   (drop y (drop x Nil)).
Lemma candidate_145: forall (y : natural) (x : natural), @eq lst (drop y Nil) (drop y (drop x Nil)).
Lemma candidate_146: forall (y : natural) (x : natural), @eq lst (drop x Nil) (drop y (drop x Nil)).
Lemma candidate_147: forall (y : natural) (x : natural), @eq lst (Nil) (drop y (drop x Nil)).
Lemma candidate_148: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_149: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_150: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_151: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_152: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_153: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_154: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x lf3)).
Lemma candidate_155: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3)   (drop y (match lf3 with | Cons _ _ => lf3 | Nil => Nil end)).
Lemma candidate_156: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop y Nil)).
Lemma candidate_157: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x Nil)).
Lemma candidate_158: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (lf3)).
Lemma candidate_159: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (Nil)).
Lemma candidate_160: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x (drop x lf3))).
Lemma candidate_161: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3)   (drop y (drop x (match lf3 with | Cons _ _ => lf3 | Nil => Nil end))).
Lemma candidate_162: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x (drop y Nil))).
Lemma candidate_163: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x (drop x Nil))).
Lemma candidate_164: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x (lf3))).
Lemma candidate_165: forall (lf3 : lst) (y : natural) (x : natural), @eq lst (drop x lf3) (drop y (drop x (Nil))).
Lemma candidate_166: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_167: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_168: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_169: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x Nil).
Lemma candidate_170: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (lf3).
Lemma candidate_171: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (Nil).
Lemma candidate_172: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop y (drop x Nil)).
Lemma candidate_173: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop x (drop x Nil)).
Lemma candidate_174: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_175: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop y Nil).
Lemma candidate_176: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop x Nil).
Lemma candidate_177: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (Nil).
Lemma candidate_178: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_179: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_180: forall (x : natural), @eq lst (drop x Nil) (drop x (drop x Nil)).
Lemma candidate_181: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_182: forall (x : natural), @eq lst (drop x Nil) (drop x Nil).
Lemma candidate_183: forall (x : natural), @eq lst (drop x Nil) (Nil).
Lemma candidate_184: @eq lst Nil (Nil).
Lemma candidate_185: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)   lf2.
Lemma candidate_186: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_187: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end) lf2.
Lemma candidate_188: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_189: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_190: forall (lf2 : lst), @eq lst (Nil) lf2.
Lemma candidate_191: forall (x : natural) (lf2 : lst), @eq lst   (drop x (match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)) lf2.
Lemma candidate_192: forall (x : natural) (lf2 : lst), @eq lst (drop x (drop x lf2)) lf2.
Lemma candidate_193: forall (x : natural) (lf2 : lst), @eq lst (drop x (match lf2 with | Cons _ _ => lf2 | Nil => Nil end)) lf2.
Lemma candidate_194: forall (x : natural) (lf2 : lst), @eq lst (drop x (drop x Nil)) lf2.
Lemma candidate_195: forall (x : natural) (lf2 : lst), @eq lst (drop x (lf2)) lf2.
Lemma candidate_196: forall (x : natural) (lf2 : lst), @eq lst (drop x (Nil)) lf2.
Lemma candidate_197: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop x lf5).
Lemma candidate_198: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5))   (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_199: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y Nil).
Lemma candidate_200: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop x Nil).
Lemma candidate_201: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (lf5).
Lemma candidate_202: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (Nil).
Lemma candidate_203: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5)   (match lf5 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_204: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (drop y lf5).
Lemma candidate_205: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_206: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (drop y Nil).
Lemma candidate_207: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (lf5).
Lemma candidate_208: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (Nil).
Lemma candidate_209: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop x lf5).
Lemma candidate_210: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5))   (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_211: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y Nil).
Lemma candidate_212: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop x Nil).
Lemma candidate_213: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (lf5).
Lemma candidate_214: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (Nil).
Lemma candidate_215: forall (y : natural) (lf4 : lst), @eq lst (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)   (drop y lf4).
Lemma candidate_216: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_217: forall (y : natural) (lf4 : lst), @eq lst (match lf4 with | Cons _ _ => lf4 | Nil => Nil end) (drop y lf4).
Lemma candidate_218: forall (y : natural) (lf4 : lst), @eq lst (drop y Nil) (drop y lf4).
Lemma candidate_219: forall (y : natural) (lf4 : lst), @eq lst (lf4) (drop y lf4).
Lemma candidate_220: forall (y : natural) (lf4 : lst), @eq lst (Nil) (drop y lf4).
Lemma candidate_221: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop x lf4)) (drop y lf4).
Lemma candidate_222: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (match lf4 with | Cons _ _ => lf4 | Nil => Nil end))   (drop y lf4).
Lemma candidate_223: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y Nil)) (drop y lf4).
Lemma candidate_224: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop x Nil)) (drop y lf4).
Lemma candidate_225: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (lf4)) (drop y lf4).
Lemma candidate_226: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (Nil)) (drop y lf4).
Lemma candidate_227: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_228: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_229: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_230: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y Nil).
Lemma candidate_231: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (lf4).
Lemma candidate_232: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (Nil).
Lemma candidate_233: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop x lf5).
Lemma candidate_234: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5))   (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_235: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y Nil).
Lemma candidate_236: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop x Nil).
Lemma candidate_237: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (lf5).
Lemma candidate_238: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (Nil).
Lemma candidate_239: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5)   (match lf5 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_240: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (drop y lf5).
Lemma candidate_241: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_242: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (drop y Nil).
Lemma candidate_243: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (lf5).
Lemma candidate_244: forall (y : natural) (lf5 : lst), @eq lst (drop y lf5) (Nil).
Lemma candidate_245: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)   lf2.
Lemma candidate_246: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_247: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end) lf2.
Lemma candidate_248: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_249: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_250: forall (lf2 : lst), @eq lst (Nil) lf2.
Lemma candidate_251: forall (x : natural) (lf2 : lst), @eq lst   (drop x (match lf2 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)) lf2.
Lemma candidate_252: forall (x : natural) (lf2 : lst), @eq lst (drop x (drop x lf2)) lf2.
Lemma candidate_253: forall (x : natural) (lf2 : lst), @eq lst (drop x (match lf2 with | Cons _ _ => lf2 | Nil => Nil end)) lf2.
Lemma candidate_254: forall (x : natural) (lf2 : lst), @eq lst (drop x (drop x Nil)) lf2.
Lemma candidate_255: forall (x : natural) (lf2 : lst), @eq lst (drop x (lf2)) lf2.
Lemma candidate_256: forall (x : natural) (lf2 : lst), @eq lst (drop x (Nil)) lf2.
Lemma candidate_257: forall (y : natural) (x : natural) (lf2 : lst), @eq lst (drop x (drop y (drop x lf2))) lf2.
Lemma candidate_258: forall (y : natural) (x : natural) (lf2 : lst), @eq lst (drop x (drop y (match lf2 with | Cons _ _ => lf2 | Nil => Nil end)))   lf2.
Lemma candidate_259: forall (y : natural) (x : natural) (lf2 : lst), @eq lst (drop x (drop y (drop y Nil))) lf2.
Lemma candidate_260: forall (y : natural) (x : natural) (lf2 : lst), @eq lst (drop x (drop y (drop x Nil))) lf2.
Lemma candidate_261: forall (y : natural) (x : natural) (lf2 : lst), @eq lst (drop x (drop y (lf2))) lf2.
Lemma candidate_262: forall (y : natural) (x : natural) (lf2 : lst), @eq lst (drop x (drop y (Nil))) lf2.
Lemma candidate_263: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y (drop x Nil)).
Lemma candidate_264: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x (drop x Nil)).
Lemma candidate_265: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_266: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y Nil).
Lemma candidate_267: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x Nil).
Lemma candidate_268: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (Nil).
Lemma candidate_269: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ z => drop y z | Nil => Nil end).
Lemma candidate_270: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_271: forall (y : natural), @eq lst (drop y Nil) (drop y (drop y Nil)).
Lemma candidate_272: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ _ => drop y Nil | Nil => Nil end).
Lemma candidate_273: forall (y : natural), @eq lst (drop y Nil) (drop y Nil).
Lemma candidate_274: forall (y : natural), @eq lst (drop y Nil) (Nil).
Lemma candidate_275: @eq lst Nil (Nil).
Lemma candidate_276: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y (drop x Nil)).
Lemma candidate_277: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x (drop x Nil)).
Lemma candidate_278: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_279: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y Nil).
Lemma candidate_280: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x Nil).
Lemma candidate_281: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (Nil).
Lemma candidate_282: forall (y : natural) (lf4 : lst), @eq lst (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)   (drop y lf4).
Lemma candidate_283: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_284: forall (y : natural) (lf4 : lst), @eq lst (match lf4 with | Cons _ _ => lf4 | Nil => Nil end) (drop y lf4).
Lemma candidate_285: forall (y : natural) (lf4 : lst), @eq lst (drop y Nil) (drop y lf4).
Lemma candidate_286: forall (y : natural) (lf4 : lst), @eq lst (lf4) (drop y lf4).
Lemma candidate_287: forall (y : natural) (lf4 : lst), @eq lst (Nil) (drop y lf4).
Lemma candidate_288: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop x lf4)) (drop y lf4).
Lemma candidate_289: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (match lf4 with | Cons _ _ => lf4 | Nil => Nil end))   (drop y lf4).
Lemma candidate_290: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y Nil)) (drop y lf4).
Lemma candidate_291: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop x Nil)) (drop y lf4).
Lemma candidate_292: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (lf4)) (drop y lf4).
Lemma candidate_293: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (Nil)) (drop y lf4).
Lemma candidate_294: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y (drop x lf4))) (drop y lf4).
Lemma candidate_295: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y (match lf4 with | Cons _ _ => lf4 | Nil => Nil end)))   (drop y lf4).
Lemma candidate_296: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y (drop y Nil))) (drop y lf4).
Lemma candidate_297: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y (drop x Nil))) (drop y lf4).
Lemma candidate_298: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y (lf4))) (drop y lf4).
Lemma candidate_299: forall (y : natural) (lf4 : lst) (x : natural), @eq lst (drop x (drop y (Nil))) (drop y lf4).
Lemma candidate_300: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_301: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_302: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_303: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y Nil).
Lemma candidate_304: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (lf4).
Lemma candidate_305: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (Nil).
Lemma candidate_306: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y (drop x Nil)).
Lemma candidate_307: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x (drop x Nil)).
Lemma candidate_308: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_309: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y Nil).
Lemma candidate_310: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x Nil).
Lemma candidate_311: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (Nil).
Lemma candidate_312: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ z => drop y z | Nil => Nil end).
Lemma candidate_313: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_314: forall (y : natural), @eq lst (drop y Nil) (drop y (drop y Nil)).
Lemma candidate_315: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ _ => drop y Nil | Nil => Nil end).
Lemma candidate_316: forall (y : natural), @eq lst (drop y Nil) (drop y Nil).
Lemma candidate_317: forall (y : natural), @eq lst (drop y Nil) (Nil).
Lemma candidate_318: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 391 seconds
Duplicates removed: 181
Filtered by Quickchick: 97
Filtered by script: 11
Remaining: 29

Lemmas: 
Lemma candidate_274: forall (y : natural), @eq lst (drop y Nil) (Nil).
Lemma candidate_68: forall (x : natural), @eq lst (drop x Nil) (Nil).
Lemma candidate_268: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (Nil).
Lemma candidate_147: forall (y : natural) (x : natural), @eq lst (Nil) (drop y (drop x Nil)).
Lemma candidate_62: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (Nil).
Lemma candidate_271: forall (y : natural), @eq lst (drop y Nil) (drop y (drop y Nil)).
Lemma candidate_267: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x Nil).
Lemma candidate_266: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop y Nil).
Lemma candidate_146: forall (y : natural) (x : natural), @eq lst (drop x Nil) (drop y (drop x Nil)).
Lemma candidate_145: forall (y : natural) (x : natural), @eq lst (drop y Nil) (drop y (drop x Nil)).
Lemma candidate_65: forall (x : natural), @eq lst (drop x Nil) (drop x (drop x Nil)).
Lemma candidate_61: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop x Nil).
Lemma candidate_60: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop y Nil).
Lemma candidate_264: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil)) (drop x (drop x Nil)).
Lemma candidate_143: forall (y : natural) (x : natural), @eq lst (drop x (drop x Nil)) (drop y (drop x Nil)).
Lemma candidate_58: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil)) (drop x (drop x Nil)).
Lemma candidate_73: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_269: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ z => drop y z | Nil => Nil end).
Lemma candidate_63: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_272: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ _ => drop y Nil | Nil => Nil end).
Lemma candidate_66: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_270: forall (y : natural), @eq lst (drop y Nil)   (match drop y Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_64: forall (x : natural), @eq lst (drop x Nil)   (match drop x Nil with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_265: forall (y : natural) (x : natural), @eq lst (drop x (drop y Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_144: forall (y : natural) (x : natural), @eq lst (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end)   (drop y (drop x Nil)).
Lemma candidate_59: forall (y : natural) (x : natural), @eq lst (drop y (drop x Nil))   (match drop x Nil with | Cons _ _ => drop x Nil | Nil => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_71: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
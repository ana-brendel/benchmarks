File Information
- File name: goal9
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal9_drop_Cons_assoc_36_drop_Nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal9_drop_Cons_assoc_36_drop_Nil
- Namespace: adtind
- Proof name: drop_Cons_assoc
- Theorem: Theorem drop_Cons_assoc: forall (x0 x4 x5 : natural) (l : lst),
@eq lst (drop x0 (drop x4 (Cons x5 l))) (drop x4 (drop x0 (Cons x5 l))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil))

* Hypothesis:
IHx2 : forall (x0 : natural) (l : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l)))
  (drop x2 (drop (Succ x1) (Cons x0 l)))
x3 : natural
x1 : natural
IHl : @eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 Nil)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 Nil)))
n : natural
x2 : natural
IHx1 : forall (x0 x4 : natural) (l : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l))) (drop x0 (drop x1 (Cons x4 l)))

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x3 : natural
x1 : natural
x2 : natural

* Terms:
@eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 Nil)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 Nil))) : Prop
drop x1 (drop x2 Nil) : lst
drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop x2 (drop x1 Nil) : lst
drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
drop (Succ x1) (drop (Succ x2) (Cons x3 Nil)) : lst
x1 : natural
drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
lst : Set
forall (x0 x4 : natural) (l : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l))) (drop x0 (drop x1 (Cons x4 l))) : Prop
x2 : natural
forall l : lst,
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 l)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 l))) : Prop
drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
Cons x3 Nil : lst
x3 : natural
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
forall (x0 : natural) (l : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l)))
  (drop x2 (drop (Succ x1) (Cons x0 l))) : Prop
forall l : lst,
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 l)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 l))) : Prop
drop (Succ x1) (Cons x3 Nil) : lst
drop x2 Nil : lst
drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
Succ x2 : natural
drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
drop (Succ x2) (Cons x3 Nil) : lst
drop x1 Nil : lst
@eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil)) : Prop
forall (x0 : natural) (l : lst),
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons x0 l)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons x0 l))) : Prop
drop (Succ x2) (drop (Succ x1) (Cons x3 Nil)) : lst
Cons _UNBOUND_REL_2 _UNBOUND_REL_1 : lst
drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
natural : Set
Succ x1 : natural
Nil : lst

* Functions:
Succ  : forall _ : natural, natural
drop  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
Cons  : forall (_ : natural) (_ : lst), lst

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = drop x1 Nil
lf1 : lst = drop x1 (drop x2 Nil)
lf4 : lst = drop x2 Nil
lf5 : lst = Nil
lf2 : lst = drop x2 (drop x1 Nil)

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf1 : lst) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) lf1.
Lemma conj9: forall (lf2 : lst) (lf4 : lst) (x1 : natural), @eq lst lf2 (drop x1 lf4).
Lemma conj10: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 lf4).
Lemma conj13: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 lf5)).
Lemma conj14: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 lf5)).
Lemma conj15: forall (lf2 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 Nil)).
Lemma conj16: forall (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 Nil)).
Lemma conj18: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) lf1.
Lemma conj20: forall (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) lf1.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) (drop x1 lf4).
Lemma conj28: forall (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf4).
Lemma conj30: forall (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) (drop x1 (drop x2 lf5)).
Lemma conj32: forall (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil)).


<---VALIDITY CHECKS--->
Time elapsed: 23 seconds
Valid:
Lemma conj32: forall (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil)).
Lemma conj30: forall (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) (drop x1 (drop x2 lf5)).

Invalid:
Lemma conj28: forall (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf4).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) (drop x1 lf4).
Lemma conj20: forall (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) lf1.
Lemma conj18: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) lf1.
Lemma conj16: forall (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 Nil)).
Lemma conj15: forall (lf2 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 Nil)).
Lemma conj14: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 lf5)).
Lemma conj13: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 lf5)).
Lemma conj10: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 lf4).
Lemma conj9: forall (lf2 : lst) (lf4 : lst) (x1 : natural), @eq lst lf2 (drop x1 lf4).
Lemma conj2: forall (lf1 : lst) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 62 seconds
Generalizations:
Lemma conj28: forall (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf4).
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) (drop x1 lf4).
Lemma conj20: forall (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) lf1.
Lemma conj18: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) lf1.
Lemma conj16: forall (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 Nil)).
Lemma conj15: forall (lf2 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 Nil)).
Lemma conj14: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 lf5)).
Lemma conj13: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 lf5)).
Lemma conj10: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 lf4).
Lemma conj9: forall (lf2 : lst) (lf4 : lst) (x1 : natural), @eq lst lf2 (drop x1 lf4).
Lemma conj2: forall (lf1 : lst) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 80 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf1 : lst) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) lf1.
Lemma conj9: forall (lf2 : lst) (lf4 : lst) (x1 : natural), @eq lst lf2 (drop x1 lf4).
Lemma conj10: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 lf4).
Lemma conj13: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 lf5)).
Lemma conj14: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 lf5)).
Lemma conj15: forall (lf2 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop x2 Nil)).
Lemma conj16: forall (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf3) (drop x1 (drop x2 Nil)).
Lemma conj18: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) lf1.
Lemma conj20: forall (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) lf1.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 lf5)) (drop x1 lf4).
Lemma conj28: forall (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf4).


<---CREATE SKETCHES--->
Time elapsed: 80 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst (##hole##) lf1
Sketch conj2_term_sketch0 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj9_sketch0 : @eq lst lf2 (##hole##)
Sketch conj9_term_sketch0 : @eq lst (drop x1 lf4) (##hole##)
Sketch conj10_sketch0 : @eq lst (##hole##) (drop x1 lf4)
Sketch conj10_sketch1 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj10_term_sketch0 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj10_term_sketch1 : @eq lst (drop x1 lf4) (##hole##)
Sketch conj13_sketch0 : @eq lst lf2 (##hole##)
Sketch conj13_sketch1 : @eq lst lf2 (drop x1 (##hole##))
Sketch conj13_term_sketch0 : @eq lst (drop x1 (drop x2 lf5)) (##hole##)
Sketch conj13_term_sketch1 : @eq lst (drop x2 lf5) (##hole##)
Sketch conj14_sketch0 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj14_sketch1 : @eq lst (##hole##) (drop x1 (drop x2 lf5))
Sketch conj14_sketch2 : @eq lst (drop x2 lf3) (drop x1 (##hole##))
Sketch conj14_term_sketch0 : @eq lst (drop x1 (drop x2 lf5)) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (drop x2 lf5) (##hole##)
Sketch conj15_sketch0 : @eq lst lf2 (##hole##)
Sketch conj15_sketch1 : @eq lst lf2 (drop x1 (##hole##))
Sketch conj15_sketch2 : @eq lst lf2 (drop x1 (drop x2 (##hole##)))
Sketch conj15_term_sketch0 : @eq lst (drop x1 (drop x2 Nil)) (##hole##)
Sketch conj15_term_sketch1 : @eq lst (drop x2 Nil) (##hole##)
Sketch conj15_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj16_sketch0 : @eq lst (##hole##) (drop x1 (drop x2 Nil))
Sketch conj16_sketch1 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj16_sketch2 : @eq lst (drop x2 lf3) (drop x1 (##hole##))
Sketch conj16_sketch3 : @eq lst (drop x2 lf3) (drop x1 (drop x2 (##hole##)))
Sketch conj16_term_sketch0 : @eq lst (drop x2 lf3) (##hole##)
Sketch conj16_term_sketch1 : @eq lst (drop x1 (drop x2 Nil)) (##hole##)
Sketch conj16_term_sketch2 : @eq lst (drop x2 Nil) (##hole##)
Sketch conj16_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj18_sketch0 : @eq lst (drop x2 (##hole##)) lf1
Sketch conj18_sketch1 : @eq lst (##hole##) lf1
Sketch conj18_term_sketch0 : @eq lst (drop x1 lf5) (##hole##)
Sketch conj18_term_sketch1 : @eq lst (drop x2 (drop x1 lf5)) (##hole##)
Sketch conj20_sketch0 : @eq lst (drop x2 (##hole##)) lf1
Sketch conj20_sketch1 : @eq lst (##hole##) lf1
Sketch conj20_sketch2 : @eq lst (drop x2 (drop x1 (##hole##))) lf1
Sketch conj20_term_sketch0 : @eq lst (drop x1 Nil) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (drop x2 (drop x1 Nil)) (##hole##)
Sketch conj20_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj26_sketch0 : @eq lst (drop x2 (##hole##)) (drop x1 lf4)
Sketch conj26_sketch1 : @eq lst (drop x2 (drop x1 lf5)) (##hole##)
Sketch conj26_sketch2 : @eq lst (##hole##) (drop x1 lf4)
Sketch conj26_term_sketch0 : @eq lst (drop x1 lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq lst (drop x1 lf4) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (drop x2 (drop x1 lf5)) (##hole##)
Sketch conj28_sketch0 : @eq lst (drop x2 (##hole##)) (drop x1 lf4)
Sketch conj28_sketch1 : @eq lst (drop x2 (drop x1 Nil)) (##hole##)
Sketch conj28_sketch2 : @eq lst (##hole##) (drop x1 lf4)
Sketch conj28_sketch3 : @eq lst (drop x2 (drop x1 (##hole##))) (drop x1 lf4)
Sketch conj28_term_sketch0 : @eq lst (drop x1 Nil) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (drop x1 lf4) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (drop x2 (drop x1 Nil)) (##hole##)
Sketch conj28_term_sketch3 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 81 seconds
Problems per Sketch:
Sketch conj15_sketch1 --> Problem  synth_5
Sketch conj28_sketch0 --> Problem  synth_17
Sketch conj26_term_sketch1 --> Problem  synth_4
Sketch conj16_sketch3 --> Problem  synth_8
Sketch conj14_sketch2 --> Problem  synth_8
Sketch conj15_term_sketch1 --> Problem  synth_11
Sketch conj26_sketch2 --> Problem  synth_4
Sketch conj16_sketch2 --> Problem  synth_8
Sketch conj10_term_sketch1 --> Problem  synth_4
Sketch conj20_sketch2 --> Problem  synth_15
Sketch conj15_term_sketch2 --> Problem  synth_12
Sketch conj16_term_sketch1 --> Problem  synth_10
Sketch conj14_term_sketch2 --> Problem  synth_7
Sketch conj26_sketch0 --> Problem  synth_17
Sketch conj20_term_sketch2 --> Problem  synth_12
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj13_term_sketch1 --> Problem  synth_7
Sketch conj28_term_sketch1 --> Problem  synth_4
Sketch conj9_sketch0 --> Problem  synth_3
Sketch conj26_term_sketch2 --> Problem  synth_6
Sketch conj20_sketch1 --> Problem  synth_1
Sketch conj14_term_sketch1 --> Problem  synth_2
Sketch conj26_sketch1 --> Problem  synth_6
Sketch conj28_term_sketch0 --> Problem  synth_16
Sketch conj10_sketch1 --> Problem  synth_2
Sketch conj9_term_sketch0 --> Problem  synth_4
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_12
Sketch conj18_sketch0 --> Problem  synth_13
Sketch conj16_sketch1 --> Problem  synth_2
Sketch conj20_term_sketch1 --> Problem  synth_10
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj15_sketch2 --> Problem  synth_9
Sketch conj28_sketch2 --> Problem  synth_4
Sketch conj28_sketch3 --> Problem  synth_17
Sketch conj20_sketch0 --> Problem  synth_13
Sketch conj18_term_sketch0 --> Problem  synth_14
Sketch conj26_term_sketch0 --> Problem  synth_14
Sketch conj16_term_sketch2 --> Problem  synth_11
Sketch conj28_sketch1 --> Problem  synth_10
Sketch conj20_term_sketch0 --> Problem  synth_16
Sketch conj13_term_sketch0 --> Problem  synth_6
Sketch conj15_sketch0 --> Problem  synth_3
Sketch conj18_term_sketch1 --> Problem  synth_6
Sketch conj28_term_sketch2 --> Problem  synth_10
Sketch conj16_sketch0 --> Problem  synth_10
Sketch conj13_sketch1 --> Problem  synth_5
Sketch conj14_sketch0 --> Problem  synth_2
Sketch conj14_term_sketch0 --> Problem  synth_6
Sketch conj16_term_sketch0 --> Problem  synth_2
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj16_term_sketch3 --> Problem  synth_12
Sketch conj10_sketch0 --> Problem  synth_4
Sketch conj15_term_sketch0 --> Problem  synth_10
Sketch conj14_sketch1 --> Problem  synth_6
Sketch conj18_sketch1 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 82 seconds

Problem: synth_17
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf4
 Nil

Problem: synth_9
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf2
 Nil

Problem: synth_13
 Cons Zero lf1
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf1
 Nil

Problem: synth_6
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_11
 Cons (Succ x2) Nil
 Cons (Succ Zero) Nil
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 Nil

Problem: synth_7
 Cons Zero lf5
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_4
 Cons Zero lf4
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf4
 Nil

Problem: synth_1
 Cons (Succ Zero) Nil
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 Cons Zero lf1
 Cons Zero Nil
 lf1
 Nil

Problem: synth_16
 Cons (Succ x1) Nil
 Cons (Succ Zero) Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 Nil

Problem: synth_15
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf1
 Nil

Problem: synth_14
 Cons Zero lf5
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_10
 drop x2 Nil
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 Nil

Problem: synth_8
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf3
 Nil

Problem: synth_3
 Cons (Succ Zero) Nil
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 Cons Zero lf2
 Cons Zero Nil
 lf2
 Nil

Problem: synth_12
 Cons (Succ (Succ Zero)) Nil
 Cons (Succ Zero) (Cons Zero Nil)
 Cons Zero (Cons Zero Nil)
 Cons (Succ Zero) Nil
 Cons Zero Nil
 Nil

Problem: synth_5
 Cons Zero lf2
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf2
 Nil

Problem: synth_2
 Cons Zero lf3
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf3
 Nil

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 83 seconds
Lemmas:
Lemma candidate_1: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil)).
Lemma candidate_2: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (drop x1 (drop x2 lf5)).
Lemma candidate_3: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_9: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_10: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_11: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_12: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_13: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_14: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_19: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_20: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_21: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero lf4).
Lemma candidate_22: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (drop x1 Nil).
Lemma candidate_23: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons x1 Nil).
Lemma candidate_24: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero Nil).
Lemma candidate_25: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (lf4).
Lemma candidate_26: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Nil).
Lemma candidate_27: forall (x1 : natural) (lf4 : lst), @eq lst (Cons Zero lf4) (drop x1 lf4).
Lemma candidate_28: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 Nil) (drop x1 lf4).
Lemma candidate_29: forall (x1 : natural) (lf4 : lst), @eq lst (Cons x1 Nil) (drop x1 lf4).
Lemma candidate_30: forall (x1 : natural) (lf4 : lst), @eq lst (Cons Zero Nil) (drop x1 lf4).
Lemma candidate_31: forall (x1 : natural) (lf4 : lst), @eq lst (lf4) (drop x1 lf4).
Lemma candidate_32: forall (x1 : natural) (lf4 : lst), @eq lst (Nil) (drop x1 lf4).
Lemma candidate_33: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_34: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_35: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_36: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_37: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_38: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_39: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_40: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_41: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_42: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_43: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_44: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_45: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero lf4).
Lemma candidate_46: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (drop x1 Nil).
Lemma candidate_47: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons x1 Nil).
Lemma candidate_48: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero Nil).
Lemma candidate_49: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (lf4).
Lemma candidate_50: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Nil).
Lemma candidate_51: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_52: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_53: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_54: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_55: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_56: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_57: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero lf2)).
Lemma candidate_58: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x1 Nil)).
Lemma candidate_59: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons x1 Nil)).
Lemma candidate_60: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero Nil)).
Lemma candidate_61: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (lf2)).
Lemma candidate_62: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Nil)).
Lemma candidate_63: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Cons x2 Nil).
Lemma candidate_64: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (drop x1 Nil).
Lemma candidate_65: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Cons x1 Nil).
Lemma candidate_66: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Cons Zero Nil).
Lemma candidate_67: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (lf5).
Lemma candidate_68: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Nil).
Lemma candidate_69: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Cons Zero lf5).
Lemma candidate_70: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (drop x2 Nil).
Lemma candidate_71: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Cons x2 Nil).
Lemma candidate_72: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Cons Zero Nil).
Lemma candidate_73: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (lf5).
Lemma candidate_74: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Nil).
Lemma candidate_75: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_76: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_77: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_78: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_79: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_80: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_81: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons x2 Nil) (drop x1 (drop x2 lf5)).
Lemma candidate_82: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 Nil) (drop x1 (drop x2 lf5)).
Lemma candidate_83: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons x1 Nil) (drop x1 (drop x2 lf5)).
Lemma candidate_84: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons Zero Nil) (drop x1 (drop x2 lf5)).
Lemma candidate_85: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (lf5) (drop x1 (drop x2 lf5)).
Lemma candidate_86: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Nil) (drop x1 (drop x2 lf5)).
Lemma candidate_87: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Cons x2 Nil)).
Lemma candidate_88: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x1 Nil)).
Lemma candidate_89: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Cons x1 Nil)).
Lemma candidate_90: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Cons Zero Nil)).
Lemma candidate_91: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (lf3)).
Lemma candidate_92: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Nil)).
Lemma candidate_93: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Cons x2 Nil).
Lemma candidate_94: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (drop x1 Nil).
Lemma candidate_95: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Cons x1 Nil).
Lemma candidate_96: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Cons Zero Nil).
Lemma candidate_97: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (lf5).
Lemma candidate_98: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop x2 lf5)) (Nil).
Lemma candidate_99: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_100: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_101: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_102: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_103: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_104: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_105: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Cons Zero lf5).
Lemma candidate_106: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (drop x2 Nil).
Lemma candidate_107: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Cons x2 Nil).
Lemma candidate_108: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Cons Zero Nil).
Lemma candidate_109: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (lf5).
Lemma candidate_110: forall (x2 : natural) (lf5 : lst), @eq lst (drop x2 lf5) (Nil).
Lemma candidate_111: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_112: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_113: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_114: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_115: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_116: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_117: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero lf2)).
Lemma candidate_118: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x1 Nil)).
Lemma candidate_119: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons x1 Nil)).
Lemma candidate_120: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero Nil)).
Lemma candidate_121: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (lf2)).
Lemma candidate_122: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Nil)).
Lemma candidate_123: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x2 (Cons x2 Nil))).
Lemma candidate_124: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x2 (drop x1 Nil))).
Lemma candidate_125: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x2 (Cons x1 Nil))).
Lemma candidate_126: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x2 (Cons Zero Nil))).
Lemma candidate_127: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x2 (lf2))).
Lemma candidate_128: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x2 (Nil))).
Lemma candidate_129: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (drop x2 Nil).
Lemma candidate_130: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Cons x2 Nil).
Lemma candidate_131: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (drop x1 Nil).
Lemma candidate_132: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Cons x1 Nil).
Lemma candidate_133: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Cons Zero Nil).
Lemma candidate_134: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Nil).
Lemma candidate_135: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons (Succ x2) Nil).
Lemma candidate_136: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons (Succ Zero) Nil).
Lemma candidate_137: forall (x2 : natural), @eq lst (drop x2 Nil) (drop x2 Nil).
Lemma candidate_138: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons x2 Nil).
Lemma candidate_139: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons Zero Nil).
Lemma candidate_140: forall (x2 : natural), @eq lst (drop x2 Nil) (Nil).
Lemma candidate_141: @eq lst Nil (Cons (Succ (Succ Zero)) Nil).
Lemma candidate_142: @eq lst Nil (Cons (Succ Zero) (Cons Zero Nil)).
Lemma candidate_143: @eq lst Nil (Cons Zero (Cons Zero Nil)).
Lemma candidate_144: @eq lst Nil (Cons (Succ Zero) Nil).
Lemma candidate_145: @eq lst Nil (Cons Zero Nil).
Lemma candidate_146: @eq lst Nil (Nil).
Lemma candidate_147: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_148: forall (x2 : natural) (x1 : natural), @eq lst (Cons x2 Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_149: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_150: forall (x2 : natural) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_151: forall (x2 : natural) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_152: forall (x2 : natural) (x1 : natural), @eq lst (Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_153: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_154: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_155: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_156: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_157: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_158: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_159: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Cons x2 Nil)).
Lemma candidate_160: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x1 Nil)).
Lemma candidate_161: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Cons x1 Nil)).
Lemma candidate_162: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Cons Zero Nil)).
Lemma candidate_163: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (lf3)).
Lemma candidate_164: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (Nil)).
Lemma candidate_165: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x2 (Cons x2 Nil))).
Lemma candidate_166: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x2 (drop x1 Nil))).
Lemma candidate_167: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x2 (Cons x1 Nil))).
Lemma candidate_168: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x2 (Cons Zero Nil))).
Lemma candidate_169: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x2 (lf3))).
Lemma candidate_170: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 lf3) (drop x1 (drop x2 (Nil))).
Lemma candidate_171: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero lf3).
Lemma candidate_172: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (drop x2 Nil).
Lemma candidate_173: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons x2 Nil).
Lemma candidate_174: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Cons Zero Nil).
Lemma candidate_175: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (lf3).
Lemma candidate_176: forall (lf3 : lst) (x2 : natural), @eq lst (drop x2 lf3) (Nil).
Lemma candidate_177: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (drop x2 Nil).
Lemma candidate_178: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Cons x2 Nil).
Lemma candidate_179: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (drop x1 Nil).
Lemma candidate_180: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Cons x1 Nil).
Lemma candidate_181: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Cons Zero Nil).
Lemma candidate_182: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Nil).
Lemma candidate_183: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons (Succ x2) Nil).
Lemma candidate_184: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons (Succ Zero) Nil).
Lemma candidate_185: forall (x2 : natural), @eq lst (drop x2 Nil) (drop x2 Nil).
Lemma candidate_186: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons x2 Nil).
Lemma candidate_187: forall (x2 : natural), @eq lst (drop x2 Nil) (Cons Zero Nil).
Lemma candidate_188: forall (x2 : natural), @eq lst (drop x2 Nil) (Nil).
Lemma candidate_189: @eq lst Nil (Cons (Succ (Succ Zero)) Nil).
Lemma candidate_190: @eq lst Nil (Cons (Succ Zero) (Cons Zero Nil)).
Lemma candidate_191: @eq lst Nil (Cons Zero (Cons Zero Nil)).
Lemma candidate_192: @eq lst Nil (Cons (Succ Zero) Nil).
Lemma candidate_193: @eq lst Nil (Cons Zero Nil).
Lemma candidate_194: @eq lst Nil (Nil).
Lemma candidate_195: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero lf1)) lf1.
Lemma candidate_196: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop x2 Nil)) lf1.
Lemma candidate_197: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons x2 Nil)) lf1.
Lemma candidate_198: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero Nil)) lf1.
Lemma candidate_199: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (lf1)) lf1.
Lemma candidate_200: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Nil)) lf1.
Lemma candidate_201: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_202: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_203: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_204: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_205: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_206: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_207: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Cons Zero lf5).
Lemma candidate_208: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (drop x1 Nil).
Lemma candidate_209: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Cons x1 Nil).
Lemma candidate_210: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Cons Zero Nil).
Lemma candidate_211: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (lf5).
Lemma candidate_212: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Nil).
Lemma candidate_213: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons x2 Nil).
Lemma candidate_214: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (drop x1 Nil).
Lemma candidate_215: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons x1 Nil).
Lemma candidate_216: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons Zero Nil).
Lemma candidate_217: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (lf5).
Lemma candidate_218: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Nil).
Lemma candidate_219: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero lf1)) lf1.
Lemma candidate_220: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop x2 Nil)) lf1.
Lemma candidate_221: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons x2 Nil)) lf1.
Lemma candidate_222: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero Nil)) lf1.
Lemma candidate_223: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (lf1)) lf1.
Lemma candidate_224: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Nil)) lf1.
Lemma candidate_225: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_226: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_227: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_228: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_229: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_230: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_231: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop x1 (Cons x2 Nil))) lf1.
Lemma candidate_232: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop x1 (drop x1 Nil))) lf1.
Lemma candidate_233: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop x1 (Cons x1 Nil))) lf1.
Lemma candidate_234: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop x1 (Cons Zero Nil))) lf1.
Lemma candidate_235: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop x1 (lf1))) lf1.
Lemma candidate_236: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop x1 (Nil))) lf1.
Lemma candidate_237: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons (Succ x1) Nil).
Lemma candidate_238: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons (Succ Zero) Nil).
Lemma candidate_239: forall (x1 : natural), @eq lst (drop x1 Nil) (drop x1 Nil).
Lemma candidate_240: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons x1 Nil).
Lemma candidate_241: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons Zero Nil).
Lemma candidate_242: forall (x1 : natural), @eq lst (drop x1 Nil) (Nil).
Lemma candidate_243: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x2 Nil).
Lemma candidate_244: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons x2 Nil).
Lemma candidate_245: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 Nil).
Lemma candidate_246: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons x1 Nil).
Lemma candidate_247: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons Zero Nil).
Lemma candidate_248: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Nil).
Lemma candidate_249: @eq lst Nil (Cons (Succ (Succ Zero)) Nil).
Lemma candidate_250: @eq lst Nil (Cons (Succ Zero) (Cons Zero Nil)).
Lemma candidate_251: @eq lst Nil (Cons Zero (Cons Zero Nil)).
Lemma candidate_252: @eq lst Nil (Cons (Succ Zero) Nil).
Lemma candidate_253: @eq lst Nil (Cons Zero Nil).
Lemma candidate_254: @eq lst Nil (Nil).
Lemma candidate_255: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 lf4).
Lemma candidate_256: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf4).
Lemma candidate_257: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 lf4).
Lemma candidate_258: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 lf4).
Lemma candidate_259: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (lf4)) (drop x1 lf4).
Lemma candidate_260: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Nil)) (drop x1 lf4).
Lemma candidate_261: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons x2 Nil).
Lemma candidate_262: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (drop x1 Nil).
Lemma candidate_263: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons x1 Nil).
Lemma candidate_264: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons Zero Nil).
Lemma candidate_265: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (lf5).
Lemma candidate_266: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Nil).
Lemma candidate_267: forall (x1 : natural) (lf4 : lst), @eq lst (Cons Zero lf4) (drop x1 lf4).
Lemma candidate_268: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 Nil) (drop x1 lf4).
Lemma candidate_269: forall (x1 : natural) (lf4 : lst), @eq lst (Cons x1 Nil) (drop x1 lf4).
Lemma candidate_270: forall (x1 : natural) (lf4 : lst), @eq lst (Cons Zero Nil) (drop x1 lf4).
Lemma candidate_271: forall (x1 : natural) (lf4 : lst), @eq lst (lf4) (drop x1 lf4).
Lemma candidate_272: forall (x1 : natural) (lf4 : lst), @eq lst (Nil) (drop x1 lf4).
Lemma candidate_273: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Cons Zero lf5).
Lemma candidate_274: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (drop x1 Nil).
Lemma candidate_275: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Cons x1 Nil).
Lemma candidate_276: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Cons Zero Nil).
Lemma candidate_277: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (lf5).
Lemma candidate_278: forall (x1 : natural) (lf5 : lst), @eq lst (drop x1 lf5) (Nil).
Lemma candidate_279: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero lf4).
Lemma candidate_280: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (drop x1 Nil).
Lemma candidate_281: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons x1 Nil).
Lemma candidate_282: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero Nil).
Lemma candidate_283: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (lf4).
Lemma candidate_284: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Nil).
Lemma candidate_285: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons x2 Nil).
Lemma candidate_286: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (drop x1 Nil).
Lemma candidate_287: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons x1 Nil).
Lemma candidate_288: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Cons Zero Nil).
Lemma candidate_289: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (lf5).
Lemma candidate_290: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (Nil).
Lemma candidate_291: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 lf4).
Lemma candidate_292: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf4).
Lemma candidate_293: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 lf4).
Lemma candidate_294: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 lf4).
Lemma candidate_295: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (lf4)) (drop x1 lf4).
Lemma candidate_296: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (Nil)) (drop x1 lf4).
Lemma candidate_297: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x2 Nil).
Lemma candidate_298: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons x2 Nil).
Lemma candidate_299: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 Nil).
Lemma candidate_300: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons x1 Nil).
Lemma candidate_301: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons Zero Nil).
Lemma candidate_302: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Nil).
Lemma candidate_303: forall (x1 : natural) (lf4 : lst), @eq lst (Cons Zero lf4) (drop x1 lf4).
Lemma candidate_304: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 Nil) (drop x1 lf4).
Lemma candidate_305: forall (x1 : natural) (lf4 : lst), @eq lst (Cons x1 Nil) (drop x1 lf4).
Lemma candidate_306: forall (x1 : natural) (lf4 : lst), @eq lst (Cons Zero Nil) (drop x1 lf4).
Lemma candidate_307: forall (x1 : natural) (lf4 : lst), @eq lst (lf4) (drop x1 lf4).
Lemma candidate_308: forall (x1 : natural) (lf4 : lst), @eq lst (Nil) (drop x1 lf4).
Lemma candidate_309: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 (Cons x2 Nil))) (drop x1 lf4).
Lemma candidate_310: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 (drop x1 Nil))) (drop x1 lf4).
Lemma candidate_311: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 (Cons x1 Nil))) (drop x1 lf4).
Lemma candidate_312: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 (Cons Zero Nil))) (drop x1 lf4).
Lemma candidate_313: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 (lf4))) (drop x1 lf4).
Lemma candidate_314: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 (drop x1 (Nil))) (drop x1 lf4).
Lemma candidate_315: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons (Succ x1) Nil).
Lemma candidate_316: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons (Succ Zero) Nil).
Lemma candidate_317: forall (x1 : natural), @eq lst (drop x1 Nil) (drop x1 Nil).
Lemma candidate_318: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons x1 Nil).
Lemma candidate_319: forall (x1 : natural), @eq lst (drop x1 Nil) (Cons Zero Nil).
Lemma candidate_320: forall (x1 : natural), @eq lst (drop x1 Nil) (Nil).
Lemma candidate_321: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero lf4).
Lemma candidate_322: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (drop x1 Nil).
Lemma candidate_323: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons x1 Nil).
Lemma candidate_324: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Cons Zero Nil).
Lemma candidate_325: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (lf4).
Lemma candidate_326: forall (x1 : natural) (lf4 : lst), @eq lst (drop x1 lf4) (Nil).
Lemma candidate_327: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x2 Nil).
Lemma candidate_328: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons x2 Nil).
Lemma candidate_329: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 Nil).
Lemma candidate_330: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons x1 Nil).
Lemma candidate_331: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Cons Zero Nil).
Lemma candidate_332: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Nil).
Lemma candidate_333: @eq lst Nil (Cons (Succ (Succ Zero)) Nil).
Lemma candidate_334: @eq lst Nil (Cons (Succ Zero) (Cons Zero Nil)).
Lemma candidate_335: @eq lst Nil (Cons Zero (Cons Zero Nil)).
Lemma candidate_336: @eq lst Nil (Cons (Succ Zero) Nil).
Lemma candidate_337: @eq lst Nil (Cons Zero Nil).
Lemma candidate_338: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 318 seconds
Duplicates removed: 193
Filtered by Quickchick: 126
Filtered by script: 5
Remaining: 14

Lemmas: 
Lemma candidate_242: forall (x1 : natural), @eq lst (drop x1 Nil) (Nil).
Lemma candidate_140: forall (x2 : natural), @eq lst (drop x2 Nil) (Nil).
Lemma candidate_248: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (Nil).
Lemma candidate_152: forall (x2 : natural) (x1 : natural), @eq lst (Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_134: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (Nil).
Lemma candidate_245: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 Nil).
Lemma candidate_243: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x2 Nil).
Lemma candidate_149: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_147: forall (x2 : natural) (x1 : natural), @eq lst (drop x2 Nil) (drop x1 (drop x2 Nil)).
Lemma candidate_131: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (drop x1 Nil).
Lemma candidate_129: forall (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop x2 Nil)) (drop x2 Nil).
Lemma candidate_2: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 lf5)) (drop x1 (drop x2 lf5)).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
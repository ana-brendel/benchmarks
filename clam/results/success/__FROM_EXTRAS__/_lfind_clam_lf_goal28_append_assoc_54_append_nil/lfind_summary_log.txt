LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal28_append_assoc_54_append_nil

Number of Lemmas: 814
Number of Lemmas (after duplicates removed): 206
Number of Lemmas (after QuickChick used to filter): 156
* Number of Candidate Lemmas: 131

Time until ranking: 4266
Time to complete: 7932

Stuck state true independent of hypotheses: true

Category 1:
Count = 8

Lemma candidate_173: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_129: forall (l1 : lst), @eq lst (lfappend l1 Nil) (l1).
Lemma candidate_7: forall (lf3 : lst), @eq lst lf3 (lfappend lf3 Nil).
Lemma candidate_233: forall (n : natural) (lf2 : lst), @eq lst (Cons n (lfappend lf2 Nil)) (Cons n lf2).
Lemma candidate_179: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (lfappend lf4 Nil)).
Lemma candidate_55: forall (n0 : natural) (l3 : lst), @eq lst (Cons n0 l3) (Cons n0 (lfappend l3 Nil)).
Lemma candidate_13: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (lfappend lf2 Nil)).
Lemma candidate_120: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend (lfappend l1 Nil) lf6) (lfappend l1 (lfappend lf6 Nil)).

Category 2:
Count = 98

Lemma candidate_172: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf3 : lst), @eq lst lf3 (rev (rev lf3)).
Lemma candidate_171: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_170: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_5: forall (lf3 : lst), @eq lst lf3 (qreva (rev lf3) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst lf3 (rev (qreva lf3 Nil)).
Lemma candidate_169: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_3: forall (lf3 : lst), @eq lst lf3 (qreva (qreva lf3 Nil) Nil).
Lemma candidate_127: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (rev l1)).
Lemma candidate_232: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (rev lf2))) (Cons n lf2).
Lemma candidate_178: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (rev lf4))).
Lemma candidate_54: forall (n0 : natural) (l3 : lst), @eq lst (Cons n0 l3) (Cons n0 (rev (rev l3))).
Lemma candidate_12: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (rev (rev lf2))).
Lemma candidate_191: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend l1 lf6) (qreva (rev l1) lf6).
Lemma candidate_126: forall (l1 : lst), @eq lst (lfappend l1 Nil) (qreva (rev l1) Nil).
Lemma candidate_125: forall (l1 : lst), @eq lst (lfappend l1 Nil) (rev (qreva l1 Nil)).
Lemma candidate_25: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_422: forall (n : natural) (lf2 : lst), @eq lst (Cons n (rev (qreva lf2 Nil))) (Cons n lf2).
Lemma candidate_248: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (rev (qreva lf4 Nil))).
Lemma candidate_230: forall (n : natural) (lf2 : lst), @eq lst (rev (qreva lf2 (Cons n Nil))) (Cons n lf2).
Lemma candidate_229: forall (n : natural) (lf2 : lst), @eq lst (Cons n (qreva (rev lf2) Nil)) (Cons n lf2).
Lemma candidate_176: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (qreva lf4 (Cons n Nil))).
Lemma candidate_175: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (qreva (rev lf4) Nil)).
Lemma candidate_52: forall (n0 : natural) (l3 : lst), @eq lst (Cons n0 l3) (rev (qreva l3 (Cons n0 Nil))).
Lemma candidate_51: forall (n0 : natural) (l3 : lst), @eq lst (Cons n0 l3) (Cons n0 (qreva (rev l3) Nil)).
Lemma candidate_10: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (qreva lf2 (Cons n Nil))).
Lemma candidate_9: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (Cons n (qreva (rev lf2) Nil)).
Lemma candidate_190: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend l1 lf6) (rev (qreva lf6 (rev l1))).
Lemma candidate_124: forall (l1 : lst), @eq lst (lfappend l1 Nil) (qreva (qreva l1 Nil) Nil).
Lemma candidate_24: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_188: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend l1 lf6) (lfappend l1 (rev (rev lf6))).
Lemma candidate_421: forall (n : natural) (lf2 : lst), @eq lst (Cons n (qreva (qreva lf2 Nil) Nil)) (Cons n lf2).
Lemma candidate_247: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (Cons n (qreva (qreva lf4 Nil) Nil)).
Lemma candidate_22: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_231: forall (n : natural) (lf2 : lst), @eq lst (rev (lfappend (rev lf2) (Cons n Nil))) (Cons n lf2).
Lemma candidate_177: forall (n : natural) (lf4 : lst), @eq lst (Cons n lf4) (rev (lfappend (rev lf4) (Cons n Nil))).
Lemma candidate_53: forall (n0 : natural) (l3 : lst), @eq lst (Cons n0 l3) (rev (lfappend (rev l3) (Cons n0 Nil))).
Lemma candidate_11: forall (n : natural) (lf2 : lst), @eq lst (Cons n lf2) (rev (lfappend (rev lf2) (Cons n Nil))).
Lemma candidate_187: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend l1 lf6) (qreva (rev l1) (lfappend lf6 Nil)).
Lemma candidate_122: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend (lfappend l1 Nil) lf6) (qreva (rev l1) lf6).
Lemma candidate_21: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_221: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend l1 (Cons n0 l3)) (qreva (rev l1) (Cons n0 l3)).
Lemma candidate_197: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6)) (Cons n (qreva (rev l1) lf6)).
Lemma candidate_263: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (qreva (rev lf5) lf6)) (Cons n (lfappend lf5 lf6)).
Lemma candidate_49: forall (n0 : natural) (lf5 : lst) (l3 : lst), @eq lst (lfappend lf5 (Cons n0 l3)) (qreva (rev lf5) (Cons n0 l3)).
Lemma candidate_31: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 lf6)) (Cons n (qreva (rev lf5) lf6)).
Lemma candidate_121: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend (lfappend l1 Nil) lf6) (rev (qreva lf6 (rev l1))).
Lemma candidate_220: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend l1 (Cons n0 l3)) (rev (qreva l3 (Cons n0 (rev l1)))).
Lemma candidate_196: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6)) (Cons n (rev (qreva lf6 (rev l1)))).
Lemma candidate_119: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend (lfappend l1 Nil) lf6) (lfappend l1 (rev (rev lf6))).
Lemma candidate_262: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (rev (qreva lf6 (rev lf5)))) (Cons n (lfappend lf5 lf6)).
Lemma candidate_48: forall (n0 : natural) (lf5 : lst) (l3 : lst), @eq lst (lfappend lf5 (Cons n0 l3)) (rev (qreva l3 (Cons n0 (rev lf5)))).
Lemma candidate_30: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 lf6)) (Cons n (rev (qreva lf6 (rev lf5)))).
Lemma candidate_622: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6)) (Cons n (lfappend (rev (rev l1)) lf6)).
Lemma candidate_217: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend l1 (Cons n0 l3)) (lfappend l1 (Cons n0 (rev (rev l3)))).
Lemma candidate_194: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6)) (Cons n (lfappend l1 (rev (rev lf6)))).
Lemma candidate_260: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 (rev (rev lf6)))) (Cons n (lfappend lf5 lf6)).
Lemma candidate_45: forall (n0 : natural) (lf5 : lst) (l3 : lst), @eq lst (lfappend lf5 (Cons n0 l3)) (lfappend lf5 (Cons n0 (rev (rev l3)))).
Lemma candidate_28: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 lf6)) (Cons n (lfappend lf5 (rev (rev lf6)))).
Lemma candidate_218: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend l1 (Cons n0 l3)) (lfappend l1 (Cons n0 (lfappend l3 Nil))).
Lemma candidate_195: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6)) (Cons n (lfappend l1 (lfappend lf6 Nil))).
Lemma candidate_118: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend (lfappend l1 Nil) lf6) (qreva (rev l1) (lfappend lf6 Nil)).
Lemma candidate_261: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 (lfappend lf6 Nil)))   (Cons n (lfappend lf5 lf6)).
Lemma candidate_46: forall (n0 : natural) (lf5 : lst) (l3 : lst), @eq lst (lfappend lf5 (Cons n0 l3))   (lfappend lf5 (Cons n0 (lfappend l3 Nil))).
Lemma candidate_29: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 lf6))   (Cons n (lfappend lf5 (lfappend lf6 Nil))).
Lemma candidate_731: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (qreva (rev l1) lf6))   (Cons n (lfappend (lfappend l1 Nil) lf6)).
Lemma candidate_621: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6))   (Cons n (lfappend (qreva (rev l1) Nil) lf6)).
Lemma candidate_620: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6))   (Cons n (lfappend (rev (qreva l1 Nil)) lf6)).
Lemma candidate_219: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend l1 (Cons n0 l3))   (rev (lfappend (rev l3) (Cons n0 (rev l1)))).
Lemma candidate_193: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6))   (Cons n (qreva (rev l1) (lfappend lf6 Nil))).
Lemma candidate_166: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend (lfappend l1 Nil) (Cons n0 l3))   (qreva (rev l1) (Cons n0 l3)).
Lemma candidate_259: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (qreva (rev lf5) (lfappend lf6 Nil)))   (Cons n (lfappend lf5 lf6)).
Lemma candidate_47: forall (n0 : natural) (lf5 : lst) (l3 : lst), @eq lst (lfappend lf5 (Cons n0 l3))   (rev (lfappend (rev l3) (Cons n0 (rev lf5)))).
Lemma candidate_27: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (Cons n (lfappend lf5 lf6))   (Cons n (qreva (rev lf5) (lfappend lf6 Nil))).
Lemma candidate_299: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (qreva (rev lf5) (Cons n0 l3)))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_43: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 l3)))   (Cons n (qreva (rev lf5) (Cons n0 l3))).
Lemma candidate_730: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (rev (qreva lf6 (rev l1))))   (Cons n (lfappend (lfappend l1 Nil) lf6)).
Lemma candidate_619: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 lf6))   (Cons n (lfappend (qreva (qreva l1 Nil) Nil) lf6)).
Lemma candidate_165: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend (lfappend l1 Nil) (Cons n0 l3))   (rev (qreva l3 (Cons n0 (rev l1)))).
Lemma candidate_556: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (rev (qreva l3 (Cons n0 (rev l1))))).
Lemma candidate_162: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend (lfappend l1 Nil) (Cons n0 l3))   (lfappend l1 (Cons n0 (rev (rev l3)))).
Lemma candidate_562: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (rev (qreva l3 (Cons n0 (rev lf5)))))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_163: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend (lfappend l1 Nil) (Cons n0 l3))   (lfappend l1 (Cons n0 (lfappend l3 Nil))).
Lemma candidate_133: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) lf6))   (Cons n (lfappend l1 (lfappend lf6 Nil))).
Lemma candidate_727: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (qreva (rev l1) (lfappend lf6 Nil)))   (Cons n (lfappend (lfappend l1 Nil) lf6)).
Lemma candidate_205: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (rev (qreva l3 (Cons n0 (qreva l1 (Cons n Nil))))).
Lemma candidate_164: forall (n0 : natural) (l1 : lst) (l3 : lst), @eq lst (lfappend (lfappend l1 Nil) (Cons n0 l3))   (rev (lfappend (rev l3) (Cons n0 (rev l1)))).
Lemma candidate_131: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) lf6))   (Cons n (qreva (rev l1) (lfappend lf6 Nil))).
Lemma candidate_295: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (rev (qreva l3 (Cons n0 (qreva lf5 (Cons n Nil)))))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_39: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 l3)))   (rev (qreva l3 (Cons n0 (qreva lf5 (Cons n Nil))))).
Lemma candidate_148: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3)))   (Cons n (qreva (rev l1) (Cons n0 l3))).
Lemma candidate_561: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (rev (lfappend (rev l3) (Cons n0 (rev lf5)))))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_296: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (rev (qreva l3 (Cons n0 (lfappend (rev lf5) (Cons n Nil)))))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_40: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 l3)))   (rev (qreva l3 (Cons n0 (lfappend (rev lf5) (Cons n Nil))))).
Lemma candidate_146: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3)))   (Cons n (lfappend l1 (Cons n0 (rev (rev l3))))).
Lemma candidate_147: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3)))   (Cons n (lfappend l1 (Cons n0 (lfappend l3 Nil)))).
Lemma candidate_144: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3)))   (rev (qreva l3 (Cons n0 (qreva l1 (Cons n Nil))))).
Lemma candidate_145: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3)))   (rev (qreva l3 (Cons n0 (lfappend (rev l1) (Cons n Nil))))).

Category 3 (provable):
Count = 2

Lemma candidate_189: forall (l1 : lst) (lf6 : lst), @eq lst (lfappend l1 lf6) (lfappend l1 (lfappend lf6 Nil)).
Lemma candidate_23: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).

Category 3 (not provable):
Count = 23

Lemma candidate_135: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) lf6))   (Cons n (qreva (rev l1) lf6)).
Lemma candidate_209: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (qreva (rev l1) (Cons n0 l3))).
Lemma candidate_134: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) lf6))   (Cons n (rev (qreva lf6 (rev l1)))).
Lemma candidate_728: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 (rev (rev lf6))))   (Cons n (lfappend (lfappend l1 Nil) lf6)).
Lemma candidate_132: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend (lfappend l1 Nil) lf6))   (Cons n (lfappend l1 (rev (rev lf6)))).
Lemma candidate_729: forall (n : natural) (l1 : lst) (lf6 : lst), @eq lst (Cons n (lfappend l1 (lfappend lf6 Nil)))   (Cons n (lfappend (lfappend l1 Nil) lf6)).
Lemma candidate_682: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (lfappend (rev (rev l1)) (Cons n0 l3))).
Lemma candidate_207: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (lfappend l1 (Cons n0 (rev (rev l3))))).
Lemma candidate_297: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 (rev (rev l3)))))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_41: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 l3)))   (Cons n (lfappend lf5 (Cons n0 (rev (rev l3))))).
Lemma candidate_208: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (lfappend l1 (Cons n0 (lfappend l3 Nil)))).
Lemma candidate_298: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 (lfappend l3 Nil))))   (Cons n (lfappend lf5 (Cons n0 l3))).
Lemma candidate_42: forall (n0 : natural) (n : natural) (lf5 : lst) (l3 : lst), @eq lst (Cons n (lfappend lf5 (Cons n0 l3)))   (Cons n (lfappend lf5 (Cons n0 (lfappend l3 Nil)))).
Lemma candidate_769: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (qreva (rev l1) (Cons n0 l3)))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3))).
Lemma candidate_681: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (lfappend (qreva (rev l1) Nil) (Cons n0 l3))).
Lemma candidate_680: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (lfappend (rev (qreva l1 Nil)) (Cons n0 l3))).
Lemma candidate_555: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (rev (lfappend (rev l3) (Cons n0 (rev l1))))).
Lemma candidate_679: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (Cons n (lfappend (qreva (qreva l1 Nil) Nil) (Cons n0 l3))).
Lemma candidate_206: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 l3)))   (rev (qreva l3 (Cons n0 (lfappend (rev l1) (Cons n Nil))))).
Lemma candidate_767: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (rev (rev l3)))))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3))).
Lemma candidate_768: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l3 Nil))))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3))).
Lemma candidate_765: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (rev (qreva l3 (Cons n0 (qreva l1 (Cons n Nil)))))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3))).
Lemma candidate_766: forall (n0 : natural) (n : natural) (l1 : lst) (l3 : lst), @eq lst (rev (qreva l3 (Cons n0 (lfappend (rev l1) (Cons n Nil)))))   (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3))).
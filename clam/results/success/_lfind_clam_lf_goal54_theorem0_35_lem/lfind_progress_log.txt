File Information
- File name: goal54
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal54_theorem0_35_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal54_theorem0_35_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (w0 x0 y0 : natural) (z0 : lst),
@eq lst (drop (Succ w0) (drop x0 (Cons y0 z0))) (drop w0 (drop x0 z0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z))

* Hypothesis:
x : natural
w : natural
y : natural
z : lst

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : natural
w : natural
y : natural
z : lst

* Terms:
drop (Succ w) (drop x (Cons y z)) : lst
Cons y z : lst
x : natural
drop x z : lst
w : natural
drop w (drop x z) : lst
Succ w : natural
lst : Set
y : natural
drop x (Cons y z) : lst
@eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)) : Prop
z : lst
natural : Set

* Functions:
Succ  : forall _ : natural, natural
drop  : forall (_ : natural) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = drop x (Cons y z)
lf1 : lst = drop (Succ w) (drop x (Cons y z))
lf4 : lst = Cons y z
lf5 : lst = drop x z
lf2 : lst = drop w (drop x z)
lf6 : natural = Succ w

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj3: forall (lf5 : lst) (w : natural) (lf1 : lst), @eq lst lf1 (drop w lf5).
Lemma conj7: forall (x : natural) (w : natural) (lf1 : lst) (z : lst), @eq lst lf1 (drop w (drop x z)).
Lemma conj17: forall (lf6 : natural) (lf2 : lst) (lf3 : lst), @eq lst (drop lf6 lf3) lf2.
Lemma conj18: forall (lf2 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) lf2.
Lemma conj19: forall (lf6 : natural) (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w lf5).
Lemma conj20: forall (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w lf5).
Lemma conj23: forall (lf6 : natural) (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w (drop x z)).
Lemma conj24: forall (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w (drop x z)).
Lemma conj49: forall (lf6 : natural) (lf2 : lst) (x : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) lf2.
Lemma conj50: forall (lf2 : lst) (x : natural) (lf4 : lst) (w : natural), @eq lst (drop (Succ w) (drop x lf4)) lf2.
Lemma conj51: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) (drop w lf5).
Lemma conj52: forall (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w lf5).
Lemma conj55: forall (lf6 : natural) (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop lf6 (drop x lf4)) (drop w (drop x z)).
Lemma conj56: forall (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w (drop x z)).
Lemma conj57: forall (lf6 : natural) (lf2 : lst) (x : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) lf2.
Lemma conj58: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) lf2.
Lemma conj59: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w lf5).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w lf5).
Lemma conj63: forall (lf6 : natural) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w (drop x z)).
Lemma conj64: forall (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)).


<---VALIDITY CHECKS--->
Time elapsed: 46 seconds
Valid:
Lemma conj64: forall (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)).

Invalid:
Lemma conj63: forall (lf6 : natural) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w (drop x z)).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w lf5).
Lemma conj58: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) lf2.
Lemma conj57: forall (lf6 : natural) (lf2 : lst) (x : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) lf2.
Lemma conj56: forall (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w (drop x z)).
Lemma conj55: forall (lf6 : natural) (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop lf6 (drop x lf4)) (drop w (drop x z)).
Lemma conj52: forall (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w lf5).
Lemma conj51: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) (drop w lf5).
Lemma conj50: forall (lf2 : lst) (x : natural) (lf4 : lst) (w : natural), @eq lst (drop (Succ w) (drop x lf4)) lf2.
Lemma conj49: forall (lf6 : natural) (lf2 : lst) (x : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) lf2.
Lemma conj24: forall (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w (drop x z)).
Lemma conj23: forall (lf6 : natural) (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w (drop x z)).
Lemma conj20: forall (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w lf5).
Lemma conj19: forall (lf6 : natural) (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w lf5).
Lemma conj18: forall (lf2 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) lf2.
Lemma conj17: forall (lf6 : natural) (lf2 : lst) (lf3 : lst), @eq lst (drop lf6 lf3) lf2.
Lemma conj7: forall (x : natural) (w : natural) (lf1 : lst) (z : lst), @eq lst lf1 (drop w (drop x z)).
Lemma conj3: forall (lf5 : lst) (w : natural) (lf1 : lst), @eq lst lf1 (drop w lf5).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 46 seconds
Generalizations:
Lemma conj63: forall (lf6 : natural) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w (drop x z)).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w lf5).
Lemma conj58: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) lf2.
Lemma conj57: forall (lf6 : natural) (lf2 : lst) (x : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) lf2.
Lemma conj56: forall (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w (drop x z)).
Lemma conj55: forall (lf6 : natural) (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop lf6 (drop x lf4)) (drop w (drop x z)).
Lemma conj52: forall (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w lf5).
Lemma conj51: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) (drop w lf5).
Lemma conj50: forall (lf2 : lst) (x : natural) (lf4 : lst) (w : natural), @eq lst (drop (Succ w) (drop x lf4)) lf2.
Lemma conj49: forall (lf6 : natural) (lf2 : lst) (x : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) lf2.
Lemma conj24: forall (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w (drop x z)).
Lemma conj23: forall (lf6 : natural) (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w (drop x z)).
Lemma conj20: forall (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w lf5).
Lemma conj19: forall (lf6 : natural) (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w lf5).
Lemma conj18: forall (lf2 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) lf2.
Lemma conj17: forall (lf6 : natural) (lf2 : lst) (lf3 : lst), @eq lst (drop lf6 lf3) lf2.
Lemma conj7: forall (x : natural) (w : natural) (lf1 : lst) (z : lst), @eq lst lf1 (drop w (drop x z)).
Lemma conj3: forall (lf5 : lst) (w : natural) (lf1 : lst), @eq lst lf1 (drop w lf5).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 76 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj3: forall (lf5 : lst) (w : natural) (lf1 : lst), @eq lst lf1 (drop w lf5).
Lemma conj7: forall (x : natural) (w : natural) (lf1 : lst) (z : lst), @eq lst lf1 (drop w (drop x z)).
Lemma conj17: forall (lf6 : natural) (lf2 : lst) (lf3 : lst), @eq lst (drop lf6 lf3) lf2.
Lemma conj18: forall (lf2 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) lf2.
Lemma conj19: forall (lf6 : natural) (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w lf5).
Lemma conj20: forall (lf5 : lst) (w : natural) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w lf5).
Lemma conj23: forall (lf6 : natural) (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop lf6 lf3) (drop w (drop x z)).
Lemma conj24: forall (x : natural) (w : natural) (z : lst) (lf3 : lst), @eq lst (drop (Succ w) lf3) (drop w (drop x z)).
Lemma conj49: forall (lf6 : natural) (lf2 : lst) (x : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) lf2.
Lemma conj50: forall (lf2 : lst) (x : natural) (lf4 : lst) (w : natural), @eq lst (drop (Succ w) (drop x lf4)) lf2.
Lemma conj51: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop lf6 (drop x lf4)) (drop w lf5).
Lemma conj52: forall (lf5 : lst) (x : natural) (w : natural) (lf4 : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w lf5).
Lemma conj55: forall (lf6 : natural) (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop lf6 (drop x lf4)) (drop w (drop x z)).
Lemma conj56: forall (x : natural) (w : natural) (lf4 : lst) (z : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w (drop x z)).
Lemma conj57: forall (lf6 : natural) (lf2 : lst) (x : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) lf2.
Lemma conj58: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) lf2.
Lemma conj59: forall (lf6 : natural) (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w lf5).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w lf5).
Lemma conj63: forall (lf6 : natural) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop lf6 (drop x (Cons y z))) (drop w (drop x z)).


<---CREATE SKETCHES--->
Time elapsed: 76 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq lst (drop w lf5) (##hole##)
Sketch conj7_sketch0 : @eq lst lf1 (drop w (##hole##))
Sketch conj7_sketch1 : @eq lst lf1 (##hole##)
Sketch conj7_term_sketch0 : @eq lst (drop x z) (##hole##)
Sketch conj7_term_sketch1 : @eq lst (drop w (drop x z)) (##hole##)
Sketch conj17_sketch0 : @eq lst (##hole##) lf2
Sketch conj17_term_sketch0 : @eq lst (drop lf6 lf3) (##hole##)
Sketch conj18_sketch0 : @eq lst (##hole##) lf2
Sketch conj18_sketch1 : @eq lst (drop (##hole##) lf3) lf2
Sketch conj18_term_sketch0 : @eq lst (drop (Succ w) lf3) (##hole##)
Sketch conj18_term_sketch1 : @eq natural (Succ w) (##hole##)
Sketch conj19_sketch0 : @eq lst (drop lf6 lf3) (##hole##)
Sketch conj19_sketch1 : @eq lst (##hole##) (drop w lf5)
Sketch conj19_term_sketch0 : @eq lst (drop w lf5) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (drop lf6 lf3) (##hole##)
Sketch conj20_sketch0 : @eq lst (drop (Succ w) lf3) (##hole##)
Sketch conj20_sketch1 : @eq lst (##hole##) (drop w lf5)
Sketch conj20_sketch2 : @eq lst (drop (##hole##) lf3) (drop w lf5)
Sketch conj20_term_sketch0 : @eq lst (drop w lf5) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (drop (Succ w) lf3) (##hole##)
Sketch conj20_term_sketch2 : @eq natural (Succ w) (##hole##)
Sketch conj23_sketch0 : @eq lst (drop lf6 lf3) (drop w (##hole##))
Sketch conj23_sketch1 : @eq lst (drop lf6 lf3) (##hole##)
Sketch conj23_sketch2 : @eq lst (##hole##) (drop w (drop x z))
Sketch conj23_term_sketch0 : @eq lst (drop x z) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (drop w (drop x z)) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (drop lf6 lf3) (##hole##)
Sketch conj24_sketch0 : @eq lst (##hole##) (drop w (drop x z))
Sketch conj24_sketch1 : @eq lst (drop (Succ w) lf3) (drop w (##hole##))
Sketch conj24_sketch2 : @eq lst (drop (Succ w) lf3) (##hole##)
Sketch conj24_sketch3 : @eq lst (drop (##hole##) lf3) (drop w (drop x z))
Sketch conj24_term_sketch0 : @eq lst (drop (Succ w) lf3) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (drop x z) (##hole##)
Sketch conj24_term_sketch2 : @eq lst (drop w (drop x z)) (##hole##)
Sketch conj24_term_sketch3 : @eq natural (Succ w) (##hole##)
Sketch conj49_sketch0 : @eq lst (drop lf6 (##hole##)) lf2
Sketch conj49_sketch1 : @eq lst (##hole##) lf2
Sketch conj49_term_sketch0 : @eq lst (drop x lf4) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (drop lf6 (drop x lf4)) (##hole##)
Sketch conj50_sketch0 : @eq lst (drop (##hole##) (drop x lf4)) lf2
Sketch conj50_sketch1 : @eq lst (drop (Succ w) (##hole##)) lf2
Sketch conj50_sketch2 : @eq lst (##hole##) lf2
Sketch conj50_term_sketch0 : @eq natural (Succ w) (##hole##)
Sketch conj50_term_sketch1 : @eq lst (drop x lf4) (##hole##)
Sketch conj50_term_sketch2 : @eq lst (drop (Succ w) (drop x lf4)) (##hole##)
Sketch conj51_sketch0 : @eq lst (drop lf6 (drop x lf4)) (##hole##)
Sketch conj51_sketch1 : @eq lst (drop lf6 (##hole##)) (drop w lf5)
Sketch conj51_sketch2 : @eq lst (##hole##) (drop w lf5)
Sketch conj51_term_sketch0 : @eq lst (drop w lf5) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (drop x lf4) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (drop lf6 (drop x lf4)) (##hole##)
Sketch conj52_sketch0 : @eq lst (drop (Succ w) (drop x lf4)) (##hole##)
Sketch conj52_sketch1 : @eq lst (drop (##hole##) (drop x lf4)) (drop w lf5)
Sketch conj52_sketch2 : @eq lst (drop (Succ w) (##hole##)) (drop w lf5)
Sketch conj52_sketch3 : @eq lst (##hole##) (drop w lf5)
Sketch conj52_term_sketch0 : @eq lst (drop w lf5) (##hole##)
Sketch conj52_term_sketch1 : @eq natural (Succ w) (##hole##)
Sketch conj52_term_sketch2 : @eq lst (drop x lf4) (##hole##)
Sketch conj52_term_sketch3 : @eq lst (drop (Succ w) (drop x lf4)) (##hole##)
Sketch conj55_sketch0 : @eq lst (drop lf6 (drop x lf4)) (drop w (##hole##))
Sketch conj55_sketch1 : @eq lst (drop lf6 (drop x lf4)) (##hole##)
Sketch conj55_sketch2 : @eq lst (drop lf6 (##hole##)) (drop w (drop x z))
Sketch conj55_sketch3 : @eq lst (##hole##) (drop w (drop x z))
Sketch conj55_term_sketch0 : @eq lst (drop x z) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (drop w (drop x z)) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (drop x lf4) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (drop lf6 (drop x lf4)) (##hole##)
Sketch conj56_sketch0 : @eq lst (drop (Succ w) (drop x lf4)) (drop w (##hole##))
Sketch conj56_sketch1 : @eq lst (drop (Succ w) (drop x lf4)) (##hole##)
Sketch conj56_sketch2 : @eq lst (drop (##hole##) (drop x lf4)) (drop w (drop x z))
Sketch conj56_sketch3 : @eq lst (drop (Succ w) (##hole##)) (drop w (drop x z))
Sketch conj56_sketch4 : @eq lst (##hole##) (drop w (drop x z))
Sketch conj56_term_sketch0 : @eq lst (drop x z) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (drop w (drop x z)) (##hole##)
Sketch conj56_term_sketch2 : @eq natural (Succ w) (##hole##)
Sketch conj56_term_sketch3 : @eq lst (drop x lf4) (##hole##)
Sketch conj56_term_sketch4 : @eq lst (drop (Succ w) (drop x lf4)) (##hole##)
Sketch conj57_sketch0 : @eq lst (##hole##) lf2
Sketch conj57_sketch1 : @eq lst (drop lf6 (drop x (##hole##))) lf2
Sketch conj57_sketch2 : @eq lst (drop lf6 (##hole##)) lf2
Sketch conj57_term_sketch0 : @eq lst (drop lf6 (drop x (Cons y z))) (##hole##)
Sketch conj57_term_sketch1 : @eq lst (Cons y z) (##hole##)
Sketch conj57_term_sketch2 : @eq lst (drop x (Cons y z)) (##hole##)
Sketch conj58_sketch0 : @eq lst (##hole##) lf2
Sketch conj58_sketch1 : @eq lst (drop (Succ w) (drop x (##hole##))) lf2
Sketch conj58_sketch2 : @eq lst (drop (##hole##) (drop x (Cons y z))) lf2
Sketch conj58_sketch3 : @eq lst (drop (Succ w) (##hole##)) lf2
Sketch conj58_term_sketch0 : @eq lst (drop (Succ w) (drop x (Cons y z))) (##hole##)
Sketch conj58_term_sketch1 : @eq lst (Cons y z) (##hole##)
Sketch conj58_term_sketch2 : @eq natural (Succ w) (##hole##)
Sketch conj58_term_sketch3 : @eq lst (drop x (Cons y z)) (##hole##)
Sketch conj59_sketch0 : @eq lst (drop lf6 (drop x (Cons y z))) (##hole##)
Sketch conj59_sketch1 : @eq lst (##hole##) (drop w lf5)
Sketch conj59_sketch2 : @eq lst (drop lf6 (drop x (##hole##))) (drop w lf5)
Sketch conj59_sketch3 : @eq lst (drop lf6 (##hole##)) (drop w lf5)
Sketch conj59_term_sketch0 : @eq lst (drop w lf5) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (drop lf6 (drop x (Cons y z))) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (Cons y z) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (drop x (Cons y z)) (##hole##)
Sketch conj60_sketch0 : @eq lst (##hole##) (drop w lf5)
Sketch conj60_sketch1 : @eq lst (drop (Succ w) (drop x (Cons y z))) (##hole##)
Sketch conj60_sketch2 : @eq lst (drop (Succ w) (drop x (##hole##))) (drop w lf5)
Sketch conj60_sketch3 : @eq lst (drop (##hole##) (drop x (Cons y z))) (drop w lf5)
Sketch conj60_sketch4 : @eq lst (drop (Succ w) (##hole##)) (drop w lf5)
Sketch conj60_term_sketch0 : @eq lst (drop (Succ w) (drop x (Cons y z))) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (drop w lf5) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (Cons y z) (##hole##)
Sketch conj60_term_sketch3 : @eq natural (Succ w) (##hole##)
Sketch conj60_term_sketch4 : @eq lst (drop x (Cons y z)) (##hole##)
Sketch conj63_sketch0 : @eq lst (##hole##) (drop w (drop x z))
Sketch conj63_sketch1 : @eq lst (drop lf6 (drop x (##hole##))) (drop w (drop x z))
Sketch conj63_sketch2 : @eq lst (drop lf6 (drop x (Cons y z))) (drop w (##hole##))
Sketch conj63_sketch3 : @eq lst (drop lf6 (drop x (Cons y z))) (##hole##)
Sketch conj63_sketch4 : @eq lst (drop lf6 (##hole##)) (drop w (drop x z))
Sketch conj63_term_sketch0 : @eq lst (drop lf6 (drop x (Cons y z))) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (Cons y z) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (drop x z) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (drop w (drop x z)) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (drop x (Cons y z)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 441 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_23
Sketch conj7_sketch1 --> Problem  synth_1
Sketch conj58_term_sketch2 --> Problem  synth_10
Sketch conj52_sketch1 --> Problem  synth_22
Sketch conj60_term_sketch1 --> Problem  synth_2
Sketch conj59_term_sketch2 --> Problem  synth_31
Sketch conj63_sketch4 --> Problem  synth_25
Sketch conj23_sketch0 --> Problem  synth_12
Sketch conj57_term_sketch2 --> Problem  synth_32
Sketch conj60_term_sketch4 --> Problem  synth_32
Sketch conj59_term_sketch1 --> Problem  synth_30
Sketch conj59_sketch1 --> Problem  synth_2
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj60_sketch0 --> Problem  synth_2
Sketch conj20_term_sketch2 --> Problem  synth_10
Sketch conj56_sketch4 --> Problem  synth_5
Sketch conj24_sketch2 --> Problem  synth_9
Sketch conj50_sketch2 --> Problem  synth_6
Sketch conj24_sketch1 --> Problem  synth_13
Sketch conj17_term_sketch0 --> Problem  synth_7
Sketch conj63_term_sketch0 --> Problem  synth_30
Sketch conj56_term_sketch0 --> Problem  synth_4
Sketch conj50_term_sketch2 --> Problem  synth_20
Sketch conj58_sketch2 --> Problem  synth_34
Sketch conj55_sketch3 --> Problem  synth_5
Sketch conj24_sketch0 --> Problem  synth_5
Sketch conj7_term_sketch1 --> Problem  synth_5
Sketch conj60_term_sketch3 --> Problem  synth_10
Sketch conj23_sketch1 --> Problem  synth_7
Sketch conj60_term_sketch2 --> Problem  synth_31
Sketch conj60_sketch1 --> Problem  synth_35
Sketch conj55_sketch1 --> Problem  synth_17
Sketch conj60_sketch2 --> Problem  synth_37
Sketch conj59_sketch3 --> Problem  synth_21
Sketch conj63_term_sketch4 --> Problem  synth_32
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_36
Sketch conj52_term_sketch1 --> Problem  synth_10
Sketch conj23_term_sketch2 --> Problem  synth_7
Sketch conj20_sketch0 --> Problem  synth_9
Sketch conj24_term_sketch0 --> Problem  synth_9
Sketch conj7_term_sketch0 --> Problem  synth_4
Sketch conj20_term_sketch0 --> Problem  synth_2
Sketch conj18_term_sketch1 --> Problem  synth_10
Sketch conj19_term_sketch1 --> Problem  synth_7
Sketch conj57_term_sketch0 --> Problem  synth_30
Sketch conj51_term_sketch2 --> Problem  synth_17
Sketch conj60_term_sketch0 --> Problem  synth_35
Sketch conj52_term_sketch2 --> Problem  synth_16
Sketch conj58_term_sketch1 --> Problem  synth_31
Sketch conj60_sketch3 --> Problem  synth_38
Sketch conj51_sketch0 --> Problem  synth_17
Sketch conj23_term_sketch0 --> Problem  synth_4
Sketch conj56_term_sketch3 --> Problem  synth_16
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj24_term_sketch1 --> Problem  synth_4
Sketch conj52_term_sketch3 --> Problem  synth_20
Sketch conj63_term_sketch1 --> Problem  synth_31
Sketch conj18_sketch1 --> Problem  synth_8
Sketch conj24_sketch3 --> Problem  synth_14
Sketch conj58_term_sketch3 --> Problem  synth_32
Sketch conj57_sketch2 --> Problem  synth_15
Sketch conj51_term_sketch1 --> Problem  synth_16
Sketch conj51_term_sketch0 --> Problem  synth_2
Sketch conj56_sketch3 --> Problem  synth_28
Sketch conj58_sketch1 --> Problem  synth_33
Sketch conj55_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch0 --> Problem  synth_2
Sketch conj23_sketch2 --> Problem  synth_5
Sketch conj19_sketch0 --> Problem  synth_7
Sketch conj17_sketch0 --> Problem  synth_6
Sketch conj49_sketch0 --> Problem  synth_15
Sketch conj63_sketch2 --> Problem  synth_40
Sketch conj20_sketch2 --> Problem  synth_11
Sketch conj55_term_sketch1 --> Problem  synth_5
Sketch conj52_sketch0 --> Problem  synth_20
Sketch conj56_term_sketch4 --> Problem  synth_20
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_30
Sketch conj49_term_sketch1 --> Problem  synth_17
Sketch conj58_sketch0 --> Problem  synth_6
Sketch conj23_term_sketch1 --> Problem  synth_5
Sketch conj20_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch0 --> Problem  synth_5
Sketch conj55_term_sketch3 --> Problem  synth_17
Sketch conj63_sketch3 --> Problem  synth_30
Sketch conj50_term_sketch0 --> Problem  synth_10
Sketch conj59_term_sketch0 --> Problem  synth_2
Sketch conj52_sketch3 --> Problem  synth_2
Sketch conj59_term_sketch3 --> Problem  synth_32
Sketch conj51_sketch1 --> Problem  synth_21
Sketch conj50_term_sketch1 --> Problem  synth_16
Sketch conj55_sketch0 --> Problem  synth_24
Sketch conj50_sketch0 --> Problem  synth_18
Sketch conj63_sketch1 --> Problem  synth_39
Sketch conj56_term_sketch2 --> Problem  synth_10
Sketch conj57_sketch1 --> Problem  synth_29
Sketch conj18_sketch0 --> Problem  synth_6
Sketch conj20_term_sketch1 --> Problem  synth_9
Sketch conj56_term_sketch1 --> Problem  synth_5
Sketch conj56_sketch2 --> Problem  synth_27
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj50_sketch1 --> Problem  synth_19
Sketch conj18_term_sketch0 --> Problem  synth_9
Sketch conj58_sketch3 --> Problem  synth_19
Sketch conj57_term_sketch1 --> Problem  synth_31
Sketch conj24_term_sketch2 --> Problem  synth_5
Sketch conj60_sketch4 --> Problem  synth_23
Sketch conj56_sketch0 --> Problem  synth_26
Sketch conj57_sketch0 --> Problem  synth_6
Sketch conj56_sketch1 --> Problem  synth_20
Sketch conj24_term_sketch3 --> Problem  synth_10
Sketch conj55_term_sketch2 --> Problem  synth_16
Sketch conj51_sketch2 --> Problem  synth_2
Sketch conj63_term_sketch2 --> Problem  synth_4
Sketch conj55_sketch2 --> Problem  synth_25
Sketch conj49_sketch1 --> Problem  synth_6
Sketch conj58_term_sketch0 --> Problem  synth_35
Sketch conj49_term_sketch0 --> Problem  synth_16


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 762 seconds

Problem: synth_28

Problem: synth_17
 match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end
 drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end
 drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)
 drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)
 drop lf6 (drop x lf4)
 drop x (drop lf6 lf4)

Problem: synth_29

Problem: synth_26
 drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf4 with | Cons _ z => drop x z | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ z => drop x z | Nil => Nil end | Nil => Nil end
 drop x match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match drop x lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end
 match lf4 with | Cons _ z => drop x z | Nil => Nil end

Problem: synth_9
 drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end
 drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end
 match lf3 with | Cons _ z => drop w z | Nil => Nil end

Problem: synth_30
 drop lf6 (drop x (Cons x z))
 drop x (drop lf6 (Cons x z))
 drop lf6 (drop x (Cons lf6 z))
 drop x (drop lf6 (Cons lf6 z))
 drop lf6 (drop x (Cons Zero z))
 drop x (drop lf6 (Cons Zero z))

Problem: synth_11
 Succ w

Problem: synth_39

Problem: synth_1
 match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 lf1

Problem: synth_15

Problem: synth_31
 Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end
 Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 Cons y match z with | Cons _ _ => z | Nil => Nil end
 Cons y z

Problem: synth_14
 Succ w

Problem: synth_8

Problem: synth_34

Problem: synth_12
 match match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end with | Cons _ _ => match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end | Nil => Nil end
 match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end
 match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end
 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end

Problem: synth_5
 match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end
 drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end
 drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)
 drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)
 drop x (drop w z)
 drop w (drop x z)

Problem: synth_37

Problem: synth_2
 match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end
 match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end
 drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end
 match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end
 drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end
 drop w lf5

Problem: synth_22
 Succ w

Problem: synth_20
 drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end
 drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end
 drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end
 drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end
 match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end
 match drop x lf4 with | Cons _ z => drop w z | Nil => Nil end

Problem: synth_18

Problem: synth_21

Problem: synth_25

Problem: synth_13
 match match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end with | Cons _ _ => match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end | Nil => Nil end
 match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end
 match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end
 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end

Problem: synth_6
 match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 lf2

Problem: synth_7
 match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end
 match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end
 drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end
 match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end
 drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end
 drop lf6 lf3

Problem: synth_4
 match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end
 match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 match drop x z with | Cons _ _ => drop x z | Nil => Nil end
 drop x match z with | Cons _ _ => z | Nil => Nil end
 drop x z

Problem: synth_38
 Succ w

Problem: synth_23

Problem: synth_27
 Succ w

Problem: synth_16
 match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end
 match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end
 drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end
 match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end
 drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end
 drop x lf4

Problem: synth_19

Problem: synth_40
 match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end
 match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 match drop x z with | Cons _ _ => drop x z | Nil => Nil end
 drop x match z with | Cons _ _ => z | Nil => Nil end
 drop x z

Problem: synth_10
 Succ w

Problem: synth_33

Problem: synth_24
 drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf4 with | Cons _ z => drop x z | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ z => drop x z | Nil => Nil end | Nil => Nil end
 drop x match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match drop x lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end
 match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end
 match lf4 with | Cons _ z => drop x z | Nil => Nil end

Problem: synth_3

Problem: synth_32
 match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end
 match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end
 drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)
 match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end
 drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)
 drop x (Cons y z)

Problem: synth_36

Problem: synth_35
 match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end
 drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end
 drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)
 drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)
 drop x (drop w z)
 drop w (drop x z)

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 763 seconds
Lemmas:
Lemma candidate_1: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)).
Lemma candidate_2: forall (lf1 : lst), @eq lst lf1   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_8: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_9: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_10: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_11: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_12: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_13: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_14: forall (lf1 : lst), @eq lst lf1   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_20: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_21: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_22: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_23: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_24: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_25: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x z).
Lemma candidate_26: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_27: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_28: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_29: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_30: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_31: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_32: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_33: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_34: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_35: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_36: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_37: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_38: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_39: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_40: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_41: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end).
Lemma candidate_42: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_43: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3) (drop lf6 lf3).
Lemma candidate_44: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_45: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_46: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_47: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_48: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_49: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_50: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_51: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_52: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_53: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_54: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_55: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match lf3 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_56: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_57: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_58: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_59: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_60: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end).
Lemma candidate_61: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_62: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3) (drop lf6 lf3).
Lemma candidate_63: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_64: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_65: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_66: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_67: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_68: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_69: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_70: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_71: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_72: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_73: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_74: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_75: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_76: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_77: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_78: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end).
Lemma candidate_79: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_80: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3) (drop lf6 lf3).
Lemma candidate_81: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_82: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_83: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_84: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_85: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_86: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match lf3 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_87: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_88: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_89: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_90: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_91: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_92: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_93: forall (lf3 : lst) (w : natural) (lf5 : lst), @eq lst (drop (Succ w) lf3) (drop w lf5).
Lemma candidate_94: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_95: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_96: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_97: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_98: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_99: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_100: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_101: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_102: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_103: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_104: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_105: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match lf3 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_106: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_107: forall (lf3 : lst) (w : natural) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop w      (match match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end with | Cons _ _ => match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end | Nil => Nil end)).
Lemma candidate_108: forall (lf3 : lst) (w : natural) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop w      (match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_109: forall (lf3 : lst) (w : natural) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop w      (match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end)).
Lemma candidate_110: forall (lf3 : lst) (w : natural) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop w      (match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end)).
Lemma candidate_111: forall (lf3 : lst) (w : natural) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop w      (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_112: forall (lf3 : lst) (w : natural) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop w (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_113: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_114: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_115: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_116: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end).
Lemma candidate_117: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_118: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3) (drop lf6 lf3).
Lemma candidate_119: forall (z : lst) (w : natural) (x : natural), @eq lst   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_120: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_121: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_122: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_123: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_124: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_125: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_126: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_127: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_128: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_129: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_130: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x z).
Lemma candidate_131: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_132: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_133: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_134: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_135: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_136: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_137: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_138: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_139: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_140: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end).
Lemma candidate_141: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_142: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3) (drop lf6 lf3).
Lemma candidate_143: forall (z : lst) (w : natural) (x : natural), @eq lst   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_144: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_145: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_146: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_147: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_148: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_149: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end with | Cons _ _ => match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end | Nil => Nil end)).
Lemma candidate_150: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_151: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end)).
Lemma candidate_152: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end)).
Lemma candidate_153: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_154: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_155: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_156: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_157: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_158: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_159: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_160: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match lf3 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_161: forall (lf3 : lst) (z : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) lf3) (drop w (drop x z)).
Lemma candidate_162: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_163: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_164: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_165: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_166: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_167: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match lf3 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_168: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_169: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_170: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_171: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_172: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_173: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x z).
Lemma candidate_174: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_175: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_176: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_177: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_178: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_179: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_180: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_181: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_182: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_183: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_184: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_185: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_186: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_187: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_188: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_189: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_190: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_191: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_192: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4) (drop x lf4).
Lemma candidate_193: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end).
Lemma candidate_194: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end).
Lemma candidate_195: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_196: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_197: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop lf6 (drop x lf4)).
Lemma candidate_198: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop x (drop lf6 lf4)).
Lemma candidate_199: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_200: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_201: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_202: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_203: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_204: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_205: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_206: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_207: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_208: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_209: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_210: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_211: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4) (drop x lf4).
Lemma candidate_212: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_213: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_214: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_215: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_216: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_217: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop x lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_218: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end).
Lemma candidate_219: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end).
Lemma candidate_220: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_221: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_222: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop lf6 (drop x lf4)).
Lemma candidate_223: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop x (drop lf6 lf4)).
Lemma candidate_224: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_225: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_226: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_227: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_228: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_229: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_230: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_231: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_232: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_233: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_234: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_235: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_236: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_237: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_238: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_239: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_240: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_241: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4) (drop x lf4).
Lemma candidate_242: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end).
Lemma candidate_243: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end).
Lemma candidate_244: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_245: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_246: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop lf6 (drop x lf4)).
Lemma candidate_247: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop x (drop lf6 lf4)).
Lemma candidate_248: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_249: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_250: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_251: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_252: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_253: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop x lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_254: forall (w : natural) (lf4 : lst) (x : natural) (lf5 : lst), @eq lst (drop (Succ w) (drop x lf4)) (drop w lf5).
Lemma candidate_255: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_256: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_257: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_258: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_259: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_260: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_261: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_262: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_263: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_264: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_265: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_266: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_267: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_268: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_269: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_270: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_271: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_272: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_273: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4) (drop x lf4).
Lemma candidate_274: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_275: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_276: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_277: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_278: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_279: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop x lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_280: forall (w : natural) (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop w      (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_281: forall (w : natural) (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop w      (match match lf4 with | Cons _ z => drop x z | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ z => drop x z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_282: forall (w : natural) (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop w      (drop x match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_283: forall (w : natural) (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop w      (match drop x lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_284: forall (w : natural) (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop w      (match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end)).
Lemma candidate_285: forall (w : natural) (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop w (match lf4 with | Cons _ z => drop x z | Nil => Nil end)).
Lemma candidate_286: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end).
Lemma candidate_287: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end).
Lemma candidate_288: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_289: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_290: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop lf6 (drop x lf4)).
Lemma candidate_291: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop x (drop lf6 lf4)).
Lemma candidate_292: forall (z : lst) (w : natural) (x : natural), @eq lst   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_293: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_294: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_295: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_296: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_297: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_298: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_299: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_300: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_301: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_302: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_303: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x z).
Lemma candidate_304: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_305: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_306: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_307: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_308: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_309: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_310: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_311: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_312: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_313: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_314: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_315: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4) (drop x lf4).
Lemma candidate_316: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end).
Lemma candidate_317: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end).
Lemma candidate_318: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_319: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_320: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop lf6 (drop x lf4)).
Lemma candidate_321: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop x (drop lf6 lf4)).
Lemma candidate_322: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_323: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (match match lf4 with | Cons _ z => drop x z | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ z => drop x z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_324: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (drop x match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_325: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (match drop x lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_326: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end)).
Lemma candidate_327: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w (match lf4 with | Cons _ z => drop x z | Nil => Nil end)).
Lemma candidate_328: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_329: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_330: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_331: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_332: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_333: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop x lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_334: forall (z : lst) (w : natural) (lf4 : lst) (x : natural), @eq lst (drop (Succ w) (drop x lf4)) (drop w (drop x z)).
Lemma candidate_335: forall (z : lst) (w : natural) (x : natural), @eq lst   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_336: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_337: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_338: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_339: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_340: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_341: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_342: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_343: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_344: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_345: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_346: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x z).
Lemma candidate_347: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_348: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_349: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_350: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_351: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_352: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_353: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_354: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_355: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_356: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_357: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_358: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_359: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4) (drop x lf4).
Lemma candidate_360: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_361: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_362: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_363: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_364: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_365: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop x lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_366: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_367: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_368: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_369: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_370: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_371: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_372: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons x z))).
Lemma candidate_373: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons x z))).
Lemma candidate_374: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons lf6 z))).
Lemma candidate_375: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons lf6 z))).
Lemma candidate_376: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons Zero z))).
Lemma candidate_377: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons Zero z))).
Lemma candidate_378: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_379: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_380: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_381: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_382: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_383: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y z).
Lemma candidate_384: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end).
Lemma candidate_385: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end).
Lemma candidate_386: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_387: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end).
Lemma candidate_388: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_389: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z)) (drop x (Cons y z)).
Lemma candidate_390: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_391: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_392: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_393: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_394: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_395: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_396: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_397: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_398: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_399: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_400: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop x (drop w z)).
Lemma candidate_401: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)).
Lemma candidate_402: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_403: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_404: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_405: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_406: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_407: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y z).
Lemma candidate_408: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_409: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end).
Lemma candidate_410: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end).
Lemma candidate_411: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_412: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end).
Lemma candidate_413: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_414: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z)) (drop x (Cons y z)).
Lemma candidate_415: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons x z))).
Lemma candidate_416: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons x z))).
Lemma candidate_417: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons lf6 z))).
Lemma candidate_418: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons lf6 z))).
Lemma candidate_419: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons Zero z))).
Lemma candidate_420: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons Zero z))).
Lemma candidate_421: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_422: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_423: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_424: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_425: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_426: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_427: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_428: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_429: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_430: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_431: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_432: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_433: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons x z))).
Lemma candidate_434: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons x z))).
Lemma candidate_435: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons lf6 z))).
Lemma candidate_436: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons lf6 z))).
Lemma candidate_437: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons Zero z))).
Lemma candidate_438: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons Zero z))).
Lemma candidate_439: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_440: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_441: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_442: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_443: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_444: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y z).
Lemma candidate_445: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end).
Lemma candidate_446: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end).
Lemma candidate_447: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_448: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end).
Lemma candidate_449: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_450: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z)) (drop x (Cons y z)).
Lemma candidate_451: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_452: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_453: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_454: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_455: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_456: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_457: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_458: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_459: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_460: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_461: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop x (drop w z)).
Lemma candidate_462: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)).
Lemma candidate_463: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf5 : lst), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w lf5).
Lemma candidate_464: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_465: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_466: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_467: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_468: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop x (drop w z)).
Lemma candidate_469: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)).
Lemma candidate_470: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_471: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_472: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_473: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_474: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_475: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5) (drop w lf5).
Lemma candidate_476: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_477: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_478: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_479: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_480: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_481: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y z).
Lemma candidate_482: forall (w : natural), @eq natural (Succ w) (Succ w).
Lemma candidate_483: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end).
Lemma candidate_484: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end).
Lemma candidate_485: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_486: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end).
Lemma candidate_487: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_488: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z)) (drop x (Cons y z)).
Lemma candidate_489: forall (z : lst) (w : natural) (x : natural), @eq lst   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_490: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_491: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_492: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_493: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_494: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_495: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z)))   (drop w      (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_496: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z)))   (drop w      (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_497: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z)))   (drop w      (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_498: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z)))   (drop w (match drop x z with | Cons _ _ => drop x z | Nil => Nil end)).
Lemma candidate_499: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z)))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_500: forall (z : lst) (y : natural) (w : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop w (drop x z)).
Lemma candidate_501: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons x z))).
Lemma candidate_502: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons x z))).
Lemma candidate_503: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons lf6 z))).
Lemma candidate_504: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons lf6 z))).
Lemma candidate_505: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons Zero z))).
Lemma candidate_506: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons Zero z))).
Lemma candidate_507: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons x z))).
Lemma candidate_508: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons x z))).
Lemma candidate_509: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons lf6 z))).
Lemma candidate_510: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons lf6 z))).
Lemma candidate_511: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop lf6 (drop x (Cons Zero z))).
Lemma candidate_512: forall (z : lst) (y : natural) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x (Cons y z))) (drop x (drop lf6 (Cons Zero z))).
Lemma candidate_513: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_514: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_515: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_516: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_517: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_518: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y z).
Lemma candidate_519: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_520: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_521: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_522: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_523: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_524: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x z).
Lemma candidate_525: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_526: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_527: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_528: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_529: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_530: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop w (drop x z)).
Lemma candidate_531: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end).
Lemma candidate_532: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end).
Lemma candidate_533: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_534: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end).
Lemma candidate_535: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_536: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z)) (drop x (Cons y z)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1084 seconds
Duplicates removed: 407
Filtered by Quickchick: 29
Filtered by script: 13
Remaining: 87

Lemmas: 
Lemma candidate_123: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_30: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z)) (drop x (drop w z)).
Lemma candidate_198: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4)) (drop x (drop lf6 lf4)).
Lemma candidate_400: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z))) (drop x (drop w z)).
Lemma candidate_36: forall (lf2 : lst), @eq lst (match lf2 with | Cons _ _ => lf2 | Nil => Nil end) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (match lf1 with | Cons _ _ => lf1 | Nil => Nil end).
Lemma candidate_382: forall (z : lst) (y : natural), @eq lst (Cons y z) (Cons y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_24: forall (z : lst) (x : natural), @eq lst (drop x z) (drop x match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_191: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_67: forall (w : natural) (lf5 : lst), @eq lst (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_12: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_23: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_42: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_190: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end).
Lemma candidate_66: forall (w : natural) (lf5 : lst), @eq lst (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end)   (drop w lf5).
Lemma candidate_11: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end).
Lemma candidate_388: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_122: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_121: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))   (drop w (drop x z)).
Lemma candidate_29: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_28: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_41: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end).
Lemma candidate_120: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_53: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match drop w lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_52: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_27: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_154: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w (match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_216: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (match drop w lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_215: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match lf4 with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_214: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match lf4 with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_196: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x (drop lf6 match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_195: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop lf6 (drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end)).
Lemma candidate_327: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w (match lf4 with | Cons _ z => drop x z | Nil => Nil end)).
Lemma candidate_399: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_398: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_387: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end).
Lemma candidate_26: forall (z : lst) (w : natural) (x : natural), @eq lst (drop w (drop x z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_194: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (drop x match drop lf6 lf4 with | Cons _ _ => drop lf6 lf4 | Nil => Nil end).
Lemma candidate_119: forall (z : lst) (w : natural) (x : natural), @eq lst   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)   (drop w (drop x z)).
Lemma candidate_397: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_325: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (match drop x lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_324: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (drop x match lf4 with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_193: forall (lf4 : lst) (x : natural) (lf6 : natural), @eq lst (drop lf6 (drop x lf4))   (match drop x (drop lf6 lf4) with | Cons _ _ => drop x (drop lf6 lf4) | Nil => Nil end).
Lemma candidate_396: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x (Cons y z)))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_54: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_50: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end).
Lemma candidate_213: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end).
Lemma candidate_212: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop w z | Nil => Nil end).
Lemma candidate_153: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_326: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ z => drop x z | Nil => Nil end)).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end).
Lemma candidate_35: forall (lf2 : lst), @eq lst   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_381: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_22: forall (z : lst) (x : natural), @eq lst (drop x z)   (drop x match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_322: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_21: forall (z : lst) (x : natural), @eq lst (drop x z)   (match drop x match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop x match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_189: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (drop x match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_10: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_65: forall (w : natural) (lf5 : lst), @eq lst   (drop w match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_40: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (drop lf6 match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_188: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop x match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_9: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_386: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (drop x (Cons y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_64: forall (w : natural) (lf5 : lst), @eq lst   (match drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop w match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_51: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (match match lf3 with | Cons _ z => drop w z | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ z => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_20: forall (z : lst) (x : natural), @eq lst (drop x z)   (match match drop x z with | Cons _ _ => drop x z | Nil => Nil end with | Cons _ _ => match drop x z with | Cons _ _ => drop x z | Nil => Nil end | Nil => Nil end).
Lemma candidate_39: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop lf6 match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_187: forall (lf4 : lst) (x : natural), @eq lst (drop x lf4)   (match match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end with | Cons _ _ => match drop x lf4 with | Cons _ _ => drop x lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_8: forall (w : natural) (lf5 : lst), @eq lst (drop w lf5)   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_63: forall (w : natural) (lf5 : lst), @eq lst   (match match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end with | Cons _ _ => match drop w lf5 with | Cons _ _ => drop w lf5 | Nil => Nil end | Nil => Nil end)   (drop w lf5).
Lemma candidate_385: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) with | Cons _ _ => drop x (Cons y match z with | Cons _ _ => z | Nil => Nil end) | Nil => Nil end).
Lemma candidate_38: forall (lf3 : lst) (lf6 : natural), @eq lst (drop lf6 lf3)   (match match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end with | Cons _ _ => match drop lf6 lf3 with | Cons _ _ => drop lf6 lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_323: forall (lf4 : lst) (w : natural) (x : natural), @eq lst (drop (Succ w) (drop x lf4))   (drop w      (match match lf4 with | Cons _ z => drop x z | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ z => drop x z | Nil => Nil end | Nil => Nil end)).
Lemma candidate_152: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end)).
Lemma candidate_384: forall (z : lst) (y : natural) (x : natural), @eq lst (drop x (Cons y z))   (match match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end with | Cons _ _ => match drop x (Cons y z) with | Cons _ _ => drop x (Cons y z) | Nil => Nil end | Nil => Nil end).
Lemma candidate_150: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end)).
Lemma candidate_151: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end)).
Lemma candidate_380: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_34: forall (lf2 : lst), @eq lst   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_149: forall (lf3 : lst) (w : natural), @eq lst (drop (Succ w) lf3)   (drop w      (match match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end with | Cons _ _ => match match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end with | Cons _ _ => match lf3 with | Cons _ (Cons _ _ as z) => z | _ => Nil end | Nil => Nil end | Nil => Nil end)).
Lemma candidate_379: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_33: forall (lf2 : lst), @eq lst   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
Lemma candidate_378: forall (z : lst) (y : natural), @eq lst (Cons y z)   (Cons y match match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_2: forall (lf1 : lst), @eq lst lf1   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_32: forall (lf2 : lst), @eq lst   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf2.
File Information
- File name: goal2
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal2_theorem0_41_lem2
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal2_theorem0_41_lem2
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x y0 : lst, @eq natural (len (lfappend x y0)) (len (lfappend y0 x)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (len y) (len (lfappend y Nil))

* Hypothesis:
y : lst

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
y : lst

* Terms:
len (lfappend y Nil) : natural
len y : natural
lfappend y Nil : lst
lst : Set
y : lst
@eq natural (len y) (len (lfappend y Nil)) : Prop
natural : Set
Nil : lst

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = len y
lf1 : natural = len (lfappend y Nil)
lf4 : lst = Nil
lf2 : lst = lfappend y Nil

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf3 lf1.
Lemma conj5: forall (lf2 : lst) (lf3 : natural), @eq natural lf3 (len lf2).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y lf4)).
Lemma conj8: forall (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y Nil)).
Lemma conj9: forall (lf1 : natural) (y : lst), @eq natural (len y) lf1.
Lemma conj13: forall (lf2 : lst) (y : lst), @eq natural (len y) (len lf2).
Lemma conj14: forall (lf4 : lst) (y : lst), @eq natural (len y) (len (lfappend y lf4)).
Lemma conj16: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).


<---VALIDITY CHECKS--->
Time elapsed: 16 seconds
Valid:
Lemma conj16: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).

Invalid:
Lemma conj14: forall (lf4 : lst) (y : lst), @eq natural (len y) (len (lfappend y lf4)).
Lemma conj13: forall (lf2 : lst) (y : lst), @eq natural (len y) (len lf2).
Lemma conj9: forall (lf1 : natural) (y : lst), @eq natural (len y) lf1.
Lemma conj8: forall (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y Nil)).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y lf4)).
Lemma conj5: forall (lf2 : lst) (lf3 : natural), @eq natural lf3 (len lf2).
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf3 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 16 seconds
Generalizations:
Lemma conj14: forall (lf4 : lst) (y : lst), @eq natural (len y) (len (lfappend y lf4)).
Lemma conj13: forall (lf2 : lst) (y : lst), @eq natural (len y) (len lf2).
Lemma conj9: forall (lf1 : natural) (y : lst), @eq natural (len y) lf1.
Lemma conj8: forall (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y Nil)).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y lf4)).
Lemma conj5: forall (lf2 : lst) (lf3 : natural), @eq natural lf3 (len lf2).
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf3 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 27 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf3 lf1.
Lemma conj5: forall (lf2 : lst) (lf3 : natural), @eq natural lf3 (len lf2).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y lf4)).
Lemma conj8: forall (y : lst) (lf3 : natural), @eq natural lf3 (len (lfappend y Nil)).
Lemma conj9: forall (lf1 : natural) (y : lst), @eq natural (len y) lf1.
Lemma conj13: forall (lf2 : lst) (y : lst), @eq natural (len y) (len lf2).
Lemma conj14: forall (lf4 : lst) (y : lst), @eq natural (len y) (len (lfappend y lf4)).


<---CREATE SKETCHES--->
Time elapsed: 27 seconds
Sketches:
Sketch conj5_sketch0 : @eq natural lf3 (##hole##)
Sketch conj5_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj6_sketch0 : @eq natural lf3 (len (##hole##))
Sketch conj6_sketch1 : @eq natural lf3 (##hole##)
Sketch conj6_term_sketch0 : @eq lst (lfappend y lf4) (##hole##)
Sketch conj6_term_sketch1 : @eq natural (len (lfappend y lf4)) (##hole##)
Sketch conj8_sketch0 : @eq natural lf3 (##hole##)
Sketch conj8_sketch1 : @eq natural lf3 (len (##hole##))
Sketch conj8_sketch2 : @eq natural lf3 (len (lfappend y (##hole##)))
Sketch conj8_term_sketch0 : @eq natural (len (lfappend y Nil)) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (lfappend y Nil) (##hole##)
Sketch conj8_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj9_sketch0 : @eq natural (##hole##) lf1
Sketch conj9_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj13_sketch0 : @eq natural (##hole##) (len lf2)
Sketch conj13_sketch1 : @eq natural (len y) (##hole##)
Sketch conj13_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj13_term_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj14_sketch0 : @eq natural (len y) (len (##hole##))
Sketch conj14_sketch1 : @eq natural (##hole##) (len (lfappend y lf4))
Sketch conj14_sketch2 : @eq natural (len y) (##hole##)
Sketch conj14_term_sketch0 : @eq lst (lfappend y lf4) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (len (lfappend y lf4)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 42 seconds
Problems per Sketch:
Sketch conj6_sketch1 --> Problem  synth_1
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj14_sketch2 --> Problem  synth_7
Sketch conj13_term_sketch0 --> Problem  synth_7
Sketch conj14_term_sketch2 --> Problem  synth_5
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj8_sketch1 --> Problem  synth_3
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj13_sketch1 --> Problem  synth_7
Sketch conj14_sketch0 --> Problem  synth_8
Sketch conj13_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj13_sketch0 --> Problem  synth_2
Sketch conj9_sketch0 --> Problem  synth_10
Sketch conj8_sketch2 --> Problem  synth_6
Sketch conj8_sketch0 --> Problem  synth_1
Sketch conj14_term_sketch1 --> Problem  synth_7
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj8_term_sketch2 --> Problem  synth_9
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj6_sketch0 --> Problem  synth_3
Sketch conj14_sketch1 --> Problem  synth_5
Sketch conj9_term_sketch0 --> Problem  synth_7


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 162 seconds

Problem: synth_10
 lf1

Problem: synth_8
 lfappend (lfappend (lfappend y Nil) Nil) Nil
 lfappend (lfappend y Nil) Nil
 lfappend y Nil
 y

Problem: synth_3

Problem: synth_9
 Nil

Problem: synth_6
 Nil

Problem: synth_7
 len (lfappend (lfappend (lfappend y Nil) Nil) Nil)
 len (lfappend (lfappend y Nil) Nil)
 len (lfappend y Nil)
 len y

Problem: synth_5
 len (lfappend lf4 (lfappend y Nil))
 len (lfappend y (lfappend lf4 Nil))
 len (lfappend lf4 y)
 len (lfappend y lf4)
 len (lfappend y Nil)
 len y

Problem: synth_4
 lfappend lf4 (lfappend y Nil)
 lfappend y (lfappend lf4 Nil)
 lfappend lf4 y
 lfappend y lf4
 lfappend y Nil
 y

Problem: synth_1
 lf3

Problem: synth_2
 len (lfappend (lfappend (lfappend lf2 Nil) Nil) Nil)
 len (lfappend (lfappend lf2 Nil) Nil)
 len (lfappend lf2 Nil)
 len lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 163 seconds
Lemmas:
Lemma candidate_1: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_2: forall (lf3 : natural), @eq natural lf3 (lf3).
Lemma candidate_3: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (lfappend (lfappend lf2 Nil) Nil) Nil)).
Lemma candidate_4: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_5: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_6: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_7: forall (lf3 : natural), @eq natural lf3 (lf3).
Lemma candidate_8: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend lf4 (lfappend y Nil)).
Lemma candidate_9: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_10: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend lf4 y).
Lemma candidate_11: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y lf4).
Lemma candidate_12: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y Nil).
Lemma candidate_13: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (y).
Lemma candidate_14: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend lf4 (lfappend y Nil))).
Lemma candidate_15: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y (lfappend lf4 Nil))).
Lemma candidate_16: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend lf4 y)).
Lemma candidate_17: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y lf4)).
Lemma candidate_18: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y Nil)).
Lemma candidate_19: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len y).
Lemma candidate_20: forall (lf3 : natural), @eq natural lf3 (lf3).
Lemma candidate_21: forall (lf3 : natural) (y : lst), @eq natural lf3 (len (lfappend y (Nil))).
Lemma candidate_22: forall (y : lst), @eq natural (len (lfappend y Nil))   (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_23: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_24: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend y Nil)).
Lemma candidate_25: forall (y : lst), @eq natural (len (lfappend y Nil)) (len y).
Lemma candidate_26: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend (lfappend y Nil) Nil) Nil).
Lemma candidate_27: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend y Nil) Nil).
Lemma candidate_28: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_29: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_30: @eq lst Nil (Nil).
Lemma candidate_31: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_32: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_33: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_34: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_35: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_36: forall (lf2 : lst), @eq natural (len (lfappend (lfappend (lfappend lf2 Nil) Nil) Nil)) (len lf2).
Lemma candidate_37: forall (lf2 : lst), @eq natural (len (lfappend (lfappend lf2 Nil) Nil)) (len lf2).
Lemma candidate_38: forall (lf2 : lst), @eq natural (len (lfappend lf2 Nil)) (len lf2).
Lemma candidate_39: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_40: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_41: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_42: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_43: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_44: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_45: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_46: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_47: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_48: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (lfappend (lfappend lf2 Nil) Nil) Nil)).
Lemma candidate_49: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_50: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_51: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_52: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_53: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_54: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_55: forall (y : lst), @eq natural (len y) (len (y)).
Lemma candidate_56: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend lf4 (lfappend y Nil))) (len (lfappend y lf4)).
Lemma candidate_57: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y (lfappend lf4 Nil))) (len (lfappend y lf4)).
Lemma candidate_58: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend lf4 y)) (len (lfappend y lf4)).
Lemma candidate_59: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y lf4)).
Lemma candidate_60: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y Nil)) (len (lfappend y lf4)).
Lemma candidate_61: forall (y : lst) (lf4 : lst), @eq natural (len y) (len (lfappend y lf4)).
Lemma candidate_62: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_63: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_64: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_65: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_66: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend lf4 (lfappend y Nil)).
Lemma candidate_67: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_68: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend lf4 y).
Lemma candidate_69: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y lf4).
Lemma candidate_70: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y Nil).
Lemma candidate_71: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (y).
Lemma candidate_72: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_73: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_74: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_75: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_76: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend lf4 (lfappend y Nil))).
Lemma candidate_77: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y (lfappend lf4 Nil))).
Lemma candidate_78: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend lf4 y)).
Lemma candidate_79: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y lf4)).
Lemma candidate_80: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y Nil)).
Lemma candidate_81: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 228 seconds
Duplicates removed: 41
Filtered by Quickchick: 9
Filtered by script: 15
Remaining: 16

Lemmas: 
Lemma candidate_29: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_27: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend y Nil) Nil).
Lemma candidate_9: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_33: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_37: forall (lf2 : lst), @eq natural (len (lfappend (lfappend lf2 Nil) Nil)) (len lf2).
Lemma candidate_4: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_26: forall (y : lst), @eq lst (lfappend y Nil) (lfappend (lfappend (lfappend y Nil) Nil) Nil).
Lemma candidate_57: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y (lfappend lf4 Nil))) (len (lfappend y lf4)).
Lemma candidate_56: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend lf4 (lfappend y Nil))) (len (lfappend y lf4)).
Lemma candidate_32: forall (y : lst), @eq natural (len y) (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
Lemma candidate_23: forall (y : lst), @eq natural (len (lfappend y Nil)) (len (lfappend (lfappend y Nil) Nil)).
Lemma candidate_15: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend y (lfappend lf4 Nil))).
Lemma candidate_14: forall (y : lst) (lf4 : lst), @eq natural (len (lfappend y lf4)) (len (lfappend lf4 (lfappend y Nil))).
Lemma candidate_36: forall (lf2 : lst), @eq natural (len (lfappend (lfappend (lfappend lf2 Nil) Nil) Nil)) (len lf2).
Lemma candidate_3: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend (lfappend (lfappend lf2 Nil) Nil) Nil)).
Lemma candidate_22: forall (y : lst), @eq natural (len (lfappend y Nil))   (len (lfappend (lfappend (lfappend y Nil) Nil) Nil)).
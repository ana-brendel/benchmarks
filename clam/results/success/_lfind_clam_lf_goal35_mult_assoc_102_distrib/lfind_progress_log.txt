File Information
- File name: goal35
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal35_mult_assoc_102_distrib
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal35_mult_assoc_102_distrib
- Namespace: adtind
- Proof name: mult_assoc
- Theorem: Theorem mult_assoc: forall x0 y0 z0 : natural,
@eq natural (mult (mult x0 y0) z0) (mult x0 (mult y0 z0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z))

* Hypothesis:
IHx : @eq natural (mult (mult x y) z) (mult x (mult y z))
x : natural
y : natural
z : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : natural

* Terms:
mult y z : natural
mult x (mult y z) : natural
mult x y : natural
mult (plus (mult x y) y) z : natural
x : natural
@eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z)) : Prop
plus (mult x y) y : natural
y : natural
z : natural
plus (mult x (mult y z)) (mult y z) : natural
natural : Set
mult (mult x y) z : natural
@eq natural (mult (mult x y) z) (mult x (mult y z)) : Prop

* Functions:
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = mult x (mult y z)
lf1 : natural = plus (mult x (mult y z)) (mult y z)
lf4 : natural = plus (mult x y) y
lf5 : natural = mult y z
lf2 : natural = mult (plus (mult x y) y) z
lf6 : natural = mult x y

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj64: forall (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z)).


<---VALIDITY CHECKS--->
Time elapsed: 45 seconds
Valid:
Lemma conj64: forall (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z)).

Invalid:
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 65 seconds
Generalizations:
Lemma conj63_imp: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)),
@eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj31_imp: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj27_imp: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 104 seconds
Valid:
Lemma conj31_imp: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj63_imp: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)),
@eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj27_imp: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).


<---CREATE SKETCHES--->
Time elapsed: 104 seconds
Sketches:
Sketch conj3_sketch0 : @eq natural (##hole##) lf1
Sketch conj3_term_sketch0 : @eq natural (mult lf4 z) (##hole##)
Sketch conj11_sketch0 : @eq natural (##hole##) lf1
Sketch conj11_sketch1 : @eq natural (mult (##hole##) z) lf1
Sketch conj11_term_sketch0 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (plus lf6 y) (##hole##)
Sketch conj12_sketch0 : @eq natural (mult (plus (##hole##) y) z) lf1
Sketch conj12_sketch1 : @eq natural (##hole##) lf1
Sketch conj12_sketch2 : @eq natural (mult (##hole##) z) lf1
Sketch conj12_term_sketch0 : @eq natural (mult x y) (##hole##)
Sketch conj12_term_sketch1 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj12_term_sketch2 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj17_sketch0 : @eq natural lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj19_sketch0 : @eq natural (##hole##) (plus lf3 lf5)
Sketch conj19_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj19_term_sketch0 : @eq natural (mult lf4 z) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj21_sketch0 : @eq natural lf2 (plus lf3 (##hole##))
Sketch conj21_sketch1 : @eq natural lf2 (##hole##)
Sketch conj21_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj21_term_sketch1 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj23_sketch0 : @eq natural (mult lf4 z) (plus lf3 (##hole##))
Sketch conj23_sketch1 : @eq natural (##hole##) (plus lf3 (mult y z))
Sketch conj23_sketch2 : @eq natural (mult lf4 z) (##hole##)
Sketch conj23_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj23_term_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj23_term_sketch2 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj27_sketch0 : @eq natural (##hole##) (plus lf3 lf5)
Sketch conj27_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_sketch2 : @eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj27_term_sketch0 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_term_sketch1 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (plus lf6 y) (##hole##)
Sketch conj27_imp_sketch0 : forall _ : @eq natural (##hole##) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 lf5)
Sketch conj27_imp_sketch1 : forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (##hole##) (plus lf3 lf5)
Sketch conj27_imp_sketch2 : forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_imp_sketch3 : forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj27_imp_term_sketch0 : @eq natural (mult lf6 z) (##hole##)
Sketch conj27_imp_term_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_imp_term_sketch2 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj27_imp_term_sketch3 : @eq natural (plus lf6 y) (##hole##)
Sketch conj28_sketch0 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj28_sketch1 : @eq natural (mult (plus (##hole##) y) z) (plus lf3 lf5)
Sketch conj28_sketch2 : @eq natural (##hole##) (plus lf3 lf5)
Sketch conj28_sketch3 : @eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj28_term_sketch0 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj28_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj28_term_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj28_term_sketch3 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj31_sketch0 : @eq natural (mult (plus lf6 y) z) (plus lf3 (##hole##))
Sketch conj31_sketch1 : @eq natural (##hole##) (plus lf3 (mult y z))
Sketch conj31_sketch2 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj31_sketch3 : @eq natural (mult (##hole##) z) (plus lf3 (mult y z))
Sketch conj31_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj31_term_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj31_term_sketch3 : @eq natural (plus lf6 y) (##hole##)
Sketch conj32_sketch0 : @eq natural (mult (plus (mult x y) y) z) (plus lf3 (##hole##))
Sketch conj32_sketch1 : @eq natural (mult (plus (##hole##) y) z) (plus lf3 (mult y z))
Sketch conj32_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj32_sketch3 : @eq natural (##hole##) (plus lf3 (mult y z))
Sketch conj32_sketch4 : @eq natural (mult (##hole##) z) (plus lf3 (mult y z))
Sketch conj32_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj32_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj32_term_sketch2 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj32_term_sketch3 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj32_term_sketch4 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj49_sketch0 : @eq natural lf2 (##hole##)
Sketch conj49_sketch1 : @eq natural lf2 (plus (##hole##) lf5)
Sketch conj49_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj49_term_sketch1 : @eq natural (mult x lf5) (##hole##)
Sketch conj51_sketch0 : @eq natural (mult lf4 z) (##hole##)
Sketch conj51_sketch1 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj51_sketch2 : @eq natural (mult lf4 z) (plus (##hole##) lf5)
Sketch conj51_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj51_term_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj51_term_sketch2 : @eq natural (mult x lf5) (##hole##)
Sketch conj53_sketch0 : @eq natural lf2 (plus (mult x (##hole##)) (##hole##))
Sketch conj53_sketch1 : @eq natural lf2 (plus (##hole##) (mult y z))
Sketch conj53_sketch2 : @eq natural lf2 (##hole##)
Sketch conj53_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj53_term_sketch1 : @eq natural (mult x (mult y z)) (##hole##)
Sketch conj53_term_sketch2 : @eq natural (plus (mult x (mult y z)) (mult y z)) (##hole##)
Sketch conj55_sketch0 : @eq natural (mult lf4 z) (plus (mult x (##hole##)) (##hole##))
Sketch conj55_sketch1 : @eq natural (##hole##) (plus (mult x (mult y z)) (mult y z))
Sketch conj55_sketch2 : @eq natural (mult lf4 z) (plus (##hole##) (mult y z))
Sketch conj55_sketch3 : @eq natural (mult lf4 z) (##hole##)
Sketch conj55_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj55_term_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj55_term_sketch2 : @eq natural (mult x (mult y z)) (##hole##)
Sketch conj55_term_sketch3 : @eq natural (plus (mult x (mult y z)) (mult y z)) (##hole##)
Sketch conj59_sketch0 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj59_sketch1 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj59_sketch2 : @eq natural (mult (##hole##) z) (plus (mult x lf5) lf5)
Sketch conj59_sketch3 : @eq natural (mult (plus lf6 y) z) (plus (##hole##) lf5)
Sketch conj59_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj59_term_sketch2 : @eq natural (plus lf6 y) (##hole##)
Sketch conj59_term_sketch3 : @eq natural (mult x lf5) (##hole##)
Sketch conj60_sketch0 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj60_sketch1 : @eq natural (mult (plus (##hole##) y) z) (plus (mult x lf5) lf5)
Sketch conj60_sketch2 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj60_sketch3 : @eq natural (mult (##hole##) z) (plus (mult x lf5) lf5)
Sketch conj60_sketch4 : @eq natural (mult (plus (mult x y) y) z) (plus (##hole##) lf5)
Sketch conj60_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj60_term_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj60_term_sketch3 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj60_term_sketch4 : @eq natural (mult x lf5) (##hole##)
Sketch conj63_sketch0 : @eq natural (mult (plus lf6 y) z) (plus (mult x (##hole##)) (##hole##))
Sketch conj63_sketch1 : @eq natural (mult (plus lf6 y) z) (plus (##hole##) (mult y z))
Sketch conj63_sketch2 : @eq natural (##hole##) (plus (mult x (mult y z)) (mult y z))
Sketch conj63_sketch3 : @eq natural (mult (##hole##) z) (plus (mult x (mult y z)) (mult y z))
Sketch conj63_sketch4 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj63_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj63_term_sketch1 : @eq natural (mult x (mult y z)) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj63_term_sketch3 : @eq natural (plus lf6 y) (##hole##)
Sketch conj63_term_sketch4 : @eq natural (plus (mult x (mult y z)) (mult y z)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 371 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_9
Sketch conj12_sketch0 --> Problem  synth_6
Sketch conj28_sketch0 --> Problem  synth_8
Sketch conj53_sketch1 --> Problem  synth_32
Sketch conj60_term_sketch1 --> Problem  synth_7
Sketch conj59_term_sketch2 --> Problem  synth_5
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj63_sketch4 --> Problem  synth_4
Sketch conj23_sketch0 --> Problem  synth_15
Sketch conj60_term_sketch4 --> Problem  synth_29
Sketch conj59_term_sketch1 --> Problem  synth_4
Sketch conj59_sketch1 --> Problem  synth_28
Sketch conj53_term_sketch2 --> Problem  synth_8
Sketch conj60_sketch0 --> Problem  synth_8
Sketch conj53_term_sketch0 --> Problem  synth_13
Sketch conj11_sketch1 --> Problem  synth_3
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj28_term_sketch1 --> Problem  synth_7
Sketch conj21_term_sketch1 --> Problem  synth_14
Sketch conj63_term_sketch0 --> Problem  synth_13
Sketch conj31_sketch0 --> Problem  synth_23
Sketch conj31_term_sketch3 --> Problem  synth_5
Sketch conj55_sketch3 --> Problem  synth_2
Sketch conj31_term_sketch1 --> Problem  synth_4
Sketch conj12_term_sketch0 --> Problem  synth_7
Sketch conj32_sketch0 --> Problem  synth_25
Sketch conj60_term_sketch3 --> Problem  synth_9
Sketch conj23_sketch1 --> Problem  synth_14
Sketch conj60_term_sketch2 --> Problem  synth_8
Sketch conj60_sketch1 --> Problem  synth_38
Sketch conj55_sketch1 --> Problem  synth_8
Sketch conj28_term_sketch3 --> Problem  synth_9
Sketch conj60_sketch2 --> Problem  synth_28
Sketch conj59_sketch3 --> Problem  synth_37
Sketch conj12_sketch1 --> Problem  synth_1
Sketch conj27_term_sketch2 --> Problem  synth_5
Sketch conj12_sketch2 --> Problem  synth_3
Sketch conj63_term_sketch4 --> Problem  synth_8
Sketch conj32_sketch3 --> Problem  synth_14
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_36
Sketch conj32_term_sketch3 --> Problem  synth_8
Sketch conj28_sketch2 --> Problem  synth_11
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj23_term_sketch2 --> Problem  synth_14
Sketch conj21_sketch0 --> Problem  synth_12
Sketch conj27_imp_sketch0 --> Problem  synth_17
Sketch conj19_term_sketch1 --> Problem  synth_11
Sketch conj51_term_sketch2 --> Problem  synth_29
Sketch conj27_sketch2 --> Problem  synth_16
Sketch conj28_term_sketch2 --> Problem  synth_8
Sketch conj60_term_sketch0 --> Problem  synth_28
Sketch conj31_sketch2 --> Problem  synth_4
Sketch conj27_sketch1 --> Problem  synth_4
Sketch conj53_sketch0 --> Problem  synth_31
Sketch conj60_sketch3 --> Problem  synth_36
Sketch conj32_term_sketch2 --> Problem  synth_14
Sketch conj51_sketch0 --> Problem  synth_2
Sketch conj31_sketch3 --> Problem  synth_24
Sketch conj23_term_sketch0 --> Problem  synth_13
Sketch conj12_term_sketch2 --> Problem  synth_9
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj32_sketch2 --> Problem  synth_8
Sketch conj63_term_sketch1 --> Problem  synth_33
Sketch conj32_sketch1 --> Problem  synth_26
Sketch conj27_imp_sketch3 --> Problem  synth_20
Sketch conj51_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch0 --> Problem  synth_28
Sketch conj55_term_sketch0 --> Problem  synth_13
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj23_sketch2 --> Problem  synth_2
Sketch conj19_sketch0 --> Problem  synth_11
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj49_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_8
Sketch conj55_term_sketch1 --> Problem  synth_2
Sketch conj27_imp_term_sketch0 --> Problem  synth_21
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_4
Sketch conj49_term_sketch1 --> Problem  synth_29
Sketch conj12_term_sketch1 --> Problem  synth_8
Sketch conj23_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch0 --> Problem  synth_40
Sketch conj55_term_sketch3 --> Problem  synth_8
Sketch conj63_sketch3 --> Problem  synth_42
Sketch conj59_term_sketch0 --> Problem  synth_28
Sketch conj53_term_sketch1 --> Problem  synth_33
Sketch conj31_term_sketch0 --> Problem  synth_13
Sketch conj28_term_sketch0 --> Problem  synth_11
Sketch conj59_term_sketch3 --> Problem  synth_29
Sketch conj51_sketch1 --> Problem  synth_28
Sketch conj55_sketch0 --> Problem  synth_34
Sketch conj63_sketch1 --> Problem  synth_41
Sketch conj53_sketch2 --> Problem  synth_10
Sketch conj27_sketch0 --> Problem  synth_11
Sketch conj32_term_sketch0 --> Problem  synth_13
Sketch conj21_term_sketch0 --> Problem  synth_13
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj28_sketch3 --> Problem  synth_16
Sketch conj27_imp_term_sketch2 --> Problem  synth_11
Sketch conj28_sketch1 --> Problem  synth_22
Sketch conj32_sketch4 --> Problem  synth_24
Sketch conj27_imp_term_sketch3 --> Problem  synth_5
Sketch conj27_imp_sketch1 --> Problem  synth_18
Sketch conj21_sketch1 --> Problem  synth_10
Sketch conj32_term_sketch1 --> Problem  synth_7
Sketch conj27_imp_term_sketch1 --> Problem  synth_4
Sketch conj60_sketch4 --> Problem  synth_39
Sketch conj27_imp_sketch2 --> Problem  synth_19
Sketch conj31_sketch1 --> Problem  synth_14
Sketch conj31_term_sketch2 --> Problem  synth_14
Sketch conj11_sketch0 --> Problem  synth_1
Sketch conj55_term_sketch2 --> Problem  synth_33
Sketch conj27_term_sketch0 --> Problem  synth_4
Sketch conj51_sketch2 --> Problem  synth_30
Sketch conj63_term_sketch2 --> Problem  synth_4
Sketch conj55_sketch2 --> Problem  synth_35
Sketch conj49_sketch1 --> Problem  synth_27
Sketch conj49_term_sketch0 --> Problem  synth_28


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 919 seconds

Problem: synth_28

Problem: synth_17
 mult lf6 lf5
 mult lf3 lf6
 mult z lf6
 mult lf5 lf6
 plus lf3 Zero
 lf3

Problem: synth_29
 mult lf5 x
 mult x lf5

Problem: synth_26

Problem: synth_9
 plus y (mult x y)
 plus y (mult y x)
 plus (mult x y) y
 mult y (Succ x)

Problem: synth_30

Problem: synth_11
 plus lf5 lf3
 plus lf3 lf5

Problem: synth_39
 mult lf5 x
 mult x lf5

Problem: synth_1
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_15

Problem: synth_31

Problem: synth_14

Problem: synth_8

Problem: synth_34

Problem: synth_12

Problem: synth_5
 plus lf6 (plus y Zero)
 plus y (plus lf6 Zero)
 plus lf6 y
 plus y lf6

Problem: synth_37
 mult lf6 z
 mult lf6 lf5
 mult z lf6
 mult lf5 lf6

Problem: synth_2
 mult lf4 (plus z Zero)
 mult z (plus lf4 Zero)
 mult lf4 z
 mult z lf4

Problem: synth_22

Problem: synth_20

Problem: synth_18
 mult lf5 (Succ lf6)
 plus lf5 lf3
 plus lf3 lf5

Problem: synth_21
 qexp lf6 z z
 qexp z z (mult lf6 z)
 qexp z lf6 (mult lf6 z)
 qexp z lf6 lf6
 mult lf6 z
 mult z lf6

Problem: synth_41
 qexp z y (mult lf6 z)
 qexp z lf6 (mult lf6 z)
 qexp z y lf6
 qexp z lf6 lf6
 mult lf6 z
 mult z lf6

Problem: synth_25
 qexp y lf3 (mult z y)
 qexp y x (mult z y)
 qexp z lf3 (mult y z)
 qexp z x (mult y z)
 mult y z
 mult z y

Problem: synth_13
 mult y (plus z Zero)
 mult z (plus y Zero)
 mult y z
 mult z y

Problem: synth_6

Problem: synth_7
 mult x (plus y Zero)
 mult y (plus x Zero)
 mult x y
 mult y x

Problem: synth_4
 mult z (plus lf6 y)
 mult z (plus y lf6)

Problem: synth_38
 mult x y
 mult y x

Problem: synth_23
 qexp y lf3 (mult z y)
 qexp y lf6 (mult z y)
 qexp z lf3 (mult y z)
 qexp z lf6 (mult y z)
 mult y z
 mult z y

Problem: synth_27

Problem: synth_42
 plus y (mult x y)
 plus y (mult y x)
 plus (mult x y) y
 mult y (Succ x)

Problem: synth_16

Problem: synth_19
 mult z (plus lf6 y)
 mult z (plus y lf6)

Problem: synth_40
 qexp y x (mult z y)
 qexp y lf6 (mult z y)
 qexp z x (mult y z)
 qexp z lf6 (mult y z)
 mult y z
 mult z y

Problem: synth_10
 mult lf2 (Succ Zero)
 plus lf2 Zero
 lf2

Problem: synth_33

Problem: synth_24

Problem: synth_3

Problem: synth_32

Problem: synth_36

Problem: synth_35

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 920 seconds
Lemmas:
Lemma candidate_1: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_2: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_3: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_4: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_5: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_6: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_7: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_8: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_9: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_10: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_11: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_12: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_13: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_14: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_15: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_16: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_17: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_18: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_19: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_20: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_21: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_22: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_23: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_24: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_25: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_26: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_27: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_28: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_29: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_32: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_33: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_34: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_35: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_36: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_37: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_38: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_39: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_40: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_41: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_42: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_43: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_44: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_45: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_46: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_47: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_48: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_49: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_50: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_51: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_52: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_53: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_54: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_55: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_56: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_57: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_58: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_59: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_60: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_61: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_62: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_63: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_64: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_65: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_66: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_67: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_68: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_69: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_70: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_71: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_72: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_73: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_74: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_75: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_76: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_77: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_78: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_79: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_80: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 lf5) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_81: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf3 lf6) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_82: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult z lf6) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_83: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf5 lf6) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_84: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (plus lf3 Zero) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_85: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (lf3) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_86: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult lf5 (Succ lf6)) (plus lf3 lf5).
Lemma candidate_87: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_88: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_89: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_90: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_91: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (qexp lf6 z z).
Lemma candidate_92: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (qexp z z (mult lf6 z)).
Lemma candidate_93: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (qexp z lf6 (mult lf6 z)).
Lemma candidate_94: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (qexp z lf6 lf6).
Lemma candidate_95: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult lf6 z).
Lemma candidate_96: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z lf6).
Lemma candidate_97: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_98: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_99: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_100: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_101: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_102: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_103: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_104: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_105: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_106: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_107: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_108: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_109: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_110: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_111: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_113: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_114: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_115: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_116: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_117: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (qexp y lf3 (mult z y))).
Lemma candidate_118: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (qexp y lf6 (mult z y))).
Lemma candidate_119: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (qexp z lf3 (mult y z))).
Lemma candidate_120: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (qexp z lf6 (mult y z))).
Lemma candidate_121: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_122: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult z y)).
Lemma candidate_123: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_124: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_125: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_126: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_127: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_128: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_129: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_130: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_131: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_132: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_133: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_134: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_135: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (qexp y lf3 (mult z y))).
Lemma candidate_136: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (qexp y x (mult z y))).
Lemma candidate_137: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (qexp z lf3 (mult y z))).
Lemma candidate_138: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (qexp z x (mult y z))).
Lemma candidate_139: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_140: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult z y)).
Lemma candidate_141: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_142: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_143: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_144: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_145: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_146: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_147: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_148: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_149: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_150: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_151: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_152: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_153: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_154: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_155: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_156: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_157: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_158: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_159: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_160: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_161: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_162: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_163: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_164: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_165: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_166: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_167: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_168: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_169: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_170: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_171: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_172: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_173: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_174: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_175: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_176: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_177: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_178: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_179: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_180: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_181: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_182: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_183: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_184: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_185: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_186: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_187: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_188: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_189: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 z) lf5).
Lemma candidate_190: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 lf5) lf5).
Lemma candidate_191: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z lf6) lf5).
Lemma candidate_192: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf5 lf6) lf5).
Lemma candidate_193: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_194: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_195: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_196: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_197: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_198: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_199: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_200: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_201: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma candidate_202: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult y x) y) z) (plus (mult x lf5) lf5).
Lemma candidate_203: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult lf5 x) lf5).
Lemma candidate_204: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma candidate_205: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_206: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_207: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_208: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_209: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_210: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_211: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_212: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_213: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_214: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_215: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (qexp y x (mult z y))) (qexp y x (mult z y))).
Lemma candidate_216: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (qexp y lf6 (mult z y))) (qexp y lf6 (mult z y))).
Lemma candidate_217: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (qexp z x (mult y z))) (qexp z x (mult y z))).
Lemma candidate_218: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (qexp z lf6 (mult y z))) (qexp z lf6 (mult y z))).
Lemma candidate_219: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_220: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_221: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qexp z y (mult lf6 z)) (mult y z)).
Lemma candidate_222: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qexp z lf6 (mult lf6 z)) (mult y z)).
Lemma candidate_223: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qexp z y lf6) (mult y z)).
Lemma candidate_224: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qexp z lf6 lf6) (mult y z)).
Lemma candidate_225: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 z) (mult y z)).
Lemma candidate_226: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z lf6) (mult y z)).
Lemma candidate_227: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult x y)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_228: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult y x)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_229: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_230: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult y (Succ x)) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_231: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_232: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_233: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_234: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_235: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_236: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_237: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_238: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_239: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_240: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_241: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_242: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1166 seconds
Duplicates removed: 155
Filtered by Quickchick: 39
Filtered by script: 11
Remaining: 37

Lemmas: 
Lemma candidate_33: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_6: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_55: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_27: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_156: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_96: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z lf6).
Lemma candidate_20: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_11: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_32: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_5: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_37: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_35: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_53: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_52: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_25: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_24: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_18: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_17: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_9: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_8: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_29: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_28: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_16: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_15: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_226: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z lf6) (mult y z)).
Lemma candidate_225: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 z) (mult y z)).
Lemma candidate_224: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qexp z lf6 lf6) (mult y z)).
Lemma candidate_230: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult y (Succ x)) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_228: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult y x)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_227: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult x y)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_87: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_90: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_89: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_2: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_3: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_4: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
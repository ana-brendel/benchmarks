File Information
- File name: goal30
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal30_theorem0_73_append_nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal30_theorem0_73_append_nil
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : lst, @eq lst (rev (lfappend (rev x0) Nil)) x0.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (lfappend (rev x) Nil)) x

* Hypothesis:
x : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
x : lst

* Terms:
@eq lst (rev (lfappend (rev x) Nil)) x : Prop
x : lst
lfappend (rev x) Nil : lst
rev (lfappend (rev x) Nil) : lst
lst : Set
Nil : lst
rev x : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = rev x
lf1 : lst = rev (lfappend (rev x) Nil)
lf4 : lst = Nil
lf2 : lst = lfappend (rev x) Nil

Generalizations:
Lemma conj1: forall (x : lst) (lf1 : lst), @eq lst lf1 x.
Lemma conj5: forall (lf2 : lst) (x : lst), @eq lst (rev lf2) x.
Lemma conj6: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 lf4)) x.
Lemma conj8: forall (x : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) x.
Lemma conj14: forall (x : lst) (lf4 : lst), @eq lst (rev (lfappend (rev x) lf4)) x.
Lemma conj16: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.


<---VALIDITY CHECKS--->
Time elapsed: 28 seconds
Valid:
Lemma conj16: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.

Invalid:
Lemma conj14: forall (x : lst) (lf4 : lst), @eq lst (rev (lfappend (rev x) lf4)) x.
Lemma conj8: forall (x : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) x.
Lemma conj6: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 lf4)) x.
Lemma conj5: forall (lf2 : lst) (x : lst), @eq lst (rev lf2) x.
Lemma conj1: forall (x : lst) (lf1 : lst), @eq lst lf1 x.

<---ADD IMPLICATIONS--->
Time elapsed: 29 seconds
Generalizations:
Lemma conj14: forall (x : lst) (lf4 : lst), @eq lst (rev (lfappend (rev x) lf4)) x.
Lemma conj8: forall (x : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) x.
Lemma conj6: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 lf4)) x.
Lemma conj5: forall (lf2 : lst) (x : lst), @eq lst (rev lf2) x.
Lemma conj1: forall (x : lst) (lf1 : lst), @eq lst lf1 x.


<---VALIDITY CHECKS--->
Time elapsed: 36 seconds
Valid:

Invalid:
Lemma conj1: forall (x : lst) (lf1 : lst), @eq lst lf1 x.
Lemma conj5: forall (lf2 : lst) (x : lst), @eq lst (rev lf2) x.
Lemma conj6: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 lf4)) x.
Lemma conj8: forall (x : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) x.
Lemma conj14: forall (x : lst) (lf4 : lst), @eq lst (rev (lfappend (rev x) lf4)) x.


<---CREATE SKETCHES--->
Time elapsed: 36 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst (##hole##) x
Sketch conj5_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj6_sketch0 : @eq lst (##hole##) x
Sketch conj6_sketch1 : @eq lst (rev (##hole##)) x
Sketch conj6_term_sketch0 : @eq lst (rev (lfappend lf3 lf4)) (##hole##)
Sketch conj6_term_sketch1 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj8_sketch0 : @eq lst (rev (##hole##)) x
Sketch conj8_sketch1 : @eq lst (##hole##) x
Sketch conj8_sketch2 : @eq lst (rev (lfappend lf3 (##hole##))) x
Sketch conj8_term_sketch0 : @eq lst (lfappend lf3 Nil) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (rev (lfappend lf3 Nil)) (##hole##)
Sketch conj8_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj14_sketch0 : @eq lst (rev (##hole##)) x
Sketch conj14_sketch1 : @eq lst (##hole##) x
Sketch conj14_sketch2 : @eq lst (rev (lfappend (##hole##) lf4)) x
Sketch conj14_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (rev (lfappend (rev x) lf4)) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (rev x) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 115 seconds
Problems per Sketch:
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj14_sketch2 --> Problem  synth_10
Sketch conj14_term_sketch2 --> Problem  synth_3
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj8_sketch1 --> Problem  synth_1
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj14_sketch0 --> Problem  synth_3
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj14_term_sketch0 --> Problem  synth_10
Sketch conj8_sketch2 --> Problem  synth_6
Sketch conj8_sketch0 --> Problem  synth_3
Sketch conj14_term_sketch1 --> Problem  synth_11
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj8_term_sketch2 --> Problem  synth_9
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj14_sketch1 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 154 seconds

Problem: synth_10
 rev (lfappend lf4 x)
 rev (lfappend x Nil)
 lfappend (rev x) lf4
 lfappend (rev x) Nil
 lfappend lf4 (rev x)
 rev x

Problem: synth_8
 lfappend (rev (lfappend lf3 Nil)) Nil
 lfappend (lfappend (rev lf3) Nil) Nil
 rev (rev (rev lf3))
 rev (lfappend lf3 Nil)
 lfappend (rev lf3) Nil
 rev lf3

Problem: synth_3
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_9
 Nil

Problem: synth_6
 Nil

Problem: synth_11
 lfappend x (rev lf4)
 rev (rev x)
 lfappend x lf4
 lfappend lf4 x
 lfappend x Nil
 x

Problem: synth_7
 rev (lfappend (rev lf3) Nil)
 lfappend (rev (rev lf3)) Nil
 lfappend (lfappend lf3 Nil) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_5
 lfappend lf3 (rev lf4)
 rev (rev lf3)
 lfappend lf4 lf3
 lfappend lf3 lf4
 lfappend lf3 Nil
 lf3

Problem: synth_4
 rev (lfappend lf3 lf4)
 rev (lfappend lf3 Nil)
 lfappend (rev lf3) lf4
 lfappend (rev lf3) Nil
 lfappend lf4 (rev lf3)
 rev lf3

Problem: synth_1
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_2
 lfappend (rev (lfappend lf2 Nil)) Nil
 lfappend (lfappend (rev lf2) Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 rev lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 154 seconds
Lemmas:
Lemma candidate_1: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_2: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_3: forall (x : lst), @eq lst (lfappend (rev (rev x)) Nil) x.
Lemma candidate_4: forall (x : lst), @eq lst (lfappend (lfappend x Nil) Nil) x.
Lemma candidate_5: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_6: forall (x : lst), @eq lst (lfappend x Nil) x.
Lemma candidate_7: forall (x : lst), @eq lst (x) x.
Lemma candidate_8: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_13: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_14: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_15: forall (x : lst), @eq lst (lfappend (rev (rev x)) Nil) x.
Lemma candidate_16: forall (x : lst), @eq lst (lfappend (lfappend x Nil) Nil) x.
Lemma candidate_17: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_18: forall (x : lst), @eq lst (lfappend x Nil) x.
Lemma candidate_19: forall (x : lst), @eq lst (x) x.
Lemma candidate_20: forall (x : lst), @eq lst (rev (lfappend (rev (lfappend x Nil)) Nil)) x.
Lemma candidate_21: forall (x : lst), @eq lst (rev (lfappend (lfappend (rev x) Nil) Nil)) x.
Lemma candidate_22: forall (x : lst), @eq lst (rev (rev (rev (rev x)))) x.
Lemma candidate_23: forall (x : lst), @eq lst (rev (rev (lfappend x Nil))) x.
Lemma candidate_24: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_25: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_26: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (lfappend lf3 lf4)) (rev (lfappend lf3 lf4)).
Lemma candidate_27: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (lfappend lf3 lf4)) (rev (lfappend lf3 Nil)).
Lemma candidate_28: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (lfappend lf3 lf4)) (lfappend (rev lf3) lf4).
Lemma candidate_29: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (lfappend lf3 lf4)) (lfappend (rev lf3) Nil).
Lemma candidate_30: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (lfappend lf3 lf4)) (lfappend lf4 (rev lf3)).
Lemma candidate_31: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (lfappend lf3 lf4)) (rev lf3).
Lemma candidate_32: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 (rev lf4)).
Lemma candidate_33: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (rev lf3)).
Lemma candidate_34: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf4 lf3).
Lemma candidate_35: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_36: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 Nil).
Lemma candidate_37: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lf3).
Lemma candidate_38: forall (x : lst), @eq lst (rev (lfappend (rev (lfappend x Nil)) Nil)) x.
Lemma candidate_39: forall (x : lst), @eq lst (rev (lfappend (lfappend (rev x) Nil) Nil)) x.
Lemma candidate_40: forall (x : lst), @eq lst (rev (rev (rev (rev x)))) x.
Lemma candidate_41: forall (x : lst), @eq lst (rev (rev (lfappend x Nil))) x.
Lemma candidate_42: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_43: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_44: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_45: forall (x : lst), @eq lst (lfappend (rev (rev x)) Nil) x.
Lemma candidate_46: forall (x : lst), @eq lst (lfappend (lfappend x Nil) Nil) x.
Lemma candidate_47: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_48: forall (x : lst), @eq lst (lfappend x Nil) x.
Lemma candidate_49: forall (x : lst), @eq lst (x) x.
Lemma candidate_50: forall (lf3 : lst) (x : lst), @eq lst (rev (lfappend lf3 (Nil))) x.
Lemma candidate_51: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (lfappend (rev lf3) Nil)).
Lemma candidate_52: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend (rev (rev lf3)) Nil).
Lemma candidate_53: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_54: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_55: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_56: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_57: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (lfappend (rev (lfappend lf3 Nil)) Nil).
Lemma candidate_58: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_59: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev (rev (rev lf3))).
Lemma candidate_60: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev (lfappend lf3 Nil)).
Lemma candidate_61: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (lfappend (rev lf3) Nil).
Lemma candidate_62: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_63: @eq lst Nil (Nil).
Lemma candidate_64: forall (x : lst), @eq lst (rev (lfappend (rev (lfappend x Nil)) Nil)) x.
Lemma candidate_65: forall (x : lst), @eq lst (rev (lfappend (lfappend (rev x) Nil) Nil)) x.
Lemma candidate_66: forall (x : lst), @eq lst (rev (rev (rev (rev x)))) x.
Lemma candidate_67: forall (x : lst), @eq lst (rev (rev (lfappend x Nil))) x.
Lemma candidate_68: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_69: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_70: forall (x : lst), @eq lst (rev (lfappend (rev x) Nil)) x.
Lemma candidate_71: forall (x : lst), @eq lst (lfappend (rev (rev x)) Nil) x.
Lemma candidate_72: forall (x : lst), @eq lst (lfappend (lfappend x Nil) Nil) x.
Lemma candidate_73: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_74: forall (x : lst), @eq lst (lfappend x Nil) x.
Lemma candidate_75: forall (x : lst), @eq lst (x) x.
Lemma candidate_76: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev (lfappend lf4 x)) lf4)) x.
Lemma candidate_77: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev (lfappend x Nil)) lf4)) x.
Lemma candidate_78: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (lfappend (rev x) lf4) lf4)) x.
Lemma candidate_79: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (lfappend (rev x) Nil) lf4)) x.
Lemma candidate_80: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (lfappend lf4 (rev x)) lf4)) x.
Lemma candidate_81: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) x.
Lemma candidate_82: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (lfappend lf4 x)).
Lemma candidate_83: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (lfappend x Nil)).
Lemma candidate_84: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_85: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) Nil).
Lemma candidate_86: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf4 (rev x)).
Lemma candidate_87: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev x).
Lemma candidate_88: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend x (rev lf4)).
Lemma candidate_89: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) (rev (rev x)).
Lemma candidate_90: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend x lf4).
Lemma candidate_91: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend lf4 x).
Lemma candidate_92: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend x Nil).
Lemma candidate_93: forall (lf4 : lst) (x : lst), @eq lst (rev (lfappend (rev x) lf4)) (x).
Lemma candidate_94: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_95: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_96: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_97: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_98: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_99: forall (x : lst), @eq lst (rev x) (rev x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 340 seconds
Duplicates removed: 34
Filtered by Quickchick: 28
Filtered by script: 9
Remaining: 28

Lemmas: 
Lemma candidate_5: forall (x : lst), @eq lst (rev (rev x)) x.
Lemma candidate_6: forall (x : lst), @eq lst (lfappend x Nil) x.
Lemma candidate_56: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_96: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_22: forall (x : lst), @eq lst (rev (rev (rev (rev x)))) x.
Lemma candidate_98: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_97: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_23: forall (x : lst), @eq lst (rev (rev (lfappend x Nil))) x.
Lemma candidate_3: forall (x : lst), @eq lst (lfappend (rev (rev x)) Nil) x.
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_4: forall (x : lst), @eq lst (lfappend (lfappend x Nil) Nil) x.
Lemma candidate_62: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev lf3).
Lemma candidate_54: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_95: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_94: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_21: forall (x : lst), @eq lst (rev (lfappend (lfappend (rev x) Nil) Nil)) x.
Lemma candidate_20: forall (x : lst), @eq lst (rev (lfappend (rev (lfappend x Nil)) Nil)) x.
Lemma candidate_59: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (rev (rev (rev lf3))).
Lemma candidate_61: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (lfappend (rev lf3) Nil).
Lemma candidate_52: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend (rev (rev lf3)) Nil).
Lemma candidate_51: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (lfappend (rev lf3) Nil)).
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_8: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_53: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend (lfappend lf3 Nil) Nil).
Lemma candidate_58: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (lfappend (lfappend (rev lf3) Nil) Nil).
Lemma candidate_57: forall (lf3 : lst), @eq lst (rev (lfappend lf3 Nil)) (lfappend (rev (lfappend lf3 Nil)) Nil).
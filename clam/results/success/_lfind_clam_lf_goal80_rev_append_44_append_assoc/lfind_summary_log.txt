LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal80_rev_append_44_append_assoc

Number of Lemmas: 1854
Number of Lemmas (after duplicates removed): 349
Number of Lemmas (after QuickChick used to filter): 217
* Number of Candidate Lemmas: 167

Time until ranking: 12146
Time to complete: 22355

Stuck state true independent of hypotheses: true

Category 1:
Count = 11

Lemma candidate_1078: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_12: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1104: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_11: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_6: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1169: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_10: forall (lf7 : lst) (n : natural) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_8: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1197: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_9: forall (lf7 : lst) (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_7: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).

Category 2:
Count = 19

Lemma candidate_160: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1643: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend x y)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1475: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_5: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1111: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_644: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_645: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1557: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_1141: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_4: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_2: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1821: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1588: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_661: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_1584: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_3: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_13: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_15: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_14: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).

Category 3 (provable):
Count = 18

Lemma candidate_32: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_20: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_30: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_170: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_168: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_167: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_47: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_36: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_34: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_23: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_185: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_1175: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_1173: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_93: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_91: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1357: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1166: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).

Category 3 (not provable):
Count = 119

Lemma candidate_31: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_528: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_192: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_530: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_194: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_29: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_28: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_527: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_526: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_191: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_190: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1070: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_169: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_166: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_49: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_46: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_35: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_25: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_22: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_1087: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_639: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_534: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_522: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_188: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_1071: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_1069: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_50: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_48: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_26: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_24: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_1088: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_640: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_535: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_523: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_186: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_184: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_669: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1089: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_641: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_536: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_524: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_187: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_670: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_637: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_532: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_520: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_638: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_533: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_521: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_1177: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_95: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_668: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1190: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1188: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1189: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_1187: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_1207: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil)))   (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1174: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1172: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1075: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_92: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_90: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_665: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_1610: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (rev (rev lf5))))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1436: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_1240: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend x (rev lf7))))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1102: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_181: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_1611: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil)))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1609: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1437: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1435: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_643: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_1362: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1171: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_328: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1639: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1471: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_1780: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1560: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1395: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1199: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_845: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_349: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_323: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1782: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1562: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1391: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1390: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1195: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1194: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_847: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_345: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_344: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1818: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1585: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_865: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1392: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1196: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_346: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1358: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1167: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_324: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1819: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1586: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_866: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1778: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1558: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_843: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1359: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1168: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_325: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1779: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1559: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_844: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_863: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
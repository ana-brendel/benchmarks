File Information
- File name: goal33
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal33_mult_assoc_107_distrib
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal33_mult_assoc_107_distrib
- Namespace: adtind
- Proof name: mult_assoc
- Theorem: Theorem mult_assoc: forall x0 y0 z0 : natural,
@eq natural (mult (mult x0 y0) z0) (mult x0 (mult y0 z0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z))

* Hypothesis:
IHx : @eq natural (mult (mult x y) z) (mult x (mult y z))
x : natural
y : natural
z : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : natural

* Terms:
mult y z : natural
mult x (mult y z) : natural
mult x y : natural
mult (plus (mult x y) y) z : natural
x : natural
@eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z)) : Prop
plus (mult x y) y : natural
y : natural
z : natural
plus (mult x (mult y z)) (mult y z) : natural
natural : Set
mult (mult x y) z : natural
@eq natural (mult (mult x y) z) (mult x (mult y z)) : Prop

* Functions:
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = mult x (mult y z)
lf1 : natural = plus (mult x (mult y z)) (mult y z)
lf4 : natural = plus (mult x y) y
lf5 : natural = mult y z
lf2 : natural = mult (plus (mult x y) y) z
lf6 : natural = mult x y

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj64: forall (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z)).


<---VALIDITY CHECKS--->
Time elapsed: 56 seconds
Valid:
Lemma conj64: forall (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z)
  (plus (mult x (mult y z)) (mult y z)).

Invalid:
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 96 seconds
Generalizations:
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj63_imp: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)),
@eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj31_imp: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj28_imp: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj27_imp: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 152 seconds
Valid:
Lemma conj31_imp: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj63_imp: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)),
@eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj3: forall (lf4 : natural) (lf1 : natural) (z : natural), @eq natural (mult lf4 z) lf1.
Lemma conj11: forall (lf6 : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) lf1.
Lemma conj12: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) lf1.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural lf2 (plus lf3 lf5).
Lemma conj19: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 lf5).
Lemma conj21: forall (lf2 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural lf2 (plus lf3 (mult y z)).
Lemma conj23: forall (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf4 z) (plus lf3 (mult y z)).
Lemma conj27_imp: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj27: forall (lf6 : natural) (lf5 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma conj28_imp: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj28: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma conj31: forall (lf6 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma conj32: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma conj49: forall (lf2 : natural) (lf5 : natural) (x : natural), @eq natural lf2 (plus (mult x lf5) lf5).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x lf5) lf5).
Lemma conj53: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (plus (mult x (mult y z)) (mult y z)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult lf4 z) (plus (mult x (mult y z)) (mult y z)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x lf5) lf5).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).


<---CREATE SKETCHES--->
Time elapsed: 152 seconds
Sketches:
Sketch conj3_sketch0 : @eq natural (##hole##) lf1
Sketch conj3_term_sketch0 : @eq natural (mult lf4 z) (##hole##)
Sketch conj11_sketch0 : @eq natural (##hole##) lf1
Sketch conj11_sketch1 : @eq natural (mult (##hole##) z) lf1
Sketch conj11_term_sketch0 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (plus lf6 y) (##hole##)
Sketch conj12_sketch0 : @eq natural (mult (plus (##hole##) y) z) lf1
Sketch conj12_sketch1 : @eq natural (##hole##) lf1
Sketch conj12_sketch2 : @eq natural (mult (##hole##) z) lf1
Sketch conj12_term_sketch0 : @eq natural (mult x y) (##hole##)
Sketch conj12_term_sketch1 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj12_term_sketch2 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj17_sketch0 : @eq natural lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj19_sketch0 : @eq natural (##hole##) (plus lf3 lf5)
Sketch conj19_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj19_term_sketch0 : @eq natural (mult lf4 z) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj21_sketch0 : @eq natural lf2 (plus lf3 (##hole##))
Sketch conj21_sketch1 : @eq natural lf2 (##hole##)
Sketch conj21_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj21_term_sketch1 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj23_sketch0 : @eq natural (mult lf4 z) (plus lf3 (##hole##))
Sketch conj23_sketch1 : @eq natural (##hole##) (plus lf3 (mult y z))
Sketch conj23_sketch2 : @eq natural (mult lf4 z) (##hole##)
Sketch conj23_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj23_term_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj23_term_sketch2 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj27_imp_sketch0 : forall _ : @eq natural (##hole##) lf3,
@eq natural (mult (plus lf6 y) z) (plus lf3 lf5)
Sketch conj27_imp_sketch1 : forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (##hole##) (plus lf3 lf5)
Sketch conj27_imp_sketch2 : forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_imp_sketch3 : forall _ : @eq natural (mult lf6 z) lf3,
@eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj27_imp_term_sketch0 : @eq natural (mult lf6 z) (##hole##)
Sketch conj27_imp_term_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_imp_term_sketch2 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj27_imp_term_sketch3 : @eq natural (plus lf6 y) (##hole##)
Sketch conj27_sketch0 : @eq natural (##hole##) (plus lf3 lf5)
Sketch conj27_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_sketch2 : @eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj27_term_sketch0 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj27_term_sketch1 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (plus lf6 y) (##hole##)
Sketch conj28_imp_sketch0 : forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj28_imp_sketch1 : forall _ : @eq natural (mult (##hole##) z) lf3,
@eq natural (mult (plus (##hole##) y) z) (plus lf3 lf5)
Sketch conj28_imp_sketch2 : forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (##hole##) (plus lf3 lf5)
Sketch conj28_imp_sketch3 : forall _ : @eq natural (mult (mult x y) z) lf3,
@eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj28_imp_sketch4 : forall _ : @eq natural (##hole##) lf3,
@eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5)
Sketch conj28_imp_term_sketch0 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj28_imp_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj28_imp_term_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj28_imp_term_sketch3 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj28_imp_term_sketch4 : @eq natural (mult (mult x y) z) (##hole##)
Sketch conj28_sketch0 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj28_sketch1 : @eq natural (mult (plus (##hole##) y) z) (plus lf3 lf5)
Sketch conj28_sketch2 : @eq natural (##hole##) (plus lf3 lf5)
Sketch conj28_sketch3 : @eq natural (mult (##hole##) z) (plus lf3 lf5)
Sketch conj28_term_sketch0 : @eq natural (plus lf3 lf5) (##hole##)
Sketch conj28_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj28_term_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj28_term_sketch3 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj31_sketch0 : @eq natural (mult (plus lf6 y) z) (plus lf3 (##hole##))
Sketch conj31_sketch1 : @eq natural (##hole##) (plus lf3 (mult y z))
Sketch conj31_sketch2 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj31_sketch3 : @eq natural (mult (##hole##) z) (plus lf3 (mult y z))
Sketch conj31_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj31_term_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj31_term_sketch3 : @eq natural (plus lf6 y) (##hole##)
Sketch conj32_sketch0 : @eq natural (mult (plus (mult x y) y) z) (plus lf3 (##hole##))
Sketch conj32_sketch1 : @eq natural (mult (plus (##hole##) y) z) (plus lf3 (mult y z))
Sketch conj32_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj32_sketch3 : @eq natural (##hole##) (plus lf3 (mult y z))
Sketch conj32_sketch4 : @eq natural (mult (##hole##) z) (plus lf3 (mult y z))
Sketch conj32_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj32_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj32_term_sketch2 : @eq natural (plus lf3 (mult y z)) (##hole##)
Sketch conj32_term_sketch3 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj32_term_sketch4 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj49_sketch0 : @eq natural lf2 (##hole##)
Sketch conj49_sketch1 : @eq natural lf2 (plus (##hole##) lf5)
Sketch conj49_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj49_term_sketch1 : @eq natural (mult x lf5) (##hole##)
Sketch conj51_sketch0 : @eq natural (mult lf4 z) (##hole##)
Sketch conj51_sketch1 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj51_sketch2 : @eq natural (mult lf4 z) (plus (##hole##) lf5)
Sketch conj51_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj51_term_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj51_term_sketch2 : @eq natural (mult x lf5) (##hole##)
Sketch conj53_sketch0 : @eq natural lf2 (plus (mult x (##hole##)) (##hole##))
Sketch conj53_sketch1 : @eq natural lf2 (plus (##hole##) (mult y z))
Sketch conj53_sketch2 : @eq natural lf2 (##hole##)
Sketch conj53_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj53_term_sketch1 : @eq natural (mult x (mult y z)) (##hole##)
Sketch conj53_term_sketch2 : @eq natural (plus (mult x (mult y z)) (mult y z)) (##hole##)
Sketch conj55_sketch0 : @eq natural (mult lf4 z) (plus (mult x (##hole##)) (##hole##))
Sketch conj55_sketch1 : @eq natural (##hole##) (plus (mult x (mult y z)) (mult y z))
Sketch conj55_sketch2 : @eq natural (mult lf4 z) (plus (##hole##) (mult y z))
Sketch conj55_sketch3 : @eq natural (mult lf4 z) (##hole##)
Sketch conj55_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj55_term_sketch1 : @eq natural (mult lf4 z) (##hole##)
Sketch conj55_term_sketch2 : @eq natural (mult x (mult y z)) (##hole##)
Sketch conj55_term_sketch3 : @eq natural (plus (mult x (mult y z)) (mult y z)) (##hole##)
Sketch conj59_sketch0 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj59_sketch1 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj59_sketch2 : @eq natural (mult (##hole##) z) (plus (mult x lf5) lf5)
Sketch conj59_sketch3 : @eq natural (mult (plus lf6 y) z) (plus (##hole##) lf5)
Sketch conj59_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj59_term_sketch2 : @eq natural (plus lf6 y) (##hole##)
Sketch conj59_term_sketch3 : @eq natural (mult x lf5) (##hole##)
Sketch conj60_sketch0 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj60_sketch1 : @eq natural (mult (plus (##hole##) y) z) (plus (mult x lf5) lf5)
Sketch conj60_sketch2 : @eq natural (##hole##) (plus (mult x lf5) lf5)
Sketch conj60_sketch3 : @eq natural (mult (##hole##) z) (plus (mult x lf5) lf5)
Sketch conj60_sketch4 : @eq natural (mult (plus (mult x y) y) z) (plus (##hole##) lf5)
Sketch conj60_term_sketch0 : @eq natural (plus (mult x lf5) lf5) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (mult x y) (##hole##)
Sketch conj60_term_sketch2 : @eq natural (mult (plus (mult x y) y) z) (##hole##)
Sketch conj60_term_sketch3 : @eq natural (plus (mult x y) y) (##hole##)
Sketch conj60_term_sketch4 : @eq natural (mult x lf5) (##hole##)
Sketch conj63_sketch0 : @eq natural (mult (plus lf6 y) z) (plus (mult x (##hole##)) (##hole##))
Sketch conj63_sketch1 : @eq natural (mult (plus lf6 y) z) (plus (##hole##) (mult y z))
Sketch conj63_sketch2 : @eq natural (##hole##) (plus (mult x (mult y z)) (mult y z))
Sketch conj63_sketch3 : @eq natural (mult (##hole##) z) (plus (mult x (mult y z)) (mult y z))
Sketch conj63_sketch4 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj63_term_sketch0 : @eq natural (mult y z) (##hole##)
Sketch conj63_term_sketch1 : @eq natural (mult x (mult y z)) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (mult (plus lf6 y) z) (##hole##)
Sketch conj63_term_sketch3 : @eq natural (plus lf6 y) (##hole##)
Sketch conj63_term_sketch4 : @eq natural (plus (mult x (mult y z)) (mult y z)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 354 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_9
Sketch conj53_sketch1 --> Problem  synth_37
Sketch conj60_term_sketch1 --> Problem  synth_7
Sketch conj59_term_sketch2 --> Problem  synth_5
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj63_sketch4 --> Problem  synth_4
Sketch conj23_sketch0 --> Problem  synth_15
Sketch conj59_term_sketch1 --> Problem  synth_4
Sketch conj59_sketch1 --> Problem  synth_33
Sketch conj53_term_sketch2 --> Problem  synth_8
Sketch conj60_sketch0 --> Problem  synth_8
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj21_term_sketch1 --> Problem  synth_14
Sketch conj63_term_sketch0 --> Problem  synth_13
Sketch conj31_sketch0 --> Problem  synth_28
Sketch conj28_imp_sketch3 --> Problem  synth_25
Sketch conj55_sketch3 --> Problem  synth_2
Sketch conj12_term_sketch0 --> Problem  synth_7
Sketch conj60_term_sketch3 --> Problem  synth_9
Sketch conj60_sketch2 --> Problem  synth_33
Sketch conj59_sketch3 --> Problem  synth_41
Sketch conj63_term_sketch4 --> Problem  synth_8
Sketch conj32_sketch3 --> Problem  synth_14
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj32_term_sketch3 --> Problem  synth_8
Sketch conj28_sketch2 --> Problem  synth_11
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj23_term_sketch2 --> Problem  synth_14
Sketch conj21_sketch0 --> Problem  synth_12
Sketch conj27_imp_sketch0 --> Problem  synth_16
Sketch conj19_term_sketch1 --> Problem  synth_11
Sketch conj28_term_sketch2 --> Problem  synth_8
Sketch conj28_imp_term_sketch2 --> Problem  synth_8
Sketch conj27_sketch1 --> Problem  synth_4
Sketch conj60_sketch3 --> Problem  synth_40
Sketch conj51_sketch0 --> Problem  synth_2
Sketch conj23_term_sketch0 --> Problem  synth_13
Sketch conj28_imp_sketch1 --> Problem  synth_23
Sketch conj28_imp_sketch0 --> Problem  synth_22
Sketch conj32_sketch2 --> Problem  synth_8
Sketch conj63_term_sketch1 --> Problem  synth_27
Sketch conj27_imp_sketch3 --> Problem  synth_19
Sketch conj51_term_sketch1 --> Problem  synth_2
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj23_sketch2 --> Problem  synth_2
Sketch conj49_sketch0 --> Problem  synth_10
Sketch conj55_term_sketch1 --> Problem  synth_2
Sketch conj28_imp_term_sketch1 --> Problem  synth_7
Sketch conj49_term_sketch1 --> Problem  synth_34
Sketch conj12_term_sketch1 --> Problem  synth_8
Sketch conj53_term_sketch1 --> Problem  synth_27
Sketch conj31_term_sketch0 --> Problem  synth_13
Sketch conj55_sketch0 --> Problem  synth_38
Sketch conj63_sketch1 --> Problem  synth_45
Sketch conj53_sketch2 --> Problem  synth_10
Sketch conj27_sketch0 --> Problem  synth_11
Sketch conj27_imp_term_sketch2 --> Problem  synth_11
Sketch conj32_sketch4 --> Problem  synth_29
Sketch conj27_imp_term_sketch3 --> Problem  synth_5
Sketch conj27_imp_sketch1 --> Problem  synth_17
Sketch conj32_term_sketch1 --> Problem  synth_7
Sketch conj60_sketch4 --> Problem  synth_43
Sketch conj28_imp_term_sketch3 --> Problem  synth_9
Sketch conj11_sketch0 --> Problem  synth_1
Sketch conj27_term_sketch0 --> Problem  synth_4
Sketch conj51_sketch2 --> Problem  synth_35
Sketch conj63_term_sketch2 --> Problem  synth_4
Sketch conj28_imp_term_sketch4 --> Problem  synth_27
Sketch conj12_sketch0 --> Problem  synth_6
Sketch conj28_sketch0 --> Problem  synth_8
Sketch conj60_term_sketch4 --> Problem  synth_34
Sketch conj53_term_sketch0 --> Problem  synth_13
Sketch conj11_sketch1 --> Problem  synth_3
Sketch conj28_term_sketch1 --> Problem  synth_7
Sketch conj31_term_sketch3 --> Problem  synth_5
Sketch conj31_term_sketch1 --> Problem  synth_4
Sketch conj32_sketch0 --> Problem  synth_30
Sketch conj23_sketch1 --> Problem  synth_14
Sketch conj60_term_sketch2 --> Problem  synth_8
Sketch conj60_sketch1 --> Problem  synth_42
Sketch conj55_sketch1 --> Problem  synth_8
Sketch conj28_term_sketch3 --> Problem  synth_9
Sketch conj12_sketch1 --> Problem  synth_1
Sketch conj27_term_sketch2 --> Problem  synth_5
Sketch conj12_sketch2 --> Problem  synth_3
Sketch conj59_sketch2 --> Problem  synth_40
Sketch conj28_imp_sketch2 --> Problem  synth_24
Sketch conj51_term_sketch2 --> Problem  synth_34
Sketch conj27_sketch2 --> Problem  synth_21
Sketch conj60_term_sketch0 --> Problem  synth_33
Sketch conj31_sketch2 --> Problem  synth_4
Sketch conj53_sketch0 --> Problem  synth_36
Sketch conj32_term_sketch2 --> Problem  synth_14
Sketch conj31_sketch3 --> Problem  synth_29
Sketch conj12_term_sketch2 --> Problem  synth_9
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj32_sketch1 --> Problem  synth_31
Sketch conj51_term_sketch0 --> Problem  synth_33
Sketch conj55_term_sketch0 --> Problem  synth_13
Sketch conj19_sketch0 --> Problem  synth_11
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_8
Sketch conj28_imp_sketch4 --> Problem  synth_26
Sketch conj27_imp_term_sketch0 --> Problem  synth_20
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_4
Sketch conj23_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch0 --> Problem  synth_44
Sketch conj55_term_sketch3 --> Problem  synth_8
Sketch conj63_sketch3 --> Problem  synth_46
Sketch conj59_term_sketch0 --> Problem  synth_33
Sketch conj28_term_sketch0 --> Problem  synth_11
Sketch conj59_term_sketch3 --> Problem  synth_34
Sketch conj51_sketch1 --> Problem  synth_33
Sketch conj28_imp_term_sketch0 --> Problem  synth_11
Sketch conj32_term_sketch0 --> Problem  synth_13
Sketch conj21_term_sketch0 --> Problem  synth_13
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj28_sketch3 --> Problem  synth_21
Sketch conj28_sketch1 --> Problem  synth_23
Sketch conj21_sketch1 --> Problem  synth_10
Sketch conj27_imp_term_sketch1 --> Problem  synth_4
Sketch conj27_imp_sketch2 --> Problem  synth_18
Sketch conj31_sketch1 --> Problem  synth_14
Sketch conj31_term_sketch2 --> Problem  synth_14
Sketch conj55_term_sketch2 --> Problem  synth_27
Sketch conj55_sketch2 --> Problem  synth_39
Sketch conj49_sketch1 --> Problem  synth_32
Sketch conj49_term_sketch0 --> Problem  synth_33


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 617 seconds

Problem: synth_28
 mult y (mult z (Succ Zero))
 mult z (mult y (Succ Zero))
 mult y (plus z Zero)
 mult z (plus y Zero)
 mult y z
 mult z y

Problem: synth_17
 plus lf5 (plus lf3 Zero)
 plus lf3 (plus lf5 Zero)
 plus (mult lf6 lf5) lf5
 mult lf5 (Succ lf6)
 plus lf5 lf3
 plus lf3 lf5

Problem: synth_29

Problem: synth_45
 mult z (mult lf6 lf6)
 mult lf6 (plus z Zero)
 mult z (plus lf6 Zero)
 qfac (fac lf6) z
 mult lf6 z
 mult z lf6

Problem: synth_26
 mult lf3 y
 mult lf3 x
 mult lf5 x
 mult x lf5
 plus lf3 Zero
 lf3

Problem: synth_9
 plus (mult x (plus y Zero)) (plus y Zero)
 mult y (plus x (Succ Zero))
 plus y (mult x y)
 plus y (mult y x)
 plus (mult x y) y
 mult y (Succ x)

Problem: synth_30
 mult y (mult z (Succ Zero))
 mult z (mult y (Succ Zero))
 mult y (plus z Zero)
 mult z (plus y Zero)
 mult y z
 mult z y

Problem: synth_11
 plus lf5 (mult lf3 (Succ Zero))
 plus lf3 (mult lf5 (Succ Zero))
 plus lf5 (plus lf3 Zero)
 plus lf3 (plus lf5 Zero)
 plus lf5 lf3
 plus lf3 lf5

Problem: synth_39

Problem: synth_1
 plus lf1 (mult lf1 Zero)
 plus lf1 (qfac lf1 Zero)
 qfac (fac lf1) lf1
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_46
 plus (mult x (plus y Zero)) (plus y Zero)
 mult y (plus x (Succ Zero))
 plus y (mult x y)
 plus y (mult y x)
 plus (mult x y) y
 mult y (Succ x)

Problem: synth_15

Problem: synth_31

Problem: synth_14
 mult (plus z lf3) y
 mult (plus lf3 z) y
 mult y (plus z lf3)
 mult y (plus lf3 z)
 plus lf3 (mult y z)
 plus lf3 (mult z y)

Problem: synth_8
 mult (mult z (Succ x)) y
 plus (mult x (mult y z)) (mult y z)
 plus (mult x (mult z y)) (mult z y)
 mult y (mult z (Succ x))
 mult z (mult y (Succ x))

Problem: synth_34
 mult x (mult x lf5)
 mult lf5 (plus x Zero)
 mult x (plus lf5 Zero)
 qfac (fac x) lf5
 mult lf5 x
 mult x lf5

Problem: synth_12
 plus lf3 (mult lf2 (fac lf3))
 plus lf3 (qfac lf3 lf2)

Problem: synth_5
 plus lf6 (mult y (Succ Zero))
 plus y (mult lf6 (Succ Zero))
 plus lf6 (plus y Zero)
 plus y (plus lf6 Zero)
 plus lf6 y
 plus y lf6

Problem: synth_37

Problem: synth_2
 mult lf4 (mult z (Succ Zero))
 mult z (mult lf4 (Succ Zero))
 mult lf4 (plus z Zero)
 mult z (plus lf4 Zero)
 mult lf4 z
 mult z lf4

Problem: synth_22
 mult y (mult z (Succ x))
 mult z (mult y (Succ x))
 mult y (plus z lf3)
 mult y (plus lf3 z)
 plus lf3 (mult y z)
 plus lf3 (mult z y)

Problem: synth_20
 mult z (mult lf6 lf6)
 mult lf6 (plus z Zero)
 mult z (plus lf6 Zero)
 qfac (fac lf6) z
 mult lf6 z
 mult z lf6

Problem: synth_18
 mult y (plus z lf3)
 mult y (plus lf3 z)
 plus lf3 (mult y z)
 plus lf3 (mult z y)
 mult z (plus lf6 y)
 mult z (plus y lf6)

Problem: synth_21

Problem: synth_41
 qfac (fac lf6) z
 qfac (fac lf6) lf5
 mult lf6 z
 mult lf6 lf5
 mult z lf6
 mult lf5 lf6

Problem: synth_25
 plus (mult x (plus y Zero)) (plus y Zero)
 mult y (plus x (Succ Zero))
 plus y (mult x y)
 plus y (mult y x)
 plus (mult x y) y
 mult y (Succ x)

Problem: synth_13
 mult y (mult z (Succ Zero))
 mult z (mult y (Succ Zero))
 mult y (plus z Zero)
 mult z (plus y Zero)
 mult y z
 mult z y

Problem: synth_6

Problem: synth_7
 mult x (mult y (Succ Zero))
 mult y (mult x (Succ Zero))
 mult x (plus y Zero)
 mult y (plus x Zero)
 mult x y
 mult y x

Problem: synth_4
 plus (mult lf6 (mult y z)) (mult y z)
 plus (mult lf6 (mult z y)) (mult z y)
 mult y (mult z (Succ lf6))
 mult z (mult y (Succ lf6))
 mult z (plus lf6 y)
 mult z (plus y lf6)

Problem: synth_38

Problem: synth_23

Problem: synth_27
 mult x (mult y z)
 mult y (mult x z)
 mult x (mult z y)
 mult z (mult x y)
 mult y (mult z x)
 mult z (mult y x)

Problem: synth_42
 mult x (mult y (Succ Zero))
 mult y (mult x (Succ Zero))
 mult x (plus y Zero)
 mult y (plus x Zero)
 mult x y
 mult y x

Problem: synth_16
 mult lf6 lf5
 mult lf3 lf6
 mult z lf6
 mult lf5 lf6
 plus lf3 Zero
 lf3

Problem: synth_19

Problem: synth_40

Problem: synth_10
 plus lf2 (mult lf2 Zero)
 plus lf2 (qfac lf2 Zero)
 qfac (fac lf2) lf2
 mult lf2 (Succ Zero)
 plus lf2 Zero
 lf2

Problem: synth_33
 plus (mult x (plus lf5 Zero)) (plus lf5 Zero)
 mult lf5 (plus x (Succ Zero))
 plus lf5 (mult lf5 x)
 plus lf5 (mult x lf5)
 plus (mult x lf5) lf5
 mult lf5 (Succ x)

Problem: synth_24
 plus lf5 (plus lf3 Zero)
 plus lf3 (plus lf5 Zero)
 plus (mult x lf5) lf5
 mult lf5 (Succ x)
 plus lf5 lf3
 plus lf3 lf5

Problem: synth_3

Problem: synth_32

Problem: synth_44
 mult y (mult z (Succ Zero))
 mult z (mult y (Succ Zero))
 mult y (plus z Zero)
 mult z (plus y Zero)
 mult y z
 mult z y

Problem: synth_36

Problem: synth_35

Problem: synth_43
 mult x (mult x lf5)
 mult lf5 (plus x Zero)
 mult x (plus lf5 Zero)
 qfac (fac x) lf5
 mult lf5 x
 mult x lf5

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 618 seconds
Lemmas:
Lemma candidate_1: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_2: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_3: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_4: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_5: forall (lf1 : natural), @eq natural (plus lf1 (mult lf1 Zero)) lf1.
Lemma candidate_6: forall (lf1 : natural), @eq natural (plus lf1 (qfac lf1 Zero)) lf1.
Lemma candidate_7: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_8: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_9: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_10: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_11: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_12: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_13: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_14: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_15: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_16: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_17: forall (lf1 : natural), @eq natural (plus lf1 (mult lf1 Zero)) lf1.
Lemma candidate_18: forall (lf1 : natural), @eq natural (plus lf1 (qfac lf1 Zero)) lf1.
Lemma candidate_19: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_20: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_21: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_22: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_23: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_24: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_25: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_26: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_27: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_28: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_29: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_30: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_31: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_32: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_33: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_34: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_35: forall (lf1 : natural), @eq natural (plus lf1 (mult lf1 Zero)) lf1.
Lemma candidate_36: forall (lf1 : natural), @eq natural (plus lf1 (qfac lf1 Zero)) lf1.
Lemma candidate_37: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_38: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_39: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_40: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_41: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (mult y (Succ Zero))).
Lemma candidate_42: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (mult x (Succ Zero))).
Lemma candidate_43: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_44: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_45: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_46: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_47: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_48: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_49: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_50: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_51: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_52: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_53: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (plus x (Succ Zero))).
Lemma candidate_54: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_55: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_56: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_57: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_58: forall (lf2 : natural), @eq natural lf2 (plus lf2 (mult lf2 Zero)).
Lemma candidate_59: forall (lf2 : natural), @eq natural lf2 (plus lf2 (qfac lf2 Zero)).
Lemma candidate_60: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_61: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_62: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_63: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_64: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_65: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_66: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_67: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_68: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_69: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_70: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf3 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_71: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (mult lf5 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_72: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_73: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_74: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_75: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_76: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_77: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_78: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_79: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_80: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_81: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_82: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_83: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_84: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_85: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_86: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_87: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_88: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_89: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_90: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_91: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_92: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_93: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_94: forall (lf3 : natural) (lf2 : natural), @eq natural lf2 (plus lf3 (plus lf3 (mult lf2 (fac lf3)))).
Lemma candidate_95: forall (lf3 : natural) (lf2 : natural), @eq natural lf2 (plus lf3 (plus lf3 (qfac lf3 lf2))).
Lemma candidate_96: forall (lf2 : natural), @eq natural lf2 (plus lf2 (mult lf2 Zero)).
Lemma candidate_97: forall (lf2 : natural), @eq natural lf2 (plus lf2 (qfac lf2 Zero)).
Lemma candidate_98: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_99: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_100: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_101: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_102: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_103: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_104: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_105: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_106: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_107: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_108: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus z lf3) y).
Lemma candidate_109: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus lf3 z) y).
Lemma candidate_110: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus z lf3)).
Lemma candidate_111: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus lf3 z)).
Lemma candidate_112: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_113: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult z y)).
Lemma candidate_114: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult (plus z lf3) y) (plus lf3 (mult y z)).
Lemma candidate_115: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult (plus lf3 z) y) (plus lf3 (mult y z)).
Lemma candidate_116: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult y (plus z lf3)) (plus lf3 (mult y z)).
Lemma candidate_117: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult y (plus lf3 z)) (plus lf3 (mult y z)).
Lemma candidate_118: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_119: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult z y)) (plus lf3 (mult y z)).
Lemma candidate_120: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_121: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_122: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_123: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_124: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_125: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_126: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_127: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_128: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_129: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_130: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_131: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_132: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_133: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_134: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_135: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_136: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_137: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_138: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus z lf3) y).
Lemma candidate_139: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus lf3 z) y).
Lemma candidate_140: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus z lf3)).
Lemma candidate_141: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus lf3 z)).
Lemma candidate_142: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_143: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult z y)).
Lemma candidate_144: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 lf5) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_145: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf3 lf6) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_146: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult z lf6) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_147: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf5 lf6) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_148: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (plus lf3 Zero) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_149: forall (lf3 : natural) (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (lf3) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 lf5).
Lemma candidate_150: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_151: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_152: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus (mult lf6 lf5) lf5) (plus lf3 lf5).
Lemma candidate_153: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult lf5 (Succ lf6)) (plus lf3 lf5).
Lemma candidate_154: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_155: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_156: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult y (plus z lf3)).
Lemma candidate_157: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult y (plus lf3 z)).
Lemma candidate_158: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_159: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult z y)).
Lemma candidate_160: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_161: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_162: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z (mult lf6 lf6)).
Lemma candidate_163: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult lf6 (plus z Zero)).
Lemma candidate_164: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z (plus lf6 Zero)).
Lemma candidate_165: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (qfac (fac lf6) z).
Lemma candidate_166: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult lf6 z).
Lemma candidate_167: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z lf6).
Lemma candidate_168: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_169: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_170: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_171: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_172: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_173: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_174: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_175: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_176: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_177: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_178: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_179: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_180: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_181: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_182: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_183: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_184: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_185: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_186: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf3 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_187: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (mult lf5 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_188: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_189: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_190: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_191: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_192: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_193: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_194: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_195: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_196: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_197: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_198: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_199: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_200: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_201: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_202: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_203: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_204: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_205: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_206: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_207: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_208: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_209: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_210: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_211: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_212: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_213: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_214: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_215: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_216: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_217: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_218: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult y (plus z lf3)).
Lemma candidate_219: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult y (plus lf3 z)).
Lemma candidate_220: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_221: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult z y)).
Lemma candidate_222: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_223: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_224: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus (mult x lf5) lf5) (plus lf3 lf5).
Lemma candidate_225: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult lf5 (Succ x)) (plus lf3 lf5).
Lemma candidate_226: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_227: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_228: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x (plus y Zero)) (plus y Zero)) z)   (plus lf3 lf5).
Lemma candidate_229: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (mult y (plus x (Succ Zero))) z) (plus lf3 lf5).
Lemma candidate_230: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus y (mult x y)) z) (plus lf3 lf5).
Lemma candidate_231: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus y (mult y x)) z) (plus lf3 lf5).
Lemma candidate_232: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_233: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (mult y (Succ x)) z) (plus lf3 lf5).
Lemma candidate_234: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult lf3 y) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_235: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult lf3 x) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_236: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult lf5 x) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_237: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult x lf5) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_238: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (plus lf3 Zero) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_239: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (lf3) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 lf5).
Lemma candidate_240: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_241: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_242: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_243: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_244: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_245: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_246: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (mult y (Succ Zero))).
Lemma candidate_247: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (mult x (Succ Zero))).
Lemma candidate_248: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_249: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_250: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_251: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_252: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_253: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_254: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_255: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_256: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_257: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_258: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (plus x (Succ Zero))).
Lemma candidate_259: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_260: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_261: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_262: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_263: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult x (mult y z)).
Lemma candidate_264: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult y (mult x z)).
Lemma candidate_265: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult x (mult z y)).
Lemma candidate_266: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult z (mult x y)).
Lemma candidate_267: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult y (mult z x)).
Lemma candidate_268: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult z (mult y x)).
Lemma candidate_269: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_270: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_271: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_272: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_273: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_274: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf3 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_275: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (mult lf5 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_276: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_277: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_278: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_279: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_280: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_281: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_282: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_283: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_284: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_285: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 lf5).
Lemma candidate_286: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (mult y (Succ Zero))).
Lemma candidate_287: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (mult x (Succ Zero))).
Lemma candidate_288: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_289: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_290: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_291: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_292: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_293: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_294: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_295: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_296: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_297: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_298: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (plus x (Succ Zero))).
Lemma candidate_299: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_300: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_301: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_302: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_303: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y (mult z (Succ Zero)))).
Lemma candidate_304: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult z (mult y (Succ Zero)))).
Lemma candidate_305: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y (plus z Zero))).
Lemma candidate_306: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult z (plus y Zero))).
Lemma candidate_307: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_308: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus lf3 (mult z y)).
Lemma candidate_309: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult (plus z lf3) y) (plus lf3 (mult y z)).
Lemma candidate_310: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult (plus lf3 z) y) (plus lf3 (mult y z)).
Lemma candidate_311: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult y (plus z lf3)) (plus lf3 (mult y z)).
Lemma candidate_312: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult y (plus lf3 z)) (plus lf3 (mult y z)).
Lemma candidate_313: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_314: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult z y)) (plus lf3 (mult y z)).
Lemma candidate_315: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_316: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_317: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_318: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_319: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_320: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_321: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_322: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_323: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_324: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_325: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_326: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_327: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_328: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_329: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_330: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_331: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_332: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_333: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus z lf3) y).
Lemma candidate_334: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus lf3 z) y).
Lemma candidate_335: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus z lf3)).
Lemma candidate_336: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus lf3 z)).
Lemma candidate_337: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_338: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult z y)).
Lemma candidate_339: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_340: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_341: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_342: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_343: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_344: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_345: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus lf3 (mult y (mult z (Succ Zero)))).
Lemma candidate_346: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus lf3 (mult z (mult y (Succ Zero)))).
Lemma candidate_347: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y (plus z Zero))).
Lemma candidate_348: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult z (plus y Zero))).
Lemma candidate_349: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_350: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult z y)).
Lemma candidate_351: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_352: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_353: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_354: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_355: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_356: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult (plus z lf3) y) (plus lf3 (mult y z)).
Lemma candidate_357: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult (plus lf3 z) y) (plus lf3 (mult y z)).
Lemma candidate_358: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult y (plus z lf3)) (plus lf3 (mult y z)).
Lemma candidate_359: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (mult y (plus lf3 z)) (plus lf3 (mult y z)).
Lemma candidate_360: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_361: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult z y)) (plus lf3 (mult y z)).
Lemma candidate_362: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_363: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_364: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_365: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_366: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_367: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_368: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (mult y (Succ Zero))).
Lemma candidate_369: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (mult x (Succ Zero))).
Lemma candidate_370: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_371: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_372: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_373: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_374: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus z lf3) y).
Lemma candidate_375: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult (plus lf3 z) y).
Lemma candidate_376: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus z lf3)).
Lemma candidate_377: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (mult y (plus lf3 z)).
Lemma candidate_378: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult y z)).
Lemma candidate_379: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult z y)).
Lemma candidate_380: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_381: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_382: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_383: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_384: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_385: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_386: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (plus x (Succ Zero))).
Lemma candidate_387: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_388: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_389: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_390: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_391: forall (lf2 : natural), @eq natural lf2 (plus lf2 (mult lf2 Zero)).
Lemma candidate_392: forall (lf2 : natural), @eq natural lf2 (plus lf2 (qfac lf2 Zero)).
Lemma candidate_393: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_394: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_395: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_396: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_397: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_398: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_399: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_400: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_401: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_402: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_403: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult x lf5)).
Lemma candidate_404: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_405: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_406: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (qfac (fac x) lf5).
Lemma candidate_407: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_408: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_409: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_410: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_411: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_412: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_413: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_414: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_415: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_416: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_417: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_418: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_419: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_420: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_421: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_422: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_423: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_424: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_425: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_426: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_427: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_428: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_429: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_430: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_431: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_432: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_433: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult x lf5)).
Lemma candidate_434: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_435: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_436: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (qfac (fac x) lf5).
Lemma candidate_437: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_438: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_439: forall (lf2 : natural), @eq natural lf2 (plus lf2 (mult lf2 Zero)).
Lemma candidate_440: forall (lf2 : natural), @eq natural lf2 (plus lf2 (qfac lf2 Zero)).
Lemma candidate_441: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_442: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_443: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_444: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_445: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_446: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_447: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_448: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_449: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_450: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_451: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult y z)).
Lemma candidate_452: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult x z)).
Lemma candidate_453: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult z y)).
Lemma candidate_454: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult x y)).
Lemma candidate_455: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult z x)).
Lemma candidate_456: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult y x)).
Lemma candidate_457: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult (mult z (Succ x)) y).
Lemma candidate_458: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_459: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_460: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult y (mult z (Succ x))).
Lemma candidate_461: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult z (mult y (Succ x))).
Lemma candidate_462: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult z (Succ x)) y) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_463: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_464: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult z y)) (mult z y))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_465: forall (z : natural) (y : natural) (x : natural), @eq natural (mult y (mult z (Succ x))) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_466: forall (z : natural) (y : natural) (x : natural), @eq natural (mult z (mult y (Succ x))) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_467: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_468: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_469: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_470: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_471: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_472: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_473: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_474: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_475: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_476: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_477: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_478: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_479: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_480: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_481: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_482: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_483: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 z).
Lemma candidate_484: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_485: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult y z)).
Lemma candidate_486: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult x z)).
Lemma candidate_487: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult z y)).
Lemma candidate_488: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult x y)).
Lemma candidate_489: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult z x)).
Lemma candidate_490: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult y x)).
Lemma candidate_491: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult (mult z (Succ x)) y).
Lemma candidate_492: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_493: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_494: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult y (mult z (Succ x))).
Lemma candidate_495: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult z (mult y (Succ x))).
Lemma candidate_496: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_497: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_498: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_499: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_500: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_501: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_502: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_503: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_504: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_505: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_506: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_507: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_508: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qfac (fac lf6) z) lf5).
Lemma candidate_509: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qfac (fac lf6) lf5) lf5).
Lemma candidate_510: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 z) lf5).
Lemma candidate_511: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 lf5) lf5).
Lemma candidate_512: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z lf6) lf5).
Lemma candidate_513: forall (z : natural) (y : natural) (lf5 : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf5 lf6) lf5).
Lemma candidate_514: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_515: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_516: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_517: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_518: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_519: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_520: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_521: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_522: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_523: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_524: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_525: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_526: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_527: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_528: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_529: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_530: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_531: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_532: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult x lf5)).
Lemma candidate_533: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_534: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_535: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (qfac (fac x) lf5).
Lemma candidate_536: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_537: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_538: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_539: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_540: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_541: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_542: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_543: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x (mult y (Succ Zero))) y) z)   (plus (mult x lf5) lf5).
Lemma candidate_544: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult y (mult x (Succ Zero))) y) z)   (plus (mult x lf5) lf5).
Lemma candidate_545: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x (plus y Zero)) y) z) (plus (mult x lf5) lf5).
Lemma candidate_546: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult y (plus x Zero)) y) z) (plus (mult x lf5) lf5).
Lemma candidate_547: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma candidate_548: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult y x) y) z) (plus (mult x lf5) lf5).
Lemma candidate_549: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_550: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_551: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_552: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_553: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_554: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_555: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x (mult x lf5)) lf5).
Lemma candidate_556: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult lf5 (plus x Zero)) lf5).
Lemma candidate_557: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x (plus lf5 Zero)) lf5).
Lemma candidate_558: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (qfac (fac x) lf5) lf5).
Lemma candidate_559: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult lf5 x) lf5).
Lemma candidate_560: forall (z : natural) (y : natural) (x : natural) (lf5 : natural), @eq natural (mult (plus (mult x y) y) z) (plus (mult x lf5) lf5).
Lemma candidate_561: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_562: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_563: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_564: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_565: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus (mult x lf5) lf5).
Lemma candidate_566: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_567: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (mult y (Succ Zero))).
Lemma candidate_568: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (mult x (Succ Zero))).
Lemma candidate_569: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_570: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_571: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x y).
Lemma candidate_572: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_573: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_574: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_575: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_576: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_577: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_578: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_579: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (plus x (Succ Zero))).
Lemma candidate_580: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_581: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_582: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x y) y).
Lemma candidate_583: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_584: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (mult x lf5)).
Lemma candidate_585: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_586: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_587: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (qfac (fac x) lf5).
Lemma candidate_588: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_589: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x lf5).
Lemma candidate_590: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (mult y (mult z (Succ Zero)))) (mult y (mult z (Succ Zero)))).
Lemma candidate_591: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (mult z (mult y (Succ Zero)))) (mult z (mult y (Succ Zero)))).
Lemma candidate_592: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (mult y (plus z Zero))) (mult y (plus z Zero))).
Lemma candidate_593: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z)   (plus (mult x (mult z (plus y Zero))) (mult z (plus y Zero))).
Lemma candidate_594: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_595: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_596: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z (mult lf6 lf6)) (mult y z)).
Lemma candidate_597: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (plus z Zero)) (mult y z)).
Lemma candidate_598: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z (plus lf6 Zero)) (mult y z)).
Lemma candidate_599: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (qfac (fac lf6) z) (mult y z)).
Lemma candidate_600: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 z) (mult y z)).
Lemma candidate_601: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z lf6) (mult y z)).
Lemma candidate_602: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult z (Succ x)) y) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_603: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_604: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult z y)) (mult z y))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_605: forall (z : natural) (y : natural) (x : natural), @eq natural (mult y (mult z (Succ x))) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_606: forall (z : natural) (y : natural) (x : natural), @eq natural (mult z (mult y (Succ x))) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_607: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x (plus y Zero)) (plus y Zero)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_608: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult y (plus x (Succ Zero))) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_609: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult x y)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_610: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult y x)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_611: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_612: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult y (Succ x)) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_613: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_614: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_615: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_616: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_617: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_618: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_619: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_620: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_621: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_622: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_623: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y z).
Lemma candidate_624: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_625: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult y z)).
Lemma candidate_626: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult x z)).
Lemma candidate_627: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult z y)).
Lemma candidate_628: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult x y)).
Lemma candidate_629: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult z x)).
Lemma candidate_630: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult y x)).
Lemma candidate_631: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult y z)) (mult y z)).
Lemma candidate_632: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (mult z y)) (mult z y)).
Lemma candidate_633: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult y (mult z (Succ lf6))).
Lemma candidate_634: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (mult y (Succ lf6))).
Lemma candidate_635: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_636: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_637: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_638: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_639: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_640: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_641: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 y).
Lemma candidate_642: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_643: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult (mult z (Succ x)) y).
Lemma candidate_644: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_645: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_646: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult y (mult z (Succ x))).
Lemma candidate_647: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult z (mult y (Succ x))).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1467 seconds
Duplicates removed: 438
Filtered by Quickchick: 78
Filtered by script: 17
Remaining: 114

Lemmas: 
Lemma candidate_62: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_9: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_107: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z y).
Lemma candidate_46: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y x).
Lemma candidate_60: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_7: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_407: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 x).
Lemma candidate_167: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z lf6).
Lemma candidate_34: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y lf6).
Lemma candidate_16: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z lf4).
Lemma candidate_61: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_8: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_74: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_68: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 lf3).
Lemma candidate_59: forall (lf2 : natural), @eq natural lf2 (plus lf2 (qfac lf2 Zero)).
Lemma candidate_58: forall (lf2 : natural), @eq natural lf2 (plus lf2 (mult lf2 Zero)).
Lemma candidate_6: forall (lf1 : natural), @eq natural (plus lf1 (qfac lf1 Zero)) lf1.
Lemma candidate_5: forall (lf1 : natural), @eq natural (plus lf1 (mult lf1 Zero)) lf1.
Lemma candidate_105: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (plus y Zero)).
Lemma candidate_104: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (plus z Zero)).
Lemma candidate_44: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (plus x Zero)).
Lemma candidate_43: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (plus y Zero)).
Lemma candidate_405: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult x (plus lf5 Zero)).
Lemma candidate_404: forall (x : natural) (lf5 : natural), @eq natural (mult x lf5) (mult lf5 (plus x Zero)).
Lemma candidate_164: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult z (plus lf6 Zero)).
Lemma candidate_163: forall (z : natural) (lf6 : natural), @eq natural (mult lf6 z) (mult lf6 (plus z Zero)).
Lemma candidate_57: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_32: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (plus lf6 Zero)).
Lemma candidate_31: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (plus y Zero)).
Lemma candidate_14: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (plus lf4 Zero)).
Lemma candidate_13: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (plus z Zero)).
Lemma candidate_456: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult y x)).
Lemma candidate_455: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult z x)).
Lemma candidate_454: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult z (mult x y)).
Lemma candidate_453: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult x (mult z y)).
Lemma candidate_452: forall (z : natural) (y : natural) (x : natural), @eq natural (mult x (mult y z)) (mult y (mult x z)).
Lemma candidate_268: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult z (mult y x)).
Lemma candidate_267: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult y (mult z x)).
Lemma candidate_266: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult z (mult x y)).
Lemma candidate_265: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult x (mult z y)).
Lemma candidate_264: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult x y) z) (mult y (mult x z)).
Lemma candidate_55: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult y x)).
Lemma candidate_54: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus y (mult x y)).
Lemma candidate_103: forall (z : natural) (y : natural), @eq natural (mult y z) (mult z (mult y (Succ Zero))).
Lemma candidate_102: forall (z : natural) (y : natural), @eq natural (mult y z) (mult y (mult z (Succ Zero))).
Lemma candidate_42: forall (y : natural) (x : natural), @eq natural (mult x y) (mult y (mult x (Succ Zero))).
Lemma candidate_41: forall (y : natural) (x : natural), @eq natural (mult x y) (mult x (mult y (Succ Zero))).
Lemma candidate_73: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_72: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_67: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (plus lf5 Zero)).
Lemma candidate_66: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (plus lf3 Zero)).
Lemma candidate_420: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (Succ x)) (plus (mult x lf5) lf5).
Lemma candidate_402: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (Succ x)).
Lemma candidate_119: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult z y)) (plus lf3 (mult y z)).
Lemma candidate_113: forall (lf3 : natural) (z : natural) (y : natural), @eq natural (plus lf3 (mult y z)) (plus lf3 (mult z y)).
Lemma candidate_28: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_27: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_30: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus y (mult lf6 (Succ Zero))).
Lemma candidate_29: forall (y : natural) (lf6 : natural), @eq natural (plus lf6 y) (plus lf6 (mult y (Succ Zero))).
Lemma candidate_12: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult z (mult lf4 (Succ Zero))).
Lemma candidate_11: forall (z : natural) (lf4 : natural), @eq natural (mult lf4 z) (mult lf4 (mult z (Succ Zero))).
Lemma candidate_418: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult x lf5)) (plus (mult x lf5) lf5).
Lemma candidate_417: forall (x : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf5 x)) (plus (mult x lf5) lf5).
Lemma candidate_400: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult x lf5)).
Lemma candidate_399: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (plus lf5 (mult lf5 x)).
Lemma candidate_71: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 (mult lf5 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_70: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (mult lf3 (Succ Zero))) (plus lf3 lf5).
Lemma candidate_65: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf3 (mult lf5 (Succ Zero))).
Lemma candidate_64: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf3 lf5) (plus lf5 (mult lf3 (Succ Zero))).
Lemma candidate_53: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (plus x (Succ Zero))).
Lemma candidate_601: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z lf6) (mult y z)).
Lemma candidate_600: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 z) (mult y z)).
Lemma candidate_416: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 (plus x (Succ Zero))) (plus (mult x lf5) lf5).
Lemma candidate_398: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5) (mult lf5 (plus x (Succ Zero))).
Lemma candidate_51: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_50: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_47: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z) (mult (mult z (Succ x)) y).
Lemma candidate_52: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_612: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult y (Succ x)) z) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_598: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult z (plus lf6 Zero)) (mult y z)).
Lemma candidate_597: forall (z : natural) (y : natural) (lf6 : natural), @eq natural (mult (plus lf6 y) z) (plus (mult lf6 (plus z Zero)) (mult y z)).
Lemma candidate_466: forall (z : natural) (y : natural) (x : natural), @eq natural (mult z (mult y (Succ x))) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_465: forall (z : natural) (y : natural) (x : natural), @eq natural (mult y (mult z (Succ x))) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_462: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult z (Succ x)) y) (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_461: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult z (mult y (Succ x))).
Lemma candidate_460: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult y (mult z (Succ x))).
Lemma candidate_457: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z)) (mult (mult z (Succ x)) y).
Lemma candidate_610: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult y x)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_609: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus y (mult x y)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_49: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x y) y) z)   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_154: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_415: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x (plus lf5 Zero)) (plus lf5 Zero))   (plus (mult x lf5) lf5).
Lemma candidate_397: forall (x : natural) (lf5 : natural), @eq natural (plus (mult x lf5) lf5)   (plus (mult x (plus lf5 Zero)) (plus lf5 Zero)).
Lemma candidate_464: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult z y)) (mult z y))   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_459: forall (z : natural) (y : natural) (x : natural), @eq natural (plus (mult x (mult y z)) (mult y z))   (plus (mult x (mult z y)) (mult z y)).
Lemma candidate_226: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf5 lf3) (plus lf3 lf5).
Lemma candidate_608: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult y (plus x (Succ Zero))) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_151: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_150: forall (lf3 : natural) (z : natural) (lf5 : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_161: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus y lf6)).
Lemma candidate_160: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult z (plus lf6 y)).
Lemma candidate_159: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult z y)).
Lemma candidate_157: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (mult y (plus lf3 z)).
Lemma candidate_2: forall (lf3 : natural) (z : natural) (y : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) lf3, @eq natural (mult (plus lf6 y) z) (plus lf3 (mult y z)).
Lemma candidate_223: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf3 (plus lf5 Zero)) (plus lf3 lf5).
Lemma candidate_222: forall (lf3 : natural) (z : natural) (y : natural) (x : natural) (lf5 : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (plus lf5 (plus lf3 Zero)) (plus lf3 lf5).
Lemma candidate_607: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (plus (mult x (plus y Zero)) (plus y Zero)) z)   (plus (mult x (mult y z)) (mult y z)).
Lemma candidate_221: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult z y)).
Lemma candidate_219: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult y (plus lf3 z)).
Lemma candidate_218: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult y (plus z lf3)).
Lemma candidate_3: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (plus lf3 (mult y z)).
Lemma candidate_217: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult z (mult y (Succ x))).
Lemma candidate_216: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), forall _ : @eq natural (mult (mult x y) z) lf3, @eq natural (mult (plus (mult x y) y) z) (mult y (mult z (Succ x))).
Lemma candidate_4: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), forall _ : @eq natural (mult lf6 z) (mult x (mult y z)), @eq natural (mult (plus lf6 y) z) (plus (mult x (mult y z)) (mult y z)).
File Information
- File name: goal48
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal48_theorem0_72_insort_len
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal48_theorem0_72_insort_len
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : lst, @eq natural (len (sort x0)) (len x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq natural (len (insort (sort x) n)) (Succ (len x))

* Hypothesis:
IHx : @eq natural (len (sort x)) (len x)
x : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
sort x : lst
@eq natural (len (insort (sort x) n)) (Succ (len x)) : Prop
x : lst
len x : natural
len (insort (sort x) n) : natural
lst : Set
natural : Set
n : natural
len (sort x) : natural
@eq natural (len (sort x)) (len x) : Prop
Succ (len x) : natural
insort (sort x) n : lst

* Functions:
sort  : forall _ : lst, lst
len  : forall _ : lst, natural
Succ  : forall _ : natural, natural
insort  : forall (_ : lst) (_ : natural), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = Succ (len x)
lf1 : natural = len (insort (sort x) n)
lf4 : lst = sort x
lf5 : natural = len x
lf2 : lst = insort (sort x) n

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj10: forall (lf4 : lst) (n : natural) (lf3 : natural), @eq natural (len (insort lf4 n)) lf3.
Lemma conj14: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (insort (sort x) n)) lf3.
Lemma conj17: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj19: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj25: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj26: forall (lf5 : natural) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ lf5).
Lemma conj27: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len x)).
Lemma conj28: forall (x : lst) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma conj30: forall (lf5 : natural) (x : lst) (n : natural), @eq natural (len (insort (sort x) n)) (Succ lf5).
Lemma conj32: forall (x : lst) (n : natural), @eq natural (len (insort (sort x) n)) (Succ (len x)).


<---VALIDITY CHECKS--->
Time elapsed: 68 seconds
Valid:
Lemma conj32: forall (x : lst) (n : natural), @eq natural (len (insort (sort x) n)) (Succ (len x)).

Invalid:
Lemma conj30: forall (lf5 : natural) (x : lst) (n : natural), @eq natural (len (insort (sort x) n)) (Succ lf5).
Lemma conj28: forall (x : lst) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma conj27: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len x)).
Lemma conj26: forall (lf5 : natural) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ lf5).
Lemma conj25: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj19: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj17: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj14: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (insort (sort x) n)) lf3.
Lemma conj10: forall (lf4 : lst) (n : natural) (lf3 : natural), @eq natural (len (insort lf4 n)) lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 84 seconds
Generalizations:
Lemma conj30: forall (lf5 : natural) (x : lst) (n : natural), @eq natural (len (insort (sort x) n)) (Succ lf5).
Lemma conj30_imp: forall (lf5 : natural) (x : lst) (n : natural), forall _ : @eq natural (len (sort x)) lf5,
@eq natural (len (insort (sort x) n)) (Succ lf5).
Lemma conj28: forall (x : lst) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma conj28_imp: forall (x : lst) (lf4 : lst) (n : natural), forall _ : @eq natural (len lf4) (len x),
@eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma conj27: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len x)).
Lemma conj26: forall (lf5 : natural) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ lf5).
Lemma conj26_imp: forall (lf5 : natural) (lf4 : lst) (n : natural), forall _ : @eq natural (len lf4) lf5,
@eq natural (len (insort lf4 n)) (Succ lf5).
Lemma conj25: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj19: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj17: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj14: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (insort (sort x) n)) lf3.
Lemma conj10: forall (lf4 : lst) (n : natural) (lf3 : natural), @eq natural (len (insort lf4 n)) lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 105 seconds
Valid:
Lemma conj26_imp: forall (lf5 : natural) (lf4 : lst) (n : natural), forall _ : @eq natural (len lf4) lf5,
@eq natural (len (insort lf4 n)) (Succ lf5).
Lemma conj28_imp: forall (x : lst) (lf4 : lst) (n : natural), forall _ : @eq natural (len lf4) (len x),
@eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma conj30_imp: forall (lf5 : natural) (x : lst) (n : natural), forall _ : @eq natural (len (sort x)) lf5,
@eq natural (len (insort (sort x) n)) (Succ lf5).

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj10: forall (lf4 : lst) (n : natural) (lf3 : natural), @eq natural (len (insort lf4 n)) lf3.
Lemma conj14: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (len (insort (sort x) n)) lf3.
Lemma conj17: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj19: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj25: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj26: forall (lf5 : natural) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ lf5).
Lemma conj27: forall (lf2 : lst) (x : lst), @eq natural (len lf2) (Succ (len x)).
Lemma conj28: forall (x : lst) (lf4 : lst) (n : natural), @eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma conj30: forall (lf5 : natural) (x : lst) (n : natural), @eq natural (len (insort (sort x) n)) (Succ lf5).


<---CREATE SKETCHES--->
Time elapsed: 105 seconds
Sketches:
Sketch conj9_sketch0 : @eq natural (##hole##) lf3
Sketch conj9_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj10_sketch0 : @eq natural (len (##hole##)) lf3
Sketch conj10_sketch1 : @eq natural (##hole##) lf3
Sketch conj10_term_sketch0 : @eq lst (insort lf4 n) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (len (insort lf4 n)) (##hole##)
Sketch conj14_sketch0 : @eq natural (len (insort (##hole##) n)) lf3
Sketch conj14_sketch1 : @eq natural (##hole##) lf3
Sketch conj14_sketch2 : @eq natural (len (##hole##)) lf3
Sketch conj14_term_sketch0 : @eq lst (sort x) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (len (insort (sort x) n)) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (insort (sort x) n) (##hole##)
Sketch conj17_sketch0 : @eq natural lf1 (##hole##)
Sketch conj17_term_sketch0 : @eq natural (Succ lf5) (##hole##)
Sketch conj19_sketch0 : @eq natural lf1 (Succ (##hole##))
Sketch conj19_sketch1 : @eq natural lf1 (##hole##)
Sketch conj19_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (Succ (len x)) (##hole##)
Sketch conj25_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj25_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj25_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj26_sketch0 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj26_sketch1 : @eq natural (len (insort lf4 n)) (##hole##)
Sketch conj26_sketch2 : @eq natural (##hole##) (Succ lf5)
Sketch conj26_term_sketch0 : @eq lst (insort lf4 n) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj26_term_sketch2 : @eq natural (len (insort lf4 n)) (##hole##)
Sketch conj27_sketch0 : @eq natural (len lf2) (Succ (##hole##))
Sketch conj27_sketch1 : @eq natural (##hole##) (Succ (len x))
Sketch conj27_sketch2 : @eq natural (len lf2) (##hole##)
Sketch conj27_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj27_term_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (Succ (len x)) (##hole##)
Sketch conj28_sketch0 : @eq natural (len (insort lf4 n)) (Succ (##hole##))
Sketch conj28_sketch1 : @eq natural (len (##hole##)) (Succ (len x))
Sketch conj28_sketch2 : @eq natural (##hole##) (Succ (len x))
Sketch conj28_sketch3 : @eq natural (len (insort lf4 n)) (##hole##)
Sketch conj28_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (insort lf4 n) (##hole##)
Sketch conj28_term_sketch2 : @eq natural (len (insort lf4 n)) (##hole##)
Sketch conj28_term_sketch3 : @eq natural (Succ (len x)) (##hole##)
Sketch conj30_sketch0 : @eq natural (len (insort (##hole##) n)) (Succ lf5)
Sketch conj30_sketch1 : @eq natural (##hole##) (Succ lf5)
Sketch conj30_sketch2 : @eq natural (len (insort (sort x) n)) (##hole##)
Sketch conj30_sketch3 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj30_term_sketch0 : @eq lst (sort x) (##hole##)
Sketch conj30_term_sketch1 : @eq natural (len (insort (sort x) n)) (##hole##)
Sketch conj30_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj30_term_sketch3 : @eq lst (insort (sort x) n) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 632 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_19
Sketch conj28_sketch0 --> Problem  synth_17
Sketch conj26_term_sketch1 --> Problem  synth_11
Sketch conj14_sketch2 --> Problem  synth_3
Sketch conj27_term_sketch1 --> Problem  synth_2
Sketch conj26_sketch2 --> Problem  synth_11
Sketch conj25_sketch1 --> Problem  synth_2
Sketch conj19_sketch0 --> Problem  synth_12
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj10_term_sketch1 --> Problem  synth_5
Sketch conj30_sketch3 --> Problem  synth_15
Sketch conj14_term_sketch2 --> Problem  synth_9
Sketch conj25_term_sketch1 --> Problem  synth_11
Sketch conj30_sketch1 --> Problem  synth_11
Sketch conj26_sketch0 --> Problem  synth_15
Sketch conj30_term_sketch3 --> Problem  synth_9
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj28_term_sketch1 --> Problem  synth_4
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj26_term_sketch2 --> Problem  synth_5
Sketch conj14_term_sketch1 --> Problem  synth_8
Sketch conj26_sketch1 --> Problem  synth_5
Sketch conj30_sketch2 --> Problem  synth_8
Sketch conj28_term_sketch0 --> Problem  synth_13
Sketch conj10_sketch1 --> Problem  synth_1
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj28_term_sketch3 --> Problem  synth_14
Sketch conj27_sketch0 --> Problem  synth_16
Sketch conj27_term_sketch2 --> Problem  synth_14
Sketch conj30_term_sketch2 --> Problem  synth_11
Sketch conj19_sketch1 --> Problem  synth_10
Sketch conj10_term_sketch0 --> Problem  synth_4
Sketch conj28_sketch2 --> Problem  synth_14
Sketch conj28_sketch3 --> Problem  synth_5
Sketch conj25_sketch0 --> Problem  synth_11
Sketch conj26_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch1 --> Problem  synth_8
Sketch conj28_sketch1 --> Problem  synth_18
Sketch conj19_term_sketch1 --> Problem  synth_14
Sketch conj27_sketch2 --> Problem  synth_2
Sketch conj28_term_sketch2 --> Problem  synth_5
Sketch conj14_sketch0 --> Problem  synth_6
Sketch conj27_sketch1 --> Problem  synth_14
Sketch conj14_term_sketch0 --> Problem  synth_7
Sketch conj30_term_sketch0 --> Problem  synth_7
Sketch conj27_term_sketch0 --> Problem  synth_13
Sketch conj25_term_sketch0 --> Problem  synth_2
Sketch conj19_term_sketch0 --> Problem  synth_13
Sketch conj10_sketch0 --> Problem  synth_3
Sketch conj14_sketch1 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 794 seconds

Problem: synth_18

Problem: synth_17
 len (sort (sort (sort (sort (sort lf4)))))
 len (sort (sort (sort (sort lf4))))
 len (sort (sort (sort lf4)))
 len (sort (sort lf4))
 len (sort lf4)
 len lf4

Problem: synth_9
 sort (insort (sort (sort x)) n)
 sort (sort (insort x n))
 sort (insort (sort x) n)
 insort (sort (sort x)) n
 sort (insort x n)
 insort (sort x) n

Problem: synth_13
 len (sort (sort (sort (sort (sort x)))))
 len (sort (sort (sort (sort x))))
 len (sort (sort (sort x)))
 len (sort (sort x))
 len (sort x)
 len x

Problem: synth_6

Problem: synth_11
 Succ lf5

Problem: synth_7
 sort (sort (sort (sort (sort (sort x)))))
 sort (sort (sort (sort (sort x))))
 sort (sort (sort (sort x)))
 sort (sort (sort x))
 sort (sort x)
 sort x

Problem: synth_4
 sort (sort (insort lf4 n))
 sort (insort (sort lf4) n)
 insort (sort (sort lf4)) n
 sort (insort lf4 n)
 insort (sort lf4) n
 insort lf4 n

Problem: synth_1
 lf3

Problem: synth_16

Problem: synth_19

Problem: synth_15

Problem: synth_14
 Succ (len (sort (sort x)))
 len (insort x (len x))
 len (insort x (Succ Zero))
 len (insort x Zero)
 Succ (len (sort x))
 Succ (len x)

Problem: synth_10
 lf1

Problem: synth_8
 len (insort x (Succ n))
 len (insort x (Succ Zero))
 len (insort x n)
 len (insort x Zero)
 Succ (len (sort x))
 Succ (len x)

Problem: synth_3

Problem: synth_12

Problem: synth_5
 len (insort lf4 (Succ n))
 len (insort lf4 (Succ Zero))
 len (insort lf4 n)
 len (insort lf4 Zero)
 Succ (len (sort lf4))
 Succ (len lf4)

Problem: synth_2
 len (sort (sort (sort (sort (sort lf2)))))
 len (sort (sort (sort (sort lf2))))
 len (sort (sort (sort lf2)))
 len (sort (sort lf2))
 len (sort lf2)
 len lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 794 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len x)).
Lemma candidate_2: forall (n : natural) (lf4 : lst) (lf5 : natural), forall _ : @eq natural (len lf4) lf5, @eq natural (len (insort lf4 n)) (Succ lf5).
Lemma candidate_3: forall (n : natural) (lf4 : lst) (x : lst), forall _ : @eq natural (len lf4) (len x), @eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma candidate_4: forall (n : natural) (x : lst) (lf5 : natural), forall _ : @eq natural (len (sort x)) lf5, @eq natural (len (insort (sort x) n)) (Succ lf5).
Lemma candidate_5: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_6: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort (sort lf2)))))).
Lemma candidate_7: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort lf2))))).
Lemma candidate_8: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort lf2)))).
Lemma candidate_9: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort lf2))).
Lemma candidate_10: forall (lf2 : lst), @eq natural (len lf2) (len (sort lf2)).
Lemma candidate_11: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_12: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_13: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (sort (insort lf4 n))).
Lemma candidate_14: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (insort (sort lf4) n)).
Lemma candidate_15: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort (sort (sort lf4)) n).
Lemma candidate_16: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (insort lf4 n)).
Lemma candidate_17: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort (sort lf4) n).
Lemma candidate_18: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort lf4 n).
Lemma candidate_19: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ n))).
Lemma candidate_20: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ Zero))).
Lemma candidate_21: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 n)).
Lemma candidate_22: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 Zero)).
Lemma candidate_23: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_24: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_25: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_26: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort (sort x)))))).
Lemma candidate_27: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort x))))).
Lemma candidate_28: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort x)))).
Lemma candidate_29: forall (x : lst), @eq lst (sort x) (sort (sort (sort x))).
Lemma candidate_30: forall (x : lst), @eq lst (sort x) (sort (sort x)).
Lemma candidate_31: forall (x : lst), @eq lst (sort x) (sort x).
Lemma candidate_32: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ n))).
Lemma candidate_33: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ Zero))).
Lemma candidate_34: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x n)).
Lemma candidate_35: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x Zero)).
Lemma candidate_36: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len (sort x))).
Lemma candidate_37: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len x)).
Lemma candidate_38: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort (sort (sort x)) n)).
Lemma candidate_39: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (sort (insort x n))).
Lemma candidate_40: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort (sort x) n)).
Lemma candidate_41: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (insort (sort (sort x)) n).
Lemma candidate_42: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort x n)).
Lemma candidate_43: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (insort (sort x) n).
Lemma candidate_44: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_45: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_46: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_47: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort (sort x)))))).
Lemma candidate_48: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort x))))).
Lemma candidate_49: forall (x : lst), @eq natural (len x) (len (sort (sort (sort x)))).
Lemma candidate_50: forall (x : lst), @eq natural (len x) (len (sort (sort x))).
Lemma candidate_51: forall (x : lst), @eq natural (len x) (len (sort x)).
Lemma candidate_52: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_53: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort (sort x)))).
Lemma candidate_54: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (len x))).
Lemma candidate_55: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (Succ Zero))).
Lemma candidate_56: forall (x : lst), @eq natural (Succ (len x)) (len (insort x Zero)).
Lemma candidate_57: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort x))).
Lemma candidate_58: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_59: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_60: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort (sort lf2)))))).
Lemma candidate_61: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort lf2))))).
Lemma candidate_62: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort lf2)))).
Lemma candidate_63: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort lf2))).
Lemma candidate_64: forall (lf2 : lst), @eq natural (len lf2) (len (sort lf2)).
Lemma candidate_65: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_66: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort (sort lf2)))))).
Lemma candidate_67: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort lf2))))).
Lemma candidate_68: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort lf2)))).
Lemma candidate_69: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort lf2))).
Lemma candidate_70: forall (lf2 : lst), @eq natural (len lf2) (len (sort lf2)).
Lemma candidate_71: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_72: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_73: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ n))).
Lemma candidate_74: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ Zero))).
Lemma candidate_75: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 n)).
Lemma candidate_76: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 Zero)).
Lemma candidate_77: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_78: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_79: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_80: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (sort (insort lf4 n))).
Lemma candidate_81: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (insort (sort lf4) n)).
Lemma candidate_82: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort (sort (sort lf4)) n).
Lemma candidate_83: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (insort lf4 n)).
Lemma candidate_84: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort (sort lf4) n).
Lemma candidate_85: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort lf4 n).
Lemma candidate_86: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_87: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ n))).
Lemma candidate_88: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ Zero))).
Lemma candidate_89: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 n)).
Lemma candidate_90: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 Zero)).
Lemma candidate_91: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_92: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_93: forall (x : lst), @eq natural (Succ (len (sort (sort x)))) (Succ (len x)).
Lemma candidate_94: forall (x : lst), @eq natural (len (insort x (len x))) (Succ (len x)).
Lemma candidate_95: forall (x : lst), @eq natural (len (insort x (Succ Zero))) (Succ (len x)).
Lemma candidate_96: forall (x : lst), @eq natural (len (insort x Zero)) (Succ (len x)).
Lemma candidate_97: forall (x : lst), @eq natural (Succ (len (sort x))) (Succ (len x)).
Lemma candidate_98: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_99: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort (sort lf2)))))).
Lemma candidate_100: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort lf2))))).
Lemma candidate_101: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort lf2)))).
Lemma candidate_102: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort lf2))).
Lemma candidate_103: forall (lf2 : lst), @eq natural (len lf2) (len (sort lf2)).
Lemma candidate_104: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_105: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort (sort x)))))).
Lemma candidate_106: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort x))))).
Lemma candidate_107: forall (x : lst), @eq natural (len x) (len (sort (sort (sort x)))).
Lemma candidate_108: forall (x : lst), @eq natural (len x) (len (sort (sort x))).
Lemma candidate_109: forall (x : lst), @eq natural (len x) (len (sort x)).
Lemma candidate_110: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_111: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort (sort lf2)))))).
Lemma candidate_112: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort lf2))))).
Lemma candidate_113: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort lf2)))).
Lemma candidate_114: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort lf2))).
Lemma candidate_115: forall (lf2 : lst), @eq natural (len lf2) (len (sort lf2)).
Lemma candidate_116: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_117: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort (sort x)))).
Lemma candidate_118: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (len x))).
Lemma candidate_119: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (Succ Zero))).
Lemma candidate_120: forall (x : lst), @eq natural (Succ (len x)) (len (insort x Zero)).
Lemma candidate_121: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort x))).
Lemma candidate_122: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_123: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n))   (Succ (len (sort (sort (sort (sort (sort lf4))))))).
Lemma candidate_124: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort (sort (sort (sort lf4)))))).
Lemma candidate_125: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort (sort (sort lf4))))).
Lemma candidate_126: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort (sort lf4)))).
Lemma candidate_127: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_128: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_129: forall (x : lst), @eq natural (Succ (len (sort (sort x)))) (Succ (len x)).
Lemma candidate_130: forall (x : lst), @eq natural (len (insort x (len x))) (Succ (len x)).
Lemma candidate_131: forall (x : lst), @eq natural (len (insort x (Succ Zero))) (Succ (len x)).
Lemma candidate_132: forall (x : lst), @eq natural (len (insort x Zero)) (Succ (len x)).
Lemma candidate_133: forall (x : lst), @eq natural (Succ (len (sort x))) (Succ (len x)).
Lemma candidate_134: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_135: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ n))).
Lemma candidate_136: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ Zero))).
Lemma candidate_137: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 n)).
Lemma candidate_138: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 Zero)).
Lemma candidate_139: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_140: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_141: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort (sort x)))))).
Lemma candidate_142: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort x))))).
Lemma candidate_143: forall (x : lst), @eq natural (len x) (len (sort (sort (sort x)))).
Lemma candidate_144: forall (x : lst), @eq natural (len x) (len (sort (sort x))).
Lemma candidate_145: forall (x : lst), @eq natural (len x) (len (sort x)).
Lemma candidate_146: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_147: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (sort (insort lf4 n))).
Lemma candidate_148: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (insort (sort lf4) n)).
Lemma candidate_149: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort (sort (sort lf4)) n).
Lemma candidate_150: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (sort (insort lf4 n)).
Lemma candidate_151: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort (sort lf4) n).
Lemma candidate_152: forall (n : natural) (lf4 : lst), @eq lst (insort lf4 n) (insort lf4 n).
Lemma candidate_153: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ n))).
Lemma candidate_154: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ Zero))).
Lemma candidate_155: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 n)).
Lemma candidate_156: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 Zero)).
Lemma candidate_157: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_158: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_159: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort (sort x)))).
Lemma candidate_160: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (len x))).
Lemma candidate_161: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (Succ Zero))).
Lemma candidate_162: forall (x : lst), @eq natural (Succ (len x)) (len (insort x Zero)).
Lemma candidate_163: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort x))).
Lemma candidate_164: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_165: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_166: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ n))).
Lemma candidate_167: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ Zero))).
Lemma candidate_168: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x n)).
Lemma candidate_169: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x Zero)).
Lemma candidate_170: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len (sort x))).
Lemma candidate_171: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len x)).
Lemma candidate_172: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort (sort x)))))).
Lemma candidate_173: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort x))))).
Lemma candidate_174: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort x)))).
Lemma candidate_175: forall (x : lst), @eq lst (sort x) (sort (sort (sort x))).
Lemma candidate_176: forall (x : lst), @eq lst (sort x) (sort (sort x)).
Lemma candidate_177: forall (x : lst), @eq lst (sort x) (sort x).
Lemma candidate_178: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ n))).
Lemma candidate_179: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ Zero))).
Lemma candidate_180: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x n)).
Lemma candidate_181: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x Zero)).
Lemma candidate_182: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len (sort x))).
Lemma candidate_183: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len x)).
Lemma candidate_184: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_185: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort (sort (sort x)) n)).
Lemma candidate_186: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (sort (insort x n))).
Lemma candidate_187: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort (sort x) n)).
Lemma candidate_188: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (insort (sort (sort x)) n).
Lemma candidate_189: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort x n)).
Lemma candidate_190: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (insort (sort x) n).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1074 seconds
Duplicates removed: 128
Filtered by Quickchick: 5
Filtered by script: 14
Remaining: 43

Lemmas: 
Lemma candidate_30: forall (x : lst), @eq lst (sort x) (sort (sort x)).
Lemma candidate_29: forall (x : lst), @eq lst (sort x) (sort (sort (sort x))).
Lemma candidate_50: forall (x : lst), @eq natural (len x) (len (sort (sort x))).
Lemma candidate_9: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort lf2))).
Lemma candidate_28: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort x)))).
Lemma candidate_42: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort x n)).
Lemma candidate_96: forall (x : lst), @eq natural (len (insort x Zero)) (Succ (len x)).
Lemma candidate_56: forall (x : lst), @eq natural (Succ (len x)) (len (insort x Zero)).
Lemma candidate_49: forall (x : lst), @eq natural (len x) (len (sort (sort (sort x)))).
Lemma candidate_24: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len lf4)).
Lemma candidate_94: forall (x : lst), @eq natural (len (insort x (len x))) (Succ (len x)).
Lemma candidate_54: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (len x))).
Lemma candidate_8: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort lf2)))).
Lemma candidate_27: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort x))))).
Lemma candidate_41: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (insort (sort (sort x)) n).
Lemma candidate_40: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort (sort x) n)).
Lemma candidate_39: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (sort (insort x n))).
Lemma candidate_95: forall (x : lst), @eq natural (len (insort x (Succ Zero))) (Succ (len x)).
Lemma candidate_93: forall (x : lst), @eq natural (Succ (len (sort (sort x)))) (Succ (len x)).
Lemma candidate_55: forall (x : lst), @eq natural (Succ (len x)) (len (insort x (Succ Zero))).
Lemma candidate_53: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (sort (sort x)))).
Lemma candidate_48: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort x))))).
Lemma candidate_34: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x n)).
Lemma candidate_23: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort lf4))).
Lemma candidate_22: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 Zero)).
Lemma candidate_36: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (Succ (len (sort x))).
Lemma candidate_35: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x Zero)).
Lemma candidate_7: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort lf2))))).
Lemma candidate_26: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort (sort x)))))).
Lemma candidate_19: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ n))).
Lemma candidate_38: forall (n : natural) (x : lst), @eq lst (insort (sort x) n) (sort (insort (sort (sort x)) n)).
Lemma candidate_47: forall (x : lst), @eq natural (len x) (len (sort (sort (sort (sort (sort x)))))).
Lemma candidate_126: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort (sort lf4)))).
Lemma candidate_32: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ n))).
Lemma candidate_20: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (len (insort lf4 (Succ Zero))).
Lemma candidate_33: forall (n : natural) (x : lst), @eq natural (len (insort (sort x) n)) (len (insort x (Succ Zero))).
Lemma candidate_6: forall (lf2 : lst), @eq natural (len lf2) (len (sort (sort (sort (sort (sort lf2)))))).
Lemma candidate_125: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort (sort (sort lf4))))).
Lemma candidate_124: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n)) (Succ (len (sort (sort (sort (sort lf4)))))).
Lemma candidate_2: forall (n : natural) (lf4 : lst) (lf5 : natural), forall _ : @eq natural (len lf4) lf5, @eq natural (len (insort lf4 n)) (Succ lf5).
Lemma candidate_123: forall (n : natural) (lf4 : lst), @eq natural (len (insort lf4 n))   (Succ (len (sort (sort (sort (sort (sort lf4))))))).
Lemma candidate_3: forall (n : natural) (lf4 : lst) (x : lst), forall _ : @eq natural (len lf4) (len x), @eq natural (len (insort lf4 n)) (Succ (len x)).
Lemma candidate_4: forall (n : natural) (x : lst) (lf5 : natural), forall _ : @eq natural (len (sort x)) lf5, @eq natural (len (insort (sort x) n)) (Succ lf5).
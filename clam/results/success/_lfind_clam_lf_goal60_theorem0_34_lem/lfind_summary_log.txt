LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal60_theorem0_34_lem

Number of Lemmas: 400
Number of Lemmas (after duplicates removed): 112
Number of Lemmas (after QuickChick used to filter): 80
* Number of Candidate Lemmas: 65

Time until ranking: 1448
Time to complete: 4189

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 3

Lemma candidate_115: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend y (Cons z Nil))).
Lemma candidate_34: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_64: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).

Category 3 (provable):
Count = 13

Lemma candidate_99: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_6: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_122: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_97: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_135: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend lf5 Nil)) (Cons z lf5).
Lemma candidate_105: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_28: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_26: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y lf4) Nil).
Lemma candidate_132: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (lfappend lf5 Nil) Nil)) (Cons z lf5).
Lemma candidate_102: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_84: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y Nil) (Cons z Nil)).

Category 3 (not provable):
Count = 49

Lemma candidate_98: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_5: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_121: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_123: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_16: forall (lf3 : lst), @eq lst (rev (rev (rev (rev lf3)))) lf3.
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_96: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_95: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_17: forall (lf3 : lst), @eq lst (rev (rev (lfappend lf3 Nil))) lf3.
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_2: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_134: forall (z : natural) (lf5 : lst), @eq lst (Cons z (rev (rev lf5))) (Cons z lf5).
Lemma candidate_104: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_185: forall (z : natural) (y : lst), @eq lst (Cons z (rev (rev (rev y)))) (Cons z (rev y)).
Lemma candidate_120: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_119: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_113: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (rev (rev y)))).
Lemma candidate_27: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev (rev lf4))).
Lemma candidate_189: forall (z : natural) (y : lst), @eq lst (Cons z (lfappend (rev y) Nil)) (Cons z (rev y)).
Lemma candidate_186: forall (z : natural) (y : lst), @eq lst (Cons z (rev (lfappend y Nil))) (Cons z (rev y)).
Lemma candidate_117: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_114: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_15: forall (lf3 : lst), @eq lst (rev (lfappend (lfappend (rev lf3) Nil) Nil)) lf3.
Lemma candidate_14: forall (lf3 : lst), @eq lst (rev (lfappend (rev (lfappend lf3 Nil)) Nil)) lf3.
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_8: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_133: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_131: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (rev (rev lf5)) Nil)) (Cons z lf5).
Lemma candidate_103: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_101: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_188: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_116: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_88: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (rev (rev y)))).
Lemma candidate_218: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y Nil) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_216: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y (Cons z Nil)) Nil)) (Cons z (rev y)).
Lemma candidate_92: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_86: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_152: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (rev (rev lf5))) (Cons z Nil))) (Cons z lf5).
Lemma candidate_150: forall (z : natural) (lf5 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (Cons z Nil))))) (Cons z lf5).
Lemma candidate_82: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y (Cons z Nil)) Nil).
Lemma candidate_153: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (lfappend lf5 Nil)) (Cons z Nil))) (Cons z lf5).
Lemma candidate_151: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) (Cons z Nil)) Nil)) (Cons z lf5).
Lemma candidate_149: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) Nil) (Cons z Nil))) (Cons z lf5).
Lemma candidate_217: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil))   (Cons z (rev y)).
Lemma candidate_215: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)))   (Cons z (rev y)).
Lemma candidate_91: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil)))   (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_83: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil).
Lemma candidate_81: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)).
File Information
- File name: goal60
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal60_theorem0_34_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal60_theorem0_34_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x y0 : lst) (z0 : natural),
@eq lst (rev (lfappend x (lfappend y0 (Cons z0 Nil))))
  (Cons z0 (rev (lfappend x y0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y))

* Hypothesis:
y : lst
z : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
y : lst
z : natural

* Terms:
lfappend y (Cons z Nil) : lst
Cons z Nil : lst
@eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)) : Prop
lst : Set
y : lst
z : natural
Cons z (rev y) : lst
rev (lfappend y (Cons z Nil)) : lst
natural : Set
rev y : lst
Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons z (rev y)
lf1 : lst = rev (lfappend y (Cons z Nil))
lf4 : lst = Cons z Nil
lf5 : lst = rev y
lf2 : lst = lfappend y (Cons z Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj19: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend y lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z lf6))) lf3.
Lemma conj28: forall (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z Nil))) lf3.
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (z : natural), @eq lst lf1 (Cons z lf5).
Lemma conj37: forall (lf1 : lst) (y : lst) (z : natural), @eq lst lf1 (Cons z (rev y)).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (z : natural), @eq lst (rev lf2) (Cons z lf5).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z lf5).
Lemma conj53: forall (lf2 : lst) (y : lst) (z : natural), @eq lst (rev lf2) (Cons z (rev y)).
Lemma conj55: forall (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z (rev y)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z lf5).
Lemma conj60: forall (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma conj63: forall (lf6 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma conj64: forall (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).


<---VALIDITY CHECKS--->
Time elapsed: 79 seconds
Valid:
Lemma conj64: forall (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).

Invalid:
Lemma conj63: forall (lf6 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma conj60: forall (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z lf5).
Lemma conj55: forall (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z (rev y)).
Lemma conj53: forall (lf2 : lst) (y : lst) (z : natural), @eq lst (rev lf2) (Cons z (rev y)).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z lf5).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (z : natural), @eq lst (rev lf2) (Cons z lf5).
Lemma conj37: forall (lf1 : lst) (y : lst) (z : natural), @eq lst lf1 (Cons z (rev y)).
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (z : natural), @eq lst lf1 (Cons z lf5).
Lemma conj28: forall (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z Nil))) lf3.
Lemma conj27: forall (lf6 : lst) (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z lf6))) lf3.
Lemma conj19: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend y lf4)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 79 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma conj60: forall (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z lf5).
Lemma conj55: forall (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z (rev y)).
Lemma conj53: forall (lf2 : lst) (y : lst) (z : natural), @eq lst (rev lf2) (Cons z (rev y)).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z lf5).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (z : natural), @eq lst (rev lf2) (Cons z lf5).
Lemma conj37: forall (lf1 : lst) (y : lst) (z : natural), @eq lst lf1 (Cons z (rev y)).
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (z : natural), @eq lst lf1 (Cons z lf5).
Lemma conj28: forall (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z Nil))) lf3.
Lemma conj27: forall (lf6 : lst) (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z lf6))) lf3.
Lemma conj19: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend y lf4)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 100 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj19: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend y lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z lf6))) lf3.
Lemma conj28: forall (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z Nil))) lf3.
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (z : natural), @eq lst lf1 (Cons z lf5).
Lemma conj37: forall (lf1 : lst) (y : lst) (z : natural), @eq lst lf1 (Cons z (rev y)).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (z : natural), @eq lst (rev lf2) (Cons z lf5).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z lf5).
Lemma conj53: forall (lf2 : lst) (y : lst) (z : natural), @eq lst (rev lf2) (Cons z (rev y)).
Lemma conj55: forall (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z (rev y)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z lf5).
Lemma conj60: forall (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma conj63: forall (lf6 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).


<---CREATE SKETCHES--->
Time elapsed: 100 seconds
Sketches:
Sketch conj17_sketch0 : @eq lst (##hole##) lf3
Sketch conj17_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj19_sketch0 : @eq lst (rev (##hole##)) lf3
Sketch conj19_sketch1 : @eq lst (##hole##) lf3
Sketch conj19_term_sketch0 : @eq lst (lfappend y lf4) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (rev (lfappend y lf4)) (##hole##)
Sketch conj27_sketch0 : @eq lst (rev (lfappend y (##hole##))) lf3
Sketch conj27_sketch1 : @eq lst (rev (##hole##)) lf3
Sketch conj27_sketch2 : @eq lst (##hole##) lf3
Sketch conj27_term_sketch0 : @eq lst (Cons z lf6) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (lfappend y (Cons z lf6)) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (rev (lfappend y (Cons z lf6))) (##hole##)
Sketch conj28_sketch0 : @eq lst (rev (##hole##)) lf3
Sketch conj28_sketch1 : @eq lst (rev (lfappend y (##hole##))) lf3
Sketch conj28_sketch2 : @eq lst (##hole##) lf3
Sketch conj28_sketch3 : @eq lst (rev (lfappend y (Cons z (##hole##)))) lf3
Sketch conj28_term_sketch0 : @eq lst (lfappend y (Cons z Nil)) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (Cons z Nil) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (rev (lfappend y (Cons z Nil))) (##hole##)
Sketch conj28_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj33_sketch0 : @eq lst lf1 (##hole##)
Sketch conj33_term_sketch0 : @eq lst (Cons z lf5) (##hole##)
Sketch conj37_sketch0 : @eq lst lf1 (##hole##)
Sketch conj37_sketch1 : @eq lst lf1 (Cons z (##hole##))
Sketch conj37_term_sketch0 : @eq lst (Cons z (rev y)) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (rev y) (##hole##)
Sketch conj49_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj49_sketch1 : @eq lst (##hole##) (Cons z lf5)
Sketch conj49_term_sketch0 : @eq lst (Cons z lf5) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (rev lf2) (##hole##)
Sketch conj51_sketch0 : @eq lst (rev (##hole##)) (Cons z lf5)
Sketch conj51_sketch1 : @eq lst (rev (lfappend y lf4)) (##hole##)
Sketch conj51_sketch2 : @eq lst (##hole##) (Cons z lf5)
Sketch conj51_term_sketch0 : @eq lst (lfappend y lf4) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (Cons z lf5) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (rev (lfappend y lf4)) (##hole##)
Sketch conj53_sketch0 : @eq lst (##hole##) (Cons z (rev y))
Sketch conj53_sketch1 : @eq lst (rev lf2) (##hole##)
Sketch conj53_sketch2 : @eq lst (rev lf2) (Cons z (##hole##))
Sketch conj53_term_sketch0 : @eq lst (rev lf2) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (Cons z (rev y)) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj55_sketch0 : @eq lst (rev (##hole##)) (Cons z (rev y))
Sketch conj55_sketch1 : @eq lst (rev (lfappend y lf4)) (##hole##)
Sketch conj55_sketch2 : @eq lst (rev (lfappend y lf4)) (Cons z (##hole##))
Sketch conj55_sketch3 : @eq lst (##hole##) (Cons z (rev y))
Sketch conj55_term_sketch0 : @eq lst (lfappend y lf4) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (Cons z (rev y)) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (rev (lfappend y lf4)) (##hole##)
Sketch conj59_sketch0 : @eq lst (rev (lfappend y (Cons z lf6))) (##hole##)
Sketch conj59_sketch1 : @eq lst (rev (lfappend y (##hole##))) (Cons z lf5)
Sketch conj59_sketch2 : @eq lst (rev (##hole##)) (Cons z lf5)
Sketch conj59_sketch3 : @eq lst (##hole##) (Cons z lf5)
Sketch conj59_term_sketch0 : @eq lst (Cons z lf5) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (Cons z lf6) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend y (Cons z lf6)) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (rev (lfappend y (Cons z lf6))) (##hole##)
Sketch conj60_sketch0 : @eq lst (rev (##hole##)) (Cons z lf5)
Sketch conj60_sketch1 : @eq lst (rev (lfappend y (Cons z Nil))) (##hole##)
Sketch conj60_sketch2 : @eq lst (rev (lfappend y (##hole##))) (Cons z lf5)
Sketch conj60_sketch3 : @eq lst (##hole##) (Cons z lf5)
Sketch conj60_sketch4 : @eq lst (rev (lfappend y (Cons z (##hole##)))) (Cons z lf5)
Sketch conj60_term_sketch0 : @eq lst (lfappend y (Cons z Nil)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (Cons z lf5) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (Cons z Nil) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (rev (lfappend y (Cons z Nil))) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj63_sketch0 : @eq lst (rev (lfappend y (##hole##))) (Cons z (rev y))
Sketch conj63_sketch1 : @eq lst (rev (##hole##)) (Cons z (rev y))
Sketch conj63_sketch2 : @eq lst (##hole##) (Cons z (rev y))
Sketch conj63_sketch3 : @eq lst (rev (lfappend y (Cons z lf6))) (##hole##)
Sketch conj63_sketch4 : @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (##hole##))
Sketch conj63_term_sketch0 : @eq lst (Cons z lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (lfappend y (Cons z lf6)) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (rev (lfappend y (Cons z lf6))) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (Cons z (rev y)) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 817 seconds
Problems per Sketch:
Sketch conj33_sketch0 --> Problem  synth_15
Sketch conj28_sketch0 --> Problem  synth_3
Sketch conj53_sketch1 --> Problem  synth_2
Sketch conj60_term_sketch1 --> Problem  synth_16
Sketch conj59_term_sketch2 --> Problem  synth_8
Sketch conj63_sketch4 --> Problem  synth_25
Sketch conj60_term_sketch4 --> Problem  synth_14
Sketch conj59_term_sketch1 --> Problem  synth_7
Sketch conj59_sketch1 --> Problem  synth_22
Sketch conj53_term_sketch2 --> Problem  synth_18
Sketch conj60_sketch0 --> Problem  synth_19
Sketch conj53_term_sketch0 --> Problem  synth_2
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj28_term_sketch1 --> Problem  synth_12
Sketch conj63_term_sketch0 --> Problem  synth_7
Sketch conj55_sketch3 --> Problem  synth_13
Sketch conj60_term_sketch3 --> Problem  synth_13
Sketch conj60_term_sketch2 --> Problem  synth_12
Sketch conj60_sketch1 --> Problem  synth_13
Sketch conj55_sketch1 --> Problem  synth_5
Sketch conj28_term_sketch3 --> Problem  synth_14
Sketch conj60_sketch2 --> Problem  synth_22
Sketch conj59_sketch3 --> Problem  synth_16
Sketch conj27_term_sketch2 --> Problem  synth_9
Sketch conj63_term_sketch4 --> Problem  synth_18
Sketch conj59_sketch2 --> Problem  synth_19
Sketch conj28_sketch2 --> Problem  synth_1
Sketch conj33_term_sketch0 --> Problem  synth_16
Sketch conj19_term_sketch1 --> Problem  synth_5
Sketch conj51_term_sketch2 --> Problem  synth_5
Sketch conj27_sketch2 --> Problem  synth_1
Sketch conj28_term_sketch2 --> Problem  synth_13
Sketch conj60_term_sketch0 --> Problem  synth_11
Sketch conj27_sketch1 --> Problem  synth_3
Sketch conj53_sketch0 --> Problem  synth_13
Sketch conj60_sketch3 --> Problem  synth_16
Sketch conj51_sketch0 --> Problem  synth_19
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj63_term_sketch1 --> Problem  synth_8
Sketch conj51_term_sketch1 --> Problem  synth_16
Sketch conj51_term_sketch0 --> Problem  synth_4
Sketch conj55_term_sketch0 --> Problem  synth_4
Sketch conj27_term_sketch1 --> Problem  synth_8
Sketch conj19_sketch0 --> Problem  synth_3
Sketch conj17_sketch0 --> Problem  synth_1
Sketch conj49_sketch0 --> Problem  synth_2
Sketch conj63_sketch2 --> Problem  synth_13
Sketch conj37_sketch0 --> Problem  synth_15
Sketch conj55_term_sketch1 --> Problem  synth_13
Sketch conj37_term_sketch0 --> Problem  synth_13
Sketch conj59_sketch0 --> Problem  synth_9
Sketch conj49_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch3 --> Problem  synth_13
Sketch conj63_sketch0 --> Problem  synth_24
Sketch conj55_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch3 --> Problem  synth_9
Sketch conj59_term_sketch0 --> Problem  synth_16
Sketch conj53_term_sketch1 --> Problem  synth_13
Sketch conj28_term_sketch0 --> Problem  synth_11
Sketch conj59_term_sketch3 --> Problem  synth_9
Sketch conj51_sketch1 --> Problem  synth_5
Sketch conj55_sketch0 --> Problem  synth_11
Sketch conj63_sketch1 --> Problem  synth_11
Sketch conj53_sketch2 --> Problem  synth_20
Sketch conj27_sketch0 --> Problem  synth_6
Sketch conj19_sketch1 --> Problem  synth_1
Sketch conj28_sketch3 --> Problem  synth_10
Sketch conj28_sketch1 --> Problem  synth_6
Sketch conj37_term_sketch1 --> Problem  synth_18
Sketch conj60_sketch4 --> Problem  synth_23
Sketch conj55_term_sketch2 --> Problem  synth_18
Sketch conj27_term_sketch0 --> Problem  synth_7
Sketch conj51_sketch2 --> Problem  synth_16
Sketch conj63_term_sketch2 --> Problem  synth_9
Sketch conj55_sketch2 --> Problem  synth_21
Sketch conj49_sketch1 --> Problem  synth_16
Sketch conj49_term_sketch0 --> Problem  synth_16
Sketch conj37_sketch1 --> Problem  synth_17


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 969 seconds

Problem: synth_22
 Cons z Nil

Problem: synth_20

Problem: synth_18
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_17

Problem: synth_21
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_9
 Cons z (lfappend (rev y) lf6)
 Cons z (lfappend (rev y) Nil)
 lfappend (rev lf6) (Cons z (rev y))
 Cons z (lfappend lf6 (rev y))
 lfappend lf6 (Cons z (rev y))
 Cons z (rev y)

Problem: synth_25
 rev (lfappend y lf6)
 rev (lfappend y Nil)
 lfappend (rev y) lf6
 lfappend (rev y) Nil
 lfappend lf6 (rev y)
 rev y

Problem: synth_13
 Cons z (rev (rev (rev y)))
 Cons z (rev (lfappend y Nil))
 rev (lfappend y (Cons z Nil))
 rev (lfappend (rev (rev y)) (Cons z Nil))
 Cons z (lfappend (rev y) Nil)
 Cons z (rev y)

Problem: synth_6

Problem: synth_11
 lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)
 lfappend (lfappend y (Cons z Nil)) Nil
 lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil
 lfappend (lfappend y Nil) (Cons z Nil)
 lfappend y (Cons z Nil)
 lfappend (rev (rev y)) (Cons z Nil)

Problem: synth_7
 lfappend lf6 (Cons z Nil)
 lfappend (rev (rev lf6)) (Cons z Nil)
 lfappend (rev lf6) (Cons z Nil)
 Cons z (rev lf6)
 Cons z lf6
 Cons z Nil

Problem: synth_4
 lfappend (lfappend y lf4) Nil
 lfappend y (rev (rev lf4))
 lfappend y (lfappend lf4 Nil)
 rev (lfappend lf4 (rev y))
 lfappend y (rev lf4)
 lfappend y lf4

Problem: synth_1
 rev (lfappend (rev lf3) Nil)
 lfappend (rev (rev lf3)) Nil
 lfappend (lfappend lf3 Nil) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_23
 Nil

Problem: synth_16
 Cons z (lfappend (rev (rev lf5)) Nil)
 Cons z (lfappend (lfappend lf5 Nil) Nil)
 rev (lfappend (rev lf5) (Cons z Nil))
 Cons z (rev (rev lf5))
 Cons z (lfappend lf5 Nil)
 Cons z lf5

Problem: synth_19
 lfappend (lfappend (rev lf5) Nil) (Cons z Nil)
 rev (rev (lfappend (rev lf5) (Cons z Nil)))
 lfappend (lfappend (rev lf5) (Cons z Nil)) Nil
 lfappend (rev (rev (rev lf5))) (Cons z Nil)
 lfappend (rev (lfappend lf5 Nil)) (Cons z Nil)
 lfappend (rev lf5) (Cons z Nil)

Problem: synth_15
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_14
 Nil

Problem: synth_10
 Nil

Problem: synth_8
 lfappend (rev (lfappend lf6 (rev y))) (Cons z Nil)
 rev (lfappend lf6 (Cons z (rev y)))
 lfappend y (Cons z (rev lf6))
 lfappend y (Cons z lf6)
 lfappend y (Cons z Nil)
 lfappend (rev (rev y)) (Cons z Nil)

Problem: synth_24
 Cons z Nil

Problem: synth_3
 lfappend (rev (lfappend lf3 Nil)) Nil
 lfappend (lfappend (rev lf3) Nil) Nil
 rev (rev (rev lf3))
 rev (lfappend lf3 Nil)
 lfappend (rev lf3) Nil
 rev lf3

Problem: synth_12
 Cons z Nil

Problem: synth_5
 rev (rev (lfappend lf4 (rev y)))
 lfappend (lfappend lf4 (rev y)) Nil
 lfappend (rev lf4) (rev y)
 rev (lfappend y (rev lf4))
 rev (lfappend y lf4)
 lfappend lf4 (rev y)

Problem: synth_2
 lfappend (rev (lfappend lf2 Nil)) Nil
 lfappend (lfappend (rev lf2) Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 rev lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 969 seconds
Lemmas:
Lemma candidate_1: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_2: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_5: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_6: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_7: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_8: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_13: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_14: forall (lf3 : lst), @eq lst (rev (lfappend (rev (lfappend lf3 Nil)) Nil)) lf3.
Lemma candidate_15: forall (lf3 : lst), @eq lst (rev (lfappend (lfappend (rev lf3) Nil) Nil)) lf3.
Lemma candidate_16: forall (lf3 : lst), @eq lst (rev (rev (rev (rev lf3)))) lf3.
Lemma candidate_17: forall (lf3 : lst), @eq lst (rev (rev (lfappend lf3 Nil))) lf3.
Lemma candidate_18: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_19: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_20: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_21: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_22: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_23: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_24: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_25: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_26: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y lf4) Nil).
Lemma candidate_27: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev (rev lf4))).
Lemma candidate_28: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_29: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (rev (lfappend lf4 (rev y))).
Lemma candidate_30: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev lf4)).
Lemma candidate_31: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y lf4).
Lemma candidate_32: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (rev (lfappend lf4 (rev y)))).
Lemma candidate_33: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (lfappend lf4 (rev y)) Nil).
Lemma candidate_34: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_35: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y (rev lf4))).
Lemma candidate_36: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y lf4)).
Lemma candidate_37: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend lf4 (rev y)).
Lemma candidate_38: forall (lf3 : lst), @eq lst (rev (lfappend (rev (lfappend lf3 Nil)) Nil)) lf3.
Lemma candidate_39: forall (lf3 : lst), @eq lst (rev (lfappend (lfappend (rev lf3) Nil) Nil)) lf3.
Lemma candidate_40: forall (lf3 : lst), @eq lst (rev (rev (rev (rev lf3)))) lf3.
Lemma candidate_41: forall (lf3 : lst), @eq lst (rev (rev (lfappend lf3 Nil))) lf3.
Lemma candidate_42: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_43: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_44: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_45: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_46: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_47: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_48: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_49: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_50: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend lf6 (Cons z Nil)).
Lemma candidate_51: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend (rev (rev lf6)) (Cons z Nil)).
Lemma candidate_52: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend (rev lf6) (Cons z Nil)).
Lemma candidate_53: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z (rev lf6)).
Lemma candidate_54: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z lf6).
Lemma candidate_55: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z Nil).
Lemma candidate_56: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6))   (lfappend (rev (lfappend lf6 (rev y))) (Cons z Nil)).
Lemma candidate_57: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (rev (lfappend lf6 (Cons z (rev y)))).
Lemma candidate_58: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z (rev lf6))).
Lemma candidate_59: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z lf6)).
Lemma candidate_60: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z Nil)).
Lemma candidate_61: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_62: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) lf6)).
Lemma candidate_63: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_64: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).
Lemma candidate_65: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend lf6 (rev y))).
Lemma candidate_66: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend lf6 (Cons z (rev y))).
Lemma candidate_67: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma candidate_68: forall (lf3 : lst), @eq lst (rev (lfappend (rev (lfappend lf3 Nil)) Nil)) lf3.
Lemma candidate_69: forall (lf3 : lst), @eq lst (rev (lfappend (lfappend (rev lf3) Nil) Nil)) lf3.
Lemma candidate_70: forall (lf3 : lst), @eq lst (rev (rev (rev (rev lf3)))) lf3.
Lemma candidate_71: forall (lf3 : lst), @eq lst (rev (rev (lfappend lf3 Nil))) lf3.
Lemma candidate_72: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_73: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_74: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_75: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_76: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_77: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_78: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_79: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_80: forall (lf3 : lst) (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z (Nil)))) lf3.
Lemma candidate_81: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)).
Lemma candidate_82: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y (Cons z Nil)) Nil).
Lemma candidate_83: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil).
Lemma candidate_84: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y Nil) (Cons z Nil)).
Lemma candidate_85: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend y (Cons z Nil)).
Lemma candidate_86: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_87: forall (z : natural), @eq lst (Cons z Nil) (Cons z Nil).
Lemma candidate_88: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (rev (rev y)))).
Lemma candidate_89: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (lfappend y Nil))).
Lemma candidate_90: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (rev (lfappend y (Cons z Nil))).
Lemma candidate_91: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil)))   (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_92: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_93: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_94: @eq lst Nil (Nil).
Lemma candidate_95: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_96: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_97: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_98: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_99: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_100: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_101: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_102: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_103: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_104: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_105: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_106: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_107: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_108: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_109: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_110: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_111: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_112: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_113: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (rev (rev y)))).
Lemma candidate_114: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_115: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend y (Cons z Nil))).
Lemma candidate_116: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_117: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_118: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_119: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_120: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_121: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_122: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_123: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_124: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_125: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_126: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_127: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_128: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_129: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_130: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_131: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (rev (rev lf5)) Nil)) (Cons z lf5).
Lemma candidate_132: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (lfappend lf5 Nil) Nil)) (Cons z lf5).
Lemma candidate_133: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_134: forall (z : natural) (lf5 : lst), @eq lst (Cons z (rev (rev lf5))) (Cons z lf5).
Lemma candidate_135: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend lf5 Nil)) (Cons z lf5).
Lemma candidate_136: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_137: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_138: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_139: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_140: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_141: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_142: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_143: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_144: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_145: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_146: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_147: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_148: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_149: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) Nil) (Cons z Nil))) (Cons z lf5).
Lemma candidate_150: forall (z : natural) (lf5 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (Cons z Nil))))) (Cons z lf5).
Lemma candidate_151: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) (Cons z Nil)) Nil)) (Cons z lf5).
Lemma candidate_152: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (rev (rev lf5))) (Cons z Nil))) (Cons z lf5).
Lemma candidate_153: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (lfappend lf5 Nil)) (Cons z Nil))) (Cons z lf5).
Lemma candidate_154: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_155: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (rev (lfappend lf4 (rev y)))).
Lemma candidate_156: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (lfappend lf4 (rev y)) Nil).
Lemma candidate_157: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_158: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y (rev lf4))).
Lemma candidate_159: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y lf4)).
Lemma candidate_160: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend lf4 (rev y)).
Lemma candidate_161: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (rev (rev lf5)) Nil)) (Cons z lf5).
Lemma candidate_162: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (lfappend lf5 Nil) Nil)) (Cons z lf5).
Lemma candidate_163: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_164: forall (z : natural) (lf5 : lst), @eq lst (Cons z (rev (rev lf5))) (Cons z lf5).
Lemma candidate_165: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend lf5 Nil)) (Cons z lf5).
Lemma candidate_166: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_167: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y lf4) Nil).
Lemma candidate_168: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev (rev lf4))).
Lemma candidate_169: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_170: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (rev (lfappend lf4 (rev y))).
Lemma candidate_171: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev lf4)).
Lemma candidate_172: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y lf4).
Lemma candidate_173: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_174: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_175: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_176: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_177: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_178: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_179: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (rev (lfappend lf4 (rev y)))).
Lemma candidate_180: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (lfappend lf4 (rev y)) Nil).
Lemma candidate_181: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_182: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y (rev lf4))).
Lemma candidate_183: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y lf4)).
Lemma candidate_184: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend lf4 (rev y)).
Lemma candidate_185: forall (z : natural) (y : lst), @eq lst (Cons z (rev (rev (rev y)))) (Cons z (rev y)).
Lemma candidate_186: forall (z : natural) (y : lst), @eq lst (Cons z (rev (lfappend y Nil))) (Cons z (rev y)).
Lemma candidate_187: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_188: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_189: forall (z : natural) (y : lst), @eq lst (Cons z (lfappend (rev y) Nil)) (Cons z (rev y)).
Lemma candidate_190: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_191: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_192: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_193: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_194: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_195: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_196: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_197: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_198: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_199: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_200: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_201: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_202: forall (lf2 : lst), @eq lst (rev lf2) (rev lf2).
Lemma candidate_203: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (rev (rev y)))).
Lemma candidate_204: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_205: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend y (Cons z Nil))).
Lemma candidate_206: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_207: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_208: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_209: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_210: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_211: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_212: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_213: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_214: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_215: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)))   (Cons z (rev y)).
Lemma candidate_216: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y (Cons z Nil)) Nil)) (Cons z (rev y)).
Lemma candidate_217: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil))   (Cons z (rev y)).
Lemma candidate_218: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y Nil) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_219: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_220: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_221: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (rev (lfappend lf4 (rev y)))).
Lemma candidate_222: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (lfappend lf4 (rev y)) Nil).
Lemma candidate_223: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_224: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y (rev lf4))).
Lemma candidate_225: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y lf4)).
Lemma candidate_226: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend lf4 (rev y)).
Lemma candidate_227: forall (z : natural) (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (Cons z (lfappend (rev (lfappend y Nil)) Nil)).
Lemma candidate_228: forall (z : natural) (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (Cons z (lfappend (lfappend (rev y) Nil) Nil)).
Lemma candidate_229: forall (z : natural) (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (Cons z (rev (rev (rev y)))).
Lemma candidate_230: forall (z : natural) (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_231: forall (z : natural) (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_232: forall (z : natural) (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (Cons z (rev y)).
Lemma candidate_233: forall (z : natural) (y : lst), @eq lst (Cons z (rev (rev (rev y)))) (Cons z (rev y)).
Lemma candidate_234: forall (z : natural) (y : lst), @eq lst (Cons z (rev (lfappend y Nil))) (Cons z (rev y)).
Lemma candidate_235: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_236: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_237: forall (z : natural) (y : lst), @eq lst (Cons z (lfappend (rev y) Nil)) (Cons z (rev y)).
Lemma candidate_238: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_239: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y lf4) Nil).
Lemma candidate_240: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev (rev lf4))).
Lemma candidate_241: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_242: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (rev (lfappend lf4 (rev y))).
Lemma candidate_243: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev lf4)).
Lemma candidate_244: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y lf4).
Lemma candidate_245: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (rev (rev y)))).
Lemma candidate_246: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_247: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend y (Cons z Nil))).
Lemma candidate_248: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_249: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_250: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_251: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_252: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_253: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_254: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_255: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_256: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_257: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (rev (lfappend lf4 (rev y)))).
Lemma candidate_258: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (lfappend lf4 (rev y)) Nil).
Lemma candidate_259: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_260: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y (rev lf4))).
Lemma candidate_261: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (rev (lfappend y lf4)).
Lemma candidate_262: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend lf4 (rev y)).
Lemma candidate_263: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) lf6)).
Lemma candidate_264: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_265: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).
Lemma candidate_266: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend lf6 (rev y))).
Lemma candidate_267: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend lf6 (Cons z (rev y))).
Lemma candidate_268: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma candidate_269: forall (z : natural) (y : lst) (lf5 : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma candidate_270: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) Nil) (Cons z Nil))) (Cons z lf5).
Lemma candidate_271: forall (z : natural) (lf5 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (Cons z Nil))))) (Cons z lf5).
Lemma candidate_272: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) (Cons z Nil)) Nil)) (Cons z lf5).
Lemma candidate_273: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (rev (rev lf5))) (Cons z Nil))) (Cons z lf5).
Lemma candidate_274: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (lfappend lf5 Nil)) (Cons z Nil))) (Cons z lf5).
Lemma candidate_275: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_276: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (rev (rev lf5)) Nil)) (Cons z lf5).
Lemma candidate_277: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (lfappend lf5 Nil) Nil)) (Cons z lf5).
Lemma candidate_278: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_279: forall (z : natural) (lf5 : lst), @eq lst (Cons z (rev (rev lf5))) (Cons z lf5).
Lemma candidate_280: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend lf5 Nil)) (Cons z lf5).
Lemma candidate_281: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_282: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_283: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_284: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_285: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_286: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_287: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_288: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend lf6 (Cons z Nil)).
Lemma candidate_289: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend (rev (rev lf6)) (Cons z Nil)).
Lemma candidate_290: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend (rev lf6) (Cons z Nil)).
Lemma candidate_291: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z (rev lf6)).
Lemma candidate_292: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z lf6).
Lemma candidate_293: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z Nil).
Lemma candidate_294: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6))   (lfappend (rev (lfappend lf6 (rev y))) (Cons z Nil)).
Lemma candidate_295: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (rev (lfappend lf6 (Cons z (rev y)))).
Lemma candidate_296: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z (rev lf6))).
Lemma candidate_297: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z lf6)).
Lemma candidate_298: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z Nil)).
Lemma candidate_299: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_300: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) lf6)).
Lemma candidate_301: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_302: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).
Lemma candidate_303: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend lf6 (rev y))).
Lemma candidate_304: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend lf6 (Cons z (rev y))).
Lemma candidate_305: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma candidate_306: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) Nil) (Cons z Nil))) (Cons z lf5).
Lemma candidate_307: forall (z : natural) (lf5 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (Cons z Nil))))) (Cons z lf5).
Lemma candidate_308: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) (Cons z Nil)) Nil)) (Cons z lf5).
Lemma candidate_309: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (rev (rev lf5))) (Cons z Nil))) (Cons z lf5).
Lemma candidate_310: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (lfappend lf5 Nil)) (Cons z Nil))) (Cons z lf5).
Lemma candidate_311: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_312: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (rev (rev y)))).
Lemma candidate_313: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (lfappend y Nil))).
Lemma candidate_314: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (rev (lfappend y (Cons z Nil))).
Lemma candidate_315: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil)))   (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_316: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_317: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_318: forall (z : natural) (y : lst) (lf5 : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma candidate_319: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (rev (rev lf5)) Nil)) (Cons z lf5).
Lemma candidate_320: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (lfappend lf5 Nil) Nil)) (Cons z lf5).
Lemma candidate_321: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_322: forall (z : natural) (lf5 : lst), @eq lst (Cons z (rev (rev lf5))) (Cons z lf5).
Lemma candidate_323: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend lf5 Nil)) (Cons z lf5).
Lemma candidate_324: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_325: forall (z : natural) (y : lst) (lf5 : lst), @eq lst (rev (lfappend y (Cons z (Nil)))) (Cons z lf5).
Lemma candidate_326: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)).
Lemma candidate_327: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y (Cons z Nil)) Nil).
Lemma candidate_328: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil).
Lemma candidate_329: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y Nil) (Cons z Nil)).
Lemma candidate_330: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend y (Cons z Nil)).
Lemma candidate_331: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_332: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_333: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_334: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_335: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_336: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_337: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z lf5).
Lemma candidate_338: forall (z : natural), @eq lst (Cons z Nil) (Cons z Nil).
Lemma candidate_339: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (rev (rev y)))).
Lemma candidate_340: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (lfappend y Nil))).
Lemma candidate_341: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (rev (lfappend y (Cons z Nil))).
Lemma candidate_342: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil)))   (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_343: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_344: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_345: @eq lst Nil (Nil).
Lemma candidate_346: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_347: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)))   (Cons z (rev y)).
Lemma candidate_348: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y (Cons z Nil)) Nil)) (Cons z (rev y)).
Lemma candidate_349: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil))   (Cons z (rev y)).
Lemma candidate_350: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y Nil) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_351: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_352: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_353: forall (z : natural) (y : lst), @eq lst (Cons z (rev (rev (rev y)))) (Cons z (rev y)).
Lemma candidate_354: forall (z : natural) (y : lst), @eq lst (Cons z (rev (lfappend y Nil))) (Cons z (rev y)).
Lemma candidate_355: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_356: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_357: forall (z : natural) (y : lst), @eq lst (Cons z (lfappend (rev y) Nil)) (Cons z (rev y)).
Lemma candidate_358: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_359: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) lf6)).
Lemma candidate_360: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_361: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).
Lemma candidate_362: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend lf6 (rev y))).
Lemma candidate_363: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend lf6 (Cons z (rev y))).
Lemma candidate_364: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma candidate_365: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev (lfappend y lf6))).
Lemma candidate_366: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev (lfappend y Nil))).
Lemma candidate_367: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) lf6)).
Lemma candidate_368: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_369: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend lf6 (rev y))).
Lemma candidate_370: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma candidate_371: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend lf6 (Cons z Nil)).
Lemma candidate_372: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend (rev (rev lf6)) (Cons z Nil)).
Lemma candidate_373: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (lfappend (rev lf6) (Cons z Nil)).
Lemma candidate_374: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z (rev lf6)).
Lemma candidate_375: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z lf6).
Lemma candidate_376: forall (z : natural) (lf6 : lst), @eq lst (Cons z lf6) (Cons z Nil).
Lemma candidate_377: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6))   (lfappend (rev (lfappend lf6 (rev y))) (Cons z Nil)).
Lemma candidate_378: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (rev (lfappend lf6 (Cons z (rev y)))).
Lemma candidate_379: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z (rev lf6))).
Lemma candidate_380: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z lf6)).
Lemma candidate_381: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend y (Cons z Nil)).
Lemma candidate_382: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (lfappend y (Cons z lf6)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_383: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) lf6)).
Lemma candidate_384: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_385: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).
Lemma candidate_386: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (lfappend lf6 (rev y))).
Lemma candidate_387: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend lf6 (Cons z (rev y))).
Lemma candidate_388: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma candidate_389: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (rev (rev y)))).
Lemma candidate_390: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_391: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend y (Cons z Nil))).
Lemma candidate_392: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_393: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_394: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev y)).
Lemma candidate_395: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_396: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_397: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_398: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_399: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_400: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1448 seconds
Duplicates removed: 288
Filtered by Quickchick: 32
Filtered by script: 15
Remaining: 65

Lemmas: 
Lemma candidate_98: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_5: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_99: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_6: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_121: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_123: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_122: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_16: forall (lf3 : lst), @eq lst (rev (rev (rev (rev lf3)))) lf3.
Lemma candidate_10: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_96: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_95: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_17: forall (lf3 : lst), @eq lst (rev (rev (lfappend lf3 Nil))) lf3.
Lemma candidate_12: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_11: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_2: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_134: forall (z : natural) (lf5 : lst), @eq lst (Cons z (rev (rev lf5))) (Cons z lf5).
Lemma candidate_104: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (rev (rev lf5))).
Lemma candidate_97: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_135: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend lf5 Nil)) (Cons z lf5).
Lemma candidate_105: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend lf5 Nil)).
Lemma candidate_185: forall (z : natural) (y : lst), @eq lst (Cons z (rev (rev (rev y)))) (Cons z (rev y)).
Lemma candidate_120: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_119: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_113: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (rev (rev y)))).
Lemma candidate_27: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (rev (rev lf4))).
Lemma candidate_189: forall (z : natural) (y : lst), @eq lst (Cons z (lfappend (rev y) Nil)) (Cons z (rev y)).
Lemma candidate_186: forall (z : natural) (y : lst), @eq lst (Cons z (rev (lfappend y Nil))) (Cons z (rev y)).
Lemma candidate_117: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_115: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend y (Cons z Nil))).
Lemma candidate_114: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (Cons z (rev (lfappend y Nil))).
Lemma candidate_28: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend y (lfappend lf4 Nil)).
Lemma candidate_26: forall (y : lst) (lf4 : lst), @eq lst (lfappend y lf4) (lfappend (lfappend y lf4) Nil).
Lemma candidate_15: forall (lf3 : lst), @eq lst (rev (lfappend (lfappend (rev lf3) Nil) Nil)) lf3.
Lemma candidate_14: forall (lf3 : lst), @eq lst (rev (lfappend (rev (lfappend lf3 Nil)) Nil)) lf3.
Lemma candidate_9: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (lfappend (rev lf2) Nil) Nil).
Lemma candidate_8: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev (lfappend lf2 Nil)) Nil).
Lemma candidate_34: forall (y : lst) (lf4 : lst), @eq lst (rev (lfappend y lf4)) (lfappend (rev lf4) (rev y)).
Lemma candidate_133: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (Cons z Nil))) (Cons z lf5).
Lemma candidate_131: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (rev (rev lf5)) Nil)) (Cons z lf5).
Lemma candidate_103: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (rev (lfappend (rev lf5) (Cons z Nil))).
Lemma candidate_101: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (rev (rev lf5)) Nil)).
Lemma candidate_132: forall (z : natural) (lf5 : lst), @eq lst (Cons z (lfappend (lfappend lf5 Nil) Nil)) (Cons z lf5).
Lemma candidate_102: forall (z : natural) (lf5 : lst), @eq lst (Cons z lf5) (Cons z (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_188: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (rev y)) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_116: forall (z : natural) (y : lst), @eq lst (Cons z (rev y)) (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_88: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev (rev (rev y)))).
Lemma candidate_218: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y Nil) (Cons z Nil))) (Cons z (rev y)).
Lemma candidate_216: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend y (Cons z Nil)) Nil)) (Cons z (rev y)).
Lemma candidate_92: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (lfappend (rev y) Nil)).
Lemma candidate_86: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (rev (rev y)) (Cons z Nil)).
Lemma candidate_152: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (rev (rev lf5))) (Cons z Nil))) (Cons z lf5).
Lemma candidate_150: forall (z : natural) (lf5 : lst), @eq lst (rev (rev (rev (lfappend (rev lf5) (Cons z Nil))))) (Cons z lf5).
Lemma candidate_84: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y Nil) (Cons z Nil)).
Lemma candidate_82: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil)) (lfappend (lfappend y (Cons z Nil)) Nil).
Lemma candidate_153: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (rev (lfappend lf5 Nil)) (Cons z Nil))) (Cons z lf5).
Lemma candidate_151: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) (Cons z Nil)) Nil)) (Cons z lf5).
Lemma candidate_149: forall (z : natural) (lf5 : lst), @eq lst (rev (lfappend (lfappend (rev lf5) Nil) (Cons z Nil))) (Cons z lf5).
Lemma candidate_64: forall (z : natural) (y : lst) (lf6 : lst), @eq lst (rev (lfappend y (Cons z lf6))) (lfappend (rev lf6) (Cons z (rev y))).
Lemma candidate_217: forall (z : natural) (y : lst), @eq lst (rev (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil))   (Cons z (rev y)).
Lemma candidate_215: forall (z : natural) (y : lst), @eq lst (rev (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)))   (Cons z (rev y)).
Lemma candidate_91: forall (z : natural) (y : lst), @eq lst (rev (lfappend y (Cons z Nil)))   (rev (lfappend (rev (rev y)) (Cons z Nil))).
Lemma candidate_83: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (lfappend (rev (rev y)) (Cons z Nil)) Nil).
Lemma candidate_81: forall (z : natural) (y : lst), @eq lst (lfappend y (Cons z Nil))   (lfappend (rev (lfappend (rev y) Nil)) (Cons z Nil)).
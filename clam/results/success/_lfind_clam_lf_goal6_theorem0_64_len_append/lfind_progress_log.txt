File Information
- File name: goal6
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal6_theorem0_64_len_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal6_theorem0_64_len_append
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq natural (len (rev (lfappend x0 y0))) (plus (len x0) (len y0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (len (lfappend x y)) (plus (len x) (len y))

* Hypothesis:
x : lst
y : lst

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst

* Terms:
len y : natural
len (lfappend x y) : natural
x : lst
len x : natural
lst : Set
y : lst
lfappend x y : lst
natural : Set
@eq natural (len (lfappend x y)) (plus (len x) (len y)) : Prop
plus (len x) (len y) : natural

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = lfappend x y
lf1 : natural = plus (len x) (len y)
lf4 : natural = len y
lf5 : natural = len x
lf2 : natural = len (lfappend x y)

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj2: forall (lf1 : natural) (lf3 : lst), @eq natural (len lf3) lf1.
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (plus lf5 lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf5 lf4).
Lemma conj11: forall (lf2 : natural) (x : lst) (lf4 : natural), @eq natural lf2 (plus (len x) lf4).
Lemma conj12: forall (x : lst) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf4).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (y : lst), @eq natural lf2 (plus lf5 (len y)).
Lemma conj14: forall (lf5 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf5 (len y)).
Lemma conj15: forall (lf2 : natural) (x : lst) (y : lst), @eq natural lf2 (plus (len x) (len y)).
Lemma conj16: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj18: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (len (lfappend x y)) lf1.
Lemma conj26: forall (lf5 : natural) (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 lf4).
Lemma conj28: forall (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus (len x) lf4).
Lemma conj30: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 (len y)).
Lemma conj32: forall (x : lst) (y : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).


<---VALIDITY CHECKS--->
Time elapsed: 33 seconds
Valid:
Lemma conj32: forall (x : lst) (y : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).

Invalid:
Lemma conj30: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 (len y)).
Lemma conj28: forall (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus (len x) lf4).
Lemma conj26: forall (lf5 : natural) (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 lf4).
Lemma conj18: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (len (lfappend x y)) lf1.
Lemma conj16: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj15: forall (lf2 : natural) (x : lst) (y : lst), @eq natural lf2 (plus (len x) (len y)).
Lemma conj14: forall (lf5 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf5 (len y)).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (y : lst), @eq natural lf2 (plus lf5 (len y)).
Lemma conj12: forall (x : lst) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf4).
Lemma conj11: forall (lf2 : natural) (x : lst) (lf4 : natural), @eq natural lf2 (plus (len x) lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf5 lf4).
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (plus lf5 lf4).
Lemma conj2: forall (lf1 : natural) (lf3 : lst), @eq natural (len lf3) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 33 seconds
Generalizations:
Lemma conj30: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 (len y)).
Lemma conj28: forall (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus (len x) lf4).
Lemma conj26: forall (lf5 : natural) (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 lf4).
Lemma conj18: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (len (lfappend x y)) lf1.
Lemma conj16: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj15: forall (lf2 : natural) (x : lst) (y : lst), @eq natural lf2 (plus (len x) (len y)).
Lemma conj14: forall (lf5 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf5 (len y)).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (y : lst), @eq natural lf2 (plus lf5 (len y)).
Lemma conj12: forall (x : lst) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf4).
Lemma conj11: forall (lf2 : natural) (x : lst) (lf4 : natural), @eq natural lf2 (plus (len x) lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf5 lf4).
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (plus lf5 lf4).
Lemma conj2: forall (lf1 : natural) (lf3 : lst), @eq natural (len lf3) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 56 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj2: forall (lf1 : natural) (lf3 : lst), @eq natural (len lf3) lf1.
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (plus lf5 lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf5 lf4).
Lemma conj11: forall (lf2 : natural) (x : lst) (lf4 : natural), @eq natural lf2 (plus (len x) lf4).
Lemma conj12: forall (x : lst) (lf4 : natural) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf4).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (y : lst), @eq natural lf2 (plus lf5 (len y)).
Lemma conj14: forall (lf5 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf5 (len y)).
Lemma conj15: forall (lf2 : natural) (x : lst) (y : lst), @eq natural lf2 (plus (len x) (len y)).
Lemma conj16: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj18: forall (x : lst) (lf1 : natural) (y : lst), @eq natural (len (lfappend x y)) lf1.
Lemma conj26: forall (lf5 : natural) (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 lf4).
Lemma conj28: forall (x : lst) (lf4 : natural) (y : lst), @eq natural (len (lfappend x y)) (plus (len x) lf4).
Lemma conj30: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (lfappend x y)) (plus lf5 (len y)).


<---CREATE SKETCHES--->
Time elapsed: 57 seconds
Sketches:
Sketch conj2_sketch0 : @eq natural (##hole##) lf1
Sketch conj2_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj9_sketch0 : @eq natural lf2 (##hole##)
Sketch conj9_term_sketch0 : @eq natural (plus lf5 lf4) (##hole##)
Sketch conj10_sketch0 : @eq natural (##hole##) (plus lf5 lf4)
Sketch conj10_sketch1 : @eq natural (len lf3) (##hole##)
Sketch conj10_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (plus lf5 lf4) (##hole##)
Sketch conj11_sketch0 : @eq natural lf2 (plus (##hole##) lf4)
Sketch conj11_sketch1 : @eq natural lf2 (##hole##)
Sketch conj11_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (plus (len x) lf4) (##hole##)
Sketch conj12_sketch0 : @eq natural (##hole##) (plus (len x) lf4)
Sketch conj12_sketch1 : @eq natural (len lf3) (plus (##hole##) lf4)
Sketch conj12_sketch2 : @eq natural (len lf3) (##hole##)
Sketch conj12_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj12_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj12_term_sketch2 : @eq natural (plus (len x) lf4) (##hole##)
Sketch conj13_sketch0 : @eq natural lf2 (##hole##)
Sketch conj13_sketch1 : @eq natural lf2 (plus lf5 (##hole##))
Sketch conj13_term_sketch0 : @eq natural (plus lf5 (len y)) (##hole##)
Sketch conj13_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj14_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj14_sketch1 : @eq natural (##hole##) (plus lf5 (len y))
Sketch conj14_sketch2 : @eq natural (len lf3) (plus lf5 (##hole##))
Sketch conj14_term_sketch0 : @eq natural (plus lf5 (len y)) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (len lf3) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (len y) (##hole##)
Sketch conj15_sketch0 : @eq natural lf2 (plus (len x) (##hole##))
Sketch conj15_sketch1 : @eq natural lf2 (plus (##hole##) (len y))
Sketch conj15_sketch2 : @eq natural lf2 (##hole##)
Sketch conj15_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj15_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj15_term_sketch2 : @eq natural (plus (len x) (len y)) (##hole##)
Sketch conj16_sketch0 : @eq natural (##hole##) (plus (len x) (len y))
Sketch conj16_sketch1 : @eq natural (len lf3) (plus (len x) (##hole##))
Sketch conj16_sketch2 : @eq natural (len lf3) (plus (##hole##) (len y))
Sketch conj16_sketch3 : @eq natural (len lf3) (##hole##)
Sketch conj16_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj16_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj16_term_sketch2 : @eq natural (len x) (##hole##)
Sketch conj16_term_sketch3 : @eq natural (plus (len x) (len y)) (##hole##)
Sketch conj18_sketch0 : @eq natural (##hole##) lf1
Sketch conj18_sketch1 : @eq natural (len (##hole##)) lf1
Sketch conj18_term_sketch0 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj18_term_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj26_sketch0 : @eq natural (##hole##) (plus lf5 lf4)
Sketch conj26_sketch1 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj26_sketch2 : @eq natural (len (##hole##)) (plus lf5 lf4)
Sketch conj26_term_sketch0 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (plus lf5 lf4) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj28_sketch0 : @eq natural (##hole##) (plus (len x) lf4)
Sketch conj28_sketch1 : @eq natural (len (lfappend x y)) (plus (##hole##) lf4)
Sketch conj28_sketch2 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj28_sketch3 : @eq natural (len (##hole##)) (plus (len x) lf4)
Sketch conj28_term_sketch0 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj28_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj28_term_sketch2 : @eq natural (plus (len x) lf4) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj30_sketch0 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj30_sketch1 : @eq natural (len (lfappend x y)) (plus lf5 (##hole##))
Sketch conj30_sketch2 : @eq natural (##hole##) (plus lf5 (len y))
Sketch conj30_sketch3 : @eq natural (len (##hole##)) (plus lf5 (len y))
Sketch conj30_term_sketch0 : @eq natural (plus lf5 (len y)) (##hole##)
Sketch conj30_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj30_term_sketch2 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj30_term_sketch3 : @eq lst (lfappend x y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 152 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_15
Sketch conj12_sketch0 --> Problem  synth_7
Sketch conj28_sketch0 --> Problem  synth_7
Sketch conj16_sketch3 --> Problem  synth_2
Sketch conj26_sketch2 --> Problem  synth_20
Sketch conj11_term_sketch1 --> Problem  synth_7
Sketch conj15_term_sketch2 --> Problem  synth_15
Sketch conj16_term_sketch1 --> Problem  synth_11
Sketch conj14_term_sketch2 --> Problem  synth_11
Sketch conj30_term_sketch3 --> Problem  synth_19
Sketch conj11_sketch1 --> Problem  synth_3
Sketch conj13_term_sketch1 --> Problem  synth_11
Sketch conj28_term_sketch1 --> Problem  synth_6
Sketch conj26_term_sketch2 --> Problem  synth_19
Sketch conj14_term_sketch1 --> Problem  synth_2
Sketch conj12_term_sketch0 --> Problem  synth_2
Sketch conj30_sketch2 --> Problem  synth_10
Sketch conj10_sketch1 --> Problem  synth_2
Sketch conj9_term_sketch0 --> Problem  synth_4
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_19
Sketch conj16_sketch1 --> Problem  synth_16
Sketch conj12_sketch1 --> Problem  synth_8
Sketch conj12_sketch2 --> Problem  synth_2
Sketch conj28_sketch2 --> Problem  synth_15
Sketch conj11_term_sketch0 --> Problem  synth_6
Sketch conj26_term_sketch0 --> Problem  synth_15
Sketch conj16_term_sketch2 --> Problem  synth_6
Sketch conj30_term_sketch1 --> Problem  synth_11
Sketch conj13_term_sketch0 --> Problem  synth_10
Sketch conj18_term_sketch1 --> Problem  synth_19
Sketch conj28_term_sketch2 --> Problem  synth_7
Sketch conj30_term_sketch0 --> Problem  synth_10
Sketch conj12_term_sketch2 --> Problem  synth_7
Sketch conj10_sketch0 --> Problem  synth_4
Sketch conj14_sketch1 --> Problem  synth_10
Sketch conj18_sketch1 --> Problem  synth_18
Sketch conj15_sketch1 --> Problem  synth_14
Sketch conj26_term_sketch1 --> Problem  synth_4
Sketch conj14_sketch2 --> Problem  synth_12
Sketch conj15_term_sketch1 --> Problem  synth_6
Sketch conj16_sketch2 --> Problem  synth_17
Sketch conj10_term_sketch1 --> Problem  synth_4
Sketch conj30_sketch3 --> Problem  synth_24
Sketch conj30_sketch1 --> Problem  synth_23
Sketch conj26_sketch0 --> Problem  synth_4
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj12_term_sketch1 --> Problem  synth_6
Sketch conj9_sketch0 --> Problem  synth_3
Sketch conj26_sketch1 --> Problem  synth_15
Sketch conj28_term_sketch0 --> Problem  synth_15
Sketch conj18_sketch0 --> Problem  synth_1
Sketch conj30_term_sketch2 --> Problem  synth_15
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj15_sketch2 --> Problem  synth_3
Sketch conj28_sketch3 --> Problem  synth_22
Sketch conj18_term_sketch0 --> Problem  synth_15
Sketch conj28_sketch1 --> Problem  synth_21
Sketch conj15_sketch0 --> Problem  synth_13
Sketch conj16_sketch0 --> Problem  synth_15
Sketch conj13_sketch1 --> Problem  synth_9
Sketch conj14_sketch0 --> Problem  synth_2
Sketch conj14_term_sketch0 --> Problem  synth_10
Sketch conj16_term_sketch0 --> Problem  synth_2
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj16_term_sketch3 --> Problem  synth_15
Sketch conj11_sketch0 --> Problem  synth_5
Sketch conj15_term_sketch0 --> Problem  synth_11


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 364 seconds

Problem: synth_22

Problem: synth_20

Problem: synth_18

Problem: synth_17

Problem: synth_21
 plus (len (rev x)) Zero
 len (rev (rev x))
 len (lfappend x Nil)
 plus (len x) Zero
 len (rev x)
 len x

Problem: synth_9

Problem: synth_13

Problem: synth_6
 plus (len (rev x)) Zero
 len (rev (rev x))
 len (lfappend x Nil)
 plus (len x) Zero
 len (rev x)
 len x

Problem: synth_11
 plus (len (rev y)) Zero
 len (rev (rev y))
 len (lfappend y Nil)
 plus (len y) Zero
 len (rev y)
 len y

Problem: synth_7
 plus (len (rev x)) lf4
 plus (plus lf4 (len x)) Zero
 plus (len x) (plus lf4 Zero)
 plus lf4 (len (rev x))
 plus (len x) lf4
 plus lf4 (len x)

Problem: synth_4
 plus (plus lf5 lf4) Zero
 plus (plus lf4 lf5) Zero
 plus lf5 (plus lf4 Zero)
 plus lf4 (plus lf5 Zero)
 plus lf5 lf4
 plus lf4 lf5

Problem: synth_1
 plus (plus (plus lf1 Zero) Zero) Zero
 plus (plus lf1 Zero) Zero
 plus lf1 Zero
 lf1

Problem: synth_23
 plus (len (rev y)) Zero
 len (rev (rev y))
 len (lfappend y Nil)
 plus (len y) Zero
 len (rev y)
 len y

Problem: synth_16

Problem: synth_19
 lfappend (rev (rev x)) y
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_15
 plus (len x) (len y)
 plus (len y) (len x)
 len (lfappend x (rev y))
 len (lfappend y (rev x))
 len (lfappend x y)
 len (lfappend y x)

Problem: synth_14

Problem: synth_10
 plus (len (rev y)) lf5
 plus (plus lf5 (len y)) Zero
 plus (len y) (plus lf5 Zero)
 plus lf5 (len (rev y))
 plus (len y) lf5
 plus lf5 (len y)

Problem: synth_8

Problem: synth_24

Problem: synth_3
 plus (plus (plus lf2 Zero) Zero) Zero
 plus (plus lf2 Zero) Zero
 plus lf2 Zero
 lf2

Problem: synth_12

Problem: synth_5

Problem: synth_2
 plus (len (rev lf3)) Zero
 len (rev (rev lf3))
 len (lfappend lf3 Nil)
 plus (len lf3) Zero
 len (rev lf3)
 len lf3

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 365 seconds
Lemmas:
Lemma candidate_1: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_2: forall (lf1 : natural), @eq natural (plus (plus (plus lf1 Zero) Zero) Zero) lf1.
Lemma candidate_3: forall (lf1 : natural), @eq natural (plus (plus lf1 Zero) Zero) lf1.
Lemma candidate_4: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_5: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_6: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_7: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_8: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_9: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_10: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_11: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_12: forall (lf2 : natural), @eq natural lf2 (plus (plus (plus lf2 Zero) Zero) Zero).
Lemma candidate_13: forall (lf2 : natural), @eq natural lf2 (plus (plus lf2 Zero) Zero).
Lemma candidate_14: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_15: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_16: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf5 lf4) Zero).
Lemma candidate_17: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf4 lf5) Zero).
Lemma candidate_18: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 (plus lf4 Zero)).
Lemma candidate_19: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 (plus lf5 Zero)).
Lemma candidate_20: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 lf4).
Lemma candidate_21: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 lf5).
Lemma candidate_22: forall (lf4 : natural) (lf5 : natural), @eq natural (plus (plus lf5 lf4) Zero) (plus lf5 lf4).
Lemma candidate_23: forall (lf4 : natural) (lf5 : natural), @eq natural (plus (plus lf4 lf5) Zero) (plus lf5 lf4).
Lemma candidate_24: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf4 Zero)) (plus lf5 lf4).
Lemma candidate_25: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf4 (plus lf5 Zero)) (plus lf5 lf4).
Lemma candidate_26: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 lf4).
Lemma candidate_27: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf4 lf5) (plus lf5 lf4).
Lemma candidate_28: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_29: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_30: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_31: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_32: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_33: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_34: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_35: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_36: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_37: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_38: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_39: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_40: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf5 lf4) Zero).
Lemma candidate_41: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf4 lf5) Zero).
Lemma candidate_42: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 (plus lf4 Zero)).
Lemma candidate_43: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 (plus lf5 Zero)).
Lemma candidate_44: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 lf4).
Lemma candidate_45: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 lf5).
Lemma candidate_46: forall (lf2 : natural), @eq natural lf2 (plus (plus (plus lf2 Zero) Zero) Zero).
Lemma candidate_47: forall (lf2 : natural), @eq natural lf2 (plus (plus lf2 Zero) Zero).
Lemma candidate_48: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_49: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_50: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_51: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_52: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_53: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_54: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_55: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_56: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len (rev x)) lf4).
Lemma candidate_57: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (plus lf4 (len x)) Zero).
Lemma candidate_58: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) (plus lf4 Zero)).
Lemma candidate_59: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len (rev x))).
Lemma candidate_60: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) lf4).
Lemma candidate_61: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len x)).
Lemma candidate_62: forall (lf4 : natural) (x : lst), @eq natural (plus (len (rev x)) lf4) (plus (len x) lf4).
Lemma candidate_63: forall (lf4 : natural) (x : lst), @eq natural (plus (plus lf4 (len x)) Zero) (plus (len x) lf4).
Lemma candidate_64: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) (plus lf4 Zero)) (plus (len x) lf4).
Lemma candidate_65: forall (lf4 : natural) (x : lst), @eq natural (plus lf4 (len (rev x))) (plus (len x) lf4).
Lemma candidate_66: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) lf4).
Lemma candidate_67: forall (lf4 : natural) (x : lst), @eq natural (plus lf4 (len x)) (plus (len x) lf4).
Lemma candidate_68: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_69: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_70: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_71: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_72: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_73: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_74: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_75: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_76: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_77: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_78: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_79: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_80: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_81: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_82: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_83: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_84: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_85: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_86: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len (rev x)) lf4).
Lemma candidate_87: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (plus lf4 (len x)) Zero).
Lemma candidate_88: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) (plus lf4 Zero)).
Lemma candidate_89: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len (rev x))).
Lemma candidate_90: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) lf4).
Lemma candidate_91: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len x)).
Lemma candidate_92: forall (lf2 : natural), @eq natural lf2 (plus (plus (plus lf2 Zero) Zero) Zero).
Lemma candidate_93: forall (lf2 : natural), @eq natural lf2 (plus (plus lf2 Zero) Zero).
Lemma candidate_94: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_95: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_96: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len (rev y)) lf5).
Lemma candidate_97: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (plus lf5 (len y)) Zero).
Lemma candidate_98: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) (plus lf5 Zero)).
Lemma candidate_99: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len (rev y))).
Lemma candidate_100: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) lf5).
Lemma candidate_101: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len y)).
Lemma candidate_102: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_103: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_104: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_105: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_106: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_107: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_108: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_109: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_110: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_111: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_112: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_113: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_114: forall (y : lst) (lf5 : natural), @eq natural (plus (len (rev y)) lf5) (plus lf5 (len y)).
Lemma candidate_115: forall (y : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len y)) Zero) (plus lf5 (len y)).
Lemma candidate_116: forall (y : lst) (lf5 : natural), @eq natural (plus (len y) (plus lf5 Zero)) (plus lf5 (len y)).
Lemma candidate_117: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev y))) (plus lf5 (len y)).
Lemma candidate_118: forall (y : lst) (lf5 : natural), @eq natural (plus (len y) lf5) (plus lf5 (len y)).
Lemma candidate_119: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len y)).
Lemma candidate_120: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len (rev y)) lf5).
Lemma candidate_121: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (plus lf5 (len y)) Zero).
Lemma candidate_122: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) (plus lf5 Zero)).
Lemma candidate_123: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len (rev y))).
Lemma candidate_124: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) lf5).
Lemma candidate_125: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len y)).
Lemma candidate_126: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_127: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_128: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_129: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_130: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_131: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_132: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_133: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_134: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_135: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_136: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_137: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_138: forall (lf2 : natural), @eq natural lf2 (plus (plus (plus lf2 Zero) Zero) Zero).
Lemma candidate_139: forall (lf2 : natural), @eq natural lf2 (plus (plus lf2 Zero) Zero).
Lemma candidate_140: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_141: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_142: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_143: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_144: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_145: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_146: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_147: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_148: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_149: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_150: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_151: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_152: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_153: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_154: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_155: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_156: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_157: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_158: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_159: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_160: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (plus (len y) (len x)) (plus (len x) (len y)).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x (rev y))) (plus (len x) (len y)).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend y (rev x))) (plus (len x) (len y)).
Lemma candidate_164: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (plus (len x) (len y)).
Lemma candidate_166: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_167: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_168: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_169: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_170: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_171: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_172: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_173: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_174: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_175: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_176: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_177: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_178: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_179: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_180: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_181: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_182: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_183: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_184: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_185: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_186: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_187: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_188: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_189: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_190: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_191: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_192: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_193: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_194: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_195: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_196: forall (lf1 : natural), @eq natural (plus (plus (plus lf1 Zero) Zero) Zero) lf1.
Lemma candidate_197: forall (lf1 : natural), @eq natural (plus (plus lf1 Zero) Zero) lf1.
Lemma candidate_198: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_199: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_200: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_201: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_202: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_203: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_204: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_205: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_206: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_207: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_208: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_209: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_210: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_211: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_212: forall (lf4 : natural) (lf5 : natural), @eq natural (plus (plus lf5 lf4) Zero) (plus lf5 lf4).
Lemma candidate_213: forall (lf4 : natural) (lf5 : natural), @eq natural (plus (plus lf4 lf5) Zero) (plus lf5 lf4).
Lemma candidate_214: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf4 Zero)) (plus lf5 lf4).
Lemma candidate_215: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf4 (plus lf5 Zero)) (plus lf5 lf4).
Lemma candidate_216: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 lf4).
Lemma candidate_217: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf4 lf5) (plus lf5 lf4).
Lemma candidate_218: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_219: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_220: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_221: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_222: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_223: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_224: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_225: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_226: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_227: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_228: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_229: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_230: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf5 lf4) Zero).
Lemma candidate_231: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf4 lf5) Zero).
Lemma candidate_232: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 (plus lf4 Zero)).
Lemma candidate_233: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 (plus lf5 Zero)).
Lemma candidate_234: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 lf4).
Lemma candidate_235: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 lf5).
Lemma candidate_236: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_237: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_238: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_239: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_240: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_241: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_242: forall (lf4 : natural) (x : lst), @eq natural (plus (len (rev x)) lf4) (plus (len x) lf4).
Lemma candidate_243: forall (lf4 : natural) (x : lst), @eq natural (plus (plus lf4 (len x)) Zero) (plus (len x) lf4).
Lemma candidate_244: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) (plus lf4 Zero)) (plus (len x) lf4).
Lemma candidate_245: forall (lf4 : natural) (x : lst), @eq natural (plus lf4 (len (rev x))) (plus (len x) lf4).
Lemma candidate_246: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) lf4).
Lemma candidate_247: forall (lf4 : natural) (x : lst), @eq natural (plus lf4 (len x)) (plus (len x) lf4).
Lemma candidate_248: forall (y : lst) (lf4 : natural) (x : lst), @eq natural (len (lfappend x y)) (plus (plus (len (rev x)) Zero) lf4).
Lemma candidate_249: forall (y : lst) (lf4 : natural) (x : lst), @eq natural (len (lfappend x y)) (plus (len (rev (rev x))) lf4).
Lemma candidate_250: forall (y : lst) (lf4 : natural) (x : lst), @eq natural (len (lfappend x y)) (plus (len (lfappend x Nil)) lf4).
Lemma candidate_251: forall (y : lst) (lf4 : natural) (x : lst), @eq natural (len (lfappend x y)) (plus (plus (len x) Zero) lf4).
Lemma candidate_252: forall (y : lst) (lf4 : natural) (x : lst), @eq natural (len (lfappend x y)) (plus (len (rev x)) lf4).
Lemma candidate_253: forall (y : lst) (lf4 : natural) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) lf4).
Lemma candidate_254: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_255: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_256: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_257: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_258: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_259: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_260: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_261: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_262: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_263: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_264: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_265: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_266: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_267: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_268: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_269: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_270: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_271: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_272: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len (rev x)) lf4).
Lemma candidate_273: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (plus lf4 (len x)) Zero).
Lemma candidate_274: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) (plus lf4 Zero)).
Lemma candidate_275: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len (rev x))).
Lemma candidate_276: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) lf4).
Lemma candidate_277: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len x)).
Lemma candidate_278: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_279: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_280: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_281: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_282: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_283: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_284: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_285: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_286: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_287: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_288: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_289: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_290: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (lfappend x y)) (plus lf5 (plus (len (rev y)) Zero)).
Lemma candidate_291: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (lfappend x y)) (plus lf5 (len (rev (rev y)))).
Lemma candidate_292: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (lfappend x y)) (plus lf5 (len (lfappend y Nil))).
Lemma candidate_293: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (lfappend x y)) (plus lf5 (plus (len y) Zero)).
Lemma candidate_294: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (lfappend x y)) (plus lf5 (len (rev y))).
Lemma candidate_295: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (lfappend x y)) (plus lf5 (len y)).
Lemma candidate_296: forall (y : lst) (lf5 : natural), @eq natural (plus (len (rev y)) lf5) (plus lf5 (len y)).
Lemma candidate_297: forall (y : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len y)) Zero) (plus lf5 (len y)).
Lemma candidate_298: forall (y : lst) (lf5 : natural), @eq natural (plus (len y) (plus lf5 Zero)) (plus lf5 (len y)).
Lemma candidate_299: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev y))) (plus lf5 (len y)).
Lemma candidate_300: forall (y : lst) (lf5 : natural), @eq natural (plus (len y) lf5) (plus lf5 (len y)).
Lemma candidate_301: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len y)).
Lemma candidate_302: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len (rev y)) lf5).
Lemma candidate_303: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (plus lf5 (len y)) Zero).
Lemma candidate_304: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) (plus lf5 Zero)).
Lemma candidate_305: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len (rev y))).
Lemma candidate_306: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) lf5).
Lemma candidate_307: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len y)).
Lemma candidate_308: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_309: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_310: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_311: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_312: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_313: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_314: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_315: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_316: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_317: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_318: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_319: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_320: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_321: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_322: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_323: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_324: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_325: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 586 seconds
Duplicates removed: 233
Filtered by Quickchick: 12
Filtered by script: 11
Remaining: 69

Lemmas: 
Lemma candidate_14: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_4: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_106: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_54: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_10: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_105: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_103: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_53: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_51: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_27: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf4 lf5) (plus lf5 lf4).
Lemma candidate_21: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 lf5).
Lemma candidate_104: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_52: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_13: forall (lf2 : natural), @eq natural lf2 (plus (plus lf2 Zero) Zero).
Lemma candidate_9: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_7: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_3: forall (lf1 : natural), @eq natural (plus (plus lf1 Zero) Zero) lf1.
Lemma candidate_102: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_50: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_8: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_209: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_206: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_118: forall (y : lst) (lf5 : natural), @eq natural (plus (len y) lf5) (plus lf5 (len y)).
Lemma candidate_100: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) lf5).
Lemma candidate_67: forall (lf4 : natural) (x : lst), @eq natural (plus lf4 (len x)) (plus (len x) lf4).
Lemma candidate_61: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len x)).
Lemma candidate_6: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_210: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_208: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_207: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_205: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_25: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf4 (plus lf5 Zero)) (plus lf5 lf4).
Lemma candidate_24: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 (plus lf4 Zero)) (plus lf5 lf4).
Lemma candidate_23: forall (lf4 : natural) (lf5 : natural), @eq natural (plus (plus lf4 lf5) Zero) (plus lf5 lf4).
Lemma candidate_22: forall (lf4 : natural) (lf5 : natural), @eq natural (plus (plus lf5 lf4) Zero) (plus lf5 lf4).
Lemma candidate_19: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf4 (plus lf5 Zero)).
Lemma candidate_18: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus lf5 (plus lf4 Zero)).
Lemma candidate_17: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf4 lf5) Zero).
Lemma candidate_16: forall (lf4 : natural) (lf5 : natural), @eq natural (plus lf5 lf4) (plus (plus lf5 lf4) Zero).
Lemma candidate_201: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len y) (len x)).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (plus (len x) (len y)).
Lemma candidate_159: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_158: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_117: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev y))) (plus lf5 (len y)).
Lemma candidate_114: forall (y : lst) (lf5 : natural), @eq natural (plus (len (rev y)) lf5) (plus lf5 (len y)).
Lemma candidate_99: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus lf5 (len (rev y))).
Lemma candidate_96: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len (rev y)) lf5).
Lemma candidate_65: forall (lf4 : natural) (x : lst), @eq natural (plus lf4 (len (rev x))) (plus (len x) lf4).
Lemma candidate_62: forall (lf4 : natural) (x : lst), @eq natural (plus (len (rev x)) lf4) (plus (len x) lf4).
Lemma candidate_59: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus lf4 (len (rev x))).
Lemma candidate_56: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len (rev x)) lf4).
Lemma candidate_12: forall (lf2 : natural), @eq natural lf2 (plus (plus (plus lf2 Zero) Zero) Zero).
Lemma candidate_2: forall (lf1 : natural), @eq natural (plus (plus (plus lf1 Zero) Zero) Zero) lf1.
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (plus (len y) (len x)) (plus (len x) (len y)).
Lemma candidate_155: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_203: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (rev x))).
Lemma candidate_202: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (rev y))).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend y (rev x))) (plus (len x) (len y)).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x (rev y))) (plus (len x) (len y)).
Lemma candidate_157: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_156: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_116: forall (y : lst) (lf5 : natural), @eq natural (plus (len y) (plus lf5 Zero)) (plus lf5 (len y)).
Lemma candidate_115: forall (y : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len y)) Zero) (plus lf5 (len y)).
Lemma candidate_98: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (len y) (plus lf5 Zero)).
Lemma candidate_97: forall (y : lst) (lf5 : natural), @eq natural (plus lf5 (len y)) (plus (plus lf5 (len y)) Zero).
Lemma candidate_64: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) (plus lf4 Zero)) (plus (len x) lf4).
Lemma candidate_63: forall (lf4 : natural) (x : lst), @eq natural (plus (plus lf4 (len x)) Zero) (plus (len x) lf4).
Lemma candidate_58: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (len x) (plus lf4 Zero)).
Lemma candidate_57: forall (lf4 : natural) (x : lst), @eq natural (plus (len x) lf4) (plus (plus lf4 (len x)) Zero).
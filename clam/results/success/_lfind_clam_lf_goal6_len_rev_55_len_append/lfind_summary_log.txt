LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal6_len_rev_55_len_append

Number of Lemmas: 809
Number of Lemmas (after duplicates removed): 208
Number of Lemmas (after QuickChick used to filter): 127
* Number of Candidate Lemmas: 101

Time until ranking: 1610
Time to complete: 5279

Stuck state true independent of hypotheses: true

Category 1:
Count = 1

Lemma candidate_113: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).

Category 2:
Count = 12

Lemma candidate_28: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_37: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_35: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_133: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev l))).
Lemma candidate_580: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_628: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend lf7 l))).
Lemma candidate_59: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_81: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_2: forall (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma candidate_4: forall (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma candidate_3: forall (l : lst) (n : natural) (lf5 : natural), forall _ : @eq natural (len (rev l)) lf5, @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma candidate_526: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf7 lf6)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).

Category 3 (provable):
Count = 39

Lemma candidate_153: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_7: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_50: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_168: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_167: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_414: forall (lf6 : lst), @eq natural (len lf6) (plus (len lf6) Zero).
Lemma candidate_152: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_12: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_6: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_181: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_180: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_159: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_158: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_121: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_413: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_11: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_270: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_269: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_174: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_173: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_151: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_268: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_172: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_179: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_178: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_177: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_157: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_156: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_155: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_120: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_579: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_403: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (len lf6)) (Succ lf5).
Lemma candidate_109: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_117: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_115: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_536: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len lf6)) (Succ (len l)).
Lemma candidate_531: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_532: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (plus (len lf6) (Succ Zero)) (Succ (len l)).

Category 3 (not provable):
Count = 49

Lemma candidate_49: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_51: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_166: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_412: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_10: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_165: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_411: forall (lf6 : lst), @eq natural (len lf6) (plus (len (rev lf6)) Zero).
Lemma candidate_9: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_267: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_171: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_48: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_47: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_20: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_41: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend (rev lf4) l)).
Lemma candidate_21: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_19: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_38: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_42: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev (rev lf4))).
Lemma candidate_26: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_25: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_112: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_43: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (lfappend lf4 Nil)).
Lemma candidate_36: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_111: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_110: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_108: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_119: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_132: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (plus (len l) (Succ Zero)).
Lemma candidate_131: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (plus (len l) Zero)).
Lemma candidate_129: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev (rev l)))).
Lemma candidate_627: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend l lf7))).
Lemma candidate_130: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil)))   (Succ (len (lfappend l Nil))).
Lemma candidate_58: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_769: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (Succ (plus (len (rev lf6)) Zero)).
Lemma candidate_402: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_401: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_400: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (len (rev lf6))) (Succ lf5).
Lemma candidate_80: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_148: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (rev (rev l))) (Cons n Nil)).
Lemma candidate_146: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev l) (Cons (plus n Zero) Nil)).
Lemma candidate_145: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (rev (rev (lfappend (rev l) (Cons n Nil)))).
Lemma candidate_149: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_147: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) (Cons n Nil)) Nil).
Lemma candidate_399: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (plus (len lf6) (Succ Zero)) (Succ lf5).
Lemma candidate_534: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len (rev lf6))) (Succ (len l)).
Lemma candidate_116: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_114: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_405: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus lf5 (len lf7))).
Lemma candidate_525: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf6 lf7)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
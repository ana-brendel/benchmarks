File Information
- File name: goal6
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal6_len_rev_55_len_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal6_len_rev_55_len_append
- Namespace: adtind
- Proof name: len_rev
- Theorem: Theorem len_rev: forall l0 : lst, @eq natural (len (rev l0)) (len l0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l))

* Hypothesis:
IHl : @eq natural (len (rev l)) (len l)
l : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
l : lst
n : natural

* Terms:
@eq natural (len (rev l)) (len l) : Prop
@eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)) : Prop
len (rev l) : natural
len (lfappend (rev l) (Cons n Nil)) : natural
len l : natural
lst : Set
Cons n Nil : lst
natural : Set
l : lst
rev l : lst
n : natural
Succ (len l) : natural
Nil : lst
lfappend (rev l) (Cons n Nil) : lst

* Functions:
len  : forall _ : lst, natural
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Succ  : forall _ : natural, natural
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = Succ (len l)
lf7 : lst = Nil
lf1 : natural = len (lfappend (rev l) (Cons n Nil))
lf4 : lst = Cons n Nil
lf5 : natural = len l
lf2 : lst = lfappend (rev l) (Cons n Nil)
lf6 : lst = rev l

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf4)) lf3.
Lemma conj20: forall (lf4 : lst) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj28: forall (lf7 : lst) (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) lf3.
Lemma conj59: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj60: forall (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n Nil))) lf3.
Lemma conj65: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj69: forall (lf1 : natural) (l : lst), @eq natural lf1 (Succ (len l)).
Lemma conj81: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : natural) (lf4 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ lf5).
Lemma conj84: forall (lf5 : natural) (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ lf5).
Lemma conj85: forall (lf2 : lst) (l : lst), @eq natural (len lf2) (Succ (len l)).
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (l : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len l)).
Lemma conj88: forall (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma conj91: forall (lf6 : lst) (lf5 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma conj92: forall (lf5 : natural) (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ lf5).
Lemma conj95: forall (lf6 : lst) (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma conj96: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma conj123: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma conj124: forall (lf5 : natural) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma conj127: forall (lf6 : lst) (l : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma conj128: forall (l : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)).


<---VALIDITY CHECKS--->
Time elapsed: 51 seconds
Valid:
Lemma conj128: forall (l : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)).

Invalid:
Lemma conj127: forall (lf6 : lst) (l : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma conj124: forall (lf5 : natural) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma conj96: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma conj95: forall (lf6 : lst) (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma conj92: forall (lf5 : natural) (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma conj88: forall (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (l : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len l)).
Lemma conj85: forall (lf2 : lst) (l : lst), @eq natural (len lf2) (Succ (len l)).
Lemma conj84: forall (lf5 : natural) (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : natural) (lf4 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ lf5).
Lemma conj81: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj69: forall (lf1 : natural) (l : lst), @eq natural lf1 (Succ (len l)).
Lemma conj65: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj60: forall (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n Nil))) lf3.
Lemma conj59: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj28: forall (lf7 : lst) (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) lf3.
Lemma conj27: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj20: forall (lf4 : lst) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) lf4)) lf3.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf4)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 87 seconds
Generalizations:
Lemma conj127: forall (lf6 : lst) (l : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma conj127_imp: forall (lf6 : lst) (l : lst) (n : natural), forall _ : @eq natural (len lf6) (len l),
@eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma conj124: forall (lf5 : natural) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma conj124_imp: forall (lf5 : natural) (n : natural) (l : lst), forall _ : @eq natural (len (rev l)) lf5,
@eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma conj123_imp: forall (lf6 : lst) (lf5 : natural) (n : natural), forall _ : @eq natural (len lf6) lf5,
@eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma conj96: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma conj95: forall (lf6 : lst) (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma conj95_imp: forall (lf6 : lst) (l : lst) (lf7 : lst) (n : natural), forall _ : @eq natural (len lf6) (len l),
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma conj92: forall (lf5 : natural) (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma conj91_imp: forall (lf6 : lst) (lf5 : natural) (lf7 : lst) (n : natural), forall _ : @eq natural (len lf6) lf5,
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma conj88: forall (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (l : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len l)).
Lemma conj85: forall (lf2 : lst) (l : lst), @eq natural (len lf2) (Succ (len l)).
Lemma conj84: forall (lf5 : natural) (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : natural) (lf4 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ lf5).
Lemma conj81: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj69: forall (lf1 : natural) (l : lst), @eq natural lf1 (Succ (len l)).
Lemma conj65: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj60: forall (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n Nil))) lf3.
Lemma conj59: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj28: forall (lf7 : lst) (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) lf3.
Lemma conj27: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj20: forall (lf4 : lst) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) lf4)) lf3.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf4)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 133 seconds
Valid:
Lemma conj123_imp: forall (lf6 : lst) (lf5 : natural) (n : natural), forall _ : @eq natural (len lf6) lf5,
@eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma conj124_imp: forall (lf5 : natural) (n : natural) (l : lst), forall _ : @eq natural (len (rev l)) lf5,
@eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma conj127_imp: forall (lf6 : lst) (l : lst) (n : natural), forall _ : @eq natural (len lf6) (len l),
@eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : natural), @eq natural (len lf2) lf3.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (lf3 : natural), @eq natural (len (lfappend lf6 lf4)) lf3.
Lemma conj20: forall (lf4 : lst) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) lf3.
Lemma conj28: forall (lf7 : lst) (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) lf3.
Lemma conj59: forall (lf6 : lst) (n : natural) (lf3 : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) lf3.
Lemma conj60: forall (n : natural) (l : lst) (lf3 : natural), @eq natural (len (lfappend (rev l) (Cons n Nil))) lf3.
Lemma conj65: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj69: forall (lf1 : natural) (l : lst), @eq natural lf1 (Succ (len l)).
Lemma conj81: forall (lf2 : lst) (lf5 : natural), @eq natural (len lf2) (Succ lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : natural) (lf4 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ lf5).
Lemma conj84: forall (lf5 : natural) (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ lf5).
Lemma conj85: forall (lf2 : lst) (l : lst), @eq natural (len lf2) (Succ (len l)).
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (l : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len l)).
Lemma conj88: forall (lf4 : lst) (l : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma conj91_imp: forall (lf6 : lst) (lf5 : natural) (lf7 : lst) (n : natural), forall _ : @eq natural (len lf6) lf5,
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : natural) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma conj92: forall (lf5 : natural) (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ lf5).
Lemma conj95_imp: forall (lf6 : lst) (l : lst) (lf7 : lst) (n : natural), forall _ : @eq natural (len lf6) (len l),
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma conj95: forall (lf6 : lst) (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma conj96: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma conj123: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma conj124: forall (lf5 : natural) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma conj127: forall (lf6 : lst) (l : lst) (n : natural), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).


<---CREATE SKETCHES--->
Time elapsed: 133 seconds
Sketches:
Sketch conj17_sketch0 : @eq natural (##hole##) lf3
Sketch conj17_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj19_sketch0 : @eq natural (len (##hole##)) lf3
Sketch conj19_sketch1 : @eq natural (##hole##) lf3
Sketch conj19_term_sketch0 : @eq lst (lfappend lf6 lf4) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (len (lfappend lf6 lf4)) (##hole##)
Sketch conj20_sketch0 : @eq natural (##hole##) lf3
Sketch conj20_sketch1 : @eq natural (len (##hole##)) lf3
Sketch conj20_sketch2 : @eq natural (len (lfappend (##hole##) lf4)) lf3
Sketch conj20_term_sketch0 : @eq natural (len (lfappend (rev l) lf4)) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (lfappend (rev l) lf4) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj27_sketch0 : @eq natural (##hole##) lf3
Sketch conj27_sketch1 : @eq natural (len (##hole##)) lf3
Sketch conj27_sketch2 : @eq natural (len (lfappend lf6 (##hole##))) lf3
Sketch conj27_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj28_sketch0 : @eq natural (##hole##) lf3
Sketch conj28_sketch1 : @eq natural (len (lfappend (##hole##) (Cons n lf7))) lf3
Sketch conj28_sketch2 : @eq natural (len (##hole##)) lf3
Sketch conj28_sketch3 : @eq natural (len (lfappend (rev l) (##hole##))) lf3
Sketch conj28_term_sketch0 : @eq natural (len (lfappend (rev l) (Cons n lf7))) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (rev l) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (lfappend (rev l) (Cons n lf7)) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj59_sketch0 : @eq natural (##hole##) lf3
Sketch conj59_sketch1 : @eq natural (len (##hole##)) lf3
Sketch conj59_sketch2 : @eq natural (len (lfappend lf6 (##hole##))) lf3
Sketch conj59_sketch3 : @eq natural (len (lfappend lf6 (Cons n (##hole##)))) lf3
Sketch conj59_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj59_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_sketch0 : @eq natural (##hole##) lf3
Sketch conj60_sketch1 : @eq natural (len (lfappend (rev l) (##hole##))) lf3
Sketch conj60_sketch2 : @eq natural (len (lfappend (##hole##) (Cons n Nil))) lf3
Sketch conj60_sketch3 : @eq natural (len (lfappend (rev l) (Cons n (##hole##)))) lf3
Sketch conj60_sketch4 : @eq natural (len (##hole##)) lf3
Sketch conj60_term_sketch0 : @eq natural (len (lfappend (rev l) (Cons n Nil))) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj60_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_term_sketch4 : @eq lst (lfappend (rev l) (Cons n Nil)) (##hole##)
Sketch conj65_sketch0 : @eq natural lf1 (##hole##)
Sketch conj65_term_sketch0 : @eq natural (Succ lf5) (##hole##)
Sketch conj69_sketch0 : @eq natural lf1 (Succ (##hole##))
Sketch conj69_sketch1 : @eq natural lf1 (##hole##)
Sketch conj69_term_sketch0 : @eq natural (len l) (##hole##)
Sketch conj69_term_sketch1 : @eq natural (Succ (len l)) (##hole##)
Sketch conj81_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj81_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj81_term_sketch0 : @eq natural (len lf2) (##hole##)
Sketch conj81_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj83_sketch0 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj83_sketch1 : @eq natural (##hole##) (Succ lf5)
Sketch conj83_sketch2 : @eq natural (len (lfappend lf6 lf4)) (##hole##)
Sketch conj83_term_sketch0 : @eq lst (lfappend lf6 lf4) (##hole##)
Sketch conj83_term_sketch1 : @eq natural (len (lfappend lf6 lf4)) (##hole##)
Sketch conj83_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj84_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj84_sketch1 : @eq natural (len (lfappend (rev l) lf4)) (##hole##)
Sketch conj84_sketch2 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj84_sketch3 : @eq natural (len (lfappend (##hole##) lf4)) (Succ lf5)
Sketch conj84_term_sketch0 : @eq natural (len (lfappend (rev l) lf4)) (##hole##)
Sketch conj84_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (lfappend (rev l) lf4) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (rev l) (##hole##)
Sketch conj85_sketch0 : @eq natural (len lf2) (Succ (##hole##))
Sketch conj85_sketch1 : @eq natural (##hole##) (Succ (len l))
Sketch conj85_sketch2 : @eq natural (len lf2) (##hole##)
Sketch conj85_term_sketch0 : @eq natural (len l) (##hole##)
Sketch conj85_term_sketch1 : @eq natural (len lf2) (##hole##)
Sketch conj85_term_sketch2 : @eq natural (Succ (len l)) (##hole##)
Sketch conj87_sketch0 : @eq natural (len (##hole##)) (Succ (len l))
Sketch conj87_sketch1 : @eq natural (len (lfappend lf6 lf4)) (Succ (##hole##))
Sketch conj87_sketch2 : @eq natural (##hole##) (Succ (len l))
Sketch conj87_sketch3 : @eq natural (len (lfappend lf6 lf4)) (##hole##)
Sketch conj87_term_sketch0 : @eq lst (lfappend lf6 lf4) (##hole##)
Sketch conj87_term_sketch1 : @eq natural (len l) (##hole##)
Sketch conj87_term_sketch2 : @eq natural (len (lfappend lf6 lf4)) (##hole##)
Sketch conj87_term_sketch3 : @eq natural (Succ (len l)) (##hole##)
Sketch conj88_sketch0 : @eq natural (##hole##) (Succ (len l))
Sketch conj88_sketch1 : @eq natural (len (lfappend (rev l) lf4)) (Succ (##hole##))
Sketch conj88_sketch2 : @eq natural (len (##hole##)) (Succ (len l))
Sketch conj88_sketch3 : @eq natural (len (lfappend (##hole##) lf4)) (Succ (len l))
Sketch conj88_sketch4 : @eq natural (len (lfappend (rev l) lf4)) (##hole##)
Sketch conj88_term_sketch0 : @eq natural (len (lfappend (rev l) lf4)) (##hole##)
Sketch conj88_term_sketch1 : @eq natural (len l) (##hole##)
Sketch conj88_term_sketch2 : @eq lst (lfappend (rev l) lf4) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (rev l) (##hole##)
Sketch conj88_term_sketch4 : @eq natural (Succ (len l)) (##hole##)
Sketch conj91_imp_sketch0 : forall _ : @eq natural (##hole##) lf5,
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5)
Sketch conj91_imp_sketch1 : forall _ : @eq natural (len lf6) lf5, @eq natural (##hole##) (Succ lf5)
Sketch conj91_imp_sketch2 : forall _ : @eq natural (len lf6) lf5,
@eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj91_imp_sketch3 : forall _ : @eq natural (len lf6) lf5, @eq natural (len (##hole##)) (Succ lf5)
Sketch conj91_imp_sketch4 : forall _ : @eq natural (len lf6) lf5,
@eq natural (len (lfappend lf6 (##hole##))) (Succ lf5)
Sketch conj91_imp_term_sketch0 : @eq natural (len lf6) (##hole##)
Sketch conj91_imp_term_sketch1 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj91_imp_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj91_imp_term_sketch3 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj91_imp_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj91_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj91_sketch1 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj91_sketch2 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj91_sketch3 : @eq natural (len (lfappend lf6 (##hole##))) (Succ lf5)
Sketch conj91_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj91_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj92_sketch0 : @eq natural (len (lfappend (rev l) (Cons n lf7))) (##hole##)
Sketch conj92_sketch1 : @eq natural (##hole##) (Succ lf5)
Sketch conj92_sketch2 : @eq natural (len (lfappend (##hole##) (Cons n lf7))) (Succ lf5)
Sketch conj92_sketch3 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj92_sketch4 : @eq natural (len (lfappend (rev l) (##hole##))) (Succ lf5)
Sketch conj92_term_sketch0 : @eq natural (Succ lf5) (##hole##)
Sketch conj92_term_sketch1 : @eq natural (len (lfappend (rev l) (Cons n lf7))) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (lfappend (rev l) (Cons n lf7)) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_imp_sketch0 : forall _ : @eq natural (##hole##) (len l),
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l))
Sketch conj95_imp_sketch1 : forall _ : @eq natural (len lf6) (##hole##),
@eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (##hole##))
Sketch conj95_imp_sketch2 : forall _ : @eq natural (len lf6) (len l),
@eq natural (##hole##) (Succ (len l))
Sketch conj95_imp_sketch3 : forall _ : @eq natural (len lf6) (len l),
@eq natural (len (##hole##)) (Succ (len l))
Sketch conj95_imp_sketch4 : forall _ : @eq natural (len lf6) (len l),
@eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_imp_sketch5 : forall _ : @eq natural (len lf6) (len l),
@eq natural (len (lfappend lf6 (##hole##))) (Succ (len l))
Sketch conj95_imp_term_sketch0 : @eq natural (len lf6) (##hole##)
Sketch conj95_imp_term_sketch1 : @eq natural (len l) (##hole##)
Sketch conj95_imp_term_sketch2 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_imp_term_sketch3 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj95_imp_term_sketch4 : @eq natural (Succ (len l)) (##hole##)
Sketch conj95_imp_term_sketch5 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_sketch0 : @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (##hole##))
Sketch conj95_sketch1 : @eq natural (##hole##) (Succ (len l))
Sketch conj95_sketch2 : @eq natural (len (##hole##)) (Succ (len l))
Sketch conj95_sketch3 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_sketch4 : @eq natural (len (lfappend lf6 (##hole##))) (Succ (len l))
Sketch conj95_term_sketch0 : @eq natural (len l) (##hole##)
Sketch conj95_term_sketch1 : @eq natural (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj95_term_sketch3 : @eq natural (Succ (len l)) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj96_sketch0 : @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (##hole##))
Sketch conj96_sketch1 : @eq natural (##hole##) (Succ (len l))
Sketch conj96_sketch2 : @eq natural (len (lfappend (##hole##) (Cons n lf7))) (Succ (len l))
Sketch conj96_sketch3 : @eq natural (len (##hole##)) (Succ (len l))
Sketch conj96_sketch4 : @eq natural (len (lfappend (rev l) (Cons n lf7))) (##hole##)
Sketch conj96_sketch5 : @eq natural (len (lfappend (rev l) (##hole##))) (Succ (len l))
Sketch conj96_term_sketch0 : @eq natural (len l) (##hole##)
Sketch conj96_term_sketch1 : @eq natural (len (lfappend (rev l) (Cons n lf7))) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (rev l) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (lfappend (rev l) (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch4 : @eq natural (Succ (len l)) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (Cons n lf7) (##hole##)
Sketch conj123_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj123_sketch1 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj123_sketch2 : @eq natural (len (lfappend lf6 (##hole##))) (Succ lf5)
Sketch conj123_sketch3 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj123_sketch4 : @eq natural (len (lfappend lf6 (Cons n (##hole##)))) (Succ lf5)
Sketch conj123_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj123_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj123_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj123_term_sketch3 : @eq natural (Succ lf5) (##hole##)
Sketch conj123_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj124_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj124_sketch1 : @eq natural (len (lfappend (rev l) (##hole##))) (Succ lf5)
Sketch conj124_sketch2 : @eq natural (len (lfappend (rev l) (Cons n Nil))) (##hole##)
Sketch conj124_sketch3 : @eq natural (len (lfappend (##hole##) (Cons n Nil))) (Succ lf5)
Sketch conj124_sketch4 : @eq natural (len (lfappend (rev l) (Cons n (##hole##)))) (Succ lf5)
Sketch conj124_sketch5 : @eq natural (len (##hole##)) (Succ lf5)
Sketch conj124_term_sketch0 : @eq natural (len (lfappend (rev l) (Cons n Nil))) (##hole##)
Sketch conj124_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj124_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj124_term_sketch3 : @eq lst (rev l) (##hole##)
Sketch conj124_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj124_term_sketch5 : @eq lst (lfappend (rev l) (Cons n Nil)) (##hole##)
Sketch conj127_sketch0 : @eq natural (##hole##) (Succ (len l))
Sketch conj127_sketch1 : @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (##hole##))
Sketch conj127_sketch2 : @eq natural (len (##hole##)) (Succ (len l))
Sketch conj127_sketch3 : @eq natural (len (lfappend lf6 (##hole##))) (Succ (len l))
Sketch conj127_sketch4 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj127_sketch5 : @eq natural (len (lfappend lf6 (Cons n (##hole##)))) (Succ (len l))
Sketch conj127_term_sketch0 : @eq natural (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj127_term_sketch1 : @eq natural (len l) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq natural (Succ (len l)) (##hole##)
Sketch conj127_term_sketch5 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 493 seconds
Problems per Sketch:
Sketch conj88_term_sketch4 --> Problem  synth_31
Sketch conj124_term_sketch0 --> Problem  synth_25
Sketch conj69_sketch0 --> Problem  synth_29
Sketch conj83_sketch1 --> Problem  synth_28
Sketch conj60_term_sketch1 --> Problem  synth_21
Sketch conj59_term_sketch2 --> Problem  synth_21
Sketch conj84_sketch1 --> Problem  synth_7
Sketch conj91_imp_term_sketch4 --> Problem  synth_13
Sketch conj127_sketch5 --> Problem  synth_60
Sketch conj59_term_sketch1 --> Problem  synth_20
Sketch conj96_sketch4 --> Problem  synth_16
Sketch conj59_sketch1 --> Problem  synth_3
Sketch conj60_sketch0 --> Problem  synth_1
Sketch conj20_term_sketch2 --> Problem  synth_9
Sketch conj124_term_sketch1 --> Problem  synth_21
Sketch conj65_term_sketch0 --> Problem  synth_28
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj127_sketch3 --> Problem  synth_52
Sketch conj87_term_sketch1 --> Problem  synth_30
Sketch conj95_imp_sketch5 --> Problem  synth_52
Sketch conj127_term_sketch0 --> Problem  synth_19
Sketch conj124_term_sketch2 --> Problem  synth_28
Sketch conj88_sketch0 --> Problem  synth_31
Sketch conj60_term_sketch3 --> Problem  synth_22
Sketch conj124_sketch5 --> Problem  synth_32
Sketch conj123_sketch4 --> Problem  synth_56
Sketch conj81_term_sketch1 --> Problem  synth_28
Sketch conj60_sketch2 --> Problem  synth_23
Sketch conj59_sketch3 --> Problem  synth_18
Sketch conj84_sketch2 --> Problem  synth_32
Sketch conj85_sketch0 --> Problem  synth_34
Sketch conj127_sketch4 --> Problem  synth_19
Sketch conj124_sketch1 --> Problem  synth_46
Sketch conj92_term_sketch2 --> Problem  synth_9
Sketch conj28_sketch2 --> Problem  synth_3
Sketch conj95_imp_sketch4 --> Problem  synth_51
Sketch conj95_imp_sketch1 --> Problem  synth_48
Sketch conj123_sketch3 --> Problem  synth_19
Sketch conj92_term_sketch3 --> Problem  synth_17
Sketch conj95_imp_term_sketch3 --> Problem  synth_12
Sketch conj83_term_sketch1 --> Problem  synth_5
Sketch conj19_term_sketch1 --> Problem  synth_5
Sketch conj28_term_sketch2 --> Problem  synth_17
Sketch conj27_sketch1 --> Problem  synth_3
Sketch conj127_term_sketch5 --> Problem  synth_22
Sketch conj96_term_sketch2 --> Problem  synth_9
Sketch conj91_sketch3 --> Problem  synth_43
Sketch conj60_sketch3 --> Problem  synth_24
Sketch conj88_term_sketch2 --> Problem  synth_8
Sketch conj91_imp_sketch2 --> Problem  synth_41
Sketch conj91_imp_sketch4 --> Problem  synth_43
Sketch conj84_term_sketch3 --> Problem  synth_9
Sketch conj123_term_sketch1 --> Problem  synth_20
Sketch conj127_term_sketch4 --> Problem  synth_31
Sketch conj91_term_sketch3 --> Problem  synth_13
Sketch conj95_sketch1 --> Problem  synth_31
Sketch conj27_term_sketch1 --> Problem  synth_12
Sketch conj96_sketch1 --> Problem  synth_31
Sketch conj20_sketch2 --> Problem  synth_6
Sketch conj92_sketch4 --> Problem  synth_46
Sketch conj88_term_sketch3 --> Problem  synth_9
Sketch conj96_term_sketch1 --> Problem  synth_16
Sketch conj124_sketch4 --> Problem  synth_58
Sketch conj91_imp_term_sketch0 --> Problem  synth_44
Sketch conj95_imp_term_sketch0 --> Problem  synth_44
Sketch conj87_term_sketch3 --> Problem  synth_31
Sketch conj84_term_sketch1 --> Problem  synth_28
Sketch conj85_term_sketch0 --> Problem  synth_30
Sketch conj69_term_sketch0 --> Problem  synth_30
Sketch conj95_term_sketch4 --> Problem  synth_13
Sketch conj127_term_sketch3 --> Problem  synth_21
Sketch conj91_imp_sketch1 --> Problem  synth_40
Sketch conj91_sketch2 --> Problem  synth_32
Sketch conj92_sketch2 --> Problem  synth_45
Sketch conj95_term_sketch3 --> Problem  synth_31
Sketch conj96_term_sketch4 --> Problem  synth_31
Sketch conj96_term_sketch5 --> Problem  synth_13
Sketch conj95_imp_term_sketch5 --> Problem  synth_13
Sketch conj91_imp_sketch3 --> Problem  synth_42
Sketch conj87_term_sketch0 --> Problem  synth_4
Sketch conj83_sketch0 --> Problem  synth_32
Sketch conj27_sketch0 --> Problem  synth_1
Sketch conj91_imp_term_sketch1 --> Problem  synth_11
Sketch conj95_imp_term_sketch4 --> Problem  synth_31
Sketch conj85_term_sketch2 --> Problem  synth_31
Sketch conj96_term_sketch3 --> Problem  synth_17
Sketch conj127_sketch0 --> Problem  synth_31
Sketch conj87_sketch1 --> Problem  synth_36
Sketch conj92_sketch1 --> Problem  synth_28
Sketch conj81_sketch1 --> Problem  synth_2
Sketch conj60_sketch4 --> Problem  synth_3
Sketch conj87_sketch3 --> Problem  synth_5
Sketch conj127_term_sketch2 --> Problem  synth_20
Sketch conj123_sketch2 --> Problem  synth_43
Sketch conj85_term_sketch1 --> Problem  synth_2
Sketch conj92_term_sketch4 --> Problem  synth_13
Sketch conj84_sketch3 --> Problem  synth_33
Sketch conj27_term_sketch0 --> Problem  synth_11
Sketch conj81_sketch0 --> Problem  synth_28
Sketch conj84_term_sketch2 --> Problem  synth_8
Sketch conj84_sketch0 --> Problem  synth_28
Sketch conj91_imp_term_sketch2 --> Problem  synth_28
Sketch conj28_sketch0 --> Problem  synth_1
Sketch conj124_term_sketch4 --> Problem  synth_22
Sketch conj95_imp_sketch0 --> Problem  synth_47
Sketch conj92_term_sketch1 --> Problem  synth_16
Sketch conj60_term_sketch4 --> Problem  synth_26
Sketch conj95_sketch4 --> Problem  synth_52
Sketch conj96_term_sketch0 --> Problem  synth_30
Sketch conj83_term_sketch2 --> Problem  synth_28
Sketch conj123_sketch1 --> Problem  synth_32
Sketch conj65_sketch0 --> Problem  synth_27
Sketch conj28_term_sketch1 --> Problem  synth_9
Sketch conj87_sketch2 --> Problem  synth_31
Sketch conj127_sketch2 --> Problem  synth_35
Sketch conj123_term_sketch4 --> Problem  synth_22
Sketch conj60_term_sketch2 --> Problem  synth_9
Sketch conj60_sketch1 --> Problem  synth_15
Sketch conj28_term_sketch3 --> Problem  synth_13
Sketch conj95_imp_sketch3 --> Problem  synth_50
Sketch conj27_term_sketch2 --> Problem  synth_13
Sketch conj123_term_sketch3 --> Problem  synth_28
Sketch conj59_sketch2 --> Problem  synth_10
Sketch conj84_term_sketch0 --> Problem  synth_7
Sketch conj20_sketch0 --> Problem  synth_1
Sketch conj91_sketch0 --> Problem  synth_28
Sketch conj20_term_sketch0 --> Problem  synth_7
Sketch conj91_term_sketch0 --> Problem  synth_11
Sketch conj95_sketch3 --> Problem  synth_11
Sketch conj91_term_sketch2 --> Problem  synth_12
Sketch conj95_imp_term_sketch2 --> Problem  synth_11
Sketch conj27_sketch2 --> Problem  synth_10
Sketch conj60_term_sketch0 --> Problem  synth_25
Sketch conj85_sketch2 --> Problem  synth_2
Sketch conj96_sketch2 --> Problem  synth_54
Sketch conj85_sketch1 --> Problem  synth_31
Sketch conj69_sketch1 --> Problem  synth_27
Sketch conj123_term_sketch2 --> Problem  synth_21
Sketch conj88_sketch1 --> Problem  synth_37
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj87_term_sketch2 --> Problem  synth_5
Sketch conj92_sketch3 --> Problem  synth_32
Sketch conj88_sketch2 --> Problem  synth_35
Sketch conj19_sketch0 --> Problem  synth_3
Sketch conj17_sketch0 --> Problem  synth_1
Sketch conj91_imp_sketch0 --> Problem  synth_39
Sketch conj124_sketch2 --> Problem  synth_25
Sketch conj96_sketch3 --> Problem  synth_35
Sketch conj95_imp_term_sketch1 --> Problem  synth_30
Sketch conj83_term_sketch0 --> Problem  synth_4
Sketch conj69_term_sketch1 --> Problem  synth_31
Sketch conj124_term_sketch5 --> Problem  synth_26
Sketch conj124_sketch3 --> Problem  synth_57
Sketch conj96_sketch0 --> Problem  synth_53
Sketch conj59_sketch0 --> Problem  synth_1
Sketch conj96_sketch5 --> Problem  synth_55
Sketch conj95_term_sketch1 --> Problem  synth_11
Sketch conj95_term_sketch0 --> Problem  synth_30
Sketch conj20_sketch1 --> Problem  synth_3
Sketch conj88_term_sketch0 --> Problem  synth_7
Sketch conj59_term_sketch0 --> Problem  synth_19
Sketch conj28_term_sketch0 --> Problem  synth_16
Sketch conj59_term_sketch3 --> Problem  synth_22
Sketch conj123_sketch0 --> Problem  synth_28
Sketch conj127_sketch1 --> Problem  synth_59
Sketch conj87_sketch0 --> Problem  synth_35
Sketch conj88_term_sketch1 --> Problem  synth_30
Sketch conj20_term_sketch1 --> Problem  synth_8
Sketch conj124_sketch0 --> Problem  synth_28
Sketch conj92_sketch0 --> Problem  synth_16
Sketch conj88_sketch3 --> Problem  synth_38
Sketch conj19_sketch1 --> Problem  synth_1
Sketch conj88_sketch4 --> Problem  synth_7
Sketch conj91_sketch1 --> Problem  synth_11
Sketch conj28_sketch3 --> Problem  synth_15
Sketch conj28_sketch1 --> Problem  synth_14
Sketch conj95_sketch2 --> Problem  synth_35
Sketch conj83_sketch2 --> Problem  synth_5
Sketch conj123_term_sketch0 --> Problem  synth_19
Sketch conj91_term_sketch1 --> Problem  synth_28
Sketch conj127_term_sketch1 --> Problem  synth_30
Sketch conj92_term_sketch0 --> Problem  synth_28
Sketch conj95_term_sketch2 --> Problem  synth_12
Sketch conj95_sketch0 --> Problem  synth_48
Sketch conj81_term_sketch0 --> Problem  synth_2
Sketch conj124_term_sketch3 --> Problem  synth_9
Sketch conj95_imp_sketch2 --> Problem  synth_49
Sketch conj91_imp_term_sketch3 --> Problem  synth_12


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 921 seconds

Problem: synth_28
 Succ (plus (plus lf5 Zero) Zero)
 plus (plus lf5 Zero) (Succ Zero)
 plus (plus lf5 (Succ Zero)) Zero
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ lf5

Problem: synth_17
 lfappend (rev (lfappend lf7 l)) (Cons n Nil)
 rev (lfappend lf7 (Cons n l))
 lfappend (rev (lfappend l Nil)) (Cons n Nil)
 lfappend (rev l) (Cons n (rev lf7))
 lfappend (rev l) (Cons n lf7)
 lfappend (rev l) (Cons n Nil)

Problem: synth_29

Problem: synth_45

Problem: synth_26
 rev (rev (lfappend (rev l) (Cons n Nil)))
 lfappend (rev l) (Cons (plus n Zero) Nil)
 lfappend (lfappend (rev l) (Cons n Nil)) Nil
 lfappend (rev (rev (rev l))) (Cons n Nil)
 lfappend (rev (lfappend l Nil)) (Cons n Nil)
 lfappend (rev l) (Cons n Nil)

Problem: synth_9
 lfappend (rev (lfappend l Nil)) Nil
 lfappend (lfappend (rev l) Nil) Nil
 rev (rev (rev l))
 rev (lfappend l Nil)
 lfappend (rev l) Nil
 rev l

Problem: synth_30
 plus (len (rev l)) Zero
 len (rev (rev l))
 len (lfappend l Nil)
 plus (len l) Zero
 len (rev l)
 len l

Problem: synth_11
 Succ (plus (len lf6) Zero)
 plus (len lf6) (Succ (len lf7))
 plus (len lf7) (Succ (len lf6))
 plus (len lf6) (Succ Zero)
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_54
 rev (lfappend l lf7)
 rev (lfappend l Nil)
 lfappend (rev l) lf7
 lfappend (rev l) Nil
 lfappend lf7 (rev l)
 rev l

Problem: synth_39
 plus (len lf6) Zero
 plus lf5 (len lf7)
 len (rev lf6)
 plus lf5 Zero
 len lf6
 lf5

Problem: synth_1
 plus (plus (plus lf3 Zero) Zero) Zero
 plus (plus lf3 Zero) Zero
 plus lf3 Zero
 lf3

Problem: synth_46

Problem: synth_55

Problem: synth_57

Problem: synth_59
 plus (len (rev lf6)) Zero
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 plus (len lf6) Zero
 len (rev lf6)
 len lf6

Problem: synth_15

Problem: synth_31
 Succ (len (rev (rev l)))
 Succ (len (lfappend l Nil))
 Succ (plus (len l) Zero)
 plus (len l) (Succ Zero)
 Succ (len (rev l))
 Succ (len l)

Problem: synth_14

Problem: synth_8
 rev (lfappend (rev lf4) l)
 lfappend (rev l) (rev (rev lf4))
 lfappend (rev l) (lfappend lf4 Nil)
 lfappend (rev l) (rev lf4)
 rev (lfappend lf4 l)
 lfappend (rev l) lf4

Problem: synth_34

Problem: synth_12
 lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)
 rev (lfappend lf7 (Cons n (rev lf6)))
 lfappend lf6 (Cons n (rev lf7))
 lfappend lf6 (Cons n lf7)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_5
 len (lfappend lf6 (rev lf4))
 len (lfappend lf4 (rev lf6))
 len (lfappend lf6 lf4)
 len (lfappend lf4 lf6)
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_37
 plus (len (rev l)) Zero
 len (rev (rev l))
 len (lfappend l Nil)
 plus (len l) Zero
 len (rev l)
 len l

Problem: synth_58
 Nil

Problem: synth_53
 len (lfappend l lf7)
 len (lfappend lf7 l)
 len (lfappend l Nil)
 plus (len l) Zero
 len (rev l)
 len l

Problem: synth_50

Problem: synth_2
 plus (len (rev lf2)) Zero
 len (rev (rev lf2))
 len (lfappend lf2 Nil)
 plus (len lf2) Zero
 len (rev lf2)
 len lf2

Problem: synth_22
 Nil

Problem: synth_20
 lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)
 lfappend (lfappend lf6 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_18
 Nil

Problem: synth_21
 Cons (plus (plus n Zero) Zero) Nil
 Cons (plus n Zero) Nil
 Cons n Nil

Problem: synth_56
 Nil

Problem: synth_41
 Succ (plus lf5 (len lf7))
 Succ (len (rev lf6))
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ (len lf6)
 Succ lf5

Problem: synth_49
 plus (len l) (Succ Zero)
 plus (len lf6) (Succ Zero)
 Succ (len (rev l))
 Succ (len (rev lf6))
 Succ (len l)
 Succ (len lf6)

Problem: synth_25
 Succ (len (rev (rev l)))
 Succ (len (lfappend l Nil))
 Succ (plus (len l) Zero)
 plus (len l) (Succ Zero)
 Succ (len (rev l))
 Succ (len l)

Problem: synth_13
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_6

Problem: synth_7
 len (lfappend lf4 (rev l))
 len (lfappend l (rev lf4))
 len (lfappend lf4 l)
 len (lfappend l lf4)
 Succ (len (rev l))
 Succ (len l)

Problem: synth_4
 lfappend (lfappend lf6 lf4) Nil
 lfappend lf6 (rev (rev lf4))
 lfappend lf6 (lfappend lf4 Nil)
 rev (lfappend lf4 (rev lf6))
 lfappend lf6 (rev lf4)
 lfappend lf6 lf4

Problem: synth_38
 lfappend (rev (lfappend l Nil)) Nil
 lfappend (lfappend (rev l) Nil) Nil
 rev (rev (rev l))
 rev (lfappend l Nil)
 lfappend (rev l) Nil
 rev l

Problem: synth_23

Problem: synth_27
 plus (plus (plus lf1 Zero) Zero) Zero
 plus (plus lf1 Zero) Zero
 plus lf1 Zero
 lf1

Problem: synth_42

Problem: synth_16
 Succ (plus (len l) Zero)
 plus (len l) (Succ (len lf7))
 plus (len lf7) (Succ (len l))
 plus (len l) (Succ Zero)
 Succ (len (rev l))
 Succ (len l)

Problem: synth_19
 Succ (len (rev (rev lf6)))
 Succ (len (lfappend lf6 Nil))
 Succ (plus (len lf6) Zero)
 plus (len lf6) (Succ Zero)
 Succ (len (rev lf6))
 Succ (len lf6)

Problem: synth_40
 plus (len lf6) (Succ Zero)
 Succ (len (rev lf6))
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ (len lf6)
 Succ lf5

Problem: synth_10

Problem: synth_33

Problem: synth_47
 plus (len l) Zero
 plus (len lf6) Zero
 len (rev l)
 len (rev lf6)
 len l
 len lf6

Problem: synth_24
 Nil

Problem: synth_3

Problem: synth_52

Problem: synth_32

Problem: synth_48
 len (lfappend lf6 lf7)
 len (lfappend lf7 lf6)
 len (lfappend lf6 Nil)
 plus (len lf6) Zero
 len (rev lf6)
 len lf6

Problem: synth_44
 plus (len (rev lf6)) Zero
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 plus (len lf6) Zero
 len (rev lf6)
 len lf6

Problem: synth_60
 Nil

Problem: synth_36
 plus (len (rev lf6)) Zero
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 plus (len lf6) Zero
 len (rev lf6)
 len lf6

Problem: synth_51
 plus (len l) (Succ Zero)
 plus (len lf6) (Succ Zero)
 Succ (len (rev l))
 Succ (len (rev lf6))
 Succ (len l)
 Succ (len lf6)

Problem: synth_35

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 921 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)).
Lemma candidate_2: forall (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma candidate_3: forall (l : lst) (n : natural) (lf5 : natural), forall _ : @eq natural (len (rev l)) lf5, @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma candidate_4: forall (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_6: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_7: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_8: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_9: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_10: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_11: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_12: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_13: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_14: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_15: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_16: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_17: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_18: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_19: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_20: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_21: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_22: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (lfappend lf4 (rev lf6))).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev lf4)).
Lemma candidate_24: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 lf4).
Lemma candidate_25: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_26: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_27: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 lf4)).
Lemma candidate_28: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_29: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev lf6))).
Lemma candidate_30: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len lf6)).
Lemma candidate_31: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_32: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_33: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_34: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_35: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_36: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_37: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_38: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_39: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev l))).
Lemma candidate_40: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_41: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend (rev lf4) l)).
Lemma candidate_42: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev (rev lf4))).
Lemma candidate_43: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (lfappend lf4 Nil)).
Lemma candidate_44: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev lf4)).
Lemma candidate_45: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend lf4 l)).
Lemma candidate_46: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) lf4).
Lemma candidate_47: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_48: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_49: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_50: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_51: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_52: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_53: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_54: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_55: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_56: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_57: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_58: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_59: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_60: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_61: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_62: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_63: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_64: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_65: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_66: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_67: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_68: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_69: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_70: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_71: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_72: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_73: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_74: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_75: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_76: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_77: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_78: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_79: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (plus (len l) Zero)).
Lemma candidate_80: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_81: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_82: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (plus (len l) (Succ Zero)).
Lemma candidate_83: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_84: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_85: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_86: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_87: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_88: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_89: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_90: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_91: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7))   (lfappend (rev (lfappend lf7 l)) (Cons n Nil)).
Lemma candidate_92: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (rev (lfappend lf7 (Cons n l))).
Lemma candidate_93: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_94: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n (rev lf7))).
Lemma candidate_95: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n lf7)).
Lemma candidate_96: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_97: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_98: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_99: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_100: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_101: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_102: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_103: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_104: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_105: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_106: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_107: forall (lf3 : natural) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n (Nil)))) lf3.
Lemma candidate_108: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_109: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_110: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_111: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_112: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_113: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_114: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_115: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_116: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_117: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_118: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_119: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_120: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_121: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_122: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_123: @eq lst Nil (Nil).
Lemma candidate_124: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_125: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_126: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_127: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_128: forall (lf3 : natural) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n (Nil)))) lf3.
Lemma candidate_129: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev (rev l)))).
Lemma candidate_130: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil)))   (Succ (len (lfappend l Nil))).
Lemma candidate_131: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (plus (len l) Zero)).
Lemma candidate_132: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (plus (len l) (Succ Zero)).
Lemma candidate_133: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev l))).
Lemma candidate_134: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)).
Lemma candidate_135: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_136: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_137: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_138: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_139: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_140: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_141: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_142: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_143: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_144: @eq lst Nil (Nil).
Lemma candidate_145: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (rev (rev (lfappend (rev l) (Cons n Nil)))).
Lemma candidate_146: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev l) (Cons (plus n Zero) Nil)).
Lemma candidate_147: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) (Cons n Nil)) Nil).
Lemma candidate_148: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (rev (rev l))) (Cons n Nil)).
Lemma candidate_149: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_150: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_151: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_152: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_153: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_154: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_155: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_156: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_157: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_158: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_159: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_160: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_161: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_162: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_163: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_164: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_165: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_166: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_167: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_168: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_169: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_170: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_171: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_172: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_173: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_174: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_175: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_176: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_177: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_178: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_179: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_180: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_181: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_182: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_183: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_184: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_185: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_186: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_187: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_188: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_189: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_190: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_191: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_192: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_193: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_194: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_195: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_196: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_197: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_198: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_199: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_200: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_201: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_202: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_203: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_204: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_205: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_206: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_207: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_208: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_209: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 lf4)).
Lemma candidate_210: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_211: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev lf6))).
Lemma candidate_212: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len lf6)).
Lemma candidate_213: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_214: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_215: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_216: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (lfappend lf4 (rev lf6))).
Lemma candidate_217: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev lf4)).
Lemma candidate_218: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 lf4).
Lemma candidate_219: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_220: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_221: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 lf4)).
Lemma candidate_222: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_223: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev lf6))).
Lemma candidate_224: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len lf6)).
Lemma candidate_225: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_226: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_227: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_228: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_229: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_230: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_231: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_232: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_233: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_234: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_235: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_236: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_237: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_238: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_239: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_240: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_241: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev l))).
Lemma candidate_242: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_243: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_244: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_245: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_246: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_247: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev l))).
Lemma candidate_248: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_249: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_250: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_251: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_252: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_253: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_254: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_255: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend (rev lf4) l)).
Lemma candidate_256: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev (rev lf4))).
Lemma candidate_257: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (lfappend lf4 Nil)).
Lemma candidate_258: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev lf4)).
Lemma candidate_259: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend lf4 l)).
Lemma candidate_260: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) lf4).
Lemma candidate_261: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_262: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_263: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_264: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_265: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_266: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_267: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_268: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_269: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_270: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_271: forall (l : lst), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_272: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_273: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_274: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_275: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_276: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_277: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_278: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_279: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_280: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_281: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_282: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_283: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_284: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_285: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_286: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_287: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_288: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_289: forall (lf2 : lst), @eq natural (len lf2) (len (rev lf2)).
Lemma candidate_290: forall (lf2 : lst), @eq natural (len lf2) (len lf2).
Lemma candidate_291: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_292: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_293: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_294: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_295: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_296: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_297: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (plus (len (rev lf6)) Zero)).
Lemma candidate_298: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev (rev lf6)))).
Lemma candidate_299: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_300: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (plus (len lf6) Zero)).
Lemma candidate_301: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev lf6))).
Lemma candidate_302: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len lf6)).
Lemma candidate_303: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_304: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_305: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_306: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_307: forall (l : lst), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_308: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_309: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_310: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_311: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 lf4)).
Lemma candidate_312: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_313: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev lf6))).
Lemma candidate_314: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len lf6)).
Lemma candidate_315: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_316: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_317: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_318: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (rev (lfappend lf4 (rev lf6))).
Lemma candidate_319: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev lf4)).
Lemma candidate_320: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 lf4).
Lemma candidate_321: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_322: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_323: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_324: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_325: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_326: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_327: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_328: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_329: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 lf4)).
Lemma candidate_330: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_331: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len (rev lf6))).
Lemma candidate_332: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (Succ (len lf6)).
Lemma candidate_333: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_334: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_335: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_336: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_337: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_338: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_339: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_340: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_341: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_342: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_343: forall (l : lst), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_344: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_345: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (plus (len (rev l)) Zero)).
Lemma candidate_346: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev (rev l)))).
Lemma candidate_347: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (lfappend l Nil))).
Lemma candidate_348: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (plus (len l) Zero)).
Lemma candidate_349: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev l))).
Lemma candidate_350: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_351: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (lfappend (rev (lfappend l Nil)) Nil) lf4))   (Succ (len l)).
Lemma candidate_352: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (lfappend (lfappend (rev l) Nil) Nil) lf4))   (Succ (len l)).
Lemma candidate_353: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev (rev (rev l))) lf4)) (Succ (len l)).
Lemma candidate_354: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev (lfappend l Nil)) lf4)) (Succ (len l)).
Lemma candidate_355: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (lfappend (rev l) Nil) lf4)) (Succ (len l)).
Lemma candidate_356: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_357: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_358: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_359: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_360: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_361: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev l))).
Lemma candidate_362: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_363: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_364: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_365: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_366: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_367: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len (rev l))).
Lemma candidate_368: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (Succ (len l)).
Lemma candidate_369: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_370: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_371: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_372: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_373: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_374: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_375: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend (rev lf4) l)).
Lemma candidate_376: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev (rev lf4))).
Lemma candidate_377: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (lfappend lf4 Nil)).
Lemma candidate_378: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev lf4)).
Lemma candidate_379: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend lf4 l)).
Lemma candidate_380: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) lf4).
Lemma candidate_381: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_382: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_383: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_384: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_385: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_386: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_387: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_388: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_389: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_390: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_391: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_392: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_393: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (plus (len lf6) Zero) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_394: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (plus lf5 (len lf7)) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_395: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len (rev lf6)) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_396: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (plus lf5 Zero) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_397: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_398: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (lf5) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_399: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (plus (len lf6) (Succ Zero)) (Succ lf5).
Lemma candidate_400: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (len (rev lf6))) (Succ lf5).
Lemma candidate_401: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_402: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_403: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (len lf6)) (Succ lf5).
Lemma candidate_404: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_405: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus lf5 (len lf7))).
Lemma candidate_406: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_407: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus lf5 Zero)).
Lemma candidate_408: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (plus lf5 (Succ Zero)).
Lemma candidate_409: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_410: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ lf5).
Lemma candidate_411: forall (lf6 : lst), @eq natural (len lf6) (plus (len (rev lf6)) Zero).
Lemma candidate_412: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_413: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_414: forall (lf6 : lst), @eq natural (len lf6) (plus (len lf6) Zero).
Lemma candidate_415: forall (lf6 : lst), @eq natural (len lf6) (len (rev lf6)).
Lemma candidate_416: forall (lf6 : lst), @eq natural (len lf6) (len lf6).
Lemma candidate_417: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_418: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_419: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_420: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_421: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_422: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_423: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_424: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_425: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_426: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_427: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_428: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_429: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_430: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_431: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_432: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_433: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_434: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_435: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_436: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_437: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_438: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_439: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_440: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_441: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_442: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_443: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_444: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_445: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_446: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_447: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_448: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_449: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_450: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_451: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_452: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_453: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_454: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_455: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_456: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_457: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_458: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_459: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_460: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_461: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_462: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_463: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_464: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_465: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_466: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_467: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_468: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_469: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_470: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_471: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_472: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_473: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_474: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_475: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_476: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_477: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (plus (len l) Zero)).
Lemma candidate_478: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_479: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_480: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (plus (len l) (Succ Zero)).
Lemma candidate_481: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_482: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_483: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_484: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_485: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_486: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_487: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_488: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_489: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_490: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_491: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_492: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_493: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_494: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_495: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (plus (len l) Zero)).
Lemma candidate_496: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_497: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_498: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (plus (len l) (Succ Zero)).
Lemma candidate_499: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_500: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_501: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_502: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_503: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_504: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_505: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_506: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_507: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7))   (lfappend (rev (lfappend lf7 l)) (Cons n Nil)).
Lemma candidate_508: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (rev (lfappend lf7 (Cons n l))).
Lemma candidate_509: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_510: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n (rev lf7))).
Lemma candidate_511: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n lf7)).
Lemma candidate_512: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_513: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_514: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_515: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_516: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_517: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_518: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_519: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (plus (len l) Zero) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_520: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (plus (len lf6) Zero) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_521: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len (rev l)) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_522: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len (rev lf6)) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_523: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len l) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_524: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_525: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf6 lf7)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_526: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf7 lf6)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_527: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf6 Nil)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_528: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (plus (len lf6) Zero), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_529: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (rev lf6)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_530: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len lf6), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_531: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_532: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (plus (len lf6) (Succ Zero)) (Succ (len l)).
Lemma candidate_533: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_534: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len (rev lf6))) (Succ (len l)).
Lemma candidate_535: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_536: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len lf6)) (Succ (len l)).
Lemma candidate_537: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len l) (Succ Zero)).
Lemma candidate_538: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_539: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_540: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_541: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len l)).
Lemma candidate_542: forall (lf7 : lst) (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_543: forall (lf6 : lst), @eq natural (len lf6) (plus (len (rev lf6)) Zero).
Lemma candidate_544: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_545: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_546: forall (lf6 : lst), @eq natural (len lf6) (plus (len lf6) Zero).
Lemma candidate_547: forall (lf6 : lst), @eq natural (len lf6) (len (rev lf6)).
Lemma candidate_548: forall (lf6 : lst), @eq natural (len lf6) (len lf6).
Lemma candidate_549: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_550: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_551: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_552: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_553: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_554: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_555: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_556: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_557: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_558: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_559: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_560: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_561: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_562: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_563: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_564: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_565: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_566: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_567: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_568: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_569: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_570: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_571: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_572: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_573: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_574: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_575: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_576: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_577: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_578: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_579: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_580: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_581: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_582: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_583: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_584: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_585: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_586: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_587: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_588: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_589: forall (l : lst), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_590: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_591: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_592: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_593: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_594: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_595: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_596: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_597: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_598: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_599: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_600: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_601: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_602: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_603: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus (len lf6) Zero)).
Lemma candidate_604: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_605: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_606: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (plus (len lf6) (Succ Zero)).
Lemma candidate_607: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (rev lf6))).
Lemma candidate_608: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len lf6)).
Lemma candidate_609: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_610: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_611: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_612: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_613: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_614: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_615: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_616: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_617: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_618: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_619: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_620: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_621: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_622: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_623: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_624: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_625: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_626: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_627: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend l lf7))).
Lemma candidate_628: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend lf7 l))).
Lemma candidate_629: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend l Nil))).
Lemma candidate_630: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (plus (len l) Zero)).
Lemma candidate_631: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_632: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_633: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_634: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_635: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_636: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_637: forall (l : lst), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_638: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_639: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev (lfappend l lf7)) (Cons n lf7)))   (Succ (len l)).
Lemma candidate_640: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev (lfappend l Nil)) (Cons n lf7)))   (Succ (len l)).
Lemma candidate_641: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (lfappend (rev l) lf7) (Cons n lf7)))   (Succ (len l)).
Lemma candidate_642: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (lfappend (rev l) Nil) (Cons n lf7)))   (Succ (len l)).
Lemma candidate_643: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (lfappend lf7 (rev l)) (Cons n lf7)))   (Succ (len l)).
Lemma candidate_644: forall (l : lst) (lf7 : lst) (n : natural), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_645: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (plus (len l) Zero)).
Lemma candidate_646: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_647: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_648: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (plus (len l) (Succ Zero)).
Lemma candidate_649: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_650: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_651: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_652: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_653: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_654: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_655: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_656: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_657: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (plus (len l) Zero)).
Lemma candidate_658: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_659: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_660: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (plus (len l) (Succ Zero)).
Lemma candidate_661: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len (rev l))).
Lemma candidate_662: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7))) (Succ (len l)).
Lemma candidate_663: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_664: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_665: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_666: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_667: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_668: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_669: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7))   (lfappend (rev (lfappend lf7 l)) (Cons n Nil)).
Lemma candidate_670: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (rev (lfappend lf7 (Cons n l))).
Lemma candidate_671: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_672: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n (rev lf7))).
Lemma candidate_673: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n lf7)).
Lemma candidate_674: forall (lf7 : lst) (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n lf7)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_675: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_676: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_677: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_678: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_679: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_680: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_681: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_682: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_683: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_684: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_685: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_686: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_687: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_688: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_689: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_690: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_691: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_692: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_693: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_694: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_695: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_696: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_697: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_698: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_699: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n (Nil)))) (Succ lf5).
Lemma candidate_700: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_701: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_702: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_703: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_704: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_705: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_706: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_707: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_708: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_709: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_710: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_711: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_712: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_713: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_714: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_715: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_716: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_717: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_718: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_719: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_720: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_721: @eq lst Nil (Nil).
Lemma candidate_722: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_723: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_724: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_725: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_726: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_727: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_728: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev (rev l)))).
Lemma candidate_729: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil)))   (Succ (len (lfappend l Nil))).
Lemma candidate_730: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (plus (len l) Zero)).
Lemma candidate_731: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (plus (len l) (Succ Zero)).
Lemma candidate_732: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev l))).
Lemma candidate_733: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)).
Lemma candidate_734: forall (n : natural) (l : lst) (lf5 : natural), @eq natural (len (lfappend (rev l) (Cons n (Nil)))) (Succ lf5).
Lemma candidate_735: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev (rev l)))).
Lemma candidate_736: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil)))   (Succ (len (lfappend l Nil))).
Lemma candidate_737: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (plus (len l) Zero)).
Lemma candidate_738: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (plus (len l) (Succ Zero)).
Lemma candidate_739: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev l))).
Lemma candidate_740: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)).
Lemma candidate_741: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_742: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_743: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_744: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_745: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_746: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_747: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_748: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_749: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_750: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_751: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_752: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_753: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_754: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_755: forall (l : lst), @eq lst (rev l) (rev l).
Lemma candidate_756: @eq lst Nil (Nil).
Lemma candidate_757: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (rev (rev (lfappend (rev l) (Cons n Nil)))).
Lemma candidate_758: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev l) (Cons (plus n Zero) Nil)).
Lemma candidate_759: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) (Cons n Nil)) Nil).
Lemma candidate_760: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (rev (rev l))) (Cons n Nil)).
Lemma candidate_761: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_762: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil)) (lfappend (rev l) (Cons n Nil)).
Lemma candidate_763: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_764: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_765: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_766: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_767: forall (l : lst), @eq natural (Succ (len (rev l))) (Succ (len l)).
Lemma candidate_768: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_769: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (Succ (plus (len (rev lf6)) Zero)).
Lemma candidate_770: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_771: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_772: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_773: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_774: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_775: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_776: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_777: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_778: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_779: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_780: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_781: forall (l : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n (Nil)))) (Succ (len l)).
Lemma candidate_782: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_783: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_784: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_785: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_786: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_787: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_788: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_789: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_790: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_791: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_792: forall (l : lst), @eq natural (len l) (len (rev l)).
Lemma candidate_793: forall (l : lst), @eq natural (len l) (len l).
Lemma candidate_794: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_795: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_796: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_797: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_798: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_799: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_800: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_801: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_802: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_803: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_804: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_805: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_806: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_807: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev l))).
Lemma candidate_808: forall (l : lst), @eq natural (Succ (len l)) (Succ (len l)).
Lemma candidate_809: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1608 seconds
Duplicates removed: 601
Filtered by Quickchick: 81
Filtered by script: 26
Remaining: 101

Lemmas: 
Lemma candidate_153: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_7: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_49: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_51: forall (l : lst), @eq lst (rev l) (lfappend (rev l) Nil).
Lemma candidate_50: forall (l : lst), @eq lst (rev l) (rev (lfappend l Nil)).
Lemma candidate_168: forall (l : lst), @eq natural (len l) (plus (len l) Zero).
Lemma candidate_166: forall (l : lst), @eq natural (len l) (len (rev (rev l))).
Lemma candidate_167: forall (l : lst), @eq natural (len l) (len (lfappend l Nil)).
Lemma candidate_414: forall (lf6 : lst), @eq natural (len lf6) (plus (len lf6) Zero).
Lemma candidate_412: forall (lf6 : lst), @eq natural (len lf6) (len (rev (rev lf6))).
Lemma candidate_152: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_12: forall (lf2 : lst), @eq natural (len lf2) (plus (len lf2) Zero).
Lemma candidate_10: forall (lf2 : lst), @eq natural (len lf2) (len (rev (rev lf2))).
Lemma candidate_6: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_181: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_180: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_165: forall (l : lst), @eq natural (len l) (plus (len (rev l)) Zero).
Lemma candidate_159: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_158: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_121: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_413: forall (lf6 : lst), @eq natural (len lf6) (len (lfappend lf6 Nil)).
Lemma candidate_11: forall (lf2 : lst), @eq natural (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_411: forall (lf6 : lst), @eq natural (len lf6) (plus (len (rev lf6)) Zero).
Lemma candidate_9: forall (lf2 : lst), @eq natural (len lf2) (plus (len (rev lf2)) Zero).
Lemma candidate_270: forall (l : lst), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_269: forall (l : lst), @eq natural (Succ (plus (len l) Zero)) (Succ (len l)).
Lemma candidate_267: forall (l : lst), @eq natural (Succ (len (rev (rev l)))) (Succ (len l)).
Lemma candidate_174: forall (l : lst), @eq natural (Succ (len l)) (plus (len l) (Succ Zero)).
Lemma candidate_173: forall (l : lst), @eq natural (Succ (len l)) (Succ (plus (len l) Zero)).
Lemma candidate_171: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (rev (rev l)))).
Lemma candidate_48: forall (l : lst), @eq lst (rev l) (lfappend (lfappend (rev l) Nil) Nil).
Lemma candidate_47: forall (l : lst), @eq lst (rev l) (lfappend (rev (lfappend l Nil)) Nil).
Lemma candidate_151: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_268: forall (l : lst), @eq natural (Succ (len (lfappend l Nil))) (Succ (len l)).
Lemma candidate_172: forall (l : lst), @eq natural (Succ (len l)) (Succ (len (lfappend l Nil))).
Lemma candidate_179: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_178: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_177: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_157: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_156: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_155: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_120: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_20: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (rev (rev lf4))).
Lemma candidate_41: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (rev (lfappend (rev lf4) l)).
Lemma candidate_21: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend lf6 (lfappend lf4 Nil)).
Lemma candidate_19: forall (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf4) (lfappend (lfappend lf6 lf4) Nil).
Lemma candidate_28: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 lf6)).
Lemma candidate_113: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len lf6)).
Lemma candidate_38: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l lf4)).
Lemma candidate_37: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 l)).
Lemma candidate_42: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (rev (rev lf4))).
Lemma candidate_26: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf4 (rev lf6))).
Lemma candidate_25: forall (lf4 : lst) (lf6 : lst), @eq natural (len (lfappend lf6 lf4)) (len (lfappend lf6 (rev lf4))).
Lemma candidate_112: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev lf6))).
Lemma candidate_43: forall (l : lst) (lf4 : lst), @eq lst (lfappend (rev l) lf4) (lfappend (rev l) (lfappend lf4 Nil)).
Lemma candidate_36: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend l (rev lf4))).
Lemma candidate_35: forall (l : lst) (lf4 : lst), @eq natural (len (lfappend (rev l) lf4)) (len (lfappend lf4 (rev l))).
Lemma candidate_133: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev l))).
Lemma candidate_111: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (plus (len lf6) (Succ Zero)).
Lemma candidate_110: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (plus (len lf6) Zero)).
Lemma candidate_108: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (rev (rev lf6)))).
Lemma candidate_119: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_132: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (plus (len l) (Succ Zero)).
Lemma candidate_131: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (plus (len l) Zero)).
Lemma candidate_129: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len (rev (rev l)))).
Lemma candidate_580: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_579: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
Lemma candidate_403: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (len lf6)) (Succ lf5).
Lemma candidate_109: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len (lfappend lf6 Nil))).
Lemma candidate_117: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_115: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_628: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend lf7 l))).
Lemma candidate_627: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (Succ (len (lfappend l lf7))).
Lemma candidate_130: forall (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n Nil)))   (Succ (len (lfappend l Nil))).
Lemma candidate_59: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf7) (Succ (len lf6))).
Lemma candidate_58: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n lf7)))   (plus (len lf6) (Succ (len lf7))).
Lemma candidate_769: forall (n : natural) (lf6 : lst), @eq natural (len (lfappend lf6 (Cons n Nil)))   (Succ (plus (len (rev lf6)) Zero)).
Lemma candidate_402: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_401: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_400: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (Succ (len (rev lf6))) (Succ lf5).
Lemma candidate_81: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len lf7) (Succ (len l))).
Lemma candidate_80: forall (lf7 : lst) (n : natural) (l : lst), @eq natural (len (lfappend (rev l) (Cons n lf7)))   (plus (len l) (Succ (len lf7))).
Lemma candidate_536: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len lf6)) (Succ (len l)).
Lemma candidate_148: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (rev (rev l))) (Cons n Nil)).
Lemma candidate_146: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev l) (Cons (plus n Zero) Nil)).
Lemma candidate_145: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (rev (rev (lfappend (rev l) (Cons n Nil)))).
Lemma candidate_149: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (rev (lfappend l Nil)) (Cons n Nil)).
Lemma candidate_147: forall (n : natural) (l : lst), @eq lst (lfappend (rev l) (Cons n Nil))   (lfappend (lfappend (rev l) (Cons n Nil)) Nil).
Lemma candidate_399: forall (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (plus (len lf6) (Succ Zero)) (Succ lf5).
Lemma candidate_534: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (Succ (len (rev lf6))) (Succ (len l)).
Lemma candidate_116: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_114: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_2: forall (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ lf5).
Lemma candidate_531: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (plus (len l) (Succ Zero)) (Succ (len l)).
Lemma candidate_532: forall (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (plus (len lf6) (Succ Zero)) (Succ (len l)).
Lemma candidate_4: forall (n : natural) (l : lst) (lf6 : lst), forall _ : @eq natural (len lf6) (len l), @eq natural (len (lfappend lf6 (Cons n Nil))) (Succ (len l)).
Lemma candidate_3: forall (l : lst) (n : natural) (lf5 : natural), forall _ : @eq natural (len (rev l)) lf5, @eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ lf5).
Lemma candidate_405: forall (lf7 : lst) (n : natural) (lf5 : natural) (lf6 : lst), forall _ : @eq natural (len lf6) lf5, @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (plus lf5 (len lf7))).
Lemma candidate_526: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf7 lf6)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf7 lf6))).
Lemma candidate_525: forall (lf7 : lst) (n : natural) (lf6 : lst), forall _ : @eq natural (len lf6) (len (lfappend lf6 lf7)), @eq natural (len (lfappend lf6 (Cons n lf7))) (Succ (len (lfappend lf6 lf7))).
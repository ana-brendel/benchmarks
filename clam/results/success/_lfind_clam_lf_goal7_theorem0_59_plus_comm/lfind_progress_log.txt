File Information
- File name: goal7
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal7_theorem0_59_plus_comm
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal7_theorem0_59_plus_comm
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y : lst, @eq natural (len (qreva x0 y)) (plus (len x0) (len y)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x))

* Hypothesis:
IHx : forall y : lst, @eq natural (len (qreva x y)) (plus (len x) (len y))
x : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
len _UNBOUND_REL_1 : natural
x : lst
len x : natural
len (Cons n Nil) : natural
len (qreva x _UNBOUND_REL_1) : natural
@eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x)) : Prop
Succ (len x) : natural
plus (len x) (len _UNBOUND_REL_1) : natural
forall y : lst, @eq natural (len (qreva x y)) (plus (len x) (len y)) : Prop
@eq natural (len (qreva x _UNBOUND_REL_1))
  (plus (len x) (len _UNBOUND_REL_1)) : Prop
plus (len x) (len (Cons n Nil)) : natural
lst : Set
Cons n Nil : lst
natural : Set
qreva x _UNBOUND_REL_1 : lst
n : natural
Nil : lst

* Functions:
len  : forall _ : lst, natural
Succ  : forall _ : natural, natural
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = Succ (len x)
lf1 : natural = plus (len x) (len (Cons n Nil))
lf4 : lst = Cons n Nil
lf5 : natural = len x
lf2 : natural = len (Cons n Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural (plus lf5 lf2) lf3.
Lemma conj19: forall (lf5 : natural) (lf4 : lst) (lf3 : natural), @eq natural (plus lf5 (len lf4)) lf3.
Lemma conj21: forall (lf2 : natural) (x : lst) (lf3 : natural), @eq natural (plus (len x) lf2) lf3.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : natural), @eq natural (plus (len x) (len lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n lf6))) lf3.
Lemma conj28: forall (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n Nil))) lf3.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n lf6))) lf3.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n Nil))) lf3.
Lemma conj33: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj37: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj49: forall (lf2 : natural) (lf5 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma conj51: forall (lf5 : natural) (lf4 : lst), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma conj53: forall (lf2 : natural) (x : lst), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma conj55: forall (x : lst) (lf4 : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma conj60: forall (lf5 : natural) (n : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ lf5).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).
Lemma conj64: forall (x : lst) (n : natural), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x)).


<---VALIDITY CHECKS--->
Time elapsed: 40 seconds
Valid:
Lemma conj64: forall (x : lst) (n : natural), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x)).
Lemma conj60: forall (lf5 : natural) (n : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ lf5).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma conj55: forall (x : lst) (lf4 : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma conj53: forall (lf2 : natural) (x : lst), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma conj51: forall (lf5 : natural) (lf4 : lst), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma conj49: forall (lf2 : natural) (lf5 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma conj37: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj33: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj32: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n Nil))) lf3.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n lf6))) lf3.
Lemma conj28: forall (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n Nil))) lf3.
Lemma conj27: forall (lf6 : lst) (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n lf6))) lf3.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : natural), @eq natural (plus (len x) (len lf4)) lf3.
Lemma conj21: forall (lf2 : natural) (x : lst) (lf3 : natural), @eq natural (plus (len x) lf2) lf3.
Lemma conj19: forall (lf5 : natural) (lf4 : lst) (lf3 : natural), @eq natural (plus lf5 (len lf4)) lf3.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural (plus lf5 lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 58 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma conj55: forall (x : lst) (lf4 : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma conj53: forall (lf2 : natural) (x : lst), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma conj51: forall (lf5 : natural) (lf4 : lst), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma conj49: forall (lf2 : natural) (lf5 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma conj37: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj33: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj32: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n Nil))) lf3.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n lf6))) lf3.
Lemma conj28: forall (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n Nil))) lf3.
Lemma conj27: forall (lf6 : lst) (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n lf6))) lf3.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : natural), @eq natural (plus (len x) (len lf4)) lf3.
Lemma conj21: forall (lf2 : natural) (x : lst) (lf3 : natural), @eq natural (plus (len x) lf2) lf3.
Lemma conj19: forall (lf5 : natural) (lf4 : lst) (lf3 : natural), @eq natural (plus lf5 (len lf4)) lf3.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural (plus lf5 lf2) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 86 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj17: forall (lf2 : natural) (lf5 : natural) (lf3 : natural), @eq natural (plus lf5 lf2) lf3.
Lemma conj19: forall (lf5 : natural) (lf4 : lst) (lf3 : natural), @eq natural (plus lf5 (len lf4)) lf3.
Lemma conj21: forall (lf2 : natural) (x : lst) (lf3 : natural), @eq natural (plus (len x) lf2) lf3.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : natural), @eq natural (plus (len x) (len lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n lf6))) lf3.
Lemma conj28: forall (lf5 : natural) (n : natural) (lf3 : natural), @eq natural (plus lf5 (len (Cons n Nil))) lf3.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n lf6))) lf3.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : natural), @eq natural (plus (len x) (len (Cons n Nil))) lf3.
Lemma conj33: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 (Succ lf5).
Lemma conj37: forall (x : lst) (lf1 : natural), @eq natural lf1 (Succ (len x)).
Lemma conj49: forall (lf2 : natural) (lf5 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma conj51: forall (lf5 : natural) (lf4 : lst), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma conj53: forall (lf2 : natural) (x : lst), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma conj55: forall (x : lst) (lf4 : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma conj59: forall (lf6 : lst) (lf5 : natural) (n : natural), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).


<---CREATE SKETCHES--->
Time elapsed: 86 seconds
Sketches:
Sketch conj17_sketch0 : @eq natural (##hole##) lf3
Sketch conj17_term_sketch0 : @eq natural (plus lf5 lf2) (##hole##)
Sketch conj19_sketch0 : @eq natural (##hole##) lf3
Sketch conj19_sketch1 : @eq natural (plus lf5 (##hole##)) lf3
Sketch conj19_term_sketch0 : @eq natural (plus lf5 (len lf4)) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (len lf4) (##hole##)
Sketch conj21_sketch0 : @eq natural (plus (##hole##) lf2) lf3
Sketch conj21_sketch1 : @eq natural (##hole##) lf3
Sketch conj21_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj21_term_sketch1 : @eq natural (plus (len x) lf2) (##hole##)
Sketch conj23_sketch0 : @eq natural (plus (##hole##) (len lf4)) lf3
Sketch conj23_sketch1 : @eq natural (##hole##) lf3
Sketch conj23_sketch2 : @eq natural (plus (len x) (##hole##)) lf3
Sketch conj23_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj23_term_sketch1 : @eq natural (plus (len x) (len lf4)) (##hole##)
Sketch conj23_term_sketch2 : @eq natural (len lf4) (##hole##)
Sketch conj27_sketch0 : @eq natural (plus lf5 (##hole##)) lf3
Sketch conj27_sketch1 : @eq natural (plus lf5 (len (##hole##))) lf3
Sketch conj27_sketch2 : @eq natural (##hole##) lf3
Sketch conj27_term_sketch0 : @eq natural (len (Cons n lf6)) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (plus lf5 (len (Cons n lf6))) (##hole##)
Sketch conj28_sketch0 : @eq natural (plus lf5 (##hole##)) lf3
Sketch conj28_sketch1 : @eq natural (plus lf5 (len (##hole##))) lf3
Sketch conj28_sketch2 : @eq natural (plus lf5 (len (Cons n (##hole##)))) lf3
Sketch conj28_sketch3 : @eq natural (##hole##) lf3
Sketch conj28_term_sketch0 : @eq natural (len (Cons n Nil)) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj28_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj28_term_sketch3 : @eq natural (plus lf5 (len (Cons n Nil))) (##hole##)
Sketch conj31_sketch0 : @eq natural (plus (len x) (##hole##)) lf3
Sketch conj31_sketch1 : @eq natural (plus (len x) (len (##hole##))) lf3
Sketch conj31_sketch2 : @eq natural (plus (##hole##) (len (Cons n lf6))) lf3
Sketch conj31_sketch3 : @eq natural (##hole##) lf3
Sketch conj31_term_sketch0 : @eq natural (len (Cons n lf6)) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj31_term_sketch2 : @eq natural (len x) (##hole##)
Sketch conj31_term_sketch3 : @eq natural (plus (len x) (len (Cons n lf6))) (##hole##)
Sketch conj32_sketch0 : @eq natural (plus (##hole##) (len (Cons n Nil))) lf3
Sketch conj32_sketch1 : @eq natural (##hole##) lf3
Sketch conj32_sketch2 : @eq natural (plus (len x) (##hole##)) lf3
Sketch conj32_sketch3 : @eq natural (plus (len x) (len (##hole##))) lf3
Sketch conj32_sketch4 : @eq natural (plus (len x) (len (Cons n (##hole##)))) lf3
Sketch conj32_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj32_term_sketch1 : @eq natural (plus (len x) (len (Cons n Nil))) (##hole##)
Sketch conj32_term_sketch2 : @eq natural (len (Cons n Nil)) (##hole##)
Sketch conj32_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj32_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj33_sketch0 : @eq natural lf1 (##hole##)
Sketch conj33_term_sketch0 : @eq natural (Succ lf5) (##hole##)
Sketch conj37_sketch0 : @eq natural lf1 (Succ (##hole##))
Sketch conj37_sketch1 : @eq natural lf1 (##hole##)
Sketch conj37_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj37_term_sketch1 : @eq natural (Succ (len x)) (##hole##)
Sketch conj49_sketch0 : @eq natural (plus lf5 lf2) (##hole##)
Sketch conj49_sketch1 : @eq natural (##hole##) (Succ lf5)
Sketch conj49_term_sketch0 : @eq natural (Succ lf5) (##hole##)
Sketch conj49_term_sketch1 : @eq natural (plus lf5 lf2) (##hole##)
Sketch conj51_sketch0 : @eq natural (##hole##) (Succ lf5)
Sketch conj51_sketch1 : @eq natural (plus lf5 (len lf4)) (##hole##)
Sketch conj51_sketch2 : @eq natural (plus lf5 (##hole##)) (Succ lf5)
Sketch conj51_term_sketch0 : @eq natural (plus lf5 (len lf4)) (##hole##)
Sketch conj51_term_sketch1 : @eq natural (Succ lf5) (##hole##)
Sketch conj51_term_sketch2 : @eq natural (len lf4) (##hole##)
Sketch conj53_sketch0 : @eq natural (plus (##hole##) lf2) (Succ (##hole##))
Sketch conj53_sketch1 : @eq natural (##hole##) (Succ (len x))
Sketch conj53_sketch2 : @eq natural (plus (len x) lf2) (##hole##)
Sketch conj53_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj53_term_sketch1 : @eq natural (plus (len x) lf2) (##hole##)
Sketch conj53_term_sketch2 : @eq natural (Succ (len x)) (##hole##)
Sketch conj55_sketch0 : @eq natural (plus (##hole##) (len lf4)) (Succ (##hole##))
Sketch conj55_sketch1 : @eq natural (##hole##) (Succ (len x))
Sketch conj55_sketch2 : @eq natural (plus (len x) (len lf4)) (##hole##)
Sketch conj55_sketch3 : @eq natural (plus (len x) (##hole##)) (Succ (len x))
Sketch conj55_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj55_term_sketch1 : @eq natural (plus (len x) (len lf4)) (##hole##)
Sketch conj55_term_sketch2 : @eq natural (Succ (len x)) (##hole##)
Sketch conj55_term_sketch3 : @eq natural (len lf4) (##hole##)
Sketch conj59_sketch0 : @eq natural (plus lf5 (##hole##)) (Succ lf5)
Sketch conj59_sketch1 : @eq natural (plus lf5 (len (##hole##))) (Succ lf5)
Sketch conj59_sketch2 : @eq natural (plus lf5 (len (Cons n lf6))) (##hole##)
Sketch conj59_sketch3 : @eq natural (##hole##) (Succ lf5)
Sketch conj59_term_sketch0 : @eq natural (len (Cons n lf6)) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj59_term_sketch2 : @eq natural (Succ lf5) (##hole##)
Sketch conj59_term_sketch3 : @eq natural (plus lf5 (len (Cons n lf6))) (##hole##)
Sketch conj63_sketch0 : @eq natural (plus (len x) (##hole##)) (Succ (len x))
Sketch conj63_sketch1 : @eq natural (plus (len x) (len (##hole##))) (Succ (len x))
Sketch conj63_sketch2 : @eq natural (plus (##hole##) (len (Cons n lf6))) (Succ (##hole##))
Sketch conj63_sketch3 : @eq natural (##hole##) (Succ (len x))
Sketch conj63_sketch4 : @eq natural (plus (len x) (len (Cons n lf6))) (##hole##)
Sketch conj63_term_sketch0 : @eq natural (len (Cons n lf6)) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (len x) (##hole##)
Sketch conj63_term_sketch3 : @eq natural (plus (len x) (len (Cons n lf6))) (##hole##)
Sketch conj63_term_sketch4 : @eq natural (Succ (len x)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 221 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_19
Sketch conj33_sketch0 --> Problem  synth_27
Sketch conj28_sketch0 --> Problem  synth_3
Sketch conj53_sketch1 --> Problem  synth_30
Sketch conj59_term_sketch2 --> Problem  synth_28
Sketch conj63_sketch4 --> Problem  synth_23
Sketch conj23_sketch0 --> Problem  synth_9
Sketch conj59_term_sketch1 --> Problem  synth_14
Sketch conj59_sketch1 --> Problem  synth_35
Sketch conj53_term_sketch2 --> Problem  synth_30
Sketch conj53_term_sketch0 --> Problem  synth_7
Sketch conj17_term_sketch0 --> Problem  synth_2
Sketch conj28_term_sketch1 --> Problem  synth_18
Sketch conj21_term_sketch1 --> Problem  synth_8
Sketch conj63_term_sketch0 --> Problem  synth_13
Sketch conj31_sketch0 --> Problem  synth_10
Sketch conj31_term_sketch3 --> Problem  synth_23
Sketch conj55_sketch3 --> Problem  synth_34
Sketch conj31_term_sketch1 --> Problem  synth_14
Sketch conj32_sketch0 --> Problem  synth_24
Sketch conj23_sketch1 --> Problem  synth_1
Sketch conj55_sketch1 --> Problem  synth_30
Sketch conj28_term_sketch3 --> Problem  synth_20
Sketch conj59_sketch3 --> Problem  synth_28
Sketch conj27_term_sketch2 --> Problem  synth_15
Sketch conj63_term_sketch4 --> Problem  synth_30
Sketch conj32_sketch3 --> Problem  synth_21
Sketch conj59_sketch2 --> Problem  synth_15
Sketch conj32_term_sketch3 --> Problem  synth_18
Sketch conj28_sketch2 --> Problem  synth_16
Sketch conj23_term_sketch2 --> Problem  synth_5
Sketch conj21_sketch0 --> Problem  synth_6
Sketch conj33_term_sketch0 --> Problem  synth_28
Sketch conj19_term_sketch1 --> Problem  synth_5
Sketch conj51_term_sketch2 --> Problem  synth_5
Sketch conj27_sketch2 --> Problem  synth_1
Sketch conj28_term_sketch2 --> Problem  synth_19
Sketch conj31_sketch2 --> Problem  synth_22
Sketch conj27_sketch1 --> Problem  synth_12
Sketch conj53_sketch0 --> Problem  synth_32
Sketch conj32_term_sketch2 --> Problem  synth_17
Sketch conj51_sketch0 --> Problem  synth_28
Sketch conj31_sketch3 --> Problem  synth_1
Sketch conj23_term_sketch0 --> Problem  synth_7
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj32_sketch2 --> Problem  synth_10
Sketch conj63_term_sketch1 --> Problem  synth_14
Sketch conj32_sketch1 --> Problem  synth_1
Sketch conj51_term_sketch1 --> Problem  synth_28
Sketch conj51_term_sketch0 --> Problem  synth_4
Sketch conj55_term_sketch0 --> Problem  synth_7
Sketch conj27_term_sketch1 --> Problem  synth_14
Sketch conj23_sketch2 --> Problem  synth_10
Sketch conj19_sketch0 --> Problem  synth_1
Sketch conj17_sketch0 --> Problem  synth_1
Sketch conj49_sketch0 --> Problem  synth_2
Sketch conj63_sketch2 --> Problem  synth_37
Sketch conj37_sketch0 --> Problem  synth_29
Sketch conj55_term_sketch1 --> Problem  synth_11
Sketch conj37_term_sketch0 --> Problem  synth_7
Sketch conj59_sketch0 --> Problem  synth_31
Sketch conj49_term_sketch1 --> Problem  synth_2
Sketch conj23_term_sketch1 --> Problem  synth_11
Sketch conj63_term_sketch3 --> Problem  synth_23
Sketch conj63_sketch0 --> Problem  synth_34
Sketch conj55_term_sketch3 --> Problem  synth_5
Sketch conj63_sketch3 --> Problem  synth_30
Sketch conj59_term_sketch0 --> Problem  synth_13
Sketch conj53_term_sketch1 --> Problem  synth_8
Sketch conj31_term_sketch0 --> Problem  synth_13
Sketch conj28_term_sketch0 --> Problem  synth_17
Sketch conj59_term_sketch3 --> Problem  synth_15
Sketch conj51_sketch1 --> Problem  synth_4
Sketch conj55_sketch0 --> Problem  synth_33
Sketch conj63_sketch1 --> Problem  synth_36
Sketch conj53_sketch2 --> Problem  synth_8
Sketch conj27_sketch0 --> Problem  synth_3
Sketch conj32_term_sketch0 --> Problem  synth_7
Sketch conj21_term_sketch0 --> Problem  synth_7
Sketch conj19_sketch1 --> Problem  synth_3
Sketch conj28_sketch3 --> Problem  synth_1
Sketch conj28_sketch1 --> Problem  synth_12
Sketch conj32_sketch4 --> Problem  synth_25
Sketch conj21_sketch1 --> Problem  synth_1
Sketch conj32_term_sketch1 --> Problem  synth_26
Sketch conj37_term_sketch1 --> Problem  synth_30
Sketch conj31_sketch1 --> Problem  synth_21
Sketch conj31_term_sketch2 --> Problem  synth_7
Sketch conj55_term_sketch2 --> Problem  synth_30
Sketch conj27_term_sketch0 --> Problem  synth_13
Sketch conj51_sketch2 --> Problem  synth_31
Sketch conj63_term_sketch2 --> Problem  synth_7
Sketch conj55_sketch2 --> Problem  synth_11
Sketch conj49_sketch1 --> Problem  synth_28
Sketch conj49_term_sketch0 --> Problem  synth_28
Sketch conj37_sketch1 --> Problem  synth_27


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 570 seconds

Problem: synth_28
 Succ (plus (plus lf5 Zero) Zero)
 plus (plus lf5 Zero) (Succ Zero)
 plus (plus lf5 (Succ Zero)) Zero
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ lf5

Problem: synth_17
 Succ Zero

Problem: synth_29

Problem: synth_26
 Succ (len (qreva x Nil))
 Succ (len (lfappend x Nil))
 Succ (plus (len x) Zero)
 plus (len x) (Succ Zero)
 Succ (len (rev x))
 Succ (len x)

Problem: synth_9

Problem: synth_30
 Succ (len (qreva x Nil))
 Succ (len (lfappend x Nil))
 Succ (plus (len x) Zero)
 plus (len x) (Succ Zero)
 Succ (len (rev x))
 Succ (len x)

Problem: synth_11
 len (qreva x lf4)
 len (lfappend x lf4)
 len (qreva lf4 x)
 len (lfappend lf4 x)
 Succ (len (rev x))
 Succ (len x)

Problem: synth_1
 plus (plus (plus lf3 Zero) Zero) Zero
 plus (plus lf3 Zero) Zero
 plus lf3 Zero
 lf3

Problem: synth_15
 plus lf5 (Succ (len lf6))
 plus (len lf6) (Succ lf5)
 Succ (plus lf5 (len lf6))
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ lf5

Problem: synth_31
 Succ Zero

Problem: synth_14
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)
 lfappend (rev lf6) (Cons n Nil)
 Cons n (rev lf6)
 Cons n lf6
 Cons n Nil

Problem: synth_8
 plus lf2 (len (rev x))
 plus (len x) (Succ Zero)
 Succ (len (rev x))
 plus (len x) lf2
 plus lf2 (len x)
 Succ (len x)

Problem: synth_34
 Succ Zero

Problem: synth_12

Problem: synth_5
 len (qreva lf4 Nil)
 len (lfappend lf4 Nil)
 plus (len lf4) Zero
 len (rev lf4)
 len lf4
 Succ Zero

Problem: synth_37

Problem: synth_2
 plus lf5 (plus lf2 Zero)
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 plus lf2 lf5
 plus lf5 lf2
 Succ lf5

Problem: synth_22

Problem: synth_20
 Succ (plus (plus lf5 Zero) Zero)
 plus (plus lf5 Zero) (Succ Zero)
 plus (plus lf5 (Succ Zero)) Zero
 Succ (plus lf5 Zero)
 plus lf5 (Succ Zero)
 Succ lf5

Problem: synth_18
 Cons (plus (plus n Zero) Zero) Nil
 Cons (plus n Zero) Nil
 Cons n Nil

Problem: synth_21

Problem: synth_25
 Nil

Problem: synth_13
 Succ (plus (len lf6) Zero)
 plus (len lf6) (Succ (len lf6))
 plus (len lf6) (Succ Zero)
 Succ (len (rev lf6))
 Succ (len lf6)
 Succ Zero

Problem: synth_6

Problem: synth_7
 len (rev (rev x))
 len (qreva x Nil)
 len (lfappend x Nil)
 plus (len x) Zero
 len (rev x)
 len x

Problem: synth_4
 plus lf5 (len (rev lf4))
 plus (len lf4) lf5
 Succ (plus lf5 Zero)
 plus lf5 (len lf4)
 plus lf5 (Succ Zero)
 Succ lf5

Problem: synth_23
 Succ (plus (len x) Zero)
 plus (len lf6) (Succ (len x))
 plus (len x) (Succ (len lf6))
 plus (len x) (Succ Zero)
 Succ (len (rev x))
 Succ (len x)

Problem: synth_27
 plus (plus (plus lf1 Zero) Zero) Zero
 plus (plus lf1 Zero) Zero
 plus lf1 Zero
 lf1

Problem: synth_16
 Nil

Problem: synth_19
 Nil

Problem: synth_10
 Succ Zero

Problem: synth_33

Problem: synth_24

Problem: synth_3
 Succ Zero

Problem: synth_32

Problem: synth_36

Problem: synth_35

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 570 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x)).
Lemma candidate_2: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ lf5).
Lemma candidate_3: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_4: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_6: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_7: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (plus lf2 Zero)).
Lemma candidate_8: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (Succ (plus lf5 Zero)).
Lemma candidate_9: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (Succ Zero)).
Lemma candidate_10: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf2 lf5).
Lemma candidate_11: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 lf2).
Lemma candidate_12: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma candidate_13: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_14: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_15: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_16: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_17: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) lf3.
Lemma candidate_18: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len (rev lf4))).
Lemma candidate_19: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus (len lf4) lf5).
Lemma candidate_20: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (Succ (plus lf5 Zero)).
Lemma candidate_21: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len lf4)).
Lemma candidate_22: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (Succ Zero)).
Lemma candidate_23: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma candidate_24: forall (lf4 : lst), @eq natural (len lf4) (len (qreva lf4 Nil)).
Lemma candidate_25: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_26: forall (lf4 : lst), @eq natural (len lf4) (plus (len lf4) Zero).
Lemma candidate_27: forall (lf4 : lst), @eq natural (len lf4) (len (rev lf4)).
Lemma candidate_28: forall (lf4 : lst), @eq natural (len lf4) (len lf4).
Lemma candidate_29: forall (lf4 : lst), @eq natural (len lf4) (Succ Zero).
Lemma candidate_30: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_31: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_32: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_33: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_34: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_35: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_36: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_37: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_38: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_39: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_40: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len (rev x))).
Lemma candidate_41: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus (len x) (Succ Zero)).
Lemma candidate_42: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (Succ (len (rev x))).
Lemma candidate_43: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus (len x) lf2).
Lemma candidate_44: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len x)).
Lemma candidate_45: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma candidate_46: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_47: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_48: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_49: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_50: forall (lf3 : natural) (x : lst), @eq natural (plus (len x) (Succ Zero)) lf3.
Lemma candidate_51: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_52: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_53: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_54: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_55: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_56: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_57: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva x lf4)).
Lemma candidate_58: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend x lf4)).
Lemma candidate_59: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva lf4 x)).
Lemma candidate_60: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend lf4 x)).
Lemma candidate_61: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (Succ (len (rev x))).
Lemma candidate_62: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma candidate_63: forall (lf4 : lst), @eq natural (len lf4) (len (qreva lf4 Nil)).
Lemma candidate_64: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_65: forall (lf4 : lst), @eq natural (len lf4) (plus (len lf4) Zero).
Lemma candidate_66: forall (lf4 : lst), @eq natural (len lf4) (len (rev lf4)).
Lemma candidate_67: forall (lf4 : lst), @eq natural (len lf4) (len lf4).
Lemma candidate_68: forall (lf4 : lst), @eq natural (len lf4) (Succ Zero).
Lemma candidate_69: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) lf3.
Lemma candidate_70: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_71: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_72: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_73: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_74: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (plus (len lf6) Zero)).
Lemma candidate_75: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ (len lf6))).
Lemma candidate_76: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ Zero)).
Lemma candidate_77: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len (rev lf6))).
Lemma candidate_78: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len lf6)).
Lemma candidate_79: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ Zero).
Lemma candidate_80: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_81: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_82: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_83: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_84: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_85: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_86: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus lf5 (Succ (len lf6))).
Lemma candidate_87: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus (len lf6) (Succ lf5)).
Lemma candidate_88: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 (len lf6))).
Lemma candidate_89: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 Zero)).
Lemma candidate_90: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus lf5 (Succ Zero)).
Lemma candidate_91: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma candidate_92: forall (lf3 : natural) (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) lf3.
Lemma candidate_93: forall (lf3 : natural) (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n (Nil)))) lf3.
Lemma candidate_94: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_95: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_96: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_97: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_98: forall (n : natural), @eq natural (len (Cons n Nil)) (Succ Zero).
Lemma candidate_99: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_100: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_101: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_102: @eq lst Nil (Nil).
Lemma candidate_103: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_104: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_105: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_106: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ (plus lf5 Zero)).
Lemma candidate_107: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (plus lf5 (Succ Zero)).
Lemma candidate_108: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ lf5).
Lemma candidate_109: forall (lf3 : natural) (x : lst), @eq natural (plus (len x) (Succ Zero)) lf3.
Lemma candidate_110: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_111: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_112: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_113: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_114: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (plus (len lf6) Zero)).
Lemma candidate_115: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ (len lf6))).
Lemma candidate_116: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ Zero)).
Lemma candidate_117: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len (rev lf6))).
Lemma candidate_118: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len lf6)).
Lemma candidate_119: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ Zero).
Lemma candidate_120: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_122: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_123: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_124: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_125: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_126: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_127: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_128: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_129: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_130: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_131: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_132: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (plus (len x) Zero)).
Lemma candidate_133: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len lf6) (Succ (len x))).
Lemma candidate_134: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len x) (Succ (len lf6))).
Lemma candidate_135: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len x) (Succ Zero)).
Lemma candidate_136: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len (rev x))).
Lemma candidate_137: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).
Lemma candidate_138: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_139: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_140: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_141: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_142: forall (lf3 : natural) (x : lst), @eq natural (plus (len x) (Succ Zero)) lf3.
Lemma candidate_143: forall (lf3 : natural) (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n (Nil)))) lf3.
Lemma candidate_144: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_145: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_146: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_147: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_148: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_149: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_150: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len (qreva x Nil))).
Lemma candidate_151: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len (lfappend x Nil))).
Lemma candidate_152: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (plus (len x) Zero)).
Lemma candidate_153: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (plus (len x) (Succ Zero)).
Lemma candidate_154: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len (rev x))).
Lemma candidate_155: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x)).
Lemma candidate_156: forall (n : natural), @eq natural (len (Cons n Nil)) (Succ Zero).
Lemma candidate_157: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_158: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_159: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_160: @eq lst Nil (Nil).
Lemma candidate_161: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_162: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_163: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_164: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_165: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_166: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_167: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_168: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_169: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_170: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_171: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_172: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_173: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_174: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_175: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_176: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_177: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_178: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_179: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_180: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_181: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (qreva x Nil))).
Lemma candidate_182: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (lfappend x Nil))).
Lemma candidate_183: forall (x : lst), @eq natural (Succ (len x)) (Succ (plus (len x) Zero)).
Lemma candidate_184: forall (x : lst), @eq natural (Succ (len x)) (plus (len x) (Succ Zero)).
Lemma candidate_185: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_186: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_187: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (plus lf2 Zero)).
Lemma candidate_188: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (Succ (plus lf5 Zero)).
Lemma candidate_189: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (Succ Zero)).
Lemma candidate_190: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf2 lf5).
Lemma candidate_191: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 lf2).
Lemma candidate_192: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma candidate_193: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_194: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_195: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_196: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_197: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_198: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_199: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_200: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_201: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_202: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_203: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_204: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_205: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (plus lf2 Zero)).
Lemma candidate_206: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (Succ (plus lf5 Zero)).
Lemma candidate_207: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (Succ Zero)).
Lemma candidate_208: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf2 lf5).
Lemma candidate_209: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 lf2).
Lemma candidate_210: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (Succ lf5).
Lemma candidate_211: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_212: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_213: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_214: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_215: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_216: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_217: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len (rev lf4))).
Lemma candidate_218: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus (len lf4) lf5).
Lemma candidate_219: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (Succ (plus lf5 Zero)).
Lemma candidate_220: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len lf4)).
Lemma candidate_221: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (Succ Zero)).
Lemma candidate_222: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma candidate_223: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_224: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len (rev lf4))).
Lemma candidate_225: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus (len lf4) lf5).
Lemma candidate_226: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (Succ (plus lf5 Zero)).
Lemma candidate_227: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len lf4)).
Lemma candidate_228: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (Succ Zero)).
Lemma candidate_229: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (Succ lf5).
Lemma candidate_230: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_231: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_232: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_233: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_234: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_235: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_236: forall (lf4 : lst), @eq natural (len lf4) (len (qreva lf4 Nil)).
Lemma candidate_237: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_238: forall (lf4 : lst), @eq natural (len lf4) (plus (len lf4) Zero).
Lemma candidate_239: forall (lf4 : lst), @eq natural (len lf4) (len (rev lf4)).
Lemma candidate_240: forall (lf4 : lst), @eq natural (len lf4) (len lf4).
Lemma candidate_241: forall (lf4 : lst), @eq natural (len lf4) (Succ Zero).
Lemma candidate_242: forall (x : lst), @eq natural (Succ (len (qreva x Nil))) (Succ (len x)).
Lemma candidate_243: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len x)).
Lemma candidate_244: forall (x : lst), @eq natural (Succ (plus (len x) Zero)) (Succ (len x)).
Lemma candidate_245: forall (x : lst), @eq natural (plus (len x) (Succ Zero)) (Succ (len x)).
Lemma candidate_246: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_247: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_248: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len (rev x))).
Lemma candidate_249: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus (len x) (Succ Zero)).
Lemma candidate_250: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (Succ (len (rev x))).
Lemma candidate_251: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus (len x) lf2).
Lemma candidate_252: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len x)).
Lemma candidate_253: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma candidate_254: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_255: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_256: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_257: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_258: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_259: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_260: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len (rev x))).
Lemma candidate_261: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus (len x) (Succ Zero)).
Lemma candidate_262: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (Succ (len (rev x))).
Lemma candidate_263: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus (len x) lf2).
Lemma candidate_264: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len x)).
Lemma candidate_265: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (Succ (len x)).
Lemma candidate_266: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (qreva x Nil))).
Lemma candidate_267: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (lfappend x Nil))).
Lemma candidate_268: forall (x : lst), @eq natural (Succ (len x)) (Succ (plus (len x) Zero)).
Lemma candidate_269: forall (x : lst), @eq natural (Succ (len x)) (plus (len x) (Succ Zero)).
Lemma candidate_270: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_271: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_272: forall (x : lst), @eq natural (Succ (len (qreva x Nil))) (Succ (len x)).
Lemma candidate_273: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len x)).
Lemma candidate_274: forall (x : lst), @eq natural (Succ (plus (len x) Zero)) (Succ (len x)).
Lemma candidate_275: forall (x : lst), @eq natural (plus (len x) (Succ Zero)) (Succ (len x)).
Lemma candidate_276: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_277: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_278: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva x lf4)).
Lemma candidate_279: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend x lf4)).
Lemma candidate_280: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva lf4 x)).
Lemma candidate_281: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend lf4 x)).
Lemma candidate_282: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (Succ (len (rev x))).
Lemma candidate_283: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma candidate_284: forall (x : lst), @eq natural (plus (len x) (Succ Zero)) (Succ (len x)).
Lemma candidate_285: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_286: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_287: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_288: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_289: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_290: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_291: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva x lf4)).
Lemma candidate_292: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend x lf4)).
Lemma candidate_293: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva lf4 x)).
Lemma candidate_294: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend lf4 x)).
Lemma candidate_295: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (Succ (len (rev x))).
Lemma candidate_296: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (Succ (len x)).
Lemma candidate_297: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (qreva x Nil))).
Lemma candidate_298: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (lfappend x Nil))).
Lemma candidate_299: forall (x : lst), @eq natural (Succ (len x)) (Succ (plus (len x) Zero)).
Lemma candidate_300: forall (x : lst), @eq natural (Succ (len x)) (plus (len x) (Succ Zero)).
Lemma candidate_301: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_302: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_303: forall (lf4 : lst), @eq natural (len lf4) (len (qreva lf4 Nil)).
Lemma candidate_304: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_305: forall (lf4 : lst), @eq natural (len lf4) (plus (len lf4) Zero).
Lemma candidate_306: forall (lf4 : lst), @eq natural (len lf4) (len (rev lf4)).
Lemma candidate_307: forall (lf4 : lst), @eq natural (len lf4) (len lf4).
Lemma candidate_308: forall (lf4 : lst), @eq natural (len lf4) (Succ Zero).
Lemma candidate_309: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_310: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus lf5 (Succ (len lf6))).
Lemma candidate_311: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus (len lf6) (Succ lf5)).
Lemma candidate_312: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 (len lf6))).
Lemma candidate_313: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 Zero)).
Lemma candidate_314: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus lf5 (Succ Zero)).
Lemma candidate_315: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma candidate_316: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_317: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_318: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_319: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_320: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_321: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_322: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (plus (len lf6) Zero)).
Lemma candidate_323: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ (len lf6))).
Lemma candidate_324: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ Zero)).
Lemma candidate_325: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len (rev lf6))).
Lemma candidate_326: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len lf6)).
Lemma candidate_327: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ Zero).
Lemma candidate_328: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_329: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_330: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_331: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_332: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_333: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_334: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_335: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_336: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_337: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_338: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_339: forall (lf5 : natural), @eq natural (Succ lf5) (Succ lf5).
Lemma candidate_340: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus lf5 (Succ (len lf6))).
Lemma candidate_341: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus (len lf6) (Succ lf5)).
Lemma candidate_342: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 (len lf6))).
Lemma candidate_343: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 Zero)).
Lemma candidate_344: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus lf5 (Succ Zero)).
Lemma candidate_345: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ lf5).
Lemma candidate_346: forall (x : lst), @eq natural (plus (len x) (Succ Zero)) (Succ (len x)).
Lemma candidate_347: forall (x : lst), @eq natural (Succ (len (qreva x Nil))) (Succ (len x)).
Lemma candidate_348: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len x)).
Lemma candidate_349: forall (x : lst), @eq natural (Succ (plus (len x) Zero)) (Succ (len x)).
Lemma candidate_350: forall (x : lst), @eq natural (plus (len x) (Succ Zero)) (Succ (len x)).
Lemma candidate_351: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_352: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).
Lemma candidate_353: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (plus (len x) Zero)).
Lemma candidate_354: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len lf6) (Succ (len x))).
Lemma candidate_355: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len x) (Succ (len lf6))).
Lemma candidate_356: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len x) (Succ Zero)).
Lemma candidate_357: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len (rev x))).
Lemma candidate_358: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).
Lemma candidate_359: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (plus (len lf6) Zero)).
Lemma candidate_360: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ (len lf6))).
Lemma candidate_361: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ Zero)).
Lemma candidate_362: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len (rev lf6))).
Lemma candidate_363: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len lf6)).
Lemma candidate_364: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ Zero).
Lemma candidate_365: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_366: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_367: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_368: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_369: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_370: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_371: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_372: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_373: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_374: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_375: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_376: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_377: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (plus (len x) Zero)).
Lemma candidate_378: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len lf6) (Succ (len x))).
Lemma candidate_379: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len x) (Succ (len lf6))).
Lemma candidate_380: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len x) (Succ Zero)).
Lemma candidate_381: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len (rev x))).
Lemma candidate_382: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (Succ (len x)).
Lemma candidate_383: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (qreva x Nil))).
Lemma candidate_384: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (lfappend x Nil))).
Lemma candidate_385: forall (x : lst), @eq natural (Succ (len x)) (Succ (plus (len x) Zero)).
Lemma candidate_386: forall (x : lst), @eq natural (Succ (len x)) (plus (len x) (Succ Zero)).
Lemma candidate_387: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_388: forall (x : lst), @eq natural (Succ (len x)) (Succ (len x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 845 seconds
Duplicates removed: 278
Filtered by Quickchick: 30
Filtered by script: 19
Remaining: 61

Lemmas: 
Lemma candidate_163: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_5: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_38: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_27: forall (lf4 : lst), @eq natural (len lf4) (len (rev lf4)).
Lemma candidate_37: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_35: forall (x : lst), @eq natural (len x) (len (qreva x Nil)).
Lemma candidate_34: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_10: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf2 lf5).
Lemma candidate_36: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_162: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_26: forall (lf4 : lst), @eq natural (len lf4) (plus (len lf4) Zero).
Lemma candidate_24: forall (lf4 : lst), @eq natural (len lf4) (len (qreva lf4 Nil)).
Lemma candidate_4: forall (lf3 : natural), @eq natural (plus (plus lf3 Zero) Zero) lf3.
Lemma candidate_197: forall (lf5 : natural), @eq natural (plus lf5 (Succ Zero)) (Succ lf5).
Lemma candidate_196: forall (lf5 : natural), @eq natural (Succ (plus lf5 Zero)) (Succ lf5).
Lemma candidate_169: forall (lf5 : natural), @eq natural (Succ lf5) (plus lf5 (Succ Zero)).
Lemma candidate_168: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus lf5 Zero)).
Lemma candidate_100: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus n Zero) Nil).
Lemma candidate_25: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_246: forall (x : lst), @eq natural (Succ (len (rev x))) (Succ (len x)).
Lemma candidate_185: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (rev x))).
Lemma candidate_44: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len x)).
Lemma candidate_2: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ lf5).
Lemma candidate_245: forall (x : lst), @eq natural (plus (len x) (Succ Zero)) (Succ (len x)).
Lemma candidate_244: forall (x : lst), @eq natural (Succ (plus (len x) Zero)) (Succ (len x)).
Lemma candidate_242: forall (x : lst), @eq natural (Succ (len (qreva x Nil))) (Succ (len x)).
Lemma candidate_184: forall (x : lst), @eq natural (Succ (len x)) (plus (len x) (Succ Zero)).
Lemma candidate_183: forall (x : lst), @eq natural (Succ (len x)) (Succ (plus (len x) Zero)).
Lemma candidate_181: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (qreva x Nil))).
Lemma candidate_77: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (len (rev lf6))).
Lemma candidate_19: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus (len lf4) lf5).
Lemma candidate_7: forall (lf5 : natural) (lf2 : natural), @eq natural (plus lf5 lf2) (plus lf5 (plus lf2 Zero)).
Lemma candidate_161: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_40: forall (x : lst) (lf2 : natural), @eq natural (plus (len x) lf2) (plus lf2 (len (rev x))).
Lemma candidate_3: forall (lf3 : natural), @eq natural (plus (plus (plus lf3 Zero) Zero) Zero) lf3.
Lemma candidate_243: forall (x : lst), @eq natural (Succ (len (lfappend x Nil))) (Succ (len x)).
Lemma candidate_182: forall (x : lst), @eq natural (Succ (len x)) (Succ (len (lfappend x Nil))).
Lemma candidate_59: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (qreva lf4 x)).
Lemma candidate_195: forall (lf5 : natural), @eq natural (plus (plus lf5 (Succ Zero)) Zero) (Succ lf5).
Lemma candidate_194: forall (lf5 : natural), @eq natural (plus (plus lf5 Zero) (Succ Zero)) (Succ lf5).
Lemma candidate_193: forall (lf5 : natural), @eq natural (Succ (plus (plus lf5 Zero) Zero)) (Succ lf5).
Lemma candidate_167: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_166: forall (lf5 : natural), @eq natural (Succ lf5) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_165: forall (lf5 : natural), @eq natural (Succ lf5) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_99: forall (n : natural), @eq lst (Cons n Nil) (Cons (plus (plus n Zero) Zero) Nil).
Lemma candidate_76: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (plus (len lf6) (Succ Zero)).
Lemma candidate_74: forall (n : natural) (lf6 : lst), @eq natural (len (Cons n lf6)) (Succ (plus (len lf6) Zero)).
Lemma candidate_60: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend lf4 x)).
Lemma candidate_58: forall (lf4 : lst) (x : lst), @eq natural (plus (len x) (len lf4)) (len (lfappend x lf4)).
Lemma candidate_18: forall (lf4 : lst) (lf5 : natural), @eq natural (plus lf5 (len lf4)) (plus lf5 (len (rev lf4))).
Lemma candidate_106: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ (plus lf5 Zero)).
Lemma candidate_154: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len (rev x))).
Lemma candidate_88: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (Succ (plus lf5 (len lf6))).
Lemma candidate_87: forall (n : natural) (lf5 : natural) (lf6 : lst), @eq natural (plus lf5 (len (Cons n lf6))) (plus (len lf6) (Succ lf5)).
Lemma candidate_152: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (plus (len x) Zero)).
Lemma candidate_150: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len (qreva x Nil))).
Lemma candidate_151: forall (n : natural) (x : lst), @eq natural (plus (len x) (len (Cons n Nil))) (Succ (len (lfappend x Nil))).
Lemma candidate_105: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (plus (plus lf5 (Succ Zero)) Zero).
Lemma candidate_104: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (plus (plus lf5 Zero) (Succ Zero)).
Lemma candidate_103: forall (n : natural) (lf5 : natural), @eq natural (plus lf5 (len (Cons n Nil))) (Succ (plus (plus lf5 Zero) Zero)).
Lemma candidate_133: forall (n : natural) (x : lst) (lf6 : lst), @eq natural (plus (len x) (len (Cons n lf6))) (plus (len lf6) (Succ (len x))).
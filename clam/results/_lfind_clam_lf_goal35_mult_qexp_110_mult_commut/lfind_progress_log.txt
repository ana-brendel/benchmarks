File Information
- File name: goal35
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal35_mult_qexp_110_mult_commut
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal35_mult_qexp_110_mult_commut
- Namespace: adtind
- Proof name: mult_qexp
- Theorem: Theorem mult_qexp: forall x0 y0 z0 a0 : natural,
@eq natural (mult (qexp x0 y0 z0) a0) (qexp x0 y0 (mult z0 a0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x))

* Hypothesis:
x : natural
y : natural
z : natural
a : natural
IHy : forall z0 a0 : natural,
@eq natural (mult (qexp x y z0) a0) (qexp x y (mult z0 a0))

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : natural
a : natural

* Terms:
mult z a : natural
mult (qexp x y _UNBOUND_REL_2) _UNBOUND_REL_1 : natural
x : natural
qexp x y (mult _UNBOUND_REL_2 _UNBOUND_REL_1) : natural
y : natural
mult z (mult x a) : natural
forall z0 a0 : natural,
@eq natural (mult (qexp x y z0) a0) (qexp x y (mult z0 a0)) : Prop
@eq natural (mult (qexp x y _UNBOUND_REL_2) _UNBOUND_REL_1)
  (qexp x y (mult _UNBOUND_REL_2 _UNBOUND_REL_1)) : Prop
qexp x y (mult z (mult x a)) : natural
mult x a : natural
mult (mult z a) x : natural
mult _UNBOUND_REL_2 _UNBOUND_REL_1 : natural
@eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)) : Prop
forall a0 : natural,
@eq natural (mult (qexp x y _UNBOUND_REL_2) a0)
  (qexp x y (mult _UNBOUND_REL_2 a0)) : Prop
qexp x y (mult (mult z a) x) : natural
z : natural
natural : Set
a : natural
qexp x y _UNBOUND_REL_2 : natural

* Functions:
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
qexp  : forall (_ : natural) (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = mult (mult z a) x
lf1 : natural = qexp x y (mult z (mult x a))
lf4 : natural = mult z (mult x a)
lf5 : natural = mult z a
lf2 : natural = qexp x y (mult (mult z a) x)
lf6 : natural = mult x a

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj3: forall (x : natural) (lf1 : natural) (y : natural) (lf3 : natural), @eq natural lf1 (qexp x y lf3).
Lemma conj17: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) lf2.
Lemma conj19: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (qexp x y lf4) (qexp x y lf3).
Lemma conj25: forall (lf6 : natural) (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) lf2.
Lemma conj26: forall (lf2 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) lf2.
Lemma conj27: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y lf3).
Lemma conj28: forall (x : natural) (y : natural) (z : natural) (a : natural) (lf3 : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y lf3).
Lemma conj35: forall (lf5 : natural) (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y (mult lf5 x)).
Lemma conj39: forall (x : natural) (lf1 : natural) (y : natural) (z : natural) (a : natural), @eq natural lf1 (qexp x y (mult (mult z a) x)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf5 x)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y lf4) (qexp x y (mult (mult z a) x)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf5 x)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult lf5 x)).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult (mult z a) x)).
Lemma conj64: forall (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).


<---VALIDITY CHECKS--->
Time elapsed: 36 seconds
Valid:
Lemma conj64: forall (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).

Invalid:
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult (mult z a) x)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult lf5 x)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf5 x)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y lf4) (qexp x y (mult (mult z a) x)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf5 x)).
Lemma conj39: forall (x : natural) (lf1 : natural) (y : natural) (z : natural) (a : natural), @eq natural lf1 (qexp x y (mult (mult z a) x)).
Lemma conj35: forall (lf5 : natural) (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y (mult lf5 x)).
Lemma conj28: forall (x : natural) (y : natural) (z : natural) (a : natural) (lf3 : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y lf3).
Lemma conj27: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y lf3).
Lemma conj26: forall (lf2 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) lf2.
Lemma conj25: forall (lf6 : natural) (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) lf2.
Lemma conj19: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (qexp x y lf4) (qexp x y lf3).
Lemma conj17: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) lf2.
Lemma conj3: forall (x : natural) (lf1 : natural) (y : natural) (lf3 : natural), @eq natural lf1 (qexp x y lf3).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 56 seconds
Generalizations:
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult (mult z a) x)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult lf5 x)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf5 x)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y lf4) (qexp x y (mult (mult z a) x)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf5 x)).
Lemma conj39: forall (x : natural) (lf1 : natural) (y : natural) (z : natural) (a : natural), @eq natural lf1 (qexp x y (mult (mult z a) x)).
Lemma conj35: forall (lf5 : natural) (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y (mult lf5 x)).
Lemma conj28: forall (x : natural) (y : natural) (z : natural) (a : natural) (lf3 : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y lf3).
Lemma conj27: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y lf3).
Lemma conj26: forall (lf2 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) lf2.
Lemma conj25: forall (lf6 : natural) (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) lf2.
Lemma conj19: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (qexp x y lf4) (qexp x y lf3).
Lemma conj17: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) lf2.
Lemma conj3: forall (x : natural) (lf1 : natural) (y : natural) (lf3 : natural), @eq natural lf1 (qexp x y lf3).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 77 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj3: forall (x : natural) (lf1 : natural) (y : natural) (lf3 : natural), @eq natural lf1 (qexp x y lf3).
Lemma conj17: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) lf2.
Lemma conj19: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (qexp x y lf4) (qexp x y lf3).
Lemma conj25: forall (lf6 : natural) (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) lf2.
Lemma conj26: forall (lf2 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) lf2.
Lemma conj27: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y lf3).
Lemma conj28: forall (x : natural) (y : natural) (z : natural) (a : natural) (lf3 : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y lf3).
Lemma conj35: forall (lf5 : natural) (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qexp x y (mult lf5 x)).
Lemma conj39: forall (x : natural) (lf1 : natural) (y : natural) (z : natural) (a : natural), @eq natural lf1 (qexp x y (mult (mult z a) x)).
Lemma conj51: forall (lf5 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf5 x)).
Lemma conj55: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y lf4) (qexp x y (mult (mult z a) x)).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : natural) (y : natural) (z : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf5 x)).
Lemma conj60: forall (lf5 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult lf5 x)).
Lemma conj63: forall (lf6 : natural) (x : natural) (y : natural) (z : natural) (a : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult (mult z a) x)).


<---CREATE SKETCHES--->
Time elapsed: 78 seconds
Sketches:
Sketch conj3_sketch0 : @eq natural lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq natural (qexp x y lf3) (##hole##)
Sketch conj17_sketch0 : @eq natural (##hole##) lf2
Sketch conj17_term_sketch0 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj19_sketch0 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj19_sketch1 : @eq natural (##hole##) (qexp x y lf3)
Sketch conj19_term_sketch0 : @eq natural (qexp x y lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj25_sketch0 : @eq natural (qexp x y (##hole##)) lf2
Sketch conj25_sketch1 : @eq natural (##hole##) lf2
Sketch conj25_term_sketch0 : @eq natural (mult z lf6) (##hole##)
Sketch conj25_term_sketch1 : @eq natural (qexp x y (mult z lf6)) (##hole##)
Sketch conj26_sketch0 : @eq natural (##hole##) lf2
Sketch conj26_sketch1 : @eq natural (qexp x y (mult z (##hole##))) lf2
Sketch conj26_sketch2 : @eq natural (qexp x y (##hole##)) lf2
Sketch conj26_term_sketch0 : @eq natural (qexp x y (mult z (mult x a))) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (mult x a) (##hole##)
Sketch conj26_term_sketch2 : @eq natural (mult z (mult x a)) (##hole##)
Sketch conj27_sketch0 : @eq natural (qexp x y (##hole##)) (qexp x y lf3)
Sketch conj27_sketch1 : @eq natural (qexp x y (mult z lf6)) (##hole##)
Sketch conj27_sketch2 : @eq natural (##hole##) (qexp x y lf3)
Sketch conj27_term_sketch0 : @eq natural (mult z lf6) (##hole##)
Sketch conj27_term_sketch1 : @eq natural (qexp x y lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq natural (qexp x y (mult z lf6)) (##hole##)
Sketch conj28_sketch0 : @eq natural (##hole##) (qexp x y lf3)
Sketch conj28_sketch1 : @eq natural (qexp x y (mult z (##hole##))) (qexp x y lf3)
Sketch conj28_sketch2 : @eq natural (qexp x y (mult z (mult x a))) (##hole##)
Sketch conj28_sketch3 : @eq natural (qexp x y (##hole##)) (qexp x y lf3)
Sketch conj28_term_sketch0 : @eq natural (qexp x y (mult z (mult x a))) (##hole##)
Sketch conj28_term_sketch1 : @eq natural (mult x a) (##hole##)
Sketch conj28_term_sketch2 : @eq natural (qexp x y lf3) (##hole##)
Sketch conj28_term_sketch3 : @eq natural (mult z (mult x a)) (##hole##)
Sketch conj35_sketch0 : @eq natural lf1 (##hole##)
Sketch conj35_sketch1 : @eq natural lf1 (qexp x y (##hole##))
Sketch conj35_term_sketch0 : @eq natural (qexp x y (mult lf5 x)) (##hole##)
Sketch conj35_term_sketch1 : @eq natural (mult lf5 x) (##hole##)
Sketch conj39_sketch0 : @eq natural lf1 (qexp x y (mult (##hole##) x))
Sketch conj39_sketch1 : @eq natural lf1 (qexp x y (##hole##))
Sketch conj39_sketch2 : @eq natural lf1 (##hole##)
Sketch conj39_term_sketch0 : @eq natural (mult z a) (##hole##)
Sketch conj39_term_sketch1 : @eq natural (mult (mult z a) x) (##hole##)
Sketch conj39_term_sketch2 : @eq natural (qexp x y (mult (mult z a) x)) (##hole##)
Sketch conj51_sketch0 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj51_sketch1 : @eq natural (qexp x y lf4) (qexp x y (##hole##))
Sketch conj51_sketch2 : @eq natural (##hole##) (qexp x y (mult lf5 x))
Sketch conj51_term_sketch0 : @eq natural (qexp x y (mult lf5 x)) (##hole##)
Sketch conj51_term_sketch1 : @eq natural (mult lf5 x) (##hole##)
Sketch conj51_term_sketch2 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj55_sketch0 : @eq natural (qexp x y lf4) (qexp x y (mult (##hole##) x))
Sketch conj55_sketch1 : @eq natural (qexp x y lf4) (qexp x y (##hole##))
Sketch conj55_sketch2 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj55_sketch3 : @eq natural (##hole##) (qexp x y (mult (mult z a) x))
Sketch conj55_term_sketch0 : @eq natural (mult z a) (##hole##)
Sketch conj55_term_sketch1 : @eq natural (mult (mult z a) x) (##hole##)
Sketch conj55_term_sketch2 : @eq natural (qexp x y (mult (mult z a) x)) (##hole##)
Sketch conj55_term_sketch3 : @eq natural (qexp x y lf4) (##hole##)
Sketch conj59_sketch0 : @eq natural (qexp x y (##hole##)) (qexp x y (mult lf5 x))
Sketch conj59_sketch1 : @eq natural (qexp x y (mult z lf6)) (##hole##)
Sketch conj59_sketch2 : @eq natural (qexp x y (mult z lf6)) (qexp x y (##hole##))
Sketch conj59_sketch3 : @eq natural (##hole##) (qexp x y (mult lf5 x))
Sketch conj59_term_sketch0 : @eq natural (mult z lf6) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (qexp x y (mult lf5 x)) (##hole##)
Sketch conj59_term_sketch2 : @eq natural (mult lf5 x) (##hole##)
Sketch conj59_term_sketch3 : @eq natural (qexp x y (mult z lf6)) (##hole##)
Sketch conj60_sketch0 : @eq natural (##hole##) (qexp x y (mult lf5 x))
Sketch conj60_sketch1 : @eq natural (qexp x y (mult z (##hole##))) (qexp x y (mult lf5 x))
Sketch conj60_sketch2 : @eq natural (qexp x y (mult z (mult x a))) (##hole##)
Sketch conj60_sketch3 : @eq natural (qexp x y (mult z (mult x a))) (qexp x y (##hole##))
Sketch conj60_sketch4 : @eq natural (qexp x y (##hole##)) (qexp x y (mult lf5 x))
Sketch conj60_term_sketch0 : @eq natural (qexp x y (mult z (mult x a))) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (mult x a) (##hole##)
Sketch conj60_term_sketch2 : @eq natural (qexp x y (mult lf5 x)) (##hole##)
Sketch conj60_term_sketch3 : @eq natural (mult lf5 x) (##hole##)
Sketch conj60_term_sketch4 : @eq natural (mult z (mult x a)) (##hole##)
Sketch conj63_sketch0 : @eq natural (qexp x y (mult z lf6)) (qexp x y (mult (##hole##) x))
Sketch conj63_sketch1 : @eq natural (qexp x y (##hole##)) (qexp x y (mult (mult z a) x))
Sketch conj63_sketch2 : @eq natural (qexp x y (mult z lf6)) (qexp x y (##hole##))
Sketch conj63_sketch3 : @eq natural (qexp x y (mult z lf6)) (##hole##)
Sketch conj63_sketch4 : @eq natural (##hole##) (qexp x y (mult (mult z a) x))
Sketch conj63_term_sketch0 : @eq natural (mult z a) (##hole##)
Sketch conj63_term_sketch1 : @eq natural (mult z lf6) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (mult (mult z a) x) (##hole##)
Sketch conj63_term_sketch3 : @eq natural (qexp x y (mult (mult z a) x)) (##hole##)
Sketch conj63_term_sketch4 : @eq natural (qexp x y (mult z lf6)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 278 seconds
Problems per Sketch:
Sketch conj35_term_sketch1 --> Problem  synth_16
Sketch conj28_sketch0 --> Problem  synth_2
Sketch conj60_term_sketch1 --> Problem  synth_10
Sketch conj59_term_sketch2 --> Problem  synth_16
Sketch conj26_sketch2 --> Problem  synth_5
Sketch conj25_sketch1 --> Problem  synth_3
Sketch conj63_sketch4 --> Problem  synth_9
Sketch conj60_term_sketch4 --> Problem  synth_11
Sketch conj59_term_sketch1 --> Problem  synth_15
Sketch conj59_sketch1 --> Problem  synth_7
Sketch conj60_sketch0 --> Problem  synth_15
Sketch conj39_term_sketch2 --> Problem  synth_9
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch1 --> Problem  synth_10
Sketch conj63_term_sketch0 --> Problem  synth_18
Sketch conj55_sketch3 --> Problem  synth_9
Sketch conj39_sketch0 --> Problem  synth_17
Sketch conj26_term_sketch2 --> Problem  synth_11
Sketch conj60_term_sketch3 --> Problem  synth_16
Sketch conj60_term_sketch2 --> Problem  synth_15
Sketch conj60_sketch1 --> Problem  synth_23
Sketch conj55_sketch1 --> Problem  synth_19
Sketch conj28_term_sketch3 --> Problem  synth_11
Sketch conj60_sketch2 --> Problem  synth_9
Sketch conj59_sketch3 --> Problem  synth_15
Sketch conj27_term_sketch2 --> Problem  synth_7
Sketch conj63_term_sketch4 --> Problem  synth_7
Sketch conj35_sketch0 --> Problem  synth_1
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_22
Sketch conj28_sketch2 --> Problem  synth_9
Sketch conj26_term_sketch0 --> Problem  synth_9
Sketch conj39_sketch2 --> Problem  synth_1
Sketch conj19_term_sketch1 --> Problem  synth_4
Sketch conj51_term_sketch2 --> Problem  synth_4
Sketch conj27_sketch2 --> Problem  synth_2
Sketch conj28_term_sketch2 --> Problem  synth_2
Sketch conj60_term_sketch0 --> Problem  synth_9
Sketch conj27_sketch1 --> Problem  synth_7
Sketch conj60_sketch3 --> Problem  synth_24
Sketch conj51_sketch0 --> Problem  synth_4
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj63_term_sketch1 --> Problem  synth_6
Sketch conj39_term_sketch0 --> Problem  synth_18
Sketch conj51_term_sketch1 --> Problem  synth_16
Sketch conj51_term_sketch0 --> Problem  synth_15
Sketch conj26_term_sketch1 --> Problem  synth_10
Sketch conj55_term_sketch0 --> Problem  synth_18
Sketch conj27_term_sketch1 --> Problem  synth_2
Sketch conj19_sketch0 --> Problem  synth_4
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj63_sketch2 --> Problem  synth_22
Sketch conj25_term_sketch1 --> Problem  synth_7
Sketch conj55_term_sketch1 --> Problem  synth_11
Sketch conj26_sketch0 --> Problem  synth_3
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_21
Sketch conj63_term_sketch3 --> Problem  synth_9
Sketch conj63_sketch0 --> Problem  synth_25
Sketch conj55_term_sketch3 --> Problem  synth_4
Sketch conj63_sketch3 --> Problem  synth_7
Sketch conj39_term_sketch1 --> Problem  synth_11
Sketch conj26_sketch1 --> Problem  synth_8
Sketch conj59_term_sketch0 --> Problem  synth_6
Sketch conj28_term_sketch0 --> Problem  synth_9
Sketch conj59_term_sketch3 --> Problem  synth_7
Sketch conj51_sketch1 --> Problem  synth_19
Sketch conj55_sketch0 --> Problem  synth_20
Sketch conj63_sketch1 --> Problem  synth_24
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj28_sketch3 --> Problem  synth_12
Sketch conj25_sketch0 --> Problem  synth_5
Sketch conj35_term_sketch0 --> Problem  synth_15
Sketch conj28_sketch1 --> Problem  synth_13
Sketch conj35_sketch1 --> Problem  synth_14
Sketch conj60_sketch4 --> Problem  synth_21
Sketch conj55_term_sketch2 --> Problem  synth_9
Sketch conj27_term_sketch0 --> Problem  synth_6
Sketch conj51_sketch2 --> Problem  synth_15
Sketch conj25_term_sketch0 --> Problem  synth_6
Sketch conj63_term_sketch2 --> Problem  synth_11
Sketch conj55_sketch2 --> Problem  synth_4
Sketch conj39_sketch1 --> Problem  synth_14


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 462 seconds

Problem: synth_22
 qexp z x (mult lf6 z)
 qexp z lf6 (mult lf6 z)
 qexp z x lf6
 qexp z lf6 lf6
 mult lf6 z
 mult z lf6

Problem: synth_20

Problem: synth_18
 mult z (mult a (Succ Zero))
 mult a (mult z (Succ Zero))
 mult z (plus a Zero)
 mult a (plus z Zero)
 mult z a
 mult a z

Problem: synth_17

Problem: synth_21
 qexp lf5 x (mult x lf5)
 qexp lf5 lf5 (mult x lf5)
 qexp lf5 x x
 qexp x lf5 lf5
 mult lf5 x
 mult x lf5

Problem: synth_9
 qexp x y (mult (mult z a) x)
 qexp x x (mult (mult z a) x)
 qexp x y (mult (mult a z) x)
 qexp x x (mult (mult a z) x)

Problem: synth_25

Problem: synth_13

Problem: synth_6
 qexp lf6 z z
 qexp z z (mult lf6 z)
 qexp z lf6 (mult lf6 z)
 qexp z lf6 lf6
 mult lf6 z
 mult z lf6

Problem: synth_11
 mult x (mult z a)
 mult z (mult x a)
 mult x (mult a z)
 mult a (mult x z)
 mult z (mult a x)
 mult a (mult z x)

Problem: synth_7
 mult z (mult (exp lf6 y) lf6)
 mult z (mult (exp lf6 x) lf6)
 mult z (mult (exp lf6 lf6) lf6)
 qexp lf6 y (mult z lf6)
 qexp lf6 x (mult z lf6)
 qexp lf6 lf6 (mult z lf6)

Problem: synth_4
 qexp lf4 x lf4
 qexp x x lf4
 qexp lf4 x x
 mult (exp lf4 y) lf4
 mult (exp lf4 lf4) lf4
 mult (exp lf4 x) lf4

Problem: synth_1
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_23

Problem: synth_16
 qexp lf5 x (mult x lf5)
 qexp lf5 lf5 (mult x lf5)
 qexp lf5 x x
 qexp x lf5 lf5
 mult lf5 x
 mult x lf5

Problem: synth_19
 plus lf4 (mult y Zero)
 plus lf4 (mult lf4 Zero)
 plus lf4 (mult x Zero)
 mult lf4 (Succ Zero)
 plus lf4 Zero
 lf4

Problem: synth_15
 qexp x y (mult lf5 x)
 qexp x x (mult lf5 x)

Problem: synth_14

Problem: synth_10
 mult x (mult a (Succ Zero))
 mult a (mult x (Succ Zero))
 mult x (plus a Zero)
 mult a (plus x Zero)
 mult x a
 mult a x

Problem: synth_8

Problem: synth_24
 mult x (mult z a)
 mult z (mult x a)
 mult x (mult a z)
 mult a (mult x z)
 mult z (mult a x)
 mult a (mult z x)

Problem: synth_3
 mult lf2 (Succ Zero)
 plus lf2 Zero
 lf2

Problem: synth_12
 plus lf3 (mult lf3 Zero)
 plus lf3 (mult y Zero)
 plus lf3 (mult x Zero)
 mult lf3 (Succ Zero)
 plus lf3 Zero
 lf3

Problem: synth_5

Problem: synth_2
 qexp x x lf3
 qexp lf3 y y
 qexp lf3 x x
 mult (exp lf3 lf3) lf3
 mult (exp lf3 y) lf3
 mult (exp lf3 x) lf3

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 463 seconds
Lemmas:
Lemma candidate_1: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_5: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp x x lf3).
Lemma candidate_6: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 y y).
Lemma candidate_7: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 x x).
Lemma candidate_8: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 lf3) lf3).
Lemma candidate_9: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 y) lf3).
Lemma candidate_10: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 x) lf3).
Lemma candidate_11: forall (lf2 : natural), @eq natural (mult lf2 (Succ Zero)) lf2.
Lemma candidate_12: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_13: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_14: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_15: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_16: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_17: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_18: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_19: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_20: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_21: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_22: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_23: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_24: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_25: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_26: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x x lf3) (qexp x y lf3).
Lemma candidate_27: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp lf3 y y) (qexp x y lf3).
Lemma candidate_28: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp lf3 x x) (qexp x y lf3).
Lemma candidate_29: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 lf3) lf3) (qexp x y lf3).
Lemma candidate_30: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 y) lf3) (qexp x y lf3).
Lemma candidate_31: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 x) lf3) (qexp x y lf3).
Lemma candidate_32: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp x x lf3).
Lemma candidate_33: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 y y).
Lemma candidate_34: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 x x).
Lemma candidate_35: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 lf3) lf3).
Lemma candidate_36: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 y) lf3).
Lemma candidate_37: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 x) lf3).
Lemma candidate_38: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_39: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_40: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_41: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_42: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_43: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_44: forall (lf2 : natural), @eq natural (mult lf2 (Succ Zero)) lf2.
Lemma candidate_45: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_46: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_47: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp lf6 z z).
Lemma candidate_48: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z z (mult lf6 z)).
Lemma candidate_49: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 (mult lf6 z)).
Lemma candidate_50: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 lf6).
Lemma candidate_51: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult lf6 z).
Lemma candidate_52: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult z lf6).
Lemma candidate_53: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_54: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_55: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_56: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_57: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_58: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).
Lemma candidate_59: forall (lf2 : natural), @eq natural (mult lf2 (Succ Zero)) lf2.
Lemma candidate_60: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_61: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_62: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_63: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult z a) x)).
Lemma candidate_64: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult a z) x)).
Lemma candidate_65: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult a z) x)).
Lemma candidate_66: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (mult a (Succ Zero))).
Lemma candidate_67: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (mult x (Succ Zero))).
Lemma candidate_68: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (plus a Zero)).
Lemma candidate_69: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (plus x Zero)).
Lemma candidate_70: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x a).
Lemma candidate_71: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a x).
Lemma candidate_72: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult z a)).
Lemma candidate_73: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult x a)).
Lemma candidate_74: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult a z)).
Lemma candidate_75: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult x z)).
Lemma candidate_76: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult a x)).
Lemma candidate_77: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult z x)).
Lemma candidate_78: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult lf3 Zero))) (qexp x y lf3).
Lemma candidate_79: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult y Zero))) (qexp x y lf3).
Lemma candidate_80: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult x Zero))) (qexp x y lf3).
Lemma candidate_81: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult lf3 (Succ Zero))) (qexp x y lf3).
Lemma candidate_82: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 Zero)) (qexp x y lf3).
Lemma candidate_83: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (lf3)) (qexp x y lf3).
Lemma candidate_84: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_85: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_86: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_87: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_88: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_89: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).
Lemma candidate_90: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x x lf3) (qexp x y lf3).
Lemma candidate_91: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp lf3 y y) (qexp x y lf3).
Lemma candidate_92: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp lf3 x x) (qexp x y lf3).
Lemma candidate_93: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 lf3) lf3) (qexp x y lf3).
Lemma candidate_94: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 y) lf3) (qexp x y lf3).
Lemma candidate_95: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 x) lf3) (qexp x y lf3).
Lemma candidate_96: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp lf6 z z).
Lemma candidate_97: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z z (mult lf6 z)).
Lemma candidate_98: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 (mult lf6 z)).
Lemma candidate_99: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 lf6).
Lemma candidate_100: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult lf6 z).
Lemma candidate_101: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult z lf6).
Lemma candidate_102: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp x x lf3).
Lemma candidate_103: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 y y).
Lemma candidate_104: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 x x).
Lemma candidate_105: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 lf3) lf3).
Lemma candidate_106: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 y) lf3).
Lemma candidate_107: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 x) lf3).
Lemma candidate_108: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_109: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_110: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_111: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_112: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_113: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).
Lemma candidate_114: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x x lf3) (qexp x y lf3).
Lemma candidate_115: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp lf3 y y) (qexp x y lf3).
Lemma candidate_116: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp lf3 x x) (qexp x y lf3).
Lemma candidate_117: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 lf3) lf3) (qexp x y lf3).
Lemma candidate_118: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 y) lf3) (qexp x y lf3).
Lemma candidate_119: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (mult (exp lf3 x) lf3) (qexp x y lf3).
Lemma candidate_120: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_121: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult z a) x)).
Lemma candidate_122: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult a z) x)).
Lemma candidate_123: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult a z) x)).
Lemma candidate_124: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult lf3 Zero))) (qexp x y lf3).
Lemma candidate_125: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult y Zero))) (qexp x y lf3).
Lemma candidate_126: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult x Zero))) (qexp x y lf3).
Lemma candidate_127: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult lf3 (Succ Zero))) (qexp x y lf3).
Lemma candidate_128: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 Zero)) (qexp x y lf3).
Lemma candidate_129: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (lf3)) (qexp x y lf3).
Lemma candidate_130: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_131: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult z a) x)).
Lemma candidate_132: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult a z) x)).
Lemma candidate_133: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult a z) x)).
Lemma candidate_134: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (mult a (Succ Zero))).
Lemma candidate_135: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (mult x (Succ Zero))).
Lemma candidate_136: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (plus a Zero)).
Lemma candidate_137: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (plus x Zero)).
Lemma candidate_138: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x a).
Lemma candidate_139: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a x).
Lemma candidate_140: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp x x lf3).
Lemma candidate_141: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 y y).
Lemma candidate_142: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (qexp lf3 x x).
Lemma candidate_143: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 lf3) lf3).
Lemma candidate_144: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 y) lf3).
Lemma candidate_145: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y lf3) (mult (exp lf3 x) lf3).
Lemma candidate_146: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult z a)).
Lemma candidate_147: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult x a)).
Lemma candidate_148: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult a z)).
Lemma candidate_149: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult x z)).
Lemma candidate_150: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult a x)).
Lemma candidate_151: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult z x)).
Lemma candidate_152: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_153: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_154: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_155: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_156: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x x (mult lf5 x)).
Lemma candidate_157: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x (mult x lf5)).
Lemma candidate_158: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 lf5 (mult x lf5)).
Lemma candidate_159: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x x).
Lemma candidate_160: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp x lf5 lf5).
Lemma candidate_161: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 x).
Lemma candidate_162: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_163: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_164: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_165: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_166: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (mult a (Succ Zero))).
Lemma candidate_167: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (mult z (Succ Zero))).
Lemma candidate_168: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (plus a Zero)).
Lemma candidate_169: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (plus z Zero)).
Lemma candidate_170: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z a).
Lemma candidate_171: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a z).
Lemma candidate_172: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult z a)).
Lemma candidate_173: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult x a)).
Lemma candidate_174: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult a z)).
Lemma candidate_175: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult x z)).
Lemma candidate_176: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult a x)).
Lemma candidate_177: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult z x)).
Lemma candidate_178: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_179: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x x (mult (mult z a) x)).
Lemma candidate_180: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult a z) x)).
Lemma candidate_181: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x x (mult (mult a z) x)).
Lemma candidate_182: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_183: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_184: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_185: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_186: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_187: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_188: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult y Zero))).
Lemma candidate_189: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult lf4 Zero))).
Lemma candidate_190: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult x Zero))).
Lemma candidate_191: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf4 (Succ Zero))).
Lemma candidate_192: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 Zero)).
Lemma candidate_193: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (lf4)).
Lemma candidate_194: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_195: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x x (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_196: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_197: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x x (mult lf5 x)).
Lemma candidate_198: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x (mult x lf5)).
Lemma candidate_199: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 lf5 (mult x lf5)).
Lemma candidate_200: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x x).
Lemma candidate_201: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp x lf5 lf5).
Lemma candidate_202: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 x).
Lemma candidate_203: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_204: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_205: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_206: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_207: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_208: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_209: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_210: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult y Zero))).
Lemma candidate_211: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult lf4 Zero))).
Lemma candidate_212: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult x Zero))).
Lemma candidate_213: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf4 (Succ Zero))).
Lemma candidate_214: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 Zero)).
Lemma candidate_215: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (lf4)).
Lemma candidate_216: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_217: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_218: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_219: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_220: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_221: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_222: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_223: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x x (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_224: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult a z) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_225: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x x (mult (mult a z) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_226: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (mult a (Succ Zero))).
Lemma candidate_227: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (mult z (Succ Zero))).
Lemma candidate_228: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (plus a Zero)).
Lemma candidate_229: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (plus z Zero)).
Lemma candidate_230: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z a).
Lemma candidate_231: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a z).
Lemma candidate_232: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult z a)).
Lemma candidate_233: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult x a)).
Lemma candidate_234: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult a z)).
Lemma candidate_235: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult x z)).
Lemma candidate_236: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult a x)).
Lemma candidate_237: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult z x)).
Lemma candidate_238: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_239: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x x (mult (mult z a) x)).
Lemma candidate_240: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult a z) x)).
Lemma candidate_241: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x x (mult (mult a z) x)).
Lemma candidate_242: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x lf4).
Lemma candidate_243: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x x lf4).
Lemma candidate_244: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp lf4 x x).
Lemma candidate_245: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 y) lf4).
Lemma candidate_246: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 lf4) lf4).
Lemma candidate_247: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (mult (exp lf4 x) lf4).
Lemma candidate_248: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp lf5 x (mult x lf5))) (qexp x y (mult lf5 x)).
Lemma candidate_249: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp lf5 lf5 (mult x lf5))) (qexp x y (mult lf5 x)).
Lemma candidate_250: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp lf5 x x)) (qexp x y (mult lf5 x)).
Lemma candidate_251: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp x lf5 lf5)) (qexp x y (mult lf5 x)).
Lemma candidate_252: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_253: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult x lf5)) (qexp x y (mult lf5 x)).
Lemma candidate_254: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_255: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_256: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_257: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_258: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_259: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).
Lemma candidate_260: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z x (mult lf6 z))).
Lemma candidate_261: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z lf6 (mult lf6 z))).
Lemma candidate_262: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z x lf6)).
Lemma candidate_263: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z lf6 lf6)).
Lemma candidate_264: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf6 z)).
Lemma candidate_265: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult z lf6)).
Lemma candidate_266: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_267: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x x (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_268: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp lf6 z z).
Lemma candidate_269: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z z (mult lf6 z)).
Lemma candidate_270: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 (mult lf6 z)).
Lemma candidate_271: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 lf6).
Lemma candidate_272: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult lf6 z).
Lemma candidate_273: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult z lf6).
Lemma candidate_274: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_275: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x x (mult lf5 x)).
Lemma candidate_276: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x (mult x lf5)).
Lemma candidate_277: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 lf5 (mult x lf5)).
Lemma candidate_278: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x x).
Lemma candidate_279: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp x lf5 lf5).
Lemma candidate_280: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 x).
Lemma candidate_281: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_282: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_283: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_284: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_285: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_286: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_287: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).
Lemma candidate_288: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_289: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x x (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_290: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_291: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult z a) x)).
Lemma candidate_292: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult a z) x)).
Lemma candidate_293: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult a z) x)).
Lemma candidate_294: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult x (mult z a))).
Lemma candidate_295: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult z (mult x a))).
Lemma candidate_296: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult x (mult a z))).
Lemma candidate_297: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult a (mult x z))).
Lemma candidate_298: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult z (mult a x))).
Lemma candidate_299: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult a (mult z x))).
Lemma candidate_300: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp lf5 x (mult x lf5))) (qexp x y (mult lf5 x)).
Lemma candidate_301: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp lf5 lf5 (mult x lf5))) (qexp x y (mult lf5 x)).
Lemma candidate_302: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp lf5 x x)) (qexp x y (mult lf5 x)).
Lemma candidate_303: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (qexp x lf5 lf5)) (qexp x y (mult lf5 x)).
Lemma candidate_304: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_305: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult x lf5)) (qexp x y (mult lf5 x)).
Lemma candidate_306: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_307: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult z a) x)).
Lemma candidate_308: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult a z) x)).
Lemma candidate_309: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x x (mult (mult a z) x)).
Lemma candidate_310: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (mult a (Succ Zero))).
Lemma candidate_311: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (mult x (Succ Zero))).
Lemma candidate_312: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (plus a Zero)).
Lemma candidate_313: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (plus x Zero)).
Lemma candidate_314: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x a).
Lemma candidate_315: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a x).
Lemma candidate_316: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x y (mult lf5 x)).
Lemma candidate_317: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult lf5 x)) (qexp x x (mult lf5 x)).
Lemma candidate_318: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x (mult x lf5)).
Lemma candidate_319: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 lf5 (mult x lf5)).
Lemma candidate_320: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp lf5 x x).
Lemma candidate_321: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (qexp x lf5 lf5).
Lemma candidate_322: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 x).
Lemma candidate_323: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_324: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult z a)).
Lemma candidate_325: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult x a)).
Lemma candidate_326: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult a z)).
Lemma candidate_327: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult x z)).
Lemma candidate_328: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult a x)).
Lemma candidate_329: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult z x)).
Lemma candidate_330: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult x (mult z a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_331: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_332: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult x (mult a z))) (qexp x y (mult (mult z a) x)).
Lemma candidate_333: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult a (mult x z))) (qexp x y (mult (mult z a) x)).
Lemma candidate_334: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult a x))) (qexp x y (mult (mult z a) x)).
Lemma candidate_335: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult a (mult z x))) (qexp x y (mult (mult z a) x)).
Lemma candidate_336: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z x (mult lf6 z))).
Lemma candidate_337: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z lf6 (mult lf6 z))).
Lemma candidate_338: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z x lf6)).
Lemma candidate_339: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (qexp z lf6 lf6)).
Lemma candidate_340: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf6 z)).
Lemma candidate_341: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult z lf6)).
Lemma candidate_342: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_343: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_344: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_345: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_346: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_347: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).
Lemma candidate_348: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_349: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x x (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_350: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult a z) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_351: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x x (mult (mult a z) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_352: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (mult a (Succ Zero))).
Lemma candidate_353: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (mult z (Succ Zero))).
Lemma candidate_354: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (plus a Zero)).
Lemma candidate_355: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (plus z Zero)).
Lemma candidate_356: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z a).
Lemma candidate_357: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a z).
Lemma candidate_358: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp lf6 z z).
Lemma candidate_359: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z z (mult lf6 z)).
Lemma candidate_360: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 (mult lf6 z)).
Lemma candidate_361: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (qexp z lf6 lf6).
Lemma candidate_362: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult lf6 z).
Lemma candidate_363: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult z lf6).
Lemma candidate_364: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult z a)).
Lemma candidate_365: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult x a)).
Lemma candidate_366: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult a z)).
Lemma candidate_367: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult x z)).
Lemma candidate_368: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult a x)).
Lemma candidate_369: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult z x)).
Lemma candidate_370: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_371: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x x (mult (mult z a) x)).
Lemma candidate_372: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult a z) x)).
Lemma candidate_373: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x x (mult (mult a z) x)).
Lemma candidate_374: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 y) lf6)).
Lemma candidate_375: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 x) lf6)).
Lemma candidate_376: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (mult z (mult (exp lf6 lf6) lf6)).
Lemma candidate_377: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 y (mult z lf6)).
Lemma candidate_378: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 x (mult z lf6)).
Lemma candidate_379: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp lf6 lf6 (mult z lf6)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 641 seconds
Duplicates removed: 266
Filtered by Quickchick: 48
Filtered by script: 13
Remaining: 52

Lemmas: 
Lemma candidate_12: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_171: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a z).
Lemma candidate_71: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a x).
Lemma candidate_162: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_51: forall (z : natural) (lf6 : natural), @eq natural (mult z lf6) (mult lf6 z).
Lemma candidate_11: forall (lf2 : natural), @eq natural (mult lf2 (Succ Zero)) lf2.
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_169: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (plus z Zero)).
Lemma candidate_168: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (plus a Zero)).
Lemma candidate_69: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (plus x Zero)).
Lemma candidate_68: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (plus a Zero)).
Lemma candidate_177: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult z x)).
Lemma candidate_176: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult a x)).
Lemma candidate_175: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult a (mult x z)).
Lemma candidate_174: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult a z)).
Lemma candidate_173: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult z (mult x a)).
Lemma candidate_172: forall (a : natural) (z : natural) (x : natural), @eq natural (mult (mult z a) x) (mult x (mult z a)).
Lemma candidate_77: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult z x)).
Lemma candidate_76: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult z (mult a x)).
Lemma candidate_75: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult a (mult x z)).
Lemma candidate_74: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult a z)).
Lemma candidate_72: forall (a : natural) (z : natural) (x : natural), @eq natural (mult z (mult x a)) (mult x (mult z a)).
Lemma candidate_167: forall (a : natural) (z : natural), @eq natural (mult z a) (mult a (mult z (Succ Zero))).
Lemma candidate_166: forall (a : natural) (z : natural), @eq natural (mult z a) (mult z (mult a (Succ Zero))).
Lemma candidate_67: forall (a : natural) (x : natural), @eq natural (mult x a) (mult a (mult x (Succ Zero))).
Lemma candidate_66: forall (a : natural) (x : natural), @eq natural (mult x a) (mult x (mult a (Succ Zero))).
Lemma candidate_192: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 Zero)).
Lemma candidate_82: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 Zero)) (qexp x y lf3).
Lemma candidate_264: forall (z : natural) (y : natural) (x : natural) (lf6 : natural), @eq natural (qexp x y (mult z lf6)) (qexp x y (mult lf6 z)).
Lemma candidate_253: forall (y : natural) (x : natural) (lf5 : natural), @eq natural (qexp x y (mult x lf5)) (qexp x y (mult lf5 x)).
Lemma candidate_191: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (mult lf4 (Succ Zero))).
Lemma candidate_81: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult lf3 (Succ Zero))) (qexp x y lf3).
Lemma candidate_190: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult x Zero))).
Lemma candidate_188: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult y Zero))).
Lemma candidate_80: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult x Zero))) (qexp x y lf3).
Lemma candidate_79: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult y Zero))) (qexp x y lf3).
Lemma candidate_189: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qexp x y lf4) (qexp x y (plus lf4 (mult lf4 Zero))).
Lemma candidate_78: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (qexp x y (plus lf3 (mult lf3 Zero))) (qexp x y lf3).
Lemma candidate_335: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult a (mult z x))) (qexp x y (mult (mult z a) x)).
Lemma candidate_334: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult a x))) (qexp x y (mult (mult z a) x)).
Lemma candidate_333: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult a (mult x z))) (qexp x y (mult (mult z a) x)).
Lemma candidate_332: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult x (mult a z))) (qexp x y (mult (mult z a) x)).
Lemma candidate_330: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult x (mult z a))) (qexp x y (mult (mult z a) x)).
Lemma candidate_299: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult a (mult z x))).
Lemma candidate_298: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult z (mult a x))).
Lemma candidate_297: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult a (mult x z))).
Lemma candidate_296: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult x (mult a z))).
Lemma candidate_294: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult x (mult z a))).
Lemma candidate_224: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult a z) x)) (qexp x y (mult (mult z a) x)).
Lemma candidate_180: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult (mult z a) x)) (qexp x y (mult (mult a z) x)).
Lemma candidate_64: forall (a : natural) (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult a z) x)).
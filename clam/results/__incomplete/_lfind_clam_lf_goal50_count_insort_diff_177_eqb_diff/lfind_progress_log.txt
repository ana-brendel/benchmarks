File Information
- File name: goal50
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal50_count_insort_diff_177_eqb_diff
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal50_count_insort_diff_177_eqb_diff
- Namespace: adtind
- Proof name: count_insort_diff
- Theorem: Theorem count_insort_diff: forall (x0 y0 : natural) (l : lst) (_ : not (@eq natural x0 y0)),
@eq natural (count (insort l y0) x0) (count l x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq natural (if lfeqb x y then Succ Zero else Zero) Zero

* Hypothesis:
x : natural
H : not (@eq natural x y)
y : natural

* Types:
Set
natural
Prop
forall _ : bool, Set
bool

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
if lfeqb x y then Succ Zero else Zero : natural
lfeqb x y : bool
@eq natural x y : Prop
not (@eq natural x y) : Prop
bool : Set
x : natural
fun _ : bool => natural : forall _ : bool, Set
y : natural
Zero : natural
@eq natural (if lfeqb x y then Succ Zero else Zero) Zero : Prop
Succ Zero : natural
natural : Set

* Functions:
Succ  : forall _ : natural, natural
lfeqb  : forall (_ : natural) (_ : natural), bool
not  : forall _ : Prop, Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : bool = lfeqb x y
lf1 : natural = if lfeqb x y then Succ Zero else Zero
lf4 : natural = Succ Zero
lf5 : natural = Zero
lf2 : forall _ : bool, Set = fun _ : bool => natural

Generalizations:
Lemma conj1: forall (lf5 : natural) (lf1 : natural), @eq natural lf1 lf5.
Lemma conj3: forall (lf1 : natural), @eq natural lf1 Zero.
Lemma conj9: forall (lf5 : natural), @eq natural (if lf3 then lf4 else lf5) lf5.
Lemma conj11: forall , @eq natural (if lf3 then lf4 else Zero) Zero.
Lemma conj13: forall (lf5 : natural), @eq natural (if lf3 then Succ lf5 else lf5) lf5.
Lemma conj15: forall , @eq natural (if lf3 then Succ Zero else Zero) Zero.
Lemma conj25: forall (lf5 : natural), @eq natural (if lfeqb x y then lf4 else lf5) lf5.
Lemma conj27: forall , @eq natural (if lfeqb x y then lf4 else Zero) Zero.
Lemma conj29: forall (lf5 : natural), @eq natural (if lfeqb x y then Succ lf5 else lf5) lf5.
Lemma conj31: forall , @eq natural (if lfeqb x y then Succ Zero else Zero) Zero.
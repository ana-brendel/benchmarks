File Information
- File name: goal28
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal28_qrevflat_append_69_append_nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal28_qrevflat_append_69_append_nil
- Namespace: adtind
- Proof name: qrevflat_lfappend
- Theorem: Theorem qrevflat_lfappend: forall (x : tree) (y : lst), @eq lst (lfappend (revflat x) y) (qrevaflat x y).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil)))

* Hypothesis:
IHx2 : forall y : lst, @eq lst (lfappend (revflat x2) y) (qrevaflat x2 y)
x1 : tree
x2 : tree
n : natural
IHx1 : forall y : lst, @eq lst (lfappend (revflat x1) y) (qrevaflat x1 y)

* Types:
Set
natural
Prop
tree
lst

* Polymorphic Types:


* Variables:
x1 : tree
x2 : tree
n : natural

* Terms:
Cons n (revflat x2) : lst
lfappend (revflat x1) (Cons n (revflat x2)) : lst
lfappend (revflat x1) _UNBOUND_REL_1 : lst
forall y : lst, @eq lst (lfappend (revflat x2) y) (qrevaflat x2 y) : Prop
Cons n (qrevaflat x2 Nil) : lst
revflat x2 : lst
qrevaflat x2 _UNBOUND_REL_1 : lst
@eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))) : Prop
qrevaflat x1 _UNBOUND_REL_1 : lst
revflat x1 : lst
@eq lst (lfappend (revflat x2) _UNBOUND_REL_1) (qrevaflat x2 _UNBOUND_REL_1) : Prop
forall y : lst, @eq lst (lfappend (revflat x1) y) (qrevaflat x1 y) : Prop
@eq lst (lfappend (revflat x1) _UNBOUND_REL_1) (qrevaflat x1 _UNBOUND_REL_1) : Prop
qrevaflat x1 (Cons n (qrevaflat x2 Nil)) : lst
x1 : tree
lst : Set
tree : Set
lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil : lst
natural : Set
x2 : tree
lfappend (revflat x2) _UNBOUND_REL_1 : lst
n : natural
Nil : lst
qrevaflat x2 Nil : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
revflat  : forall _ : tree, lst
qrevaflat  : forall (_ : tree) (_ : lst), lst

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = qrevaflat x1 (Cons n (qrevaflat x2 Nil))
lf7 : lst = revflat x2
lf1 : lst = lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil
lf4 : lst = Cons n (qrevaflat x2 Nil)
lf5 : lst = Cons n (revflat x2)
lf9 : lst = Nil
lf2 : lst = lfappend (revflat x1) (Cons n (revflat x2))
lf8 : lst = revflat x1
lf6 : lst = qrevaflat x2 Nil

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj65: forall (lf9 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf2 lf9) lf3.
Lemma conj69: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf8 lf5) lf9) lf3.
Lemma conj71: forall (lf9 : lst) (lf5 : lst) (x1 : tree) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9) lf3.
Lemma conj73: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf2 Nil) lf3.
Lemma conj77: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf8 lf5) Nil) lf3.
Lemma conj79: forall (lf5 : lst) (x1 : tree) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil) lf3.
Lemma conj85: forall (lf8 : lst) (lf9 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9) lf3.
Lemma conj87: forall (lf9 : lst) (x1 : tree) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9) lf3.
Lemma conj93: forall (lf8 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil) lf3.
Lemma conj95: forall (x1 : tree) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil) lf3.
Lemma conj213: forall (lf8 : lst) (lf9 : lst) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9) lf3.
Lemma conj215: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9) lf3.
Lemma conj221: forall (lf8 : lst) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil) lf3.
Lemma conj223: forall (x1 : tree) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil) lf3.
Lemma conj257: forall (lf4 : lst) (x1 : tree) (lf1 : lst), @eq lst lf1 (qrevaflat x1 lf4).
Lemma conj289: forall (lf6 : lst) (x1 : tree) (lf1 : lst) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n lf6)).
Lemma conj290: forall (lf9 : lst) (x1 : tree) (lf1 : lst) (x2 : tree) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj298: forall (x1 : tree) (lf1 : lst) (x2 : tree) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj321: forall (lf9 : lst) (lf2 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend lf2 lf9) (qrevaflat x1 lf4).
Lemma conj325: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 lf4).
Lemma conj327: forall (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9) (qrevaflat x1 lf4).
Lemma conj329: forall (lf2 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend lf2 Nil) (qrevaflat x1 lf4).
Lemma conj333: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend lf8 lf5) Nil) (qrevaflat x1 lf4).
Lemma conj335: forall (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil) (qrevaflat x1 lf4).
Lemma conj341: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9) (qrevaflat x1 lf4).
Lemma conj343: forall (lf9 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 lf4).
Lemma conj349: forall (lf8 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil) (qrevaflat x1 lf4).
Lemma conj351: forall (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 lf4).
Lemma conj353: forall (lf6 : lst) (lf9 : lst) (lf2 : lst) (x1 : tree) (n : natural), @eq lst (lfappend lf2 lf9) (qrevaflat x1 (Cons n lf6)).
Lemma conj354: forall (lf9 : lst) (lf2 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend lf2 lf9) (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj357: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 (Cons n lf6)).
Lemma conj358: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj359: forall (lf6 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj360: forall (lf9 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj361: forall (lf6 : lst) (lf2 : lst) (x1 : tree) (n : natural), @eq lst (lfappend lf2 Nil) (qrevaflat x1 (Cons n lf6)).
Lemma conj362: forall (lf2 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend lf2 Nil) (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj365: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) Nil) (qrevaflat x1 (Cons n lf6)).
Lemma conj366: forall (lf8 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj367: forall (lf6 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj368: forall (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj373: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj374: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj375: forall (lf6 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj376: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj381: forall (lf6 : lst) (lf8 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj382: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj383: forall (lf6 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj384: forall (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj469: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 lf4).
Lemma conj471: forall (lf9 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 lf4).
Lemma conj477: forall (lf8 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 lf4).
Lemma conj479: forall (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 lf4).
Lemma conj501: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj502: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj503: forall (lf6 : lst) (lf9 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj504: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj509: forall (lf6 : lst) (lf8 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj510: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj511: forall (lf6 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj512: forall (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).


<---VALIDITY CHECKS--->
Time elapsed: 242 seconds
Valid:
Lemma conj512: forall (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj504: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).

Invalid:
Lemma conj511: forall (lf6 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj510: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj509: forall (lf6 : lst) (lf8 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj503: forall (lf6 : lst) (lf9 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj502: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj501: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj479: forall (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 lf4).
Lemma conj477: forall (lf8 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 lf4).
Lemma conj471: forall (lf9 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 lf4).
Lemma conj469: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 lf4).
Lemma conj384: forall (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj383: forall (lf6 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj382: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj381: forall (lf6 : lst) (lf8 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj376: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj375: forall (lf6 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj374: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj373: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj368: forall (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj367: forall (lf6 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj366: forall (lf8 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj365: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) Nil) (qrevaflat x1 (Cons n lf6)).
Lemma conj362: forall (lf2 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend lf2 Nil) (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj361: forall (lf6 : lst) (lf2 : lst) (x1 : tree) (n : natural), @eq lst (lfappend lf2 Nil) (qrevaflat x1 (Cons n lf6)).
Lemma conj360: forall (lf9 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj359: forall (lf6 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj358: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj357: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 (Cons n lf6)).
Lemma conj354: forall (lf9 : lst) (lf2 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend lf2 lf9) (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj353: forall (lf6 : lst) (lf9 : lst) (lf2 : lst) (x1 : tree) (n : natural), @eq lst (lfappend lf2 lf9) (qrevaflat x1 (Cons n lf6)).
Lemma conj351: forall (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 lf4).
Lemma conj349: forall (lf8 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil) (qrevaflat x1 lf4).
Lemma conj343: forall (lf9 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 lf4).
Lemma conj341: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9) (qrevaflat x1 lf4).
Lemma conj335: forall (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil) (qrevaflat x1 lf4).
Lemma conj333: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend lf8 lf5) Nil) (qrevaflat x1 lf4).
Lemma conj329: forall (lf2 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend lf2 Nil) (qrevaflat x1 lf4).
Lemma conj327: forall (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9) (qrevaflat x1 lf4).
Lemma conj325: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 lf4).
Lemma conj321: forall (lf9 : lst) (lf2 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend lf2 lf9) (qrevaflat x1 lf4).
Lemma conj298: forall (x1 : tree) (lf1 : lst) (x2 : tree) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj290: forall (lf9 : lst) (x1 : tree) (lf1 : lst) (x2 : tree) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj289: forall (lf6 : lst) (x1 : tree) (lf1 : lst) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n lf6)).
Lemma conj257: forall (lf4 : lst) (x1 : tree) (lf1 : lst), @eq lst lf1 (qrevaflat x1 lf4).
Lemma conj223: forall (x1 : tree) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil) lf3.
Lemma conj221: forall (lf8 : lst) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil) lf3.
Lemma conj215: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9) lf3.
Lemma conj213: forall (lf8 : lst) (lf9 : lst) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9) lf3.
Lemma conj95: forall (x1 : tree) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil) lf3.
Lemma conj93: forall (lf8 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil) lf3.
Lemma conj87: forall (lf9 : lst) (x1 : tree) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9) lf3.
Lemma conj85: forall (lf8 : lst) (lf9 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9) lf3.
Lemma conj79: forall (lf5 : lst) (x1 : tree) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil) lf3.
Lemma conj77: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf8 lf5) Nil) lf3.
Lemma conj73: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf2 Nil) lf3.
Lemma conj71: forall (lf9 : lst) (lf5 : lst) (x1 : tree) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9) lf3.
Lemma conj69: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf8 lf5) lf9) lf3.
Lemma conj65: forall (lf9 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf2 lf9) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 394 seconds
Generalizations:
Lemma conj511: forall (lf6 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj510_imp: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural), forall _ : forall y : lst, @eq lst (lfappend lf8 y) (qrevaflat x1 y),
@eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj510: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj509: forall (lf6 : lst) (lf8 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj503: forall (lf6 : lst) (lf9 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj502_imp: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural), forall _ : forall y : lst, @eq lst (lfappend lf8 y) (qrevaflat x1 y),
@eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj502: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj501: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (x2 : tree), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj479: forall (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil)
  (qrevaflat x1 lf4).
Lemma conj477: forall (lf8 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil)
  (qrevaflat x1 lf4).
Lemma conj471: forall (lf9 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9)
  (qrevaflat x1 lf4).
Lemma conj469: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9)
  (qrevaflat x1 lf4).
Lemma conj384_imp: forall (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), forall _ : forall y : lst, @eq lst (lfappend lf7 y) (qrevaflat x2 y),
@eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj384: forall (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj383: forall (lf6 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj382_imp: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), forall _ : forall y : lst, @eq lst (lfappend lf8 y) (qrevaflat x1 y),
@eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj382: forall (lf8 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj381: forall (lf6 : lst) (lf8 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj376_imp: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), forall _ : forall y : lst, @eq lst (lfappend lf7 y) (qrevaflat x2 y),
@eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj376: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj375: forall (lf6 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj374_imp: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), forall _ : forall y : lst, @eq lst (lfappend lf7 y) (qrevaflat x2 y),
@eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj374: forall (lf8 : lst) (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj373_imp: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), forall _ : forall y : lst, @eq lst (lfappend lf8 y) (qrevaflat x1 y),
@eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj373: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (x1 : tree) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj368: forall (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj367: forall (lf6 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj366: forall (lf8 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) Nil)
  (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj365: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) Nil) (qrevaflat x1 (Cons n lf6)).
Lemma conj362: forall (lf2 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend lf2 Nil) (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj361: forall (lf6 : lst) (lf2 : lst) (x1 : tree) (n : natural), @eq lst (lfappend lf2 Nil) (qrevaflat x1 (Cons n lf6)).
Lemma conj360: forall (lf9 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj359: forall (lf6 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9)
  (qrevaflat x1 (Cons n lf6)).
Lemma conj358: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) lf9)
  (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj357: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (lf5 : lst) (x1 : tree) (n : natural), @eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 (Cons n lf6)).
Lemma conj354: forall (lf9 : lst) (lf2 : lst) (x1 : tree) (x2 : tree) (n : natural), @eq lst (lfappend lf2 lf9) (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj353: forall (lf6 : lst) (lf9 : lst) (lf2 : lst) (x1 : tree) (n : natural), @eq lst (lfappend lf2 lf9) (qrevaflat x1 (Cons n lf6)).
Lemma conj351: forall (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil)
  (qrevaflat x1 lf4).
Lemma conj349: forall (lf8 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil) (qrevaflat x1 lf4).
Lemma conj343: forall (lf9 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9)
  (qrevaflat x1 lf4).
Lemma conj341: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (x1 : tree) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9) (qrevaflat x1 lf4).
Lemma conj335: forall (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil) (qrevaflat x1 lf4).
Lemma conj333: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend lf8 lf5) Nil) (qrevaflat x1 lf4).
Lemma conj329: forall (lf2 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend lf2 Nil) (qrevaflat x1 lf4).
Lemma conj327: forall (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9) (qrevaflat x1 lf4).
Lemma conj325_imp: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), forall _ : forall y : lst, @eq lst (lfappend lf8 y) (qrevaflat x1 y),
@eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 lf4).
Lemma conj325: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend (lfappend lf8 lf5) lf9) (qrevaflat x1 lf4).
Lemma conj321: forall (lf9 : lst) (lf2 : lst) (lf4 : lst) (x1 : tree), @eq lst (lfappend lf2 lf9) (qrevaflat x1 lf4).
Lemma conj298: forall (x1 : tree) (lf1 : lst) (x2 : tree) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n (qrevaflat x2 Nil))).
Lemma conj290: forall (lf9 : lst) (x1 : tree) (lf1 : lst) (x2 : tree) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n (qrevaflat x2 lf9))).
Lemma conj289: forall (lf6 : lst) (x1 : tree) (lf1 : lst) (n : natural), @eq lst lf1 (qrevaflat x1 (Cons n lf6)).
Lemma conj257: forall (lf4 : lst) (x1 : tree) (lf1 : lst), @eq lst lf1 (qrevaflat x1 lf4).
Lemma conj223: forall (x1 : tree) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil) lf3.
Lemma conj221: forall (lf8 : lst) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) Nil) lf3.
Lemma conj215: forall (lf9 : lst) (x1 : tree) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) lf9) lf3.
Lemma conj213: forall (lf8 : lst) (lf9 : lst) (x2 : tree) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n (revflat x2))) lf9) lf3.
Lemma conj95: forall (x1 : tree) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) Nil) lf3.
Lemma conj93: forall (lf8 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) Nil) lf3.
Lemma conj87: forall (lf9 : lst) (x1 : tree) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) (Cons n lf7)) lf9) lf3.
Lemma conj85: forall (lf8 : lst) (lf9 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf8 (Cons n lf7)) lf9) lf3.
Lemma conj79: forall (lf5 : lst) (x1 : tree) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) lf5) Nil) lf3.
Lemma conj77: forall (lf8 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf8 lf5) Nil) lf3.
Lemma conj73: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf2 Nil) lf3.
Lemma conj71: forall (lf9 : lst) (lf5 : lst) (x1 : tree) (lf3 : lst), @eq lst (lfappend (lfappend (revflat x1) lf5) lf9) lf3.
Lemma conj69: forall (lf8 : lst) (lf9 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf8 lf5) lf9) lf3.
Lemma conj65: forall (lf9 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf2 lf9) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
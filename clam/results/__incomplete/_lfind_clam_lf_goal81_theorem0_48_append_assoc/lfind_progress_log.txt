File Information
- File name: goal81
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal81_theorem0_48_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal81_theorem0_48_append_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst, @eq lst (qreva (qreva x0 y0) Nil) (lfappend (rev y0) x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (qreva (qreva x y0) Nil) (lfappend (rev y0) x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lfappend (rev _UNBOUND_REL_1) x : lst
x : lst
lfappend (rev y) (Cons n Nil) : lst
y : lst
rev y : lst
qreva (qreva x _UNBOUND_REL_1) Nil : lst
@eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x)) : Prop
lfappend (rev y) (Cons n x) : lst
rev _UNBOUND_REL_1 : lst
Cons n x : lst
forall y0 : lst, @eq lst (qreva (qreva x y0) Nil) (lfappend (rev y0) x) : Prop
lst : Set
Cons n Nil : lst
natural : Set
qreva x _UNBOUND_REL_1 : lst
n : natural
lfappend (lfappend (rev y) (Cons n Nil)) x : lst
Nil : lst
@eq lst (qreva (qreva x _UNBOUND_REL_1) Nil)
  (lfappend (rev _UNBOUND_REL_1) x) : Prop

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend (rev y) (Cons n x)
lf7 : lst = Nil
lf1 : lst = lfappend (lfappend (rev y) (Cons n Nil)) x
lf4 : lst = Cons n Nil
lf5 : lst = Cons n x
lf2 : lst = lfappend (rev y) (Cons n Nil)
lf6 : lst = rev y

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 149 seconds
Valid:
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 (Cons n x)).

Invalid:
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 186 seconds
Generalizations:
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) (lfappend lf6 lf5).
Lemma conj96_imp: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), forall
  _ : forall y0 : lst, @eq lst (qreva (qreva x y0) lf7) (lfappend (rev y0) x),
@eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x)
  (lfappend (rev y) (Cons n x)).
Lemma conj95_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), forall
  _ : forall y0 : lst, @eq lst (qreva (qreva x y0) lf7) (lfappend (rev y0) x),
@eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 (Cons n x)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) (lfappend (rev y) lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) (lfappend lf6 lf5).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) (Cons n x)).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 (Cons n x)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend (rev y) (Cons n x)).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend lf6 (Cons n x)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) (lfappend (rev y) lf5).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) (lfappend lf6 lf5).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend (rev y) lf5).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst (lfappend lf2 x) (lfappend lf6 lf5).
Lemma conj70: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj69: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf6 (Cons n x)).
Lemma conj66: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf5).
Lemma conj65: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf6 lf5).
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n Nil)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (Cons n lf7)) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf6 (Cons n lf7)) x) lf3.
Lemma conj20: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf4) x) lf3.
Lemma conj19: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf6 lf4) x) lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
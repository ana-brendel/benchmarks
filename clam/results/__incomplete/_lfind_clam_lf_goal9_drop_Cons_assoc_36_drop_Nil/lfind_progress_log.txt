File Information
- File name: goal9
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal9_drop_Cons_assoc_36_drop_Nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal9_drop_Cons_assoc_36_drop_Nil
- Namespace: adtind
- Proof name: drop_Cons_assoc
- Theorem: Theorem drop_Cons_assoc: forall (x0 x4 x5 : natural) (l : lst),
@eq lst (drop x0 (drop x4 (Cons x5 l))) (drop x4 (drop x0 (Cons x5 l))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil))

* Hypothesis:
IHx2 : forall (x0 : natural) (l : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l)))
  (drop x2 (drop (Succ x1) (Cons x0 l)))
x3 : natural
x1 : natural
IHl : @eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 Nil)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 Nil)))
n : natural
x2 : natural
IHx1 : forall (x0 x4 : natural) (l : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l))) (drop x0 (drop x1 (Cons x4 l)))

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x3 : natural
x1 : natural
x2 : natural

* Terms:
@eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 Nil)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 Nil))) : Prop
drop x1 (drop x2 Nil) : lst
drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop x2 (drop x1 Nil) : lst
drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
drop (Succ x1) (drop (Succ x2) (Cons x3 Nil)) : lst
x1 : natural
drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
lst : Set
forall (x0 x4 : natural) (l : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l))) (drop x0 (drop x1 (Cons x4 l))) : Prop
x2 : natural
forall l : lst,
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 l)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 l))) : Prop
drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
Cons x3 Nil : lst
x3 : natural
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
forall (x0 : natural) (l : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l)))
  (drop x2 (drop (Succ x1) (Cons x0 l))) : Prop
forall l : lst,
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 l)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 l))) : Prop
drop (Succ x1) (Cons x3 Nil) : lst
drop x2 Nil : lst
drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
Succ x2 : natural
drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
drop (Succ x2) (Cons x3 Nil) : lst
drop x1 Nil : lst
@eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil)) : Prop
forall (x0 : natural) (l : lst),
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons x0 l)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons x0 l))) : Prop
drop (Succ x2) (drop (Succ x1) (Cons x3 Nil)) : lst
Cons _UNBOUND_REL_2 _UNBOUND_REL_1 : lst
drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
natural : Set
Succ x1 : natural
Nil : lst

* Functions:
Succ  : forall _ : natural, natural
drop  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
Cons  : forall (_ : natural) (_ : lst), lst
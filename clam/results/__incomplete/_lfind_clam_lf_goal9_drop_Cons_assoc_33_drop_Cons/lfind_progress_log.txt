File Information
- File name: goal9
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal9_drop_Cons_assoc_33_drop_Cons
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal9_drop_Cons_assoc_33_drop_Cons
- Namespace: adtind
- Proof name: drop_Cons_assoc
- Theorem: Theorem drop_Cons_assoc: forall (x0 x4 x5 : natural) (l0 : lst),
@eq lst (drop x0 (drop x4 (Cons x5 l0))) (drop x4 (drop x0 (Cons x5 l0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop x2 (drop (Succ x1) (Cons n l)))
  (drop x1 (drop (Succ x2) (Cons n l)))

* Hypothesis:
IHx2 : forall (x0 : natural) (l0 : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l0)))
  (drop x2 (drop (Succ x1) (Cons x0 l0)))
x3 : natural
x1 : natural
IHl : @eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 l)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 l)))
l : lst
n : natural
x2 : natural
IHx1 : forall (x0 x4 : natural) (l0 : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l0))) (drop x0 (drop x1 (Cons x4 l0)))

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x3 : natural
x1 : natural
l : lst
n : natural
x2 : natural

* Terms:
forall (x0 : natural) (l0 : lst),
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons x0 l0)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons x0 l0))) : Prop
drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
Cons x3 l : lst
drop x1 (drop (Succ x2) (Cons n l)) : lst
drop x2 (drop (Succ x1) (Cons n l)) : lst
x1 : natural
drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
@eq lst (drop x2 (drop (Succ x1) (Cons n l)))
  (drop x1 (drop (Succ x2) (Cons n l))) : Prop
lst : Set
drop (Succ x2) (drop (Succ x1) (Cons x3 l)) : lst
x2 : natural
n : natural
drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
forall l0 : lst,
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 l0)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 l0))) : Prop
drop (Succ x1) (drop (Succ x2) (Cons x3 l)) : lst
x3 : natural
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
drop (Succ x1) (Cons x3 l) : lst
@eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 l)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 l))) : Prop
forall (x0 x4 : natural) (l0 : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l0))) (drop x0 (drop x1 (Cons x4 l0))) : Prop
drop (Succ x1) (Cons n l) : lst
l : lst
drop (Succ x2) (Cons x3 l) : lst
drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
forall (x0 : natural) (l0 : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l0)))
  (drop x2 (drop (Succ x1) (Cons x0 l0))) : Prop
Succ x2 : natural
drop (Succ x2) (Cons n l) : lst
drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
forall l0 : lst,
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 l0)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 l0))) : Prop
Cons n l : lst
Cons _UNBOUND_REL_2 _UNBOUND_REL_1 : lst
drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
natural : Set
Succ x1 : natural

* Functions:
Succ  : forall _ : natural, natural
drop  : forall (_ : natural) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
File Information
- File name: goal8
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal8_drop_Cons_assoc_34_drop_Cons
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal8_drop_Cons_assoc_34_drop_Cons
- Namespace: adtind
- Proof name: drop_Cons_assoc
- Theorem: Theorem drop_Cons_assoc: forall (x0 x4 x5 : natural) (l0 : lst),
@eq lst (drop x0 (drop x4 (Cons x5 l0))) (drop x4 (drop x0 (Cons x5 l0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop x2 (drop (Succ x1) (Cons n l)))
  (drop x1 (drop (Succ x2) (Cons n l)))

* Hypothesis:
IHx2 : forall (x0 : natural) (l0 : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l0)))
  (drop x2 (drop (Succ x1) (Cons x0 l0)))
x3 : natural
x1 : natural
IHl : @eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 l)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 l)))
l : lst
n : natural
x2 : natural
IHx1 : forall (x0 x4 : natural) (l0 : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l0))) (drop x0 (drop x1 (Cons x4 l0)))

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x3 : natural
x1 : natural
l : lst
n : natural
x2 : natural

* Terms:
forall (x0 : natural) (l0 : lst),
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons x0 l0)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons x0 l0))) : Prop
drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
Cons x3 l : lst
drop x1 (drop (Succ x2) (Cons n l)) : lst
drop x2 (drop (Succ x1) (Cons n l)) : lst
x1 : natural
drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
@eq lst (drop x2 (drop (Succ x1) (Cons n l)))
  (drop x1 (drop (Succ x2) (Cons n l))) : Prop
lst : Set
drop (Succ x2) (drop (Succ x1) (Cons x3 l)) : lst
x2 : natural
n : natural
drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
forall l0 : lst,
@eq lst (drop x1 (drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 l0)))
  (drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 l0))) : Prop
drop (Succ x1) (drop (Succ x2) (Cons x3 l)) : lst
x3 : natural
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1))) : Prop
drop (Succ x1) (Cons x3 l) : lst
@eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 l)))
  (drop (Succ x2) (drop (Succ x1) (Cons x3 l))) : Prop
forall (x0 x4 : natural) (l0 : lst),
@eq lst (drop x1 (drop x0 (Cons x4 l0))) (drop x0 (drop x1 (Cons x4 l0))) : Prop
drop (Succ x1) (Cons n l) : lst
l : lst
drop (Succ x2) (Cons x3 l) : lst
drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
forall (x0 : natural) (l0 : lst),
@eq lst (drop (Succ x1) (drop x2 (Cons x0 l0)))
  (drop x2 (drop (Succ x1) (Cons x0 l0))) : Prop
Succ x2 : natural
drop (Succ x2) (Cons n l) : lst
drop _UNBOUND_REL_3 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
forall l0 : lst,
@eq lst (drop (Succ x1) (drop x2 (Cons _UNBOUND_REL_2 l0)))
  (drop x2 (drop (Succ x1) (Cons _UNBOUND_REL_2 l0))) : Prop
Cons n l : lst
Cons _UNBOUND_REL_2 _UNBOUND_REL_1 : lst
drop _UNBOUND_REL_3 (drop x1 (Cons _UNBOUND_REL_2 _UNBOUND_REL_1)) : lst
drop (Succ x1) (Cons _UNBOUND_REL_2 _UNBOUND_REL_1) : lst
natural : Set
Succ x1 : natural

* Functions:
Succ  : forall _ : natural, natural
drop  : forall (_ : natural) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = drop (Succ x2) (Cons n l)
lf7 : natural = Succ x1
lf1 : lst = drop x1 (drop (Succ x2) (Cons n l))
lf4 : lst = drop (Succ x1) (Cons n l)
lf5 : lst = Cons n l
lf2 : lst = drop x2 (drop (Succ x1) (Cons n l))
lf6 : natural = Succ x2

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (x2 : natural), @eq lst (drop x2 lf4) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : lst) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) lf1.
Lemma conj15: forall (lf1 : lst) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) lf1.
Lemma conj17: forall (lf2 : lst) (x1 : natural) (lf3 : lst), @eq lst lf2 (drop x1 lf3).
Lemma conj19: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf4) (drop x1 lf3).
Lemma conj27: forall (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 lf3).
Lemma conj31: forall (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 lf3).
Lemma conj43: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) lf1.
Lemma conj47: forall (lf1 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) lf1.
Lemma conj59: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 lf3).
Lemma conj63: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 lf3).
Lemma conj81: forall (lf6 : natural) (lf2 : lst) (lf5 : lst) (x1 : natural), @eq lst lf2 (drop x1 (drop lf6 lf5)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) lf5)).
Lemma conj83: forall (lf6 : natural) (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 lf5)).
Lemma conj84: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) lf5)).
Lemma conj85: forall (lf6 : natural) (lf2 : lst) (x1 : natural) (l : lst) (n : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons n l))).
Lemma conj86: forall (lf2 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj87: forall (lf6 : natural) (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons n l))).
Lemma conj88: forall (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj91: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj92: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma conj95: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj96: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj123: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj124: forall (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma conj127: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj128: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l)))
  (drop x1 (drop (Succ x2) (Cons n l))).


<---VALIDITY CHECKS--->
Time elapsed: 53 seconds
Valid:
Lemma conj128: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l)))
  (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj124: forall (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop (Succ x2) lf5)).

Invalid:
Lemma conj127: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj123: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj96: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj95: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj92: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma conj91: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj88: forall (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj87: forall (lf6 : natural) (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons n l))).
Lemma conj86: forall (lf2 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj85: forall (lf6 : natural) (lf2 : lst) (x1 : natural) (l : lst) (n : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons n l))).
Lemma conj84: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) lf5)).
Lemma conj83: forall (lf6 : natural) (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 lf5)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) lf5)).
Lemma conj81: forall (lf6 : natural) (lf2 : lst) (lf5 : lst) (x1 : natural), @eq lst lf2 (drop x1 (drop lf6 lf5)).
Lemma conj63: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 lf3).
Lemma conj59: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 lf3).
Lemma conj47: forall (lf1 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) lf1.
Lemma conj43: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) lf1.
Lemma conj31: forall (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 lf3).
Lemma conj27: forall (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 lf3).
Lemma conj19: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf4) (drop x1 lf3).
Lemma conj17: forall (lf2 : lst) (x1 : natural) (lf3 : lst), @eq lst lf2 (drop x1 lf3).
Lemma conj15: forall (lf1 : lst) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : lst) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) lf1.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (x2 : natural), @eq lst (drop x2 lf4) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 157 seconds
Generalizations:
Lemma conj127: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj123: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj96: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj95: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj92: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma conj91: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj88: forall (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj87: forall (lf6 : natural) (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons n l))).
Lemma conj86: forall (lf2 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj85: forall (lf6 : natural) (lf2 : lst) (x1 : natural) (l : lst) (n : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons n l))).
Lemma conj84: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) lf5)).
Lemma conj83: forall (lf6 : natural) (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 lf5)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) lf5)).
Lemma conj81: forall (lf6 : natural) (lf2 : lst) (lf5 : lst) (x1 : natural), @eq lst lf2 (drop x1 (drop lf6 lf5)).
Lemma conj63: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 lf3).
Lemma conj59: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 lf3).
Lemma conj47: forall (lf1 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) lf1.
Lemma conj43: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) lf1.
Lemma conj31: forall (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 lf3).
Lemma conj27: forall (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 lf3).
Lemma conj19: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf4) (drop x1 lf3).
Lemma conj17: forall (lf2 : lst) (x1 : natural) (lf3 : lst), @eq lst lf2 (drop x1 lf3).
Lemma conj15: forall (lf1 : lst) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : lst) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) lf1.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (x2 : natural), @eq lst (drop x2 lf4) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 205 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (x2 : natural), @eq lst (drop x2 lf4) lf1.
Lemma conj11: forall (lf5 : lst) (lf1 : lst) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) lf1.
Lemma conj15: forall (lf1 : lst) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) lf1.
Lemma conj17: forall (lf2 : lst) (x1 : natural) (lf3 : lst), @eq lst lf2 (drop x1 lf3).
Lemma conj19: forall (lf4 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 lf4) (drop x1 lf3).
Lemma conj27: forall (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 lf3).
Lemma conj31: forall (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 lf3).
Lemma conj43: forall (lf5 : lst) (lf1 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) lf1.
Lemma conj47: forall (lf1 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) lf1.
Lemma conj59: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 lf3).
Lemma conj63: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf3 : lst), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 lf3).
Lemma conj81: forall (lf6 : natural) (lf2 : lst) (lf5 : lst) (x1 : natural), @eq lst lf2 (drop x1 (drop lf6 lf5)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) lf5)).
Lemma conj83: forall (lf6 : natural) (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 lf5)).
Lemma conj84: forall (lf5 : lst) (lf4 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) lf5)).
Lemma conj85: forall (lf6 : natural) (lf2 : lst) (x1 : natural) (l : lst) (n : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons n l))).
Lemma conj86: forall (lf2 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj87: forall (lf6 : natural) (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons n l))).
Lemma conj88: forall (lf4 : lst) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj91: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj92: forall (lf5 : lst) (x1 : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma conj95: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma conj96: forall (x1 : natural) (l : lst) (n : natural) (x2 : natural) (lf7 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma conj123: forall (lf6 : natural) (lf5 : lst) (x1 : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop lf6 lf5)).
Lemma conj127: forall (lf6 : natural) (x1 : natural) (l : lst) (n : natural) (x2 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).


<---CREATE SKETCHES--->
Time elapsed: 206 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst (##hole##) lf1
Sketch conj3_term_sketch0 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj11_sketch0 : @eq lst (drop x2 (##hole##)) lf1
Sketch conj11_sketch1 : @eq lst (##hole##) lf1
Sketch conj11_term_sketch0 : @eq lst (drop lf7 lf5) (##hole##)
Sketch conj11_term_sketch1 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj15_sketch0 : @eq lst (##hole##) lf1
Sketch conj15_sketch1 : @eq lst (drop x2 (##hole##)) lf1
Sketch conj15_sketch2 : @eq lst (drop x2 (drop lf7 (##hole##))) lf1
Sketch conj15_term_sketch0 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj15_term_sketch1 : @eq lst (drop lf7 (Cons n l)) (##hole##)
Sketch conj15_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj17_sketch0 : @eq lst lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq lst (drop x1 lf3) (##hole##)
Sketch conj19_sketch0 : @eq lst (##hole##) (drop x1 lf3)
Sketch conj19_sketch1 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj19_term_sketch0 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (drop x1 lf3) (##hole##)
Sketch conj27_sketch0 : @eq lst (drop x2 (##hole##)) (drop x1 lf3)
Sketch conj27_sketch1 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj27_sketch2 : @eq lst (##hole##) (drop x1 lf3)
Sketch conj27_term_sketch0 : @eq lst (drop lf7 lf5) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (drop x1 lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj31_sketch0 : @eq lst (##hole##) (drop x1 lf3)
Sketch conj31_sketch1 : @eq lst (drop x2 (##hole##)) (drop x1 lf3)
Sketch conj31_sketch2 : @eq lst (drop x2 (drop lf7 (##hole##))) (drop x1 lf3)
Sketch conj31_sketch3 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj31_term_sketch0 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (drop lf7 (Cons n l)) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (drop x1 lf3) (##hole##)
Sketch conj43_sketch0 : @eq lst (##hole##) lf1
Sketch conj43_sketch1 : @eq lst (drop x2 (##hole##)) lf1
Sketch conj43_sketch2 : @eq lst (drop x2 (drop (##hole##) lf5)) lf1
Sketch conj43_term_sketch0 : @eq lst (drop x2 (drop (Succ x1) lf5)) (##hole##)
Sketch conj43_term_sketch1 : @eq lst (drop (Succ x1) lf5) (##hole##)
Sketch conj43_term_sketch2 : @eq natural (Succ x1) (##hole##)
Sketch conj47_sketch0 : @eq lst (##hole##) lf1
Sketch conj47_sketch1 : @eq lst (drop x2 (drop (Succ x1) (##hole##))) lf1
Sketch conj47_sketch2 : @eq lst (drop x2 (##hole##)) lf1
Sketch conj47_sketch3 : @eq lst (drop x2 (drop (##hole##) (Cons n l))) lf1
Sketch conj47_term_sketch0 : @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (##hole##)
Sketch conj47_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj47_term_sketch2 : @eq lst (drop (Succ x1) (Cons n l)) (##hole##)
Sketch conj47_term_sketch3 : @eq natural (Succ x1) (##hole##)
Sketch conj59_sketch0 : @eq lst (##hole##) (drop x1 lf3)
Sketch conj59_sketch1 : @eq lst (drop x2 (drop (Succ x1) lf5)) (##hole##)
Sketch conj59_sketch2 : @eq lst (drop x2 (##hole##)) (drop x1 lf3)
Sketch conj59_sketch3 : @eq lst (drop x2 (drop (##hole##) lf5)) (drop x1 lf3)
Sketch conj59_term_sketch0 : @eq lst (drop x2 (drop (Succ x1) lf5)) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (drop x1 lf3) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (drop (Succ x1) lf5) (##hole##)
Sketch conj59_term_sketch3 : @eq natural (Succ x1) (##hole##)
Sketch conj63_sketch0 : @eq lst (##hole##) (drop x1 lf3)
Sketch conj63_sketch1 : @eq lst (drop x2 (drop (Succ x1) (##hole##))) (drop x1 lf3)
Sketch conj63_sketch2 : @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (##hole##)
Sketch conj63_sketch3 : @eq lst (drop x2 (##hole##)) (drop x1 lf3)
Sketch conj63_sketch4 : @eq lst (drop x2 (drop (##hole##) (Cons n l))) (drop x1 lf3)
Sketch conj63_term_sketch0 : @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (drop x1 lf3) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (drop (Succ x1) (Cons n l)) (##hole##)
Sketch conj63_term_sketch4 : @eq natural (Succ x1) (##hole##)
Sketch conj81_sketch0 : @eq lst lf2 (drop x1 (##hole##))
Sketch conj81_sketch1 : @eq lst lf2 (##hole##)
Sketch conj81_term_sketch0 : @eq lst (drop lf6 lf5) (##hole##)
Sketch conj81_term_sketch1 : @eq lst (drop x1 (drop lf6 lf5)) (##hole##)
Sketch conj82_sketch0 : @eq lst lf2 (drop x1 (drop (##hole##) lf5))
Sketch conj82_sketch1 : @eq lst lf2 (drop x1 (##hole##))
Sketch conj82_sketch2 : @eq lst lf2 (##hole##)
Sketch conj82_term_sketch0 : @eq natural (Succ x2) (##hole##)
Sketch conj82_term_sketch1 : @eq lst (drop (Succ x2) lf5) (##hole##)
Sketch conj82_term_sketch2 : @eq lst (drop x1 (drop (Succ x2) lf5)) (##hole##)
Sketch conj83_sketch0 : @eq lst (drop x2 lf4) (drop x1 (##hole##))
Sketch conj83_sketch1 : @eq lst (##hole##) (drop x1 (drop lf6 lf5))
Sketch conj83_sketch2 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj83_term_sketch0 : @eq lst (drop lf6 lf5) (##hole##)
Sketch conj83_term_sketch1 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj83_term_sketch2 : @eq lst (drop x1 (drop lf6 lf5)) (##hole##)
Sketch conj84_sketch0 : @eq lst (drop x2 lf4) (drop x1 (drop (##hole##) lf5))
Sketch conj84_sketch1 : @eq lst (drop x2 lf4) (drop x1 (##hole##))
Sketch conj84_sketch2 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj84_sketch3 : @eq lst (##hole##) (drop x1 (drop (Succ x2) lf5))
Sketch conj84_term_sketch0 : @eq natural (Succ x2) (##hole##)
Sketch conj84_term_sketch1 : @eq lst (drop (Succ x2) lf5) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (drop x1 (drop (Succ x2) lf5)) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj85_sketch0 : @eq lst lf2 (##hole##)
Sketch conj85_sketch1 : @eq lst lf2 (drop x1 (drop lf6 (##hole##)))
Sketch conj85_sketch2 : @eq lst lf2 (drop x1 (##hole##))
Sketch conj85_term_sketch0 : @eq lst (drop x1 (drop lf6 (Cons n l))) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (drop lf6 (Cons n l)) (##hole##)
Sketch conj86_sketch0 : @eq lst lf2 (drop x1 (drop (##hole##) (Cons n l)))
Sketch conj86_sketch1 : @eq lst lf2 (drop x1 (##hole##))
Sketch conj86_sketch2 : @eq lst lf2 (##hole##)
Sketch conj86_sketch3 : @eq lst lf2 (drop x1 (drop (Succ x2) (##hole##)))
Sketch conj86_term_sketch0 : @eq natural (Succ x2) (##hole##)
Sketch conj86_term_sketch1 : @eq lst (drop (Succ x2) (Cons n l)) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (##hole##)
Sketch conj86_term_sketch3 : @eq lst (Cons n l) (##hole##)
Sketch conj87_sketch0 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj87_sketch1 : @eq lst (##hole##) (drop x1 (drop lf6 (Cons n l)))
Sketch conj87_sketch2 : @eq lst (drop x2 lf4) (drop x1 (drop lf6 (##hole##)))
Sketch conj87_sketch3 : @eq lst (drop x2 lf4) (drop x1 (##hole##))
Sketch conj87_term_sketch0 : @eq lst (drop x1 (drop lf6 (Cons n l))) (##hole##)
Sketch conj87_term_sketch1 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj87_term_sketch3 : @eq lst (drop lf6 (Cons n l)) (##hole##)
Sketch conj88_sketch0 : @eq lst (drop x2 lf4) (drop x1 (drop (##hole##) (Cons n l)))
Sketch conj88_sketch1 : @eq lst (drop x2 lf4) (drop x1 (##hole##))
Sketch conj88_sketch2 : @eq lst (##hole##) (drop x1 (drop (Succ x2) (Cons n l)))
Sketch conj88_sketch3 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj88_sketch4 : @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (##hole##)))
Sketch conj88_term_sketch0 : @eq natural (Succ x2) (##hole##)
Sketch conj88_term_sketch1 : @eq lst (drop (Succ x2) (Cons n l)) (##hole##)
Sketch conj88_term_sketch2 : @eq lst (drop x2 lf4) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (##hole##)
Sketch conj88_term_sketch4 : @eq lst (Cons n l) (##hole##)
Sketch conj91_sketch0 : @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (##hole##))
Sketch conj91_sketch1 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj91_sketch2 : @eq lst (drop x2 (##hole##)) (drop x1 (drop lf6 lf5))
Sketch conj91_sketch3 : @eq lst (##hole##) (drop x1 (drop lf6 lf5))
Sketch conj91_term_sketch0 : @eq lst (drop lf6 lf5) (##hole##)
Sketch conj91_term_sketch1 : @eq lst (drop x1 (drop lf6 lf5)) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (drop lf7 lf5) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj92_sketch0 : @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (##hole##) lf5))
Sketch conj92_sketch1 : @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (##hole##))
Sketch conj92_sketch2 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj92_sketch3 : @eq lst (drop x2 (##hole##)) (drop x1 (drop (Succ x2) lf5))
Sketch conj92_sketch4 : @eq lst (##hole##) (drop x1 (drop (Succ x2) lf5))
Sketch conj92_term_sketch0 : @eq natural (Succ x2) (##hole##)
Sketch conj92_term_sketch1 : @eq lst (drop (Succ x2) lf5) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (drop x1 (drop (Succ x2) lf5)) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (drop lf7 lf5) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (drop x2 (drop lf7 lf5)) (##hole##)
Sketch conj95_sketch0 : @eq lst (##hole##) (drop x1 (drop lf6 (Cons n l)))
Sketch conj95_sketch1 : @eq lst (drop x2 (##hole##)) (drop x1 (drop lf6 (Cons n l)))
Sketch conj95_sketch2 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj95_sketch3 : @eq lst (drop x2 (drop lf7 (##hole##))) (drop x1 (drop lf6 (##hole##)))
Sketch conj95_sketch4 : @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (##hole##))
Sketch conj95_term_sketch0 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (drop lf7 (Cons n l)) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (drop x1 (drop lf6 (Cons n l))) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (Cons n l) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (drop lf6 (Cons n l)) (##hole##)
Sketch conj96_sketch0 : @eq lst (##hole##) (drop x1 (drop (Succ x2) (Cons n l)))
Sketch conj96_sketch1 : @eq lst (drop x2 (drop lf7 (Cons n l)))
  (drop x1 (drop (##hole##) (Cons n l)))
Sketch conj96_sketch2 : @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (##hole##))
Sketch conj96_sketch3 : @eq lst (drop x2 (##hole##)) (drop x1 (drop (Succ x2) (Cons n l)))
Sketch conj96_sketch4 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj96_sketch5 : @eq lst (drop x2 (drop lf7 (##hole##))) (drop x1 (drop (Succ x2) (##hole##)))
Sketch conj96_term_sketch0 : @eq lst (drop x2 (drop lf7 (Cons n l))) (##hole##)
Sketch conj96_term_sketch1 : @eq natural (Succ x2) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (drop (Succ x2) (Cons n l)) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (drop lf7 (Cons n l)) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (Cons n l) (##hole##)
Sketch conj123_sketch0 : @eq lst (##hole##) (drop x1 (drop lf6 lf5))
Sketch conj123_sketch1 : @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (##hole##))
Sketch conj123_sketch2 : @eq lst (drop x2 (drop (Succ x1) lf5)) (##hole##)
Sketch conj123_sketch3 : @eq lst (drop x2 (##hole##)) (drop x1 (drop lf6 lf5))
Sketch conj123_sketch4 : @eq lst (drop x2 (drop (##hole##) lf5)) (drop x1 (drop lf6 lf5))
Sketch conj123_term_sketch0 : @eq lst (drop x2 (drop (Succ x1) lf5)) (##hole##)
Sketch conj123_term_sketch1 : @eq lst (drop lf6 lf5) (##hole##)
Sketch conj123_term_sketch2 : @eq lst (drop x1 (drop lf6 lf5)) (##hole##)
Sketch conj123_term_sketch3 : @eq lst (drop (Succ x1) lf5) (##hole##)
Sketch conj123_term_sketch4 : @eq natural (Succ x1) (##hole##)
Sketch conj127_sketch0 : @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (##hole##)
Sketch conj127_sketch1 : @eq lst (##hole##) (drop x1 (drop lf6 (Cons n l)))
Sketch conj127_sketch2 : @eq lst (drop x2 (drop (Succ x1) (##hole##))) (drop x1 (drop lf6 (##hole##)))
Sketch conj127_sketch3 : @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (##hole##))
Sketch conj127_sketch4 : @eq lst (drop x2 (##hole##)) (drop x1 (drop lf6 (Cons n l)))
Sketch conj127_sketch5 : @eq lst (drop x2 (drop (##hole##) (Cons n l)))
  (drop x1 (drop lf6 (Cons n l)))
Sketch conj127_term_sketch0 : @eq lst (drop x1 (drop lf6 (Cons n l))) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (drop lf6 (Cons n l)) (##hole##)
Sketch conj127_term_sketch4 : @eq lst (drop (Succ x1) (Cons n l)) (##hole##)
Sketch conj127_term_sketch5 : @eq natural (Succ x1) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 206 seconds
Problems per Sketch:
Sketch conj88_term_sketch4 --> Problem  synth_9
Sketch conj83_sketch1 --> Problem  synth_26
Sketch conj59_term_sketch2 --> Problem  synth_16
Sketch conj84_sketch1 --> Problem  synth_30
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj63_sketch4 --> Problem  synth_23
Sketch conj15_term_sketch2 --> Problem  synth_9
Sketch conj127_sketch5 --> Problem  synth_50
Sketch conj59_term_sketch1 --> Problem  synth_11
Sketch conj96_sketch4 --> Problem  synth_7
Sketch conj59_sketch1 --> Problem  synth_15
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj127_sketch3 --> Problem  synth_20
Sketch conj87_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch0 --> Problem  synth_20
Sketch conj31_sketch0 --> Problem  synth_11
Sketch conj127_term_sketch0 --> Problem  synth_33
Sketch conj88_sketch0 --> Problem  synth_39
Sketch conj123_sketch4 --> Problem  synth_48
Sketch conj81_term_sketch1 --> Problem  synth_26
Sketch conj59_sketch3 --> Problem  synth_22
Sketch conj84_sketch2 --> Problem  synth_2
Sketch conj85_sketch0 --> Problem  synth_10
Sketch conj127_sketch4 --> Problem  synth_43
Sketch conj92_term_sketch2 --> Problem  synth_15
Sketch conj63_term_sketch4 --> Problem  synth_17
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj123_sketch3 --> Problem  synth_41
Sketch conj92_term_sketch3 --> Problem  synth_4
Sketch conj86_sketch0 --> Problem  synth_35
Sketch conj47_sketch2 --> Problem  synth_3
Sketch conj43_term_sketch1 --> Problem  synth_16
Sketch conj83_term_sketch1 --> Problem  synth_2
Sketch conj19_term_sketch1 --> Problem  synth_11
Sketch conj82_term_sketch2 --> Problem  synth_15
Sketch conj27_sketch1 --> Problem  synth_5
Sketch conj127_term_sketch5 --> Problem  synth_17
Sketch conj96_term_sketch2 --> Problem  synth_37
Sketch conj91_sketch3 --> Problem  synth_26
Sketch conj88_term_sketch2 --> Problem  synth_2
Sketch conj47_sketch3 --> Problem  synth_19
Sketch conj43_sketch2 --> Problem  synth_14
Sketch conj84_term_sketch3 --> Problem  synth_2
Sketch conj63_term_sketch1 --> Problem  synth_9
Sketch conj123_term_sketch1 --> Problem  synth_25
Sketch conj15_sketch1 --> Problem  synth_3
Sketch conj127_term_sketch4 --> Problem  synth_21
Sketch conj91_term_sketch3 --> Problem  synth_5
Sketch conj95_sketch1 --> Problem  synth_43
Sketch conj15_term_sketch1 --> Problem  synth_8
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj96_sketch1 --> Problem  synth_46
Sketch conj92_sketch4 --> Problem  synth_15
Sketch conj88_term_sketch3 --> Problem  synth_20
Sketch conj47_term_sketch1 --> Problem  synth_9
Sketch conj96_term_sketch1 --> Problem  synth_28
Sketch conj47_sketch1 --> Problem  synth_18
Sketch conj87_term_sketch3 --> Problem  synth_34
Sketch conj84_term_sketch1 --> Problem  synth_29
Sketch conj85_term_sketch0 --> Problem  synth_33
Sketch conj95_term_sketch4 --> Problem  synth_34
Sketch conj127_term_sketch3 --> Problem  synth_34
Sketch conj91_sketch2 --> Problem  synth_41
Sketch conj92_sketch2 --> Problem  synth_5
Sketch conj95_term_sketch3 --> Problem  synth_9
Sketch conj31_term_sketch0 --> Problem  synth_7
Sketch conj96_term_sketch4 --> Problem  synth_20
Sketch conj96_term_sketch5 --> Problem  synth_9
Sketch conj87_term_sketch0 --> Problem  synth_33
Sketch conj83_sketch0 --> Problem  synth_30
Sketch conj63_sketch1 --> Problem  synth_12
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj85_term_sketch2 --> Problem  synth_34
Sketch conj15_sketch2 --> Problem  synth_6
Sketch conj96_term_sketch3 --> Problem  synth_8
Sketch conj127_sketch0 --> Problem  synth_20
Sketch conj87_sketch1 --> Problem  synth_33
Sketch conj92_sketch1 --> Problem  synth_40
Sketch conj81_sketch1 --> Problem  synth_10
Sketch conj87_sketch3 --> Problem  synth_30
Sketch conj127_term_sketch2 --> Problem  synth_9
Sketch conj123_sketch2 --> Problem  synth_15
Sketch conj85_term_sketch1 --> Problem  synth_9
Sketch conj92_term_sketch4 --> Problem  synth_5
Sketch conj84_sketch3 --> Problem  synth_15
Sketch conj11_sketch0 --> Problem  synth_3
Sketch conj27_term_sketch0 --> Problem  synth_4
Sketch conj81_sketch0 --> Problem  synth_24
Sketch conj63_term_sketch2 --> Problem  synth_11
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj84_term_sketch2 --> Problem  synth_15
Sketch conj47_term_sketch3 --> Problem  synth_17
Sketch conj84_sketch0 --> Problem  synth_31
Sketch conj92_term_sketch1 --> Problem  synth_29
Sketch conj95_sketch4 --> Problem  synth_45
Sketch conj96_term_sketch0 --> Problem  synth_7
Sketch conj11_sketch1 --> Problem  synth_1
Sketch conj83_term_sketch2 --> Problem  synth_26
Sketch conj123_sketch1 --> Problem  synth_15
Sketch conj82_term_sketch1 --> Problem  synth_29
Sketch conj31_term_sketch3 --> Problem  synth_11
Sketch conj87_sketch2 --> Problem  synth_38
Sketch conj31_term_sketch1 --> Problem  synth_8
Sketch conj127_sketch2 --> Problem  synth_49
Sketch conj43_sketch0 --> Problem  synth_1
Sketch conj123_term_sketch4 --> Problem  synth_17
Sketch conj27_term_sketch2 --> Problem  synth_5
Sketch conj123_term_sketch3 --> Problem  synth_16
Sketch conj59_sketch2 --> Problem  synth_12
Sketch conj84_term_sketch0 --> Problem  synth_28
Sketch conj82_sketch0 --> Problem  synth_27
Sketch conj91_sketch0 --> Problem  synth_40
Sketch conj91_term_sketch0 --> Problem  synth_25
Sketch conj95_sketch3 --> Problem  synth_44
Sketch conj91_term_sketch2 --> Problem  synth_4
Sketch conj86_sketch1 --> Problem  synth_24
Sketch conj27_sketch2 --> Problem  synth_11
Sketch conj82_sketch1 --> Problem  synth_24
Sketch conj85_sketch2 --> Problem  synth_24
Sketch conj31_sketch2 --> Problem  synth_13
Sketch conj96_sketch2 --> Problem  synth_45
Sketch conj85_sketch1 --> Problem  synth_32
Sketch conj123_term_sketch2 --> Problem  synth_26
Sketch conj88_sketch1 --> Problem  synth_30
Sketch conj82_sketch2 --> Problem  synth_10
Sketch conj31_sketch3 --> Problem  synth_7
Sketch conj86_sketch2 --> Problem  synth_10
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj43_term_sketch0 --> Problem  synth_15
Sketch conj86_term_sketch1 --> Problem  synth_37
Sketch conj87_term_sketch2 --> Problem  synth_9
Sketch conj92_sketch3 --> Problem  synth_15
Sketch conj88_sketch2 --> Problem  synth_20
Sketch conj82_term_sketch0 --> Problem  synth_28
Sketch conj43_sketch1 --> Problem  synth_3
Sketch conj19_sketch0 --> Problem  synth_11
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_20
Sketch conj96_sketch3 --> Problem  synth_20
Sketch conj83_term_sketch0 --> Problem  synth_25
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj96_sketch0 --> Problem  synth_20
Sketch conj59_sketch0 --> Problem  synth_11
Sketch conj47_term_sketch0 --> Problem  synth_20
Sketch conj96_sketch5 --> Problem  synth_47
Sketch conj95_term_sketch1 --> Problem  synth_8
Sketch conj95_term_sketch0 --> Problem  synth_7
Sketch conj63_term_sketch3 --> Problem  synth_21
Sketch conj63_sketch0 --> Problem  synth_11
Sketch conj63_sketch3 --> Problem  synth_12
Sketch conj88_term_sketch0 --> Problem  synth_28
Sketch conj59_term_sketch0 --> Problem  synth_15
Sketch conj59_term_sketch3 --> Problem  synth_17
Sketch conj123_sketch0 --> Problem  synth_26
Sketch conj86_term_sketch0 --> Problem  synth_28
Sketch conj127_sketch1 --> Problem  synth_33
Sketch conj86_term_sketch2 --> Problem  synth_20
Sketch conj87_sketch0 --> Problem  synth_2
Sketch conj88_term_sketch1 --> Problem  synth_37
Sketch conj92_sketch0 --> Problem  synth_42
Sketch conj88_sketch3 --> Problem  synth_2
Sketch conj86_term_sketch3 --> Problem  synth_9
Sketch conj43_term_sketch2 --> Problem  synth_17
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj88_sketch4 --> Problem  synth_30
Sketch conj91_sketch1 --> Problem  synth_5
Sketch conj86_sketch3 --> Problem  synth_36
Sketch conj15_sketch0 --> Problem  synth_1
Sketch conj95_sketch2 --> Problem  synth_7
Sketch conj83_sketch2 --> Problem  synth_2
Sketch conj123_term_sketch0 --> Problem  synth_15
Sketch conj91_term_sketch1 --> Problem  synth_26
Sketch conj47_term_sketch2 --> Problem  synth_21
Sketch conj127_term_sketch1 --> Problem  synth_20
Sketch conj31_sketch1 --> Problem  synth_12
Sketch conj92_term_sketch0 --> Problem  synth_28
Sketch conj31_term_sketch2 --> Problem  synth_9
Sketch conj95_term_sketch2 --> Problem  synth_33
Sketch conj95_sketch0 --> Problem  synth_33
Sketch conj81_term_sketch0 --> Problem  synth_25
Sketch conj47_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 259 seconds

Problem: synth_28
 Succ (Succ x2)
 Succ (Succ Zero)
 Succ x2
 Succ Zero
 x2
 Zero

Problem: synth_17
 Succ (Succ x1)
 Succ (Succ Zero)
 Succ x1
 Succ Zero
 x1
 Zero

Problem: synth_29
 Cons Zero lf5
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_45
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_26
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_9
 Cons Zero l
 drop n Nil
 Cons n Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_30
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf4
 Nil

Problem: synth_11
 Cons Zero lf3
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf3
 Nil

Problem: synth_39
 Succ x1
 Succ Zero
 n
 x2
 x1
 Zero

Problem: synth_1
 Cons (Succ Zero) Nil
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 Cons Zero lf1
 Cons Zero Nil
 lf1
 Nil

Problem: synth_46
 Succ Zero
 n
 lf7
 x2
 x1
 Zero

Problem: synth_15
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_31
 Succ x2
 Succ x1
 Succ Zero
 x2
 x1
 Zero

Problem: synth_14
 Succ (Succ x2)
 Succ (Succ Zero)
 Succ x2
 Succ Zero
 x2
 Zero

Problem: synth_8
 Cons n Nil
 drop lf7 Nil
 Cons lf7 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_34
 Cons n Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_12
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf3
 Nil

Problem: synth_5
 Cons lf7 Nil
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_37
 Cons n Nil
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_50
 Succ Zero
 n
 x2
 x1
 lf6
 Zero

Problem: synth_2
 Cons Zero lf4
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf4
 Nil

Problem: synth_22
 Succ x2
 Succ x1
 Succ Zero
 x2
 x1
 Zero

Problem: synth_20
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_18
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf1
 Nil

Problem: synth_21
 Cons n Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_41
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_49
 drop x1 Nil
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 Nil

Problem: synth_25
 Cons Zero lf5
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_13
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf3
 Nil

Problem: synth_6
 Cons lf7 Nil
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf1
 Nil

Problem: synth_7
 Cons lf7 Nil
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_4
 Cons Zero lf5
 drop lf7 Nil
 Cons lf7 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_38
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 lf4
 Nil

Problem: synth_23
 Succ x1
 Succ Zero
 n
 x2
 x1
 Zero

Problem: synth_27
 Succ (Succ x1)
 Succ (Succ Zero)
 Succ x1
 Succ Zero
 x1
 Zero

Problem: synth_42
 Succ x1
 Succ Zero
 lf7
 x2
 x1
 Zero

Problem: synth_16
 Cons Zero lf5
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_19
 Succ n
 Succ x2
 Succ Zero
 n
 x2
 Zero

Problem: synth_40
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf5
 Nil

Problem: synth_10
 Cons (Succ Zero) Nil
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 Cons Zero lf2
 Cons Zero Nil
 lf2
 Nil

Problem: synth_33
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 l
 Nil

Problem: synth_47
 drop x2 Nil
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 Nil

Problem: synth_24
 Cons Zero lf2
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf2
 Nil

Problem: synth_3
 Cons Zero lf1
 drop x2 Nil
 Cons x2 Nil
 Cons Zero Nil
 lf1
 Nil

Problem: synth_32
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 lf2
 Nil

Problem: synth_48
 Succ lf6
 Succ Zero
 x2
 x1
 lf6
 Zero

Problem: synth_44
 drop x1 Nil
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 Nil

Problem: synth_36
 Cons x2 Nil
 drop x1 Nil
 Cons x1 Nil
 Cons Zero Nil
 lf2
 Nil

Problem: synth_35
 Succ n
 Succ x1
 Succ Zero
 n
 x1
 Zero

Problem: synth_43
 Cons x1 Nil
 drop lf6 Nil
 Cons lf6 Nil
 Cons Zero Nil
 l
 Nil

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 260 seconds
Lemmas:
Lemma candidate_1: forall (x2 : natural) (n : natural) (l : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l)))   (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_2: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_3: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_9: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_10: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_11: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_12: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_13: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_14: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_15: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero lf1)) lf1.
Lemma candidate_16: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop x2 Nil)) lf1.
Lemma candidate_17: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons x2 Nil)) lf1.
Lemma candidate_18: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero Nil)) lf1.
Lemma candidate_19: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (lf1)) lf1.
Lemma candidate_20: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Nil)) lf1.
Lemma candidate_21: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_22: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_23: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_24: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_25: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_26: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_27: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero lf5).
Lemma candidate_28: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (drop lf7 Nil).
Lemma candidate_29: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons lf7 Nil).
Lemma candidate_30: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero Nil).
Lemma candidate_31: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (lf5).
Lemma candidate_32: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Nil).
Lemma candidate_33: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_34: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_35: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_36: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_37: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_38: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_39: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_40: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_41: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_42: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_43: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_44: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_45: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero lf1)) lf1.
Lemma candidate_46: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop x2 Nil)) lf1.
Lemma candidate_47: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons x2 Nil)) lf1.
Lemma candidate_48: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero Nil)) lf1.
Lemma candidate_49: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (lf1)) lf1.
Lemma candidate_50: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Nil)) lf1.
Lemma candidate_51: forall (lf7 : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop lf7 (Cons lf7 Nil))) lf1.
Lemma candidate_52: forall (lf7 : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop lf7 (drop x2 Nil))) lf1.
Lemma candidate_53: forall (lf7 : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop lf7 (Cons x2 Nil))) lf1.
Lemma candidate_54: forall (lf7 : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop lf7 (Cons Zero Nil))) lf1.
Lemma candidate_55: forall (lf7 : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop lf7 (lf1))) lf1.
Lemma candidate_56: forall (lf7 : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop lf7 (Nil))) lf1.
Lemma candidate_57: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_58: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_59: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_60: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_61: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_62: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_63: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons n Nil).
Lemma candidate_64: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (drop lf7 Nil).
Lemma candidate_65: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons lf7 Nil).
Lemma candidate_66: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons Zero Nil).
Lemma candidate_67: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (l).
Lemma candidate_68: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Nil).
Lemma candidate_69: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_70: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_71: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_72: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_73: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_74: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_75: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_76: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_77: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_78: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_79: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_80: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_81: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero lf3).
Lemma candidate_82: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (drop x1 Nil).
Lemma candidate_83: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons x1 Nil).
Lemma candidate_84: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero Nil).
Lemma candidate_85: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (lf3).
Lemma candidate_86: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Nil).
Lemma candidate_87: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero lf3) (drop x1 lf3).
Lemma candidate_88: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 lf3).
Lemma candidate_89: forall (lf3 : lst) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 lf3).
Lemma candidate_90: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 lf3).
Lemma candidate_91: forall (lf3 : lst) (x1 : natural), @eq lst (lf3) (drop x1 lf3).
Lemma candidate_92: forall (lf3 : lst) (x1 : natural), @eq lst (Nil) (drop x1 lf3).
Lemma candidate_93: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_94: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_95: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_96: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_97: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_98: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_99: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_100: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_101: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_102: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_103: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_104: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_105: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero lf3).
Lemma candidate_106: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (drop x1 Nil).
Lemma candidate_107: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons x1 Nil).
Lemma candidate_108: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero Nil).
Lemma candidate_109: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (lf3).
Lemma candidate_110: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Nil).
Lemma candidate_111: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 lf3).
Lemma candidate_112: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf3).
Lemma candidate_113: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 lf3).
Lemma candidate_114: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 lf3).
Lemma candidate_115: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (lf3)) (drop x1 lf3).
Lemma candidate_116: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Nil)) (drop x1 lf3).
Lemma candidate_117: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_118: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_119: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_120: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_121: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_122: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_123: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero lf3) (drop x1 lf3).
Lemma candidate_124: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 lf3).
Lemma candidate_125: forall (lf3 : lst) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 lf3).
Lemma candidate_126: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 lf3).
Lemma candidate_127: forall (lf3 : lst) (x1 : natural), @eq lst (lf3) (drop x1 lf3).
Lemma candidate_128: forall (lf3 : lst) (x1 : natural), @eq lst (Nil) (drop x1 lf3).
Lemma candidate_129: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero lf5).
Lemma candidate_130: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (drop lf7 Nil).
Lemma candidate_131: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons lf7 Nil).
Lemma candidate_132: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero Nil).
Lemma candidate_133: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (lf5).
Lemma candidate_134: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Nil).
Lemma candidate_135: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero lf3).
Lemma candidate_136: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (drop x1 Nil).
Lemma candidate_137: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons x1 Nil).
Lemma candidate_138: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero Nil).
Lemma candidate_139: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (lf3).
Lemma candidate_140: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Nil).
Lemma candidate_141: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_142: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_143: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_144: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_145: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_146: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_147: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero lf3) (drop x1 lf3).
Lemma candidate_148: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 lf3).
Lemma candidate_149: forall (lf3 : lst) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 lf3).
Lemma candidate_150: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 lf3).
Lemma candidate_151: forall (lf3 : lst) (x1 : natural), @eq lst (lf3) (drop x1 lf3).
Lemma candidate_152: forall (lf3 : lst) (x1 : natural), @eq lst (Nil) (drop x1 lf3).
Lemma candidate_153: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 lf3).
Lemma candidate_154: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf3).
Lemma candidate_155: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 lf3).
Lemma candidate_156: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 lf3).
Lemma candidate_157: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (lf3)) (drop x1 lf3).
Lemma candidate_158: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Nil)) (drop x1 lf3).
Lemma candidate_159: forall (lf3 : lst) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons x2 Nil))) (drop x1 lf3).
Lemma candidate_160: forall (lf3 : lst) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (drop x1 Nil))) (drop x1 lf3).
Lemma candidate_161: forall (lf3 : lst) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons x1 Nil))) (drop x1 lf3).
Lemma candidate_162: forall (lf3 : lst) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons Zero Nil))) (drop x1 lf3).
Lemma candidate_163: forall (lf3 : lst) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (lf3))) (drop x1 lf3).
Lemma candidate_164: forall (lf3 : lst) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Nil))) (drop x1 lf3).
Lemma candidate_165: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_166: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_167: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_168: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_169: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_170: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_171: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_172: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_173: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_174: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_175: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_176: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_177: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons n Nil).
Lemma candidate_178: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (drop lf7 Nil).
Lemma candidate_179: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons lf7 Nil).
Lemma candidate_180: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons Zero Nil).
Lemma candidate_181: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (l).
Lemma candidate_182: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Nil).
Lemma candidate_183: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_184: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_185: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_186: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_187: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_188: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_189: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero lf3).
Lemma candidate_190: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (drop x1 Nil).
Lemma candidate_191: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons x1 Nil).
Lemma candidate_192: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero Nil).
Lemma candidate_193: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (lf3).
Lemma candidate_194: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Nil).
Lemma candidate_195: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_196: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_197: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_198: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_199: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_200: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_201: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero lf1)) lf1.
Lemma candidate_202: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop x2 Nil)) lf1.
Lemma candidate_203: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons x2 Nil)) lf1.
Lemma candidate_204: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero Nil)) lf1.
Lemma candidate_205: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (lf1)) lf1.
Lemma candidate_206: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Nil)) lf1.
Lemma candidate_207: forall (x2 : natural) (lf1 : lst) (lf5 : lst), @eq lst (drop x2 (drop (Succ (Succ x2)) lf5)) lf1.
Lemma candidate_208: forall (x2 : natural) (lf1 : lst) (lf5 : lst), @eq lst (drop x2 (drop (Succ (Succ Zero)) lf5)) lf1.
Lemma candidate_209: forall (x2 : natural) (lf1 : lst) (lf5 : lst), @eq lst (drop x2 (drop (Succ x2) lf5)) lf1.
Lemma candidate_210: forall (x2 : natural) (lf1 : lst) (lf5 : lst), @eq lst (drop x2 (drop (Succ Zero) lf5)) lf1.
Lemma candidate_211: forall (x2 : natural) (lf1 : lst) (lf5 : lst), @eq lst (drop x2 (drop (x2) lf5)) lf1.
Lemma candidate_212: forall (x2 : natural) (lf1 : lst) (lf5 : lst), @eq lst (drop x2 (drop (Zero) lf5)) lf1.
Lemma candidate_213: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x2 Nil).
Lemma candidate_214: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 Nil).
Lemma candidate_215: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x1 Nil).
Lemma candidate_216: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons Zero Nil).
Lemma candidate_217: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (lf5).
Lemma candidate_218: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Nil).
Lemma candidate_219: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons Zero lf5).
Lemma candidate_220: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (drop x1 Nil).
Lemma candidate_221: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons x1 Nil).
Lemma candidate_222: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons Zero Nil).
Lemma candidate_223: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (lf5).
Lemma candidate_224: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Nil).
Lemma candidate_225: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ x1)).
Lemma candidate_226: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ Zero)).
Lemma candidate_227: forall (x1 : natural), @eq natural (Succ x1) (Succ x1).
Lemma candidate_228: forall (x1 : natural), @eq natural (Succ x1) (Succ Zero).
Lemma candidate_229: forall (x1 : natural), @eq natural (Succ x1) (x1).
Lemma candidate_230: forall (x1 : natural), @eq natural (Succ x1) (Zero).
Lemma candidate_231: forall (lf1 : lst), @eq lst (Cons (Succ Zero) Nil) lf1.
Lemma candidate_232: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_233: forall (lf1 : lst), @eq lst (Cons Zero lf1) lf1.
Lemma candidate_234: forall (lf1 : lst), @eq lst (Cons Zero Nil) lf1.
Lemma candidate_235: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_236: forall (lf1 : lst), @eq lst (Nil) lf1.
Lemma candidate_237: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons x2 Nil))) lf1.
Lemma candidate_238: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (drop x1 Nil))) lf1.
Lemma candidate_239: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons x1 Nil))) lf1.
Lemma candidate_240: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons Zero Nil))) lf1.
Lemma candidate_241: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (lf1))) lf1.
Lemma candidate_242: forall (x2 : natural) (lf1 : lst) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Nil))) lf1.
Lemma candidate_243: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero lf1)) lf1.
Lemma candidate_244: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop x2 Nil)) lf1.
Lemma candidate_245: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons x2 Nil)) lf1.
Lemma candidate_246: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Cons Zero Nil)) lf1.
Lemma candidate_247: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (lf1)) lf1.
Lemma candidate_248: forall (x2 : natural) (lf1 : lst), @eq lst (drop x2 (Nil)) lf1.
Lemma candidate_249: forall (l : lst) (n : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop (Succ n) (Cons n l))) lf1.
Lemma candidate_250: forall (l : lst) (n : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop (Succ x2) (Cons n l))) lf1.
Lemma candidate_251: forall (l : lst) (n : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop (Succ Zero) (Cons n l))) lf1.
Lemma candidate_252: forall (l : lst) (n : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop (n) (Cons n l))) lf1.
Lemma candidate_253: forall (l : lst) (n : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop (x2) (Cons n l))) lf1.
Lemma candidate_254: forall (l : lst) (n : natural) (x2 : natural) (lf1 : lst), @eq lst (drop x2 (drop (Zero) (Cons n l))) lf1.
Lemma candidate_255: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x2 Nil).
Lemma candidate_256: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 Nil).
Lemma candidate_257: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x1 Nil).
Lemma candidate_258: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons Zero Nil).
Lemma candidate_259: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (l).
Lemma candidate_260: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Nil).
Lemma candidate_261: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_262: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_263: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_264: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_265: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_266: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_267: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons n Nil).
Lemma candidate_268: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (drop x1 Nil).
Lemma candidate_269: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons x1 Nil).
Lemma candidate_270: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons Zero Nil).
Lemma candidate_271: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (l).
Lemma candidate_272: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Nil).
Lemma candidate_273: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ x1)).
Lemma candidate_274: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ Zero)).
Lemma candidate_275: forall (x1 : natural), @eq natural (Succ x1) (Succ x1).
Lemma candidate_276: forall (x1 : natural), @eq natural (Succ x1) (Succ Zero).
Lemma candidate_277: forall (x1 : natural), @eq natural (Succ x1) (x1).
Lemma candidate_278: forall (x1 : natural), @eq natural (Succ x1) (Zero).
Lemma candidate_279: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero lf3) (drop x1 lf3).
Lemma candidate_280: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 lf3).
Lemma candidate_281: forall (lf3 : lst) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 lf3).
Lemma candidate_282: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 lf3).
Lemma candidate_283: forall (lf3 : lst) (x1 : natural), @eq lst (lf3) (drop x1 lf3).
Lemma candidate_284: forall (lf3 : lst) (x1 : natural), @eq lst (Nil) (drop x1 lf3).
Lemma candidate_285: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x2 Nil).
Lemma candidate_286: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 Nil).
Lemma candidate_287: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x1 Nil).
Lemma candidate_288: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons Zero Nil).
Lemma candidate_289: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (lf5).
Lemma candidate_290: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Nil).
Lemma candidate_291: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 lf3).
Lemma candidate_292: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf3).
Lemma candidate_293: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 lf3).
Lemma candidate_294: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 lf3).
Lemma candidate_295: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (lf3)) (drop x1 lf3).
Lemma candidate_296: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Nil)) (drop x1 lf3).
Lemma candidate_297: forall (lf3 : lst) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x2) lf5)) (drop x1 lf3).
Lemma candidate_298: forall (lf3 : lst) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 lf3).
Lemma candidate_299: forall (lf3 : lst) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ Zero) lf5)) (drop x1 lf3).
Lemma candidate_300: forall (lf3 : lst) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (x2) lf5)) (drop x1 lf3).
Lemma candidate_301: forall (lf3 : lst) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (x1) lf5)) (drop x1 lf3).
Lemma candidate_302: forall (lf3 : lst) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Zero) lf5)) (drop x1 lf3).
Lemma candidate_303: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x2 Nil).
Lemma candidate_304: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 Nil).
Lemma candidate_305: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x1 Nil).
Lemma candidate_306: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons Zero Nil).
Lemma candidate_307: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (lf5).
Lemma candidate_308: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Nil).
Lemma candidate_309: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero lf3).
Lemma candidate_310: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (drop x1 Nil).
Lemma candidate_311: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons x1 Nil).
Lemma candidate_312: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero Nil).
Lemma candidate_313: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (lf3).
Lemma candidate_314: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Nil).
Lemma candidate_315: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons Zero lf5).
Lemma candidate_316: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (drop x1 Nil).
Lemma candidate_317: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons x1 Nil).
Lemma candidate_318: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons Zero Nil).
Lemma candidate_319: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (lf5).
Lemma candidate_320: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Nil).
Lemma candidate_321: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ x1)).
Lemma candidate_322: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ Zero)).
Lemma candidate_323: forall (x1 : natural), @eq natural (Succ x1) (Succ x1).
Lemma candidate_324: forall (x1 : natural), @eq natural (Succ x1) (Succ Zero).
Lemma candidate_325: forall (x1 : natural), @eq natural (Succ x1) (x1).
Lemma candidate_326: forall (x1 : natural), @eq natural (Succ x1) (Zero).
Lemma candidate_327: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero lf3) (drop x1 lf3).
Lemma candidate_328: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 lf3).
Lemma candidate_329: forall (lf3 : lst) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 lf3).
Lemma candidate_330: forall (lf3 : lst) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 lf3).
Lemma candidate_331: forall (lf3 : lst) (x1 : natural), @eq lst (lf3) (drop x1 lf3).
Lemma candidate_332: forall (lf3 : lst) (x1 : natural), @eq lst (Nil) (drop x1 lf3).
Lemma candidate_333: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons x2 Nil))) (drop x1 lf3).
Lemma candidate_334: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (drop x1 Nil))) (drop x1 lf3).
Lemma candidate_335: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons x1 Nil))) (drop x1 lf3).
Lemma candidate_336: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons Zero Nil))) (drop x1 lf3).
Lemma candidate_337: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (lf3))) (drop x1 lf3).
Lemma candidate_338: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Nil))) (drop x1 lf3).
Lemma candidate_339: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x2 Nil).
Lemma candidate_340: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 Nil).
Lemma candidate_341: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x1 Nil).
Lemma candidate_342: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons Zero Nil).
Lemma candidate_343: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (l).
Lemma candidate_344: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Nil).
Lemma candidate_345: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 lf3).
Lemma candidate_346: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 lf3).
Lemma candidate_347: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 lf3).
Lemma candidate_348: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 lf3).
Lemma candidate_349: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (lf3)) (drop x1 lf3).
Lemma candidate_350: forall (lf3 : lst) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Nil)) (drop x1 lf3).
Lemma candidate_351: forall (lf3 : lst) (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 lf3).
Lemma candidate_352: forall (lf3 : lst) (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ Zero) (Cons n l))) (drop x1 lf3).
Lemma candidate_353: forall (lf3 : lst) (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (n) (Cons n l))) (drop x1 lf3).
Lemma candidate_354: forall (lf3 : lst) (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (x2) (Cons n l))) (drop x1 lf3).
Lemma candidate_355: forall (lf3 : lst) (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (x1) (Cons n l))) (drop x1 lf3).
Lemma candidate_356: forall (lf3 : lst) (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Zero) (Cons n l))) (drop x1 lf3).
Lemma candidate_357: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x2 Nil).
Lemma candidate_358: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 Nil).
Lemma candidate_359: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x1 Nil).
Lemma candidate_360: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons Zero Nil).
Lemma candidate_361: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (l).
Lemma candidate_362: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Nil).
Lemma candidate_363: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_364: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_365: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_366: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_367: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_368: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_369: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero lf3).
Lemma candidate_370: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (drop x1 Nil).
Lemma candidate_371: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons x1 Nil).
Lemma candidate_372: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Cons Zero Nil).
Lemma candidate_373: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (lf3).
Lemma candidate_374: forall (lf3 : lst) (x1 : natural), @eq lst (drop x1 lf3) (Nil).
Lemma candidate_375: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons n Nil).
Lemma candidate_376: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (drop x1 Nil).
Lemma candidate_377: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons x1 Nil).
Lemma candidate_378: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons Zero Nil).
Lemma candidate_379: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (l).
Lemma candidate_380: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Nil).
Lemma candidate_381: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ x1)).
Lemma candidate_382: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ Zero)).
Lemma candidate_383: forall (x1 : natural), @eq natural (Succ x1) (Succ x1).
Lemma candidate_384: forall (x1 : natural), @eq natural (Succ x1) (Succ Zero).
Lemma candidate_385: forall (x1 : natural), @eq natural (Succ x1) (x1).
Lemma candidate_386: forall (x1 : natural), @eq natural (Succ x1) (Zero).
Lemma candidate_387: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero lf2)).
Lemma candidate_388: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x1 Nil)).
Lemma candidate_389: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons x1 Nil)).
Lemma candidate_390: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero Nil)).
Lemma candidate_391: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (lf2)).
Lemma candidate_392: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Nil)).
Lemma candidate_393: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_394: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_395: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_396: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_397: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_398: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_399: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero lf5).
Lemma candidate_400: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (drop lf6 Nil).
Lemma candidate_401: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons lf6 Nil).
Lemma candidate_402: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero Nil).
Lemma candidate_403: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (lf5).
Lemma candidate_404: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Nil).
Lemma candidate_405: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons x1 Nil).
Lemma candidate_406: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (drop lf6 Nil).
Lemma candidate_407: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons lf6 Nil).
Lemma candidate_408: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons Zero Nil).
Lemma candidate_409: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (lf5).
Lemma candidate_410: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Nil).
Lemma candidate_411: forall (x1 : natural) (lf5 : lst) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ (Succ x1)) lf5)).
Lemma candidate_412: forall (x1 : natural) (lf5 : lst) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ (Succ Zero)) lf5)).
Lemma candidate_413: forall (x1 : natural) (lf5 : lst) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x1) lf5)).
Lemma candidate_414: forall (x1 : natural) (lf5 : lst) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ Zero) lf5)).
Lemma candidate_415: forall (x1 : natural) (lf5 : lst) (lf2 : lst), @eq lst lf2 (drop x1 (drop (x1) lf5)).
Lemma candidate_416: forall (x1 : natural) (lf5 : lst) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Zero) lf5)).
Lemma candidate_417: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero lf2)).
Lemma candidate_418: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x1 Nil)).
Lemma candidate_419: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons x1 Nil)).
Lemma candidate_420: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero Nil)).
Lemma candidate_421: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (lf2)).
Lemma candidate_422: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Nil)).
Lemma candidate_423: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_424: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_425: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_426: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_427: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_428: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_429: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ x2)).
Lemma candidate_430: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ Zero)).
Lemma candidate_431: forall (x2 : natural), @eq natural (Succ x2) (Succ x2).
Lemma candidate_432: forall (x2 : natural), @eq natural (Succ x2) (Succ Zero).
Lemma candidate_433: forall (x2 : natural), @eq natural (Succ x2) (x2).
Lemma candidate_434: forall (x2 : natural), @eq natural (Succ x2) (Zero).
Lemma candidate_435: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons Zero lf5).
Lemma candidate_436: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (drop x2 Nil).
Lemma candidate_437: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons x2 Nil).
Lemma candidate_438: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons Zero Nil).
Lemma candidate_439: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (lf5).
Lemma candidate_440: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Nil).
Lemma candidate_441: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons x2 Nil).
Lemma candidate_442: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (drop x1 Nil).
Lemma candidate_443: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons x1 Nil).
Lemma candidate_444: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons Zero Nil).
Lemma candidate_445: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (lf5).
Lemma candidate_446: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Nil).
Lemma candidate_447: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x2 Nil)).
Lemma candidate_448: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop x1 Nil)).
Lemma candidate_449: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x1 Nil)).
Lemma candidate_450: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons Zero Nil)).
Lemma candidate_451: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (lf4)).
Lemma candidate_452: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Nil)).
Lemma candidate_453: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_454: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_455: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons lf6 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_456: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_457: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (lf5) (drop x1 (drop lf6 lf5)).
Lemma candidate_458: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_459: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_460: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_461: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_462: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_463: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_464: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_465: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero lf5).
Lemma candidate_466: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (drop lf6 Nil).
Lemma candidate_467: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons lf6 Nil).
Lemma candidate_468: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero Nil).
Lemma candidate_469: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (lf5).
Lemma candidate_470: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Nil).
Lemma candidate_471: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_472: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_473: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_474: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_475: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_476: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_477: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons x1 Nil).
Lemma candidate_478: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (drop lf6 Nil).
Lemma candidate_479: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons lf6 Nil).
Lemma candidate_480: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons Zero Nil).
Lemma candidate_481: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (lf5).
Lemma candidate_482: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Nil).
Lemma candidate_483: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf5 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_484: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf5 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x1) lf5)).
Lemma candidate_485: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf5 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ Zero) lf5)).
Lemma candidate_486: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf5 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (x2) lf5)).
Lemma candidate_487: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf5 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (x1) lf5)).
Lemma candidate_488: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf5 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Zero) lf5)).
Lemma candidate_489: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x2 Nil)).
Lemma candidate_490: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop x1 Nil)).
Lemma candidate_491: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x1 Nil)).
Lemma candidate_492: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons Zero Nil)).
Lemma candidate_493: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (lf4)).
Lemma candidate_494: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Nil)).
Lemma candidate_495: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_496: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_497: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_498: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_499: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_500: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_501: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons x2 Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_502: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_503: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons x1 Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_504: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons Zero Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_505: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (lf5) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_506: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_507: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ x2)).
Lemma candidate_508: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ Zero)).
Lemma candidate_509: forall (x2 : natural), @eq natural (Succ x2) (Succ x2).
Lemma candidate_510: forall (x2 : natural), @eq natural (Succ x2) (Succ Zero).
Lemma candidate_511: forall (x2 : natural), @eq natural (Succ x2) (x2).
Lemma candidate_512: forall (x2 : natural), @eq natural (Succ x2) (Zero).
Lemma candidate_513: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons Zero lf5).
Lemma candidate_514: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (drop x2 Nil).
Lemma candidate_515: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons x2 Nil).
Lemma candidate_516: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons Zero Nil).
Lemma candidate_517: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (lf5).
Lemma candidate_518: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Nil).
Lemma candidate_519: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons x2 Nil).
Lemma candidate_520: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (drop x1 Nil).
Lemma candidate_521: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons x1 Nil).
Lemma candidate_522: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons Zero Nil).
Lemma candidate_523: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (lf5).
Lemma candidate_524: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Nil).
Lemma candidate_525: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_526: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_527: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_528: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_529: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_530: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_531: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_532: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_533: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_534: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_535: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_536: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_537: forall (x1 : natural) (lf2 : lst) (lf6 : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons x1 Nil))).
Lemma candidate_538: forall (x1 : natural) (lf2 : lst) (lf6 : natural), @eq lst lf2 (drop x1 (drop lf6 (drop lf6 Nil))).
Lemma candidate_539: forall (x1 : natural) (lf2 : lst) (lf6 : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons lf6 Nil))).
Lemma candidate_540: forall (x1 : natural) (lf2 : lst) (lf6 : natural), @eq lst lf2 (drop x1 (drop lf6 (Cons Zero Nil))).
Lemma candidate_541: forall (x1 : natural) (lf2 : lst) (lf6 : natural), @eq lst lf2 (drop x1 (drop lf6 (lf2))).
Lemma candidate_542: forall (x1 : natural) (lf2 : lst) (lf6 : natural), @eq lst lf2 (drop x1 (drop lf6 (Nil))).
Lemma candidate_543: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero lf2)).
Lemma candidate_544: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x1 Nil)).
Lemma candidate_545: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons x1 Nil)).
Lemma candidate_546: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero Nil)).
Lemma candidate_547: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (lf2)).
Lemma candidate_548: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Nil)).
Lemma candidate_549: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons x1 Nil).
Lemma candidate_550: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (drop lf6 Nil).
Lemma candidate_551: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons lf6 Nil).
Lemma candidate_552: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons Zero Nil).
Lemma candidate_553: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (l).
Lemma candidate_554: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Nil).
Lemma candidate_555: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_556: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_557: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_558: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_559: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_560: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_561: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons n Nil).
Lemma candidate_562: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (drop lf6 Nil).
Lemma candidate_563: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons lf6 Nil).
Lemma candidate_564: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons Zero Nil).
Lemma candidate_565: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (l).
Lemma candidate_566: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Nil).
Lemma candidate_567: forall (l : lst) (n : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ n) (Cons n l))).
Lemma candidate_568: forall (l : lst) (n : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x1) (Cons n l))).
Lemma candidate_569: forall (l : lst) (n : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ Zero) (Cons n l))).
Lemma candidate_570: forall (l : lst) (n : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (n) (Cons n l))).
Lemma candidate_571: forall (l : lst) (n : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (x1) (Cons n l))).
Lemma candidate_572: forall (l : lst) (n : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Zero) (Cons n l))).
Lemma candidate_573: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero lf2)).
Lemma candidate_574: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop x1 Nil)).
Lemma candidate_575: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons x1 Nil)).
Lemma candidate_576: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Cons Zero Nil)).
Lemma candidate_577: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (lf2)).
Lemma candidate_578: forall (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (Nil)).
Lemma candidate_579: forall (lf2 : lst), @eq lst lf2 (Cons (Succ Zero) Nil).
Lemma candidate_580: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_581: forall (lf2 : lst), @eq lst lf2 (Cons Zero lf2).
Lemma candidate_582: forall (lf2 : lst), @eq lst lf2 (Cons Zero Nil).
Lemma candidate_583: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_584: forall (lf2 : lst), @eq lst lf2 (Nil).
Lemma candidate_585: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons x2 Nil))).
Lemma candidate_586: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x2) (drop x1 Nil))).
Lemma candidate_587: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons x1 Nil))).
Lemma candidate_588: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x2) (Cons Zero Nil))).
Lemma candidate_589: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x2) (lf2))).
Lemma candidate_590: forall (x2 : natural) (x1 : natural) (lf2 : lst), @eq lst lf2 (drop x1 (drop (Succ x2) (Nil))).
Lemma candidate_591: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ x2)).
Lemma candidate_592: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ Zero)).
Lemma candidate_593: forall (x2 : natural), @eq natural (Succ x2) (Succ x2).
Lemma candidate_594: forall (x2 : natural), @eq natural (Succ x2) (Succ Zero).
Lemma candidate_595: forall (x2 : natural), @eq natural (Succ x2) (x2).
Lemma candidate_596: forall (x2 : natural), @eq natural (Succ x2) (Zero).
Lemma candidate_597: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons n Nil).
Lemma candidate_598: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (drop x2 Nil).
Lemma candidate_599: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons x2 Nil).
Lemma candidate_600: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons Zero Nil).
Lemma candidate_601: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (l).
Lemma candidate_602: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Nil).
Lemma candidate_603: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons x2 Nil).
Lemma candidate_604: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (drop x1 Nil).
Lemma candidate_605: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons x1 Nil).
Lemma candidate_606: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons Zero Nil).
Lemma candidate_607: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (l).
Lemma candidate_608: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Nil).
Lemma candidate_609: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_610: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_611: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_612: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_613: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_614: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_615: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_616: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_617: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_618: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_619: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_620: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_621: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_622: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop lf6 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_623: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons lf6 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_624: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_625: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (l) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_626: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_627: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf6 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons x1 Nil))).
Lemma candidate_628: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf6 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (drop lf6 Nil))).
Lemma candidate_629: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf6 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons lf6 Nil))).
Lemma candidate_630: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf6 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Cons Zero Nil))).
Lemma candidate_631: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf6 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (lf4))).
Lemma candidate_632: forall (x2 : natural) (x1 : natural) (lf4 : lst) (lf6 : natural), @eq lst (drop x2 lf4) (drop x1 (drop lf6 (Nil))).
Lemma candidate_633: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x2 Nil)).
Lemma candidate_634: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop x1 Nil)).
Lemma candidate_635: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x1 Nil)).
Lemma candidate_636: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons Zero Nil)).
Lemma candidate_637: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (lf4)).
Lemma candidate_638: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Nil)).
Lemma candidate_639: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons x1 Nil).
Lemma candidate_640: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (drop lf6 Nil).
Lemma candidate_641: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons lf6 Nil).
Lemma candidate_642: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons Zero Nil).
Lemma candidate_643: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (l).
Lemma candidate_644: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Nil).
Lemma candidate_645: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_646: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_647: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_648: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_649: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_650: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_651: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_652: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_653: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_654: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_655: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_656: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_657: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons n Nil).
Lemma candidate_658: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (drop lf6 Nil).
Lemma candidate_659: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons lf6 Nil).
Lemma candidate_660: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons Zero Nil).
Lemma candidate_661: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (l).
Lemma candidate_662: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Nil).
Lemma candidate_663: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x1) (Cons n l))).
Lemma candidate_664: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ Zero) (Cons n l))).
Lemma candidate_665: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (n) (Cons n l))).
Lemma candidate_666: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (x2) (Cons n l))).
Lemma candidate_667: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (x1) (Cons n l))).
Lemma candidate_668: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Zero) (Cons n l))).
Lemma candidate_669: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x2 Nil)).
Lemma candidate_670: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop x1 Nil)).
Lemma candidate_671: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons x1 Nil)).
Lemma candidate_672: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Cons Zero Nil)).
Lemma candidate_673: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (lf4)).
Lemma candidate_674: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (Nil)).
Lemma candidate_675: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Cons x2 Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_676: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_677: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_678: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_679: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (l) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_680: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_681: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_682: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_683: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_684: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_685: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_686: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_687: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons x2 Nil))).
Lemma candidate_688: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (drop x1 Nil))).
Lemma candidate_689: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons x1 Nil))).
Lemma candidate_690: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Cons Zero Nil))).
Lemma candidate_691: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (lf4))).
Lemma candidate_692: forall (x2 : natural) (x1 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x1 (drop (Succ x2) (Nil))).
Lemma candidate_693: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ x2)).
Lemma candidate_694: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ Zero)).
Lemma candidate_695: forall (x2 : natural), @eq natural (Succ x2) (Succ x2).
Lemma candidate_696: forall (x2 : natural), @eq natural (Succ x2) (Succ Zero).
Lemma candidate_697: forall (x2 : natural), @eq natural (Succ x2) (x2).
Lemma candidate_698: forall (x2 : natural), @eq natural (Succ x2) (Zero).
Lemma candidate_699: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons n Nil).
Lemma candidate_700: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (drop x2 Nil).
Lemma candidate_701: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons x2 Nil).
Lemma candidate_702: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons Zero Nil).
Lemma candidate_703: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (l).
Lemma candidate_704: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Nil).
Lemma candidate_705: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero lf4).
Lemma candidate_706: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (drop x2 Nil).
Lemma candidate_707: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons x2 Nil).
Lemma candidate_708: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Cons Zero Nil).
Lemma candidate_709: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (lf4).
Lemma candidate_710: forall (x2 : natural) (lf4 : lst), @eq lst (drop x2 lf4) (Nil).
Lemma candidate_711: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons x2 Nil).
Lemma candidate_712: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (drop x1 Nil).
Lemma candidate_713: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons x1 Nil).
Lemma candidate_714: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons Zero Nil).
Lemma candidate_715: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (l).
Lemma candidate_716: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Nil).
Lemma candidate_717: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_718: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_719: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_720: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_721: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_722: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_723: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Cons x2 Nil)).
Lemma candidate_724: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop x1 Nil)).
Lemma candidate_725: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Cons x1 Nil)).
Lemma candidate_726: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Cons Zero Nil)).
Lemma candidate_727: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (lf5)).
Lemma candidate_728: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Nil)).
Lemma candidate_729: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_730: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_731: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_732: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_733: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_734: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_735: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_736: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop lf6 Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_737: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Cons lf6 Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_738: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_739: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_740: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_741: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_742: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_743: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons lf6 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_744: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_745: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (lf5) (drop x1 (drop lf6 lf5)).
Lemma candidate_746: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_747: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero lf5).
Lemma candidate_748: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (drop lf6 Nil).
Lemma candidate_749: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons lf6 Nil).
Lemma candidate_750: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero Nil).
Lemma candidate_751: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (lf5).
Lemma candidate_752: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Nil).
Lemma candidate_753: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons x1 Nil).
Lemma candidate_754: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (drop lf6 Nil).
Lemma candidate_755: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons lf6 Nil).
Lemma candidate_756: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons Zero Nil).
Lemma candidate_757: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (lf5).
Lemma candidate_758: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Nil).
Lemma candidate_759: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero lf5).
Lemma candidate_760: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (drop lf7 Nil).
Lemma candidate_761: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons lf7 Nil).
Lemma candidate_762: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero Nil).
Lemma candidate_763: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (lf5).
Lemma candidate_764: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Nil).
Lemma candidate_765: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_766: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_767: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_768: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_769: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_770: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_771: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Succ x1) lf5)).
Lemma candidate_772: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Succ Zero) lf5)).
Lemma candidate_773: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (lf7) lf5)).
Lemma candidate_774: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (x2) lf5)).
Lemma candidate_775: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (x1) lf5)).
Lemma candidate_776: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop (Zero) lf5)).
Lemma candidate_777: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Cons x2 Nil)).
Lemma candidate_778: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (drop x1 Nil)).
Lemma candidate_779: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Cons x1 Nil)).
Lemma candidate_780: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Cons Zero Nil)).
Lemma candidate_781: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (lf5)).
Lemma candidate_782: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x1 (Nil)).
Lemma candidate_783: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_784: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_785: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_786: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_787: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_788: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_789: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_790: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_791: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_792: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_793: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_794: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (Nil)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_795: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons x2 Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_796: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_797: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons x1 Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_798: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Cons Zero Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_799: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (lf5) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_800: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (Nil) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_801: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ x2)).
Lemma candidate_802: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ Zero)).
Lemma candidate_803: forall (x2 : natural), @eq natural (Succ x2) (Succ x2).
Lemma candidate_804: forall (x2 : natural), @eq natural (Succ x2) (Succ Zero).
Lemma candidate_805: forall (x2 : natural), @eq natural (Succ x2) (x2).
Lemma candidate_806: forall (x2 : natural), @eq natural (Succ x2) (Zero).
Lemma candidate_807: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons Zero lf5).
Lemma candidate_808: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (drop x2 Nil).
Lemma candidate_809: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons x2 Nil).
Lemma candidate_810: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Cons Zero Nil).
Lemma candidate_811: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (lf5).
Lemma candidate_812: forall (x2 : natural) (lf5 : lst), @eq lst (drop (Succ x2) lf5) (Nil).
Lemma candidate_813: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons x2 Nil).
Lemma candidate_814: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (drop x1 Nil).
Lemma candidate_815: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons x1 Nil).
Lemma candidate_816: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Cons Zero Nil).
Lemma candidate_817: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (lf5).
Lemma candidate_818: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x1 (drop (Succ x2) lf5)) (Nil).
Lemma candidate_819: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero lf5).
Lemma candidate_820: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (drop lf7 Nil).
Lemma candidate_821: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons lf7 Nil).
Lemma candidate_822: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Cons Zero Nil).
Lemma candidate_823: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (lf5).
Lemma candidate_824: forall (lf7 : natural) (lf5 : lst), @eq lst (drop lf7 lf5) (Nil).
Lemma candidate_825: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons lf7 Nil).
Lemma candidate_826: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (drop x2 Nil).
Lemma candidate_827: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons x2 Nil).
Lemma candidate_828: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Cons Zero Nil).
Lemma candidate_829: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (lf5).
Lemma candidate_830: forall (lf7 : natural) (x2 : natural) (lf5 : lst), @eq lst (drop x2 (drop lf7 lf5)) (Nil).
Lemma candidate_831: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_832: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop lf6 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_833: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons lf6 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_834: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_835: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (l) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_836: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_837: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_838: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf6 Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_839: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Cons lf6 Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_840: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_841: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (l)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_842: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_843: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_844: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_845: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_846: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_847: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_848: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_849: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (drop x1 Nil))) (drop x1 (drop lf6 (drop x1 Nil))).
Lemma candidate_850: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (Cons x1 Nil))) (drop x1 (drop lf6 (Cons x1 Nil))).
Lemma candidate_851: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (drop lf6 Nil)))   (drop x1 (drop lf6 (drop lf6 Nil))).
Lemma candidate_852: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (Cons lf6 Nil)))   (drop x1 (drop lf6 (Cons lf6 Nil))).
Lemma candidate_853: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (Cons Zero Nil)))   (drop x1 (drop lf6 (Cons Zero Nil))).
Lemma candidate_854: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (Nil))) (drop x1 (drop lf6 (Nil))).
Lemma candidate_855: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Cons x2 Nil)).
Lemma candidate_856: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop x1 Nil)).
Lemma candidate_857: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Cons x1 Nil)).
Lemma candidate_858: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Cons Zero Nil)).
Lemma candidate_859: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (l)).
Lemma candidate_860: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Nil)).
Lemma candidate_861: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_862: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_863: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_864: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_865: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_866: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_867: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons n Nil).
Lemma candidate_868: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (drop lf7 Nil).
Lemma candidate_869: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons lf7 Nil).
Lemma candidate_870: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons Zero Nil).
Lemma candidate_871: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (l).
Lemma candidate_872: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Nil).
Lemma candidate_873: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons x1 Nil).
Lemma candidate_874: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (drop lf6 Nil).
Lemma candidate_875: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons lf6 Nil).
Lemma candidate_876: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons Zero Nil).
Lemma candidate_877: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (l).
Lemma candidate_878: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Nil).
Lemma candidate_879: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_880: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_881: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_882: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_883: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_884: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_885: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons n Nil).
Lemma candidate_886: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (drop lf6 Nil).
Lemma candidate_887: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons lf6 Nil).
Lemma candidate_888: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons Zero Nil).
Lemma candidate_889: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (l).
Lemma candidate_890: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Nil).
Lemma candidate_891: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Cons x2 Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_892: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_893: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_894: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_895: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (l) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_896: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (Nil) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_897: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l)))   (drop x1 (drop (Succ Zero) (Cons n l))).
Lemma candidate_898: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (n) (Cons n l))).
Lemma candidate_899: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (lf7) (Cons n l))).
Lemma candidate_900: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (x2) (Cons n l))).
Lemma candidate_901: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (x1) (Cons n l))).
Lemma candidate_902: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop (Zero) (Cons n l))).
Lemma candidate_903: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Cons x2 Nil)).
Lemma candidate_904: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (drop x1 Nil)).
Lemma candidate_905: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Cons x1 Nil)).
Lemma candidate_906: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Cons Zero Nil)).
Lemma candidate_907: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (l)).
Lemma candidate_908: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x1 (Nil)).
Lemma candidate_909: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x2 Nil)) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_910: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_911: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_912: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_913: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (l)) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_914: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (Nil)) (drop x1 (drop (Succ x2) (Cons n l))).
Lemma candidate_915: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_916: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_917: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_918: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_919: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_920: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_921: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (drop x2 Nil)))   (drop x1 (drop (Succ x2) (drop x2 Nil))).
Lemma candidate_922: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons x2 Nil)))   (drop x1 (drop (Succ x2) (Cons x2 Nil))).
Lemma candidate_923: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (drop x1 Nil)))   (drop x1 (drop (Succ x2) (drop x1 Nil))).
Lemma candidate_924: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons x1 Nil)))   (drop x1 (drop (Succ x2) (Cons x1 Nil))).
Lemma candidate_925: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Cons Zero Nil)))   (drop x1 (drop (Succ x2) (Cons Zero Nil))).
Lemma candidate_926: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Nil))) (drop x1 (drop (Succ x2) (Nil))).
Lemma candidate_927: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons lf7 Nil).
Lemma candidate_928: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (drop x2 Nil).
Lemma candidate_929: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons x2 Nil).
Lemma candidate_930: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Cons Zero Nil).
Lemma candidate_931: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (l).
Lemma candidate_932: forall (l : lst) (n : natural) (lf7 : natural) (x2 : natural), @eq lst (drop x2 (drop lf7 (Cons n l))) (Nil).
Lemma candidate_933: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ x2)).
Lemma candidate_934: forall (x2 : natural), @eq natural (Succ x2) (Succ (Succ Zero)).
Lemma candidate_935: forall (x2 : natural), @eq natural (Succ x2) (Succ x2).
Lemma candidate_936: forall (x2 : natural), @eq natural (Succ x2) (Succ Zero).
Lemma candidate_937: forall (x2 : natural), @eq natural (Succ x2) (x2).
Lemma candidate_938: forall (x2 : natural), @eq natural (Succ x2) (Zero).
Lemma candidate_939: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons n Nil).
Lemma candidate_940: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (drop x2 Nil).
Lemma candidate_941: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons x2 Nil).
Lemma candidate_942: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Cons Zero Nil).
Lemma candidate_943: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (l).
Lemma candidate_944: forall (l : lst) (n : natural) (x2 : natural), @eq lst (drop (Succ x2) (Cons n l)) (Nil).
Lemma candidate_945: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons n Nil).
Lemma candidate_946: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (drop lf7 Nil).
Lemma candidate_947: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons lf7 Nil).
Lemma candidate_948: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Cons Zero Nil).
Lemma candidate_949: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (l).
Lemma candidate_950: forall (l : lst) (n : natural) (lf7 : natural), @eq lst (drop lf7 (Cons n l)) (Nil).
Lemma candidate_951: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons x2 Nil).
Lemma candidate_952: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (drop x1 Nil).
Lemma candidate_953: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons x1 Nil).
Lemma candidate_954: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Cons Zero Nil).
Lemma candidate_955: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (l).
Lemma candidate_956: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x1 (drop (Succ x2) (Cons n l))) (Nil).
Lemma candidate_957: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_958: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_959: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_960: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_961: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_962: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_963: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_964: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_965: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons lf6 Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_966: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_967: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (lf5) (drop x1 (drop lf6 lf5)).
Lemma candidate_968: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (Nil) (drop x1 (drop lf6 lf5)).
Lemma candidate_969: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (Cons x2 Nil)).
Lemma candidate_970: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop x1 Nil)).
Lemma candidate_971: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (Cons x1 Nil)).
Lemma candidate_972: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (Cons Zero Nil)).
Lemma candidate_973: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (lf5)).
Lemma candidate_974: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (Nil)).
Lemma candidate_975: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x2 Nil).
Lemma candidate_976: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 Nil).
Lemma candidate_977: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x1 Nil).
Lemma candidate_978: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons Zero Nil).
Lemma candidate_979: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (lf5).
Lemma candidate_980: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Nil).
Lemma candidate_981: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_982: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop lf6 Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_983: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Cons lf6 Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_984: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_985: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_986: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (Nil)) (drop x1 (drop lf6 lf5)).
Lemma candidate_987: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop (Succ lf6) lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_988: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop (Succ Zero) lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_989: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop (x2) lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_990: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop (x1) lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_991: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop (lf6) lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_992: forall (x2 : natural) (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x2 (drop (Zero) lf5)) (drop x1 (drop lf6 lf5)).
Lemma candidate_993: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x2 Nil).
Lemma candidate_994: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 Nil).
Lemma candidate_995: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons x1 Nil).
Lemma candidate_996: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Cons Zero Nil).
Lemma candidate_997: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (lf5).
Lemma candidate_998: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (Nil).
Lemma candidate_999: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero lf5).
Lemma candidate_1000: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (drop lf6 Nil).
Lemma candidate_1001: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons lf6 Nil).
Lemma candidate_1002: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Cons Zero Nil).
Lemma candidate_1003: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (lf5).
Lemma candidate_1004: forall (lf5 : lst) (lf6 : natural), @eq lst (drop lf6 lf5) (Nil).
Lemma candidate_1005: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons x1 Nil).
Lemma candidate_1006: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (drop lf6 Nil).
Lemma candidate_1007: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons lf6 Nil).
Lemma candidate_1008: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Cons Zero Nil).
Lemma candidate_1009: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (lf5).
Lemma candidate_1010: forall (x1 : natural) (lf5 : lst) (lf6 : natural), @eq lst (drop x1 (drop lf6 lf5)) (Nil).
Lemma candidate_1011: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons Zero lf5).
Lemma candidate_1012: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (drop x1 Nil).
Lemma candidate_1013: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons x1 Nil).
Lemma candidate_1014: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Cons Zero Nil).
Lemma candidate_1015: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (lf5).
Lemma candidate_1016: forall (x1 : natural) (lf5 : lst), @eq lst (drop (Succ x1) lf5) (Nil).
Lemma candidate_1017: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ x1)).
Lemma candidate_1018: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ Zero)).
Lemma candidate_1019: forall (x1 : natural), @eq natural (Succ x1) (Succ x1).
Lemma candidate_1020: forall (x1 : natural), @eq natural (Succ x1) (Succ Zero).
Lemma candidate_1021: forall (x1 : natural), @eq natural (Succ x1) (x1).
Lemma candidate_1022: forall (x1 : natural), @eq natural (Succ x1) (Zero).
Lemma candidate_1023: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x2 Nil).
Lemma candidate_1024: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 Nil).
Lemma candidate_1025: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x1 Nil).
Lemma candidate_1026: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons Zero Nil).
Lemma candidate_1027: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (l).
Lemma candidate_1028: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Nil).
Lemma candidate_1029: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons x1 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1030: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop lf6 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1031: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons lf6 Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1032: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Cons Zero Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1033: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (l) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1034: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (Nil) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1035: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (drop x1 Nil)))   (drop x1 (drop lf6 (drop x1 Nil))).
Lemma candidate_1036: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons x1 Nil)))   (drop x1 (drop lf6 (Cons x1 Nil))).
Lemma candidate_1037: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (drop lf6 Nil)))   (drop x1 (drop lf6 (drop lf6 Nil))).
Lemma candidate_1038: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons lf6 Nil)))   (drop x1 (drop lf6 (Cons lf6 Nil))).
Lemma candidate_1039: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons Zero Nil)))   (drop x1 (drop lf6 (Cons Zero Nil))).
Lemma candidate_1040: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (Nil))) (drop x1 (drop lf6 (Nil))).
Lemma candidate_1041: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (Cons x2 Nil)).
Lemma candidate_1042: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (drop x1 Nil)).
Lemma candidate_1043: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (Cons x1 Nil)).
Lemma candidate_1044: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (Cons Zero Nil)).
Lemma candidate_1045: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (l)).
Lemma candidate_1046: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (Nil)).
Lemma candidate_1047: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Cons x1 Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1048: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf6 Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1049: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Cons lf6 Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1050: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Cons Zero Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1051: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (l)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1052: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (Nil)) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1053: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ Zero) (Cons n l)))   (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1054: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (n) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1055: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (x2) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1056: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (x1) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1057: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (lf6) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1058: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Zero) (Cons n l))) (drop x1 (drop lf6 (Cons n l))).
Lemma candidate_1059: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons x1 Nil).
Lemma candidate_1060: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (drop lf6 Nil).
Lemma candidate_1061: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons lf6 Nil).
Lemma candidate_1062: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Cons Zero Nil).
Lemma candidate_1063: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (l).
Lemma candidate_1064: forall (l : lst) (n : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x1 (drop lf6 (Cons n l))) (Nil).
Lemma candidate_1065: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x2 Nil).
Lemma candidate_1066: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 Nil).
Lemma candidate_1067: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons x1 Nil).
Lemma candidate_1068: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Cons Zero Nil).
Lemma candidate_1069: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (l).
Lemma candidate_1070: forall (l : lst) (n : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop (Succ x1) (Cons n l))) (Nil).
Lemma candidate_1071: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero l).
Lemma candidate_1072: forall (l : lst) (n : natural), @eq lst (Cons n l) (drop n Nil).
Lemma candidate_1073: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons n Nil).
Lemma candidate_1074: forall (l : lst) (n : natural), @eq lst (Cons n l) (Cons Zero Nil).
Lemma candidate_1075: forall (l : lst) (n : natural), @eq lst (Cons n l) (l).
Lemma candidate_1076: forall (l : lst) (n : natural), @eq lst (Cons n l) (Nil).
Lemma candidate_1077: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons n Nil).
Lemma candidate_1078: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (drop lf6 Nil).
Lemma candidate_1079: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons lf6 Nil).
Lemma candidate_1080: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Cons Zero Nil).
Lemma candidate_1081: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (l).
Lemma candidate_1082: forall (l : lst) (n : natural) (lf6 : natural), @eq lst (drop lf6 (Cons n l)) (Nil).
Lemma candidate_1083: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons n Nil).
Lemma candidate_1084: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (drop x1 Nil).
Lemma candidate_1085: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons x1 Nil).
Lemma candidate_1086: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Cons Zero Nil).
Lemma candidate_1087: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (l).
Lemma candidate_1088: forall (l : lst) (n : natural) (x1 : natural), @eq lst (drop (Succ x1) (Cons n l)) (Nil).
Lemma candidate_1089: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ x1)).
Lemma candidate_1090: forall (x1 : natural), @eq natural (Succ x1) (Succ (Succ Zero)).
Lemma candidate_1091: forall (x1 : natural), @eq natural (Succ x1) (Succ x1).
Lemma candidate_1092: forall (x1 : natural), @eq natural (Succ x1) (Succ Zero).
Lemma candidate_1093: forall (x1 : natural), @eq natural (Succ x1) (x1).
Lemma candidate_1094: forall (x1 : natural), @eq natural (Succ x1) (Zero).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1116 seconds
Duplicates removed: 715
Filtered by Quickchick: 363
Filtered by script: 4
Remaining: 12

Lemmas: 
Lemma candidate_854: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (Nil))) (drop x1 (drop lf6 (Nil))).
Lemma candidate_76: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_1040: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (Nil))) (drop x1 (drop lf6 (Nil))).
Lemma candidate_926: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (Nil))) (drop x1 (drop (Succ x2) (Nil))).
Lemma candidate_2: forall (x2 : natural) (x1 : natural) (lf5 : lst), @eq lst (drop x2 (drop (Succ x1) lf5)) (drop x1 (drop (Succ x2) lf5)).
Lemma candidate_849: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (drop x1 Nil))) (drop x1 (drop lf6 (drop x1 Nil))).
Lemma candidate_851: forall (lf7 : natural) (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop lf7 (drop lf6 Nil)))   (drop x1 (drop lf6 (drop lf6 Nil))).
Lemma candidate_1035: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (drop x1 Nil)))   (drop x1 (drop lf6 (drop x1 Nil))).
Lemma candidate_923: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (drop x1 Nil)))   (drop x1 (drop (Succ x2) (drop x1 Nil))).
Lemma candidate_921: forall (lf7 : natural) (x2 : natural) (x1 : natural), @eq lst (drop x2 (drop lf7 (drop x2 Nil)))   (drop x1 (drop (Succ x2) (drop x2 Nil))).
Lemma candidate_1037: forall (x2 : natural) (x1 : natural) (lf6 : natural), @eq lst (drop x2 (drop (Succ x1) (drop lf6 Nil)))   (drop x1 (drop lf6 (drop lf6 Nil))).
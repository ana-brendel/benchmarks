LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal80_theorem0_59_rev_rev

Number of Lemmas: 1536
Number of Lemmas (after duplicates removed): 331
Number of Lemmas (after QuickChick used to filter): 137
* Number of Candidate Lemmas: 111

Time until ranking: 6101
Time to complete: 11190

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 11

Lemma candidate_193: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_5: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_335: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_187: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_1202: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lf6)) (lfappend y lf6).
Lemma candidate_1160: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lf2)).
Lemma candidate_365: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_317: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_223: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_1259: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_1420: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend lf8 x))).

Category 3 (provable):
Count = 18

Lemma candidate_303: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_6: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_197: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_86: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_301: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_339: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_337: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_336: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_309: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_307: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_306: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_12: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_10: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_9: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_30: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_70: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).

Category 3 (not provable):
Count = 82

Lemma candidate_302: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_196: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_198: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_85: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_326: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_300: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_299: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_87: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_2: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_327: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_189: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_188: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_338: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_308: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_305: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_195: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_194: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_190: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_22: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_325: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_323: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_66: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_23: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_84: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_83: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_11: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_8: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_324: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_67: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_91: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_1200: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_185: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_367: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_319: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1201: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_186: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_184: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_183: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_92: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_368: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_320: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_318: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_63: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_93: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_369: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_321: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_64: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_90: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_1260: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (rev (rev x))))   (lfappend y (Cons n x)).
Lemma candidate_222: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_1198: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (rev (rev lf6)) Nil))   (lfappend y lf6).
Lemma candidate_1197: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev lf6) Nil)))   (lfappend y lf6).
Lemma candidate_1156: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_1155: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (rev (lfappend (rev lf2) Nil))).
Lemma candidate_1261: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1199: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_1157: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_1054: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_71: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_69: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_26: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_72: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_1277: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (rev (rev x)))).
Lemma candidate_166: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_73: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_1257: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_275: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_218: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_108: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_1258: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1051: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1050: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_276: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_274: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_164: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_109: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1052: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_277: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_165: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_163: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_162: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
File Information
- File name: goal80
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal80_theorem0_59_rev_rev
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal80_theorem0_59_rev_rev
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rev (lfappend (rev x0) (rev y0))) (lfappend y0 x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (rev (lfappend (rev x) (rev y0))) (lfappend y0 x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
@eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)) : Prop
lfappend (rev (rev y)) (lfappend (Cons n Nil) x) : lst
x : lst
lfappend (rev x) (rev _UNBOUND_REL_1) : lst
lfappend (Cons n Nil) x : lst
y : lst
rev (lfappend (rev x) (rev _UNBOUND_REL_1)) : lst
rev y : lst
lfappend _UNBOUND_REL_1 x : lst
lfappend y (Cons n x) : lst
rev (rev y) : lst
rev _UNBOUND_REL_1 : lst
Cons n x : lst
lst : Set
Cons n Nil : lst
@eq lst (rev (lfappend (rev x) (rev _UNBOUND_REL_1)))
  (lfappend _UNBOUND_REL_1 x) : Prop
natural : Set
forall y0 : lst, @eq lst (rev (lfappend (rev x) (rev y0))) (lfappend y0 x) : Prop
n : natural
rev x : lst
Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend y (Cons n x)
lf7 : lst = rev y
lf1 : lst = lfappend (rev (rev y)) (lfappend (Cons n Nil) x)
lf4 : lst = rev (rev y)
lf5 : lst = Cons n Nil
lf2 : lst = lfappend (Cons n Nil) x
lf8 : lst = Nil
lf6 : lst = Cons n x

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj33: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf2) lf3.
Lemma conj37: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) lf3.
Lemma conj45: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) lf3.
Lemma conj47: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) lf3.
Lemma conj49: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) lf2) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) lf3.
Lemma conj63: forall (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) lf3.
Lemma conj113: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) lf2) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) lf3.
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) lf3.
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf2) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 lf2) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma conj177: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y lf6).
Lemma conj178: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)).
Lemma conj241: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma conj242: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 165 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)).

Invalid:
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj242: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma conj241: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj178: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (Cons n x)).
Lemma conj177: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 lf2) (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf2) (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) lf3.
Lemma conj113: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) lf2) lf3.
Lemma conj63: forall (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) lf3.
Lemma conj49: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) lf2) lf3.
Lemma conj47: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) lf3.
Lemma conj45: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) lf3.
Lemma conj37: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) lf3.
Lemma conj33: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 212 seconds
Generalizations:
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj242: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma conj241: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj178: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (Cons n x)).
Lemma conj177: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 lf2) (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf2) (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) lf3.
Lemma conj113: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) lf2) lf3.
Lemma conj63: forall (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) lf3.
Lemma conj49: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) lf2) lf3.
Lemma conj47: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) lf3.
Lemma conj45: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) lf3.
Lemma conj37: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) lf3.
Lemma conj33: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 267 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj33: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf2) lf3.
Lemma conj37: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) lf3.
Lemma conj45: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) lf3.
Lemma conj47: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) lf3.
Lemma conj49: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) lf2) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) lf3.
Lemma conj63: forall (x : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) lf3.
Lemma conj113: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) lf2) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) lf3.
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) lf3.
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf2) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 lf2) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma conj177: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y lf6).
Lemma conj178: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x)).
Lemma conj241: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma conj242: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x)).
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).


<---CREATE SKETCHES--->
Time elapsed: 267 seconds
Sketches:
Sketch conj33_sketch0 : @eq lst (##hole##) lf3
Sketch conj33_term_sketch0 : @eq lst (lfappend lf4 lf2) (##hole##)
Sketch conj37_sketch0 : @eq lst (lfappend lf4 (##hole##)) lf3
Sketch conj37_sketch1 : @eq lst (##hole##) lf3
Sketch conj37_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (lfappend lf4 (lfappend lf5 x)) (##hole##)
Sketch conj45_sketch0 : @eq lst (lfappend lf4 (##hole##)) lf3
Sketch conj45_sketch1 : @eq lst (##hole##) lf3
Sketch conj45_sketch2 : @eq lst (lfappend lf4 (lfappend (##hole##) x)) lf3
Sketch conj45_term_sketch0 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj45_term_sketch1 : @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj45_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj47_sketch0 : @eq lst (lfappend lf4 (##hole##)) lf3
Sketch conj47_sketch1 : @eq lst (##hole##) lf3
Sketch conj47_sketch2 : @eq lst (lfappend lf4 (lfappend (##hole##) x)) lf3
Sketch conj47_sketch3 : @eq lst (lfappend lf4 (lfappend (Cons n (##hole##)) x)) lf3
Sketch conj47_term_sketch0 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj47_term_sketch1 : @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj47_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj47_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj49_sketch0 : @eq lst (lfappend (##hole##) lf2) lf3
Sketch conj49_sketch1 : @eq lst (##hole##) lf3
Sketch conj49_term_sketch0 : @eq lst (rev lf7) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (lfappend (rev lf7) lf2) (##hole##)
Sketch conj53_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) lf3
Sketch conj53_sketch1 : @eq lst (##hole##) lf3
Sketch conj53_sketch2 : @eq lst (lfappend (##hole##) (lfappend lf5 x)) lf3
Sketch conj53_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj61_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) lf3
Sketch conj61_sketch1 : @eq lst (lfappend (rev lf7) (lfappend (##hole##) x)) lf3
Sketch conj61_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf8) x)) lf3
Sketch conj61_sketch3 : @eq lst (##hole##) lf3
Sketch conj61_term_sketch0 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj61_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj61_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj61_term_sketch3 : @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj63_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) lf3
Sketch conj63_sketch1 : @eq lst (##hole##) lf3
Sketch conj63_sketch2 : @eq lst (lfappend (rev lf7) (lfappend (##hole##) x)) lf3
Sketch conj63_sketch3 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) x)) lf3
Sketch conj63_sketch4 : @eq lst (lfappend (rev lf7) (lfappend (Cons n (##hole##)) x)) lf3
Sketch conj63_term_sketch0 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj63_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj113_sketch0 : @eq lst (##hole##) lf3
Sketch conj113_sketch1 : @eq lst (lfappend (##hole##) lf2) lf3
Sketch conj113_sketch2 : @eq lst (lfappend (rev (##hole##)) lf2) lf3
Sketch conj113_term_sketch0 : @eq lst (lfappend (rev (rev y)) lf2) (##hole##)
Sketch conj113_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj113_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj117_sketch0 : @eq lst (lfappend (rev (rev y)) (##hole##)) lf3
Sketch conj117_sketch1 : @eq lst (lfappend (##hole##) (lfappend lf5 x)) lf3
Sketch conj117_sketch2 : @eq lst (##hole##) lf3
Sketch conj117_sketch3 : @eq lst (lfappend (rev (##hole##)) (lfappend lf5 x)) lf3
Sketch conj117_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj117_term_sketch2 : @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (##hole##)
Sketch conj117_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj125_sketch0 : @eq lst (##hole##) lf3
Sketch conj125_sketch1 : @eq lst (lfappend (rev (rev y)) (##hole##)) lf3
Sketch conj125_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf8) x)) lf3
Sketch conj125_sketch3 : @eq lst (lfappend (rev (rev y)) (lfappend (##hole##) x)) lf3
Sketch conj125_sketch4 : @eq lst (lfappend (rev (##hole##)) (lfappend (Cons n lf8) x)) lf3
Sketch conj125_term_sketch0 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj125_term_sketch1 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj125_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj125_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj125_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj127_sketch0 : @eq lst (##hole##) lf3
Sketch conj127_sketch1 : @eq lst (lfappend (rev (rev y)) (##hole##)) lf3
Sketch conj127_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) x)) lf3
Sketch conj127_sketch3 : @eq lst (lfappend (rev (rev y)) (lfappend (##hole##) x)) lf3
Sketch conj127_sketch4 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n (##hole##)) x)) lf3
Sketch conj127_sketch5 : @eq lst (lfappend (rev (##hole##)) (lfappend (Cons n Nil) x)) lf3
Sketch conj127_term_sketch0 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj127_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj129_sketch0 : @eq lst lf1 (##hole##)
Sketch conj129_term_sketch0 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj130_sketch0 : @eq lst lf1 (##hole##)
Sketch conj130_sketch1 : @eq lst lf1 (lfappend y (##hole##))
Sketch conj130_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj130_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj161_sketch0 : @eq lst (lfappend lf4 lf2) (##hole##)
Sketch conj161_sketch1 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj161_term_sketch0 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj161_term_sketch1 : @eq lst (lfappend lf4 lf2) (##hole##)
Sketch conj162_sketch0 : @eq lst (lfappend lf4 lf2) (##hole##)
Sketch conj162_sketch1 : @eq lst (lfappend lf4 lf2) (lfappend y (##hole##))
Sketch conj162_sketch2 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj162_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj162_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj162_term_sketch2 : @eq lst (lfappend lf4 lf2) (##hole##)
Sketch conj165_sketch0 : @eq lst (lfappend lf4 (##hole##)) (lfappend y lf6)
Sketch conj165_sketch1 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj165_sketch2 : @eq lst (lfappend lf4 (lfappend lf5 x)) (##hole##)
Sketch conj165_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj165_term_sketch1 : @eq lst (lfappend lf4 (lfappend lf5 x)) (##hole##)
Sketch conj165_term_sketch2 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj166_sketch0 : @eq lst (lfappend lf4 (##hole##)) (lfappend y (Cons n x))
Sketch conj166_sketch1 : @eq lst (lfappend lf4 (lfappend lf5 x)) (##hole##)
Sketch conj166_sketch2 : @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (##hole##))
Sketch conj166_sketch3 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj166_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj166_term_sketch1 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj166_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj166_term_sketch3 : @eq lst (lfappend lf4 (lfappend lf5 x)) (##hole##)
Sketch conj173_sketch0 : @eq lst (lfappend lf4 (##hole##)) (lfappend y lf6)
Sketch conj173_sketch1 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj173_sketch2 : @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj173_sketch3 : @eq lst (lfappend lf4 (lfappend (##hole##) x)) (lfappend y lf6)
Sketch conj173_term_sketch0 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj173_term_sketch1 : @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj173_term_sketch2 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj173_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj174_sketch0 : @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj174_sketch1 : @eq lst (lfappend lf4 (##hole##)) (lfappend y (Cons n x))
Sketch conj174_sketch2 : @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y (##hole##))
Sketch conj174_sketch3 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj174_sketch4 : @eq lst (lfappend lf4 (lfappend (##hole##) x)) (lfappend y (Cons n x))
Sketch conj174_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj174_term_sketch1 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj174_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj174_term_sketch3 : @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj174_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj175_sketch0 : @eq lst (lfappend lf4 (##hole##)) (lfappend y lf6)
Sketch conj175_sketch1 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj175_sketch2 : @eq lst (lfappend lf4 (lfappend (##hole##) x)) (lfappend y lf6)
Sketch conj175_sketch3 : @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj175_sketch4 : @eq lst (lfappend lf4 (lfappend (Cons n (##hole##)) x)) (lfappend y lf6)
Sketch conj175_term_sketch0 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj175_term_sketch1 : @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj175_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj175_term_sketch3 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj175_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_sketch0 : @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj176_sketch1 : @eq lst (lfappend lf4 (##hole##)) (lfappend y (Cons n x))
Sketch conj176_sketch2 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj176_sketch3 : @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (##hole##))
Sketch conj176_sketch4 : @eq lst (lfappend lf4 (lfappend (##hole##) x)) (lfappend y (Cons n x))
Sketch conj176_sketch5 : @eq lst (lfappend lf4 (lfappend (Cons n (##hole##)) x))
  (lfappend y (Cons n x))
Sketch conj176_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj176_term_sketch1 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj176_term_sketch2 : @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj176_term_sketch3 : @eq lst (Cons n x) (##hole##)
Sketch conj176_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj176_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj177_sketch0 : @eq lst (lfappend (rev lf7) lf2) (##hole##)
Sketch conj177_sketch1 : @eq lst (lfappend (##hole##) lf2) (lfappend y lf6)
Sketch conj177_sketch2 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj177_term_sketch0 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj177_term_sketch1 : @eq lst (rev lf7) (##hole##)
Sketch conj177_term_sketch2 : @eq lst (lfappend (rev lf7) lf2) (##hole##)
Sketch conj178_sketch0 : @eq lst (lfappend (rev lf7) lf2) (##hole##)
Sketch conj178_sketch1 : @eq lst (lfappend (rev lf7) lf2) (lfappend y (##hole##))
Sketch conj178_sketch2 : @eq lst (lfappend (##hole##) lf2) (lfappend y (Cons n x))
Sketch conj178_sketch3 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj178_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj178_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj178_term_sketch2 : @eq lst (rev lf7) (##hole##)
Sketch conj178_term_sketch3 : @eq lst (lfappend (rev lf7) lf2) (##hole##)
Sketch conj181_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) (lfappend y lf6)
Sketch conj181_sketch1 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj181_sketch2 : @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (##hole##)
Sketch conj181_sketch3 : @eq lst (lfappend (##hole##) (lfappend lf5 x)) (lfappend y lf6)
Sketch conj181_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj181_term_sketch1 : @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (##hole##)
Sketch conj181_term_sketch2 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj181_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj182_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) (lfappend y (Cons n x))
Sketch conj182_sketch1 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj182_sketch2 : @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (##hole##)
Sketch conj182_sketch3 : @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y (##hole##))
Sketch conj182_sketch4 : @eq lst (lfappend (##hole##) (lfappend lf5 x)) (lfappend y (Cons n x))
Sketch conj182_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj182_term_sketch1 : @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (##hole##)
Sketch conj182_term_sketch2 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj182_term_sketch3 : @eq lst (Cons n x) (##hole##)
Sketch conj182_term_sketch4 : @eq lst (rev lf7) (##hole##)
Sketch conj189_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) (lfappend y lf6)
Sketch conj189_sketch1 : @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj189_sketch2 : @eq lst (lfappend (rev lf7) (lfappend (##hole##) x)) (lfappend y lf6)
Sketch conj189_sketch3 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf8) x)) (lfappend y lf6)
Sketch conj189_sketch4 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj189_term_sketch0 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj189_term_sketch1 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj189_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj189_term_sketch3 : @eq lst (rev lf7) (##hole##)
Sketch conj189_term_sketch4 : @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj190_sketch0 : @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj190_sketch1 : @eq lst (lfappend (rev lf7) (##hole##)) (lfappend y (Cons n x))
Sketch conj190_sketch2 : @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))
  (lfappend y (##hole##))
Sketch conj190_sketch3 : @eq lst (lfappend (rev lf7) (lfappend (##hole##) x)) (lfappend y (Cons n x))
Sketch conj190_sketch4 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x))
Sketch conj190_sketch5 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj190_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj190_term_sketch1 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj190_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj190_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj190_term_sketch4 : @eq lst (rev lf7) (##hole##)
Sketch conj190_term_sketch5 : @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj191_sketch0 : @eq lst (lfappend (rev lf7) (##hole##)) (lfappend y lf6)
Sketch conj191_sketch1 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj191_sketch2 : @eq lst (lfappend (rev lf7) (lfappend (##hole##) x)) (lfappend y lf6)
Sketch conj191_sketch3 : @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj191_sketch4 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) x)) (lfappend y lf6)
Sketch conj191_sketch5 : @eq lst (lfappend (rev lf7) (lfappend (Cons n (##hole##)) x))
  (lfappend y lf6)
Sketch conj191_term_sketch0 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj191_term_sketch1 : @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj191_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj191_term_sketch3 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj191_term_sketch4 : @eq lst (rev lf7) (##hole##)
Sketch conj191_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj192_sketch0 : @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj192_sketch1 : @eq lst (lfappend (rev lf7) (##hole##)) (lfappend y (Cons n x))
Sketch conj192_sketch2 : @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))
  (lfappend y (##hole##))
Sketch conj192_sketch3 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj192_sketch4 : @eq lst (lfappend (rev lf7) (lfappend (##hole##) x)) (lfappend y (Cons n x))
Sketch conj192_sketch5 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) x))
  (lfappend y (Cons n x))
Sketch conj192_sketch6 : @eq lst (lfappend (rev lf7) (lfappend (Cons n (##hole##)) x))
  (lfappend y (Cons n x))
Sketch conj192_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj192_term_sketch1 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj192_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj192_term_sketch3 : @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj192_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj192_term_sketch5 : @eq lst (rev lf7) (##hole##)
Sketch conj192_term_sketch6 : @eq lst Nil (##hole##)
Sketch conj241_sketch0 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj241_sketch1 : @eq lst (lfappend (##hole##) lf2) (lfappend y lf6)
Sketch conj241_sketch2 : @eq lst (lfappend (rev (rev y)) lf2) (##hole##)
Sketch conj241_sketch3 : @eq lst (lfappend (rev (##hole##)) lf2) (lfappend y lf6)
Sketch conj241_term_sketch0 : @eq lst (lfappend (rev (rev y)) lf2) (##hole##)
Sketch conj241_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj241_term_sketch2 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj241_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj242_sketch0 : @eq lst (lfappend (rev (rev y)) lf2) (##hole##)
Sketch conj242_sketch1 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj242_sketch2 : @eq lst (lfappend (##hole##) lf2) (lfappend y (Cons n x))
Sketch conj242_sketch3 : @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (##hole##))
Sketch conj242_sketch4 : @eq lst (lfappend (rev (##hole##)) lf2) (lfappend y (Cons n x))
Sketch conj242_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj242_term_sketch1 : @eq lst (lfappend (rev (rev y)) lf2) (##hole##)
Sketch conj242_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj242_term_sketch3 : @eq lst (Cons n x) (##hole##)
Sketch conj242_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj245_sketch0 : @eq lst (lfappend (rev (rev y)) (##hole##)) (lfappend y lf6)
Sketch conj245_sketch1 : @eq lst (lfappend (##hole##) (lfappend lf5 x)) (lfappend y lf6)
Sketch conj245_sketch2 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj245_sketch3 : @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (##hole##)
Sketch conj245_sketch4 : @eq lst (lfappend (rev (##hole##)) (lfappend lf5 x)) (lfappend y lf6)
Sketch conj245_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj245_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj245_term_sketch2 : @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (##hole##)
Sketch conj245_term_sketch3 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj245_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj246_sketch0 : @eq lst (lfappend (rev (rev y)) (##hole##)) (lfappend y (Cons n x))
Sketch conj246_sketch1 : @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (##hole##)
Sketch conj246_sketch2 : @eq lst (lfappend (##hole##) (lfappend lf5 x)) (lfappend y (Cons n x))
Sketch conj246_sketch3 : @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (##hole##))
Sketch conj246_sketch4 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj246_sketch5 : @eq lst (lfappend (rev (##hole##)) (lfappend lf5 x)) (lfappend y (Cons n x))
Sketch conj246_term_sketch0 : @eq lst (lfappend lf5 x) (##hole##)
Sketch conj246_term_sketch1 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj246_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj246_term_sketch3 : @eq lst (Cons n x) (##hole##)
Sketch conj246_term_sketch4 : @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (##hole##)
Sketch conj246_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj253_sketch0 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj253_sketch1 : @eq lst (lfappend (rev (rev y)) (##hole##)) (lfappend y lf6)
Sketch conj253_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf8) x)) (lfappend y lf6)
Sketch conj253_sketch3 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj253_sketch4 : @eq lst (lfappend (rev (rev y)) (lfappend (##hole##) x)) (lfappend y lf6)
Sketch conj253_sketch5 : @eq lst (lfappend (rev (##hole##)) (lfappend (Cons n lf8) x))
  (lfappend y lf6)
Sketch conj253_term_sketch0 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj253_term_sketch1 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj253_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj253_term_sketch3 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj253_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj253_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj254_sketch0 : @eq lst (##hole##) (lfappend y (Cons n x))
Sketch conj254_sketch1 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj254_sketch2 : @eq lst (lfappend (rev (rev y)) (##hole##)) (lfappend y (Cons n x))
Sketch conj254_sketch3 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x))
Sketch conj254_sketch4 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))
  (lfappend y (##hole##))
Sketch conj254_sketch5 : @eq lst (lfappend (rev (rev y)) (lfappend (##hole##) x))
  (lfappend y (Cons n x))
Sketch conj254_sketch6 : @eq lst (lfappend (rev (##hole##)) (lfappend (Cons n lf8) x))
  (lfappend y (Cons n x))
Sketch conj254_term_sketch0 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (##hole##)
Sketch conj254_term_sketch1 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj254_term_sketch2 : @eq lst (lfappend (Cons n lf8) x) (##hole##)
Sketch conj254_term_sketch3 : @eq lst (rev (rev y)) (##hole##)
Sketch conj254_term_sketch4 : @eq lst (Cons n x) (##hole##)
Sketch conj254_term_sketch5 : @eq lst (Cons n lf8) (##hole##)
Sketch conj254_term_sketch6 : @eq lst (rev y) (##hole##)
Sketch conj255_sketch0 : @eq lst (##hole##) (lfappend y lf6)
Sketch conj255_sketch1 : @eq lst (lfappend (rev (rev y)) (##hole##)) (lfappend y lf6)
Sketch conj255_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) x)) (lfappend y lf6)
Sketch conj255_sketch3 : @eq lst (lfappend (rev (rev y)) (lfappend (##hole##) x)) (lfappend y lf6)
Sketch conj255_sketch4 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj255_sketch5 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n (##hole##)) x))
  (lfappend y lf6)
Sketch conj255_sketch6 : @eq lst (lfappend (rev (##hole##)) (lfappend (Cons n Nil) x))
  (lfappend y lf6)
Sketch conj255_term_sketch0 : @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj255_term_sketch1 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj255_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj255_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj255_term_sketch4 : @eq lst (lfappend y lf6) (##hole##)
Sketch conj255_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj255_term_sketch6 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 4736 seconds
Problems per Sketch:
Sketch conj254_term_sketch5 --> Problem  synth_9
Sketch conj181_term_sketch3 --> Problem  synth_16
Sketch conj253_term_sketch5 --> Problem  synth_30
Sketch conj63_sketch4 --> Problem  synth_25
Sketch conj246_sketch4 --> Problem  synth_39
Sketch conj130_sketch0 --> Problem  synth_40
Sketch conj53_term_sketch2 --> Problem  synth_16
Sketch conj125_term_sketch3 --> Problem  synth_9
Sketch conj127_sketch3 --> Problem  synth_34
Sketch conj182_term_sketch4 --> Problem  synth_16
Sketch conj63_term_sketch0 --> Problem  synth_11
Sketch conj191_sketch3 --> Problem  synth_26
Sketch conj190_term_sketch0 --> Problem  synth_39
Sketch conj127_term_sketch0 --> Problem  synth_39
Sketch conj173_sketch0 --> Problem  synth_44
Sketch conj61_term_sketch2 --> Problem  synth_16
Sketch conj246_term_sketch5 --> Problem  synth_30
Sketch conj246_sketch5 --> Problem  synth_76
Sketch conj246_sketch3 --> Problem  synth_75
Sketch conj130_sketch1 --> Problem  synth_42
Sketch conj130_term_sketch1 --> Problem  synth_11
Sketch conj254_sketch1 --> Problem  synth_36
Sketch conj175_term_sketch0 --> Problem  synth_11
Sketch conj192_term_sketch0 --> Problem  synth_39
Sketch conj246_term_sketch3 --> Problem  synth_11
Sketch conj246_sketch2 --> Problem  synth_59
Sketch conj175_sketch0 --> Problem  synth_44
Sketch conj192_sketch6 --> Problem  synth_68
Sketch conj47_sketch2 --> Problem  synth_6
Sketch conj253_sketch5 --> Problem  synth_78
Sketch conj192_sketch3 --> Problem  synth_39
Sketch conj241_term_sketch3 --> Problem  synth_30
Sketch conj174_sketch2 --> Problem  synth_48
Sketch conj253_term_sketch0 --> Problem  synth_36
Sketch conj182_sketch2 --> Problem  synth_20
Sketch conj181_sketch2 --> Problem  synth_20
Sketch conj176_term_sketch0 --> Problem  synth_39
Sketch conj178_term_sketch3 --> Problem  synth_17
Sketch conj125_term_sketch4 --> Problem  synth_30
Sketch conj162_sketch0 --> Problem  synth_2
Sketch conj125_sketch2 --> Problem  synth_22
Sketch conj246_sketch0 --> Problem  synth_74
Sketch conj178_sketch1 --> Problem  synth_53
Sketch conj125_sketch3 --> Problem  synth_34
Sketch conj192_term_sketch1 --> Problem  synth_11
Sketch conj189_sketch4 --> Problem  synth_41
Sketch conj49_sketch0 --> Problem  synth_15
Sketch conj47_term_sketch1 --> Problem  synth_12
Sketch conj245_term_sketch2 --> Problem  synth_33
Sketch conj182_sketch4 --> Problem  synth_59
Sketch conj254_sketch0 --> Problem  synth_39
Sketch conj45_sketch0 --> Problem  synth_3
Sketch conj255_term_sketch6 --> Problem  synth_30
Sketch conj241_term_sketch0 --> Problem  synth_28
Sketch conj161_sketch1 --> Problem  synth_41
Sketch conj53_term_sketch1 --> Problem  synth_20
Sketch conj190_term_sketch3 --> Problem  synth_9
Sketch conj117_sketch3 --> Problem  synth_32
Sketch conj63_sketch1 --> Problem  synth_1
Sketch conj190_sketch2 --> Problem  synth_62
Sketch conj189_sketch2 --> Problem  synth_60
Sketch conj182_term_sketch2 --> Problem  synth_39
Sketch conj113_sketch1 --> Problem  synth_15
Sketch conj190_term_sketch4 --> Problem  synth_16
Sketch conj173_term_sketch3 --> Problem  synth_9
Sketch conj181_sketch0 --> Problem  synth_55
Sketch conj245_sketch1 --> Problem  synth_56
Sketch conj254_term_sketch2 --> Problem  synth_7
Sketch conj127_sketch0 --> Problem  synth_1
Sketch conj165_sketch2 --> Problem  synth_5
Sketch conj176_term_sketch4 --> Problem  synth_13
Sketch conj191_sketch1 --> Problem  synth_41
Sketch conj175_sketch1 --> Problem  synth_41
Sketch conj245_term_sketch0 --> Problem  synth_4
Sketch conj189_sketch0 --> Problem  synth_55
Sketch conj254_sketch2 --> Problem  synth_74
Sketch conj61_term_sketch0 --> Problem  synth_7
Sketch conj61_sketch0 --> Problem  synth_18
Sketch conj192_sketch0 --> Problem  synth_26
Sketch conj253_term_sketch1 --> Problem  synth_7
Sketch conj129_sketch0 --> Problem  synth_40
Sketch conj241_sketch1 --> Problem  synth_52
Sketch conj181_sketch1 --> Problem  synth_41
Sketch conj165_sketch1 --> Problem  synth_41
Sketch conj255_term_sketch4 --> Problem  synth_41
Sketch conj47_term_sketch3 --> Problem  synth_14
Sketch conj33_sketch0 --> Problem  synth_1
Sketch conj246_term_sketch1 --> Problem  synth_39
Sketch conj192_term_sketch6 --> Problem  synth_14
Sketch conj166_term_sketch0 --> Problem  synth_4
Sketch conj255_term_sketch5 --> Problem  synth_14
Sketch conj182_sketch1 --> Problem  synth_39
Sketch conj191_term_sketch5 --> Problem  synth_14
Sketch conj191_sketch2 --> Problem  synth_60
Sketch conj242_sketch1 --> Problem  synth_39
Sketch conj190_sketch3 --> Problem  synth_63
Sketch conj176_sketch3 --> Problem  synth_45
Sketch conj175_sketch3 --> Problem  synth_12
Sketch conj162_term_sketch1 --> Problem  synth_11
Sketch conj125_sketch0 --> Problem  synth_1
Sketch conj53_term_sketch0 --> Problem  synth_4
Sketch conj190_term_sketch1 --> Problem  synth_7
Sketch conj254_sketch6 --> Problem  synth_81
Sketch conj175_term_sketch3 --> Problem  synth_41
Sketch conj178_term_sketch1 --> Problem  synth_11
Sketch conj175_sketch4 --> Problem  synth_50
Sketch conj177_term_sketch2 --> Problem  synth_17
Sketch conj45_sketch1 --> Problem  synth_1
Sketch conj177_sketch0 --> Problem  synth_17
Sketch conj254_term_sketch4 --> Problem  synth_11
Sketch conj254_sketch4 --> Problem  synth_79
Sketch conj242_sketch4 --> Problem  synth_71
Sketch conj125_term_sketch1 --> Problem  synth_7
Sketch conj182_term_sketch3 --> Problem  synth_11
Sketch conj45_term_sketch0 --> Problem  synth_7
Sketch conj192_sketch2 --> Problem  synth_57
Sketch conj33_term_sketch0 --> Problem  synth_2
Sketch conj245_term_sketch3 --> Problem  synth_41
Sketch conj178_term_sketch2 --> Problem  synth_16
Sketch conj182_term_sketch1 --> Problem  synth_20
Sketch conj192_term_sketch2 --> Problem  synth_11
Sketch conj182_term_sketch0 --> Problem  synth_4
Sketch conj113_sketch0 --> Problem  synth_1
Sketch conj191_term_sketch4 --> Problem  synth_16
Sketch conj61_sketch2 --> Problem  synth_22
Sketch conj117_term_sketch2 --> Problem  synth_33
Sketch conj182_sketch3 --> Problem  synth_58
Sketch conj192_term_sketch5 --> Problem  synth_16
Sketch conj192_sketch1 --> Problem  synth_57
Sketch conj178_sketch3 --> Problem  synth_39
Sketch conj161_term_sketch0 --> Problem  synth_41
Sketch conj191_term_sketch2 --> Problem  synth_13
Sketch conj63_sketch2 --> Problem  synth_21
Sketch conj125_sketch1 --> Problem  synth_31
Sketch conj255_term_sketch0 --> Problem  synth_39
Sketch conj181_term_sketch2 --> Problem  synth_41
Sketch conj177_sketch1 --> Problem  synth_52
Sketch conj192_sketch5 --> Problem  synth_67
Sketch conj254_term_sketch6 --> Problem  synth_30
Sketch conj242_term_sketch3 --> Problem  synth_11
Sketch conj176_term_sketch1 --> Problem  synth_11
Sketch conj176_sketch5 --> Problem  synth_51
Sketch conj47_term_sketch0 --> Problem  synth_11
Sketch conj255_sketch6 --> Problem  synth_83
Sketch conj253_term_sketch4 --> Problem  synth_9
Sketch conj117_sketch2 --> Problem  synth_1
Sketch conj61_term_sketch3 --> Problem  synth_23
Sketch conj241_sketch2 --> Problem  synth_28
Sketch conj182_sketch0 --> Problem  synth_57
Sketch conj161_term_sketch1 --> Problem  synth_2
Sketch conj253_sketch0 --> Problem  synth_41
Sketch conj178_term_sketch0 --> Problem  synth_39
Sketch conj176_sketch1 --> Problem  synth_45
Sketch conj191_sketch5 --> Problem  synth_66
Sketch conj189_term_sketch0 --> Problem  synth_7
Sketch conj113_sketch2 --> Problem  synth_27
Sketch conj175_term_sketch2 --> Problem  synth_13
Sketch conj47_term_sketch2 --> Problem  synth_13
Sketch conj192_sketch4 --> Problem  synth_63
Sketch conj166_term_sketch3 --> Problem  synth_5
Sketch conj189_term_sketch3 --> Problem  synth_16
Sketch conj176_sketch2 --> Problem  synth_39
Sketch conj162_sketch2 --> Problem  synth_39
Sketch conj162_term_sketch2 --> Problem  synth_2
Sketch conj49_term_sketch0 --> Problem  synth_16
Sketch conj37_sketch1 --> Problem  synth_1
Sketch conj245_sketch3 --> Problem  synth_33
Sketch conj176_term_sketch3 --> Problem  synth_11
Sketch conj117_term_sketch1 --> Problem  synth_29
Sketch conj174_term_sketch0 --> Problem  synth_39
Sketch conj53_sketch1 --> Problem  synth_1
Sketch conj241_term_sketch2 --> Problem  synth_41
Sketch conj127_sketch5 --> Problem  synth_38
Sketch conj254_term_sketch0 --> Problem  synth_36
Sketch conj175_sketch2 --> Problem  synth_47
Sketch conj113_term_sketch0 --> Problem  synth_28
Sketch conj174_term_sketch4 --> Problem  synth_9
Sketch conj176_sketch0 --> Problem  synth_12
Sketch conj173_term_sketch2 --> Problem  synth_41
Sketch conj242_sketch0 --> Problem  synth_28
Sketch conj61_sketch1 --> Problem  synth_21
Sketch conj166_term_sketch2 --> Problem  synth_11
Sketch conj173_sketch2 --> Problem  synth_8
Sketch conj130_term_sketch0 --> Problem  synth_39
Sketch conj253_term_sketch3 --> Problem  synth_41
Sketch conj174_sketch4 --> Problem  synth_49
Sketch conj254_term_sketch3 --> Problem  synth_29
Sketch conj189_term_sketch2 --> Problem  synth_9
Sketch conj127_sketch4 --> Problem  synth_37
Sketch conj63_term_sketch4 --> Problem  synth_14
Sketch conj242_sketch3 --> Problem  synth_70
Sketch conj181_term_sketch0 --> Problem  synth_4
Sketch conj125_term_sketch2 --> Problem  synth_29
Sketch conj166_sketch0 --> Problem  synth_45
Sketch conj190_sketch0 --> Problem  synth_23
Sketch conj127_term_sketch5 --> Problem  synth_30
Sketch conj254_term_sketch1 --> Problem  synth_39
Sketch conj47_sketch3 --> Problem  synth_10
Sketch conj255_term_sketch3 --> Problem  synth_13
Sketch conj245_sketch4 --> Problem  synth_73
Sketch conj117_term_sketch3 --> Problem  synth_30
Sketch conj63_term_sketch1 --> Problem  synth_26
Sketch conj242_sketch2 --> Problem  synth_54
Sketch conj127_term_sketch4 --> Problem  synth_14
Sketch conj37_sketch0 --> Problem  synth_3
Sketch conj47_sketch1 --> Problem  synth_1
Sketch conj49_term_sketch1 --> Problem  synth_17
Sketch conj253_sketch4 --> Problem  synth_77
Sketch conj127_term_sketch3 --> Problem  synth_13
Sketch conj255_sketch4 --> Problem  synth_39
Sketch conj255_sketch2 --> Problem  synth_65
Sketch conj242_term_sketch1 --> Problem  synth_28
Sketch conj242_term_sketch4 --> Problem  synth_30
Sketch conj177_sketch2 --> Problem  synth_41
Sketch conj166_sketch2 --> Problem  synth_46
Sketch conj177_term_sketch1 --> Problem  synth_16
Sketch conj53_sketch2 --> Problem  synth_19
Sketch conj190_sketch1 --> Problem  synth_57
Sketch conj241_term_sketch1 --> Problem  synth_29
Sketch conj242_term_sketch0 --> Problem  synth_39
Sketch conj176_term_sketch2 --> Problem  synth_12
Sketch conj253_term_sketch2 --> Problem  synth_29
Sketch conj173_sketch1 --> Problem  synth_41
Sketch conj246_term_sketch2 --> Problem  synth_29
Sketch conj246_term_sketch0 --> Problem  synth_4
Sketch conj174_term_sketch3 --> Problem  synth_8
Sketch conj174_term_sketch2 --> Problem  synth_11
Sketch conj174_term_sketch1 --> Problem  synth_7
Sketch conj255_term_sketch2 --> Problem  synth_29
Sketch conj166_term_sketch1 --> Problem  synth_39
Sketch conj165_term_sketch1 --> Problem  synth_5
Sketch conj255_sketch5 --> Problem  synth_82
Sketch conj127_term_sketch2 --> Problem  synth_29
Sketch conj63_term_sketch2 --> Problem  synth_13
Sketch conj190_sketch5 --> Problem  synth_39
Sketch conj253_sketch1 --> Problem  synth_72
Sketch conj245_sketch0 --> Problem  synth_72
Sketch conj173_term_sketch1 --> Problem  synth_8
Sketch conj45_term_sketch2 --> Problem  synth_9
Sketch conj117_sketch0 --> Problem  synth_31
Sketch conj254_sketch3 --> Problem  synth_64
Sketch conj191_sketch4 --> Problem  synth_65
Sketch conj189_sketch3 --> Problem  synth_61
Sketch conj113_term_sketch2 --> Problem  synth_30
Sketch conj246_sketch1 --> Problem  synth_33
Sketch conj189_term_sketch4 --> Problem  synth_23
Sketch conj245_term_sketch1 --> Problem  synth_29
Sketch conj173_term_sketch0 --> Problem  synth_7
Sketch conj191_sketch0 --> Problem  synth_55
Sketch conj177_term_sketch0 --> Problem  synth_41
Sketch conj127_sketch2 --> Problem  synth_24
Sketch conj189_term_sketch1 --> Problem  synth_41
Sketch conj192_term_sketch3 --> Problem  synth_26
Sketch conj125_term_sketch0 --> Problem  synth_36
Sketch conj166_sketch1 --> Problem  synth_5
Sketch conj165_sketch0 --> Problem  synth_44
Sketch conj162_sketch1 --> Problem  synth_43
Sketch conj241_sketch0 --> Problem  synth_41
Sketch conj174_sketch3 --> Problem  synth_39
Sketch conj255_term_sketch1 --> Problem  synth_11
Sketch conj176_term_sketch5 --> Problem  synth_14
Sketch conj53_sketch0 --> Problem  synth_18
Sketch conj190_term_sketch5 --> Problem  synth_23
Sketch conj129_term_sketch0 --> Problem  synth_41
Sketch conj178_sketch2 --> Problem  synth_54
Sketch conj181_sketch3 --> Problem  synth_56
Sketch conj161_sketch0 --> Problem  synth_2
Sketch conj45_sketch2 --> Problem  synth_6
Sketch conj178_sketch0 --> Problem  synth_17
Sketch conj241_sketch3 --> Problem  synth_69
Sketch conj175_term_sketch4 --> Problem  synth_14
Sketch conj165_term_sketch0 --> Problem  synth_4
Sketch conj61_sketch3 --> Problem  synth_1
Sketch conj166_sketch3 --> Problem  synth_39
Sketch conj191_term_sketch0 --> Problem  synth_11
Sketch conj125_sketch4 --> Problem  synth_35
Sketch conj191_term_sketch3 --> Problem  synth_41
Sketch conj37_term_sketch0 --> Problem  synth_4
Sketch conj189_sketch1 --> Problem  synth_23
Sketch conj253_sketch2 --> Problem  synth_61
Sketch conj176_sketch4 --> Problem  synth_49
Sketch conj113_term_sketch1 --> Problem  synth_29
Sketch conj63_term_sketch3 --> Problem  synth_16
Sketch conj63_sketch0 --> Problem  synth_18
Sketch conj63_sketch3 --> Problem  synth_24
Sketch conj117_term_sketch0 --> Problem  synth_4
Sketch conj117_sketch1 --> Problem  synth_19
Sketch conj127_sketch1 --> Problem  synth_31
Sketch conj245_sketch2 --> Problem  synth_41
Sketch conj253_sketch3 --> Problem  synth_36
Sketch conj255_sketch0 --> Problem  synth_41
Sketch conj255_sketch1 --> Problem  synth_72
Sketch conj190_sketch4 --> Problem  synth_64
Sketch conj175_term_sketch1 --> Problem  synth_12
Sketch conj61_term_sketch1 --> Problem  synth_9
Sketch conj192_term_sketch4 --> Problem  synth_13
Sketch conj37_term_sketch1 --> Problem  synth_5
Sketch conj45_term_sketch1 --> Problem  synth_8
Sketch conj127_term_sketch1 --> Problem  synth_11
Sketch conj165_term_sketch2 --> Problem  synth_41
Sketch conj255_sketch3 --> Problem  synth_77
Sketch conj246_term_sketch4 --> Problem  synth_33
Sketch conj191_term_sketch1 --> Problem  synth_26
Sketch conj181_term_sketch1 --> Problem  synth_20
Sketch conj245_term_sketch4 --> Problem  synth_30
Sketch conj242_term_sketch2 --> Problem  synth_29
Sketch conj174_sketch0 --> Problem  synth_8
Sketch conj162_term_sketch0 --> Problem  synth_39
Sketch conj254_sketch5 --> Problem  synth_80
Sketch conj174_sketch1 --> Problem  synth_45
Sketch conj173_sketch3 --> Problem  synth_47
Sketch conj49_sketch1 --> Problem  synth_1
Sketch conj190_term_sketch2 --> Problem  synth_11
Sketch conj47_sketch0 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 5259 seconds

Problem: synth_63
 Cons n Nil

Problem: synth_68
 Nil

Problem: synth_67
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_77

Problem: synth_64
 lfappend y (rev lf8)
 rev (rev y)
 lfappend lf8 y
 lfappend y lf8
 lfappend y Nil
 y

Problem: synth_11
 Cons n (lfappend (rev (rev x)) Nil)
 Cons n (lfappend (lfappend x Nil) Nil)
 rev (lfappend (rev x) (Cons n Nil))
 Cons n (rev (rev x))
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_54
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_39
 lfappend (rev (rev y)) (Cons n x)
 lfappend (lfappend y Nil) (Cons n x)
 lfappend y (Cons n (rev (rev x)))
 lfappend y (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n (rev y)))
 lfappend y (Cons n x)

Problem: synth_46
 lfappend (rev lf5) (rev (rev x))
 lfappend (rev lf5) (lfappend x Nil)
 lfappend lf5 (rev (rev x))
 lfappend lf5 (lfappend x Nil)
 lfappend (rev lf5) x
 lfappend lf5 x

Problem: synth_66
 Nil

Problem: synth_57
 Cons n (lfappend (rev (rev x)) Nil)
 Cons n (lfappend (lfappend x Nil) Nil)
 rev (lfappend (rev x) (Cons n Nil))
 Cons n (rev (rev x))
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_59
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_31

Problem: synth_8
 lfappend lf8 (lfappend lf4 (Cons n x))
 lfappend lf4 (lfappend lf8 (Cons n x))
 lfappend lf4 (Cons n (lfappend x lf8))
 lfappend lf4 (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n (rev lf4)))
 lfappend lf4 (Cons n x)

Problem: synth_34

Problem: synth_5
 lfappend lf4 (lfappend lf5 (lfappend x Nil))
 lfappend lf4 (lfappend (rev lf5) x)
 rev (lfappend (rev x) (lfappend lf5 (rev lf4)))
 lfappend (lfappend lf4 (rev lf5)) x
 lfappend (lfappend lf4 lf5) x
 lfappend lf4 (lfappend lf5 x)

Problem: synth_37
 Nil

Problem: synth_58
 lfappend (rev lf5) (rev (rev x))
 lfappend (rev lf5) (lfappend x Nil)
 lfappend lf5 (rev (rev x))
 lfappend lf5 (lfappend x Nil)
 lfappend (rev lf5) x
 lfappend lf5 x

Problem: synth_53
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_2
 lfappend (rev (rev lf4)) lf2
 lfappend (lfappend lf4 Nil) lf2
 lfappend (lfappend lf4 lf2) Nil
 lfappend lf4 (rev (rev lf2))
 lfappend lf4 (lfappend lf2 Nil)
 lfappend lf4 lf2

Problem: synth_22

Problem: synth_18

Problem: synth_21

Problem: synth_72
 rev (lfappend (rev lf6) Nil)
 lfappend (rev (rev lf6)) Nil
 lfappend (lfappend lf6 Nil) Nil
 rev (rev lf6)
 lfappend lf6 Nil
 lf6

Problem: synth_56
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_41
 lfappend (rev (rev y)) lf6
 lfappend (lfappend y Nil) lf6
 lfappend (lfappend y lf6) Nil
 lfappend y (rev (rev lf6))
 lfappend y (lfappend lf6 Nil)
 lfappend y lf6

Problem: synth_49
 Cons n Nil

Problem: synth_75
 lfappend (rev lf5) (rev (rev x))
 lfappend (rev lf5) (lfappend x Nil)
 lfappend lf5 (rev (rev x))
 lfappend lf5 (lfappend x Nil)
 lfappend (rev lf5) x
 lfappend lf5 x

Problem: synth_25
 Nil

Problem: synth_13
 Cons n Nil

Problem: synth_6

Problem: synth_4
 lfappend (rev lf5) (rev (rev x))
 lfappend (rev lf5) (lfappend x Nil)
 lfappend lf5 (rev (rev x))
 lfappend lf5 (lfappend x Nil)
 lfappend (rev lf5) x
 lfappend lf5 x

Problem: synth_38

Problem: synth_65
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_23
 lfappend (rev lf7) (Cons n (lfappend x lf8))
 lfappend (rev lf7) (Cons n (lfappend x Nil))
 lfappend (lfappend lf8 (rev lf7)) (Cons n x)
 lfappend lf8 (lfappend (rev lf7) (Cons n x))
 rev (lfappend (rev x) (Cons n lf7))
 lfappend (rev lf7) (Cons n x)

Problem: synth_19

Problem: synth_10
 Nil

Problem: synth_24

Problem: synth_32

Problem: synth_48
 Cons n (rev (rev x))
 Cons n (lfappend lf8 x)
 lfappend lf8 (Cons n x)
 Cons n (lfappend x lf8)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_51
 Nil

Problem: synth_35

Problem: synth_28
 lfappend (rev (rev y)) lf2
 lfappend (lfappend y Nil) lf2
 lfappend (lfappend y lf2) Nil
 lfappend y (rev (rev lf2))
 lfappend y (lfappend lf2 Nil)
 lfappend y lf2

Problem: synth_73
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_17
 rev (lfappend (rev lf2) (rev (rev lf7)))
 rev (lfappend (rev lf2) (lfappend lf7 Nil))
 rev (lfappend (rev lf2) lf7)
 lfappend (rev lf7) (rev (rev lf2))
 lfappend (rev lf7) (lfappend lf2 Nil)
 lfappend (rev lf7) lf2

Problem: synth_29
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_45
 Cons n (lfappend (rev (rev x)) Nil)
 Cons n (lfappend (lfappend x Nil) Nil)
 rev (lfappend (rev x) (Cons n Nil))
 Cons n (rev (rev x))
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_76
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_26
 lfappend (lfappend (rev lf7) (Cons n Nil)) x
 lfappend (lfappend (rev lf7) (Cons n x)) Nil
 lfappend (rev lf7) (Cons n (rev (rev x)))
 lfappend (rev lf7) (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n lf7))
 lfappend (rev lf7) (Cons n x)

Problem: synth_70
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_9
 lfappend lf8 (Cons n Nil)
 lfappend (rev (rev lf8)) (Cons n Nil)
 lfappend (rev lf8) (Cons n Nil)
 Cons n (rev lf8)
 Cons n lf8
 Cons n Nil

Problem: synth_30
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_81
 rev (lfappend y lf8)
 rev (lfappend y Nil)
 lfappend (rev y) lf8
 lfappend (rev y) Nil
 lfappend lf8 (rev y)
 rev y

Problem: synth_1
 rev (lfappend (rev lf3) Nil)
 lfappend (rev (rev lf3)) Nil
 lfappend (lfappend lf3 Nil) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_69
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_55
 rev (lfappend (rev lf6) Nil)
 lfappend (rev (rev lf6)) Nil
 lfappend (lfappend lf6 Nil) Nil
 rev (rev lf6)
 lfappend lf6 Nil
 lf6

Problem: synth_71
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_15

Problem: synth_14
 Nil

Problem: synth_79
 Cons n (rev (rev x))
 Cons n (lfappend lf8 x)
 lfappend lf8 (Cons n x)
 Cons n (lfappend x lf8)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_83
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_12
 lfappend (rev (rev lf4)) (Cons n x)
 lfappend (lfappend lf4 Nil) (Cons n x)
 lfappend lf4 (Cons n (rev (rev x)))
 lfappend lf4 (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n (rev lf4)))
 lfappend lf4 (Cons n x)

Problem: synth_62
 Cons n (rev (rev x))
 Cons n (lfappend lf8 x)
 lfappend lf8 (Cons n x)
 Cons n (lfappend x lf8)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_74
 Cons n (lfappend (rev (rev x)) Nil)
 Cons n (lfappend (lfappend x Nil) Nil)
 rev (lfappend (rev x) (Cons n Nil))
 Cons n (rev (rev x))
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_50
 Nil

Problem: synth_20
 lfappend (rev lf7) (lfappend (rev lf5) (lfappend x Nil))
 lfappend (rev lf7) (lfappend lf5 (rev (rev x)))
 lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))
 lfappend (rev lf7) (lfappend (rev lf5) x)
 rev (lfappend (rev x) (lfappend lf5 lf7))
 lfappend (rev lf7) (lfappend lf5 x)

Problem: synth_7
 Cons n (rev (rev x))
 Cons n (lfappend lf8 x)
 lfappend lf8 (Cons n x)
 Cons n (lfappend x lf8)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_61
 lfappend y (rev lf8)
 rev (rev y)
 lfappend lf8 y
 lfappend y lf8
 lfappend y Nil
 y

Problem: synth_27

Problem: synth_42

Problem: synth_16
 lfappend (rev (lfappend lf7 Nil)) Nil
 lfappend (lfappend (rev lf7) Nil) Nil
 rev (rev (rev lf7))
 rev (lfappend lf7 Nil)
 lfappend (rev lf7) Nil
 rev lf7

Problem: synth_40
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_80
 Cons n Nil

Problem: synth_33
 lfappend y (lfappend lf5 (lfappend x Nil))
 lfappend y (lfappend (rev lf5) x)
 rev (lfappend (rev x) (lfappend lf5 (rev y)))
 lfappend (lfappend y (rev lf5)) x
 lfappend (lfappend y lf5) x
 lfappend y (lfappend lf5 x)

Problem: synth_47

Problem: synth_3

Problem: synth_52
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_44
 rev (lfappend (rev lf6) Nil)
 lfappend (rev (rev lf6)) Nil
 lfappend (lfappend lf6 Nil) Nil
 rev (rev lf6)
 lfappend lf6 Nil
 lf6

Problem: synth_60

Problem: synth_36
 lfappend lf8 (lfappend y (Cons n x))
 lfappend y (lfappend lf8 (Cons n x))
 lfappend y (Cons n (lfappend x lf8))
 lfappend y (Cons n (lfappend x Nil))
 rev (lfappend (rev x) (Cons n (rev y)))
 lfappend y (Cons n x)

Problem: synth_82
 Nil

Problem: synth_78
 rev (lfappend y lf8)
 rev (lfappend y Nil)
 lfappend (rev y) lf8
 lfappend (rev y) Nil
 lfappend lf8 (rev y)
 rev y

Problem: synth_43
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 5260 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_2: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_5: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_6: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_7: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_8: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_9: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_10: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_11: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_12: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_13: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 lf2).
Lemma candidate_14: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_15: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_16: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_17: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_18: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_19: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_20: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_21: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_22: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_23: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_24: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_25: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_26: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_27: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend (rev lf5) x)).
Lemma candidate_28: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev lf4)))).
Lemma candidate_29: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 (rev lf5)) x).
Lemma candidate_30: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_31: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend lf5 x)).
Lemma candidate_32: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_33: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_34: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_35: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_36: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_37: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_38: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_39: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_40: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_41: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_42: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_43: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_44: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend lf4 (Cons n x))).
Lemma candidate_45: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (lfappend lf8 (Cons n x))).
Lemma candidate_46: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x lf8))).
Lemma candidate_47: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_48: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_49: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_50: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_51: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_52: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_53: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_54: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_55: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_56: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_57: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_58: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_59: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_60: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_61: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_62: forall (lf3 : lst) (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n (Nil)) x)) lf3.
Lemma candidate_63: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_64: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_65: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_66: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_67: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_68: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_69: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_70: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).
Lemma candidate_71: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_72: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_73: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_74: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_75: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_76: @eq lst Nil (Nil).
Lemma candidate_77: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_78: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_79: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_80: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_81: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_82: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_83: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_84: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_85: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_86: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_87: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_88: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_89: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) (rev (rev lf7)))).
Lemma candidate_90: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_91: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_92: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_93: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_94: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) lf2).
Lemma candidate_95: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_96: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_97: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_98: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_99: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_100: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_101: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_102: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_103: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_104: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_105: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_106: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_107: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_108: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_109: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_110: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) x)).
Lemma candidate_111: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 lf7))).
Lemma candidate_112: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 x)).
Lemma candidate_113: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_114: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_115: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_116: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_117: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_118: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_119: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_120: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_121: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_122: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_123: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_124: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_125: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_126: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_127: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_128: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_129: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_130: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_131: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_132: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_133: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_134: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_135: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_136: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_137: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_138: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_139: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_140: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_141: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_142: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_143: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x lf8))).
Lemma candidate_144: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_145: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (lfappend lf8 (rev lf7)) (Cons n x)).
Lemma candidate_146: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend (rev lf7) (Cons n x))).
Lemma candidate_147: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_148: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_149: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_150: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_151: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_152: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_153: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_154: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_155: forall (lf3 : lst) (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n (Nil)) x)) lf3.
Lemma candidate_156: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_157: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_158: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_159: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_160: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_161: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_162: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
Lemma candidate_163: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_164: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_165: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_166: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_167: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_168: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_169: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_170: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_171: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_172: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_173: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_174: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_175: @eq lst Nil (Nil).
Lemma candidate_176: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_177: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_178: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_179: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_180: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_181: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_182: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (rev (rev y)) lf2).
Lemma candidate_183: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_184: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_185: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_186: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_187: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_188: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_189: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_190: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_191: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_192: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_193: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_194: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_195: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_196: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_197: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_198: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_199: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_200: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_201: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_202: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_203: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_204: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_205: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_206: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_207: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_208: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_209: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_210: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_211: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_212: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_213: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_214: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_215: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_216: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_217: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_218: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_219: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_220: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev y)))).
Lemma candidate_221: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y (rev lf5)) x).
Lemma candidate_222: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_223: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_224: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_225: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_226: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_227: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_228: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_229: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_230: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_231: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_232: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_233: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_234: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_235: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_236: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend y (Cons n x))).
Lemma candidate_237: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_238: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_239: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_240: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_241: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_242: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_243: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_244: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_245: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_246: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_247: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_248: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_249: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_250: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_251: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_252: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_253: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_254: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_255: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_256: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_257: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_258: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_259: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_260: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_261: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_262: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_263: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_264: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_265: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_266: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_267: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_268: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_269: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_270: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_271: forall (lf3 : lst), @eq lst (lf3) lf3.
Lemma candidate_272: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n (Nil)) x)) lf3.
Lemma candidate_273: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_274: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_275: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_276: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_277: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_278: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_279: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_280: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_281: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_282: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_283: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_284: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_285: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_286: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_287: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_288: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_289: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_290: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_291: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_292: @eq lst Nil (Nil).
Lemma candidate_293: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_294: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_295: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_296: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_297: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_298: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_299: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_300: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_301: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_302: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_303: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_304: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_305: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_306: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_307: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_308: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_309: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_310: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_311: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_312: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_313: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_314: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_315: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_316: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_317: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_318: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_319: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_320: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_321: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_322: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_323: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_324: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_325: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_326: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_327: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_328: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_329: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_330: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_331: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_332: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_333: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_334: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 lf2).
Lemma candidate_335: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_336: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_337: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_338: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_339: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_340: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_341: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_342: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_343: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_344: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_345: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_346: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_347: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_348: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_349: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_350: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_351: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_352: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 lf2).
Lemma candidate_353: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_354: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_355: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_356: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_357: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_358: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 lf2).
Lemma candidate_359: forall (y : lst) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend y (rev (lfappend (rev lf2) Nil))).
Lemma candidate_360: forall (y : lst) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend y (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_361: forall (y : lst) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend y (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_362: forall (y : lst) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_363: forall (y : lst) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_364: forall (y : lst) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend y (lf2)).
Lemma candidate_365: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_367: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_368: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_369: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_370: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_371: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_372: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_373: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_374: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_375: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_376: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_377: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_378: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_379: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_380: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_381: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_382: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_383: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_384: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_385: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_386: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_387: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_388: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 lf2).
Lemma candidate_389: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (rev (lfappend (rev lf6) Nil))) (lfappend y lf6).
Lemma candidate_390: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (rev (rev lf6)) Nil)) (lfappend y lf6).
Lemma candidate_391: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (lfappend lf6 Nil) Nil)) (lfappend y lf6).
Lemma candidate_392: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_393: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_394: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lf6)) (lfappend y lf6).
Lemma candidate_395: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_396: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_397: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_398: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_399: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_400: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_401: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_402: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend (rev lf5) x)).
Lemma candidate_403: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev lf4)))).
Lemma candidate_404: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 (rev lf5)) x).
Lemma candidate_405: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_406: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend lf5 x)).
Lemma candidate_407: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_408: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_409: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_410: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_411: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_412: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_413: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_414: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend (rev lf5) x)).
Lemma candidate_415: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev lf4)))).
Lemma candidate_416: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 (rev lf5)) x).
Lemma candidate_417: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_418: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend lf5 x)).
Lemma candidate_419: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_420: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_421: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_422: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_423: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_424: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_425: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_426: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_427: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_428: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_429: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_430: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_431: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_432: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend (rev lf5) x)).
Lemma candidate_433: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev lf4)))).
Lemma candidate_434: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 (rev lf5)) x).
Lemma candidate_435: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_436: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend lf5 x)).
Lemma candidate_437: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) (rev (rev x)))).
Lemma candidate_438: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_439: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend y (lfappend lf5 (rev (rev x)))).
Lemma candidate_440: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_441: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_442: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend y (lfappend lf5 x)).
Lemma candidate_443: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_444: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_445: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_446: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_447: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_448: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_449: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_450: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_451: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_452: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_453: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_454: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_455: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_456: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_457: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_458: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_459: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_460: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_461: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_462: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_463: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_464: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_465: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_466: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_467: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_468: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend (rev lf5) x)).
Lemma candidate_469: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev lf4)))).
Lemma candidate_470: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 (rev lf5)) x).
Lemma candidate_471: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_472: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend lf4 (lfappend lf5 x)).
Lemma candidate_473: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (rev (lfappend (rev lf6) Nil))) (lfappend y lf6).
Lemma candidate_474: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (rev (rev lf6)) Nil)) (lfappend y lf6).
Lemma candidate_475: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (lfappend lf6 Nil) Nil)) (lfappend y lf6).
Lemma candidate_476: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_477: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_478: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lf6)) (lfappend y lf6).
Lemma candidate_479: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_480: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_481: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_482: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_483: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_484: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_485: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend lf4 (Cons n x))).
Lemma candidate_486: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (lfappend lf8 (Cons n x))).
Lemma candidate_487: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x lf8))).
Lemma candidate_488: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_489: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_490: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_491: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_492: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_493: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_494: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_495: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_496: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_497: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend lf4 (Cons n x))).
Lemma candidate_498: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (lfappend lf8 (Cons n x))).
Lemma candidate_499: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x lf8))).
Lemma candidate_500: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_501: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_502: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_503: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_504: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_505: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_506: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_507: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_508: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_509: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_510: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_511: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_512: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_513: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_514: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_515: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend lf4 (Cons n x))).
Lemma candidate_516: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (lfappend lf8 (Cons n x))).
Lemma candidate_517: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x lf8))).
Lemma candidate_518: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_519: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_520: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_521: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_522: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_523: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_524: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_525: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_526: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_527: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_528: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend lf8 x))).
Lemma candidate_529: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_530: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_531: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_532: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma candidate_533: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_534: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_535: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_536: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_537: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_538: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_539: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma candidate_540: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_541: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_542: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_543: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_544: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_545: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_546: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_547: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_548: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_549: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_550: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_551: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_552: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_553: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_554: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_555: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_556: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_557: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_558: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend lf4 (Cons n x))).
Lemma candidate_559: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (lfappend lf8 (Cons n x))).
Lemma candidate_560: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x lf8))).
Lemma candidate_561: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_562: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_563: forall (n : natural) (lf4 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf4 (lfappend (Cons n lf8) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_564: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_565: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_566: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_567: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_568: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_569: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_570: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (rev (lfappend (rev lf6) Nil))) (lfappend y lf6).
Lemma candidate_571: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (rev (rev lf6)) Nil)) (lfappend y lf6).
Lemma candidate_572: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (lfappend lf6 Nil) Nil)) (lfappend y lf6).
Lemma candidate_573: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_574: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_575: forall (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (lf6)) (lfappend y lf6).
Lemma candidate_576: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_577: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_578: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_579: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_580: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_581: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_582: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_583: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).
Lemma candidate_584: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_585: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_586: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_587: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_588: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend lf4 (lfappend (Cons n (Nil)) x)) (lfappend y lf6).
Lemma candidate_589: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_590: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_591: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_592: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_593: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_594: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_595: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_596: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).
Lemma candidate_597: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_598: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_599: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_600: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_601: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_602: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_603: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_604: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_605: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_606: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_607: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_608: @eq lst Nil (Nil).
Lemma candidate_609: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_610: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).
Lemma candidate_611: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_612: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_613: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_614: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_615: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_616: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_617: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_618: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_619: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_620: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_621: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_622: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_623: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_624: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_625: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_626: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_627: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend (rev (rev x)) Nil))).
Lemma candidate_628: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend (lfappend x Nil) Nil))).
Lemma candidate_629: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend y (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_630: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_631: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_632: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma candidate_633: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma candidate_634: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n (Nil)) x)) (lfappend y (Cons n x)).
Lemma candidate_635: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_636: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_637: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_638: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_639: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_640: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_641: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_642: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_643: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_644: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_645: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_646: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_647: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_648: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).
Lemma candidate_649: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_650: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_651: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_652: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x)) (lfappend lf4 (Cons n x)).
Lemma candidate_653: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_654: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_655: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_656: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_657: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_658: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_659: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_660: @eq lst Nil (Nil).
Lemma candidate_661: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) (rev (rev lf7)))).
Lemma candidate_662: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_663: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_664: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_665: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_666: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) lf2).
Lemma candidate_667: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) lf2) (lfappend y lf6).
Lemma candidate_668: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) lf2) (lfappend y lf6).
Lemma candidate_669: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) lf2) (lfappend y lf6).
Lemma candidate_670: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma candidate_671: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf2) (lfappend y lf6).
Lemma candidate_672: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (y) lf2) (lfappend y lf6).
Lemma candidate_673: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_674: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_675: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_676: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_677: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_678: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_679: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_680: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_681: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_682: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_683: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_684: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_685: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_686: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_687: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_688: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_689: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_690: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_691: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) (rev (rev lf7)))).
Lemma candidate_692: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_693: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_694: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_695: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_696: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) lf2).
Lemma candidate_697: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) (rev (rev lf7)))).
Lemma candidate_698: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_699: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_700: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_701: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_702: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) lf2).
Lemma candidate_703: forall (lf7 : lst) (y : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (rev (lfappend (rev lf2) Nil))).
Lemma candidate_704: forall (lf7 : lst) (y : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_705: forall (lf7 : lst) (y : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (lfappend y (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_706: forall (lf7 : lst) (y : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_707: forall (lf7 : lst) (y : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_708: forall (lf7 : lst) (y : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend y (lf2)).
Lemma candidate_709: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) lf2) (lfappend y (Cons n x)).
Lemma candidate_710: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) lf2) (lfappend y (Cons n x)).
Lemma candidate_711: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) lf2)   (lfappend y (Cons n x)).
Lemma candidate_712: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma candidate_713: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend y Nil) lf2) (lfappend y (Cons n x)).
Lemma candidate_714: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (y) lf2) (lfappend y (Cons n x)).
Lemma candidate_715: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_716: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_717: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_718: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_719: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_720: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_721: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_722: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_723: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_724: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_725: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_726: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_727: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_728: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_729: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_730: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_731: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_732: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_733: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_734: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_735: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_736: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_737: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_738: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_739: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) (rev (rev lf7)))).
Lemma candidate_740: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_741: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_742: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_743: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_744: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) lf2).
Lemma candidate_745: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (rev (lfappend (rev lf6) Nil))) (lfappend y lf6).
Lemma candidate_746: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (rev (rev lf6)) Nil)) (lfappend y lf6).
Lemma candidate_747: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_748: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_749: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_750: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lf6)) (lfappend y lf6).
Lemma candidate_751: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_752: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_753: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_754: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_755: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_756: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_757: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_758: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_759: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_760: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) x)).
Lemma candidate_761: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 lf7))).
Lemma candidate_762: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 x)).
Lemma candidate_763: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_764: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_765: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_766: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_767: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_768: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (y) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_769: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_770: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_771: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_772: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_773: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_774: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_775: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_776: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_777: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_778: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) x)).
Lemma candidate_779: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 lf7))).
Lemma candidate_780: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 x)).
Lemma candidate_781: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_782: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_783: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_784: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_785: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_786: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_787: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_788: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_789: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_790: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_791: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_792: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_793: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_794: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_795: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_796: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_797: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_798: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_799: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_800: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_801: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_802: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_803: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_804: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_805: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_806: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_807: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_808: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) x)).
Lemma candidate_809: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 lf7))).
Lemma candidate_810: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 x)).
Lemma candidate_811: forall (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) (rev (rev x)))).
Lemma candidate_812: forall (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_813: forall (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend y (lfappend lf5 (rev (rev x)))).
Lemma candidate_814: forall (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_815: forall (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_816: forall (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x)) (lfappend y (lfappend lf5 x)).
Lemma candidate_817: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_818: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_819: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_820: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_821: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_822: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (y) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_823: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_824: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_825: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_826: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_827: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_828: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_829: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_830: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_831: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_832: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend (rev lf5) x)).
Lemma candidate_833: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 lf7))).
Lemma candidate_834: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 x)).
Lemma candidate_835: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_836: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_837: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_838: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_839: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_840: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_841: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_842: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_843: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_844: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_845: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_846: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_847: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_848: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_849: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_850: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_851: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_852: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_853: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (rev (lfappend (rev lf6) Nil))) (lfappend y lf6).
Lemma candidate_854: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (rev (rev lf6)) Nil)) (lfappend y lf6).
Lemma candidate_855: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_856: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_857: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_858: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lf6)) (lfappend y lf6).
Lemma candidate_859: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x lf8))).
Lemma candidate_860: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_861: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (lfappend lf8 (rev lf7)) (Cons n x)).
Lemma candidate_862: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend (rev lf7) (Cons n x))).
Lemma candidate_863: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_864: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_865: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend y (rev lf8)) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_866: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma candidate_867: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf8 y) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_868: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend y lf8) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_869: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_870: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (y) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma candidate_871: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_872: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_873: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_874: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_875: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_876: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_877: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_878: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_879: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_880: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_881: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_882: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_883: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_884: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_885: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_886: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_887: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_888: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_889: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_890: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_891: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_892: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_893: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_894: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_895: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_896: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_897: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_898: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_899: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_900: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_901: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x lf8))).
Lemma candidate_902: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_903: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (lfappend lf8 (rev lf7)) (Cons n x)).
Lemma candidate_904: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend (rev lf7) (Cons n x))).
Lemma candidate_905: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_906: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_907: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x lf8))).
Lemma candidate_908: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_909: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (lfappend lf8 (rev lf7)) (Cons n x)).
Lemma candidate_910: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend (rev lf7) (Cons n x))).
Lemma candidate_911: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_912: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_913: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_914: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_915: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_916: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_917: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_918: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_919: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_920: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend lf8 x))).
Lemma candidate_921: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_922: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_923: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_924: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_925: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_926: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend y (rev lf8)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_927: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_928: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf8 y) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_929: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend y lf8) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_930: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_931: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (y) (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma candidate_932: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_933: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_934: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_935: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_936: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_937: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_938: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_939: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_940: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_941: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_942: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_943: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_944: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_945: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_946: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_947: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_948: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_949: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_950: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_951: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_952: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_953: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_954: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_955: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_956: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_957: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_958: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_959: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_960: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_961: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_962: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_963: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_964: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_965: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_966: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_967: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_968: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x lf8))).
Lemma candidate_969: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_970: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (lfappend lf8 (rev lf7)) (Cons n x)).
Lemma candidate_971: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend (rev lf7) (Cons n x))).
Lemma candidate_972: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_973: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n lf8) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_974: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (rev (lfappend (rev lf6) Nil))) (lfappend y lf6).
Lemma candidate_975: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (rev (rev lf6)) Nil)) (lfappend y lf6).
Lemma candidate_976: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_977: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_978: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_979: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lf6)) (lfappend y lf6).
Lemma candidate_980: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_981: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_982: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_983: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_984: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_985: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_986: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
Lemma candidate_987: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_988: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_989: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_990: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_991: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_992: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_993: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_994: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_995: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_996: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_997: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (y) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_998: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n (Nil)) x)) (lfappend y lf6).
Lemma candidate_999: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1000: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1001: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1002: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_1003: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_1004: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_1005: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
Lemma candidate_1006: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_1007: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_1008: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_1009: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1010: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_1011: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1012: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_1013: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_1014: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_1015: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_1016: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_1017: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1018: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_1019: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_1020: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_1021: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_1022: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_1023: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_1024: @eq lst Nil (Nil).
Lemma candidate_1025: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
Lemma candidate_1026: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_1027: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_1028: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_1029: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1030: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_1031: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1032: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1033: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_1034: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_1035: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1036: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1037: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend (rev (rev x)) Nil))).
Lemma candidate_1038: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend (lfappend x Nil) Nil))).
Lemma candidate_1039: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1040: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1041: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1042: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1043: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1044: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1045: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_1046: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_1047: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_1048: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1049: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1050: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1051: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1052: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1053: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1054: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1055: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (y) (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)).
Lemma candidate_1056: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n (Nil)) x))   (lfappend y (Cons n x)).
Lemma candidate_1057: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1058: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_1059: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1060: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1061: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1062: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1063: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1064: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1065: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1066: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_1067: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_1068: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_1069: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1070: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1071: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1072: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_1073: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_1074: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_1075: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
Lemma candidate_1076: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_1077: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_1078: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_1079: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1080: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n x)).
Lemma candidate_1081: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1082: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_1083: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_1084: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_1085: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_1086: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_1087: forall (lf7 : lst), @eq lst (rev lf7) (rev lf7).
Lemma candidate_1088: @eq lst Nil (Nil).
Lemma candidate_1089: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_1090: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_1091: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_1092: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1093: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1094: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1095: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) lf2) (lfappend y lf6).
Lemma candidate_1096: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) lf2) (lfappend y lf6).
Lemma candidate_1097: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) lf2) (lfappend y lf6).
Lemma candidate_1098: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma candidate_1099: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf2) (lfappend y lf6).
Lemma candidate_1100: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (y) lf2) (lfappend y lf6).
Lemma candidate_1101: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (rev (rev y)) lf2).
Lemma candidate_1102: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_1103: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_1104: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_1105: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_1106: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_1107: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev (lfappend y Nil)) Nil)) lf2)   (lfappend y lf6).
Lemma candidate_1108: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (lfappend (rev y) Nil) Nil)) lf2)   (lfappend y lf6).
Lemma candidate_1109: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (rev (rev y)))) lf2) (lfappend y lf6).
Lemma candidate_1110: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) lf2) (lfappend y lf6).
Lemma candidate_1111: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) lf2) (lfappend y lf6).
Lemma candidate_1112: forall (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf6).
Lemma candidate_1113: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (rev (rev y)) lf2).
Lemma candidate_1114: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_1115: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_1116: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_1117: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_1118: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_1119: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1120: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1121: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1122: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1123: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1124: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1125: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_1126: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_1127: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_1128: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_1129: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_1130: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1131: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1132: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1133: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1134: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1135: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1136: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1137: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (rev (rev y)) lf2).
Lemma candidate_1138: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_1139: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_1140: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_1141: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_1142: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_1143: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1144: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1145: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_1146: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_1147: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_1148: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1149: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) lf2) (lfappend y (Cons n x)).
Lemma candidate_1150: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) lf2) (lfappend y (Cons n x)).
Lemma candidate_1151: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) lf2)   (lfappend y (Cons n x)).
Lemma candidate_1152: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma candidate_1153: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend y Nil) lf2) (lfappend y (Cons n x)).
Lemma candidate_1154: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (y) lf2) (lfappend y (Cons n x)).
Lemma candidate_1155: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (rev (lfappend (rev lf2) Nil))).
Lemma candidate_1156: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_1157: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_1158: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_1159: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_1160: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lf2)).
Lemma candidate_1161: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (lfappend (rev (lfappend y Nil)) Nil)) lf2)   (lfappend y (Cons n x)).
Lemma candidate_1162: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (lfappend (lfappend (rev y) Nil) Nil)) lf2)   (lfappend y (Cons n x)).
Lemma candidate_1163: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (rev (rev (rev y)))) lf2) (lfappend y (Cons n x)).
Lemma candidate_1164: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) lf2) (lfappend y (Cons n x)).
Lemma candidate_1165: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) lf2) (lfappend y (Cons n x)).
Lemma candidate_1166: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (Cons n x)).
Lemma candidate_1167: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1168: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_1169: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1170: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1171: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1172: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1173: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (rev (rev y)) lf2).
Lemma candidate_1174: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_1175: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_1176: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_1177: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_1178: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_1179: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1180: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1181: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1182: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1183: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1184: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1185: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1186: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1187: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1188: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_1189: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_1190: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_1191: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1192: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1193: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1194: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1195: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1196: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1197: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev lf6) Nil)))   (lfappend y lf6).
Lemma candidate_1198: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (rev (rev lf6)) Nil))   (lfappend y lf6).
Lemma candidate_1199: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_1200: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1201: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1202: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lf6)) (lfappend y lf6).
Lemma candidate_1203: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1204: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1205: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1206: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_1207: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_1208: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (y) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_1209: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_1210: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_1211: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_1212: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1213: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1214: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1215: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1216: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_1217: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev y)))).
Lemma candidate_1218: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y (rev lf5)) x).
Lemma candidate_1219: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_1220: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_1221: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst   (lfappend (rev (lfappend (rev (lfappend y Nil)) Nil)) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1222: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst   (lfappend (rev (lfappend (lfappend (rev y) Nil) Nil)) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1223: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (rev (rev y)))) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1224: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1225: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend lf5 x))   (lfappend y lf6).
Lemma candidate_1226: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y lf6).
Lemma candidate_1227: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_1228: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_1229: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_1230: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_1231: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_1232: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_1233: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1234: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1235: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1236: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1237: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1238: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1239: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1240: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_1241: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev y)))).
Lemma candidate_1242: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y (rev lf5)) x).
Lemma candidate_1243: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_1244: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_1245: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_1246: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_1247: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_1248: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_1249: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_1250: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1251: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1252: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1253: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1254: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1255: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1256: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1257: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1258: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1259: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_1260: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (rev (rev x))))   (lfappend y (Cons n x)).
Lemma candidate_1261: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1262: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1263: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1264: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_1265: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev y)))).
Lemma candidate_1266: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y (rev lf5)) x).
Lemma candidate_1267: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_1268: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_1269: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1270: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1271: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1272: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_1273: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_1274: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (y) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_1275: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) (rev (rev x)))).
Lemma candidate_1276: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) (lfappend x Nil))).
Lemma candidate_1277: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (rev (rev x)))).
Lemma candidate_1278: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1279: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_1280: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_1281: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1282: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1283: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_1284: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_1285: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_1286: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1287: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst   (lfappend (rev (lfappend (rev (lfappend y Nil)) Nil)) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1288: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst   (lfappend (rev (lfappend (lfappend (rev y) Nil) Nil)) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1289: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (rev (rev y)))) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1290: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1291: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend lf5 x))   (lfappend y (Cons n x)).
Lemma candidate_1292: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x)) (lfappend y (Cons n x)).
Lemma candidate_1293: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (rev (rev x))).
Lemma candidate_1294: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) (lfappend x Nil)).
Lemma candidate_1295: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_1296: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_1297: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend (rev lf5) x).
Lemma candidate_1298: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 x).
Lemma candidate_1299: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1300: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_1301: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1302: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1303: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1304: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1305: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1306: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1307: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1308: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1309: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1310: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1311: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1312: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1313: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1314: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_1315: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_1316: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_1317: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1318: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_1319: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (rev (lfappend (rev x) (lfappend lf5 (rev y)))).
Lemma candidate_1320: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y (rev lf5)) x).
Lemma candidate_1321: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_1322: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_1323: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1324: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1325: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1326: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1327: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1328: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1329: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_1330: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_1331: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_1332: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1333: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1334: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1335: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev lf6) Nil)))   (lfappend y lf6).
Lemma candidate_1336: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (rev (rev lf6)) Nil))   (lfappend y lf6).
Lemma candidate_1337: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_1338: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1339: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1340: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lf6)) (lfappend y lf6).
Lemma candidate_1341: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend y (rev lf8)) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1342: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma candidate_1343: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf8 y) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1344: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend y lf8) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1345: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1346: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (y) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma candidate_1347: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend y (Cons n x))).
Lemma candidate_1348: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_1349: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_1350: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1351: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1352: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1353: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (rev (lfappend y lf8))) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1354: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1355: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend (rev y) lf8)) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1356: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1357: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend lf8 (rev y))) (lfappend (Cons n lf8) x))   (lfappend y lf6).
Lemma candidate_1358: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x)) (lfappend y lf6).
Lemma candidate_1359: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend y (Cons n x))).
Lemma candidate_1360: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_1361: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_1362: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1363: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1364: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1365: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_1366: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_1367: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_1368: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_1369: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_1370: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_1371: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1372: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1373: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1374: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1375: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1376: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1377: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_1378: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_1379: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_1380: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_1381: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_1382: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1383: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1384: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1385: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1386: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1387: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1388: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1389: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1390: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1391: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1392: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1393: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1394: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1395: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1396: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1397: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_1398: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_1399: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_1400: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1401: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend y (Cons n x))).
Lemma candidate_1402: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_1403: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_1404: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1405: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1406: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1407: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1408: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1409: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_1410: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (rev (rev x))))   (lfappend y (Cons n x)).
Lemma candidate_1411: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1412: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1413: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend y (rev lf8)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1414: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1415: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf8 y) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1416: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend y lf8) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1417: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1418: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (y) (lfappend (Cons n lf8) x)) (lfappend y (Cons n x)).
Lemma candidate_1419: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1420: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend lf8 x))).
Lemma candidate_1421: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_1422: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_1423: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1424: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1425: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1426: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev (lfappend y lf8))) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1427: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1428: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend (rev y) lf8)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1429: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1430: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend lf8 (rev y))) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1431: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1432: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend lf8 (lfappend y (Cons n x))).
Lemma candidate_1433: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (lfappend lf8 (Cons n x))).
Lemma candidate_1434: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x lf8))).
Lemma candidate_1435: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1436: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1437: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n x)).
Lemma candidate_1438: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1439: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_1440: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1441: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1442: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1443: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_1444: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (rev (rev x))).
Lemma candidate_1445: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend lf8 x)).
Lemma candidate_1446: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (lfappend lf8 (Cons n x)).
Lemma candidate_1447: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x lf8)).
Lemma candidate_1448: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n (lfappend x Nil)).
Lemma candidate_1449: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (Cons n lf8) x) (Cons n x).
Lemma candidate_1450: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1451: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1452: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1453: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1454: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1455: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1456: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1457: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1458: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1459: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_1460: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_1461: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_1462: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1463: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1464: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1465: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1466: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1467: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1468: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1469: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1470: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1471: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1472: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1473: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1474: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_1475: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_1476: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_1477: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1478: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1479: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1480: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev lf6) Nil)))   (lfappend y lf6).
Lemma candidate_1481: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (rev (rev lf6)) Nil))   (lfappend y lf6).
Lemma candidate_1482: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_1483: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_1484: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_1485: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lf6)) (lfappend y lf6).
Lemma candidate_1486: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1487: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1488: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1489: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_1490: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1491: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (y) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_1492: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1493: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_1494: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1495: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1496: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1497: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1498: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n (Nil)) x)) (lfappend y lf6).
Lemma candidate_1499: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst   (lfappend (rev (lfappend (rev (lfappend y Nil)) Nil))      (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_1500: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst   (lfappend (rev (lfappend (lfappend (rev y) Nil) Nil))      (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_1501: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (rev (rev y)))) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1502: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (lfappend y Nil))) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1503: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n Nil) x))   (lfappend y lf6).
Lemma candidate_1504: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y lf6).
Lemma candidate_1505: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1506: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_1507: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_1508: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_1509: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_1510: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1511: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_1512: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_1513: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1514: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_1515: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_1516: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_1517: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_1518: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_1519: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_1520: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_1521: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_1522: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_1523: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1524: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_1525: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_1526: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_1527: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_1528: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_1529: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y lf6).
Lemma candidate_1530: @eq lst Nil (Nil).
Lemma candidate_1531: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1532: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1533: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1534: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1535: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1536: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 6099 seconds
Duplicates removed: 1205
Filtered by Quickchick: 194
Filtered by script: 26
Remaining: 111

Lemmas: 
Lemma candidate_193: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_302: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_5: forall (lf3 : lst), @eq lst (rev (rev lf3)) lf3.
Lemma candidate_303: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_6: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) lf3.
Lemma candidate_196: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_198: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_197: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_85: forall (lf7 : lst), @eq lst (rev lf7) (rev (rev (rev lf7))).
Lemma candidate_326: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_300: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_299: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_87: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev lf7) Nil).
Lemma candidate_86: forall (lf7 : lst), @eq lst (rev lf7) (rev (lfappend lf7 Nil)).
Lemma candidate_3: forall (lf3 : lst), @eq lst (lfappend (rev (rev lf3)) Nil) lf3.
Lemma candidate_2: forall (lf3 : lst), @eq lst (rev (lfappend (rev lf3) Nil)) lf3.
Lemma candidate_327: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_301: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_4: forall (lf3 : lst), @eq lst (lfappend (lfappend lf3 Nil) Nil) lf3.
Lemma candidate_189: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_188: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_338: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_335: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) lf6) (lfappend y lf6).
Lemma candidate_308: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (rev (rev lf6))).
Lemma candidate_305: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (rev (rev y)) lf6).
Lemma candidate_195: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_194: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_190: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_187: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y lf2).
Lemma candidate_22: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (rev (rev x))).
Lemma candidate_1202: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lf6)) (lfappend y lf6).
Lemma candidate_1160: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lf2)).
Lemma candidate_339: forall (y : lst) (lf6 : lst), @eq lst (lfappend y (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_337: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y lf6) Nil) (lfappend y lf6).
Lemma candidate_336: forall (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend y Nil) lf6) (lfappend y lf6).
Lemma candidate_325: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_323: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_309: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend y (lfappend lf6 Nil)).
Lemma candidate_307: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y lf6) Nil).
Lemma candidate_306: forall (y : lst) (lf6 : lst), @eq lst (lfappend y lf6) (lfappend (lfappend y Nil) lf6).
Lemma candidate_66: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (rev (rev x))).
Lemma candidate_23: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 x) (lfappend lf5 (lfappend x Nil)).
Lemma candidate_84: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (lfappend (rev lf7) Nil) Nil).
Lemma candidate_83: forall (lf7 : lst), @eq lst (rev lf7) (lfappend (rev (lfappend lf7 Nil)) Nil).
Lemma candidate_11: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (rev (rev lf2))).
Lemma candidate_8: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (rev (rev lf4)) lf2).
Lemma candidate_324: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_67: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_12: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend lf4 (lfappend lf2 Nil)).
Lemma candidate_10: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 lf2) Nil).
Lemma candidate_9: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 lf2) (lfappend (lfappend lf4 Nil) lf2).
Lemma candidate_91: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (rev (lfappend (rev lf2) lf7)).
Lemma candidate_1200: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (rev lf6))) (lfappend y lf6).
Lemma candidate_185: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (rev (rev lf2))).
Lemma candidate_367: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_365: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_319: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_317: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (rev (rev y)) (Cons n x)).
Lemma candidate_1201: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf6 Nil)) (lfappend y lf6).
Lemma candidate_186: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend y (lfappend lf2 Nil)).
Lemma candidate_184: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y lf2) Nil).
Lemma candidate_183: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2) (lfappend (lfappend y Nil) lf2).
Lemma candidate_92: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (rev (rev lf2))).
Lemma candidate_368: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_320: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_318: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_63: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (rev (rev x)) Nil)).
Lemma candidate_30: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x)) (lfappend (lfappend lf4 lf5) x).
Lemma candidate_93: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2) (lfappend (rev lf7) (lfappend lf2 Nil)).
Lemma candidate_369: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_321: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_64: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_90: forall (lf7 : lst) (lf2 : lst), @eq lst (lfappend (rev lf7) lf2)   (rev (lfappend (rev lf2) (lfappend lf7 Nil))).
Lemma candidate_1260: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (rev (rev x))))   (lfappend y (Cons n x)).
Lemma candidate_223: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 x)).
Lemma candidate_222: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend (lfappend y lf5) x).
Lemma candidate_1198: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (rev (rev lf6)) Nil))   (lfappend y lf6).
Lemma candidate_1197: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev lf6) Nil)))   (lfappend y lf6).
Lemma candidate_1156: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (lfappend (rev (rev lf2)) Nil)).
Lemma candidate_1155: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (rev (lfappend (rev lf2) Nil))).
Lemma candidate_1261: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend x Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1199: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (lfappend lf6 Nil) Nil))   (lfappend y lf6).
Lemma candidate_1157: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) lf2)   (lfappend y (lfappend (lfappend lf2 Nil) Nil)).
Lemma candidate_1054: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend y Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_71: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (rev (rev x)))).
Lemma candidate_69: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (rev (rev lf4)) (Cons n x)).
Lemma candidate_26: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf4 (lfappend lf5 x))   (lfappend lf4 (lfappend lf5 (lfappend x Nil))).
Lemma candidate_72: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend lf4 (Cons n (lfappend x Nil))).
Lemma candidate_70: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (lfappend (lfappend lf4 Nil) (Cons n x)).
Lemma candidate_1277: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (rev (rev x)))).
Lemma candidate_166: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n lf7))).
Lemma candidate_73: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev lf4)))).
Lemma candidate_1259: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (rev (lfappend (rev x) (Cons n Nil))))   (lfappend y (Cons n x)).
Lemma candidate_1257: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (rev (rev x)) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_275: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_218: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) (lfappend lf5 x))   (lfappend y (lfappend lf5 (lfappend x Nil))).
Lemma candidate_108: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (rev (rev x)))).
Lemma candidate_1420: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n lf8) x))   (lfappend y (Cons n (lfappend lf8 x))).
Lemma candidate_1258: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (Cons n (lfappend (lfappend x Nil) Nil)))   (lfappend y (Cons n x)).
Lemma candidate_1051: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev (rev y)) Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_1050: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend (rev y) Nil)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_276: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_274: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_164: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (rev (rev x)))).
Lemma candidate_109: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev lf7) (lfappend lf5 x))   (lfappend (rev lf7) (lfappend lf5 (lfappend x Nil))).
Lemma candidate_1052: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (lfappend y Nil) Nil) (lfappend (Cons n Nil) x))   (lfappend y (Cons n x)).
Lemma candidate_277: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x))   (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_165: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (rev lf7) (Cons n (lfappend x Nil))).
Lemma candidate_163: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n x)) Nil).
Lemma candidate_162: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev lf7) (lfappend (Cons n Nil) x))   (lfappend (lfappend (rev lf7) (Cons n Nil)) x).
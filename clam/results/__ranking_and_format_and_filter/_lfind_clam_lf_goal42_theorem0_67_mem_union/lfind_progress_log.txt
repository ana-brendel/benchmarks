File Information
- File name: goal42
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal42_theorem0_67_mem_union
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal42_theorem0_67_mem_union
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 : natural) (y0 z0 : lst) (_ : @eq bool (lst_mem x0 y0) true),
@eq bool (lst_mem x0 (lst_union y0 z0)) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_mem x (lst_union y z)) true

* Hypothesis:
Heqb : @eq bool (lst_mem n z) true
x : natural
H : @eq bool (lfeqb x n) true
y : lst
z : lst
n : natural
IHy : forall _ : @eq bool (lst_mem x y) true,
@eq bool (lst_mem x (lst_union y z)) true

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : lst
z : lst
n : natural

* Terms:
lst_mem n z : bool
x : natural
forall _ : @eq bool (lst_mem x y) true,
@eq bool (lst_mem x (lst_union y z)) true : Prop
lst_mem x (lst_union y z) : bool
y : lst
@eq bool (lfeqb x n) true : Prop
true : bool
lst_mem x y : bool
@eq bool (lst_mem n z) true : Prop
lst_union y z : lst
bool : Set
@eq bool (lst_mem x (lst_union y z)) true : Prop
lst : Set
lfeqb x n : bool
z : lst
@eq bool (lst_mem x y) true : Prop
natural : Set
n : natural

* Functions:
lfeqb  : forall (_ : natural) (_ : natural), bool
lst_union  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : bool = true
lf1 : bool = lst_mem x (lst_union y z)
lf2 : lst = lst_union y z

Generalizations:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_union y z)) true.


<---VALIDITY CHECKS--->
Time elapsed: 12 seconds
Valid:

Invalid:
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_union y z)) true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 24 seconds
Generalizations:
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_union y z)) true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj4_imp: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), forall
  _ : forall _ : @eq bool (lst_mem x y) lf3,
      @eq bool (lst_mem x (lst_union y z)) lf3,
@eq bool (lst_mem x (lst_union y z)) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 35 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma conj4_imp: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), forall
  _ : forall _ : @eq bool (lst_mem x y) lf3,
      @eq bool (lst_mem x (lst_union y z)) lf3,
@eq bool (lst_mem x (lst_union y z)) lf3.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_union y z)) true.


<---CREATE SKETCHES--->
Time elapsed: 35 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool (##hole##) lf3
Sketch conj3_term_sketch0 : @eq bool (lst_mem x lf2) (##hole##)
Sketch conj4_sketch0 : @eq bool (lst_mem x (##hole##)) lf3
Sketch conj4_sketch1 : @eq bool (##hole##) lf3
Sketch conj4_term_sketch0 : @eq lst (lst_union y z) (##hole##)
Sketch conj4_term_sketch1 : @eq bool (lst_mem x (lst_union y z)) (##hole##)
Sketch conj4_imp_sketch0 : forall
  _ : forall _ : @eq bool (##hole##) lf3,
      @eq bool (lst_mem x (lst_union y z)) lf3,
@eq bool (lst_mem x (lst_union y z)) lf3
Sketch conj4_imp_sketch1 : forall
  _ : forall _ : @eq bool (lst_mem x y) lf3,
      @eq bool (lst_mem x (##hole##)) lf3,
@eq bool (lst_mem x (##hole##)) lf3
Sketch conj4_imp_sketch2 : forall _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (##hole##) lf3,
@eq bool (##hole##) lf3
Sketch conj4_imp_term_sketch0 : @eq bool (lst_mem x y) (##hole##)
Sketch conj4_imp_term_sketch1 : @eq lst (lst_union y z) (##hole##)
Sketch conj4_imp_term_sketch2 : @eq bool (lst_mem x (lst_union y z)) (##hole##)
Sketch conj5_sketch0 : @eq bool lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq bool true (##hole##)
Sketch conj7_sketch0 : @eq bool (##hole##) true
Sketch conj7_sketch1 : @eq bool (lst_mem x lf2) (##hole##)
Sketch conj7_term_sketch0 : @eq bool (lst_mem x lf2) (##hole##)
Sketch conj7_term_sketch1 : @eq bool true (##hole##)
Sketch conj8_sketch0 : @eq bool (lst_mem x (##hole##)) true
Sketch conj8_sketch1 : @eq bool (##hole##) true
Sketch conj8_sketch2 : @eq bool (lst_mem x (lst_union y z)) (##hole##)
Sketch conj8_term_sketch0 : @eq lst (lst_union y z) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (lst_mem x (lst_union y z)) (##hole##)
Sketch conj8_term_sketch2 : @eq bool true (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 48 seconds
Problems per Sketch:
Sketch conj4_imp_sketch2 --> Problem  synth_8
Sketch conj7_sketch1 --> Problem  synth_13
Sketch conj5_sketch0 --> Problem  synth_10
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj4_imp_term_sketch2 --> Problem  synth_5
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj4_imp_term_sketch0 --> Problem  synth_9
Sketch conj8_sketch1 --> Problem  synth_12
Sketch conj7_sketch0 --> Problem  synth_12
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj4_imp_sketch1 --> Problem  synth_7
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj8_term_sketch0 --> Problem  synth_4
Sketch conj4_imp_term_sketch1 --> Problem  synth_4
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj8_sketch2 --> Problem  synth_15
Sketch conj8_sketch0 --> Problem  synth_14
Sketch conj7_term_sketch1 --> Problem  synth_11
Sketch conj8_term_sketch1 --> Problem  synth_5
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch2 --> Problem  synth_11
Sketch conj5_term_sketch0 --> Problem  synth_11
Sketch conj4_imp_sketch0 --> Problem  synth_6


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 147 seconds

Problem: synth_15
 orb match x with | Succ _ => false | Zero => true end false
 orb (lfeqb x Zero) false
 lfeqb x x
 match x with | Succ _ => false | Zero => true end
 lfeqb x Zero
 true

Problem: synth_14
 Nil

Problem: synth_10
 true

Problem: synth_8
 lfeqb x (Succ Zero)
 lst_mem x y
 lst_mem Zero y
 mem y x
 mem y Zero
 false

Problem: synth_3
 Nil

Problem: synth_9
 lfeqb x (Succ Zero)
 lst_mem x y
 lst_mem Zero y
 mem y x
 mem y Zero
 false

Problem: synth_13
 orb match x with | Succ _ => false | Zero => true end false
 orb (lfeqb x Zero) false
 lfeqb x x
 match x with | Succ _ => false | Zero => true end
 lfeqb x Zero
 true

Problem: synth_12
 false

Problem: synth_6
 lst_mem Zero y
 mem z x
 mem y x
 mem z Zero
 mem y Zero
 false

Problem: synth_11
 true

Problem: synth_7
 lst_union y (lst_union y y)
 lst_union y (lst_union y Nil)
 lst_union y y
 lst_union y Nil
 y
 Nil

Problem: synth_5
 lst_mem Zero y
 mem z x
 mem y x
 mem z Zero
 mem y Zero
 false

Problem: synth_4
 lst_union y y
 lst_union z Nil
 lst_union y Nil
 z
 y
 Nil

Problem: synth_1
 false

Problem: synth_2
 lfeqb x (Succ Zero)
 lst_mem x lf2
 lst_mem Zero lf2
 mem lf2 x
 mem lf2 Zero
 false

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 148 seconds
Lemmas:
Lemma candidate_1: forall (lf3 : bool), @eq bool (false) lf3.
Lemma candidate_2: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x (Succ Zero)).
Lemma candidate_3: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem x lf2).
Lemma candidate_4: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem Zero lf2).
Lemma candidate_5: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem lf2 x).
Lemma candidate_6: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem lf2 Zero).
Lemma candidate_7: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (false).
Lemma candidate_8: forall (lf3 : bool) (x : natural), @eq bool (lst_mem x (Nil)) lf3.
Lemma candidate_9: forall (lf3 : bool), @eq bool (false) lf3.
Lemma candidate_10: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union y y).
Lemma candidate_11: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union z Nil).
Lemma candidate_12: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union y Nil).
Lemma candidate_13: forall (z : lst) (y : lst), @eq lst (lst_union y z) (z).
Lemma candidate_14: forall (z : lst) (y : lst), @eq lst (lst_union y z) (y).
Lemma candidate_15: forall (z : lst) (y : lst), @eq lst (lst_union y z) (Nil).
Lemma candidate_16: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (lst_mem Zero y).
Lemma candidate_17: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem z x).
Lemma candidate_18: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem y x).
Lemma candidate_19: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem z Zero).
Lemma candidate_20: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem y Zero).
Lemma candidate_21: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (false).
Lemma candidate_22: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem Zero y) lf3,       @eq bool (lst_mem x (lst_union y z)) lf3, @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma candidate_23: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (mem z x) lf3,       @eq bool (lst_mem x (lst_union y z)) lf3, @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma candidate_24: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (mem y x) lf3,       @eq bool (lst_mem x (lst_union y z)) lf3, @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma candidate_25: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (mem z Zero) lf3,       @eq bool (lst_mem x (lst_union y z)) lf3, @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma candidate_26: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (mem y Zero) lf3,       @eq bool (lst_mem x (lst_union y z)) lf3, @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma candidate_27: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (false) lf3,       @eq bool (lst_mem x (lst_union y z)) lf3, @eq bool (lst_mem x (lst_union y z)) lf3.
Lemma candidate_28: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3,       @eq bool (lst_mem x (lst_union y (lst_union y y))) lf3, @eq bool (lst_mem x (lst_union y (lst_union y y))) lf3.
Lemma candidate_29: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3,       @eq bool (lst_mem x (lst_union y (lst_union y Nil))) lf3, @eq bool (lst_mem x (lst_union y (lst_union y Nil))) lf3.
Lemma candidate_30: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3,       @eq bool (lst_mem x (lst_union y y)) lf3, @eq bool (lst_mem x (lst_union y y)) lf3.
Lemma candidate_31: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3,       @eq bool (lst_mem x (lst_union y Nil)) lf3, @eq bool (lst_mem x (lst_union y Nil)) lf3.
Lemma candidate_32: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (lst_mem x (y)) lf3, @eq bool (lst_mem x (y)) lf3.
Lemma candidate_33: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (lst_mem x (Nil)) lf3, @eq bool (lst_mem x (Nil)) lf3.
Lemma candidate_34: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3,       @eq bool (lfeqb x (Succ Zero)) lf3, @eq bool (lfeqb x (Succ Zero)) lf3.
Lemma candidate_35: forall (lf3 : bool) (y : lst) (x : natural), forall _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (lst_mem x y) lf3, @eq bool (lst_mem x y) lf3.
Lemma candidate_36: forall (lf3 : bool) (y : lst) (x : natural), forall   _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (lst_mem Zero y) lf3, @eq bool (lst_mem Zero y) lf3.
Lemma candidate_37: forall (lf3 : bool) (y : lst) (x : natural), forall _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (mem y x) lf3, @eq bool (mem y x) lf3.
Lemma candidate_38: forall (lf3 : bool) (y : lst) (x : natural), forall _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (mem y Zero) lf3, @eq bool (mem y Zero) lf3.
Lemma candidate_39: forall (lf3 : bool) (y : lst) (x : natural), forall _ : forall _ : @eq bool (lst_mem x y) lf3, @eq bool (false) lf3, @eq bool (false) lf3.
Lemma candidate_40: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (lfeqb x (Succ Zero)).
Lemma candidate_41: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (lst_mem x y).
Lemma candidate_42: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (lst_mem Zero y).
Lemma candidate_43: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (mem y x).
Lemma candidate_44: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (mem y Zero).
Lemma candidate_45: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (false).
Lemma candidate_46: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union y y).
Lemma candidate_47: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union z Nil).
Lemma candidate_48: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union y Nil).
Lemma candidate_49: forall (z : lst) (y : lst), @eq lst (lst_union y z) (z).
Lemma candidate_50: forall (z : lst) (y : lst), @eq lst (lst_union y z) (y).
Lemma candidate_51: forall (z : lst) (y : lst), @eq lst (lst_union y z) (Nil).
Lemma candidate_52: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (lst_mem Zero y).
Lemma candidate_53: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem z x).
Lemma candidate_54: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem y x).
Lemma candidate_55: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem z Zero).
Lemma candidate_56: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem y Zero).
Lemma candidate_57: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (false).
Lemma candidate_58: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_59: @eq bool true (true).
Lemma candidate_60: @eq bool (false) true.
Lemma candidate_61: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2)   (orb match x with | Succ _ => false | Zero => true end false).
Lemma candidate_62: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x Zero) false).
Lemma candidate_63: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x x).
Lemma candidate_64: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_65: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x Zero).
Lemma candidate_66: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (true).
Lemma candidate_67: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x (Succ Zero)).
Lemma candidate_68: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem x lf2).
Lemma candidate_69: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem Zero lf2).
Lemma candidate_70: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem lf2 x).
Lemma candidate_71: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem lf2 Zero).
Lemma candidate_72: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (false).
Lemma candidate_73: @eq bool true (true).
Lemma candidate_74: forall (x : natural), @eq bool (lst_mem x (Nil)) true.
Lemma candidate_75: @eq bool (false) true.
Lemma candidate_76: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z))   (orb match x with | Succ _ => false | Zero => true end false).
Lemma candidate_77: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (orb (lfeqb x Zero) false).
Lemma candidate_78: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (lfeqb x x).
Lemma candidate_79: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z))   (match x with | Succ _ => false | Zero => true end).
Lemma candidate_80: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (lfeqb x Zero).
Lemma candidate_81: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (true).
Lemma candidate_82: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union y y).
Lemma candidate_83: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union z Nil).
Lemma candidate_84: forall (z : lst) (y : lst), @eq lst (lst_union y z) (lst_union y Nil).
Lemma candidate_85: forall (z : lst) (y : lst), @eq lst (lst_union y z) (z).
Lemma candidate_86: forall (z : lst) (y : lst), @eq lst (lst_union y z) (y).
Lemma candidate_87: forall (z : lst) (y : lst), @eq lst (lst_union y z) (Nil).
Lemma candidate_88: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (lst_mem Zero y).
Lemma candidate_89: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem z x).
Lemma candidate_90: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem y x).
Lemma candidate_91: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem z Zero).
Lemma candidate_92: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (mem y Zero).
Lemma candidate_93: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_union y z)) (false).
Lemma candidate_94: @eq bool true (true).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 241 seconds
Duplicates removed: 34
Filtered by Quickchick: 55
Filtered by script: 5
Remaining: 0

Lemmas: 
File Information
- File name: goal41
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal41_theorem0_98_subset_append_general
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal41_theorem0_98_subset_append_general
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : lst) (_ : @eq bool (lst_subset x0 y0) true),
@eq bool (lst_eq (lst_intersection x0 y0) x0) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) true

* Hypothesis:
IHx : forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true
H0 : @eq bool (lst_mem n y) true
H1 : @eq bool (lst_subset x (lst_intersection x y)) true
x : lst
H : @eq bool (lst_subset (lst_intersection x y) x) true
y : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lst_eq (lst_intersection x y) x : bool
x : lst
lfappend (Cons n Nil) x : lst
forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
y : lst
@eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) true : Prop
true : bool
@eq bool (lst_mem n y) true : Prop
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
@eq bool (lst_subset x y) true : Prop
@eq bool (lst_subset (lst_intersection x y) x) true : Prop
bool : Set
lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x) : bool
lst_subset (lst_intersection x y) x : bool
lst : Set
lst_mem n y : bool
Cons n Nil : lst
lst_subset x (lst_intersection x y) : bool
@eq bool (lst_subset x (lst_intersection x y)) true : Prop
lst_subset x y : bool
natural : Set
lst_intersection x y : lst
n : natural
Nil : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
lst_subset  : forall (_ : lst) (_ : lst), bool
lst_eq  : forall (_ : lst) (_ : lst), bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_intersection  : forall (_ : lst) (_ : lst), lst
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lst_intersection x y
lf1 : bool = lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)
lf4 : lst = Cons n Nil
lf5 : bool = true
lf2 : lst = lfappend (Cons n Nil) x
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (lf3 : lst), @eq bool (lst_subset lf3 lf2) lf5.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma conj21: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf3 lf2) true.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma conj49: forall (lf2 : lst) (lf5 : bool) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) true.
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) true.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) true.
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) true.


<---VALIDITY CHECKS--->
Time elapsed: 125 seconds
Valid:
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) true.
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) true.
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) true.

Invalid:
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) true.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma conj49: forall (lf2 : lst) (lf5 : bool) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma conj21: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf3 lf2) true.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (lf3 : lst), @eq bool (lst_subset lf3 lf2) lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.

<---ADD IMPLICATIONS--->
Time elapsed: 181 seconds
Generalizations:
Lemma conj60_imp: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.
Lemma conj59_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) true.
Lemma conj51_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma conj49_imp: forall (lf2 : lst) (lf5 : bool) (x : lst) (y : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma conj49: forall (lf2 : lst) (lf5 : bool) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma conj32_imp: forall (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) true)
        (@eq bool (lst_subset lf3 x) true),
@eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma conj31_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) true)
        (@eq bool (lst_subset lf3 x) true),
@eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma conj28_imp: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset lf3 x) lf5,
@eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma conj27_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma conj23_imp: forall (x : lst) (lf4 : lst) (lf3 : lst), forall _ : @eq bool (lst_subset lf3 x) true,
@eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma conj21: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf3 lf2) true.
Lemma conj19_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (lf3 : lst), @eq bool (lst_subset lf3 lf2) lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.


<---VALIDITY CHECKS--->
Time elapsed: 219 seconds
Valid:
Lemma conj19_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma conj23_imp: forall (x : lst) (lf4 : lst) (lf3 : lst), forall _ : @eq bool (lst_subset lf3 x) true,
@eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma conj31_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) true)
        (@eq bool (lst_subset lf3 x) true),
@eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma conj32_imp: forall (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) true)
        (@eq bool (lst_subset lf3 x) true),
@eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma conj49_imp: forall (lf2 : lst) (lf5 : bool) (x : lst) (y : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma conj51_imp: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma conj59_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma conj60_imp: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)
        (@eq bool (lst_subset (lst_intersection x y) x) lf5),
@eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.

Invalid:
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj17: forall (lf2 : lst) (lf5 : bool) (lf3 : lst), @eq bool (lst_subset lf3 lf2) lf5.
Lemma conj19: forall (lf5 : bool) (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma conj21: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf3 lf2) true.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma conj27: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma conj27_imp: forall (lf6 : lst) (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma conj28: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma conj28_imp: forall (lf5 : bool) (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset lf3 x) lf5,
@eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma conj49: forall (lf2 : lst) (lf5 : bool) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma conj51: forall (lf5 : bool) (x : lst) (lf4 : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst), @eq bool (lst_subset (lst_intersection x y) lf2) true.
Lemma conj59: forall (lf6 : lst) (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma conj60: forall (lf5 : bool) (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.


<---CREATE SKETCHES--->
Time elapsed: 220 seconds
Sketches:
Sketch conj5_sketch0 : @eq bool lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq bool true (##hole##)
Sketch conj17_sketch0 : @eq bool (##hole##) lf5
Sketch conj17_term_sketch0 : @eq bool (lst_subset lf3 lf2) (##hole##)
Sketch conj19_sketch0 : @eq bool (lst_subset lf3 (##hole##)) lf5
Sketch conj19_sketch1 : @eq bool (##hole##) lf5
Sketch conj19_term_sketch0 : @eq lst (lfappend lf4 x) (##hole##)
Sketch conj19_term_sketch1 : @eq bool (lst_subset lf3 (lfappend lf4 x)) (##hole##)
Sketch conj21_sketch0 : @eq bool (##hole##) true
Sketch conj21_sketch1 : @eq bool (lst_subset lf3 lf2) (##hole##)
Sketch conj21_term_sketch0 : @eq bool (lst_subset lf3 lf2) (##hole##)
Sketch conj21_term_sketch1 : @eq bool true (##hole##)
Sketch conj23_sketch0 : @eq bool (lst_subset lf3 (##hole##)) true
Sketch conj23_sketch1 : @eq bool (lst_subset lf3 (lfappend lf4 x)) (##hole##)
Sketch conj23_sketch2 : @eq bool (##hole##) true
Sketch conj23_term_sketch0 : @eq lst (lfappend lf4 x) (##hole##)
Sketch conj23_term_sketch1 : @eq bool true (##hole##)
Sketch conj23_term_sketch2 : @eq bool (lst_subset lf3 (lfappend lf4 x)) (##hole##)
Sketch conj27_sketch0 : @eq bool (##hole##) lf5
Sketch conj27_sketch1 : @eq bool (lst_subset lf3 (lfappend (##hole##) x)) lf5
Sketch conj27_sketch2 : @eq bool (lst_subset lf3 (##hole##)) lf5
Sketch conj27_term_sketch0 : @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (lfappend (Cons n lf6) x) (##hole##)
Sketch conj27_imp_sketch0 : forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (##hole##) lf5),
@eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5
Sketch conj27_imp_sketch1 : forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (##hole##) lf5
Sketch conj27_imp_sketch2 : forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (lfappend (##hole##) x)) lf5
Sketch conj27_imp_sketch3 : forall _ : and (@eq bool (##hole##) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5
Sketch conj27_imp_sketch4 : forall
  _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5),
@eq bool (lst_subset lf3 (##hole##)) lf5
Sketch conj27_imp_term_sketch0 : @eq bool (lst_subset lf3 x) (##hole##)
Sketch conj27_imp_term_sketch1 : @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (##hole##)
Sketch conj27_imp_term_sketch2 : @eq lst (Cons n lf6) (##hole##)
Sketch conj27_imp_term_sketch3 : @eq bool (lst_subset x lf3) (##hole##)
Sketch conj27_imp_term_sketch4 : @eq lst (lfappend (Cons n lf6) x) (##hole##)
Sketch conj28_sketch0 : @eq bool (lst_subset lf3 (##hole##)) lf5
Sketch conj28_sketch1 : @eq bool (lst_subset lf3 (lfappend (##hole##) x)) lf5
Sketch conj28_sketch2 : @eq bool (##hole##) lf5
Sketch conj28_sketch3 : @eq bool (lst_subset lf3 (lfappend (Cons n (##hole##)) x)) lf5
Sketch conj28_term_sketch0 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj28_term_sketch2 : @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj28_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj28_imp_sketch0 : forall _ : @eq bool (##hole##) lf5,
@eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5
Sketch conj28_imp_sketch1 : forall _ : @eq bool (lst_subset lf3 x) lf5,
@eq bool (lst_subset lf3 (##hole##)) lf5
Sketch conj28_imp_sketch2 : forall _ : @eq bool (lst_subset lf3 x) lf5,
@eq bool (lst_subset lf3 (lfappend (##hole##) x)) lf5
Sketch conj28_imp_sketch3 : forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (##hole##) lf5
Sketch conj28_imp_sketch4 : forall _ : @eq bool (lst_subset lf3 x) lf5,
@eq bool (lst_subset lf3 (lfappend (Cons n (##hole##)) x)) lf5
Sketch conj28_imp_term_sketch0 : @eq bool (lst_subset lf3 x) (##hole##)
Sketch conj28_imp_term_sketch1 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj28_imp_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj28_imp_term_sketch3 : @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj28_imp_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj31_sketch0 : @eq bool (##hole##) true
Sketch conj31_sketch1 : @eq bool (lst_subset lf3 (lfappend (##hole##) x)) true
Sketch conj31_sketch2 : @eq bool (lst_subset lf3 (##hole##)) true
Sketch conj31_sketch3 : @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (##hole##)
Sketch conj31_term_sketch0 : @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (lfappend (Cons n lf6) x) (##hole##)
Sketch conj31_term_sketch3 : @eq bool true (##hole##)
Sketch conj32_sketch0 : @eq bool (lst_subset lf3 (##hole##)) true
Sketch conj32_sketch1 : @eq bool (lst_subset lf3 (lfappend (##hole##) x)) true
Sketch conj32_sketch2 : @eq bool (##hole##) true
Sketch conj32_sketch3 : @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj32_sketch4 : @eq bool (lst_subset lf3 (lfappend (Cons n (##hole##)) x)) true
Sketch conj32_term_sketch0 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj32_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj32_term_sketch2 : @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (##hole##)
Sketch conj32_term_sketch3 : @eq bool true (##hole##)
Sketch conj32_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj49_sketch0 : @eq bool (##hole##) lf5
Sketch conj49_sketch1 : @eq bool (lst_subset (##hole##) lf2) lf5
Sketch conj49_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) lf2) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj51_sketch0 : @eq bool (lst_subset (lst_intersection x y) (##hole##)) lf5
Sketch conj51_sketch1 : @eq bool (lst_subset (##hole##) (lfappend lf4 x)) lf5
Sketch conj51_sketch2 : @eq bool (##hole##) lf5
Sketch conj51_term_sketch0 : @eq lst (lfappend lf4 x) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj51_term_sketch2 : @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (##hole##)
Sketch conj53_sketch0 : @eq bool (##hole##) true
Sketch conj53_sketch1 : @eq bool (lst_subset (lst_intersection x y) lf2) (##hole##)
Sketch conj53_sketch2 : @eq bool (lst_subset (##hole##) lf2) true
Sketch conj53_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) lf2) (##hole##)
Sketch conj53_term_sketch1 : @eq bool true (##hole##)
Sketch conj53_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj59_sketch0 : @eq bool (##hole##) lf5
Sketch conj59_sketch1 : @eq bool (lst_subset (lst_intersection x y) (lfappend (##hole##) x)) lf5
Sketch conj59_sketch2 : @eq bool (lst_subset (lst_intersection x y) (##hole##)) lf5
Sketch conj59_sketch3 : @eq bool (lst_subset (##hole##) (lfappend (Cons n lf6) x)) lf5
Sketch conj59_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))
  (##hole##)
Sketch conj59_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend (Cons n lf6) x) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj60_sketch0 : @eq bool (##hole##) lf5
Sketch conj60_sketch1 : @eq bool (lst_subset (lst_intersection x y) (##hole##)) lf5
Sketch conj60_sketch2 : @eq bool (lst_subset (lst_intersection x y) (lfappend (##hole##) x)) lf5
Sketch conj60_sketch3 : @eq bool (lst_subset (##hole##) (lfappend (Cons n Nil) x)) lf5
Sketch conj60_sketch4 : @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n (##hole##)) x))
  lf5
Sketch conj60_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))
  (##hole##)
Sketch conj60_term_sketch1 : @eq lst (lfappend (Cons n Nil) x) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1921 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_23
Sketch conj28_imp_term_sketch4 --> Problem  synth_23
Sketch conj28_sketch0 --> Problem  synth_5
Sketch conj53_sketch1 --> Problem  synth_28
Sketch conj60_term_sketch1 --> Problem  synth_20
Sketch conj59_term_sketch2 --> Problem  synth_12
Sketch conj27_imp_sketch4 --> Problem  synth_16
Sketch conj23_sketch0 --> Problem  synth_8
Sketch conj60_term_sketch4 --> Problem  synth_23
Sketch conj59_term_sketch1 --> Problem  synth_11
Sketch conj59_sketch1 --> Problem  synth_34
Sketch conj53_term_sketch2 --> Problem  synth_29
Sketch conj60_sketch0 --> Problem  synth_3
Sketch conj53_term_sketch0 --> Problem  synth_28
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch1 --> Problem  synth_21
Sketch conj21_term_sketch1 --> Problem  synth_2
Sketch conj31_sketch0 --> Problem  synth_2
Sketch conj31_term_sketch3 --> Problem  synth_2
Sketch conj28_imp_sketch3 --> Problem  synth_14
Sketch conj31_term_sketch1 --> Problem  synth_11
Sketch conj32_sketch0 --> Problem  synth_8
Sketch conj60_term_sketch3 --> Problem  synth_29
Sketch conj23_sketch1 --> Problem  synth_7
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj60_term_sketch2 --> Problem  synth_21
Sketch conj60_sketch1 --> Problem  synth_30
Sketch conj28_term_sketch3 --> Problem  synth_23
Sketch conj60_sketch2 --> Problem  synth_34
Sketch conj59_sketch3 --> Problem  synth_35
Sketch conj27_term_sketch2 --> Problem  synth_12
Sketch conj32_sketch3 --> Problem  synth_22
Sketch conj59_sketch2 --> Problem  synth_30
Sketch conj32_term_sketch3 --> Problem  synth_2
Sketch conj28_sketch2 --> Problem  synth_3
Sketch conj23_term_sketch2 --> Problem  synth_7
Sketch conj21_sketch0 --> Problem  synth_2
Sketch conj27_imp_sketch0 --> Problem  synth_13
Sketch conj28_imp_sketch2 --> Problem  synth_9
Sketch conj19_term_sketch1 --> Problem  synth_7
Sketch conj51_term_sketch2 --> Problem  synth_32
Sketch conj27_sketch2 --> Problem  synth_5
Sketch conj28_term_sketch2 --> Problem  synth_22
Sketch conj60_term_sketch0 --> Problem  synth_39
Sketch conj31_sketch2 --> Problem  synth_8
Sketch conj28_imp_term_sketch2 --> Problem  synth_21
Sketch conj27_sketch1 --> Problem  synth_9
Sketch conj53_sketch0 --> Problem  synth_2
Sketch conj60_sketch3 --> Problem  synth_37
Sketch conj32_term_sketch2 --> Problem  synth_22
Sketch conj51_sketch0 --> Problem  synth_30
Sketch conj31_sketch3 --> Problem  synth_10
Sketch conj23_term_sketch0 --> Problem  synth_6
Sketch conj19_term_sketch0 --> Problem  synth_6
Sketch conj28_imp_sketch1 --> Problem  synth_16
Sketch conj28_imp_sketch0 --> Problem  synth_24
Sketch conj32_sketch2 --> Problem  synth_2
Sketch conj32_sketch1 --> Problem  synth_25
Sketch conj27_imp_sketch3 --> Problem  synth_15
Sketch conj51_term_sketch1 --> Problem  synth_29
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj51_term_sketch0 --> Problem  synth_6
Sketch conj27_imp_term_sketch4 --> Problem  synth_12
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj23_sketch2 --> Problem  synth_2
Sketch conj19_sketch0 --> Problem  synth_5
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj49_sketch0 --> Problem  synth_3
Sketch conj28_imp_sketch4 --> Problem  synth_19
Sketch conj28_imp_term_sketch1 --> Problem  synth_20
Sketch conj27_imp_term_sketch0 --> Problem  synth_17
Sketch conj59_sketch0 --> Problem  synth_3
Sketch conj49_term_sketch1 --> Problem  synth_29
Sketch conj23_term_sketch1 --> Problem  synth_2
Sketch conj59_term_sketch0 --> Problem  synth_36
Sketch conj53_term_sketch1 --> Problem  synth_2
Sketch conj31_term_sketch0 --> Problem  synth_10
Sketch conj28_term_sketch0 --> Problem  synth_20
Sketch conj59_term_sketch3 --> Problem  synth_29
Sketch conj51_sketch1 --> Problem  synth_31
Sketch conj28_imp_term_sketch0 --> Problem  synth_17
Sketch conj53_sketch2 --> Problem  synth_33
Sketch conj27_sketch0 --> Problem  synth_3
Sketch conj32_term_sketch0 --> Problem  synth_20
Sketch conj21_term_sketch0 --> Problem  synth_4
Sketch conj19_sketch1 --> Problem  synth_3
Sketch conj28_sketch3 --> Problem  synth_19
Sketch conj27_imp_term_sketch2 --> Problem  synth_11
Sketch conj28_sketch1 --> Problem  synth_9
Sketch conj32_sketch4 --> Problem  synth_26
Sketch conj27_imp_term_sketch3 --> Problem  synth_18
Sketch conj27_imp_sketch1 --> Problem  synth_14
Sketch conj21_sketch1 --> Problem  synth_4
Sketch conj32_term_sketch1 --> Problem  synth_21
Sketch conj27_imp_term_sketch1 --> Problem  synth_10
Sketch conj60_sketch4 --> Problem  synth_38
Sketch conj27_imp_sketch2 --> Problem  synth_9
Sketch conj28_imp_term_sketch3 --> Problem  synth_22
Sketch conj31_sketch1 --> Problem  synth_25
Sketch conj31_term_sketch2 --> Problem  synth_12
Sketch conj27_term_sketch0 --> Problem  synth_10
Sketch conj51_sketch2 --> Problem  synth_3
Sketch conj49_sketch1 --> Problem  synth_27
Sketch conj49_term_sketch0 --> Problem  synth_28


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 2190 seconds

Problem: synth_28
 lst_subset x x
 lst_eq x x
 lst_subset x lf2
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 true

Problem: synth_17
 lst_subset lf3 lf3
 lst_eq lf3 lf3
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 true

Problem: synth_29
 lst_intersection x (lfappend y y)
 lst_intersection x (lst_intersection y y)
 lst_intersection x (lst_intersection x y)
 lst_intersection x (lst_intersection y x)
 lst_intersection x (lfappend y Nil)
 lst_intersection x y

Problem: synth_26
 lst_intersection x (lst_intersection lf3 Nil)
 lst_intersection lf3 (lst_intersection x Nil)
 lst_intersection x (lst_intersection x Nil)
 lst_intersection lf3 Nil
 lst_intersection x Nil
 Nil

Problem: synth_9

Problem: synth_30

Problem: synth_11
 lfappend lf6 (Cons n lf6)
 Cons n (lfappend lf6 Nil)
 Cons n (lst_intersection lf6 Nil)
 lfappend lf6 (Cons n Nil)
 Cons n lf6
 Cons n Nil

Problem: synth_39
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 lfeqb n n
 true

Problem: synth_1
 lf1
 true

Problem: synth_15
 lst_subset x (lfappend lf3 Nil)
 lst_eq x (lfappend lf3 Nil)
 lst_eq lf3 (lfappend x Nil)
 lst_subset x lf3
 lst_eq x lf3
 lst_eq lf3 x

Problem: synth_31

Problem: synth_14
 lst_eq lf3 lf3
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 lf5
 true

Problem: synth_8

Problem: synth_34

Problem: synth_12
 Cons n (lst_intersection x x)
 Cons n (lfappend lf6 x)
 lfappend lf6 (Cons n x)
 Cons n (lfappend x lf6)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_5

Problem: synth_37

Problem: synth_2
 true

Problem: synth_22
 lst_eq lf3 lf3
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 lfeqb n n
 true

Problem: synth_20
 Cons n (lst_intersection x (Cons Zero x))
 Cons n (lst_intersection x (lfappend x Nil))
 Cons n (lfappend x (lst_intersection x Nil))
 Cons n (lst_intersection x x)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_18
 lst_subset x (lfappend lf3 Nil)
 lst_eq x (lfappend lf3 Nil)
 lst_eq lf3 (lfappend x Nil)
 lst_subset x lf3
 lst_eq x lf3
 lst_eq lf3 x

Problem: synth_21
 if orb (lfeqb n (Succ Zero)) (orb (lfeqb n n) false) then Cons n Nil else Nil
 if orb (lfeqb n n) (orb (lfeqb n n) false) then Cons n Nil else Nil
 if orb (lfeqb n Zero) (orb (lfeqb n n) false) then Cons n Nil else Nil
 if orb (lfeqb n n) (orb (lfeqb n Zero) false) then Cons n Nil else Nil
 if orb (lfeqb n n) false then Cons n Nil else Nil
 Cons n Nil

Problem: synth_25

Problem: synth_13
 lst_eq lf6 lf6
 lst_subset lf6 Nil
 lst_eq lf6 Nil
 lfeqb n n
 lf5
 true

Problem: synth_6
 lfappend (lst_intersection lf4 lf4) x
 lfappend (lfappend lf4 Nil) x
 lfappend (lfappend lf4 x) Nil
 lfappend lf4 (lst_intersection x x)
 lfappend lf4 (lfappend x Nil)
 lfappend lf4 x

Problem: synth_7
 lst_subset lf4 lf4
 lst_eq lf4 lf4
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 true

Problem: synth_4
 lst_subset lf3 lf3
 lst_eq lf3 lf3
 lst_subset lf3 lf2
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 true

Problem: synth_38
 lst_intersection x (lst_intersection y Nil)
 lst_intersection y (lst_intersection x Nil)
 lst_intersection x (lst_intersection x Nil)
 lst_intersection y Nil
 lst_intersection x Nil
 Nil

Problem: synth_23
 Nil

Problem: synth_27

Problem: synth_16

Problem: synth_19
 lst_intersection x (lst_intersection lf3 Nil)
 lst_intersection lf3 (lst_intersection x Nil)
 lst_intersection x (lst_intersection x Nil)
 lst_intersection lf3 Nil
 lst_intersection x Nil
 Nil

Problem: synth_10
 lst_subset lf6 lf6
 lst_eq lf6 lf6
 lst_subset lf6 Nil
 lst_eq lf6 Nil
 lfeqb n n
 true

Problem: synth_33

Problem: synth_24
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 lfeqb n n
 lf5
 true

Problem: synth_3
 lf5
 true

Problem: synth_32
 lst_eq y y
 lst_subset lf4 lf4
 lst_eq lf4 lf4
 lst_subset x x
 lst_eq x x
 true

Problem: synth_36
 lst_subset lf6 lf6
 lst_eq lf6 lf6
 lst_subset lf6 Nil
 lst_eq lf6 Nil
 lfeqb n n
 true

Problem: synth_35

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 2191 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) true.
Lemma candidate_2: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) true.
Lemma candidate_3: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) true.
Lemma candidate_4: forall (lf3 : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma candidate_5: forall (lf3 : lst) (lf4 : lst) (x : lst), forall _ : @eq bool (lst_subset lf3 x) true, @eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma candidate_6: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) true)         (@eq bool (lst_subset lf3 x) true), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma candidate_7: forall (lf3 : lst) (n : natural) (x : lst), forall   _ : and (@eq bool (lst_subset x lf3) true)         (@eq bool (lst_subset lf3 x) true), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma candidate_8: forall (y : lst) (x : lst) (lf5 : bool) (lf2 : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) lf2) lf5.
Lemma candidate_9: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_12: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_13: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_14: @eq bool true (true).
Lemma candidate_15: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_16: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_17: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf3 lf3).
Lemma candidate_18: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_eq lf3 lf3).
Lemma candidate_19: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf3 lf2).
Lemma candidate_20: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf2 lf2).
Lemma candidate_21: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_eq lf2 lf2).
Lemma candidate_22: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (true).
Lemma candidate_23: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_24: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_25: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lst_intersection lf4 lf4) x).
Lemma candidate_26: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 Nil) x).
Lemma candidate_27: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 x) Nil).
Lemma candidate_28: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lst_intersection x x)).
Lemma candidate_29: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lfappend x Nil)).
Lemma candidate_30: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 x).
Lemma candidate_31: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset lf4 lf4).
Lemma candidate_32: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_eq lf4 lf4).
Lemma candidate_33: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset lf3 x).
Lemma candidate_34: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset x x).
Lemma candidate_35: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_eq x x).
Lemma candidate_36: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (true).
Lemma candidate_37: @eq bool (true) true.
Lemma candidate_38: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf3 lf3).
Lemma candidate_39: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_eq lf3 lf3).
Lemma candidate_40: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf3 lf2).
Lemma candidate_41: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf2 lf2).
Lemma candidate_42: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_eq lf2 lf2).
Lemma candidate_43: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (true).
Lemma candidate_44: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf3 lf3).
Lemma candidate_45: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_eq lf3 lf3).
Lemma candidate_46: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf3 lf2).
Lemma candidate_47: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_subset lf2 lf2).
Lemma candidate_48: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (lst_eq lf2 lf2).
Lemma candidate_49: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf3 lf2) (true).
Lemma candidate_50: @eq bool true (true).
Lemma candidate_51: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset lf4 lf4).
Lemma candidate_52: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_eq lf4 lf4).
Lemma candidate_53: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset lf3 x).
Lemma candidate_54: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset x x).
Lemma candidate_55: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_eq x x).
Lemma candidate_56: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (true).
Lemma candidate_57: @eq bool (true) true.
Lemma candidate_58: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lst_intersection lf4 lf4) x).
Lemma candidate_59: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 Nil) x).
Lemma candidate_60: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 x) Nil).
Lemma candidate_61: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lst_intersection x x)).
Lemma candidate_62: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lfappend x Nil)).
Lemma candidate_63: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 x).
Lemma candidate_64: @eq bool true (true).
Lemma candidate_65: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset lf4 lf4).
Lemma candidate_66: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_eq lf4 lf4).
Lemma candidate_67: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset lf3 x).
Lemma candidate_68: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_subset x x).
Lemma candidate_69: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (lst_eq x x).
Lemma candidate_70: forall (lf3 : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset lf3 (lfappend lf4 x)) (true).
Lemma candidate_71: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_72: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_73: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 lf6).
Lemma candidate_74: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 lf6).
Lemma candidate_75: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 Nil).
Lemma candidate_76: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 Nil).
Lemma candidate_77: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lfeqb n n).
Lemma candidate_78: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (true).
Lemma candidate_79: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n lf6)).
Lemma candidate_80: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_81: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lst_intersection lf6 Nil)).
Lemma candidate_82: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_83: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_84: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_85: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lst_intersection x x)).
Lemma candidate_86: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend lf6 x)).
Lemma candidate_87: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (lfappend lf6 (Cons n x)).
Lemma candidate_88: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x lf6)).
Lemma candidate_89: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x Nil)).
Lemma candidate_90: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n x).
Lemma candidate_91: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_eq lf6 lf6) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_92: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5)         (@eq bool (lst_subset lf6 Nil) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_93: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_eq lf6 Nil) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_94: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lfeqb n n) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_95: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lf5) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_96: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (true) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_97: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_eq lf3 lf3) lf5.
Lemma candidate_98: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 x) lf5.
Lemma candidate_99: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset x x) lf5.
Lemma candidate_100: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_eq x x) lf5.
Lemma candidate_101: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lf5) lf5.
Lemma candidate_102: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (true) lf5.
Lemma candidate_103: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x (lfappend lf3 Nil)) lf5)         (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_104: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq x (lfappend lf3 Nil)) lf5)         (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_105: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq lf3 (lfappend x Nil)) lf5)         (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_106: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_107: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_108: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_eq lf3 x) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_109: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 lf3).
Lemma candidate_110: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq lf3 lf3).
Lemma candidate_111: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 x).
Lemma candidate_112: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset x x).
Lemma candidate_113: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq x x).
Lemma candidate_114: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (true).
Lemma candidate_115: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 lf6).
Lemma candidate_116: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 lf6).
Lemma candidate_117: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 Nil).
Lemma candidate_118: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 Nil).
Lemma candidate_119: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lfeqb n n).
Lemma candidate_120: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (true).
Lemma candidate_121: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n lf6)).
Lemma candidate_122: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_123: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lst_intersection lf6 Nil)).
Lemma candidate_124: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_125: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_126: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_127: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x (lfappend lf3 Nil)).
Lemma candidate_128: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x (lfappend lf3 Nil)).
Lemma candidate_129: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq lf3 (lfappend x Nil)).
Lemma candidate_130: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x lf3).
Lemma candidate_131: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x lf3).
Lemma candidate_132: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq lf3 x).
Lemma candidate_133: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lst_intersection x x)).
Lemma candidate_134: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend lf6 x)).
Lemma candidate_135: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (lfappend lf6 (Cons n x)).
Lemma candidate_136: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x lf6)).
Lemma candidate_137: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x Nil)).
Lemma candidate_138: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n x).
Lemma candidate_139: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_140: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_141: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection x (lst_intersection lf3 Nil))) x))   lf5.
Lemma candidate_142: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection lf3 (lst_intersection x Nil))) x))   lf5.
Lemma candidate_143: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection x (lst_intersection x Nil))) x)) lf5.
Lemma candidate_144: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset lf3 (lfappend (Cons n (lst_intersection lf3 Nil)) x))   lf5.
Lemma candidate_145: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset lf3 (lfappend (Cons n (lst_intersection x Nil)) x)) lf5.
Lemma candidate_146: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), @eq bool (lst_subset lf3 (lfappend (Cons n (Nil)) x)) lf5.
Lemma candidate_147: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_148: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_149: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_150: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x x)).
Lemma candidate_151: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_152: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_153: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n (Succ Zero)) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_154: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_155: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_156: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_157: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_158: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_159: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq lf3 lf3).
Lemma candidate_160: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset lf3 x).
Lemma candidate_161: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset x x).
Lemma candidate_162: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq x x).
Lemma candidate_163: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lfeqb n n).
Lemma candidate_164: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (true).
Lemma candidate_165: @eq lst Nil (Nil).
Lemma candidate_166: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_167: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset x x) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_168: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_eq x x) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_169: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lfeqb n n) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_170: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lf5) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_171: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (true) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_172: forall (lf3 : lst) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_eq lf3 lf3) lf5.
Lemma candidate_173: forall (lf3 : lst) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_subset lf3 x) lf5.
Lemma candidate_174: forall (lf3 : lst) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_subset x x) lf5.
Lemma candidate_175: forall (lf3 : lst) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_eq x x) lf5.
Lemma candidate_176: forall (lf3 : lst) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lf5) lf5.
Lemma candidate_177: forall (lf3 : lst) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (true) lf5.
Lemma candidate_178: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection x (lst_intersection lf3 Nil))) x))   lf5.
Lemma candidate_179: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection lf3 (lst_intersection x Nil))) x))   lf5.
Lemma candidate_180: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection x (lst_intersection x Nil))) x)) lf5.
Lemma candidate_181: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n (lst_intersection lf3 Nil)) x))   lf5.
Lemma candidate_182: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n (lst_intersection x Nil)) x)) lf5.
Lemma candidate_183: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool), forall _ : @eq bool (lst_subset lf3 x) lf5, @eq bool (lst_subset lf3 (lfappend (Cons n (Nil)) x)) lf5.
Lemma candidate_184: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 lf3).
Lemma candidate_185: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq lf3 lf3).
Lemma candidate_186: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 x).
Lemma candidate_187: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset x x).
Lemma candidate_188: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq x x).
Lemma candidate_189: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (true).
Lemma candidate_190: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_191: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_192: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_193: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x x)).
Lemma candidate_194: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_195: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_196: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n (Succ Zero)) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_197: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_198: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_199: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_200: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_201: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_202: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq lf3 lf3).
Lemma candidate_203: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset lf3 x).
Lemma candidate_204: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset x x).
Lemma candidate_205: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq x x).
Lemma candidate_206: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lfeqb n n).
Lemma candidate_207: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (true).
Lemma candidate_208: @eq lst Nil (Nil).
Lemma candidate_209: @eq bool (true) true.
Lemma candidate_210: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 lf6).
Lemma candidate_211: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 lf6).
Lemma candidate_212: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 Nil).
Lemma candidate_213: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 Nil).
Lemma candidate_214: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lfeqb n n).
Lemma candidate_215: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (true).
Lemma candidate_216: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 lf6).
Lemma candidate_217: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 lf6).
Lemma candidate_218: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_subset lf6 Nil).
Lemma candidate_219: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lst_eq lf6 Nil).
Lemma candidate_220: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (lfeqb n n).
Lemma candidate_221: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) (true).
Lemma candidate_222: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n lf6)).
Lemma candidate_223: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_224: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lst_intersection lf6 Nil)).
Lemma candidate_225: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_226: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_227: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_228: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lst_intersection x x)).
Lemma candidate_229: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend lf6 x)).
Lemma candidate_230: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (lfappend lf6 (Cons n x)).
Lemma candidate_231: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x lf6)).
Lemma candidate_232: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x Nil)).
Lemma candidate_233: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n x).
Lemma candidate_234: @eq bool true (true).
Lemma candidate_235: @eq bool (true) true.
Lemma candidate_236: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq lf3 lf3).
Lemma candidate_237: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset lf3 x).
Lemma candidate_238: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset x x).
Lemma candidate_239: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq x x).
Lemma candidate_240: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lfeqb n n).
Lemma candidate_241: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (true).
Lemma candidate_242: forall (lf3 : lst) (n : natural) (x : lst), @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection x (lst_intersection lf3 Nil))) x))   true.
Lemma candidate_243: forall (lf3 : lst) (n : natural) (x : lst), @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection lf3 (lst_intersection x Nil))) x))   true.
Lemma candidate_244: forall (lf3 : lst) (n : natural) (x : lst), @eq bool   (lst_subset lf3      (lfappend (Cons n (lst_intersection x (lst_intersection x Nil))) x))   true.
Lemma candidate_245: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n (lst_intersection lf3 Nil)) x))   true.
Lemma candidate_246: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n (lst_intersection x Nil)) x)) true.
Lemma candidate_247: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n (Nil)) x)) true.
Lemma candidate_248: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_249: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_250: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_251: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x x)).
Lemma candidate_252: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_253: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_254: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n (Succ Zero)) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_255: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_256: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_257: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_258: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_259: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_260: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq lf3 lf3).
Lemma candidate_261: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset lf3 x).
Lemma candidate_262: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_subset x x).
Lemma candidate_263: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lst_eq x x).
Lemma candidate_264: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (lfeqb n n).
Lemma candidate_265: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) (true).
Lemma candidate_266: @eq bool true (true).
Lemma candidate_267: @eq lst Nil (Nil).
Lemma candidate_268: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_269: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_270: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset x x).
Lemma candidate_271: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_eq x x).
Lemma candidate_272: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset x lf2).
Lemma candidate_273: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset lf2 lf2).
Lemma candidate_274: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_eq lf2 lf2).
Lemma candidate_275: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (true).
Lemma candidate_276: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y y)).
Lemma candidate_277: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y y)).
Lemma candidate_278: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection x y)).
Lemma candidate_279: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y x)).
Lemma candidate_280: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_281: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_282: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_283: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_284: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lst_intersection lf4 lf4) x).
Lemma candidate_285: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 Nil) x).
Lemma candidate_286: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 x) Nil).
Lemma candidate_287: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lst_intersection x x)).
Lemma candidate_288: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lfappend x Nil)).
Lemma candidate_289: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 x).
Lemma candidate_290: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y y)).
Lemma candidate_291: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y y)).
Lemma candidate_292: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection x y)).
Lemma candidate_293: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y x)).
Lemma candidate_294: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_295: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_296: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (lst_eq y y).
Lemma candidate_297: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x))   (lst_subset lf4 lf4).
Lemma candidate_298: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x))   (lst_eq lf4 lf4).
Lemma candidate_299: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x))   (lst_subset x x).
Lemma candidate_300: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (lst_eq x x).
Lemma candidate_301: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (true).
Lemma candidate_302: @eq bool (true) true.
Lemma candidate_303: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset x x).
Lemma candidate_304: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_eq x x).
Lemma candidate_305: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset x lf2).
Lemma candidate_306: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset lf2 lf2).
Lemma candidate_307: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_eq lf2 lf2).
Lemma candidate_308: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (true).
Lemma candidate_309: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset x x).
Lemma candidate_310: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_eq x x).
Lemma candidate_311: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset x lf2).
Lemma candidate_312: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_subset lf2 lf2).
Lemma candidate_313: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (lst_eq lf2 lf2).
Lemma candidate_314: forall (y : lst) (x : lst) (lf2 : lst), @eq bool (lst_subset (lst_intersection x y) lf2) (true).
Lemma candidate_315: @eq bool true (true).
Lemma candidate_316: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y y)).
Lemma candidate_317: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y y)).
Lemma candidate_318: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection x y)).
Lemma candidate_319: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y x)).
Lemma candidate_320: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_321: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_322: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_323: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_324: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lst_subset lf6 lf6).
Lemma candidate_325: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lst_eq lf6 lf6).
Lemma candidate_326: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lst_subset lf6 Nil).
Lemma candidate_327: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lst_eq lf6 Nil).
Lemma candidate_328: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lfeqb n n).
Lemma candidate_329: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) (true).
Lemma candidate_330: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n lf6)).
Lemma candidate_331: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_332: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lst_intersection lf6 Nil)).
Lemma candidate_333: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend lf6 (Cons n Nil)).
Lemma candidate_334: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_335: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_336: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lst_intersection x x)).
Lemma candidate_337: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend lf6 x)).
Lemma candidate_338: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (lfappend lf6 (Cons n x)).
Lemma candidate_339: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x lf6)).
Lemma candidate_340: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n (lfappend x Nil)).
Lemma candidate_341: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (Cons n lf6) x) (Cons n x).
Lemma candidate_342: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y y)).
Lemma candidate_343: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y y)).
Lemma candidate_344: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection x y)).
Lemma candidate_345: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y x)).
Lemma candidate_346: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_347: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_348: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_349: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_350: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset (lst_intersection x y)      (lfappend (Cons n (lst_intersection x (lst_intersection y Nil))) x)) lf5.
Lemma candidate_351: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset (lst_intersection x y)      (lfappend (Cons n (lst_intersection y (lst_intersection x Nil))) x)) lf5.
Lemma candidate_352: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset (lst_intersection x y)      (lfappend (Cons n (lst_intersection x (lst_intersection x Nil))) x)) lf5.
Lemma candidate_353: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset (lst_intersection x y)      (lfappend (Cons n (lst_intersection y Nil)) x)) lf5.
Lemma candidate_354: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool   (lst_subset (lst_intersection x y)      (lfappend (Cons n (lst_intersection x Nil)) x)) lf5.
Lemma candidate_355: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n (Nil)) x)) lf5.
Lemma candidate_356: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_subset y y).
Lemma candidate_357: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_eq y y).
Lemma candidate_358: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_subset x x).
Lemma candidate_359: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_eq x x).
Lemma candidate_360: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lfeqb n n).
Lemma candidate_361: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) (true).
Lemma candidate_362: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_363: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_364: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_365: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x x)).
Lemma candidate_366: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_367: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n x).
Lemma candidate_368: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n (Succ Zero)) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_369: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_370: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_371: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_372: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_373: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_374: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y y)).
Lemma candidate_375: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y y)).
Lemma candidate_376: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection x y)).
Lemma candidate_377: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y x)).
Lemma candidate_378: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_379: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_380: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 2617 seconds
Duplicates removed: 213
Filtered by Quickchick: 100
Filtered by script: 17
Remaining: 50

Lemmas: 
Lemma candidate_80: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_29: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lfappend x Nil)).
Lemma candidate_27: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 x) Nil).
Lemma candidate_26: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lfappend lf4 Nil) x).
Lemma candidate_151: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lfappend x Nil)).
Lemma candidate_127: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x (lfappend lf3 Nil)).
Lemma candidate_28: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend lf4 (lst_intersection x x)).
Lemma candidate_25: forall (lf4 : lst) (x : lst), @eq lst (lfappend lf4 x) (lfappend (lst_intersection lf4 lf4) x).
Lemma candidate_150: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x x)).
Lemma candidate_276: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y y)).
Lemma candidate_3: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) true.
Lemma candidate_301: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (true).
Lemma candidate_280: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_157: forall (n : natural), @eq lst (Cons n Nil) (if orb (lfeqb n n) false then Cons n Nil else Nil).
Lemma candidate_300: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (lst_eq x x).
Lemma candidate_296: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) (lst_eq y y).
Lemma candidate_279: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y x)).
Lemma candidate_278: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection x y)).
Lemma candidate_277: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lst_intersection y y)).
Lemma candidate_2: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) true.
Lemma candidate_361: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) (true).
Lemma candidate_329: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) (true).
Lemma candidate_147: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_299: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x))   (lst_subset x x).
Lemma candidate_298: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x))   (lst_eq lf4 lf4).
Lemma candidate_149: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_148: forall (n : natural) (x : lst), @eq lst (lfappend (Cons n Nil) x)   (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_360: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lfeqb n n).
Lemma candidate_328: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lfeqb n n).
Lemma candidate_297: forall (y : lst) (lf4 : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x))   (lst_subset lf4 lf4).
Lemma candidate_359: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_eq x x).
Lemma candidate_357: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_eq y y).
Lemma candidate_358: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_subset x x).
Lemma candidate_356: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x))   (lst_subset y y).
Lemma candidate_325: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lst_eq lf6 lf6).
Lemma candidate_154: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_5: forall (lf3 : lst) (lf4 : lst) (x : lst), forall _ : @eq bool (lst_subset lf3 x) true, @eq bool (lst_subset lf3 (lfappend lf4 x)) true.
Lemma candidate_324: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x))   (lst_subset lf6 lf6).
Lemma candidate_156: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n n) (orb (lfeqb n Zero) false) then Cons n Nil else Nil).
Lemma candidate_155: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n Zero) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_153: forall (n : natural), @eq lst (Cons n Nil)   (if orb (lfeqb n (Succ Zero)) (orb (lfeqb n n) false) then Cons n Nil else Nil).
Lemma candidate_98: forall (lf3 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 x) lf5.
Lemma candidate_4: forall (lf3 : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend lf4 x)) lf5.
Lemma candidate_106: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) lf5) (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_7: forall (lf3 : lst) (n : natural) (x : lst), forall   _ : and (@eq bool (lst_subset x lf3) true)         (@eq bool (lst_subset lf3 x) true), @eq bool (lst_subset lf3 (lfappend (Cons n Nil) x)) true.
Lemma candidate_6: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x lf3) true)         (@eq bool (lst_subset lf3 x) true), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) true.
Lemma candidate_103: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x (lfappend lf3 Nil)) lf5)         (@eq bool (lst_subset lf3 x) lf5), @eq bool (lst_subset lf3 (lfappend (Cons n lf6) x)) lf5.
Lemma candidate_9: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) (lfappend lf4 x)) lf5.
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst) (lf5 : bool), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) lf5.
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf5 : bool) (lf6 : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf5)         (@eq bool (lst_subset (lst_intersection x y) x) lf5), @eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n lf6) x)) lf5.
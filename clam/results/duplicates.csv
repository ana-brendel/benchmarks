@eq natural (Succ (plus (mult x y) (plus y x))) (plus (mult x (Succ y)) (Succ y)),[clam_lf_goal35_mult_succ_78_plus_commut][clam_lf_goal86_mult_succ_80_plus_commut][clam_lf_goal33_mult_succ_80_plus_commut][clam_lf_goal84_mult_succ_80_plus_commut]
@eq bool (lst_subset (lst_intersection x y) (lfappend (Cons n Nil) x)) true,[clam_lf_goal41_theorem0_98_subset_append_general]
@eq lst y (lfappend y Nil),[clam_lf_goal32_rotate_len_append_50_append_nil][clam_lf_goal78_theorem0_64_append_nil][clam_lf_goal83_theorem0_52_append_nil][clam_lf_goal80_theorem0_58_append_nil][clam_lf_goal21_theorem0_51_lem3][clam_lf_goal11_theorem0_57_lem3]
@eq natural (plus Zero y) (plus y Zero),[clam_lf_goal34_plus_commut_57_plus_zero][clam_lf_goal33_plus_commut_63_plus_zero][clam_lf_goal84_plus_commut_63_plus_zero][clam_lf_goal35_plus_commut_61_plus_zero][clam_lf_goal86_plus_commut_63_plus_zero][clam_lf_goal85_plus_commut_59_plus_zero]
@eq natural (plus (plus (mult x y) y) z) (plus (mult x y) (plus z y)),[clam_lf_goal85_theorem0_66_plus_assoc]
@eq natural (mult Zero y) (mult y Zero),[clam_lf_goal33_mult_commut_89_mult_zero][clam_lf_goal84_mult_commut_87_mult_zero][clam_lf_goal86_mult_commut_87_mult_zero][clam_lf_goal35_mult_commut_85_mult_zero]
@eq lst (rev (rev y)) (lfappend y Nil),[clam_lf_goal11_theorem0_57_lem2][clam_lf_goal80_theorem0_58_rev_rev][clam_lf_goal78_theorem0_64_rev_rev]
@eq lst (drop x (drop y (Cons n z))) (drop y (drop x (Cons n z))),[clam_lf_goal9_drop_assoc_45_drop_Cons_assoc][clam_lf_goal8_theorem0_48_drop_Cons_assoc][clam_lf_goal9_drop_assoc_45_drop_Cons_assoc]
@eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) (rev y)))) (lfappend y (Cons n x)),[clam_lf_goal78_theorem0_65_rev_append]
@eq natural (plus (mult x z) (plus (mult y z) z)) (plus (plus (mult x z) z) (mult y z)),[clam_lf_goal33_distrib_98_plus_commut][clam_lf_goal86_distrib_96_plus_commut][clam_lf_goal35_distrib_94_plus_commut][clam_lf_goal84_distrib_96_plus_commut]
@eq bool (lst_subset x (Cons n (lst_intersection x y))) true,[clam_lf_goal41_theorem0_103_append_single]
@eq bool (negb (even (plus x (Succ x)))) true,[clam_lf_goal16_theorem0_33_lem]
@eq natural (plus (plus (mult x y) y) (Succ x)) (plus (mult x (Succ y)) (Succ y)),[clam_lf_goal84_mult_succ_80_plus_succ][clam_lf_goal33_mult_succ_80_plus_succ][clam_lf_goal86_mult_succ_80_plus_succ]
@eq natural (qmult x y (plus z (plus y a))) (qmult x y (plus (plus z a) y)),[clam_lf_goal34_plus_qmult_66_plus_commut]
@eq natural (plus (plus (mult x z) (mult y z)) z) (plus (plus (mult x z) z) (mult y z)),[clam_lf_goal86_distrib_96_plus_assoc][clam_lf_goal33_distrib_98_plus_assoc][clam_lf_goal84_distrib_96_plus_assoc][clam_lf_goal35_distrib_94_plus_assoc]
@eq natural (len (rev (lfappend x y))) (plus (len x) (len y)),[clam_lf_goal6_theorem0_63_len_rev][clam_lf_goal6_theorem0_63_len_rev]
@eq lst (rev (qreva x Nil)) x,[clam_lf_goal29_theorem0_97_rev_qreva_nil]
@eq natural (qexp x y (mult (mult z x) a)) (qexp x y (mult (mult z a) x)),[clam_lf_goal35_mult_qexp_110_mult_assoc]
@eq lst (rev (rev x)) x,[clam_lf_goal30_theorem0_74_rev_involutive][clam_lf_goal29_theorem0_98_rev_involutive]
@eq bool (lst_mem x (lst_union y z)) true,[clam_lf_goal42_theorem0_67_mem_union]
@eq natural (qexp x y (mult z (mult x a))) (qexp x y (mult (mult z a) x)),[clam_lf_goal35_mult_qexp_110_mult_commut]
@eq natural (Succ (plus (plus (mult x y) y) x)) (plus (mult x (Succ y)) (Succ y)),[clam_lf_goal35_mult_succ_78_plus_assoc][clam_lf_goal86_mult_succ_80_plus_assoc][clam_lf_goal33_mult_succ_80_plus_assoc][clam_lf_goal84_mult_succ_80_plus_assoc]
@eq natural (mult (plus (mult x y) y) z) (plus (mult x (mult y z)) (mult y z)),[clam_lf_goal84_mult_assoc_104_distrib][clam_lf_goal33_mult_assoc_107_distrib][clam_lf_goal86_mult_assoc_104_distrib][clam_lf_goal35_mult_assoc_102_distrib]
@eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil),[clam_lf_goal82_theorem0_71_rev_rev]
@eq natural (Succ (plus (mult x y) (plus x y))) (plus (mult x (Succ y)) (Succ y)),[clam_lf_goal33_mult_succ_81_plus_assoc]
@eq natural (mult (mult (exp x y) x) z) (mult (exp x y) (mult z x)),[clam_lf_goal86_theorem0_113_mult_assoc]
@eq lst (drop x2 (drop (Succ x1) (Cons n l))) (drop x1 (drop (Succ x2) (Cons n l))),[clam_lf_goal8_drop_Cons_assoc_34_drop_Cons][clam_lf_goal9_drop_Cons_assoc_33_drop_Cons]
@eq natural (mult (fac x) x) (qfac x x),[clam_lf_goal33_fac_eq_qfac_123_qfac_mult]
@eq natural (len (lfappend x (Cons n x))) (Succ (len (lfappend x x))),[clam_lf_goal4_theorem0_39_lem][clam_lf_goal4_theorem0_39_lem]
@eq natural (plus (qmult x y Zero) y) (qmult x y y),[clam_lf_goal34_mult_eq_qmult_75_plus_qmult]
@eq natural (Succ (plus x x)) (plus x (Succ x)),[clam_lf_goal1_theorem0_31_lem]
@eq lst (drop u (drop v (drop (Succ (Succ w)) (Cons x (Cons y z))))) (drop u (drop (Succ v) (drop w (Cons x z)))),[clam_lf_goal57_theorem0_38_lem]
@eq lst match drop x2 Nil with | Cons _ z => drop x1 z | Nil => Nil end match drop x1 Nil with | Cons _ z => drop x2 z | Nil => Nil end,[clam_lf_goal9_drop_Cons_assoc_37_drop_Nil][clam_lf_goal8_drop_Cons_assoc_39_drop_Nil]
or (@eq natural x n) (@eq bool (mem x (Cons n0 l)) true),[clam_lf_goal49_mem_insort_113_mem_cons][clam_lf_goal49_mem_insort_117_mem_cons]
@eq natural (len y) (len (lfappend y Nil)),[clam_lf_goal2_theorem0_41_lem2][clam_lf_goal2_theorem0_41_lem2]
@eq bool (mem x Nil) true,[clam_lf_goal69_theorem0_68_Nat_beq_eq]
@eq lst (drop u (drop (Succ v) (drop (Succ w) (Cons x (Cons y z))))) (drop (Succ u) (drop v (drop w (Cons x z)))),[clam_lf_goal57_theorem0_36_lem]
@eq lst (drop (Succ w) (drop x (Cons y z))) (drop w (drop x z)),[clam_lf_goal54_theorem0_35_lem]
@eq lst (drop x2 (drop x1 Nil)) (drop x1 (drop x2 Nil)),[clam_lf_goal9_drop_Cons_assoc_36_drop_Nil][clam_lf_goal8_drop_Cons_assoc_38_drop_Nil]
@eq bool (negb (even (len (lfappend x (Cons n x))))) true,[clam_lf_goal20_theorem0_40_lem]
@eq lst (drop v (drop (Succ w) (drop x (Cons y z)))) (drop v (drop w (drop x z))),[clam_lf_goal56_theorem0_36_lem]
@eq lst (drop x (drop y Nil)) (drop y (drop x Nil)),[clam_lf_goal9_drop_assoc_46_drop_Nil][clam_lf_goal8_theorem0_50_drop_Nil]
@eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) y) (qrevaflat x1 (Cons n (qrevaflat x2 y))),[clam_lf_goal76_theorem0_52_append_assoc]
@eq natural (len (lfappend x y)) (plus (len x) (len y)),[clam_lf_goal6_theorem0_64_len_append][clam_lf_goal6_theorem0_64_len_append]
@eq natural (Succ (len (lfappend (rev x) Nil))) (Succ (len (rev x))),[clam_lf_goal5_theorem0_47_lem2][clam_lf_goal5_theorem0_47_lem2]
@eq lst (drop w (drop x (drop y z))) (drop y (drop x (drop w z))),[clam_lf_goal9_theorem0_52_drop_assoc]
or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true),[clam_lf_goal49_mem_cons_81_eqb_elim]
@eq lst (lfappend (lfappend (rev x) (Cons n Nil)) y) (qreva x (Cons n y)),[clam_lf_goal75_theorem0_41_append_assoc]
@eq bool (mem (lfappend y z) x) true,[clam_lf_goal38_theorem0_56_goal37][clam_lf_goal38_theorem0_54_goal36]
@eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (qreva y Nil) (qreva x (Cons n Nil))),[clam_lf_goal31_qreva_append_59_qreva_nil]
@eq natural (len (qreva x (Cons n (Cons n0 y)))) (Succ (plus (len x) (Succ (len y)))),[clam_lf_goal7_theorem0_54_plus_comm]
@eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil),[clam_lf_goal31_qreva_append_60_append_nil]
@eq lst (drop (Succ u) (drop v (drop (Succ w) (Cons x (Cons y z))))) (drop (Succ u) (drop v (drop w (Cons x z)))),[clam_lf_goal57_theorem0_35_lem]
@eq natural (len (lfappend (rev x) (Cons n Nil))) (Succ (len (rev x))),[clam_lf_goal5_theorem0_46_lem][clam_lf_goal5_theorem0_46_lem]
@eq natural (count (Cons x (Cons n y)) x) (Succ (Succ (count y x))),[clam_lf_goal70_theorem0_79_less_not_refl][clam_lf_goal70_theorem0_79_Nat_beq_eq]
@eq bool (orb (lfeqb x n) (mem x y)) true,[clam_lf_goal49_theorem0_155_mem_insort]
@eq bool (orb (lfeqb n n) (mem n y)) true,[clam_lf_goal49_theorem0_158_eqb_refl]
@eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))),[clam_lf_goal9_theorem0_53_drop_assoc]
@eq natural (len (qreva x (Cons n Nil))) (Succ (plus (len x) Zero)),[clam_lf_goal7_theorem0_58_plus_comm]
@eq lst (drop x (drop y (drop w z))) (drop y (drop x (drop w z))),[clam_lf_goal9_theorem0_54_drop_assoc]
@eq bool (orb (lfeqb n0 n0) (mem n0 l)) true,[clam_lf_goal49_mem_insort_123_eqb_refl]
@eq lst (rev (lfappend (rev x) Nil)) x,[clam_lf_goal30_theorem0_73_append_nil]
@eq bool (orb (lfeqb x n) (mem x z)) true,[clam_lf_goal69_theorem0_63_Nat_beq_eq]
@eq bool (lst_mem x (lst_intersection y z)) true,[clam_lf_goal44_theorem0_55_Nat_beq_eq]
@eq natural (plus (len x) (len (Cons n Nil))) (Succ (len x)),[clam_lf_goal7_theorem0_59_plus_comm][clam_lf_goal7_theorem0_59_plus_comm]
False,[clam_lf_goal50_theorem0_203_eqb_refl]
@eq bool match (if less y n0 then Cons y (Cons n0 x) else Cons n0 (insort y x)) with | Cons z _ => andb (sorted (if less y n0 then Cons y (Cons n0 x) else Cons n0 (insort y x))) (leq n z) | Nil => true end true,[clam_lf_goal62_theorem0_75_not_less]
@eq natural (len l2) (len (lfappend l2 Nil)),[clam_lf_goal23_lem_47_lem3]
@eq natural (len (lfappend (rev l) (Cons n Nil))) (Succ (len l)),[clam_lf_goal6_len_rev_55_len_append][clam_lf_goal6_len_rev_55_len_append]
@eq natural (len (lfappend x y)) (len (lfappend y x)),[clam_lf_goal23_theorem0_52_lem]
@eq lst (drop (Succ v) (drop w (drop x (Cons y z)))) (drop v (drop w (drop x z))),[clam_lf_goal56_theorem0_35_lem]
@eq lst (drop (Succ x1) (drop (Succ x2) (Cons x3 (Cons n l)))) (drop (Succ x2) (drop (Succ x1) (Cons x3 (Cons n l)))),[clam_lf_goal9_drop_Cons_assoc_32_drop_Cons][clam_lf_goal8_drop_Cons_assoc_33_drop_Cons]
@eq lst (drop u (drop v (drop (Succ (Succ w)) (Cons x (Cons y z))))) (drop (Succ u) (drop v (drop w (Cons x z)))),[clam_lf_goal57_theorem0_37_lem]
@eq natural (Succ (if lfeqb x n then Succ (count x z) else count x z)) (Succ (count x z)),[clam_lf_goal71_theorem0_66_Nat_beq_eq]
@eq natural (Succ (len (lfappend l2 l1))) (len (lfappend l2 (Cons n l1))),[clam_lf_goal23_lem_46_lem2]
@eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x),[clam_lf_goal31_qreva_qreva_67_qreva_append]
@eq natural (plus (len x) (Succ (Succ (len y)))) (Succ (Succ (plus (len y) (len x)))),[clam_lf_goal7_theorem0_55_plus_comm][clam_lf_goal7_theorem0_55_plus_comm]
@eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil)) (lfappend (qreva y Nil) (qreva x (Cons n Nil))),[clam_lf_goal31_qreva_append_59_append_assoc]
@eq natural (if lfeqb x x then Succ (if lfeqb x n then Succ (count y x) else count y x) else if lfeqb x n then Succ (count y x) else count y x) (Succ (count y x)),[clam_lf_goal70_theorem0_82_Nat_beq_refl]
@eq natural (plus (len (rev l)) (len (Cons n Nil))) (Succ (len l)),[clam_lf_goal6_len_rev_56_plus_comm][clam_lf_goal6_len_rev_56_plus_comm]
@eq lst (lfappend (qreva x Nil) (Cons n y)) (lfappend (lfappend (qreva x Nil) (Cons n Nil)) y),[clam_lf_goal31_qreva_nil_50_append_assoc]
@eq lst (qreva x (Cons n y)) (lfappend (lfappend (rev x) (Cons n Nil)) y),[clam_lf_goal12_theorem0_40_append_assoc]
@eq lst (qreva (qreva x (Cons n Nil)) Nil) (Cons n x),[clam_lf_goal31_qreva_qreva_67_qreva_nil]
@eq natural (Succ (if lfeqb x n then Succ (count x z) else count x z)) (count x z),[clam_lf_goal71_theorem0_71_Nat_beq_eq]
@eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y (Cons n x)),[clam_lf_goal21_theorem0_50_append_assoc][clam_lf_goal83_theorem0_51_append_assoc][clam_lf_goal78_theorem0_65_append_assoc][clam_lf_goal11_theorem0_56_append_assoc][clam_lf_goal82_theorem0_76_append_assoc]
@eq natural (count (Cons n (insort l n)) n) (Succ (Succ (count l n))),[clam_lf_goal50_count_insort_123_count_cons]
@eq natural (plus (mult y x) y) (mult y (Succ x)),[clam_lf_goal33_mult_commut_90_mult_succ][clam_lf_goal86_mult_commut_88_mult_succ][clam_lf_goal35_mult_commut_86_mult_succ][clam_lf_goal84_mult_commut_88_mult_succ]
@eq lst (lfappend (rev (rev y)) (lfappend (Cons n Nil) x)) (lfappend y (Cons n x)),[clam_lf_goal80_theorem0_59_rev_rev]
@eq bool (lst_subset y y) true,[clam_lf_goal40_theorem0_113_subset_refl][clam_lf_goal40_theorem0_111_subset_refl]
@eq lst (rev x) (lfappend (rev x) Nil),[clam_lf_goal27_theorem0_61_append_nil][clam_lf_goal29_rev_qreva_nil_90_append_nil]
@eq lst (rev (lfappend (rev l) (Cons n Nil))) (Cons n l),[clam_lf_goal17_lem_33_lem2][clam_lf_goal19_lem2_33_lem][clam_lf_goal11_lem2_41_lem]
@eq lst (rev y) (lfappend (rev y) Nil),[clam_lf_goal78_rev_append_49_append_nil][clam_lf_goal79_theorem0_42_append_nil][clam_lf_goal80_rev_append_43_append_nil][clam_lf_goal82_rev_append_49_append_nil][clam_lf_goal18_theorem0_43_lem3][clam_lf_goal77_theorem0_46_append_nil]
@eq bool (even y) (even (plus y Zero)),[clam_lf_goal24_theorem0_47_lem2]
@eq lst (Cons n (lfappend l1 (Cons n0 (lfappend l2 Nil)))) (Cons n (lfappend (lfappend l1 (Cons n0 l2)) Nil)),[clam_lf_goal29_append_assoc_40_append_nil][clam_lf_goal10_append_assoc_35_append_Nil][clam_lf_goal27_append_assoc_41_append_nil][clam_lf_goal30_append_assoc_35_append_nil][clam_lf_goal28_append_assoc_53_append_nil]
@eq natural (plus (mult x z) (plus z (mult y z))) (plus (plus (mult x z) z) (mult y z)),[clam_lf_goal33_distrib_99_plus_assoc]
@eq bool (orb (lfeqb x x) (orb (lfeqb x n) (mem y x))) true,[clam_lf_goal45_theorem0_61_Nat_beq_refl]
@eq bool (orb (lfeqb y y) false) true,[clam_lf_goal46_theorem0_61_eqb_refl]
@eq natural (qmult x y (plus z (plus a y))) (qmult x y (plus (plus z a) y)),[clam_lf_goal34_plus_qmult_67_plus_assoc]
@eq bool (orb (lfeqb n n) (lst_mem n x)) true,[clam_lf_goal41_theorem0_100_Nat_beq_refl]
@eq lst (Cons n (lfappend l1 Nil)) (Cons n (lfappend (lfappend l1 Nil) Nil)),[clam_lf_goal30_append_assoc_37_append_nil][clam_lf_goal29_append_assoc_42_append_nil][clam_lf_goal28_append_assoc_55_append_nil][clam_lf_goal10_append_assoc_37_append_Nil][clam_lf_goal27_append_assoc_43_append_nil]
@eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)),[clam_lf_goal59_theorem0_33_lem][clam_lf_goal60_theorem0_34_lem]
@eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)),[clam_lf_goal29_qreva_append_79_append_assoc][clam_lf_goal27_qreva_append_50_append_assoc]
@eq natural (mult (qexp x y (Succ Zero)) x) (qexp x y x),[clam_lf_goal35_exp_eq_qexp_119_mult_qexp]
@eq natural (Succ (plus x y)) (plus y (Succ x)),[clam_lf_goal33_plus_commut_64_plus_succ][clam_lf_goal86_plus_commut_64_plus_succ][clam_lf_goal84_plus_commut_64_plus_succ][clam_lf_goal34_plus_commut_58_plus_succ][clam_lf_goal85_plus_commut_58_plus_succ][clam_lf_goal35_plus_commut_62_plus_succ]
@eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x),[clam_lf_goal30_rev_involutive_65_rev_append][clam_lf_goal10_theorem0_65_rev_append][clam_lf_goal82_rev_rev_58_rev_append][clam_lf_goal29_rev_involutive_70_rev_append][clam_lf_goal78_rev_rev_58_rev_append]
@eq lst (lfappend (lfappend (rev y) (Cons n Nil)) x) (lfappend (rev y) (Cons n x)),[clam_lf_goal18_theorem0_42_append_assoc][clam_lf_goal79_theorem0_44_append_assoc][clam_lf_goal77_theorem0_47_append_assoc][clam_lf_goal81_theorem0_48_append_assoc]
@eq natural (mult (exp x y) (mult x z)) (mult (exp x y) (mult z x)),[clam_lf_goal86_theorem0_113_mult_commut]
@eq lst (rev (rev (lfappend x y))) (lfappend (rev (rev x)) (rev (rev y))),[clam_lf_goal17_theorem0_39_lem]
@eq natural (count (insort (sort y) n) n) (Succ (count y n)),[clam_lf_goal50_theorem0_194_count_insort]
@eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (lfappend (rev x) (Cons n Nil)) Nil),[clam_lf_goal27_qreva_append_53_append_nil][clam_lf_goal29_qreva_append_82_append_nil]
@eq lst (Cons n (lfappend l1 (Cons n0 l3))) (Cons n (lfappend (lfappend l1 Nil) (Cons n0 l3))),[clam_lf_goal30_append_assoc_36_append_nil][clam_lf_goal28_append_assoc_54_append_nil][clam_lf_goal27_append_assoc_42_append_nil][clam_lf_goal29_append_assoc_41_append_nil][clam_lf_goal10_append_assoc_36_append_Nil]
@eq lst (revflat x) (lfappend (revflat x) Nil),[clam_lf_goal28_theorem0_83_append_nil]
@eq natural (plus x (Succ (Succ x))) (Succ (plus x (Succ x))),[clam_lf_goal15_theorem0_29_lem]
@eq bool (orb (lfeqb y y) (orb (lfeqb y n) (mem z y))) true,[clam_lf_goal46_theorem0_58_eqb_refl]
@eq natural (count (insort (sort y) n) x) (count y x),[clam_lf_goal50_theorem0_199_count_insort_diff]
@eq natural (half (plus x y)) (half (plus y x)),[clam_lf_goal26_theorem0_36_plus_comm]
@eq lst (lfappend (rev x) (Cons n y)) (lfappend (lfappend (rev x) (Cons n Nil)) y),[clam_lf_goal81_qreva_rev_41_append_assoc][clam_lf_goal82_qreva_rev_65_append_assoc]
@eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) (lfappend (rev y) (lfappend (rev x) (Cons n Nil))),[clam_lf_goal82_rev_append_50_append_assoc][clam_lf_goal80_rev_append_44_append_assoc][clam_lf_goal78_rev_append_50_append_assoc]
@eq bool (negb (even (len (lfappend x y)))) (even (len (lfappend y (Cons n x)))),[clam_lf_goal22_theorem0_46_lem]
@eq bool (orb (lfeqb x x) false) true,[clam_lf_goal45_theorem0_63_Nat_beq_refl]
@eq lst (lfappend x y) (lfappend x (rev (rev y))),[clam_lf_goal17_theorem0_41_lem]
@eq lst (qreva y Nil) (lfappend (rev y) Nil),[clam_lf_goal81_theorem0_47_qreva_rev]
@eq natural (plus x (Succ (Succ x))) (Succ (Succ (plus x x))),[clam_lf_goal15_theorem0_28_lem]
@eq bool (even (len z)) (negb (negb (even (len z)))),[clam_lf_goal64_theorem0_41_negb_invol]
@eq bool (lst_subset x (lfappend (Cons n Nil) (lst_intersection x y))) true,[clam_lf_goal41_theorem0_103_subset_append_general]
@eq lst (rev l2) (lfappend (rev l2) Nil),[clam_lf_goal30_rev_append_59_append_nil][clam_lf_goal29_rev_append_64_append_nil][clam_lf_goal10_rev_append_59_append_Nil]
@eq lst (lfappend (rev (rev x)) y) (rev (rev (lfappend x y))),[clam_lf_goal19_theorem0_40_lem2]
@eq lst (revflat x2) (lfappend (revflat x2) Nil),[clam_lf_goal28_qrevflat_append_74_append_nil]
@eq lst (rotate (len x) (lfappend x (Cons n Nil))) (Cons n x),[clam_lf_goal32_rotate_len_59_rotate_len_append]
@eq lst (qreva (rev y) Nil) (lfappend y Nil),[clam_lf_goal82_theorem0_71_qreva_rev]
@eq natural (qmult x y (plus (plus z y) a)) (qmult x y (plus (plus z a) y)),[clam_lf_goal34_plus_qmult_66_plus_assoc]
@eq bool (even y) (negb (negb (even y))),[clam_lf_goal66_theorem0_35_negb_invol]
@eq bool (lst_mem n (lfappend z y)) true,[clam_lf_goal41_subset_append_general_85_mem_append]
@eq natural (Succ (len (lfappend y x))) (len (lfappend y (Cons n x))),[clam_lf_goal2_theorem0_40_lem]
@eq natural (plus (mult x y) (plus y z)) (plus (mult x y) (plus z y)),[clam_lf_goal85_theorem0_66_plus_commut]
@eq bool (even (len y)) (even (len (lfappend y Nil))),[clam_lf_goal22_theorem0_47_lem3]
@eq natural (Succ (half (plus x (Succ (Succ x))))) (Succ (Succ x)),[clam_lf_goal13_theorem0_36_lem]
@eq natural (Succ (plus (mult x (Succ y)) y)) (plus (mult x (Succ y)) (Succ y)),[clam_lf_goal33_mult_succ_81_plus_succ]
@eq bool (negb (even (plus y x))) (even (plus y (Succ x))),[clam_lf_goal24_theorem0_45_lem]
@eq natural (count (Cons n (insort l x)) x) (Succ (Succ (count l x))),[clam_lf_goal50_count_insort_121_eqb_elim]
@eq lst (lfappend x y) (rev (rev (lfappend x y))),[clam_lf_goal19_theorem0_41_lem2]
@eq bool (orb (lfeqb n n) (lst_mem n (lst_intersection x y))) true,[clam_lf_goal41_theorem0_105_Nat_beq_refl]
@eq natural (qexp x y (mult z (mult a x))) (qexp x y (mult (mult z a) x)),[clam_lf_goal35_mult_qexp_111_mult_assoc]
@eq natural (count (insort (sort y) n) x) (Succ (count y x)),[clam_lf_goal50_theorem0_192_eqb_elim]
@eq bool (orb (lfeqb x y) false) false,[clam_lf_goal47_theorem0_70_eqb_not_eq]
@eq natural x n,[clam_lf_goal49_mem_insort_141_eqb_elim][clam_lf_goal49_mem_cons_96_eqb_elim]
@eq bool (lst_mem x z) true,[clam_lf_goal42_theorem0_69_Nat_beq_eq]
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)),[clam_lf_goal47_theorem0_66_eqb_not_eq]
@eq natural (count (Cons y (Cons n l)) x) (count l x),[clam_lf_goal50_count_insort_diff_163_count_cons_diff]
@eq lst (rev x) (qreva x Nil),[clam_lf_goal29_rev_qreva_nil_89_qreva_append][clam_lf_goal27_theorem0_60_qreva_append]
@eq lst (revflat x) (qrevaflat x Nil),[clam_lf_goal28_theorem0_82_qrevflat_append]
@eq bool (lst_subset (lst_intersection x y) (Cons n x)) true,[clam_lf_goal41_theorem0_98_append_single]
@eq lst (lfappend (lfappend (lfappend (rev l2) (Cons n0 Nil)) (Cons x (rev l1))) (Cons n Nil)) (lfappend (lfappend (rev l2) (Cons n0 Nil)) (Cons x (lfappend (rev l1) (Cons n Nil)))),[clam_lf_goal29_append_rev_cons_50_append_assoc][clam_lf_goal10_append_rev_Cons_45_append_assoc][clam_lf_goal30_append_rev_cons_45_append_assoc]
@eq natural (mult (qfac x (Succ Zero)) (mult y x)) (mult (mult (qfac x (Succ Zero)) x) y),[clam_lf_goal33_qfac_mult_115_mult_assoc]
@eq lst (lfappend (rev (lfappend l1 Nil)) (Cons n Nil)) (lfappend (rev l1) (Cons n Nil)),[clam_lf_goal29_rev_append_62_append_nil][clam_lf_goal30_rev_append_57_append_nil][clam_lf_goal10_rev_append_57_append_Nil]
@eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) Nil) (qrevaflat x1 (Cons n (qrevaflat x2 Nil))),[clam_lf_goal28_qrevflat_append_69_append_nil]
@eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)),[clam_lf_goal11_theorem0_56_lem]
@eq lst (lfappend (rev (lfappend l1 (Cons n0 l2))) (Cons n Nil)) (lfappend (lfappend (rev l2) (Cons n0 Nil)) (lfappend (rev l1) (Cons n Nil))),[clam_lf_goal29_rev_append_59_append_rev_cons][clam_lf_goal30_rev_append_54_append_rev_cons][clam_lf_goal10_rev_append_54_append_rev_Cons]
@eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) (lfappend (rev y) (Cons n x)),[clam_lf_goal18_theorem0_41_append_assoc][clam_lf_goal79_theorem0_43_append_assoc]
@eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) (rev y))) (lfappend y (Cons n x)),[clam_lf_goal80_theorem0_59_rev_append][clam_lf_goal11_theorem0_55_append_assoc]
@eq bool (orb (eqb n n) (lst_mem n x)) true,[clam_lf_goal40_subset_refl_98_Nat_beq_refl][clam_lf_goal40_subset_append_84_Nat_beq_refl]
@eq lst (rotate (len x) (append (append x y) (Cons n Nil))) (append y (Cons n x)),[clam_lf_goal83_theorem0_50_append_assoc]
@eq natural (Succ Zero) Zero,[clam_lf_goal71_theorem0_75_Nat_beq_eq]
@eq lst (qreva (qreva x (lfappend (rev (Cons n Nil)) (rev y))) Nil) (lfappend y (Cons n x)),[clam_lf_goal82_theorem0_74_rev_append]
@eq natural (if lfeqb x x then Succ (count l x) else count l x) (Succ (count l x)),[clam_lf_goal50_count_cons_102_eqb_refl]
@eq natural (mult (qfac x (Succ Zero)) (mult y x)) (mult (qfac x (Succ Zero)) (mult x y)),[clam_lf_goal33_qfac_mult_115_mult_commut]
@eq natural (count (Cons x (Cons n l)) x) (Succ (if lfeqb x n then Succ (count l x) else count l x)),[clam_lf_goal50_count_insort_114_count_cons]
@eq natural (if lfeqb x y then Succ (if lfeqb x n then Succ (count l x) else count l x) else if lfeqb x n then Succ (count l x) else count l x) (Succ (count l x)),[clam_lf_goal50_count_insort_diff_158_eqb_diff]
@eq lst (lfappend (lfappend (revflat x1) (Cons n (revflat x2))) (Cons n0 y)) (lfappend (revflat x1) (Cons n (qrevaflat x2 (Cons n0 y)))),[clam_lf_goal28_qrevflat_append_62_append_assoc]
@eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil))) (lfappend y (Cons n x)),[clam_lf_goal32_rotate_len_append_51_append_assoc][clam_lf_goal21_theorem0_49_append_assoc]
@eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))),[clam_lf_goal17_theorem0_40_lem]
@eq natural (mult (mult (fac x) x) y) (mult (fac x) (mult y x)),[clam_lf_goal84_theorem0_111_mult_assoc]
@eq bool (lst_subset x (Cons n x)) true,[clam_lf_goal40_subset_refl_97_append_single]
@eq natural (if lfeqb x x then Succ Zero else Zero) (Succ Zero),[clam_lf_goal70_theorem0_84_Nat_beq_refl][clam_lf_goal50_count_insort_136_eqb_refl]
@eq bool (lst_subset x (lfappend (Cons n Nil) x)) true,[clam_lf_goal40_subset_refl_97_subset_append]
@eq bool (lst_subset x (lfappend y (Cons n x))) true,[clam_lf_goal40_subset_append_81_append_cons]
@eq natural (if lfeqb x y then Succ (count l x) else count l x) (count l x),[clam_lf_goal50_count_cons_diff_144_eqb_diff]
@eq natural (mult (fac x) (mult x y)) (mult (fac x) (mult y x)),[clam_lf_goal84_theorem0_111_mult_commut]
@eq natural (if lfeqb x y then Succ Zero else Zero) Zero,[clam_lf_goal50_count_insort_diff_177_eqb_diff]

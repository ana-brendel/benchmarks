File Information
- File name: goal79
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal79_theorem0_43_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal79_theorem0_43_append_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rev (lfappend (rev x0) y0)) (lfappend (rev y0) x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (rev (lfappend (rev x) y0)) (lfappend (rev y0) x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lfappend (rev _UNBOUND_REL_1) x : lst
x : lst
rev (lfappend (rev x) _UNBOUND_REL_1) : lst
y : lst
lfappend (rev x) _UNBOUND_REL_1 : lst
rev y : lst
lfappend (rev x) (Cons n Nil) : lst
lfappend (lfappend (rev x) (Cons n Nil)) y : lst
rev (lfappend (lfappend (rev x) (Cons n Nil)) y) : lst
lfappend (rev y) (Cons n x) : lst
@eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)) : Prop
rev _UNBOUND_REL_1 : lst
Cons n x : lst
lst : Set
Cons n Nil : lst
forall y0 : lst, @eq lst (rev (lfappend (rev x) y0)) (lfappend (rev y0) x) : Prop
natural : Set
n : natural
rev x : lst
Nil : lst
@eq lst (rev (lfappend (rev x) _UNBOUND_REL_1))
  (lfappend (rev _UNBOUND_REL_1) x) : Prop

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lfappend (rev x) (Cons n Nil)
lf7 : lst = rev y
lf1 : lst = rev (lfappend (lfappend (rev x) (Cons n Nil)) y)
lf4 : lst = lfappend (rev y) (Cons n x)
lf5 : lst = Cons n Nil
lf9 : lst = Nil
lf2 : lst = lfappend (lfappend (rev x) (Cons n Nil)) y
lf8 : lst = rev x
lf6 : lst = Cons n x

Generalizations:
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.
Lemma conj33: forall (lf6 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 lf6).
Lemma conj34: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (Cons n x)).
Lemma conj65: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj69: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) lf4.
Lemma conj97: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst (rev lf2) (lfappend lf7 lf6).
Lemma conj98: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (rev lf2) (lfappend lf7 (Cons n x)).
Lemma conj101: forall (lf6 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend lf7 lf6).
Lemma conj102: forall (x : lst) (y : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend lf7 (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf6).
Lemma conj162: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (rev lf2) (lfappend (rev y) lf6).
Lemma conj226: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev lf2) (lfappend (rev y) (Cons n x)).
Lemma conj229: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend (rev y) lf6).
Lemma conj230: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend (rev y) (Cons n x)).
Lemma conj325: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) lf4.
Lemma conj327: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) lf4.
Lemma conj341: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) lf4.
Lemma conj343: forall (lf9 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y)) lf4.
Lemma conj349: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) lf4.
Lemma conj351: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) lf4.
Lemma conj357: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend lf7 lf6).
Lemma conj358: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend lf7 (Cons n x)).
Lemma conj359: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend lf7 lf6).
Lemma conj360: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend lf7 (Cons n x)).
Lemma conj373: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) (lfappend lf7 lf6).
Lemma conj374: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj375: forall (lf6 : lst) (lf9 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y)) (lfappend lf7 lf6).
Lemma conj376: forall (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj381: forall (lf6 : lst) (lf8 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) (lfappend lf7 lf6).
Lemma conj382: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj383: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) (lfappend lf7 lf6).
Lemma conj384: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj485: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (y : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend (rev y) lf6).
Lemma conj486: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend (rev y) (Cons n x)).
Lemma conj487: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend (rev y) lf6).
Lemma conj488: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) lf5) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj501: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) (lfappend (rev y) lf6).
Lemma conj502: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj503: forall (lf6 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend (rev y) lf6).
Lemma conj504: forall (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj509: forall (lf6 : lst) (lf8 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) (lfappend (rev y) lf6).
Lemma conj510: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj511: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) lf6).
Lemma conj512: forall (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 210 seconds
Valid:
Lemma conj512: forall (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)).

Invalid:
Lemma conj511: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) lf6).
Lemma conj510: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj509: forall (lf6 : lst) (lf8 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) (lfappend (rev y) lf6).
Lemma conj504: forall (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj503: forall (lf6 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend (rev y) lf6).
Lemma conj502: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj501: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) (lfappend (rev y) lf6).
Lemma conj488: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) lf5) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj487: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend (rev y) lf6).
Lemma conj486: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend (rev y) (Cons n x)).
Lemma conj485: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (y : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend (rev y) lf6).
Lemma conj384: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj383: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) (lfappend lf7 lf6).
Lemma conj382: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj381: forall (lf6 : lst) (lf8 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) (lfappend lf7 lf6).
Lemma conj376: forall (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj375: forall (lf6 : lst) (lf9 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y)) (lfappend lf7 lf6).
Lemma conj374: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj373: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) (lfappend lf7 lf6).
Lemma conj360: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend lf7 (Cons n x)).
Lemma conj359: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend lf7 lf6).
Lemma conj358: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend lf7 (Cons n x)).
Lemma conj357: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend lf7 lf6).
Lemma conj351: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) lf4.
Lemma conj349: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) lf4.
Lemma conj343: forall (lf9 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y)) lf4.
Lemma conj341: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) lf4.
Lemma conj327: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) lf4.
Lemma conj325: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) lf4.
Lemma conj230: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend (rev y) (Cons n x)).
Lemma conj229: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend (rev y) lf6).
Lemma conj226: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev lf2) (lfappend (rev y) (Cons n x)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (rev lf2) (lfappend (rev y) lf6).
Lemma conj162: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf6).
Lemma conj102: forall (x : lst) (y : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend lf7 (Cons n x)).
Lemma conj101: forall (lf6 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend lf7 lf6).
Lemma conj98: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (rev lf2) (lfappend lf7 (Cons n x)).
Lemma conj97: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst (rev lf2) (lfappend lf7 lf6).
Lemma conj69: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) lf4.
Lemma conj65: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj34: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (Cons n x)).
Lemma conj33: forall (lf6 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 lf6).
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 265 seconds
Generalizations:
Lemma conj511: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend (rev y) lf6).
Lemma conj510_imp: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : forall y0 : lst, @eq lst (rev (lfappend lf8 y0)) (lfappend (rev y0) x),
@eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj510: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj509: forall (lf6 : lst) (lf8 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) (lfappend (rev y) lf6).
Lemma conj504: forall (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj503: forall (lf6 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend (rev y) lf6).
Lemma conj502_imp: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : forall y0 : lst, @eq lst (rev (lfappend lf8 y0)) (lfappend (rev y0) x),
@eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj502: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj501: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) (lfappend (rev y) lf6).
Lemma conj488: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) lf5) y))
  (lfappend (rev y) (Cons n x)).
Lemma conj487: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend (rev y) lf6).
Lemma conj486: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend (rev y) (Cons n x)).
Lemma conj485: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (y : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend (rev y) lf6).
Lemma conj384: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj383: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) (lfappend lf7 lf6).
Lemma conj382: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj381: forall (lf6 : lst) (lf8 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) (lfappend lf7 lf6).
Lemma conj376: forall (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj375: forall (lf6 : lst) (lf9 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y)) (lfappend lf7 lf6).
Lemma conj374_imp: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), forall
  _ : forall y0 : lst, @eq lst (rev (lfappend lf8 y0)) (lfappend (rev y0) x),
@eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj374: forall (lf8 : lst) (lf9 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y))
  (lfappend lf7 (Cons n x)).
Lemma conj373: forall (lf6 : lst) (lf8 : lst) (lf9 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) (lfappend lf7 lf6).
Lemma conj360: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend lf7 (Cons n x)).
Lemma conj359: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) (lfappend lf7 lf6).
Lemma conj358: forall (lf8 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend lf7 (Cons n x)).
Lemma conj357: forall (lf6 : lst) (lf8 : lst) (lf5 : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) (lfappend lf7 lf6).
Lemma conj351: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n Nil)) y)) lf4.
Lemma conj349: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n Nil)) y)) lf4.
Lemma conj343: forall (lf9 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend (rev x) (Cons n lf9)) y)) lf4.
Lemma conj341: forall (lf8 : lst) (lf9 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (lfappend lf8 (Cons n lf9)) y)) lf4.
Lemma conj327: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (lfappend (rev x) lf5) y)) lf4.
Lemma conj325: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (lfappend lf8 lf5) y)) lf4.
Lemma conj230: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend (rev y) (Cons n x)).
Lemma conj229: forall (lf6 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend (rev y) lf6).
Lemma conj226: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev lf2) (lfappend (rev y) (Cons n x)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst (rev lf2) (lfappend (rev y) lf6).
Lemma conj162: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) lf6).
Lemma conj102: forall (x : lst) (y : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend lf7 (Cons n x)).
Lemma conj101: forall (lf6 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) (lfappend lf7 lf6).
Lemma conj98: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (rev lf2) (lfappend lf7 (Cons n x)).
Lemma conj97: forall (lf6 : lst) (lf2 : lst) (lf7 : lst), @eq lst (rev lf2) (lfappend lf7 lf6).
Lemma conj69: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend lf3 y)) lf4.
Lemma conj65: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj34: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (Cons n x)).
Lemma conj33: forall (lf6 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 lf6).
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.
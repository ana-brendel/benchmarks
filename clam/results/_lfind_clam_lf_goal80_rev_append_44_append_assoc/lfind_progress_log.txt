File Information
- File name: goal80
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal80_rev_append_44_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal80_rev_append_44_append_assoc
- Namespace: adtind
- Proof name: rev_lfappend
- Theorem: Theorem rev_lfappend: forall x0 y0 : lst,
@eq lst (rev (lfappend x0 y0)) (lfappend (rev y0) (rev x0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))

* Hypothesis:
IHx : @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x))
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
@eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)) : Prop
@eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))) : Prop
lfappend (lfappend (rev y) (rev x)) (Cons n Nil) : lst
x : lst
lfappend (rev y) (lfappend (rev x) (Cons n Nil)) : lst
rev (lfappend x y) : lst
y : lst
rev y : lst
lfappend (rev x) (Cons n Nil) : lst
lfappend (rev y) (rev x) : lst
lst : Set
Cons n Nil : lst
natural : Set
lfappend x y : lst
n : natural
rev x : lst
Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend (rev x) (Cons n Nil)
lf7 : lst = rev y
lf1 : lst = lfappend (lfappend (rev y) (rev x)) (Cons n Nil)
lf4 : lst = lfappend (rev y) (rev x)
lf5 : lst = Cons n Nil
lf2 : lst = lfappend (rev y) (lfappend (rev x) (Cons n Nil))
lf8 : lst = Nil
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj5: forall (lf1 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf1 (lfappend lf7 lf3).
Lemma conj33: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf5) lf2.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 lf3).
Lemma conj41: forall (lf8 : lst) (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8)) lf2.
Lemma conj43: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf2.
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj49: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) lf2.
Lemma conj50: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) lf2.
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 lf3).
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (lfappend lf7 lf3).
Lemma conj57: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) lf2.
Lemma conj58: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) lf2.
Lemma conj59: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) lf2.
Lemma conj60: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) lf2.
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj64: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj69: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst lf1 (lfappend (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj113: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) lf2.
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) lf2.
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) (lfappend (rev y) lf3).
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (lfappend (rev y) lf3).
Lemma conj121: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) lf2.
Lemma conj122: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) lf2.
Lemma conj123: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) lf2.
Lemma conj124: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) lf2.
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))
  (lfappend (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj128: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) lf3).
Lemma conj133: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj134: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj141: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj142: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj143: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj144: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj182: forall (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)
  (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))
  (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj190: forall (lf8 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))
  (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj191: forall (lf6 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))
  (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj192: forall (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))
  (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj197: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj198: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj205: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj206: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj207: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj208: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)
  (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)
  (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))
  (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj255: forall (lf6 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))
  (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).


<---VALIDITY CHECKS--->
Time elapsed: 230 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj255: forall (lf6 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))
  (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))
  (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)
  (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)
  (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj192: forall (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))
  (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj191: forall (lf6 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))
  (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj190: forall (lf8 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))
  (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))
  (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj182: forall (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)
  (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).

Invalid:
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj208: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj207: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj206: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj205: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj198: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj197: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj144: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj143: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj142: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj141: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj134: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj133: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj128: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))
  (lfappend (rev y) lf3).
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj124: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) lf2.
Lemma conj123: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) lf2.
Lemma conj122: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) lf2.
Lemma conj121: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) lf2.
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (lfappend (rev y) lf3).
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) (lfappend (rev y) lf3).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) lf2.
Lemma conj113: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) lf2.
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) lf3).
Lemma conj69: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst lf1 (lfappend (rev y) lf3).
Lemma conj64: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj60: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) lf2.
Lemma conj59: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) lf2.
Lemma conj58: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) lf2.
Lemma conj57: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) lf2.
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (lfappend lf7 lf3).
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 lf3).
Lemma conj50: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) lf2.
Lemma conj49: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) lf2.
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj43: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf2.
Lemma conj41: forall (lf8 : lst) (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8)) lf2.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 lf3).
Lemma conj33: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf5) lf2.
Lemma conj5: forall (lf1 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf1 (lfappend lf7 lf3).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 273 seconds
Generalizations:
Lemma conj240_imp: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), forall _ : @eq lst (rev (lfappend x y)) lf4,
@eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj238_imp: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), forall _ : @eq lst (rev (lfappend x y)) lf4,
@eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj230_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), forall _ : @eq lst (rev (lfappend x y)) lf4,
@eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj208: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj207: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj206: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj205: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj198: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj197: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj144: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj143: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj142: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj141: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj134: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj133: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj128: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))
  (lfappend (rev y) lf3).
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj124: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) lf2.
Lemma conj123: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) lf2.
Lemma conj122: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) lf2.
Lemma conj121: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) lf2.
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (lfappend (rev y) lf3).
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) (lfappend (rev y) lf3).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) lf2.
Lemma conj113: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) lf2.
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) lf3).
Lemma conj69: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst lf1 (lfappend (rev y) lf3).
Lemma conj64: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj60: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) lf2.
Lemma conj59: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) lf2.
Lemma conj58: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) lf2.
Lemma conj57: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) lf2.
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (lfappend lf7 lf3).
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 lf3).
Lemma conj50: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) lf2.
Lemma conj49: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) lf2.
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj43: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf2.
Lemma conj41: forall (lf8 : lst) (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8)) lf2.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 lf3).
Lemma conj33: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf5) lf2.
Lemma conj5: forall (lf1 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf1 (lfappend lf7 lf3).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 369 seconds
Valid:
Lemma conj230_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), forall _ : @eq lst (rev (lfappend x y)) lf4,
@eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj238_imp: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), forall _ : @eq lst (rev (lfappend x y)) lf4,
@eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj240_imp: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), forall _ : @eq lst (rev (lfappend x y)) lf4,
@eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj5: forall (lf1 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf1 (lfappend lf7 lf3).
Lemma conj33: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf5) lf2.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 lf3).
Lemma conj41: forall (lf8 : lst) (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8)) lf2.
Lemma conj43: forall (lf2 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil)) lf2.
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj49: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) lf2.
Lemma conj50: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) lf2.
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 lf3).
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (lfappend lf7 lf3).
Lemma conj57: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) lf2.
Lemma conj58: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) lf2.
Lemma conj59: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) lf2.
Lemma conj60: forall (lf2 : lst) (x : lst) (n : natural) (lf7 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) lf2.
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (lfappend lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj64: forall (x : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (lfappend lf7 lf3).
Lemma conj69: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst lf1 (lfappend (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj113: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) lf2.
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) lf2.
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5) (lfappend (rev y) lf3).
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (lfappend (rev y) lf3).
Lemma conj121: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) lf2.
Lemma conj122: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) lf2.
Lemma conj123: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) lf2.
Lemma conj124: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) lf2.
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (lfappend (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))
  (lfappend (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (lfappend (rev y) lf3).
Lemma conj128: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))
  (lfappend (rev y) lf3).
Lemma conj133: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj134: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj141: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj142: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj143: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj144: forall (x : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend (rev x) lf5)).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma conj197: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj198: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj205: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj206: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj207: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj208: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend lf6 lf5)).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).


<---CREATE SKETCHES--->
Time elapsed: 370 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj33_sketch0 : @eq lst (##hole##) lf2
Sketch conj33_term_sketch0 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj37_sketch0 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj37_sketch1 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj37_term_sketch0 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj41_sketch0 : @eq lst (##hole##) lf2
Sketch conj41_sketch1 : @eq lst (lfappend lf4 (##hole##)) lf2
Sketch conj41_term_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj41_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj43_sketch0 : @eq lst (lfappend lf4 (##hole##)) lf2
Sketch conj43_sketch1 : @eq lst (##hole##) lf2
Sketch conj43_sketch2 : @eq lst (lfappend lf4 (Cons n (##hole##))) lf2
Sketch conj43_term_sketch0 : @eq lst (Cons n Nil) (##hole##)
Sketch conj43_term_sketch1 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj43_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj45_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj45_sketch1 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj45_sketch2 : @eq lst (lfappend lf4 (##hole##)) (lfappend lf7 lf3)
Sketch conj45_term_sketch0 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj45_term_sketch1 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj45_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj47_sketch0 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj47_sketch1 : @eq lst (lfappend lf4 (##hole##)) (lfappend lf7 lf3)
Sketch conj47_sketch2 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj47_sketch3 : @eq lst (lfappend lf4 (Cons n (##hole##))) (lfappend lf7 lf3)
Sketch conj47_term_sketch0 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj47_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj47_term_sketch2 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj47_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj49_sketch0 : @eq lst (##hole##) lf2
Sketch conj49_sketch1 : @eq lst (lfappend (##hole##) lf5) lf2
Sketch conj49_term_sketch0 : @eq lst (lfappend (lfappend lf7 lf6) lf5) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (lfappend lf7 lf6) (##hole##)
Sketch conj50_sketch0 : @eq lst (##hole##) lf2
Sketch conj50_sketch1 : @eq lst (lfappend (##hole##) lf5) lf2
Sketch conj50_sketch2 : @eq lst (lfappend (lfappend lf7 (##hole##)) lf5) lf2
Sketch conj50_term_sketch0 : @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (##hole##)
Sketch conj50_term_sketch1 : @eq lst (lfappend lf7 (rev x)) (##hole##)
Sketch conj50_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj53_sketch0 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj53_sketch1 : @eq lst (lfappend (lfappend lf7 lf6) lf5) (##hole##)
Sketch conj53_sketch2 : @eq lst (lfappend (##hole##) lf5) (lfappend lf7 lf3)
Sketch conj53_term_sketch0 : @eq lst (lfappend (lfappend lf7 lf6) lf5) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (lfappend lf7 lf6) (##hole##)
Sketch conj54_sketch0 : @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (##hole##)
Sketch conj54_sketch1 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj54_sketch2 : @eq lst (lfappend (##hole##) lf5) (lfappend lf7 lf3)
Sketch conj54_sketch3 : @eq lst (lfappend (lfappend lf7 (##hole##)) lf5) (lfappend lf7 lf3)
Sketch conj54_term_sketch0 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj54_term_sketch1 : @eq lst (lfappend (lfappend lf7 (rev x)) lf5) (##hole##)
Sketch conj54_term_sketch2 : @eq lst (lfappend lf7 (rev x)) (##hole##)
Sketch conj54_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj57_sketch0 : @eq lst (##hole##) lf2
Sketch conj57_sketch1 : @eq lst (lfappend (lfappend lf7 lf6) (##hole##)) lf2
Sketch conj57_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj57_term_sketch0 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (##hole##)
Sketch conj57_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj57_term_sketch2 : @eq lst (lfappend lf7 lf6) (##hole##)
Sketch conj58_sketch0 : @eq lst (##hole##) lf2
Sketch conj58_sketch1 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj58_sketch2 : @eq lst (lfappend (lfappend lf7 (rev x)) (##hole##)) lf2
Sketch conj58_sketch3 : @eq lst (lfappend (lfappend lf7 (##hole##)) (Cons n lf8)) lf2
Sketch conj58_term_sketch0 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (##hole##)
Sketch conj58_term_sketch1 : @eq lst (lfappend lf7 (rev x)) (##hole##)
Sketch conj58_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj58_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj59_sketch0 : @eq lst (##hole##) lf2
Sketch conj59_sketch1 : @eq lst (lfappend (lfappend lf7 lf6) (##hole##)) lf2
Sketch conj59_sketch2 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj59_sketch3 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n (##hole##))) lf2
Sketch conj59_term_sketch0 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend lf7 lf6) (##hole##)
Sketch conj59_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_sketch0 : @eq lst (##hole##) lf2
Sketch conj60_sketch1 : @eq lst (lfappend (lfappend lf7 (rev x)) (##hole##)) lf2
Sketch conj60_sketch2 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj60_sketch3 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n (##hole##))) lf2
Sketch conj60_sketch4 : @eq lst (lfappend (lfappend lf7 (##hole##)) (Cons n Nil)) lf2
Sketch conj60_term_sketch0 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lfappend lf7 (rev x)) (##hole##)
Sketch conj60_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj61_sketch0 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj61_sketch1 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (##hole##)
Sketch conj61_sketch2 : @eq lst (lfappend (lfappend lf7 lf6) (##hole##)) (lfappend lf7 lf3)
Sketch conj61_sketch3 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend lf7 lf3)
Sketch conj61_term_sketch0 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8)) (##hole##)
Sketch conj61_term_sketch1 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj61_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj61_term_sketch3 : @eq lst (lfappend lf7 lf6) (##hole##)
Sketch conj62_sketch0 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj62_sketch1 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (##hole##)
Sketch conj62_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend lf7 lf3)
Sketch conj62_sketch3 : @eq lst (lfappend (lfappend lf7 (rev x)) (##hole##)) (lfappend lf7 lf3)
Sketch conj62_sketch4 : @eq lst (lfappend (lfappend lf7 (##hole##)) (Cons n lf8)) (lfappend lf7 lf3)
Sketch conj62_term_sketch0 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8)) (##hole##)
Sketch conj62_term_sketch1 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj62_term_sketch2 : @eq lst (lfappend lf7 (rev x)) (##hole##)
Sketch conj62_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj62_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj63_sketch0 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj63_sketch1 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (##hole##)
Sketch conj63_sketch2 : @eq lst (lfappend (lfappend lf7 lf6) (##hole##)) (lfappend lf7 lf3)
Sketch conj63_sketch3 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend lf7 lf3)
Sketch conj63_sketch4 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n (##hole##))) (lfappend lf7 lf3)
Sketch conj63_term_sketch0 : @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil)) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend lf7 lf6) (##hole##)
Sketch conj63_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_sketch0 : @eq lst (##hole##) (lfappend lf7 lf3)
Sketch conj64_sketch1 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (##hole##)
Sketch conj64_sketch2 : @eq lst (lfappend (lfappend lf7 (rev x)) (##hole##)) (lfappend lf7 lf3)
Sketch conj64_sketch3 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend lf7 lf3)
Sketch conj64_sketch4 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n (##hole##)))
  (lfappend lf7 lf3)
Sketch conj64_sketch5 : @eq lst (lfappend (lfappend lf7 (##hole##)) (Cons n Nil)) (lfappend lf7 lf3)
Sketch conj64_term_sketch0 : @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil)) (##hole##)
Sketch conj64_term_sketch1 : @eq lst (lfappend lf7 lf3) (##hole##)
Sketch conj64_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj64_term_sketch3 : @eq lst (lfappend lf7 (rev x)) (##hole##)
Sketch conj64_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj69_sketch0 : @eq lst lf1 (##hole##)
Sketch conj69_sketch1 : @eq lst lf1 (lfappend (##hole##) lf3)
Sketch conj69_term_sketch0 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj69_term_sketch1 : @eq lst (rev y) (##hole##)
Sketch conj101_sketch0 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj101_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj101_sketch2 : @eq lst (lfappend lf4 lf5) (lfappend (##hole##) lf3)
Sketch conj101_term_sketch0 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj101_term_sketch1 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj101_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj109_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj109_sketch1 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj109_sketch2 : @eq lst (lfappend lf4 (##hole##)) (lfappend (rev y) lf3)
Sketch conj109_sketch3 : @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (##hole##) lf3)
Sketch conj109_term_sketch0 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj109_term_sketch1 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj109_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj109_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj111_sketch0 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj111_sketch1 : @eq lst (lfappend lf4 (##hole##)) (lfappend (rev y) lf3)
Sketch conj111_sketch2 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj111_sketch3 : @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (##hole##) lf3)
Sketch conj111_sketch4 : @eq lst (lfappend lf4 (Cons n (##hole##))) (lfappend (rev y) lf3)
Sketch conj111_term_sketch0 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj111_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj111_term_sketch2 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj111_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj111_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj113_sketch0 : @eq lst (lfappend (##hole##) lf5) lf2
Sketch conj113_sketch1 : @eq lst (##hole##) lf2
Sketch conj113_sketch2 : @eq lst (lfappend (lfappend (##hole##) lf6) lf5) lf2
Sketch conj113_term_sketch0 : @eq lst (lfappend (rev y) lf6) (##hole##)
Sketch conj113_term_sketch1 : @eq lst (lfappend (lfappend (rev y) lf6) lf5) (##hole##)
Sketch conj113_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj114_sketch0 : @eq lst (##hole##) lf2
Sketch conj114_sketch1 : @eq lst (lfappend (##hole##) lf5) lf2
Sketch conj114_sketch2 : @eq lst (lfappend (lfappend (rev y) (##hole##)) lf5) lf2
Sketch conj114_sketch3 : @eq lst (lfappend (lfappend (##hole##) (rev x)) lf5) lf2
Sketch conj114_term_sketch0 : @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (##hole##)
Sketch conj114_term_sketch1 : @eq lst (lfappend (rev y) (rev x)) (##hole##)
Sketch conj114_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj114_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj117_sketch0 : @eq lst (lfappend (##hole##) lf5) (lfappend (rev y) lf3)
Sketch conj117_sketch1 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj117_sketch2 : @eq lst (lfappend (lfappend (rev y) lf6) lf5) (##hole##)
Sketch conj117_sketch3 : @eq lst (lfappend (lfappend (##hole##) lf6) lf5) (lfappend (##hole##) lf3)
Sketch conj117_term_sketch0 : @eq lst (lfappend (rev y) lf6) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (lfappend (lfappend (rev y) lf6) lf5) (##hole##)
Sketch conj117_term_sketch2 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj117_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj118_sketch0 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj118_sketch1 : @eq lst (lfappend (##hole##) lf5) (lfappend (rev y) lf3)
Sketch conj118_sketch2 : @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (##hole##)
Sketch conj118_sketch3 : @eq lst (lfappend (lfappend (##hole##) (rev x)) lf5)
  (lfappend (##hole##) lf3)
Sketch conj118_sketch4 : @eq lst (lfappend (lfappend (rev y) (##hole##)) lf5) (lfappend (rev y) lf3)
Sketch conj118_term_sketch0 : @eq lst (lfappend (lfappend (rev y) (rev x)) lf5) (##hole##)
Sketch conj118_term_sketch1 : @eq lst (lfappend (rev y) (rev x)) (##hole##)
Sketch conj118_term_sketch2 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj118_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj118_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj121_sketch0 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj121_sketch1 : @eq lst (##hole##) lf2
Sketch conj121_sketch2 : @eq lst (lfappend (lfappend (rev y) lf6) (##hole##)) lf2
Sketch conj121_sketch3 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n lf8)) lf2
Sketch conj121_term_sketch0 : @eq lst (lfappend (rev y) lf6) (##hole##)
Sketch conj121_term_sketch1 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (##hole##)
Sketch conj121_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj121_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj122_sketch0 : @eq lst (##hole##) lf2
Sketch conj122_sketch1 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj122_sketch2 : @eq lst (lfappend (lfappend (rev y) (rev x)) (##hole##)) lf2
Sketch conj122_sketch3 : @eq lst (lfappend (lfappend (rev y) (##hole##)) (Cons n lf8)) lf2
Sketch conj122_sketch4 : @eq lst (lfappend (lfappend (##hole##) (rev x)) (Cons n lf8)) lf2
Sketch conj122_term_sketch0 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) (##hole##)
Sketch conj122_term_sketch1 : @eq lst (lfappend (rev y) (rev x)) (##hole##)
Sketch conj122_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj122_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj122_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj123_sketch0 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj123_sketch1 : @eq lst (##hole##) lf2
Sketch conj123_sketch2 : @eq lst (lfappend (lfappend (rev y) lf6) (##hole##)) lf2
Sketch conj123_sketch3 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n (##hole##))) lf2
Sketch conj123_sketch4 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n Nil)) lf2
Sketch conj123_term_sketch0 : @eq lst (lfappend (rev y) lf6) (##hole##)
Sketch conj123_term_sketch1 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (##hole##)
Sketch conj123_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj123_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj123_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj124_sketch0 : @eq lst (##hole##) lf2
Sketch conj124_sketch1 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj124_sketch2 : @eq lst (lfappend (lfappend (rev y) (rev x)) (##hole##)) lf2
Sketch conj124_sketch3 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n (##hole##))) lf2
Sketch conj124_sketch4 : @eq lst (lfappend (lfappend (rev y) (##hole##)) (Cons n Nil)) lf2
Sketch conj124_sketch5 : @eq lst (lfappend (lfappend (##hole##) (rev x)) (Cons n Nil)) lf2
Sketch conj124_term_sketch0 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) (##hole##)
Sketch conj124_term_sketch1 : @eq lst (lfappend (rev y) (rev x)) (##hole##)
Sketch conj124_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj124_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj124_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj124_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj125_sketch0 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend (rev y) lf3)
Sketch conj125_sketch1 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj125_sketch2 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (##hole##)
Sketch conj125_sketch3 : @eq lst (lfappend (lfappend (rev y) lf6) (##hole##)) (lfappend (rev y) lf3)
Sketch conj125_sketch4 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n lf8))
  (lfappend (##hole##) lf3)
Sketch conj125_term_sketch0 : @eq lst (lfappend (rev y) lf6) (##hole##)
Sketch conj125_term_sketch1 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8)) (##hole##)
Sketch conj125_term_sketch2 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj125_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj125_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj126_sketch0 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj126_sketch1 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend (rev y) lf3)
Sketch conj126_sketch2 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) (##hole##)
Sketch conj126_sketch3 : @eq lst (lfappend (lfappend (rev y) (rev x)) (##hole##))
  (lfappend (rev y) lf3)
Sketch conj126_sketch4 : @eq lst (lfappend (lfappend (##hole##) (rev x)) (Cons n lf8))
  (lfappend (##hole##) lf3)
Sketch conj126_sketch5 : @eq lst (lfappend (lfappend (rev y) (##hole##)) (Cons n lf8))
  (lfappend (rev y) lf3)
Sketch conj126_term_sketch0 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8)) (##hole##)
Sketch conj126_term_sketch1 : @eq lst (lfappend (rev y) (rev x)) (##hole##)
Sketch conj126_term_sketch2 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj126_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj126_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj126_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj127_sketch0 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend (rev y) lf3)
Sketch conj127_sketch1 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj127_sketch2 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (##hole##)
Sketch conj127_sketch3 : @eq lst (lfappend (lfappend (rev y) lf6) (##hole##)) (lfappend (rev y) lf3)
Sketch conj127_sketch4 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n Nil))
  (lfappend (##hole##) lf3)
Sketch conj127_sketch5 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n (##hole##)))
  (lfappend (rev y) lf3)
Sketch conj127_term_sketch0 : @eq lst (lfappend (rev y) lf6) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj127_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj128_sketch0 : @eq lst (##hole##) (lfappend (rev y) lf3)
Sketch conj128_sketch1 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend (rev y) lf3)
Sketch conj128_sketch2 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) (##hole##)
Sketch conj128_sketch3 : @eq lst (lfappend (lfappend (rev y) (rev x)) (##hole##))
  (lfappend (rev y) lf3)
Sketch conj128_sketch4 : @eq lst (lfappend (lfappend (##hole##) (rev x)) (Cons n Nil))
  (lfappend (##hole##) lf3)
Sketch conj128_sketch5 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n (##hole##)))
  (lfappend (rev y) lf3)
Sketch conj128_sketch6 : @eq lst (lfappend (lfappend (rev y) (##hole##)) (Cons n Nil))
  (lfappend (rev y) lf3)
Sketch conj128_term_sketch0 : @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)) (##hole##)
Sketch conj128_term_sketch1 : @eq lst (lfappend (rev y) (rev x)) (##hole##)
Sketch conj128_term_sketch2 : @eq lst (lfappend (rev y) lf3) (##hole##)
Sketch conj128_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj128_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj128_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj128_term_sketch6 : @eq lst (rev x) (##hole##)
Sketch conj133_sketch0 : @eq lst lf1 (lfappend lf7 (##hole##))
Sketch conj133_sketch1 : @eq lst lf1 (##hole##)
Sketch conj133_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj133_term_sketch1 : @eq lst (lfappend lf7 (lfappend lf6 lf5)) (##hole##)
Sketch conj134_sketch0 : @eq lst lf1 (lfappend lf7 (##hole##))
Sketch conj134_sketch1 : @eq lst lf1 (lfappend lf7 (lfappend (##hole##) lf5))
Sketch conj134_sketch2 : @eq lst lf1 (##hole##)
Sketch conj134_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj134_term_sketch1 : @eq lst (rev x) (##hole##)
Sketch conj134_term_sketch2 : @eq lst (lfappend lf7 (lfappend (rev x) lf5)) (##hole##)
Sketch conj141_sketch0 : @eq lst lf1 (##hole##)
Sketch conj141_sketch1 : @eq lst lf1 (lfappend lf7 (##hole##))
Sketch conj141_sketch2 : @eq lst lf1 (lfappend lf7 (lfappend lf6 (##hole##)))
Sketch conj141_term_sketch0 : @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8))) (##hole##)
Sketch conj141_term_sketch1 : @eq lst (lfappend lf6 (Cons n lf8)) (##hole##)
Sketch conj141_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj142_sketch0 : @eq lst lf1 (lfappend lf7 (##hole##))
Sketch conj142_sketch1 : @eq lst lf1 (##hole##)
Sketch conj142_sketch2 : @eq lst lf1 (lfappend lf7 (lfappend (rev x) (##hole##)))
Sketch conj142_sketch3 : @eq lst lf1 (lfappend lf7 (lfappend (##hole##) (Cons n lf8)))
Sketch conj142_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj142_term_sketch1 : @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8))) (##hole##)
Sketch conj142_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj142_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj143_sketch0 : @eq lst lf1 (##hole##)
Sketch conj143_sketch1 : @eq lst lf1 (lfappend lf7 (##hole##))
Sketch conj143_sketch2 : @eq lst lf1 (lfappend lf7 (lfappend lf6 (##hole##)))
Sketch conj143_sketch3 : @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n (##hole##))))
Sketch conj143_term_sketch0 : @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj143_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj143_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj143_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj144_sketch0 : @eq lst lf1 (lfappend lf7 (##hole##))
Sketch conj144_sketch1 : @eq lst lf1 (lfappend lf7 (lfappend (rev x) (##hole##)))
Sketch conj144_sketch2 : @eq lst lf1 (##hole##)
Sketch conj144_sketch3 : @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n (##hole##))))
Sketch conj144_sketch4 : @eq lst lf1 (lfappend lf7 (lfappend (##hole##) (Cons n Nil)))
Sketch conj144_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj144_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj144_term_sketch2 : @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj144_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj144_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj165_sketch0 : @eq lst (lfappend lf4 lf5) (lfappend lf7 (##hole##))
Sketch conj165_sketch1 : @eq lst (##hole##) (lfappend lf7 (lfappend lf6 lf5))
Sketch conj165_sketch2 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj165_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj165_term_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj165_term_sketch2 : @eq lst (lfappend lf7 (lfappend lf6 lf5)) (##hole##)
Sketch conj166_sketch0 : @eq lst (lfappend lf4 lf5) (lfappend lf7 (##hole##))
Sketch conj166_sketch1 : @eq lst (##hole##) (lfappend lf7 (lfappend (rev x) lf5))
Sketch conj166_sketch2 : @eq lst (lfappend lf4 lf5) (lfappend lf7 (lfappend (##hole##) lf5))
Sketch conj166_sketch3 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj166_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj166_term_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj166_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj166_term_sketch3 : @eq lst (lfappend lf7 (lfappend (rev x) lf5)) (##hole##)
Sketch conj173_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj173_sketch1 : @eq lst (##hole##) (lfappend lf7 (lfappend lf6 (Cons n lf8)))
Sketch conj173_sketch2 : @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf7 (##hole##))
Sketch conj173_sketch3 : @eq lst (lfappend lf4 (##hole##)) (lfappend lf7 (lfappend lf6 (##hole##)))
Sketch conj173_term_sketch0 : @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8))) (##hole##)
Sketch conj173_term_sketch1 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj173_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf8)) (##hole##)
Sketch conj173_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj174_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf7 (##hole##))
Sketch conj174_sketch1 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj174_sketch2 : @eq lst (##hole##) (lfappend lf7 (lfappend (rev x) (Cons n lf8)))
Sketch conj174_sketch3 : @eq lst (lfappend lf4 (##hole##))
  (lfappend lf7 (lfappend (rev x) (##hole##)))
Sketch conj174_sketch4 : @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend lf7 (lfappend (##hole##) (Cons n lf8)))
Sketch conj174_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj174_term_sketch1 : @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8))) (##hole##)
Sketch conj174_term_sketch2 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj174_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj174_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj175_sketch0 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj175_sketch1 : @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf7 (##hole##))
Sketch conj175_sketch2 : @eq lst (lfappend lf4 (##hole##)) (lfappend lf7 (lfappend lf6 (##hole##)))
Sketch conj175_sketch3 : @eq lst (##hole##) (lfappend lf7 (lfappend lf6 (Cons n Nil)))
Sketch conj175_sketch4 : @eq lst (lfappend lf4 (Cons n (##hole##)))
  (lfappend lf7 (lfappend lf6 (Cons n (##hole##))))
Sketch conj175_term_sketch0 : @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj175_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj175_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj175_term_sketch3 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj175_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_sketch0 : @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf7 (##hole##))
Sketch conj176_sketch1 : @eq lst (lfappend lf4 (##hole##))
  (lfappend lf7 (lfappend (rev x) (##hole##)))
Sketch conj176_sketch2 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj176_sketch3 : @eq lst (##hole##) (lfappend lf7 (lfappend (rev x) (Cons n Nil)))
Sketch conj176_sketch4 : @eq lst (lfappend lf4 (Cons n (##hole##)))
  (lfappend lf7 (lfappend (rev x) (Cons n (##hole##))))
Sketch conj176_sketch5 : @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend lf7 (lfappend (##hole##) (Cons n Nil)))
Sketch conj176_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj176_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj176_term_sketch2 : @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj176_term_sketch3 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj176_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj197_sketch0 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj197_sketch1 : @eq lst lf1 (##hole##)
Sketch conj197_sketch2 : @eq lst lf1 (lfappend (##hole##) (lfappend lf6 lf5))
Sketch conj197_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj197_term_sketch1 : @eq lst (lfappend (rev y) (lfappend lf6 lf5)) (##hole##)
Sketch conj197_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj198_sketch0 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj198_sketch1 : @eq lst lf1 (lfappend (rev y) (lfappend (##hole##) lf5))
Sketch conj198_sketch2 : @eq lst lf1 (lfappend (##hole##) (lfappend (rev x) lf5))
Sketch conj198_sketch3 : @eq lst lf1 (##hole##)
Sketch conj198_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj198_term_sketch1 : @eq lst (rev x) (##hole##)
Sketch conj198_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj198_term_sketch3 : @eq lst (lfappend (rev y) (lfappend (rev x) lf5)) (##hole##)
Sketch conj205_sketch0 : @eq lst lf1 (##hole##)
Sketch conj205_sketch1 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj205_sketch2 : @eq lst lf1 (lfappend (rev y) (lfappend lf6 (##hole##)))
Sketch conj205_sketch3 : @eq lst lf1 (lfappend (##hole##) (lfappend lf6 (Cons n lf8)))
Sketch conj205_term_sketch0 : @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8))) (##hole##)
Sketch conj205_term_sketch1 : @eq lst (lfappend lf6 (Cons n lf8)) (##hole##)
Sketch conj205_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj205_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj206_sketch0 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj206_sketch1 : @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (##hole##)))
Sketch conj206_sketch2 : @eq lst lf1 (lfappend (rev y) (lfappend (##hole##) (Cons n lf8)))
Sketch conj206_sketch3 : @eq lst lf1 (lfappend (##hole##) (lfappend (rev x) (Cons n lf8)))
Sketch conj206_sketch4 : @eq lst lf1 (##hole##)
Sketch conj206_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj206_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj206_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj206_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj206_term_sketch4 : @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8))) (##hole##)
Sketch conj207_sketch0 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj207_sketch1 : @eq lst lf1 (lfappend (rev y) (lfappend lf6 (##hole##)))
Sketch conj207_sketch2 : @eq lst lf1 (##hole##)
Sketch conj207_sketch3 : @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n (##hole##))))
Sketch conj207_sketch4 : @eq lst lf1 (lfappend (##hole##) (lfappend lf6 (Cons n Nil)))
Sketch conj207_term_sketch0 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj207_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj207_term_sketch2 : @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj207_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj207_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj208_sketch0 : @eq lst lf1 (lfappend (rev y) (##hole##))
Sketch conj208_sketch1 : @eq lst lf1 (##hole##)
Sketch conj208_sketch2 : @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (##hole##)))
Sketch conj208_sketch3 : @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n (##hole##))))
Sketch conj208_sketch4 : @eq lst lf1 (lfappend (rev y) (lfappend (##hole##) (Cons n Nil)))
Sketch conj208_sketch5 : @eq lst lf1 (lfappend (##hole##) (lfappend (rev x) (Cons n Nil)))
Sketch conj208_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj208_term_sketch1 : @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj208_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj208_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj208_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj208_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj229_sketch0 : @eq lst (lfappend lf4 lf5) (lfappend (rev y) (##hole##))
Sketch conj229_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj229_sketch2 : @eq lst (##hole##) (lfappend (rev y) (lfappend lf6 lf5))
Sketch conj229_sketch3 : @eq lst (lfappend lf4 lf5) (lfappend (##hole##) (lfappend lf6 lf5))
Sketch conj229_term_sketch0 : @eq lst (lfappend lf6 lf5) (##hole##)
Sketch conj229_term_sketch1 : @eq lst (lfappend (rev y) (lfappend lf6 lf5)) (##hole##)
Sketch conj229_term_sketch2 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj229_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj230_sketch0 : @eq lst (lfappend lf4 lf5) (lfappend (rev y) (##hole##))
Sketch conj230_sketch1 : @eq lst (##hole##) (lfappend (rev y) (lfappend (rev x) lf5))
Sketch conj230_sketch2 : @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (##hole##) lf5))
Sketch conj230_sketch3 : @eq lst (lfappend lf4 lf5) (lfappend (##hole##) (lfappend (rev x) lf5))
Sketch conj230_sketch4 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj230_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj230_term_sketch1 : @eq lst (lfappend lf4 lf5) (##hole##)
Sketch conj230_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj230_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj230_term_sketch4 : @eq lst (lfappend (rev y) (lfappend (rev x) lf5)) (##hole##)
Sketch conj237_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj237_sketch1 : @eq lst (##hole##) (lfappend (rev y) (lfappend lf6 (Cons n lf8)))
Sketch conj237_sketch2 : @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev y) (##hole##))
Sketch conj237_sketch3 : @eq lst (lfappend lf4 (##hole##))
  (lfappend (rev y) (lfappend lf6 (##hole##)))
Sketch conj237_sketch4 : @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (##hole##) (lfappend lf6 (Cons n lf8)))
Sketch conj237_term_sketch0 : @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8))) (##hole##)
Sketch conj237_term_sketch1 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj237_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf8)) (##hole##)
Sketch conj237_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj237_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj238_sketch0 : @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev y) (##hole##))
Sketch conj238_sketch1 : @eq lst (##hole##) (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))
Sketch conj238_sketch2 : @eq lst (lfappend lf4 (##hole##))
  (lfappend (rev y) (lfappend (rev x) (##hole##)))
Sketch conj238_sketch3 : @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (rev y) (lfappend (##hole##) (Cons n lf8)))
Sketch conj238_sketch4 : @eq lst (lfappend lf4 (Cons n lf8))
  (lfappend (##hole##) (lfappend (rev x) (Cons n lf8)))
Sketch conj238_sketch5 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj238_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj238_term_sketch1 : @eq lst (lfappend lf4 (Cons n lf8)) (##hole##)
Sketch conj238_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj238_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj238_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj238_term_sketch5 : @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8))) (##hole##)
Sketch conj239_sketch0 : @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev y) (##hole##))
Sketch conj239_sketch1 : @eq lst (lfappend lf4 (##hole##))
  (lfappend (rev y) (lfappend lf6 (##hole##)))
Sketch conj239_sketch2 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj239_sketch3 : @eq lst (##hole##) (lfappend (rev y) (lfappend lf6 (Cons n Nil)))
Sketch conj239_sketch4 : @eq lst (lfappend lf4 (Cons n (##hole##)))
  (lfappend (rev y) (lfappend lf6 (Cons n (##hole##))))
Sketch conj239_sketch5 : @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (##hole##) (lfappend lf6 (Cons n Nil)))
Sketch conj239_term_sketch0 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj239_term_sketch2 : @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj239_term_sketch3 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj239_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj240_sketch0 : @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev y) (##hole##))
Sketch conj240_sketch1 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj240_sketch2 : @eq lst (lfappend lf4 (##hole##))
  (lfappend (rev y) (lfappend (rev x) (##hole##)))
Sketch conj240_sketch3 : @eq lst (##hole##) (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))
Sketch conj240_sketch4 : @eq lst (lfappend lf4 (Cons n (##hole##)))
  (lfappend (rev y) (lfappend (rev x) (Cons n (##hole##))))
Sketch conj240_sketch5 : @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (rev y) (lfappend (##hole##) (Cons n Nil)))
Sketch conj240_sketch6 : @eq lst (lfappend lf4 (Cons n Nil))
  (lfappend (##hole##) (lfappend (rev x) (Cons n Nil)))
Sketch conj240_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj240_term_sketch1 : @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj240_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj240_term_sketch3 : @eq lst (lfappend lf4 (Cons n Nil)) (##hole##)
Sketch conj240_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj240_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj240_term_sketch6 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 8957 seconds
Problems per Sketch:
Sketch conj238_sketch4 --> Problem  synth_135
Sketch conj126_term_sketch3 --> Problem  synth_7
Sketch conj124_term_sketch0 --> Problem  synth_75
Sketch conj69_sketch0 --> Problem  synth_1
Sketch conj208_sketch2 --> Problem  synth_118
Sketch conj122_term_sketch3 --> Problem  synth_20
Sketch conj60_term_sketch1 --> Problem  synth_9
Sketch conj101_term_sketch2 --> Problem  synth_45
Sketch conj63_sketch4 --> Problem  synth_40
Sketch conj118_sketch3 --> Problem  synth_60
Sketch conj238_sketch0 --> Problem  synth_130
Sketch conj59_term_sketch1 --> Problem  synth_9
Sketch conj240_sketch6 --> Problem  synth_141
Sketch conj206_sketch2 --> Problem  synth_119
Sketch conj143_sketch0 --> Problem  synth_1
Sketch conj141_term_sketch1 --> Problem  synth_93
Sketch conj53_term_sketch2 --> Problem  synth_16
Sketch conj60_sketch0 --> Problem  synth_3
Sketch conj125_term_sketch3 --> Problem  synth_7
Sketch conj142_term_sketch3 --> Problem  synth_20
Sketch conj127_sketch3 --> Problem  synth_77
Sketch conj121_term_sketch1 --> Problem  synth_64
Sketch conj109_term_sketch1 --> Problem  synth_6
Sketch conj63_term_sketch0 --> Problem  synth_31
Sketch conj142_sketch1 --> Problem  synth_1
Sketch conj127_term_sketch0 --> Problem  synth_52
Sketch conj58_sketch2 --> Problem  synth_26
Sketch conj173_sketch0 --> Problem  synth_6
Sketch conj61_term_sketch2 --> Problem  synth_7
Sketch conj208_sketch3 --> Problem  synth_123
Sketch conj124_term_sketch2 --> Problem  synth_9
Sketch conj60_term_sketch3 --> Problem  synth_11
Sketch conj237_term_sketch4 --> Problem  synth_45
Sketch conj133_sketch0 --> Problem  synth_88
Sketch conj123_sketch4 --> Problem  synth_70
Sketch conj54_sketch1 --> Problem  synth_2
Sketch conj143_sketch1 --> Problem  synth_88
Sketch conj64_term_sketch5 --> Problem  synth_20
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj206_term_sketch1 --> Problem  synth_7
Sketch conj134_sketch1 --> Problem  synth_90
Sketch conj207_sketch1 --> Problem  synth_116
Sketch conj175_term_sketch0 --> Problem  synth_31
Sketch conj60_sketch2 --> Problem  synth_29
Sketch conj59_sketch3 --> Problem  synth_30
Sketch conj144_term_sketch4 --> Problem  synth_20
Sketch conj101_sketch0 --> Problem  synth_44
Sketch conj238_term_sketch0 --> Problem  synth_96
Sketch conj208_sketch5 --> Problem  synth_125
Sketch conj124_sketch1 --> Problem  synth_29
Sketch conj64_term_sketch1 --> Problem  synth_2
Sketch conj230_sketch3 --> Problem  synth_129
Sketch conj175_sketch0 --> Problem  synth_10
Sketch conj47_sketch2 --> Problem  synth_2
Sketch conj128_sketch6 --> Problem  synth_87
Sketch conj43_term_sketch1 --> Problem  synth_10
Sketch conj174_sketch2 --> Problem  synth_28
Sketch conj57_term_sketch0 --> Problem  synth_25
Sketch conj237_sketch0 --> Problem  synth_6
Sketch conj143_term_sketch1 --> Problem  synth_98
Sketch conj176_term_sketch0 --> Problem  synth_101
Sketch conj237_sketch1 --> Problem  synth_64
Sketch conj144_sketch2 --> Problem  synth_1
Sketch conj238_sketch2 --> Problem  synth_133
Sketch conj125_term_sketch4 --> Problem  synth_45
Sketch conj206_sketch1 --> Problem  synth_118
Sketch conj43_sketch2 --> Problem  synth_8
Sketch conj125_sketch2 --> Problem  synth_64
Sketch conj239_sketch3 --> Problem  synth_71
Sketch conj239_term_sketch3 --> Problem  synth_10
Sketch conj125_sketch3 --> Problem  synth_77
Sketch conj230_term_sketch3 --> Problem  synth_45
Sketch conj114_sketch0 --> Problem  synth_3
Sketch conj49_sketch0 --> Problem  synth_3
Sketch conj54_sketch3 --> Problem  synth_22
Sketch conj47_term_sketch1 --> Problem  synth_9
Sketch conj240_term_sketch1 --> Problem  synth_75
Sketch conj121_sketch2 --> Problem  synth_62
Sketch conj69_term_sketch0 --> Problem  synth_44
Sketch conj45_sketch0 --> Problem  synth_6
Sketch conj50_term_sketch0 --> Problem  synth_18
Sketch conj118_sketch2 --> Problem  synth_56
Sketch conj237_term_sketch1 --> Problem  synth_6
Sketch conj53_term_sketch1 --> Problem  synth_2
Sketch conj208_sketch0 --> Problem  synth_112
Sketch conj207_term_sketch1 --> Problem  synth_9
Sketch conj117_sketch3 --> Problem  synth_59
Sketch conj63_sketch1 --> Problem  synth_31
Sketch conj239_term_sketch0 --> Problem  synth_98
Sketch conj237_sketch2 --> Problem  synth_130
Sketch conj113_sketch1 --> Problem  synth_3
Sketch conj229_sketch0 --> Problem  synth_126
Sketch conj173_term_sketch3 --> Problem  synth_7
Sketch conj50_sketch1 --> Problem  synth_14
Sketch conj41_sketch1 --> Problem  synth_5
Sketch conj101_sketch2 --> Problem  synth_46
Sketch conj127_sketch0 --> Problem  synth_82
Sketch conj122_term_sketch0 --> Problem  synth_68
Sketch conj41_sketch0 --> Problem  synth_3
Sketch conj165_sketch2 --> Problem  synth_4
Sketch conj141_term_sketch0 --> Problem  synth_25
Sketch conj240_term_sketch5 --> Problem  synth_20
Sketch conj123_sketch2 --> Problem  synth_62
Sketch conj176_term_sketch4 --> Problem  synth_11
Sketch conj143_term_sketch0 --> Problem  synth_31
Sketch conj240_term_sketch0 --> Problem  synth_101
Sketch conj175_sketch1 --> Problem  synth_108
Sketch conj230_sketch0 --> Problem  synth_126
Sketch conj122_sketch2 --> Problem  synth_65
Sketch conj126_sketch2 --> Problem  synth_68
Sketch conj61_term_sketch0 --> Problem  synth_25
Sketch conj61_sketch0 --> Problem  synth_2
Sketch conj111_term_sketch1 --> Problem  synth_9
Sketch conj205_term_sketch3 --> Problem  synth_45
Sketch conj128_term_sketch2 --> Problem  synth_44
Sketch conj197_sketch2 --> Problem  synth_113
Sketch conj165_sketch1 --> Problem  synth_15
Sketch conj128_sketch3 --> Problem  synth_79
Sketch conj47_term_sketch3 --> Problem  synth_11
Sketch conj58_term_sketch2 --> Problem  synth_7
Sketch conj33_sketch0 --> Problem  synth_3
Sketch conj239_sketch4 --> Problem  synth_137
Sketch conj166_term_sketch0 --> Problem  synth_91
Sketch conj64_term_sketch0 --> Problem  synth_34
Sketch conj239_term_sketch1 --> Problem  synth_9
Sketch conj230_sketch1 --> Problem  synth_56
Sketch conj197_term_sketch0 --> Problem  synth_89
Sketch conj118_term_sketch4 --> Problem  synth_20
Sketch conj62_term_sketch3 --> Problem  synth_7
Sketch conj142_term_sketch0 --> Problem  synth_96
Sketch conj60_term_sketch4 --> Problem  synth_20
Sketch conj176_sketch3 --> Problem  synth_34
Sketch conj114_term_sketch0 --> Problem  synth_56
Sketch conj230_sketch2 --> Problem  synth_128
Sketch conj207_term_sketch2 --> Problem  synth_71
Sketch conj175_sketch3 --> Problem  synth_31
Sketch conj125_sketch0 --> Problem  synth_76
Sketch conj53_term_sketch0 --> Problem  synth_15
Sketch conj123_sketch1 --> Problem  synth_3
Sketch conj208_term_sketch4 --> Problem  synth_20
Sketch conj43_sketch0 --> Problem  synth_5
Sketch conj175_term_sketch3 --> Problem  synth_10
Sketch conj175_sketch4 --> Problem  synth_109
Sketch conj128_sketch2 --> Problem  synth_75
Sketch conj239_term_sketch2 --> Problem  synth_71
Sketch conj121_sketch0 --> Problem  synth_24
Sketch conj60_sketch1 --> Problem  synth_26
Sketch conj45_sketch1 --> Problem  synth_2
Sketch conj230_term_sketch4 --> Problem  synth_56
Sketch conj208_term_sketch0 --> Problem  synth_101
Sketch conj101_term_sketch1 --> Problem  synth_44
Sketch conj123_term_sketch3 --> Problem  synth_11
Sketch conj109_term_sketch3 --> Problem  synth_45
Sketch conj239_sketch1 --> Problem  synth_131
Sketch conj205_sketch2 --> Problem  synth_116
Sketch conj125_term_sketch1 --> Problem  synth_64
Sketch conj45_term_sketch0 --> Problem  synth_2
Sketch conj207_sketch0 --> Problem  synth_112
Sketch conj128_term_sketch3 --> Problem  synth_9
Sketch conj121_term_sketch3 --> Problem  synth_45
Sketch conj142_term_sketch1 --> Problem  synth_28
Sketch conj33_term_sketch0 --> Problem  synth_4
Sketch conj144_term_sketch0 --> Problem  synth_101
Sketch conj41_term_sketch0 --> Problem  synth_6
Sketch conj58_term_sketch1 --> Problem  synth_19
Sketch conj143_sketch3 --> Problem  synth_97
Sketch conj118_sketch4 --> Problem  synth_61
Sketch conj133_term_sketch1 --> Problem  synth_15
Sketch conj123_term_sketch2 --> Problem  synth_9
Sketch conj118_term_sketch1 --> Problem  synth_57
Sketch conj113_sketch0 --> Problem  synth_14
Sketch conj239_term_sketch5 --> Problem  synth_45
Sketch conj198_sketch1 --> Problem  synth_114
Sketch conj61_sketch2 --> Problem  synth_35
Sketch conj238_term_sketch3 --> Problem  synth_20
Sketch conj126_term_sketch5 --> Problem  synth_20
Sketch conj117_term_sketch2 --> Problem  synth_44
Sketch conj62_term_sketch2 --> Problem  synth_19
Sketch conj144_sketch3 --> Problem  synth_99
Sketch conj122_term_sketch2 --> Problem  synth_7
Sketch conj118_term_sketch0 --> Problem  synth_56
Sketch conj57_sketch2 --> Problem  synth_24
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj126_term_sketch1 --> Problem  synth_57
Sketch conj43_sketch1 --> Problem  synth_3
Sketch conj240_term_sketch4 --> Problem  synth_11
Sketch conj63_sketch2 --> Problem  synth_35
Sketch conj125_sketch1 --> Problem  synth_44
Sketch conj62_term_sketch4 --> Problem  synth_20
Sketch conj142_sketch2 --> Problem  synth_94
Sketch conj229_sketch1 --> Problem  synth_4
Sketch conj69_term_sketch1 --> Problem  synth_45
Sketch conj124_sketch3 --> Problem  synth_72
Sketch conj176_term_sketch1 --> Problem  synth_9
Sketch conj197_sketch1 --> Problem  synth_1
Sketch conj176_sketch5 --> Problem  synth_111
Sketch conj47_term_sketch0 --> Problem  synth_2
Sketch conj117_sketch2 --> Problem  synth_53
Sketch conj61_term_sketch3 --> Problem  synth_16
Sketch conj144_term_sketch3 --> Problem  synth_11
Sketch conj208_term_sketch3 --> Problem  synth_11
Sketch conj59_term_sketch3 --> Problem  synth_11
Sketch conj50_term_sketch1 --> Problem  synth_19
Sketch conj123_sketch0 --> Problem  synth_29
Sketch conj50_sketch0 --> Problem  synth_3
Sketch conj54_term_sketch0 --> Problem  synth_2
Sketch conj57_sketch1 --> Problem  synth_23
Sketch conj239_sketch5 --> Problem  synth_138
Sketch conj206_term_sketch2 --> Problem  synth_20
Sketch conj64_sketch2 --> Problem  synth_37
Sketch conj176_sketch1 --> Problem  synth_106
Sketch conj126_sketch3 --> Problem  synth_79
Sketch conj141_term_sketch2 --> Problem  synth_7
Sketch conj111_term_sketch4 --> Problem  synth_11
Sketch conj141_sketch1 --> Problem  synth_88
Sketch conj206_sketch0 --> Problem  synth_112
Sketch conj198_term_sketch2 --> Problem  synth_45
Sketch conj128_sketch1 --> Problem  synth_82
Sketch conj197_term_sketch1 --> Problem  synth_53
Sketch conj144_sketch1 --> Problem  synth_94
Sketch conj126_term_sketch0 --> Problem  synth_68
Sketch conj101_term_sketch0 --> Problem  synth_4
Sketch conj64_term_sketch2 --> Problem  synth_9
Sketch conj237_sketch3 --> Problem  synth_131
Sketch conj113_sketch2 --> Problem  synth_51
Sketch conj206_term_sketch4 --> Problem  synth_68
Sketch conj141_sketch2 --> Problem  synth_92
Sketch conj175_term_sketch2 --> Problem  synth_9
Sketch conj54_term_sketch2 --> Problem  synth_19
Sketch conj123_term_sketch0 --> Problem  synth_52
Sketch conj109_sketch0 --> Problem  synth_6
Sketch conj47_term_sketch2 --> Problem  synth_10
Sketch conj114_sketch1 --> Problem  synth_14
Sketch conj207_sketch3 --> Problem  synth_121
Sketch conj166_term_sketch3 --> Problem  synth_18
Sketch conj57_sketch0 --> Problem  synth_3
Sketch conj121_sketch3 --> Problem  synth_63
Sketch conj111_term_sketch2 --> Problem  synth_10
Sketch conj122_sketch1 --> Problem  synth_24
Sketch conj176_sketch2 --> Problem  synth_10
Sketch conj240_sketch5 --> Problem  synth_140
Sketch conj134_term_sketch1 --> Problem  synth_20
Sketch conj207_sketch2 --> Problem  synth_1
Sketch conj41_term_sketch1 --> Problem  synth_7
Sketch conj238_sketch3 --> Problem  synth_134
Sketch conj128_term_sketch1 --> Problem  synth_57
Sketch conj128_sketch5 --> Problem  synth_86
Sketch conj206_sketch3 --> Problem  synth_120
Sketch conj64_term_sketch3 --> Problem  synth_19
Sketch conj101_sketch1 --> Problem  synth_4
Sketch conj49_term_sketch0 --> Problem  synth_15
Sketch conj37_sketch1 --> Problem  synth_2
Sketch conj208_sketch1 --> Problem  synth_1
Sketch conj176_term_sketch3 --> Problem  synth_10
Sketch conj117_term_sketch1 --> Problem  synth_53
Sketch conj174_term_sketch0 --> Problem  synth_96
Sketch conj53_sketch1 --> Problem  synth_15
Sketch conj59_term_sketch2 --> Problem  synth_16
Sketch conj127_sketch5 --> Problem  synth_84
Sketch conj175_sketch2 --> Problem  synth_105
Sketch conj113_term_sketch0 --> Problem  synth_52
Sketch conj198_term_sketch0 --> Problem  synth_91
Sketch conj174_term_sketch4 --> Problem  synth_20
Sketch conj59_sketch1 --> Problem  synth_23
Sketch conj207_term_sketch3 --> Problem  synth_11
Sketch conj238_sketch1 --> Problem  synth_68
Sketch conj124_term_sketch1 --> Problem  synth_57
Sketch conj240_sketch0 --> Problem  synth_136
Sketch conj198_sketch2 --> Problem  synth_115
Sketch conj176_sketch0 --> Problem  synth_108
Sketch conj173_term_sketch2 --> Problem  synth_93
Sketch conj50_sketch2 --> Problem  synth_17
Sketch conj237_sketch4 --> Problem  synth_132
Sketch conj240_term_sketch6 --> Problem  synth_45
Sketch conj133_sketch1 --> Problem  synth_1
Sketch conj128_term_sketch5 --> Problem  synth_11
Sketch conj50_term_sketch2 --> Problem  synth_20
Sketch conj134_term_sketch2 --> Problem  synth_18
Sketch conj61_sketch1 --> Problem  synth_25
Sketch conj166_term_sketch2 --> Problem  synth_20
Sketch conj238_term_sketch2 --> Problem  synth_7
Sketch conj124_sketch5 --> Problem  synth_74
Sketch conj173_sketch2 --> Problem  synth_104
Sketch conj122_sketch3 --> Problem  synth_66
Sketch conj198_term_sketch3 --> Problem  synth_56
Sketch conj126_sketch4 --> Problem  synth_80
Sketch conj197_sketch0 --> Problem  synth_112
Sketch conj240_sketch3 --> Problem  synth_75
Sketch conj174_sketch4 --> Problem  synth_107
Sketch conj114_sketch2 --> Problem  synth_54
Sketch conj109_term_sketch2 --> Problem  synth_7
Sketch conj127_sketch4 --> Problem  synth_83
Sketch conj111_sketch3 --> Problem  synth_49
Sketch conj63_term_sketch4 --> Problem  synth_11
Sketch conj207_sketch4 --> Problem  synth_122
Sketch conj128_sketch0 --> Problem  synth_44
Sketch conj197_term_sketch2 --> Problem  synth_45
Sketch conj123_sketch3 --> Problem  synth_69
Sketch conj125_term_sketch2 --> Problem  synth_44
Sketch conj240_term_sketch3 --> Problem  synth_10
Sketch conj166_sketch0 --> Problem  synth_102
Sketch conj134_sketch2 --> Problem  synth_1
Sketch conj109_sketch1 --> Problem  synth_44
Sketch conj238_term_sketch4 --> Problem  synth_45
Sketch conj114_term_sketch1 --> Problem  synth_57
Sketch conj237_term_sketch0 --> Problem  synth_64
Sketch conj127_term_sketch5 --> Problem  synth_11
Sketch conj126_sketch0 --> Problem  synth_44
Sketch conj62_sketch0 --> Problem  synth_2
Sketch conj60_sketch3 --> Problem  synth_32
Sketch conj47_sketch3 --> Problem  synth_13
Sketch conj239_sketch0 --> Problem  synth_136
Sketch conj229_sketch2 --> Problem  synth_53
Sketch conj205_term_sketch0 --> Problem  synth_64
Sketch conj143_term_sketch3 --> Problem  synth_11
Sketch conj117_term_sketch3 --> Problem  synth_45
Sketch conj63_term_sketch1 --> Problem  synth_2
Sketch conj123_term_sketch1 --> Problem  synth_71
Sketch conj58_term_sketch3 --> Problem  synth_20
Sketch conj230_sketch4 --> Problem  synth_4
Sketch conj127_term_sketch4 --> Problem  synth_45
Sketch conj109_sketch2 --> Problem  synth_47
Sketch conj58_sketch1 --> Problem  synth_24
Sketch conj237_term_sketch2 --> Problem  synth_93
Sketch conj121_sketch1 --> Problem  synth_3
Sketch conj238_term_sketch1 --> Problem  synth_6
Sketch conj126_term_sketch2 --> Problem  synth_44
Sketch conj37_sketch0 --> Problem  synth_4
Sketch conj109_term_sketch0 --> Problem  synth_44
Sketch conj239_term_sketch4 --> Problem  synth_11
Sketch conj134_term_sketch0 --> Problem  synth_91
Sketch conj124_sketch4 --> Problem  synth_73
Sketch conj143_term_sketch2 --> Problem  synth_9
Sketch conj54_sketch2 --> Problem  synth_21
Sketch conj47_sketch1 --> Problem  synth_12
Sketch conj122_sketch0 --> Problem  synth_3
Sketch conj207_term_sketch4 --> Problem  synth_45
Sketch conj49_term_sketch1 --> Problem  synth_16
Sketch conj64_term_sketch4 --> Problem  synth_11
Sketch conj64_sketch1 --> Problem  synth_34
Sketch conj127_term_sketch3 --> Problem  synth_9
Sketch conj62_term_sketch0 --> Problem  synth_28
Sketch conj133_term_sketch0 --> Problem  synth_89
Sketch conj166_sketch2 --> Problem  synth_103
Sketch conj237_term_sketch3 --> Problem  synth_7
Sketch conj53_sketch2 --> Problem  synth_21
Sketch conj64_sketch4 --> Problem  synth_41
Sketch conj109_sketch3 --> Problem  synth_48
Sketch conj62_term_sketch1 --> Problem  synth_2
Sketch conj54_sketch0 --> Problem  synth_18
Sketch conj176_term_sketch2 --> Problem  synth_34
Sketch conj173_sketch1 --> Problem  synth_25
Sketch conj118_term_sketch3 --> Problem  synth_45
Sketch conj118_term_sketch2 --> Problem  synth_44
Sketch conj58_sketch3 --> Problem  synth_27
Sketch conj128_term_sketch4 --> Problem  synth_45
Sketch conj62_sketch2 --> Problem  synth_36
Sketch conj174_term_sketch3 --> Problem  synth_7
Sketch conj174_term_sketch2 --> Problem  synth_6
Sketch conj174_term_sketch1 --> Problem  synth_28
Sketch conj64_sketch5 --> Problem  synth_42
Sketch conj166_term_sketch1 --> Problem  synth_4
Sketch conj165_term_sketch1 --> Problem  synth_4
Sketch conj134_sketch0 --> Problem  synth_88
Sketch conj60_sketch4 --> Problem  synth_33
Sketch conj127_term_sketch2 --> Problem  synth_44
Sketch conj111_sketch1 --> Problem  synth_47
Sketch conj229_term_sketch3 --> Problem  synth_45
Sketch conj208_term_sketch2 --> Problem  synth_9
Sketch conj122_sketch4 --> Problem  synth_67
Sketch conj238_sketch5 --> Problem  synth_6
Sketch conj239_sketch2 --> Problem  synth_10
Sketch conj63_term_sketch2 --> Problem  synth_9
Sketch conj58_term_sketch0 --> Problem  synth_28
Sketch conj173_term_sketch1 --> Problem  synth_6
Sketch conj142_sketch3 --> Problem  synth_95
Sketch conj45_term_sketch2 --> Problem  synth_7
Sketch conj141_sketch0 --> Problem  synth_1
Sketch conj117_sketch0 --> Problem  synth_58
Sketch conj208_term_sketch5 --> Problem  synth_45
Sketch conj124_term_sketch4 --> Problem  synth_20
Sketch conj113_term_sketch2 --> Problem  synth_45
Sketch conj144_sketch0 --> Problem  synth_88
Sketch conj111_term_sketch3 --> Problem  synth_45
Sketch conj62_sketch1 --> Problem  synth_28
Sketch conj57_term_sketch2 --> Problem  synth_16
Sketch conj240_term_sketch2 --> Problem  synth_9
Sketch conj143_sketch2 --> Problem  synth_92
Sketch conj173_term_sketch0 --> Problem  synth_25
Sketch conj229_sketch3 --> Problem  synth_127
Sketch conj111_term_sketch0 --> Problem  synth_44
Sketch conj126_sketch1 --> Problem  synth_76
Sketch conj205_sketch1 --> Problem  synth_112
Sketch conj127_sketch2 --> Problem  synth_71
Sketch conj205_sketch3 --> Problem  synth_117
Sketch conj198_term_sketch1 --> Problem  synth_20
Sketch conj111_sketch2 --> Problem  synth_44
Sketch conj54_term_sketch3 --> Problem  synth_20
Sketch conj128_term_sketch6 --> Problem  synth_20
Sketch conj123_term_sketch4 --> Problem  synth_45
Sketch conj60_term_sketch2 --> Problem  synth_19
Sketch conj62_sketch4 --> Problem  synth_38
Sketch conj240_sketch1 --> Problem  synth_10
Sketch conj125_term_sketch0 --> Problem  synth_52
Sketch conj166_sketch1 --> Problem  synth_18
Sketch conj165_sketch0 --> Problem  synth_102
Sketch conj118_sketch1 --> Problem  synth_58
Sketch conj114_term_sketch2 --> Problem  synth_20
Sketch conj240_sketch4 --> Problem  synth_139
Sketch conj59_sketch2 --> Problem  synth_29
Sketch conj205_term_sketch1 --> Problem  synth_93
Sketch conj128_sketch4 --> Problem  synth_85
Sketch conj121_term_sketch2 --> Problem  synth_7
Sketch conj174_sketch3 --> Problem  synth_106
Sketch conj238_term_sketch5 --> Problem  synth_68
Sketch conj176_term_sketch5 --> Problem  synth_20
Sketch conj60_term_sketch0 --> Problem  synth_34
Sketch conj205_sketch0 --> Problem  synth_1
Sketch conj144_term_sketch2 --> Problem  synth_34
Sketch conj229_term_sketch0 --> Problem  synth_89
Sketch conj126_term_sketch4 --> Problem  synth_45
Sketch conj53_sketch0 --> Problem  synth_2
Sketch conj69_sketch1 --> Problem  synth_43
Sketch conj142_sketch0 --> Problem  synth_88
Sketch conj62_sketch3 --> Problem  synth_37
Sketch conj230_term_sketch2 --> Problem  synth_20
Sketch conj43_term_sketch0 --> Problem  synth_9
Sketch conj126_sketch5 --> Problem  synth_81
Sketch conj45_sketch2 --> Problem  synth_12
Sketch conj118_sketch0 --> Problem  synth_44
Sketch conj208_sketch4 --> Problem  synth_124
Sketch conj175_term_sketch4 --> Problem  synth_11
Sketch conj165_term_sketch0 --> Problem  synth_89
Sketch conj122_term_sketch4 --> Problem  synth_45
Sketch conj122_term_sketch1 --> Problem  synth_57
Sketch conj124_sketch2 --> Problem  synth_65
Sketch conj61_sketch3 --> Problem  synth_36
Sketch conj166_sketch3 --> Problem  synth_4
Sketch conj230_term_sketch1 --> Problem  synth_4
Sketch conj125_sketch4 --> Problem  synth_78
Sketch conj124_term_sketch5 --> Problem  synth_45
Sketch conj37_term_sketch0 --> Problem  synth_2
Sketch conj240_sketch2 --> Problem  synth_133
Sketch conj206_term_sketch3 --> Problem  synth_45
Sketch conj198_sketch0 --> Problem  synth_112
Sketch conj229_term_sketch2 --> Problem  synth_4
Sketch conj176_sketch4 --> Problem  synth_110
Sketch conj128_term_sketch0 --> Problem  synth_75
Sketch conj114_sketch3 --> Problem  synth_55
Sketch conj113_term_sketch1 --> Problem  synth_53
Sketch conj59_sketch0 --> Problem  synth_3
Sketch conj58_sketch0 --> Problem  synth_3
Sketch conj198_sketch3 --> Problem  synth_1
Sketch conj144_sketch4 --> Problem  synth_100
Sketch conj63_term_sketch3 --> Problem  synth_16
Sketch conj63_sketch0 --> Problem  synth_2
Sketch conj208_term_sketch1 --> Problem  synth_75
Sketch conj144_term_sketch1 --> Problem  synth_9
Sketch conj121_term_sketch0 --> Problem  synth_52
Sketch conj63_sketch3 --> Problem  synth_39
Sketch conj111_sketch4 --> Problem  synth_50
Sketch conj59_term_sketch0 --> Problem  synth_31
Sketch conj207_term_sketch0 --> Problem  synth_98
Sketch conj117_term_sketch0 --> Problem  synth_52
Sketch conj117_sketch1 --> Problem  synth_44
Sketch conj127_sketch1 --> Problem  synth_44
Sketch conj64_sketch3 --> Problem  synth_39
Sketch conj124_sketch0 --> Problem  synth_3
Sketch conj43_term_sketch2 --> Problem  synth_11
Sketch conj229_term_sketch1 --> Problem  synth_53
Sketch conj205_term_sketch2 --> Problem  synth_7
Sketch conj111_sketch0 --> Problem  synth_10
Sketch conj57_term_sketch1 --> Problem  synth_7
Sketch conj206_term_sketch0 --> Problem  synth_96
Sketch conj175_term_sketch1 --> Problem  synth_98
Sketch conj61_term_sketch1 --> Problem  synth_2
Sketch conj54_term_sketch1 --> Problem  synth_18
Sketch conj230_term_sketch0 --> Problem  synth_91
Sketch conj37_term_sketch1 --> Problem  synth_4
Sketch conj45_term_sketch1 --> Problem  synth_6
Sketch conj127_term_sketch1 --> Problem  synth_71
Sketch conj142_term_sketch2 --> Problem  synth_7
Sketch conj206_sketch4 --> Problem  synth_1
Sketch conj165_term_sketch2 --> Problem  synth_15
Sketch conj64_sketch0 --> Problem  synth_2
Sketch conj114_term_sketch3 --> Problem  synth_45
Sketch conj174_sketch0 --> Problem  synth_104
Sketch conj124_term_sketch3 --> Problem  synth_11
Sketch conj174_sketch1 --> Problem  synth_6
Sketch conj173_sketch3 --> Problem  synth_105
Sketch conj49_sketch1 --> Problem  synth_14
Sketch conj47_sketch0 --> Problem  synth_10


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 10659 seconds

Problem: synth_63

Problem: synth_106

Problem: synth_91
 rev (lfappend (rev lf5) x)
 lfappend (rev x) (rev (rev lf5))
 lfappend (rev x) (lfappend lf5 Nil)
 lfappend (rev x) (rev lf5)
 rev (lfappend lf5 x)
 lfappend (rev x) lf5

Problem: synth_67

Problem: synth_77

Problem: synth_64
 lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil))
 lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (rev y) (lfappend lf6 (Cons n (rev lf8)))
 lfappend (rev y) (lfappend lf6 (Cons n lf8))
 lfappend (rev y) (lfappend lf6 (Cons n Nil))
 lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))

Problem: synth_11
 Nil

Problem: synth_129

Problem: synth_46

Problem: synth_101
 lfappend (lfappend (rev x) Nil) (Cons n Nil)
 rev (rev (lfappend (rev x) (Cons n Nil)))
 lfappend (lfappend (rev x) (Cons n Nil)) Nil
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_100

Problem: synth_59

Problem: synth_139
 Nil

Problem: synth_116

Problem: synth_31
 lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))
 lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (lfappend lf7 lf6) (Cons n Nil)
 lfappend lf7 (lfappend lf6 (Cons n Nil))
 lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))

Problem: synth_8
 Nil

Problem: synth_34
 lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)
 lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))
 lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))
 lfappend (lfappend lf7 (rev x)) (Cons n Nil)
 lfappend lf7 (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)

Problem: synth_58

Problem: synth_53
 lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil
 lfappend (rev y) (lfappend lf6 (rev (rev lf5)))
 lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))
 lfappend (rev y) (rev (lfappend lf5 (rev lf6)))
 lfappend (rev y) (lfappend lf6 (rev lf5))
 lfappend (rev y) (lfappend lf6 lf5)

Problem: synth_123
 Nil

Problem: synth_125

Problem: synth_2
 lfappend (rev (rev lf7)) lf3
 lfappend (lfappend lf7 Nil) lf3
 lfappend (lfappend lf7 lf3) Nil
 lfappend lf7 (rev (rev lf3))
 lfappend lf7 (lfappend lf3 Nil)
 lfappend lf7 lf3

Problem: synth_95

Problem: synth_130

Problem: synth_127

Problem: synth_72
 Nil

Problem: synth_111

Problem: synth_56
 lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))
 lfappend (rev y) (lfappend (rev x) (rev lf5))
 lfappend (rev y) (rev (lfappend lf5 x))
 lfappend (rev y) (lfappend (rev x) lf5)
 rev (lfappend (rev lf5) (lfappend x y))
 rev (lfappend lf5 (lfappend x y))

Problem: synth_135

Problem: synth_105

Problem: synth_65

Problem: synth_23

Problem: synth_140

Problem: synth_88

Problem: synth_19
 lfappend (rev (rev lf7)) (rev x)
 lfappend (lfappend lf7 Nil) (rev x)
 rev (rev (lfappend lf7 (rev x)))
 lfappend (lfappend lf7 (rev x)) Nil
 rev (lfappend x (rev lf7))
 lfappend lf7 (rev x)

Problem: synth_131

Problem: synth_132

Problem: synth_24

Problem: synth_97
 Nil

Problem: synth_48

Problem: synth_28
 lfappend (lfappend lf7 (rev x)) (Cons n lf8)
 lfappend (lfappend lf7 (rev x)) (Cons n Nil)
 lfappend lf7 (lfappend (rev x) (Cons n (rev lf8)))
 lfappend lf7 (lfappend (rev x) (Cons n lf8))
 lfappend lf7 (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)

Problem: synth_45
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_26

Problem: synth_70

Problem: synth_122

Problem: synth_15
 lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))
 lfappend lf7 (rev (lfappend lf5 (rev lf6)))
 lfappend (lfappend lf7 lf6) (rev lf5)
 lfappend (lfappend lf7 lf6) lf5
 lfappend lf7 (lfappend lf6 (rev lf5))
 lfappend lf7 (lfappend lf6 lf5)

Problem: synth_14

Problem: synth_83

Problem: synth_12

Problem: synth_85

Problem: synth_62

Problem: synth_50
 Nil

Problem: synth_119

Problem: synth_7
 lfappend lf8 (Cons n Nil)
 lfappend (rev (rev lf8)) (Cons n Nil)
 lfappend (rev lf8) (Cons n Nil)
 Cons n (rev lf8)
 Cons n lf8
 Cons n Nil

Problem: synth_128

Problem: synth_61

Problem: synth_141

Problem: synth_27

Problem: synth_136

Problem: synth_33

Problem: synth_47

Problem: synth_3
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_121
 Nil

Problem: synth_124

Problem: synth_99
 Nil

Problem: synth_43

Problem: synth_109
 Nil

Problem: synth_68
 lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8))
 lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil))
 lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8)))
 lfappend (rev y) (lfappend (rev x) (Cons n lf8))
 lfappend (rev y) (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_96
 rev (lfappend lf8 (Cons n x))
 lfappend (rev (lfappend x lf8)) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 lfappend (rev x) (Cons n (rev lf8))
 lfappend (rev x) (Cons n lf8)
 lfappend (rev x) (Cons n Nil)

Problem: synth_54

Problem: synth_39

Problem: synth_98
 lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)
 lfappend (lfappend lf6 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_118

Problem: synth_66

Problem: synth_57
 lfappend (rev y) (rev (lfappend x Nil))
 lfappend (rev y) (lfappend (rev x) Nil)
 rev (lfappend x (rev (rev y)))
 rev (lfappend x (lfappend y Nil))
 lfappend (rev y) (rev x)
 rev (lfappend x y)

Problem: synth_5

Problem: synth_37

Problem: synth_22

Problem: synth_18
 lfappend lf7 (rev (lfappend lf5 x))
 lfappend lf7 (lfappend (rev x) lf5)
 lfappend (lfappend lf7 (rev x)) (rev lf5)
 rev (lfappend (rev lf5) (lfappend x (rev lf7)))
 rev (lfappend lf5 (lfappend x (rev lf7)))
 lfappend (lfappend lf7 (rev x)) lf5

Problem: synth_114

Problem: synth_21

Problem: synth_41
 Nil

Problem: synth_49

Problem: synth_75
 lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))
 lfappend (lfappend (rev y) (rev x)) (Cons n Nil)
 lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)
 lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)
 lfappend (rev y) (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_25
 lfappend (lfappend lf7 lf6) (Cons n lf8)
 lfappend (lfappend lf7 lf6) (Cons n Nil)
 lfappend lf7 (lfappend lf6 (Cons n (rev lf8)))
 lfappend lf7 (lfappend lf6 (Cons n lf8))
 lfappend lf7 (lfappend lf6 (Cons n Nil))
 lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))

Problem: synth_13
 Nil

Problem: synth_6
 lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)
 rev (lfappend lf8 (Cons n (rev lf4)))
 lfappend lf4 (Cons n (rev lf8))
 lfappend lf4 (Cons n lf8)
 lfappend lf4 (Cons n Nil)
 lfappend (rev (rev lf4)) (Cons n Nil)

Problem: synth_138

Problem: synth_4
 lfappend (lfappend lf4 lf5) Nil
 lfappend lf4 (rev (rev lf5))
 lfappend lf4 (lfappend lf5 Nil)
 rev (lfappend lf5 (rev lf4))
 lfappend lf4 (rev lf5)
 lfappend lf4 lf5

Problem: synth_38

Problem: synth_104

Problem: synth_102

Problem: synth_113

Problem: synth_10
 lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)
 lfappend (lfappend lf4 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil
 lfappend (lfappend lf4 Nil) (Cons n Nil)
 lfappend lf4 (Cons n Nil)
 lfappend (rev (rev lf4)) (Cons n Nil)

Problem: synth_92

Problem: synth_32
 Nil

Problem: synth_51

Problem: synth_112

Problem: synth_35

Problem: synth_115

Problem: synth_134

Problem: synth_110
 Nil

Problem: synth_90

Problem: synth_73

Problem: synth_17

Problem: synth_29

Problem: synth_76

Problem: synth_117

Problem: synth_9
 Cons n Nil

Problem: synth_30
 Nil

Problem: synth_81

Problem: synth_1
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_137
 Nil

Problem: synth_69
 Nil

Problem: synth_86
 Nil

Problem: synth_55

Problem: synth_107

Problem: synth_71
 lfappend (lfappend (rev y) lf6) (Cons n Nil)
 lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)
 lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)
 lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)
 lfappend (rev y) (lfappend lf6 (Cons n Nil))
 lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))

Problem: synth_120

Problem: synth_103

Problem: synth_87

Problem: synth_79

Problem: synth_126

Problem: synth_74

Problem: synth_84
 Nil

Problem: synth_20
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_94

Problem: synth_108

Problem: synth_133

Problem: synth_42

Problem: synth_16
 lfappend (rev (rev lf7)) lf6
 lfappend (lfappend lf7 Nil) lf6
 lfappend (lfappend lf7 lf6) Nil
 lfappend lf7 (rev (rev lf6))
 lfappend lf7 (lfappend lf6 Nil)
 lfappend lf7 lf6

Problem: synth_93
 lfappend (rev (lfappend lf8 (rev lf6))) (Cons n Nil)
 rev (lfappend lf8 (Cons n (rev lf6)))
 lfappend lf6 (Cons n (rev lf8))
 lfappend lf6 (Cons n lf8)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_40
 Nil

Problem: synth_80

Problem: synth_89
 lfappend (lfappend lf6 lf5) Nil
 lfappend lf6 (rev (rev lf5))
 lfappend lf6 (lfappend lf5 Nil)
 rev (lfappend lf5 (rev lf6))
 lfappend lf6 (rev lf5)
 lfappend lf6 lf5

Problem: synth_52
 rev (lfappend (rev lf6) (rev (rev y)))
 rev (lfappend (rev lf6) (lfappend y Nil))
 rev (lfappend (rev lf6) y)
 lfappend (rev y) (rev (rev lf6))
 lfappend (rev y) (lfappend lf6 Nil)
 lfappend (rev y) lf6

Problem: synth_44
 rev (lfappend (rev lf3) (rev (rev y)))
 rev (lfappend (rev lf3) (lfappend y Nil))
 rev (lfappend (rev lf3) y)
 lfappend (rev y) (rev (rev lf3))
 lfappend (rev y) (lfappend lf3 Nil)
 lfappend (rev y) lf3

Problem: synth_60

Problem: synth_36

Problem: synth_82

Problem: synth_78

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 10661 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_3: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_4: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_5: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_6: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_7: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_8: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_9: forall (lf7 : lst) (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_10: forall (lf7 : lst) (n : natural) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_11: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_12: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_13: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_14: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_15: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_20: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_21: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_22: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_23: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_24: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_25: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_26: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_27: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_28: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_29: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_30: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_31: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_32: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_33: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_34: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_35: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_36: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_37: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_38: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_39: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_40: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_41: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_42: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_43: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_44: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_45: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_46: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_47: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_48: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_49: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_50: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_51: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_52: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_53: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_54: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_55: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_56: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_57: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_58: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_59: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_60: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_61: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_62: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_63: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_64: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_65: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_66: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_67: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_68: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_69: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_70: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_71: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_72: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_73: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_74: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_75: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_76: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_77: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_78: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_79: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_80: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_81: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_82: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_83: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_84: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_85: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_86: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_87: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_88: forall (n : natural) (lf4 : lst) (lf2 : lst), @eq lst (lfappend lf4 (Cons n (Nil))) lf2.
Lemma candidate_89: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_90: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_91: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_92: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_93: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_94: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_95: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_96: @eq lst Nil (Nil).
Lemma candidate_97: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_98: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_99: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_100: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_101: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_102: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_103: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_104: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_105: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_106: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_107: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_108: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_109: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_110: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_111: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_112: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_113: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_114: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_115: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_116: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_117: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_118: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_119: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_120: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_121: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_122: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_123: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_124: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_125: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_126: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_127: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_128: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_129: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_130: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_131: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_132: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_133: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_134: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_135: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_136: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_137: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_138: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_139: forall (lf3 : lst) (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n (Nil))) (lfappend lf7 lf3).
Lemma candidate_140: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_141: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_142: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_143: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_144: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_145: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_146: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_147: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_148: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_149: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_150: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_151: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_152: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_153: @eq lst Nil (Nil).
Lemma candidate_154: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_155: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_156: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_157: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_158: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_159: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_160: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_161: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_162: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend (lfappend lf7 lf6) (rev lf5)).
Lemma candidate_163: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_164: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (rev lf5))).
Lemma candidate_165: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_166: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_167: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_168: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_169: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_170: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_171: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 lf6).
Lemma candidate_172: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_173: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_174: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_175: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_176: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_177: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_178: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (rev (lfappend lf5 x))).
Lemma candidate_179: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_180: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend (lfappend lf7 (rev x)) (rev lf5)).
Lemma candidate_181: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_182: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend lf5 (lfappend x (rev lf7)))).
Lemma candidate_183: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_184: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_185: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_186: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_187: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_188: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_189: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend lf7 (rev x)).
Lemma candidate_190: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_191: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_192: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_193: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_194: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_195: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_196: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_197: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_198: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_199: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_200: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_201: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_202: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_203: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_204: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend (lfappend lf7 lf6) (rev lf5)).
Lemma candidate_205: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_206: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (rev lf5))).
Lemma candidate_207: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_208: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_209: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_210: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend (lfappend lf7 lf6) (rev lf5)).
Lemma candidate_211: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_212: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (rev lf5))).
Lemma candidate_213: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_214: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_215: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_216: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_217: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_218: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_219: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_220: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_221: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_222: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_223: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_224: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_225: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 lf6).
Lemma candidate_226: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (rev (lfappend lf5 x))).
Lemma candidate_227: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_228: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend (lfappend lf7 (rev x)) (rev lf5)).
Lemma candidate_229: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_230: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend lf5 (lfappend x (rev lf7)))).
Lemma candidate_231: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_232: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_233: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_234: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_235: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_236: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_237: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_238: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_239: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_240: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_241: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_242: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_243: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_244: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (rev (lfappend lf5 x))).
Lemma candidate_245: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_246: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend (lfappend lf7 (rev x)) (rev lf5)).
Lemma candidate_247: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_248: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend lf5 (lfappend x (rev lf7)))).
Lemma candidate_249: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_250: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_251: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_252: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_253: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_254: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_255: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend lf7 (rev x)).
Lemma candidate_256: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_257: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_258: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_259: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_260: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_261: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_262: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_263: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_264: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_265: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_266: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_267: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_268: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_269: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_270: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_271: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_272: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_273: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_274: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_275: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_276: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_277: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_278: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_279: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_280: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_281: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_282: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_283: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_284: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_285: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 lf6).
Lemma candidate_286: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_287: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_288: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_289: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_290: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_291: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_292: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_293: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_294: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_295: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_296: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_297: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_298: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_299: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_300: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_301: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_302: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_303: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend lf7 (rev x)).
Lemma candidate_304: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_305: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_306: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_307: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_308: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_309: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_310: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_311: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_312: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_313: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_314: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_315: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_316: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_317: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_318: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_319: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_320: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_321: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_322: forall (n : natural) (lf7 : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n (Nil))) lf2.
Lemma candidate_323: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_324: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_325: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_326: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_327: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_328: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_329: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_330: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_331: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_332: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_333: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_334: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_335: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 lf6).
Lemma candidate_336: @eq lst Nil (Nil).
Lemma candidate_337: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_338: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_339: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_340: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_341: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_342: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_343: forall (n : natural) (lf7 : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n (Nil))) lf2.
Lemma candidate_344: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_345: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_346: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_347: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_348: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_349: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_350: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_351: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_352: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_353: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_354: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_355: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_356: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend lf7 (rev x)).
Lemma candidate_357: @eq lst Nil (Nil).
Lemma candidate_358: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_359: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_360: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_361: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_362: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_363: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_364: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_365: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_366: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_367: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_368: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_369: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_370: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_371: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_372: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_373: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_374: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_375: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_376: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_377: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_378: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_379: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_380: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_381: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_382: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_383: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_384: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_385: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_386: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_387: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_388: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_389: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_390: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_391: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_392: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_393: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_394: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_395: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_396: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_397: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_398: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_399: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 lf6).
Lemma candidate_400: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_401: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_402: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_403: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_404: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_405: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_406: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_407: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_408: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_409: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_410: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_411: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_412: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_413: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_414: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_415: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_416: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_417: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_418: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_419: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_420: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_421: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_422: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_423: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_424: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_425: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_426: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_427: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_428: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_429: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend lf7 (rev x)).
Lemma candidate_430: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_431: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_432: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_433: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_434: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_435: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_436: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_437: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_438: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_439: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_440: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_441: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_442: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_443: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_444: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_445: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_446: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_447: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_448: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_449: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_450: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_451: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_452: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_453: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_454: forall (lf3 : lst) (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n (Nil))) (lfappend lf7 lf3).
Lemma candidate_455: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_456: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_457: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_458: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_459: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_460: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_461: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_462: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_463: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_464: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_465: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_466: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_467: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_468: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_469: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_470: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_471: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_472: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_473: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 lf6).
Lemma candidate_474: @eq lst Nil (Nil).
Lemma candidate_475: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_476: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_477: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_478: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_479: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_480: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_481: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_482: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_483: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_484: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_485: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_486: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_487: forall (lf3 : lst) (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n (Nil))) (lfappend lf7 lf3).
Lemma candidate_488: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_489: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_490: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_491: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_492: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_493: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_494: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_495: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_496: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_497: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_498: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_499: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 lf3).
Lemma candidate_500: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_501: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_502: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_503: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_504: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_505: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_506: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend lf7 (rev x)).
Lemma candidate_507: @eq lst Nil (Nil).
Lemma candidate_508: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_509: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_510: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_511: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_512: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_513: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_514: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_515: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_516: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_517: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_518: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_519: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_520: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_521: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_522: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_523: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_524: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_525: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_526: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_527: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_528: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_529: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_530: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_531: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_532: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_533: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_534: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_535: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_536: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_537: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_538: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_539: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_540: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_541: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_542: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_543: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_544: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_545: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_546: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_547: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_548: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_549: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_550: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_551: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_552: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_553: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_554: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_555: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_556: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_557: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_558: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_559: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_560: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_561: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_562: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_563: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_564: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_565: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_566: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_567: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_568: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_569: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_570: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_571: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_572: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_573: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_574: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_575: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_576: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_577: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_578: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_579: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_580: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_581: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_582: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_583: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_584: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_585: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_586: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_587: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_588: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_589: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_590: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_591: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_592: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_593: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_594: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_595: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_596: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_597: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_598: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_599: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_600: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_601: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_602: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_603: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_604: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_605: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_606: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_607: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_608: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_609: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_610: forall (lf3 : lst) (n : natural) (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (Cons n (Nil))) (lfappend (rev y) lf3).
Lemma candidate_611: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_612: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_613: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_614: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_615: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_616: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_617: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_618: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_619: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_620: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_621: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_622: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_623: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_624: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_625: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_626: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_627: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_628: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_629: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_630: @eq lst Nil (Nil).
Lemma candidate_631: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_632: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_633: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_634: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_635: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_636: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_637: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_638: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_639: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_640: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_641: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_642: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) lf6).
Lemma candidate_643: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_644: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_645: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_646: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_647: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev lf5))).
Lemma candidate_648: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_649: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_650: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_651: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_652: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_653: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_654: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_655: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_656: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_657: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_658: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_659: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_660: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_661: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_662: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (rev lf5))).
Lemma candidate_663: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (rev (lfappend lf5 x))).
Lemma candidate_664: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_665: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_666: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend lf5 (lfappend x y))).
Lemma candidate_667: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_668: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_669: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_670: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_671: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev x)).
Lemma candidate_672: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x y)).
Lemma candidate_673: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_674: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_675: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_676: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_677: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_678: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_679: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_680: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_681: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_682: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_683: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_684: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_685: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_686: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_687: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_688: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_689: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_690: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_691: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_692: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_693: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_694: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_695: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev lf5))).
Lemma candidate_696: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_697: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_698: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_699: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_700: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_701: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_702: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) lf6).
Lemma candidate_703: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_704: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_705: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_706: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_707: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev lf5))).
Lemma candidate_708: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_709: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_710: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_711: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_712: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_713: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_714: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_715: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_716: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_717: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_718: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_719: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_720: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_721: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_722: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_723: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_724: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_725: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_726: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_727: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_728: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (rev lf5))).
Lemma candidate_729: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (rev (lfappend lf5 x))).
Lemma candidate_730: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_731: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_732: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend lf5 (lfappend x y))).
Lemma candidate_733: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_734: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (rev lf5))).
Lemma candidate_735: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (rev (lfappend lf5 x))).
Lemma candidate_736: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_737: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_738: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend lf5 (lfappend x y))).
Lemma candidate_739: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_740: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_741: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_742: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_743: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev x)).
Lemma candidate_744: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x y)).
Lemma candidate_745: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_746: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_747: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_748: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_749: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_750: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_751: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_752: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_753: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_754: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_755: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_756: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_757: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_758: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_759: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_760: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_761: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_762: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_763: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_764: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_765: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_766: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_767: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_768: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_769: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_770: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_771: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_772: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_773: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_774: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) lf6).
Lemma candidate_775: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil))).
Lemma candidate_776: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_777: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_778: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_779: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_780: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_781: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_782: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_783: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_784: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_785: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_786: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_787: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_788: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_789: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_790: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_791: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_792: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_793: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_794: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_795: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_796: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_797: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_798: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_799: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_800: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_801: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_802: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_803: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_804: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_805: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_806: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_807: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_808: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_809: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev x)).
Lemma candidate_810: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x y)).
Lemma candidate_811: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_812: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_813: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_814: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_815: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_816: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_817: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_818: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_819: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_820: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_821: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_822: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_823: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_824: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_825: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_826: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_827: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_828: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_829: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_830: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_831: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_832: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_833: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_834: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_835: forall (n : natural) (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n (Nil))) lf2.
Lemma candidate_836: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_837: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_838: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_839: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_840: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_841: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) lf6).
Lemma candidate_842: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_843: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_844: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_845: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_846: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_847: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_848: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_849: @eq lst Nil (Nil).
Lemma candidate_850: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_851: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_852: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_853: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_854: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_855: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_856: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_857: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_858: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_859: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_860: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_861: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_862: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n (Nil))) lf2.
Lemma candidate_863: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_864: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_865: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_866: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_867: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_868: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_869: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_870: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_871: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_872: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_873: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev x)).
Lemma candidate_874: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x y)).
Lemma candidate_875: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_876: @eq lst Nil (Nil).
Lemma candidate_877: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_878: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_879: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_880: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_881: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_882: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_883: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_884: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_885: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_886: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_887: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_888: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_889: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_890: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_891: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_892: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_893: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_894: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_895: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil))).
Lemma candidate_896: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_897: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_898: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_899: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_900: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_901: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_902: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_903: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_904: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_905: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_906: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) lf6).
Lemma candidate_907: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil))).
Lemma candidate_908: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_909: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_910: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_911: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_912: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_913: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_914: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_915: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_916: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_917: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_918: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_919: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_920: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_921: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_922: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_923: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_924: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_925: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_926: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_927: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_928: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_929: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_930: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_931: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_932: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_933: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_934: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_935: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_936: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_937: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_938: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_939: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_940: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_941: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_942: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_943: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_944: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_945: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_946: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_947: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_948: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_949: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_950: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_951: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_952: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_953: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev x)).
Lemma candidate_954: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x y)).
Lemma candidate_955: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_956: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_957: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_958: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_959: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_960: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_961: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_962: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_963: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_964: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_965: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_966: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_967: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_968: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_969: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_970: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_971: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_972: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_973: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_974: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_975: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_976: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_977: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_978: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_979: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_980: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_981: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_982: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_983: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_984: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_985: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_986: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_987: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_988: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_989: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_990: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_991: forall (lf3 : lst) (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n (Nil)))   (lfappend (rev y) lf3).
Lemma candidate_992: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_993: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_994: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_995: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_996: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_997: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) lf6).
Lemma candidate_998: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_999: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1000: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1001: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1002: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1003: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1004: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_1005: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_1006: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_1007: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_1008: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_1009: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_1010: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1011: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1012: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1013: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1014: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1015: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1016: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1017: @eq lst Nil (Nil).
Lemma candidate_1018: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_1019: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_1020: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_1021: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_1022: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_1023: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_1024: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_1025: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1026: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1027: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1028: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1029: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1030: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n (Nil)))   (lfappend (rev y) lf3).
Lemma candidate_1031: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_1032: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1033: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1034: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1035: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1036: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1037: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_1038: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1039: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1040: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_1041: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (rev x)).
Lemma candidate_1042: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x y)).
Lemma candidate_1043: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_1044: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_1045: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_1046: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_1047: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_1048: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) lf3).
Lemma candidate_1049: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1050: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1051: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1052: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1053: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1054: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1055: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1056: @eq lst Nil (Nil).
Lemma candidate_1057: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1058: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1059: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1060: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1061: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1062: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1063: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1064: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1065: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1066: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1067: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1068: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1069: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_1070: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_1071: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_1072: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_1073: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_1074: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_1075: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1076: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_1077: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend (lfappend lf7 lf6) (rev lf5)).
Lemma candidate_1078: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_1079: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (lfappend lf6 (rev lf5))).
Lemma candidate_1080: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1081: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1082: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1083: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1084: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1085: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1086: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1087: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_1088: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_1089: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_1090: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1091: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1092: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1093: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1094: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1095: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1096: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1097: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1098: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1099: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend lf7 (rev (lfappend lf5 x))).
Lemma candidate_1100: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1101: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend (lfappend lf7 (rev x)) (rev lf5)).
Lemma candidate_1102: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_1103: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (rev (lfappend lf5 (lfappend x (rev lf7)))).
Lemma candidate_1104: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_1105: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1106: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1107: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1108: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1109: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1110: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1111: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_1112: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_1113: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1114: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1115: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1116: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1117: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1118: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf6)))).
Lemma candidate_1119: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n (rev lf8))).
Lemma candidate_1120: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n lf8)).
Lemma candidate_1121: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1122: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1123: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1124: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1125: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1126: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1127: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1128: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1129: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1130: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1131: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1132: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1133: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1134: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1135: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (rev (lfappend lf8 (Cons n x))).
Lemma candidate_1136: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x lf8)) (Cons n Nil)).
Lemma candidate_1137: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1138: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1139: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1140: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1141: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_1142: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1143: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_1144: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1145: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1146: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_1147: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1148: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1149: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1150: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1151: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1152: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1153: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1154: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1155: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1156: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1157: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1158: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1159: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1160: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1161: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1162: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1163: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1164: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1165: forall (n : natural) (lf7 : lst) (lf1 : lst) (lf6 : lst), @eq lst lf1 (lfappend lf7 (lfappend lf6 (Cons n (Nil)))).
Lemma candidate_1166: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1167: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1168: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1169: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_1170: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1171: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1172: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1173: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_1174: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1175: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_1176: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1177: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1178: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1179: @eq lst Nil (Nil).
Lemma candidate_1180: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1181: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1182: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1183: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1184: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1185: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1186: forall (n : natural) (lf7 : lst) (lf1 : lst) (x : lst), @eq lst lf1 (lfappend lf7 (lfappend (rev x) (Cons n (Nil)))).
Lemma candidate_1187: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_1188: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1189: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_1190: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1191: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1192: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1193: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1194: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1195: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1196: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1197: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1198: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1199: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_1200: @eq lst Nil (Nil).
Lemma candidate_1201: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1202: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1203: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1204: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1205: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1206: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1207: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil)))   (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1208: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (rev (lfappend lf5 (rev lf6))))   (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1209: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (rev lf5))   (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1210: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1211: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (rev lf5)))   (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1212: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1213: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1214: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1215: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1216: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1217: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1218: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1219: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_1220: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_1221: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_1222: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_1223: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_1224: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_1225: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1226: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1227: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1228: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1229: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1230: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1231: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1232: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_1233: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend (lfappend lf7 lf6) (rev lf5)).
Lemma candidate_1234: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_1235: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (lfappend lf6 (rev lf5))).
Lemma candidate_1236: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1237: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (rev (lfappend lf5 x)))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1238: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1239: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (rev lf5))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1240: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend x (rev lf7))))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1241: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 (lfappend x (rev lf7))))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1242: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1243: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1244: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1245: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1246: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1247: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1248: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1249: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_1250: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_1251: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_1252: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1253: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1254: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1255: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1256: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1257: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1258: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1259: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1260: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1261: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1262: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1263: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1264: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1265: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1266: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1267: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend lf7 (rev (lfappend lf5 x))).
Lemma candidate_1268: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1269: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend (lfappend lf7 (rev x)) (rev lf5)).
Lemma candidate_1270: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_1271: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (rev (lfappend lf5 (lfappend x (rev lf7)))).
Lemma candidate_1272: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_1273: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1274: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1275: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1276: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1277: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1278: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1279: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1280: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1281: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n (rev lf8))))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1282: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1283: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1284: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1285: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_1286: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_1287: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1288: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1289: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1290: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1291: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1292: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1293: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1294: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1295: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1296: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1297: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1298: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf6)))).
Lemma candidate_1299: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n (rev lf8))).
Lemma candidate_1300: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n lf8)).
Lemma candidate_1301: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1302: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1303: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1304: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1305: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1306: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1307: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1308: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1309: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1310: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1311: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1312: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1313: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1314: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1315: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1316: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1317: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n (rev lf8))))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1318: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1319: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1320: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1321: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (rev (lfappend lf8 (Cons n x))).
Lemma candidate_1322: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x lf8)) (Cons n Nil)).
Lemma candidate_1323: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1324: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1325: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1326: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1327: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_1328: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1329: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_1330: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1331: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1332: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_1333: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1334: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1335: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1336: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1337: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1338: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1339: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1340: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1341: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1342: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1343: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1344: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1345: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1346: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1347: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1348: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1349: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1350: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1351: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1352: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1353: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1354: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1355: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1356: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1357: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1358: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1359: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1360: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1361: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1362: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1363: forall (lf7 : lst) (n : natural) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (Cons n (Nil)))   (lfappend lf7 (lfappend lf6 (Cons n (Nil)))).
Lemma candidate_1364: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1365: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1366: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1367: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_1368: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1369: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1370: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1371: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_1372: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1373: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_1374: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1375: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1376: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1377: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1378: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1379: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1380: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1381: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1382: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1383: @eq lst Nil (Nil).
Lemma candidate_1384: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1385: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1386: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1387: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1388: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1389: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1390: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1391: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1392: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1393: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1394: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1395: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1396: forall (lf7 : lst) (n : natural) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n (Nil)))).
Lemma candidate_1397: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_1398: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1399: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_1400: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1401: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1402: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1403: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1404: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1405: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1406: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1407: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1408: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1409: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_1410: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1411: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1412: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1413: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1414: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1415: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1416: @eq lst Nil (Nil).
Lemma candidate_1417: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1418: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1419: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1420: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1421: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1422: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1423: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1424: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1425: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1426: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1427: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1428: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1429: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_1430: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_1431: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_1432: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_1433: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_1434: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_1435: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_1436: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_1437: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1438: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_1439: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (rev lf5))).
Lemma candidate_1440: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1441: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1442: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1443: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1444: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1445: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1446: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1447: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1448: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1449: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1450: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1451: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1452: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1453: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_1454: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_1455: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_1456: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1457: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1458: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1459: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1460: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1461: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1462: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1463: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1464: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1465: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1466: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1467: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1468: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1469: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1470: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1471: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_1472: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) (rev lf5))).
Lemma candidate_1473: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (rev (lfappend lf5 x))).
Lemma candidate_1474: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1475: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_1476: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (rev (lfappend lf5 (lfappend x y))).
Lemma candidate_1477: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1478: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1479: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1480: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1481: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1482: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1483: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1484: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1485: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1486: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1487: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1488: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1489: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1490: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf6)))).
Lemma candidate_1491: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n (rev lf8))).
Lemma candidate_1492: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n lf8)).
Lemma candidate_1493: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1494: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1495: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1496: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1497: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1498: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1499: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1500: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1501: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1502: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1503: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1504: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1505: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1506: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1507: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1508: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1509: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1510: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1511: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1512: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1513: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (rev (lfappend lf8 (Cons n x))).
Lemma candidate_1514: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x lf8)) (Cons n Nil)).
Lemma candidate_1515: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1516: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1517: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1518: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1519: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1520: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1521: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1522: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1523: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1524: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1525: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1526: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1527: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1528: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1529: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1530: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1531: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1532: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1533: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1534: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1535: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1536: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1537: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1538: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1539: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_1540: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1541: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1542: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1543: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1544: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1545: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1546: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1547: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1548: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1549: forall (n : natural) (y : lst) (lf1 : lst) (lf6 : lst), @eq lst lf1 (lfappend (rev y) (lfappend lf6 (Cons n (Nil)))).
Lemma candidate_1550: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1551: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_1552: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1553: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_1554: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1555: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1556: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1557: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_1558: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1559: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1560: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1561: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1562: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1563: @eq lst Nil (Nil).
Lemma candidate_1564: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1565: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1566: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1567: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1568: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1569: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1570: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_1571: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_1572: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_1573: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_1574: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1575: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_1576: forall (n : natural) (y : lst) (lf1 : lst) (x : lst), @eq lst lf1 (lfappend (rev y) (lfappend (rev x) (Cons n (Nil)))).
Lemma candidate_1577: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_1578: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1579: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_1580: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1581: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1582: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1583: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_1584: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1585: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1586: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1587: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1588: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1589: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1590: @eq lst Nil (Nil).
Lemma candidate_1591: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1592: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1593: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1594: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1595: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1596: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1597: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1598: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1599: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1600: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1601: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1602: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1603: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1604: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1605: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1606: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1607: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1608: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1609: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1610: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (rev (rev lf5))))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1611: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil)))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1612: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (rev (lfappend lf5 (rev lf6))))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1613: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (rev lf5)))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1614: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1615: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_1616: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_1617: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_1618: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (rev (lfappend lf5 (rev lf6))).
Lemma candidate_1619: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev lf5)).
Lemma candidate_1620: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 lf5).
Lemma candidate_1621: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_1622: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_1623: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1624: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (rev (lfappend lf5 (rev lf6)))).
Lemma candidate_1625: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (rev lf5))).
Lemma candidate_1626: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1627: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1628: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1629: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1630: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1631: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1632: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1633: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1634: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1635: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1636: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1637: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1638: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1639: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1640: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (rev lf5)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1641: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (rev (lfappend lf5 x)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1642: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1643: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend x y)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1644: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 (lfappend x y)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1645: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1646: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1647: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1648: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1649: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1650: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1651: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_1652: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_1653: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_1654: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1655: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1656: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1657: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_1658: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_1659: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_1660: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_1661: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev lf5)).
Lemma candidate_1662: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 lf5).
Lemma candidate_1663: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1664: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1665: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1666: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1667: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1668: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1669: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1670: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1671: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1672: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1673: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1674: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1675: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_1676: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) (rev lf5))).
Lemma candidate_1677: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (rev (lfappend lf5 x))).
Lemma candidate_1678: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1679: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_1680: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (rev (lfappend lf5 (lfappend x y))).
Lemma candidate_1681: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1682: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1683: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1684: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1685: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1686: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1687: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1688: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst   (lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1689: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n (rev lf8))))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1690: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1691: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1692: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1693: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1694: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1695: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1696: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1697: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1698: forall (n : natural) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n lf8)))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1699: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1700: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1701: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1702: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1703: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1704: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1705: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1706: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf6)))).
Lemma candidate_1707: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n (rev lf8))).
Lemma candidate_1708: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n lf8)).
Lemma candidate_1709: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1710: forall (n : natural) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf8)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1711: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1712: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1713: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1714: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1715: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1716: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1717: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1718: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1719: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1720: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1721: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1722: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1723: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1724: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1725: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8))))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1726: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1727: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1728: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1729: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1730: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1731: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1732: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1733: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1734: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1735: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (rev (lfappend lf8 (Cons n x))).
Lemma candidate_1736: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x lf8)) (Cons n Nil)).
Lemma candidate_1737: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1738: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1739: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1740: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1741: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev (lfappend lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1742: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (rev (lfappend lf8 (Cons n (rev lf4)))).
Lemma candidate_1743: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n (rev lf8))).
Lemma candidate_1744: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n lf8)).
Lemma candidate_1745: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1746: forall (n : natural) (lf4 : lst) (lf8 : lst), @eq lst (lfappend lf4 (Cons n lf8)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1747: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend lf8 (Cons n Nil)).
Lemma candidate_1748: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1749: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1750: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1751: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1752: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1753: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1754: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1755: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1756: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1757: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1758: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1759: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1760: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1761: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1762: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1763: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1764: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1765: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1766: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf8 (rev y)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1767: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_1768: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1769: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1770: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1771: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1772: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1773: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1774: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1775: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1776: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1777: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1778: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1779: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1780: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1781: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1782: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1783: forall (n : natural) (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf4 (Cons n (Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n (Nil)))).
Lemma candidate_1784: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1785: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_1786: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1787: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_1788: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_1789: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1790: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1791: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_1792: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1793: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1794: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1795: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1796: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1797: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1798: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1799: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1800: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1801: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1802: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1803: @eq lst Nil (Nil).
Lemma candidate_1804: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1805: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1806: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1807: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1808: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1809: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1810: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1811: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1812: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1813: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1814: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1815: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1816: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1817: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1818: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1819: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1820: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1821: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1822: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend lf4 (Cons n (Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n (Nil)))).
Lemma candidate_1823: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_1824: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1825: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_1826: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1827: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1828: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1829: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_1830: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1831: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1832: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1833: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1834: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1835: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1836: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1837: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1838: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1839: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1840: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_1841: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1842: @eq lst Nil (Nil).
Lemma candidate_1843: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1844: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_1845: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1846: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1847: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1848: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1849: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_1850: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_1851: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1852: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_1853: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_1854: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 12144 seconds
Duplicates removed: 1505
Filtered by Quickchick: 132
Filtered by script: 50
Remaining: 167

Lemmas: 
Lemma candidate_31: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_32: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_20: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_528: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_192: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_530: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_194: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_29: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_28: forall (lf2 : lst), @eq lst (rev (lfappend (rev lf2) Nil)) lf2.
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (lfappend (rev (rev lf1)) Nil).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (lfappend (rev lf1) Nil)).
Lemma candidate_30: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_527: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_526: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_191: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_190: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_1070: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (rev (rev lf5))).
Lemma candidate_169: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (rev (rev lf6))).
Lemma candidate_166: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (rev (rev lf7)) lf6).
Lemma candidate_49: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (rev (rev lf3))) (lfappend lf7 lf3).
Lemma candidate_46: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (rev (rev lf7)) lf3) (lfappend lf7 lf3).
Lemma candidate_35: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (rev (rev lf5))).
Lemma candidate_25: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (rev (rev lf3))).
Lemma candidate_22: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (rev (rev lf7)) lf3).
Lemma candidate_1087: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend (rev lf5) x)).
Lemma candidate_639: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) y)).
Lemma candidate_534: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) y)) (lfappend (rev y) lf3).
Lemma candidate_522: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) y)).
Lemma candidate_188: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (lfappend x (rev lf7))).
Lemma candidate_1071: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend lf6 (lfappend lf5 Nil)).
Lemma candidate_1069: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf5) (lfappend (lfappend lf6 lf5) Nil).
Lemma candidate_170: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend lf7 (lfappend lf6 Nil)).
Lemma candidate_168: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 lf6) Nil).
Lemma candidate_167: forall (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf6) (lfappend (lfappend lf7 Nil) lf6).
Lemma candidate_50: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 (lfappend lf3 Nil)) (lfappend lf7 lf3).
Lemma candidate_48: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 lf3) Nil) (lfappend lf7 lf3).
Lemma candidate_47: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf7 Nil) lf3) (lfappend lf7 lf3).
Lemma candidate_36: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend lf4 (lfappend lf5 Nil)).
Lemma candidate_34: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 lf5) (lfappend (lfappend lf4 lf5) Nil).
Lemma candidate_26: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend lf7 (lfappend lf3 Nil)).
Lemma candidate_24: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 lf3) Nil).
Lemma candidate_23: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf3) (lfappend (lfappend lf7 Nil) lf3).
Lemma candidate_1088: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev (rev lf5))).
Lemma candidate_640: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (rev (rev lf6))).
Lemma candidate_535: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (rev (rev lf3))) (lfappend (rev y) lf3).
Lemma candidate_523: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (rev (rev lf3))).
Lemma candidate_186: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (rev (rev (lfappend lf7 (rev x)))).
Lemma candidate_184: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (rev (rev lf7)) (rev x)).
Lemma candidate_669: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_1089: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (lfappend lf5 Nil)).
Lemma candidate_641: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_536: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (rev y) lf3).
Lemma candidate_524: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_187: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 (rev x)) Nil).
Lemma candidate_185: forall (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (rev x)) (lfappend (lfappend lf7 Nil) (rev x)).
Lemma candidate_670: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_637: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (rev (rev y)))).
Lemma candidate_532: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev y)))) (lfappend (rev y) lf3).
Lemma candidate_520: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (rev (rev y)))).
Lemma candidate_638: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) lf6) (rev (lfappend (rev lf6) (lfappend y Nil))).
Lemma candidate_533: forall (lf3 : lst) (y : lst), @eq lst (rev (lfappend (rev lf3) (lfappend y Nil))) (lfappend (rev y) lf3).
Lemma candidate_521: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (rev (lfappend (rev lf3) (lfappend y Nil))).
Lemma candidate_1177: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1078: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5)) (lfappend (lfappend lf7 lf6) lf5).
Lemma candidate_95: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_12: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5) (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_668: forall (y : lst) (x : lst), @eq lst (lfappend (rev y) (rev x)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_1175: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_1173: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_93: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_91: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 (Cons n Nil)) Nil).
Lemma candidate_1190: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1188: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_1104: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (lfappend (lfappend lf7 (rev x)) lf5).
Lemma candidate_11: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_6: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1189: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_1187: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_1207: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil)))   (lfappend lf7 (lfappend lf6 lf5)).
Lemma candidate_1174: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1172: forall (n : natural) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1075: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 lf5))   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_160: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) lf5)   (lfappend lf7 (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_92: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_90: forall (n : natural) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (lfappend (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1643: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend x y)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1475: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_665: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x y))).
Lemma candidate_5: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1169: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 lf6) (Cons n Nil)).
Lemma candidate_1111: forall (n : natural) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n lf8)))   (lfappend (lfappend lf7 lf6) (Cons n lf8)).
Lemma candidate_10: forall (lf7 : lst) (n : natural) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n lf8))   (lfappend lf7 (lfappend lf6 (Cons n lf8))).
Lemma candidate_8: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1610: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (rev (rev lf5))))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1436: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_1240: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (lfappend (rev lf5) (lfappend x (rev lf7))))   (lfappend lf7 (lfappend (rev x) lf5)).
Lemma candidate_1102: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev x) lf5))   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_644: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (rev (rev lf5)))).
Lemma candidate_181: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf5)   (rev (lfappend (rev lf5) (lfappend x (rev lf7)))).
Lemma candidate_1611: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil)))   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1609: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil)   (lfappend (rev y) (lfappend lf6 lf5)).
Lemma candidate_1437: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_1435: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 lf5))   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_645: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (rev y) (lfappend lf6 (lfappend lf5 Nil))).
Lemma candidate_643: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) lf5)   (lfappend (lfappend (rev y) (lfappend lf6 lf5)) Nil).
Lemma candidate_1557: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend (rev y) lf6) (Cons n Nil)).
Lemma candidate_1197: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1141: forall (n : natural) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n lf8)))   (lfappend (lfappend lf7 (rev x)) (Cons n lf8)).
Lemma candidate_9: forall (lf7 : lst) (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n lf8))   (lfappend lf7 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_7: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_4: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n lf8))   (lfappend (rev y) (lfappend lf6 (Cons n lf8))).
Lemma candidate_2: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1821: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1588: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1362: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1171: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_328: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend lf7 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1639: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil)))   (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1471: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev y) (lfappend (rev x) lf5))   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_661: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf5)   (lfappend (rev y) (lfappend (rev x) (lfappend lf5 Nil))).
Lemma candidate_1780: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1560: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1395: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1199: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_845: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) y)) (Cons n Nil)).
Lemma candidate_349: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf7))) (Cons n Nil)).
Lemma candidate_1357: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1166: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_323: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1584: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_3: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_13: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 lf5) (lfappend (rev y) (lfappend (rev x) lf5)).
Lemma candidate_1782: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1562: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1391: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1390: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1195: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1194: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_847: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_345: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_344: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (rev (rev (lfappend lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1818: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1585: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_865: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1392: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil)))   (lfappend lf7 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1196: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend lf7 (lfappend (rev x) (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_346: forall (n : natural) (lf7 : lst) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1358: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1167: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_324: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (rev (rev lf7)) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1819: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1586: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_866: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev (lfappend x (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_1778: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1558: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_843: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1359: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil)))   (lfappend lf7 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1168: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf6 (Cons n Nil)))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_325: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf6) (Cons n Nil))   (lfappend (lfappend lf7 Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1779: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil))   (lfappend (rev y) (lfappend lf6 (Cons n Nil))).
Lemma candidate_1559: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (rev y) (lfappend lf6 (Cons n Nil)))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_844: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev y) lf6) (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) (lfappend y Nil))) (Cons n Nil)).
Lemma candidate_863: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_15: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_14: forall (n : natural) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (lfappend x y)) lf4, @eq lst (lfappend lf4 (Cons n lf8))   (lfappend (rev y) (lfappend (rev x) (Cons n lf8))).
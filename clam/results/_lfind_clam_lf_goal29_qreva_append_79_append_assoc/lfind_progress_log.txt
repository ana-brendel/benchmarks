File Information
- File name: goal29
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal29_qreva_append_79_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal29_qreva_append_79_append_assoc
- Namespace: adtind
- Proof name: qreva_lfappend
- Theorem: Theorem qreva_lfappend: forall x0 y0 : lst, @eq lst (qreva x0 y0) (lfappend (rev x0) y0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (qreva x y0) (lfappend (rev x) y0)
x : lst
y : lst
n : natural
n0 : natural
IHy : @eq lst (qreva (Cons n x) y) (lfappend (rev (Cons n x)) y)

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural
n0 : natural

* Terms:
lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y) : lst
x : lst
y : lst
qreva (Cons n x) y : lst
lfappend (rev x) _UNBOUND_REL_1 : lst
@eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)) : Prop
lfappend (rev (Cons n x)) y : lst
lfappend (rev x) (Cons n (Cons n0 y)) : lst
lfappend (rev x) (Cons n Nil) : lst
rev (Cons n x) : lst
Cons n x : lst
@eq lst (qreva (Cons n x) y) (lfappend (rev (Cons n x)) y) : Prop
forall y0 : lst, @eq lst (qreva x y0) (lfappend (rev x) y0) : Prop
lst : Set
Cons n Nil : lst
Cons n0 y : lst
Cons n (Cons n0 y) : lst
n : natural
natural : Set
qreva x _UNBOUND_REL_1 : lst
rev x : lst
@eq lst (qreva x _UNBOUND_REL_1) (lfappend (rev x) _UNBOUND_REL_1) : Prop
n0 : natural
Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lfappend (rev x) (Cons n Nil)
lf7 : lst = rev x
lf1 : lst = lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)
lf4 : lst = Cons n (Cons n0 y)
lf5 : lst = Cons n Nil
lf2 : lst = lfappend (rev x) (Cons n (Cons n0 y))
lf8 : lst = Nil
lf6 : lst = Cons n0 y

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj5: forall (lf4 : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) lf1.
Lemma conj21: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6)) lf1.
Lemma conj22: forall (lf1 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) lf1.
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf6).
Lemma conj34: forall (lf2 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst lf2 (lfappend lf3 (Cons n0 y)).
Lemma conj37: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 lf6).
Lemma conj38: forall (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj53: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj54: forall (y : lst) (n : natural) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj69: forall (x : lst) (lf4 : lst) (lf1 : lst), @eq lst (lfappend (rev x) lf4) lf1.
Lemma conj85: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) lf1.
Lemma conj86: forall (x : lst) (lf1 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) lf1.
Lemma conj101: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 lf6).
Lemma conj102: forall (x : lst) (lf4 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj117: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj118: forall (x : lst) (y : lst) (n : natural) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 lf5) lf6).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj166: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj172: forall (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj176: forall (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (n : natural), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj182: forall (lf5 : lst) (y : lst) (lf7 : lst) (n : natural) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6))
  (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj190: forall (lf8 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj191: forall (lf6 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6))
  (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj192: forall (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n0 : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj233: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj255: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj256: forall (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).


<---VALIDITY CHECKS--->
Time elapsed: 294 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj255: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj192: forall (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj191: forall (lf6 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6))
  (lfappend (lfappend lf7 (Cons n Nil)) lf6).

Invalid:
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj233: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n0 : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj190: forall (lf8 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6))
  (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj182: forall (lf5 : lst) (y : lst) (lf7 : lst) (n : natural) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (n : natural), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj176: forall (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj172: forall (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj166: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 lf5) lf6).
Lemma conj118: forall (x : lst) (y : lst) (n : natural) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj117: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj102: forall (x : lst) (lf4 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj101: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 lf6).
Lemma conj86: forall (x : lst) (lf1 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) lf1.
Lemma conj85: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) lf1.
Lemma conj69: forall (x : lst) (lf4 : lst) (lf1 : lst), @eq lst (lfappend (rev x) lf4) lf1.
Lemma conj54: forall (y : lst) (n : natural) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj53: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj38: forall (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj37: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 lf6).
Lemma conj34: forall (lf2 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst lf2 (lfappend lf3 (Cons n0 y)).
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf6).
Lemma conj22: forall (lf1 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) lf1.
Lemma conj21: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6)) lf1.
Lemma conj5: forall (lf4 : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 430 seconds
Generalizations:
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj233: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n0 : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj190: forall (lf8 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6))
  (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj182: forall (lf5 : lst) (y : lst) (lf7 : lst) (n : natural) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (n : natural), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj176: forall (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj172: forall (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj166: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 lf5) lf6).
Lemma conj118: forall (x : lst) (y : lst) (n : natural) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj117: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj102: forall (x : lst) (lf4 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj101: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 lf6).
Lemma conj86: forall (x : lst) (lf1 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) lf1.
Lemma conj85: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) lf1.
Lemma conj69: forall (x : lst) (lf4 : lst) (lf1 : lst), @eq lst (lfappend (rev x) lf4) lf1.
Lemma conj54: forall (y : lst) (n : natural) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj53: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj38: forall (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj37: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 lf6).
Lemma conj34: forall (lf2 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst lf2 (lfappend lf3 (Cons n0 y)).
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf6).
Lemma conj22: forall (lf1 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) lf1.
Lemma conj21: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6)) lf1.
Lemma conj5: forall (lf4 : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 552 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj5: forall (lf4 : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) lf1.
Lemma conj21: forall (lf6 : lst) (lf1 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6)) lf1.
Lemma conj22: forall (lf1 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) lf1.
Lemma conj33: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf6).
Lemma conj34: forall (lf2 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst lf2 (lfappend lf3 (Cons n0 y)).
Lemma conj37: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 lf6).
Lemma conj38: forall (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj53: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj54: forall (y : lst) (n : natural) (lf7 : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj69: forall (x : lst) (lf4 : lst) (lf1 : lst), @eq lst (lfappend (rev x) lf4) lf1.
Lemma conj85: forall (lf6 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) lf1.
Lemma conj86: forall (x : lst) (lf1 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) lf1.
Lemma conj101: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 lf6).
Lemma conj102: forall (x : lst) (lf4 : lst) (y : lst) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) lf4) (lfappend lf3 (Cons n0 y)).
Lemma conj117: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend lf3 lf6).
Lemma conj118: forall (x : lst) (y : lst) (n : natural) (n0 : natural) (lf3 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 lf5) lf6).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj166: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : natural) (lf7 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj172: forall (lf2 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj174: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma conj176: forall (lf4 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (n : natural), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma conj182: forall (lf5 : lst) (y : lst) (lf7 : lst) (n : natural) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n lf6))
  (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma conj190: forall (lf8 : lst) (y : lst) (n : natural) (lf7 : lst) (n0 : natural), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n0 : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj233: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (n : natural), @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (n0 : natural), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).


<---CREATE SKETCHES--->
Time elapsed: 553 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst (##hole##) lf1
Sketch conj5_term_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj21_sketch0 : @eq lst (lfappend lf7 (##hole##)) lf1
Sketch conj21_sketch1 : @eq lst (##hole##) lf1
Sketch conj21_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj22_sketch0 : @eq lst (##hole##) lf1
Sketch conj22_sketch1 : @eq lst (lfappend lf7 (Cons n (##hole##))) lf1
Sketch conj22_sketch2 : @eq lst (lfappend lf7 (##hole##)) lf1
Sketch conj22_term_sketch0 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj22_term_sketch1 : @eq lst (Cons n0 y) (##hole##)
Sketch conj22_term_sketch2 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj33_sketch0 : @eq lst lf2 (##hole##)
Sketch conj33_term_sketch0 : @eq lst (lfappend lf3 lf6) (##hole##)
Sketch conj34_sketch0 : @eq lst lf2 (##hole##)
Sketch conj34_sketch1 : @eq lst lf2 (lfappend lf3 (##hole##))
Sketch conj34_term_sketch0 : @eq lst (lfappend lf3 (Cons n0 y)) (##hole##)
Sketch conj34_term_sketch1 : @eq lst (Cons n0 y) (##hole##)
Sketch conj37_sketch0 : @eq lst (##hole##) (lfappend lf3 lf6)
Sketch conj37_sketch1 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj37_term_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (lfappend lf3 lf6) (##hole##)
Sketch conj38_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj38_sketch1 : @eq lst (##hole##) (lfappend lf3 (Cons n0 y))
Sketch conj38_sketch2 : @eq lst (lfappend lf7 lf4) (lfappend lf3 (##hole##))
Sketch conj38_term_sketch0 : @eq lst (lfappend lf3 (Cons n0 y)) (##hole##)
Sketch conj38_term_sketch1 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj38_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj53_sketch0 : @eq lst (lfappend lf7 (##hole##)) (lfappend lf3 lf6)
Sketch conj53_sketch1 : @eq lst (##hole##) (lfappend lf3 lf6)
Sketch conj53_sketch2 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj53_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (lfappend lf3 lf6) (##hole##)
Sketch conj54_sketch0 : @eq lst (##hole##) (lfappend lf3 (Cons n0 y))
Sketch conj54_sketch1 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj54_sketch2 : @eq lst (lfappend lf7 (Cons n (##hole##))) (lfappend lf3 (##hole##))
Sketch conj54_sketch3 : @eq lst (lfappend lf7 (##hole##)) (lfappend lf3 (Cons n0 y))
Sketch conj54_term_sketch0 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj54_term_sketch1 : @eq lst (lfappend lf3 (Cons n0 y)) (##hole##)
Sketch conj54_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj54_term_sketch3 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj69_sketch0 : @eq lst (##hole##) lf1
Sketch conj69_sketch1 : @eq lst (lfappend (##hole##) lf4) lf1
Sketch conj69_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj69_term_sketch1 : @eq lst (rev x) (##hole##)
Sketch conj85_sketch0 : @eq lst (##hole##) lf1
Sketch conj85_sketch1 : @eq lst (lfappend (rev x) (##hole##)) lf1
Sketch conj85_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf6)) lf1
Sketch conj85_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj86_sketch0 : @eq lst (##hole##) lf1
Sketch conj86_sketch1 : @eq lst (lfappend (rev x) (Cons n (##hole##))) lf1
Sketch conj86_sketch2 : @eq lst (lfappend (rev x) (##hole##)) lf1
Sketch conj86_sketch3 : @eq lst (lfappend (##hole##) (Cons n (Cons n0 y))) lf1
Sketch conj86_term_sketch0 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj86_term_sketch1 : @eq lst (Cons n0 y) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj86_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj101_sketch0 : @eq lst (##hole##) (lfappend lf3 lf6)
Sketch conj101_sketch1 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj101_sketch2 : @eq lst (lfappend (##hole##) lf4) (lfappend lf3 lf6)
Sketch conj101_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj101_term_sketch1 : @eq lst (lfappend lf3 lf6) (##hole##)
Sketch conj101_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj102_sketch0 : @eq lst (##hole##) (lfappend lf3 (Cons n0 y))
Sketch conj102_sketch1 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj102_sketch2 : @eq lst (lfappend (rev x) lf4) (lfappend lf3 (##hole##))
Sketch conj102_sketch3 : @eq lst (lfappend (##hole##) lf4) (lfappend lf3 (Cons n0 y))
Sketch conj102_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj102_term_sketch1 : @eq lst (lfappend lf3 (Cons n0 y)) (##hole##)
Sketch conj102_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj102_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj117_sketch0 : @eq lst (##hole##) (lfappend lf3 lf6)
Sketch conj117_sketch1 : @eq lst (lfappend (rev x) (##hole##)) (lfappend lf3 lf6)
Sketch conj117_sketch2 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj117_sketch3 : @eq lst (lfappend (##hole##) (Cons n lf6)) (lfappend lf3 lf6)
Sketch conj117_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj117_term_sketch2 : @eq lst (lfappend lf3 lf6) (##hole##)
Sketch conj117_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj118_sketch0 : @eq lst (##hole##) (lfappend lf3 (Cons n0 y))
Sketch conj118_sketch1 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj118_sketch2 : @eq lst (lfappend (rev x) (Cons n (##hole##))) (lfappend lf3 (##hole##))
Sketch conj118_sketch3 : @eq lst (lfappend (rev x) (##hole##)) (lfappend lf3 (Cons n0 y))
Sketch conj118_sketch4 : @eq lst (lfappend (##hole##) (Cons n (Cons n0 y))) (lfappend lf3 (Cons n0 y))
Sketch conj118_term_sketch0 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj118_term_sketch1 : @eq lst (lfappend lf3 (Cons n0 y)) (##hole##)
Sketch conj118_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj118_term_sketch3 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj118_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj161_sketch0 : @eq lst lf2 (lfappend (##hole##) lf6)
Sketch conj161_sketch1 : @eq lst lf2 (##hole##)
Sketch conj161_term_sketch0 : @eq lst (lfappend lf7 lf5) (##hole##)
Sketch conj161_term_sketch1 : @eq lst (lfappend (lfappend lf7 lf5) lf6) (##hole##)
Sketch conj162_sketch0 : @eq lst lf2 (lfappend (##hole##) (Cons n0 y))
Sketch conj162_sketch1 : @eq lst lf2 (##hole##)
Sketch conj162_sketch2 : @eq lst lf2 (lfappend (lfappend lf7 lf5) (##hole##))
Sketch conj162_term_sketch0 : @eq lst (lfappend lf7 lf5) (##hole##)
Sketch conj162_term_sketch1 : @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y)) (##hole##)
Sketch conj162_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj165_sketch0 : @eq lst (##hole##) (lfappend (lfappend lf7 lf5) lf6)
Sketch conj165_sketch1 : @eq lst (lfappend lf7 lf4) (lfappend (##hole##) lf6)
Sketch conj165_sketch2 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj165_term_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj165_term_sketch1 : @eq lst (lfappend lf7 lf5) (##hole##)
Sketch conj165_term_sketch2 : @eq lst (lfappend (lfappend lf7 lf5) lf6) (##hole##)
Sketch conj166_sketch0 : @eq lst (##hole##) (lfappend (lfappend lf7 lf5) (Cons n0 y))
Sketch conj166_sketch1 : @eq lst (lfappend lf7 lf4) (lfappend (##hole##) (Cons n0 y))
Sketch conj166_sketch2 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj166_sketch3 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 lf5) (##hole##))
Sketch conj166_term_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj166_term_sketch1 : @eq lst (lfappend lf7 lf5) (##hole##)
Sketch conj166_term_sketch2 : @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y)) (##hole##)
Sketch conj166_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj169_sketch0 : @eq lst lf2 (lfappend (lfappend lf7 (##hole##)) lf6)
Sketch conj169_sketch1 : @eq lst lf2 (lfappend (##hole##) lf6)
Sketch conj169_sketch2 : @eq lst lf2 (##hole##)
Sketch conj169_term_sketch0 : @eq lst (Cons n lf8) (##hole##)
Sketch conj169_term_sketch1 : @eq lst (lfappend lf7 (Cons n lf8)) (##hole##)
Sketch conj169_term_sketch2 : @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6) (##hole##)
Sketch conj170_sketch0 : @eq lst lf2 (lfappend (lfappend lf7 (Cons n lf8)) (##hole##))
Sketch conj170_sketch1 : @eq lst lf2 (lfappend (lfappend lf7 (##hole##)) (Cons n0 y))
Sketch conj170_sketch2 : @eq lst lf2 (lfappend (##hole##) (Cons n0 y))
Sketch conj170_sketch3 : @eq lst lf2 (##hole##)
Sketch conj170_term_sketch0 : @eq lst (Cons n0 y) (##hole##)
Sketch conj170_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj170_term_sketch2 : @eq lst (lfappend lf7 (Cons n lf8)) (##hole##)
Sketch conj170_term_sketch3 : @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)) (##hole##)
Sketch conj171_sketch0 : @eq lst lf2 (##hole##)
Sketch conj171_sketch1 : @eq lst lf2 (lfappend (##hole##) lf6)
Sketch conj171_sketch2 : @eq lst lf2 (lfappend (lfappend lf7 (##hole##)) lf6)
Sketch conj171_sketch3 : @eq lst lf2 (lfappend (lfappend lf7 (Cons n (##hole##))) lf6)
Sketch conj171_term_sketch0 : @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6) (##hole##)
Sketch conj171_term_sketch1 : @eq lst (lfappend lf7 (Cons n Nil)) (##hole##)
Sketch conj171_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj171_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj172_sketch0 : @eq lst lf2 (##hole##)
Sketch conj172_sketch1 : @eq lst lf2 (lfappend (##hole##) (Cons n0 y))
Sketch conj172_sketch2 : @eq lst lf2 (lfappend (lfappend lf7 (##hole##)) (Cons n0 y))
Sketch conj172_sketch3 : @eq lst lf2 (lfappend (lfappend lf7 (Cons n Nil)) (##hole##))
Sketch conj172_sketch4 : @eq lst lf2 (lfappend (lfappend lf7 (Cons n (##hole##))) (Cons n0 y))
Sketch conj172_term_sketch0 : @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)) (##hole##)
Sketch conj172_term_sketch1 : @eq lst (lfappend lf7 (Cons n Nil)) (##hole##)
Sketch conj172_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj172_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj172_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj173_sketch0 : @eq lst (##hole##) (lfappend (lfappend lf7 (Cons n lf8)) lf6)
Sketch conj173_sketch1 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (##hole##)) lf6)
Sketch conj173_sketch2 : @eq lst (lfappend lf7 lf4) (lfappend (##hole##) lf6)
Sketch conj173_sketch3 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj173_term_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj173_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj173_term_sketch2 : @eq lst (lfappend lf7 (Cons n lf8)) (##hole##)
Sketch conj173_term_sketch3 : @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6) (##hole##)
Sketch conj174_sketch0 : @eq lst (##hole##) (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))
Sketch conj174_sketch1 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n lf8)) (##hole##))
Sketch conj174_sketch2 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (##hole##)) (Cons n0 y))
Sketch conj174_sketch3 : @eq lst (lfappend lf7 lf4) (lfappend (##hole##) (Cons n0 y))
Sketch conj174_sketch4 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj174_term_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj174_term_sketch1 : @eq lst (Cons n0 y) (##hole##)
Sketch conj174_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj174_term_sketch3 : @eq lst (lfappend lf7 (Cons n lf8)) (##hole##)
Sketch conj174_term_sketch4 : @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)) (##hole##)
Sketch conj175_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj175_sketch1 : @eq lst (##hole##) (lfappend (lfappend lf7 (Cons n Nil)) lf6)
Sketch conj175_sketch2 : @eq lst (lfappend lf7 lf4) (lfappend (##hole##) lf6)
Sketch conj175_sketch3 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (##hole##)) lf6)
Sketch conj175_sketch4 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n (##hole##))) lf6)
Sketch conj175_term_sketch0 : @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6) (##hole##)
Sketch conj175_term_sketch1 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj175_term_sketch2 : @eq lst (lfappend lf7 (Cons n Nil)) (##hole##)
Sketch conj175_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj175_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_sketch0 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj176_sketch1 : @eq lst (##hole##) (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))
Sketch conj176_sketch2 : @eq lst (lfappend lf7 lf4) (lfappend (##hole##) (Cons n0 y))
Sketch conj176_sketch3 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (##hole##)) (Cons n0 y))
Sketch conj176_sketch4 : @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n Nil)) (##hole##))
Sketch conj176_sketch5 : @eq lst (lfappend lf7 lf4)
  (lfappend (lfappend lf7 (Cons n (##hole##))) (Cons n0 y))
Sketch conj176_term_sketch0 : @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)) (##hole##)
Sketch conj176_term_sketch1 : @eq lst (lfappend lf7 lf4) (##hole##)
Sketch conj176_term_sketch2 : @eq lst (lfappend lf7 (Cons n Nil)) (##hole##)
Sketch conj176_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj176_term_sketch4 : @eq lst (Cons n0 y) (##hole##)
Sketch conj176_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj181_sketch0 : @eq lst (lfappend lf7 (##hole##)) (lfappend (lfappend lf7 lf5) lf6)
Sketch conj181_sketch1 : @eq lst (##hole##) (lfappend (lfappend lf7 lf5) lf6)
Sketch conj181_sketch2 : @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (##hole##) lf6)
Sketch conj181_sketch3 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj181_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj181_term_sketch1 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj181_term_sketch2 : @eq lst (lfappend lf7 lf5) (##hole##)
Sketch conj181_term_sketch3 : @eq lst (lfappend (lfappend lf7 lf5) lf6) (##hole##)
Sketch conj182_sketch0 : @eq lst (##hole##) (lfappend (lfappend lf7 lf5) (Cons n0 y))
Sketch conj182_sketch1 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (lfappend (##hole##) (Cons n0 y))
Sketch conj182_sketch2 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj182_sketch3 : @eq lst (lfappend lf7 (Cons n (##hole##)))
  (lfappend (lfappend lf7 lf5) (##hole##))
Sketch conj182_sketch4 : @eq lst (lfappend lf7 (##hole##)) (lfappend (lfappend lf7 lf5) (Cons n0 y))
Sketch conj182_term_sketch0 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj182_term_sketch1 : @eq lst (lfappend lf7 lf5) (##hole##)
Sketch conj182_term_sketch2 : @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y)) (##hole##)
Sketch conj182_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj182_term_sketch4 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj189_sketch0 : @eq lst (lfappend lf7 (##hole##)) (lfappend (lfappend lf7 (Cons n lf8)) lf6)
Sketch conj189_sketch1 : @eq lst (##hole##) (lfappend (lfappend lf7 (Cons n lf8)) lf6)
Sketch conj189_sketch2 : @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (lfappend lf7 (##hole##)) lf6)
Sketch conj189_sketch3 : @eq lst (lfappend lf7 (Cons n lf6)) (lfappend (##hole##) lf6)
Sketch conj189_sketch4 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj189_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj189_term_sketch1 : @eq lst (lfappend lf7 (Cons n lf6)) (##hole##)
Sketch conj189_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj189_term_sketch3 : @eq lst (lfappend lf7 (Cons n lf8)) (##hole##)
Sketch conj189_term_sketch4 : @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6) (##hole##)
Sketch conj190_sketch0 : @eq lst (##hole##) (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))
Sketch conj190_sketch1 : @eq lst (lfappend lf7 (Cons n (##hole##)))
  (lfappend (lfappend lf7 (Cons n lf8)) (##hole##))
Sketch conj190_sketch2 : @eq lst (lfappend lf7 (Cons n (Cons n0 y)))
  (lfappend (lfappend lf7 (##hole##)) (Cons n0 y))
Sketch conj190_sketch3 : @eq lst (lfappend lf7 (##hole##))
  (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))
Sketch conj190_sketch4 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (lfappend (##hole##) (Cons n0 y))
Sketch conj190_sketch5 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj190_term_sketch0 : @eq lst (lfappend lf7 (Cons n (Cons n0 y))) (##hole##)
Sketch conj190_term_sketch1 : @eq lst (Cons n0 y) (##hole##)
Sketch conj190_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj190_term_sketch3 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj190_term_sketch4 : @eq lst (lfappend lf7 (Cons n lf8)) (##hole##)
Sketch conj190_term_sketch5 : @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)) (##hole##)
Sketch conj225_sketch0 : @eq lst lf2 (lfappend (##hole##) lf6)
Sketch conj225_sketch1 : @eq lst lf2 (##hole##)
Sketch conj225_sketch2 : @eq lst lf2 (lfappend (lfappend (##hole##) lf5) lf6)
Sketch conj225_term_sketch0 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj225_term_sketch1 : @eq lst (lfappend (lfappend (rev x) lf5) lf6) (##hole##)
Sketch conj225_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj226_sketch0 : @eq lst lf2 (##hole##)
Sketch conj226_sketch1 : @eq lst lf2 (lfappend (##hole##) (Cons n0 y))
Sketch conj226_sketch2 : @eq lst lf2 (lfappend (lfappend (rev x) lf5) (##hole##))
Sketch conj226_sketch3 : @eq lst lf2 (lfappend (lfappend (##hole##) lf5) (Cons n0 y))
Sketch conj226_term_sketch0 : @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y)) (##hole##)
Sketch conj226_term_sketch1 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj226_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj226_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj229_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) lf5) lf6)
Sketch conj229_sketch1 : @eq lst (lfappend (rev x) lf4) (lfappend (##hole##) lf6)
Sketch conj229_sketch2 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj229_sketch3 : @eq lst (lfappend (##hole##) lf4) (lfappend (lfappend (##hole##) lf5) lf6)
Sketch conj229_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj229_term_sketch1 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj229_term_sketch2 : @eq lst (lfappend (lfappend (rev x) lf5) lf6) (##hole##)
Sketch conj229_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj230_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) lf5) (Cons n0 y))
Sketch conj230_sketch1 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj230_sketch2 : @eq lst (lfappend (rev x) lf4) (lfappend (##hole##) (Cons n0 y))
Sketch conj230_sketch3 : @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) lf5) (##hole##))
Sketch conj230_sketch4 : @eq lst (lfappend (##hole##) lf4)
  (lfappend (lfappend (##hole##) lf5) (Cons n0 y))
Sketch conj230_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj230_term_sketch1 : @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y)) (##hole##)
Sketch conj230_term_sketch2 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj230_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj230_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj233_sketch0 : @eq lst lf2 (lfappend (##hole##) lf6)
Sketch conj233_sketch1 : @eq lst lf2 (lfappend (lfappend (rev x) (##hole##)) lf6)
Sketch conj233_sketch2 : @eq lst lf2 (##hole##)
Sketch conj233_sketch3 : @eq lst lf2 (lfappend (lfappend (##hole##) (Cons n lf8)) lf6)
Sketch conj233_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj233_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj233_term_sketch2 : @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6) (##hole##)
Sketch conj233_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj234_sketch0 : @eq lst lf2 (lfappend (##hole##) (Cons n0 y))
Sketch conj234_sketch1 : @eq lst lf2 (##hole##)
Sketch conj234_sketch2 : @eq lst lf2 (lfappend (lfappend (rev x) (Cons n lf8)) (##hole##))
Sketch conj234_sketch3 : @eq lst lf2 (lfappend (lfappend (rev x) (##hole##)) (Cons n0 y))
Sketch conj234_sketch4 : @eq lst lf2 (lfappend (lfappend (##hole##) (Cons n lf8)) (Cons n0 y))
Sketch conj234_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj234_term_sketch1 : @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)) (##hole##)
Sketch conj234_term_sketch2 : @eq lst (Cons n0 y) (##hole##)
Sketch conj234_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj234_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj235_sketch0 : @eq lst lf2 (lfappend (##hole##) lf6)
Sketch conj235_sketch1 : @eq lst lf2 (lfappend (lfappend (rev x) (##hole##)) lf6)
Sketch conj235_sketch2 : @eq lst lf2 (lfappend (lfappend (rev x) (Cons n (##hole##))) lf6)
Sketch conj235_sketch3 : @eq lst lf2 (lfappend (lfappend (##hole##) (Cons n Nil)) lf6)
Sketch conj235_sketch4 : @eq lst lf2 (##hole##)
Sketch conj235_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj235_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj235_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj235_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj235_term_sketch4 : @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6) (##hole##)
Sketch conj236_sketch0 : @eq lst lf2 (##hole##)
Sketch conj236_sketch1 : @eq lst lf2 (lfappend (##hole##) (Cons n0 y))
Sketch conj236_sketch2 : @eq lst lf2 (lfappend (lfappend (rev x) (##hole##)) (Cons n0 y))
Sketch conj236_sketch3 : @eq lst lf2 (lfappend (lfappend (rev x) (Cons n Nil)) (##hole##))
Sketch conj236_sketch4 : @eq lst lf2 (lfappend (lfappend (rev x) (Cons n (##hole##))) (Cons n0 y))
Sketch conj236_sketch5 : @eq lst lf2 (lfappend (lfappend (##hole##) (Cons n Nil)) (Cons n0 y))
Sketch conj236_term_sketch0 : @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)) (##hole##)
Sketch conj236_term_sketch1 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj236_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj236_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj236_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj236_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj237_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) (Cons n lf8)) lf6)
Sketch conj237_sketch1 : @eq lst (lfappend (rev x) lf4) (lfappend (##hole##) lf6)
Sketch conj237_sketch2 : @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (##hole##)) lf6)
Sketch conj237_sketch3 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj237_sketch4 : @eq lst (lfappend (##hole##) lf4)
  (lfappend (lfappend (##hole##) (Cons n lf8)) lf6)
Sketch conj237_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj237_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj237_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj237_term_sketch3 : @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6) (##hole##)
Sketch conj237_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj238_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))
Sketch conj238_sketch1 : @eq lst (lfappend (rev x) lf4) (lfappend (##hole##) (Cons n0 y))
Sketch conj238_sketch2 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj238_sketch3 : @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n lf8)) (##hole##))
Sketch conj238_sketch4 : @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (##hole##)) (Cons n0 y))
Sketch conj238_sketch5 : @eq lst (lfappend (##hole##) lf4)
  (lfappend (lfappend (##hole##) (Cons n lf8)) (Cons n0 y))
Sketch conj238_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj238_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj238_term_sketch2 : @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)) (##hole##)
Sketch conj238_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj238_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj238_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj239_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) (Cons n Nil)) lf6)
Sketch conj239_sketch1 : @eq lst (lfappend (rev x) lf4) (lfappend (##hole##) lf6)
Sketch conj239_sketch2 : @eq lst (lfappend (rev x) lf4) (lfappend (lfappend (rev x) (##hole##)) lf6)
Sketch conj239_sketch3 : @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n (##hole##))) lf6)
Sketch conj239_sketch4 : @eq lst (lfappend (##hole##) lf4)
  (lfappend (lfappend (##hole##) (Cons n Nil)) lf6)
Sketch conj239_sketch5 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj239_term_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj239_term_sketch1 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj239_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj239_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj239_term_sketch5 : @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6) (##hole##)
Sketch conj240_sketch0 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj240_sketch1 : @eq lst (##hole##) (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))
Sketch conj240_sketch2 : @eq lst (lfappend (rev x) lf4) (lfappend (##hole##) (Cons n0 y))
Sketch conj240_sketch3 : @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (##hole##)) (Cons n0 y))
Sketch conj240_sketch4 : @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n Nil)) (##hole##))
Sketch conj240_sketch5 : @eq lst (lfappend (rev x) lf4)
  (lfappend (lfappend (rev x) (Cons n (##hole##))) (Cons n0 y))
Sketch conj240_sketch6 : @eq lst (lfappend (##hole##) lf4)
  (lfappend (lfappend (##hole##) (Cons n Nil)) (Cons n0 y))
Sketch conj240_term_sketch0 : @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)) (##hole##)
Sketch conj240_term_sketch1 : @eq lst (lfappend (rev x) lf4) (##hole##)
Sketch conj240_term_sketch2 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj240_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj240_term_sketch4 : @eq lst (Cons n0 y) (##hole##)
Sketch conj240_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj240_term_sketch6 : @eq lst (rev x) (##hole##)
Sketch conj245_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) lf5) lf6)
Sketch conj245_sketch1 : @eq lst (lfappend (rev x) (##hole##)) (lfappend (lfappend (rev x) lf5) lf6)
Sketch conj245_sketch2 : @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (##hole##) lf6)
Sketch conj245_sketch3 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj245_sketch4 : @eq lst (lfappend (##hole##) (Cons n lf6))
  (lfappend (lfappend (##hole##) lf5) lf6)
Sketch conj245_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj245_term_sketch1 : @eq lst (Cons n lf6) (##hole##)
Sketch conj245_term_sketch2 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj245_term_sketch3 : @eq lst (lfappend (lfappend (rev x) lf5) lf6) (##hole##)
Sketch conj245_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj246_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) lf5) (Cons n0 y))
Sketch conj246_sketch1 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj246_sketch2 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (##hole##) (Cons n0 y))
Sketch conj246_sketch3 : @eq lst (lfappend (rev x) (Cons n (##hole##)))
  (lfappend (lfappend (rev x) lf5) (##hole##))
Sketch conj246_sketch4 : @eq lst (lfappend (rev x) (##hole##))
  (lfappend (lfappend (rev x) lf5) (Cons n0 y))
Sketch conj246_sketch5 : @eq lst (lfappend (##hole##) (Cons n (Cons n0 y)))
  (lfappend (lfappend (##hole##) lf5) (Cons n0 y))
Sketch conj246_term_sketch0 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj246_term_sketch1 : @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y)) (##hole##)
Sketch conj246_term_sketch2 : @eq lst (lfappend (rev x) lf5) (##hole##)
Sketch conj246_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj246_term_sketch4 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj246_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj253_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) (Cons n lf8)) lf6)
Sketch conj253_sketch1 : @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (##hole##) lf6)
Sketch conj253_sketch2 : @eq lst (lfappend (rev x) (##hole##))
  (lfappend (lfappend (rev x) (Cons n lf8)) lf6)
Sketch conj253_sketch3 : @eq lst (lfappend (rev x) (Cons n lf6))
  (lfappend (lfappend (rev x) (##hole##)) lf6)
Sketch conj253_sketch4 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj253_sketch5 : @eq lst (lfappend (##hole##) (Cons n lf6))
  (lfappend (lfappend (##hole##) (Cons n lf8)) lf6)
Sketch conj253_term_sketch0 : @eq lst (lfappend (rev x) (Cons n lf6)) (##hole##)
Sketch conj253_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj253_term_sketch2 : @eq lst (Cons n lf6) (##hole##)
Sketch conj253_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj253_term_sketch4 : @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6) (##hole##)
Sketch conj253_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj254_sketch0 : @eq lst (##hole##) (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))
Sketch conj254_sketch1 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (##hole##) (Cons n0 y))
Sketch conj254_sketch2 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj254_sketch3 : @eq lst (lfappend (rev x) (Cons n (##hole##)))
  (lfappend (lfappend (rev x) (Cons n lf8)) (##hole##))
Sketch conj254_sketch4 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))
  (lfappend (lfappend (rev x) (##hole##)) (Cons n0 y))
Sketch conj254_sketch5 : @eq lst (lfappend (rev x) (##hole##))
  (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))
Sketch conj254_sketch6 : @eq lst (lfappend (##hole##) (Cons n (Cons n0 y)))
  (lfappend (lfappend (##hole##) (Cons n lf8)) (Cons n0 y))
Sketch conj254_term_sketch0 : @eq lst (lfappend (rev x) (Cons n (Cons n0 y))) (##hole##)
Sketch conj254_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf8)) (##hole##)
Sketch conj254_term_sketch2 : @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)) (##hole##)
Sketch conj254_term_sketch3 : @eq lst (Cons n0 y) (##hole##)
Sketch conj254_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj254_term_sketch5 : @eq lst (Cons n (Cons n0 y)) (##hole##)
Sketch conj254_term_sketch6 : @eq lst (rev x) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 8775 seconds
Problems per Sketch:
Sketch conj254_term_sketch5 --> Problem  synth_9
Sketch conj238_sketch4 --> Problem  synth_101
Sketch conj69_sketch0 --> Problem  synth_1
Sketch conj170_sketch1 --> Problem  synth_49
Sketch conj181_term_sketch3 --> Problem  synth_37
Sketch conj101_term_sketch2 --> Problem  synth_20
Sketch conj253_term_sketch5 --> Problem  synth_20
Sketch conj118_sketch3 --> Problem  synth_33
Sketch conj238_sketch0 --> Problem  synth_91
Sketch conj246_sketch4 --> Problem  synth_113
Sketch conj240_sketch6 --> Problem  synth_107
Sketch conj170_term_sketch3 --> Problem  synth_50
Sketch conj53_term_sketch2 --> Problem  synth_11
Sketch conj171_sketch0 --> Problem  synth_10
Sketch conj21_term_sketch1 --> Problem  synth_5
Sketch conj182_term_sketch4 --> Problem  synth_9
Sketch conj190_term_sketch0 --> Problem  synth_7
Sketch conj173_sketch0 --> Problem  synth_47
Sketch conj234_term_sketch2 --> Problem  synth_8
Sketch conj246_term_sketch5 --> Problem  synth_20
Sketch conj246_sketch5 --> Problem  synth_114
Sketch conj246_sketch3 --> Problem  synth_112
Sketch conj237_term_sketch4 --> Problem  synth_20
Sketch conj54_sketch1 --> Problem  synth_7
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj235_term_sketch3 --> Problem  synth_20
Sketch conj254_sketch1 --> Problem  synth_111
Sketch conj175_term_sketch0 --> Problem  synth_5
Sketch conj101_sketch0 --> Problem  synth_11
Sketch conj246_term_sketch3 --> Problem  synth_8
Sketch conj238_term_sketch0 --> Problem  synth_19
Sketch conj85_sketch0 --> Problem  synth_1
Sketch conj246_sketch2 --> Problem  synth_111
Sketch conj226_term_sketch3 --> Problem  synth_20
Sketch conj230_sketch3 --> Problem  synth_82
Sketch conj175_sketch0 --> Problem  synth_2
Sketch conj86_sketch0 --> Problem  synth_1
Sketch conj21_sketch0 --> Problem  synth_3
Sketch conj253_sketch5 --> Problem  synth_117
Sketch conj174_sketch2 --> Problem  synth_59
Sketch conj253_term_sketch0 --> Problem  synth_23
Sketch conj237_sketch0 --> Problem  synth_87
Sketch conj182_sketch2 --> Problem  synth_7
Sketch conj181_sketch2 --> Problem  synth_64
Sketch conj170_term_sketch0 --> Problem  synth_8
Sketch conj234_term_sketch1 --> Problem  synth_91
Sketch conj176_term_sketch0 --> Problem  synth_7
Sketch conj237_sketch1 --> Problem  synth_79
Sketch conj238_sketch2 --> Problem  synth_19
Sketch conj235_term_sketch2 --> Problem  synth_54
Sketch conj226_sketch2 --> Problem  synth_76
Sketch conj236_term_sketch4 --> Problem  synth_54
Sketch conj162_sketch0 --> Problem  synth_38
Sketch conj246_sketch0 --> Problem  synth_78
Sketch conj239_sketch3 --> Problem  synth_103
Sketch conj239_term_sketch3 --> Problem  synth_54
Sketch conj171_sketch2 --> Problem  synth_44
Sketch conj235_term_sketch4 --> Problem  synth_23
Sketch conj236_term_sketch1 --> Problem  synth_94
Sketch conj189_sketch4 --> Problem  synth_5
Sketch conj230_term_sketch3 --> Problem  synth_8
Sketch conj54_sketch3 --> Problem  synth_17
Sketch conj225_term_sketch2 --> Problem  synth_20
Sketch conj170_sketch3 --> Problem  synth_10
Sketch conj245_term_sketch2 --> Problem  synth_74
Sketch conj240_term_sketch1 --> Problem  synth_19
Sketch conj38_sketch1 --> Problem  synth_13
Sketch conj85_term_sketch0 --> Problem  synth_23
Sketch conj69_term_sketch0 --> Problem  synth_19
Sketch conj182_sketch4 --> Problem  synth_67
Sketch conj254_sketch0 --> Problem  synth_91
Sketch conj226_sketch1 --> Problem  synth_38
Sketch conj118_sketch2 --> Problem  synth_32
Sketch conj237_term_sketch1 --> Problem  synth_86
Sketch conj161_sketch1 --> Problem  synth_10
Sketch conj53_term_sketch1 --> Problem  synth_5
Sketch conj190_term_sketch3 --> Problem  synth_9
Sketch conj117_sketch3 --> Problem  synth_31
Sketch conj190_sketch2 --> Problem  synth_71
Sketch conj189_sketch2 --> Problem  synth_69
Sketch conj239_term_sketch0 --> Problem  synth_19
Sketch conj237_sketch2 --> Problem  synth_98
Sketch conj234_sketch1 --> Problem  synth_10
Sketch conj172_term_sketch3 --> Problem  synth_8
Sketch conj85_term_sketch2 --> Problem  synth_20
Sketch conj182_term_sketch2 --> Problem  synth_40
Sketch conj190_term_sketch4 --> Problem  synth_46
Sketch conj229_sketch0 --> Problem  synth_75
Sketch conj173_term_sketch3 --> Problem  synth_47
Sketch conj236_sketch0 --> Problem  synth_10
Sketch conj181_sketch0 --> Problem  synth_63
Sketch conj101_sketch2 --> Problem  synth_27
Sketch conj236_sketch3 --> Problem  synth_95
Sketch conj245_sketch1 --> Problem  synth_108
Sketch conj254_term_sketch2 --> Problem  synth_91
Sketch conj235_term_sketch0 --> Problem  synth_94
Sketch conj165_sketch2 --> Problem  synth_2
Sketch conj240_term_sketch5 --> Problem  synth_54
Sketch conj176_term_sketch4 --> Problem  synth_8
Sketch conj85_term_sketch1 --> Problem  synth_4
Sketch conj38_sketch2 --> Problem  synth_14
Sketch conj240_term_sketch0 --> Problem  synth_26
Sketch conj175_sketch1 --> Problem  synth_5
Sketch conj245_term_sketch0 --> Problem  synth_23
Sketch conj230_sketch0 --> Problem  synth_78
Sketch conj189_sketch0 --> Problem  synth_68
Sketch conj170_sketch2 --> Problem  synth_38
Sketch conj254_sketch2 --> Problem  synth_26
Sketch conj253_term_sketch1 --> Problem  synth_86
Sketch conj233_sketch3 --> Problem  synth_85
Sketch conj169_term_sketch1 --> Problem  synth_46
Sketch conj181_sketch1 --> Problem  synth_37
Sketch conj165_sketch1 --> Problem  synth_41
Sketch conj38_term_sketch1 --> Problem  synth_2
Sketch conj33_sketch0 --> Problem  synth_10
Sketch conj246_term_sketch1 --> Problem  synth_78
Sketch conj239_sketch4 --> Problem  synth_104
Sketch conj166_term_sketch0 --> Problem  synth_2
Sketch conj239_term_sketch1 --> Problem  synth_94
Sketch conj233_term_sketch0 --> Problem  synth_86
Sketch conj230_sketch1 --> Problem  synth_19
Sketch conj182_sketch1 --> Problem  synth_65
Sketch conj118_term_sketch4 --> Problem  synth_20
Sketch conj234_term_sketch4 --> Problem  synth_20
Sketch conj190_sketch3 --> Problem  synth_72
Sketch conj176_sketch3 --> Problem  synth_59
Sketch conj230_sketch2 --> Problem  synth_81
Sketch conj175_sketch3 --> Problem  synth_57
Sketch conj172_sketch1 --> Problem  synth_38
Sketch conj162_term_sketch1 --> Problem  synth_40
Sketch conj53_term_sketch0 --> Problem  synth_4
Sketch conj190_term_sketch1 --> Problem  synth_8
Sketch conj254_sketch6 --> Problem  synth_121
Sketch conj175_term_sketch3 --> Problem  synth_53
Sketch conj175_sketch4 --> Problem  synth_60
Sketch conj234_sketch0 --> Problem  synth_38
Sketch conj239_term_sketch2 --> Problem  synth_53
Sketch conj230_term_sketch4 --> Problem  synth_20
Sketch conj254_term_sketch4 --> Problem  synth_45
Sketch conj172_sketch4 --> Problem  synth_56
Sketch conj101_term_sketch1 --> Problem  synth_11
Sketch conj254_sketch4 --> Problem  synth_119
Sketch conj239_sketch1 --> Problem  synth_79
Sketch conj225_sketch1 --> Problem  synth_10
Sketch conj172_term_sketch0 --> Problem  synth_7
Sketch conj182_term_sketch3 --> Problem  synth_8
Sketch conj33_term_sketch0 --> Problem  synth_11
Sketch conj245_term_sketch3 --> Problem  synth_75
Sketch conj38_term_sketch2 --> Problem  synth_8
Sketch conj233_sketch1 --> Problem  synth_84
Sketch conj22_term_sketch1 --> Problem  synth_8
Sketch conj85_sketch2 --> Problem  synth_22
Sketch conj182_term_sketch1 --> Problem  synth_36
Sketch conj118_sketch4 --> Problem  synth_34
Sketch conj85_sketch1 --> Problem  synth_21
Sketch conj235_sketch3 --> Problem  synth_93
Sketch conj118_term_sketch1 --> Problem  synth_13
Sketch conj182_term_sketch0 --> Problem  synth_7
Sketch conj86_sketch2 --> Problem  synth_21
Sketch conj239_term_sketch5 --> Problem  synth_23
Sketch conj225_term_sketch1 --> Problem  synth_75
Sketch conj238_term_sketch3 --> Problem  synth_8
Sketch conj117_term_sketch2 --> Problem  synth_11
Sketch conj182_sketch3 --> Problem  synth_66
Sketch conj118_term_sketch0 --> Problem  synth_26
Sketch conj22_sketch0 --> Problem  synth_1
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj34_sketch0 --> Problem  synth_10
Sketch conj102_sketch2 --> Problem  synth_28
Sketch conj38_term_sketch0 --> Problem  synth_13
Sketch conj240_term_sketch4 --> Problem  synth_8
Sketch conj161_term_sketch0 --> Problem  synth_36
Sketch conj229_sketch1 --> Problem  synth_79
Sketch conj69_term_sketch1 --> Problem  synth_20
Sketch conj181_term_sketch2 --> Problem  synth_36
Sketch conj170_term_sketch2 --> Problem  synth_46
Sketch conj235_sketch2 --> Problem  synth_92
Sketch conj254_term_sketch6 --> Problem  synth_20
Sketch conj176_term_sketch1 --> Problem  synth_2
Sketch conj176_sketch5 --> Problem  synth_62
Sketch conj172_term_sketch2 --> Problem  synth_53
Sketch conj253_term_sketch4 --> Problem  synth_87
Sketch conj117_sketch2 --> Problem  synth_23
Sketch conj171_sketch3 --> Problem  synth_51
Sketch conj226_sketch0 --> Problem  synth_10
Sketch conj54_term_sketch0 --> Problem  synth_7
Sketch conj239_sketch5 --> Problem  synth_19
Sketch conj182_sketch0 --> Problem  synth_40
Sketch conj172_sketch0 --> Problem  synth_10
Sketch conj161_term_sketch1 --> Problem  synth_37
Sketch conj102_sketch0 --> Problem  synth_13
Sketch conj21_term_sketch0 --> Problem  synth_4
Sketch conj253_sketch0 --> Problem  synth_87
Sketch conj176_sketch1 --> Problem  synth_7
Sketch conj86_term_sketch3 --> Problem  synth_20
Sketch conj169_sketch0 --> Problem  synth_44
Sketch conj101_term_sketch0 --> Problem  synth_19
Sketch conj189_term_sketch0 --> Problem  synth_4
Sketch conj170_sketch0 --> Problem  synth_48
Sketch conj237_sketch3 --> Problem  synth_19
Sketch conj171_term_sketch1 --> Problem  synth_52
Sketch conj21_sketch1 --> Problem  synth_1
Sketch conj175_term_sketch2 --> Problem  synth_52
Sketch conj54_term_sketch2 --> Problem  synth_8
Sketch conj225_sketch2 --> Problem  synth_73
Sketch conj236_sketch5 --> Problem  synth_97
Sketch conj166_term_sketch3 --> Problem  synth_8
Sketch conj189_term_sketch3 --> Problem  synth_46
Sketch conj176_sketch2 --> Problem  synth_42
Sketch conj240_sketch5 --> Problem  synth_106
Sketch conj238_sketch3 --> Problem  synth_100
Sketch conj162_sketch2 --> Problem  synth_39
Sketch conj162_term_sketch2 --> Problem  synth_8
Sketch conj101_sketch1 --> Problem  synth_19
Sketch conj37_sketch1 --> Problem  synth_2
Sketch conj245_sketch3 --> Problem  synth_23
Sketch conj176_term_sketch3 --> Problem  synth_53
Sketch conj117_term_sketch1 --> Problem  synth_4
Sketch conj174_term_sketch0 --> Problem  synth_2
Sketch conj53_sketch1 --> Problem  synth_11
Sketch conj254_term_sketch0 --> Problem  synth_26
Sketch conj175_sketch2 --> Problem  synth_41
Sketch conj174_term_sketch4 --> Problem  synth_50
Sketch conj238_sketch1 --> Problem  synth_81
Sketch conj240_sketch0 --> Problem  synth_19
Sketch conj176_sketch0 --> Problem  synth_2
Sketch conj173_term_sketch2 --> Problem  synth_46
Sketch conj237_sketch4 --> Problem  synth_99
Sketch conj172_term_sketch1 --> Problem  synth_52
Sketch conj240_term_sketch6 --> Problem  synth_20
Sketch conj102_term_sketch1 --> Problem  synth_13
Sketch conj166_term_sketch2 --> Problem  synth_40
Sketch conj238_term_sketch2 --> Problem  synth_91
Sketch conj38_sketch0 --> Problem  synth_2
Sketch conj173_sketch2 --> Problem  synth_41
Sketch conj102_term_sketch2 --> Problem  synth_8
Sketch conj171_term_sketch2 --> Problem  synth_53
Sketch conj253_term_sketch3 --> Problem  synth_45
Sketch conj169_sketch2 --> Problem  synth_10
Sketch conj240_sketch3 --> Problem  synth_101
Sketch conj236_sketch1 --> Problem  synth_38
Sketch conj174_sketch4 --> Problem  synth_2
Sketch conj254_term_sketch3 --> Problem  synth_8
Sketch conj189_term_sketch2 --> Problem  synth_45
Sketch conj181_term_sketch0 --> Problem  synth_4
Sketch conj235_term_sketch1 --> Problem  synth_53
Sketch conj225_sketch0 --> Problem  synth_35
Sketch conj240_term_sketch3 --> Problem  synth_53
Sketch conj233_term_sketch1 --> Problem  synth_45
Sketch conj166_sketch0 --> Problem  synth_40
Sketch conj238_term_sketch4 --> Problem  synth_45
Sketch conj190_sketch0 --> Problem  synth_50
Sketch conj237_term_sketch0 --> Problem  synth_19
Sketch conj254_term_sketch1 --> Problem  synth_86
Sketch conj239_sketch0 --> Problem  synth_23
Sketch conj245_sketch4 --> Problem  synth_110
Sketch conj229_sketch2 --> Problem  synth_19
Sketch conj171_sketch1 --> Problem  synth_35
Sketch conj117_term_sketch3 --> Problem  synth_20
Sketch conj236_term_sketch0 --> Problem  synth_26
Sketch conj230_sketch4 --> Problem  synth_83
Sketch conj226_term_sketch0 --> Problem  synth_78
Sketch conj236_term_sketch2 --> Problem  synth_53
Sketch conj237_term_sketch2 --> Problem  synth_45
Sketch conj238_term_sketch1 --> Problem  synth_86
Sketch conj226_term_sketch1 --> Problem  synth_74
Sketch conj37_sketch0 --> Problem  synth_11
Sketch conj239_term_sketch4 --> Problem  synth_20
Sketch conj236_term_sketch5 --> Problem  synth_20
Sketch conj234_sketch4 --> Problem  synth_90
Sketch conj54_sketch2 --> Problem  synth_16
Sketch conj236_sketch2 --> Problem  synth_89
Sketch conj253_sketch4 --> Problem  synth_23
Sketch conj169_term_sketch2 --> Problem  synth_47
Sketch conj166_sketch2 --> Problem  synth_2
Sketch conj237_term_sketch3 --> Problem  synth_87
Sketch conj53_sketch2 --> Problem  synth_5
Sketch conj190_sketch1 --> Problem  synth_70
Sketch conj171_term_sketch3 --> Problem  synth_54
Sketch conj172_term_sketch4 --> Problem  synth_54
Sketch conj54_sketch0 --> Problem  synth_13
Sketch conj22_term_sketch0 --> Problem  synth_7
Sketch conj176_term_sketch2 --> Problem  synth_52
Sketch conj253_term_sketch2 --> Problem  synth_4
Sketch conj173_sketch1 --> Problem  synth_57
Sketch conj118_term_sketch3 --> Problem  synth_9
Sketch conj118_term_sketch2 --> Problem  synth_8
Sketch conj246_term_sketch2 --> Problem  synth_74
Sketch conj34_sketch1 --> Problem  synth_12
Sketch conj246_term_sketch0 --> Problem  synth_26
Sketch conj174_term_sketch3 --> Problem  synth_46
Sketch conj174_term_sketch2 --> Problem  synth_45
Sketch conj174_term_sketch1 --> Problem  synth_8
Sketch conj166_term_sketch1 --> Problem  synth_36
Sketch conj165_term_sketch1 --> Problem  synth_36
Sketch conj233_sketch2 --> Problem  synth_10
Sketch conj236_sketch4 --> Problem  synth_96
Sketch conj229_term_sketch3 --> Problem  synth_20
Sketch conj238_sketch5 --> Problem  synth_102
Sketch conj239_sketch2 --> Problem  synth_98
Sketch conj234_term_sketch3 --> Problem  synth_45
Sketch conj226_sketch3 --> Problem  synth_77
Sketch conj190_sketch5 --> Problem  synth_7
Sketch conj253_sketch1 --> Problem  synth_109
Sketch conj245_sketch0 --> Problem  synth_75
Sketch conj173_term_sketch1 --> Problem  synth_45
Sketch conj235_sketch0 --> Problem  synth_35
Sketch conj117_sketch0 --> Problem  synth_11
Sketch conj254_sketch3 --> Problem  synth_118
Sketch conj171_term_sketch0 --> Problem  synth_5
Sketch conj172_sketch2 --> Problem  synth_49
Sketch conj189_sketch3 --> Problem  synth_64
Sketch conj246_sketch1 --> Problem  synth_26
Sketch conj189_term_sketch4 --> Problem  synth_47
Sketch conj240_term_sketch2 --> Problem  synth_94
Sketch conj245_term_sketch1 --> Problem  synth_4
Sketch conj173_term_sketch0 --> Problem  synth_2
Sketch conj229_sketch3 --> Problem  synth_80
Sketch conj22_sketch1 --> Problem  synth_6
Sketch conj236_term_sketch3 --> Problem  synth_8
Sketch conj102_sketch1 --> Problem  synth_19
Sketch conj233_term_sketch3 --> Problem  synth_20
Sketch conj234_term_sketch0 --> Problem  synth_86
Sketch conj54_term_sketch3 --> Problem  synth_9
Sketch conj189_term_sketch1 --> Problem  synth_5
Sketch conj240_sketch1 --> Problem  synth_26
Sketch conj233_term_sketch2 --> Problem  synth_87
Sketch conj235_sketch1 --> Problem  synth_84
Sketch conj166_sketch1 --> Problem  synth_42
Sketch conj165_sketch0 --> Problem  synth_37
Sketch conj118_sketch1 --> Problem  synth_26
Sketch conj240_sketch4 --> Problem  synth_105
Sketch conj162_sketch1 --> Problem  synth_10
Sketch conj174_sketch3 --> Problem  synth_42
Sketch conj86_sketch1 --> Problem  synth_24
Sketch conj238_term_sketch5 --> Problem  synth_20
Sketch conj176_term_sketch5 --> Problem  synth_54
Sketch conj170_term_sketch1 --> Problem  synth_45
Sketch conj229_term_sketch0 --> Problem  synth_19
Sketch conj53_sketch0 --> Problem  synth_15
Sketch conj69_sketch1 --> Problem  synth_18
Sketch conj34_term_sketch1 --> Problem  synth_8
Sketch conj34_term_sketch0 --> Problem  synth_13
Sketch conj190_term_sketch5 --> Problem  synth_50
Sketch conj230_term_sketch2 --> Problem  synth_74
Sketch conj226_term_sketch2 --> Problem  synth_8
Sketch conj86_term_sketch1 --> Problem  synth_8
Sketch conj181_sketch3 --> Problem  synth_5
Sketch conj234_sketch3 --> Problem  synth_89
Sketch conj161_sketch0 --> Problem  synth_35
Sketch conj102_term_sketch0 --> Problem  synth_19
Sketch conj118_sketch0 --> Problem  synth_13
Sketch conj175_term_sketch4 --> Problem  synth_54
Sketch conj165_term_sketch0 --> Problem  synth_2
Sketch conj22_term_sketch2 --> Problem  synth_9
Sketch conj235_sketch4 --> Problem  synth_10
Sketch conj166_sketch3 --> Problem  synth_43
Sketch conj230_term_sketch1 --> Problem  synth_78
Sketch conj234_sketch2 --> Problem  synth_88
Sketch conj37_term_sketch0 --> Problem  synth_2
Sketch conj240_sketch2 --> Problem  synth_81
Sketch conj189_sketch1 --> Problem  synth_47
Sketch conj253_sketch2 --> Problem  synth_115
Sketch conj229_term_sketch2 --> Problem  synth_75
Sketch conj176_sketch4 --> Problem  synth_61
Sketch conj225_term_sketch0 --> Problem  synth_74
Sketch conj102_sketch3 --> Problem  synth_29
Sketch conj169_sketch1 --> Problem  synth_35
Sketch conj117_term_sketch0 --> Problem  synth_23
Sketch conj117_sketch1 --> Problem  synth_30
Sketch conj86_term_sketch0 --> Problem  synth_26
Sketch conj86_term_sketch2 --> Problem  synth_9
Sketch conj245_sketch2 --> Problem  synth_109
Sketch conj253_sketch3 --> Problem  synth_116
Sketch conj86_sketch3 --> Problem  synth_25
Sketch conj22_sketch2 --> Problem  synth_3
Sketch conj229_term_sketch1 --> Problem  synth_74
Sketch conj233_sketch0 --> Problem  synth_35
Sketch conj190_sketch4 --> Problem  synth_65
Sketch conj175_term_sketch1 --> Problem  synth_2
Sketch conj54_term_sketch1 --> Problem  synth_13
Sketch conj230_term_sketch0 --> Problem  synth_19
Sketch conj37_term_sketch1 --> Problem  synth_11
Sketch conj102_term_sketch3 --> Problem  synth_20
Sketch conj172_sketch3 --> Problem  synth_55
Sketch conj165_term_sketch2 --> Problem  synth_37
Sketch conj246_term_sketch4 --> Problem  synth_9
Sketch conj181_term_sketch1 --> Problem  synth_5
Sketch conj245_term_sketch4 --> Problem  synth_20
Sketch conj169_term_sketch0 --> Problem  synth_45
Sketch conj174_sketch0 --> Problem  synth_50
Sketch conj162_term_sketch0 --> Problem  synth_36
Sketch conj254_sketch5 --> Problem  synth_120
Sketch conj174_sketch1 --> Problem  synth_58
Sketch conj173_sketch3 --> Problem  synth_2
Sketch conj190_term_sketch2 --> Problem  synth_45


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 10038 seconds

Problem: synth_63
 rev (qreva lf6 (rev lf5))
 rev (qreva lf6 lf5)
 lfappend (rev lf5) lf6
 qreva (rev lf5) lf6
 lfappend lf5 lf6
 qreva lf5 lf6

Problem: synth_106
 Nil

Problem: synth_91
 qreva (lfappend x Nil) (Cons n (Cons n0 y))
 lfappend (qreva x Nil) (Cons n (Cons n0 y))
 qreva x (Cons n (Cons n0 (lfappend y lf8)))
 qreva x (Cons n (Cons n0 (lfappend y Nil)))
 lfappend (rev x) (Cons n (Cons n0 y))
 qreva x (Cons n (Cons n0 y))

Problem: synth_109
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_68
 Cons n (qreva lf8 lf6)
 lfappend lf8 (Cons n lf6)
 qreva lf8 (Cons n lf6)
 Cons n (lfappend lf6 lf8)
 Cons n (lfappend lf6 Nil)
 Cons n lf6

Problem: synth_67
 rev (qreva y (Cons n0 (rev lf5)))
 rev (qreva y (Cons n0 lf5))
 lfappend (rev lf5) (Cons n0 y)
 qreva (rev lf5) (Cons n0 y)
 lfappend lf5 (Cons n0 y)
 qreva lf5 (Cons n0 y)

Problem: synth_77

Problem: synth_64
 lfappend (lfappend lf7 Nil) (Cons n Nil)
 qreva (qreva lf7 Nil) (Cons n Nil)
 lfappend (rev (qreva lf7 Nil)) (Cons n Nil)
 qreva (rev lf7) (Cons n Nil)
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)

Problem: synth_96
 Nil

Problem: synth_11
 qreva (rev lf3) (lfappend lf6 Nil)
 lfappend lf3 (rev (rev lf6))
 lfappend lf3 (lfappend lf6 Nil)
 rev (qreva lf6 (rev lf3))
 qreva (rev lf3) lf6
 lfappend lf3 lf6

Problem: synth_54
 Nil

Problem: synth_39

Problem: synth_46
 qreva (rev lf7) (Cons n lf8)
 qreva (rev lf7) (Cons n Nil)
 lfappend lf7 (Cons n (rev lf8))
 lfappend lf7 (Cons n lf8)
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)

Problem: synth_101

Problem: synth_98

Problem: synth_118

Problem: synth_100

Problem: synth_66

Problem: synth_57

Problem: synth_59

Problem: synth_116
 Cons n Nil

Problem: synth_31

Problem: synth_8
 Cons n0 (qreva (rev y) Nil)
 rev (qreva y (Cons n0 Nil))
 rev (lfappend (rev y) (Cons n0 Nil))
 Cons n0 (rev (rev y))
 Cons n0 (lfappend y Nil)
 Cons n0 y

Problem: synth_34

Problem: synth_5
 lfappend lf7 (Cons n (rev (rev lf6)))
 lfappend lf7 (Cons n (lfappend lf6 Nil))
 rev (lfappend (rev lf6) (Cons n (rev lf7)))
 rev (qreva lf6 (Cons n (rev lf7)))
 qreva (rev lf7) (Cons n lf6)
 lfappend lf7 (Cons n lf6)

Problem: synth_37
 lfappend (lfappend lf7 (rev lf5)) lf6
 lfappend (lfappend lf7 lf5) lf6
 qreva (rev lf7) (lfappend lf5 lf6)
 qreva (rev lf7) (qreva lf5 lf6)
 lfappend lf7 (lfappend lf5 lf6)
 lfappend lf7 (qreva lf5 lf6)

Problem: synth_58

Problem: synth_53
 Cons n Nil

Problem: synth_2
 qreva (rev lf7) (lfappend lf4 Nil)
 lfappend lf7 (rev (rev lf4))
 lfappend lf7 (lfappend lf4 Nil)
 rev (qreva lf4 (rev lf7))
 qreva (rev lf7) lf4
 lfappend lf7 lf4

Problem: synth_95

Problem: synth_22

Problem: synth_18

Problem: synth_114

Problem: synth_21

Problem: synth_72
 Cons n (qreva lf8 (Cons n0 y))
 lfappend lf8 (Cons n (Cons n0 y))
 qreva lf8 (Cons n (Cons n0 y))
 Cons n (Cons n0 (lfappend y lf8))
 Cons n (Cons n0 (lfappend y Nil))
 Cons n (Cons n0 y)

Problem: synth_111
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_56
 Nil

Problem: synth_41

Problem: synth_49

Problem: synth_75
 qreva (qreva lf5 x) lf6
 lfappend (qreva x lf5) lf6
 lfappend (rev x) (lfappend lf5 lf6)
 lfappend (rev x) (qreva lf5 lf6)
 qreva x (lfappend lf5 lf6)
 qreva x (qreva lf5 lf6)

Problem: synth_25

Problem: synth_13
 lfappend lf3 (Cons n0 (rev (rev y)))
 lfappend lf3 (Cons n0 (lfappend y Nil))
 rev (lfappend (rev y) (Cons n0 (rev lf3)))
 rev (qreva y (Cons n0 (rev lf3)))
 qreva (rev lf3) (Cons n0 y)
 lfappend lf3 (Cons n0 y)

Problem: synth_6

Problem: synth_4
 Cons n (qreva (rev lf6) Nil)
 rev (qreva lf6 (Cons n Nil))
 rev (lfappend (rev lf6) (Cons n Nil))
 Cons n (rev (rev lf6))
 Cons n (lfappend lf6 Nil)
 Cons n lf6

Problem: synth_38

Problem: synth_105

Problem: synth_104

Problem: synth_65
 lfappend (lfappend lf7 Nil) (Cons n Nil)
 qreva (qreva lf7 Nil) (Cons n Nil)
 lfappend (rev (qreva lf7 Nil)) (Cons n Nil)
 qreva (rev lf7) (Cons n Nil)
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)

Problem: synth_23
 qreva x (Cons n (rev (rev lf6)))
 qreva x (Cons n (lfappend lf6 Nil))
 rev (lfappend (rev lf6) (Cons n x))
 rev (qreva lf6 (Cons n x))
 lfappend (rev x) (Cons n lf6)
 qreva x (Cons n lf6)

Problem: synth_88

Problem: synth_102

Problem: synth_19
 lfappend (rev x) (lfappend lf4 Nil)
 qreva x (rev (rev lf4))
 qreva x (lfappend lf4 Nil)
 rev (qreva lf4 x)
 lfappend (rev x) lf4
 qreva x lf4

Problem: synth_113
 rev (qreva y (Cons n0 (rev lf5)))
 rev (qreva y (Cons n0 lf5))
 lfappend (rev lf5) (Cons n0 y)
 qreva (rev lf5) (Cons n0 y)
 lfappend lf5 (Cons n0 y)
 qreva lf5 (Cons n0 y)

Problem: synth_10
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_24

Problem: synth_97

Problem: synth_92
 Nil

Problem: synth_32

Problem: synth_48

Problem: synth_51
 Nil

Problem: synth_112

Problem: synth_35

Problem: synth_115
 Cons n (qreva lf8 lf6)
 lfappend lf8 (Cons n lf6)
 qreva lf8 (Cons n lf6)
 Cons n (lfappend lf6 lf8)
 Cons n (lfappend lf6 Nil)
 Cons n lf6

Problem: synth_28

Problem: synth_110

Problem: synth_90

Problem: synth_73

Problem: synth_17

Problem: synth_29

Problem: synth_45
 qreva lf8 (Cons n Nil)
 lfappend (rev (rev lf8)) (Cons n Nil)
 lfappend (rev lf8) (Cons n Nil)
 Cons n (rev lf8)
 Cons n lf8
 Cons n Nil

Problem: synth_76

Problem: synth_26
 qreva (rev (rev x)) (Cons n (Cons n0 y))
 qreva (lfappend x Nil) (Cons n (Cons n0 y))
 lfappend (qreva x Nil) (Cons n (Cons n0 y))
 qreva x (Cons n (Cons n0 (lfappend y Nil)))
 lfappend (rev x) (Cons n (Cons n0 y))
 qreva x (Cons n (Cons n0 y))

Problem: synth_117

Problem: synth_70

Problem: synth_9
 rev (lfappend (rev y) (Cons n0 (Cons n Nil)))
 rev (qreva y (Cons n0 (Cons n Nil)))
 rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))
 Cons n (Cons n0 (rev (rev y)))
 Cons n (Cons n0 (lfappend y Nil))
 Cons n (Cons n0 y)

Problem: synth_30

Problem: synth_81

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_69
 Cons n Nil

Problem: synth_86
 lfappend (rev x) (Cons n (rev lf8))
 lfappend (rev x) (Cons n lf8)
 qreva x (Cons n (rev lf8))
 qreva x (Cons n lf8)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_55

Problem: synth_107

Problem: synth_71
 Cons n Nil

Problem: synth_15

Problem: synth_14

Problem: synth_120
 Cons n (qreva lf8 (Cons n0 y))
 lfappend lf8 (Cons n (Cons n0 y))
 qreva lf8 (Cons n (Cons n0 y))
 Cons n (Cons n0 (lfappend y lf8))
 Cons n (Cons n0 (lfappend y Nil))
 Cons n (Cons n0 y)

Problem: synth_103
 Nil

Problem: synth_87
 qreva x (Cons n (lfappend lf6 lf8))
 qreva x (Cons n (lfappend lf6 Nil))
 rev (lfappend (rev lf6) (Cons n x))
 rev (qreva lf6 (Cons n x))
 lfappend (rev x) (Cons n lf6)
 qreva x (Cons n lf6)

Problem: synth_79

Problem: synth_83

Problem: synth_12

Problem: synth_85

Problem: synth_62
 Nil

Problem: synth_74
 lfappend (rev x) (rev lf5)
 rev (lfappend lf5 x)
 rev (qreva lf5 x)
 lfappend (rev x) lf5
 qreva x (rev lf5)
 qreva x lf5

Problem: synth_50
 lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))
 qreva (qreva lf7 Nil) (Cons n (Cons n0 y))
 qreva (rev lf7) (Cons n (Cons n0 (lfappend y lf8)))
 qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))
 qreva (rev lf7) (Cons n (Cons n0 y))
 lfappend lf7 (Cons n (Cons n0 y))

Problem: synth_84

Problem: synth_20
 lfappend (qreva x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_94
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_108
 rev (qreva lf6 (rev lf5))
 rev (qreva lf6 lf5)
 lfappend (rev lf5) lf6
 qreva (rev lf5) lf6
 lfappend lf5 lf6
 qreva lf5 lf6

Problem: synth_119
 Cons n Nil

Problem: synth_7
 lfappend (rev (rev lf7)) (Cons n (Cons n0 y))
 lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))
 qreva (qreva lf7 Nil) (Cons n (Cons n0 y))
 qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))
 qreva (rev lf7) (Cons n (Cons n0 y))
 lfappend lf7 (Cons n (Cons n0 y))

Problem: synth_61

Problem: synth_27

Problem: synth_42

Problem: synth_16

Problem: synth_93

Problem: synth_40
 lfappend (lfappend lf7 (rev lf5)) (Cons n0 y)
 lfappend (lfappend lf7 lf5) (Cons n0 y)
 lfappend lf7 (lfappend (rev lf5) (Cons n0 y))
 lfappend lf7 (qreva (rev lf5) (Cons n0 y))
 lfappend lf7 (lfappend lf5 (Cons n0 y))
 lfappend lf7 (qreva lf5 (Cons n0 y))

Problem: synth_80

Problem: synth_33

Problem: synth_89

Problem: synth_47
 lfappend lf7 (Cons n (lfappend lf6 lf8))
 lfappend lf7 (Cons n (lfappend lf6 Nil))
 rev (lfappend (rev lf6) (Cons n (rev lf7)))
 rev (qreva lf6 (Cons n (rev lf7)))
 qreva (rev lf7) (Cons n lf6)
 lfappend lf7 (Cons n lf6)

Problem: synth_3

Problem: synth_52
 lfappend (lfappend lf7 Nil) (Cons n Nil)
 qreva (qreva lf7 Nil) (Cons n Nil)
 lfappend (rev (qreva lf7 Nil)) (Cons n Nil)
 qreva (rev lf7) (Cons n Nil)
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)

Problem: synth_44

Problem: synth_60
 Nil

Problem: synth_36
 qreva (rev lf7) (rev lf5)
 rev (lfappend lf5 (rev lf7))
 rev (qreva lf5 (rev lf7))
 qreva (rev lf7) lf5
 lfappend lf7 (rev lf5)
 lfappend lf7 lf5

Problem: synth_121

Problem: synth_82

Problem: synth_78
 qreva (qreva lf5 x) (Cons n0 y)
 lfappend (qreva x lf5) (Cons n0 y)
 qreva x (lfappend (rev lf5) (Cons n0 y))
 qreva x (qreva (rev lf5) (Cons n0 y))
 qreva x (lfappend lf5 (Cons n0 y))
 qreva x (qreva lf5 (Cons n0 y))

Problem: synth_99

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 10040 seconds
Lemmas:
Lemma candidate_1: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_3: forall (n0 : natural) (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_4: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_8: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_9: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_10: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_11: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_12: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_13: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_14: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_15: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_16: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_17: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_20: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_21: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_22: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_23: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_24: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_25: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_26: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_27: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_28: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_29: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_30: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_31: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_32: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_33: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_34: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_35: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_36: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_37: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_38: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_39: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_40: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_41: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_42: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_43: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_44: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_45: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_46: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_47: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_48: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_49: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_50: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_51: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_52: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_53: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_54: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_55: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_56: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_57: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_58: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_59: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_60: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_61: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_62: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_63: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_64: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_68: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_69: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_70: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_71: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_72: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_73: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_74: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_75: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_76: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_77: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_78: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_79: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_80: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_81: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_82: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_83: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_84: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_85: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_86: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_87: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_88: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_89: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_90: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (rev (rev lf6))) (lfappend lf3 lf6).
Lemma candidate_91: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_92: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (rev lf3))) (lfappend lf3 lf6).
Lemma candidate_93: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) lf6) (lfappend lf3 lf6).
Lemma candidate_94: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_95: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_96: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_97: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_98: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_99: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_100: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_101: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_102: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_103: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_104: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_105: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_106: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_107: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_108: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_109: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_110: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_111: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_112: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_113: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_114: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_115: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_116: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_117: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_118: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_119: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (rev (rev y)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_120: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (lfappend y Nil))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_121: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (lfappend (rev y) (Cons n0 (rev lf3))))   (lfappend lf3 (Cons n0 y)).
Lemma candidate_122: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (qreva y (Cons n0 (rev lf3)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_123: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (qreva (rev lf3) (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_124: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_125: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_126: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_127: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_128: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_129: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_130: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_131: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_132: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_133: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_134: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_135: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_136: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_137: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_138: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_139: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_140: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_141: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_142: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_143: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_144: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (rev (rev lf6))) (lfappend lf3 lf6).
Lemma candidate_145: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_146: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (rev lf3))) (lfappend lf3 lf6).
Lemma candidate_147: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) lf6) (lfappend lf3 lf6).
Lemma candidate_148: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_149: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_150: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_151: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_152: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_153: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_154: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_155: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_156: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_157: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_158: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_159: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_160: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_161: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_162: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_163: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_164: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_165: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_166: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_167: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_168: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_169: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_170: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_171: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_172: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_173: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (rev (rev y)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_174: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (lfappend y Nil))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_175: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (lfappend (rev y) (Cons n0 (rev lf3))))   (lfappend lf3 (Cons n0 y)).
Lemma candidate_176: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (qreva y (Cons n0 (rev lf3)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_177: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (qreva (rev lf3) (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_178: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_179: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_180: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_181: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_182: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_183: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_184: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_185: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_186: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_187: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_188: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_189: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_190: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_191: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_192: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_193: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_194: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_195: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_196: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_197: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_198: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_199: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_200: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_201: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_202: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_203: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_204: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_205: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_206: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_207: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_208: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_209: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_210: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_211: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_212: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_213: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_214: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_215: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_216: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_217: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_218: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_219: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_220: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_221: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_222: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_223: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_224: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_225: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_226: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_227: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_228: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_229: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_230: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_231: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_232: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_233: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_234: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_235: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_236: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_237: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_238: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_239: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_240: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_241: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_242: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_243: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_244: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_245: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_246: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_247: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_248: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_249: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_250: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_251: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_252: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_253: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_254: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_255: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_256: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_257: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_258: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_259: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_260: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_261: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_262: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_263: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_264: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_265: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_266: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_267: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_268: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_269: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_270: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_271: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_272: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_273: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_274: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_275: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_276: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_277: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_278: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_279: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_280: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_281: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_282: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (rev (rev lf6))) (lfappend lf3 lf6).
Lemma candidate_283: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_284: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (rev lf3))) (lfappend lf3 lf6).
Lemma candidate_285: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) lf6) (lfappend lf3 lf6).
Lemma candidate_286: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_287: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_288: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_289: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_290: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_291: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_292: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_293: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_294: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_295: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_296: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_297: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_298: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_299: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_300: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_301: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_302: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_303: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_304: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_305: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_306: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_307: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_308: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_309: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_310: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_311: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (rev (rev y)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_312: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (lfappend y Nil))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_313: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (lfappend (rev y) (Cons n0 (rev lf3))))   (lfappend lf3 (Cons n0 y)).
Lemma candidate_314: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (qreva y (Cons n0 (rev lf3)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_315: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (qreva (rev lf3) (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_316: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_317: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_318: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_319: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_320: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_321: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_322: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_323: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_324: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_325: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_326: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_327: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_328: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_329: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_330: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_331: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_332: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_333: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_334: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_335: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_336: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_337: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_338: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_339: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_340: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_341: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_342: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_343: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_344: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_345: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_346: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_347: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_348: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (rev (rev lf6))) (lfappend lf3 lf6).
Lemma candidate_349: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_350: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (rev lf3))) (lfappend lf3 lf6).
Lemma candidate_351: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) lf6) (lfappend lf3 lf6).
Lemma candidate_352: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_353: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_354: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_355: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_356: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_357: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_358: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_359: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_360: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_361: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_362: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_363: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_364: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_365: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_366: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_367: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_368: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_369: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_370: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_371: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_372: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_373: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_374: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_375: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_376: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 lf6).
Lemma candidate_377: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_378: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_379: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_380: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_381: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_382: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_383: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (rev (rev y)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_384: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (lfappend y Nil))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_385: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (lfappend (rev y) (Cons n0 (rev lf3))))   (lfappend lf3 (Cons n0 y)).
Lemma candidate_386: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (qreva y (Cons n0 (rev lf3)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_387: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (qreva (rev lf3) (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_388: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_389: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_390: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_391: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_392: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_393: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_394: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_395: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_396: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_397: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_398: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_399: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_400: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_401: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_402: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_403: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_404: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_405: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_406: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_407: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_408: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_409: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_410: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_411: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_412: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_413: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_414: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_415: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_416: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_417: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_418: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_419: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_420: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_421: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_422: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_423: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_424: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_425: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_426: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_427: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_428: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_429: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_430: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_431: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) (rev lf5)).
Lemma candidate_432: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (lfappend lf5 (rev lf7))).
Lemma candidate_433: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_434: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_435: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 (rev lf5)).
Lemma candidate_436: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 lf5).
Lemma candidate_437: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (lfappend (lfappend lf7 (rev lf5)) lf6).
Lemma candidate_438: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_439: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (qreva (rev lf7) (lfappend lf5 lf6)).
Lemma candidate_440: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (qreva (rev lf7) (qreva lf5 lf6)).
Lemma candidate_441: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (lfappend lf5 lf6)).
Lemma candidate_442: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (qreva lf5 lf6)).
Lemma candidate_443: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_444: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_445: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_446: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_447: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_448: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_449: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) (rev lf5)).
Lemma candidate_450: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (lfappend lf5 (rev lf7))).
Lemma candidate_451: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_452: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_453: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 (rev lf5)).
Lemma candidate_454: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 lf5).
Lemma candidate_455: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 (rev lf5)) (Cons n0 y)).
Lemma candidate_456: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_457: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend (rev lf5) (Cons n0 y))).
Lemma candidate_458: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_459: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend lf5 (Cons n0 y))).
Lemma candidate_460: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva lf5 (Cons n0 y))).
Lemma candidate_461: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_462: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_463: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_464: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_465: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_466: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_467: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (rev lf5)) lf6)   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_468: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_469: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (lfappend lf5 lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_470: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (qreva lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_471: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_472: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (qreva lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_473: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_474: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_475: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_476: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_477: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_478: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_479: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_480: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_481: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_482: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_483: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_484: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_485: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) (rev lf5)).
Lemma candidate_486: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (lfappend lf5 (rev lf7))).
Lemma candidate_487: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_488: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_489: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 (rev lf5)).
Lemma candidate_490: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 lf5).
Lemma candidate_491: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (lfappend (lfappend lf7 (rev lf5)) lf6).
Lemma candidate_492: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_493: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (qreva (rev lf7) (lfappend lf5 lf6)).
Lemma candidate_494: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (qreva (rev lf7) (qreva lf5 lf6)).
Lemma candidate_495: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (lfappend lf5 lf6)).
Lemma candidate_496: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (qreva lf5 lf6)).
Lemma candidate_497: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev lf5)) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_498: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_499: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_500: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_501: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_502: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_503: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_504: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_505: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_506: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_507: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_508: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_509: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_510: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_511: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_512: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_513: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_514: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_515: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) (rev lf5)).
Lemma candidate_516: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (lfappend lf5 (rev lf7))).
Lemma candidate_517: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_518: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_519: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 (rev lf5)).
Lemma candidate_520: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 lf5).
Lemma candidate_521: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 (rev lf5)) (Cons n0 y)).
Lemma candidate_522: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_523: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend (rev lf5) (Cons n0 y))).
Lemma candidate_524: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_525: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend lf5 (Cons n0 y))).
Lemma candidate_526: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva lf5 (Cons n0 y))).
Lemma candidate_527: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_528: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_529: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_530: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_531: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_532: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_533: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_534: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_535: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_536: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_537: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_538: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_539: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_540: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_541: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_542: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_543: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_544: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_545: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_546: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_547: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n (rev lf8))).
Lemma candidate_548: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n lf8)).
Lemma candidate_549: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_550: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_551: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 lf8))).
Lemma candidate_552: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_553: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_554: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_555: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_556: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_557: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_558: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_559: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_560: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_561: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_562: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_563: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_564: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_565: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_566: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_567: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_568: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_569: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_570: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_571: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_572: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_573: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_574: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_575: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_576: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_577: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n (rev lf8))).
Lemma candidate_578: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n lf8)).
Lemma candidate_579: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_580: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_581: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_582: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_583: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y lf8)))).
Lemma candidate_584: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_585: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_586: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_587: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_588: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_589: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_590: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_591: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_592: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_593: forall (n : natural) (lf7 : lst) (lf2 : lst) (lf6 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n (Nil))) lf6).
Lemma candidate_594: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_595: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_596: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_597: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_598: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_599: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_600: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (lfappend lf7 Nil) (Cons n Nil)).
Lemma candidate_601: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (qreva lf7 Nil) (Cons n Nil)).
Lemma candidate_602: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)).
Lemma candidate_603: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_604: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_605: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_606: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_607: @eq lst Nil (Nil).
Lemma candidate_608: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_609: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_610: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_611: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_612: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_613: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_614: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf7 (Cons n (Nil))) (Cons n0 y)).
Lemma candidate_615: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_616: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_617: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_618: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_619: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_620: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_621: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (lfappend lf7 Nil) (Cons n Nil)).
Lemma candidate_622: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (qreva lf7 Nil) (Cons n Nil)).
Lemma candidate_623: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)).
Lemma candidate_624: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_625: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_626: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_627: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_628: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_629: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_630: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_631: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_632: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_633: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_634: @eq lst Nil (Nil).
Lemma candidate_635: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 lf8)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_636: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_637: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_638: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (qreva lf6 (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_639: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n lf6))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_640: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_641: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_642: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_643: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_644: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_645: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_646: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_647: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_648: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_649: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_650: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_651: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_652: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_653: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_654: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_655: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_656: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_657: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_658: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_659: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_660: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_661: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n (rev lf8))).
Lemma candidate_662: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n lf8)).
Lemma candidate_663: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_664: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_665: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 lf8))).
Lemma candidate_666: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_667: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_668: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_669: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_670: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_671: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_672: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (qreva lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_673: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y lf8))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_674: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_675: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_676: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_677: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_678: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_679: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_680: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_681: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_682: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_683: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_684: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_685: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_686: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_687: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_688: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_689: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_690: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_691: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_692: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_693: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_694: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_695: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_696: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_697: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_698: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_699: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_700: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_701: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_702: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_703: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n (rev lf8))).
Lemma candidate_704: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n lf8)).
Lemma candidate_705: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_706: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_707: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_708: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_709: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y lf8)))).
Lemma candidate_710: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_711: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_712: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_713: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_714: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_715: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_716: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_717: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_718: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_719: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n (rev (rev lf6))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_720: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_721: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_722: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_723: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_724: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_725: forall (n : natural) (lf7 : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf7 lf4) (lfappend (lfappend lf7 (Cons n (Nil))) lf6).
Lemma candidate_726: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_727: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_728: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_729: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_730: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_731: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_732: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_733: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_734: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_735: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_736: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_737: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_738: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (lfappend lf7 Nil) (Cons n Nil)).
Lemma candidate_739: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (qreva lf7 Nil) (Cons n Nil)).
Lemma candidate_740: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)).
Lemma candidate_741: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_742: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_743: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_744: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_745: @eq lst Nil (Nil).
Lemma candidate_746: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_747: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_748: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_749: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_750: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_751: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_752: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (rev (rev lf7)) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_753: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_754: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (qreva lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_755: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_756: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_757: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_758: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4)   (lfappend (lfappend lf7 (Cons n (Nil))) (Cons n0 y)).
Lemma candidate_759: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_760: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_761: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_762: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_763: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_764: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_765: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_766: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_767: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_768: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_769: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_770: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 lf4).
Lemma candidate_771: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (lfappend lf7 Nil) (Cons n Nil)).
Lemma candidate_772: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (qreva lf7 Nil) (Cons n Nil)).
Lemma candidate_773: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)).
Lemma candidate_774: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_775: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_776: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_777: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_778: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_779: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_780: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_781: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_782: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_783: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_784: @eq lst Nil (Nil).
Lemma candidate_785: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (rev (qreva lf6 (rev lf5))))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_786: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (rev (qreva lf6 lf5)))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_787: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend (rev lf5) lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_788: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_789: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_790: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (qreva lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_791: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (rev lf5)) lf6)   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_792: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_793: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (lfappend lf5 lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_794: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (qreva lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_795: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_796: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (qreva lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_797: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_798: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_799: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) lf6).
Lemma candidate_800: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (rev lf7) (Cons n Nil)) lf6).
Lemma candidate_801: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_802: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) lf6).
Lemma candidate_803: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_804: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_805: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_806: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_807: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_808: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_809: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_810: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_811: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_812: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_813: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_814: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_815: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_816: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_817: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_818: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_819: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_820: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_821: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) (rev lf5)).
Lemma candidate_822: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (lfappend lf5 (rev lf7))).
Lemma candidate_823: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_824: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_825: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 (rev lf5)).
Lemma candidate_826: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 lf5).
Lemma candidate_827: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (lfappend (lfappend lf7 (rev lf5)) lf6).
Lemma candidate_828: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_829: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (qreva (rev lf7) (lfappend lf5 lf6)).
Lemma candidate_830: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (qreva (rev lf7) (qreva lf5 lf6)).
Lemma candidate_831: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (lfappend lf5 lf6)).
Lemma candidate_832: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (qreva lf5 lf6)).
Lemma candidate_833: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 (rev lf5)) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_834: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_835: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_836: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_837: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_838: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_839: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_840: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_841: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_842: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (rev lf7) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_843: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_844: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_845: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_846: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_847: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_848: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_849: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_850: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_851: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (rev (qreva y (Cons n0 (rev lf5)))))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_852: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (rev (qreva y (Cons n0 lf5))))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_853: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_854: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_855: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_856: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_857: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_858: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_859: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_860: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_861: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_862: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_863: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) (rev lf5)).
Lemma candidate_864: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (lfappend lf5 (rev lf7))).
Lemma candidate_865: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_866: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_867: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 (rev lf5)).
Lemma candidate_868: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (lfappend lf7 lf5).
Lemma candidate_869: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 (rev lf5)) (Cons n0 y)).
Lemma candidate_870: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_871: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend (rev lf5) (Cons n0 y))).
Lemma candidate_872: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_873: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend lf5 (Cons n0 y))).
Lemma candidate_874: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva lf5 (Cons n0 y))).
Lemma candidate_875: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_876: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_877: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_878: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_879: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_880: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_881: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_882: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_883: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_884: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_885: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_886: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_887: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (qreva lf8 lf6)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_888: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend lf8 (Cons n lf6)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_889: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (qreva lf8 (Cons n lf6)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_890: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 lf8)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_891: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_892: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_893: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 lf8)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_894: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_895: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_896: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (qreva lf6 (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_897: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n lf6))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_898: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n lf8)) lf6).
Lemma candidate_899: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_900: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_901: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_902: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) lf6).
Lemma candidate_903: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (rev lf7) (Cons n Nil)) lf6).
Lemma candidate_904: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_905: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) lf6).
Lemma candidate_906: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_907: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_908: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_909: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_910: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_911: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_912: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_913: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_914: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_915: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_916: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_917: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_918: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_919: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_920: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_921: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_922: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_923: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n lf6)).
Lemma candidate_924: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_925: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_926: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_927: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_928: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_929: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_930: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_931: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_932: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n (rev lf8))).
Lemma candidate_933: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n lf8)).
Lemma candidate_934: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_935: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_936: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 lf8))).
Lemma candidate_937: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_938: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_939: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_940: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_941: forall (n : natural) (lf7 : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_942: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_943: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (qreva lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_944: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y lf8))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_945: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_946: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_947: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_948: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_949: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (qreva lf8 (Cons n0 y))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_950: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (lfappend lf8 (Cons n (Cons n0 y))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_951: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (qreva lf8 (Cons n (Cons n0 y))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_952: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 (lfappend y lf8))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_953: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_954: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y)).
Lemma candidate_955: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_956: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_957: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_958: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (rev lf7) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_959: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_960: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_961: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_962: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_963: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_964: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_965: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_966: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_967: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_968: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_969: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_970: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_971: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_972: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_973: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_974: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_975: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_976: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_977: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_978: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_979: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_980: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_981: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_982: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_983: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_984: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_985: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_986: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_987: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_988: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_989: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_990: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_991: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_992: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_993: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n (rev lf8))).
Lemma candidate_994: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n lf8)).
Lemma candidate_995: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend lf7 (Cons n Nil)).
Lemma candidate_996: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_997: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_998: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_999: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y lf8)))).
Lemma candidate_1000: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1001: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_1002: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf7 (Cons n lf8)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_1003: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1004: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1005: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1006: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1007: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1008: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1009: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1010: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1011: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_1012: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1013: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev lf5)).
Lemma candidate_1014: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x lf5).
Lemma candidate_1015: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva (qreva lf5 x) lf6).
Lemma candidate_1016: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (lfappend (qreva x lf5) lf6).
Lemma candidate_1017: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (lfappend lf5 lf6)).
Lemma candidate_1018: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (qreva lf5 lf6)).
Lemma candidate_1019: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (lfappend lf5 lf6)).
Lemma candidate_1020: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (qreva lf5 lf6)).
Lemma candidate_1021: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1022: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1023: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1024: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1025: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1026: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1027: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1028: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1029: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1030: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1031: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1032: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1033: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva (qreva lf5 x) (Cons n0 y)).
Lemma candidate_1034: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (lfappend (qreva x lf5) (Cons n0 y)).
Lemma candidate_1035: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend (rev lf5) (Cons n0 y))).
Lemma candidate_1036: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_1037: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend lf5 (Cons n0 y))).
Lemma candidate_1038: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva lf5 (Cons n0 y))).
Lemma candidate_1039: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1040: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1041: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_1042: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1043: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev lf5)).
Lemma candidate_1044: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x lf5).
Lemma candidate_1045: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1046: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1047: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1048: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1049: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1050: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1051: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1052: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1053: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1054: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1055: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1056: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1057: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 x) lf6) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1058: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf5) lf6) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1059: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (lfappend lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1060: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (qreva lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1061: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva x (lfappend lf5 lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1062: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva x (qreva lf5 lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1063: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1064: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1065: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1066: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1067: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1068: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1069: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1070: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1071: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1072: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1073: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1074: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1075: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1076: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1077: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_1078: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1079: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev lf5)).
Lemma candidate_1080: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x lf5).
Lemma candidate_1081: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva (qreva lf5 x) lf6).
Lemma candidate_1082: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (lfappend (qreva x lf5) lf6).
Lemma candidate_1083: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (lfappend lf5 lf6)).
Lemma candidate_1084: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (qreva lf5 lf6)).
Lemma candidate_1085: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (lfappend lf5 lf6)).
Lemma candidate_1086: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (qreva lf5 lf6)).
Lemma candidate_1087: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1088: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1089: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1090: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1091: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1092: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1093: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (qreva lf5 x) (Cons n0 y))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1094: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva x lf5) (Cons n0 y))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1095: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1096: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1097: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1098: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (qreva lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1099: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1100: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1101: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1102: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1103: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1104: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1105: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1106: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1107: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1108: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1109: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1110: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1111: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva (qreva lf5 x) (Cons n0 y)).
Lemma candidate_1112: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (lfappend (qreva x lf5) (Cons n0 y)).
Lemma candidate_1113: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend (rev lf5) (Cons n0 y))).
Lemma candidate_1114: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_1115: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend lf5 (Cons n0 y))).
Lemma candidate_1116: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva lf5 (Cons n0 y))).
Lemma candidate_1117: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1118: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1119: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_1120: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1121: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev lf5)).
Lemma candidate_1122: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x lf5).
Lemma candidate_1123: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1124: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1125: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1126: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1127: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1128: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1129: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1130: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1131: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1132: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1133: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1134: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1135: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1136: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1137: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1138: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1139: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1140: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1141: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1142: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1143: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_1144: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_1145: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_1146: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1147: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1148: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1149: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1150: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1151: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1152: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1153: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (qreva x (Cons n (lfappend lf6 lf8))).
Lemma candidate_1154: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1155: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1156: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1157: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1158: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_1159: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1160: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1161: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1162: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1163: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1164: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1165: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1166: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1167: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1168: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1169: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1170: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1171: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1172: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1173: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_1174: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_1175: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_1176: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1177: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1178: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1179: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y lf8)))).
Lemma candidate_1180: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1181: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1182: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1183: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1184: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1185: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1186: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1187: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1188: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1189: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1190: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1191: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1192: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1193: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1194: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1195: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1196: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1197: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1198: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1199: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1200: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1201: forall (n : natural) (x : lst) (lf2 : lst) (lf6 : lst), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n (Nil))) lf6).
Lemma candidate_1202: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1203: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1204: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1205: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1206: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1207: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1208: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1209: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1210: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1211: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1212: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1213: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1214: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1215: @eq lst Nil (Nil).
Lemma candidate_1216: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1217: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1218: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1219: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1220: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1221: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1222: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1223: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1224: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1225: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1226: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1227: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_1228: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1229: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1230: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1231: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1232: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1233: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1234: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst lf2 (lfappend (lfappend (rev x) (Cons n (Nil))) (Cons n0 y)).
Lemma candidate_1235: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_1236: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1237: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1238: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1239: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1240: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1241: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1242: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1243: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1244: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1245: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1246: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1247: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1248: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1249: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1250: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1251: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1252: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1253: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1254: @eq lst Nil (Nil).
Lemma candidate_1255: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1256: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1257: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1258: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1259: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1260: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1261: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva x (Cons n (lfappend lf6 lf8)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1262: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva x (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1263: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n x)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1264: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (qreva lf6 (Cons n x)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1265: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1266: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf6)) (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1267: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1268: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1269: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1270: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1271: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1272: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1273: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1274: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1275: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1276: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1277: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1278: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1279: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1280: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1281: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_1282: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_1283: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_1284: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1285: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1286: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1287: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1288: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1289: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1290: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1291: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (qreva x (Cons n (lfappend lf6 lf8))).
Lemma candidate_1292: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1293: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1294: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1295: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1296: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_1297: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1298: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1299: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1300: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1301: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1302: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1303: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1304: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1305: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y lf8))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1306: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1307: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1308: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1309: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1310: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1311: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1312: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1313: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1314: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1315: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1316: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1317: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1318: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1319: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1320: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1321: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1322: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1323: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_1324: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_1325: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_1326: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1327: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1328: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1329: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y lf8)))).
Lemma candidate_1330: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1331: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1332: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1333: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1334: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1335: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1336: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1337: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1338: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1339: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1340: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1341: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1342: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1343: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1344: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1345: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1346: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1347: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1348: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1349: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1350: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1351: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n (rev (rev lf6))))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1352: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1353: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1354: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1355: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1356: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n lf6)) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1357: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) lf4)   (lfappend (lfappend (rev x) (Cons n (Nil))) lf6).
Lemma candidate_1358: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1359: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1360: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1361: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1362: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1363: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1364: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1365: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1366: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1367: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1368: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1369: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1370: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1371: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1372: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1373: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1374: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1375: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1376: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1377: @eq lst Nil (Nil).
Lemma candidate_1378: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1379: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1380: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1381: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1382: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1383: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1384: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1385: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1386: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1387: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1388: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1389: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_1390: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1391: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1392: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1393: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1394: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1395: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1396: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva (rev (rev x)) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1397: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1398: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1399: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1400: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1401: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1402: forall (n0 : natural) (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4)   (lfappend (lfappend (rev x) (Cons n (Nil))) (Cons n0 y)).
Lemma candidate_1403: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_1404: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1405: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1406: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1407: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1408: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1409: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_1410: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_1411: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_1412: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_1413: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) lf4).
Lemma candidate_1414: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x lf4).
Lemma candidate_1415: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1416: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1417: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1418: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1419: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1420: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1421: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1422: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1423: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1424: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1425: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1426: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1427: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1428: @eq lst Nil (Nil).
Lemma candidate_1429: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1430: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1431: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1432: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1433: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1434: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1435: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 x) lf6) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1436: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf5) lf6) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1437: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (lfappend lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1438: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (qreva lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1439: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva x (lfappend lf5 lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1440: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva x (qreva lf5 lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1441: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (rev (qreva lf6 (rev lf5))))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1442: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (rev (qreva lf6 lf5)))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1443: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (lfappend (rev lf5) lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1444: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (qreva (rev lf5) lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1445: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (lfappend lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1446: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (qreva lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1447: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) lf6).
Lemma candidate_1448: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) lf6).
Lemma candidate_1449: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) lf6).
Lemma candidate_1450: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) lf6).
Lemma candidate_1451: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (qreva x (Cons n Nil)) lf6).
Lemma candidate_1452: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1453: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1454: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1455: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1456: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_1457: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1458: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_1459: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1460: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1461: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1462: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_1463: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1464: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_1465: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_1466: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_1467: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_1468: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_1469: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_1470: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_1471: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1472: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1473: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_1474: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1475: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev lf5)).
Lemma candidate_1476: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x lf5).
Lemma candidate_1477: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva (qreva lf5 x) lf6).
Lemma candidate_1478: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (lfappend (qreva x lf5) lf6).
Lemma candidate_1479: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (lfappend lf5 lf6)).
Lemma candidate_1480: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (qreva lf5 lf6)).
Lemma candidate_1481: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (lfappend lf5 lf6)).
Lemma candidate_1482: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (qreva lf5 lf6)).
Lemma candidate_1483: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1484: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1485: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1486: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1487: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1488: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1489: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (qreva lf5 x) (Cons n0 y))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1490: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva x lf5) (Cons n0 y))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1491: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1492: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1493: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1494: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (qreva lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1495: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_1496: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1497: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1498: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1499: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1500: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1501: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1502: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1503: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1504: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1505: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1506: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1507: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev (qreva y (Cons n0 (rev lf5)))))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1508: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev (qreva y (Cons n0 lf5))))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1509: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1510: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1511: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1512: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (qreva lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1513: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_1514: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1515: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1516: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1517: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1518: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1519: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva (qreva lf5 x) (Cons n0 y)).
Lemma candidate_1520: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (lfappend (qreva x lf5) (Cons n0 y)).
Lemma candidate_1521: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend (rev lf5) (Cons n0 y))).
Lemma candidate_1522: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_1523: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend lf5 (Cons n0 y))).
Lemma candidate_1524: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva lf5 (Cons n0 y))).
Lemma candidate_1525: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_1526: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (lfappend lf5 x)).
Lemma candidate_1527: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_1528: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (lfappend (rev x) lf5).
Lemma candidate_1529: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x (rev lf5)).
Lemma candidate_1530: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (qreva x lf5).
Lemma candidate_1531: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1532: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1533: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1534: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1535: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1536: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1537: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_1538: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_1539: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_1540: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_1541: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_1542: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_1543: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1544: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1545: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1546: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1547: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1548: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1549: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva x (Cons n (lfappend lf6 lf8)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1550: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva x (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1551: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n x)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1552: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (rev (qreva lf6 (Cons n x)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1553: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1554: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf6)) (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1555: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) lf6).
Lemma candidate_1556: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) lf6).
Lemma candidate_1557: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) lf6).
Lemma candidate_1558: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) lf6).
Lemma candidate_1559: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (qreva x (Cons n Nil)) lf6).
Lemma candidate_1560: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1561: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (qreva lf8 lf6)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1562: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (lfappend lf8 (Cons n lf6)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1563: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (qreva lf8 (Cons n lf6)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1564: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (lfappend lf6 lf8)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1565: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1566: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n lf8)) lf6).
Lemma candidate_1567: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1568: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1569: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1570: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1571: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_1572: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1573: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_1574: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1575: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1576: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1577: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_1578: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1579: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_1580: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1581: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1582: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_1583: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_1584: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_1585: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1586: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_1587: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_1588: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_1589: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_1590: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_1591: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_1592: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1593: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1594: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1595: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1596: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1597: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1598: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (qreva x (Cons n (lfappend lf6 lf8))).
Lemma candidate_1599: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1600: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1601: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1602: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1603: forall (n : natural) (x : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_1604: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1605: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1606: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1607: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1608: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1609: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1610: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1611: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1612: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y lf8))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1613: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1614: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1615: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1616: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1617: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1618: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1619: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1620: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1621: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1622: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_1623: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1624: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1625: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1626: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1627: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1628: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1629: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (qreva lf8 (Cons n0 y))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1630: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (lfappend lf8 (Cons n (Cons n0 y))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1631: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (qreva lf8 (Cons n (Cons n0 y))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1632: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 (lfappend y lf8))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1633: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1634: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y)).
Lemma candidate_1635: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_1636: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1637: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1638: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1639: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1640: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1641: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_1642: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_1643: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_1644: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_1645: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_1646: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (lfappend (rev x) (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1647: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1648: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1649: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y lf8)))).
Lemma candidate_1650: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1651: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_1652: forall (n0 : natural) (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n lf8)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1653: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1654: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_1655: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_1656: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_1657: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_1658: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 y).
Lemma candidate_1659: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1660: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1661: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1662: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1663: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1664: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1665: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_1666: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_1667: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_1668: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_1669: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_1670: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 y)).
Lemma candidate_1671: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_1672: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1673: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_1674: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_1675: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_1676: forall (x : lst), @eq lst (rev x) (rev x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 11590 seconds
Duplicates removed: 1335
Filtered by Quickchick: 121
Filtered by script: 35
Remaining: 185

Lemmas: 
Lemma candidate_62: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_8: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_225: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_63: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_9: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_61: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_60: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_7: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_222: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_224: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_223: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_59: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_50: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (rev (rev y))).
Lemma candidate_221: forall (x : lst), @eq lst (rev x) (lfappend (qreva x Nil) Nil).
Lemma candidate_26: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev (rev lf6))).
Lemma candidate_51: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (lfappend y Nil)).
Lemma candidate_434: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (qreva (rev lf7) lf5).
Lemma candidate_93: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) lf6) (lfappend lf3 lf6).
Lemma candidate_69: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) lf6).
Lemma candidate_27: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (lfappend lf6 Nil)).
Lemma candidate_15: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) lf4).
Lemma candidate_48: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (qreva y (Cons n0 Nil))).
Lemma candidate_47: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (Cons n0 (qreva (rev y) Nil)).
Lemma candidate_1011: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf5) (rev (qreva lf5 x)).
Lemma candidate_218: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (rev (qreva lf4 x)).
Lemma candidate_24: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (qreva lf6 (Cons n Nil))).
Lemma candidate_23: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (qreva (rev lf6) Nil)).
Lemma candidate_433: forall (lf7 : lst) (lf5 : lst), @eq lst (lfappend lf7 lf5) (rev (qreva lf5 (rev lf7))).
Lemma candidate_92: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (rev lf3))) (lfappend lf3 lf6).
Lemma candidate_68: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (rev (qreva lf6 (rev lf3))).
Lemma candidate_14: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (rev (qreva lf4 (rev lf7))).
Lemma candidate_216: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (rev (rev lf4))).
Lemma candidate_90: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (rev (rev lf6))) (lfappend lf3 lf6).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (rev (rev lf6))).
Lemma candidate_12: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (rev (rev lf4))).
Lemma candidate_49: forall (n0 : natural) (y : lst), @eq lst (Cons n0 y) (rev (lfappend (rev y) (Cons n0 Nil))).
Lemma candidate_217: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (qreva x (lfappend lf4 Nil)).
Lemma candidate_91: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (lfappend lf3 (lfappend lf6 Nil)).
Lemma candidate_25: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (rev (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_13: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (lfappend lf7 (lfappend lf4 Nil)).
Lemma candidate_56: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (rev (rev y)))).
Lemma candidate_89: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva (rev lf3) (lfappend lf6 Nil)) (lfappend lf3 lf6).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf3 lf6) (qreva (rev lf3) (lfappend lf6 Nil)).
Lemma candidate_11: forall (lf7 : lst) (lf4 : lst), @eq lst (lfappend lf7 lf4) (qreva (rev lf7) (lfappend lf4 Nil)).
Lemma candidate_123: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (qreva (rev lf3) (Cons n0 y)) (lfappend lf3 (Cons n0 y)).
Lemma candidate_81: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (qreva (rev lf3) (Cons n0 y)).
Lemma candidate_57: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (Cons n (Cons n0 (lfappend y Nil))).
Lemma candidate_603: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (rev lf7) (Cons n Nil)).
Lemma candidate_545: forall (n : natural) (lf7 : lst) (lf8 : lst), @eq lst (lfappend lf7 (Cons n lf8)) (qreva (rev lf7) (Cons n lf8)).
Lemma candidate_33: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_54: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (qreva y (Cons n0 (Cons n Nil)))).
Lemma candidate_236: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (qreva lf6 (Cons n x))).
Lemma candidate_215: forall (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) lf4) (lfappend (rev x) (lfappend lf4 Nil)).
Lemma candidate_122: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (qreva y (Cons n0 (rev lf3)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_80: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (rev (qreva y (Cons n0 (rev lf3)))).
Lemma candidate_1057: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 x) lf6) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1015: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva (qreva lf5 x) lf6).
Lemma candidate_601: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (qreva (qreva lf7 Nil) (Cons n Nil)).
Lemma candidate_32: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_119: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (rev (rev y)))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_77: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (rev (rev y)))).
Lemma candidate_1061: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva x (lfappend lf5 lf6)) (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1019: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6) (qreva x (lfappend lf5 lf6)).
Lemma candidate_233: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_605: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil)) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_471: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (lfappend lf5 lf6)) (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_441: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6) (lfappend lf7 (lfappend lf5 lf6)).
Lemma candidate_29: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6)) (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_120: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 (lfappend y Nil))) (lfappend lf3 (Cons n0 y)).
Lemma candidate_78: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y)) (lfappend lf3 (Cons n0 (lfappend y Nil))).
Lemma candidate_53: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y)) (rev (lfappend (rev y) (Cons n0 (Cons n Nil)))).
Lemma candidate_1451: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (lfappend (qreva x (Cons n Nil)) lf6).
Lemma candidate_1356: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n lf6)) (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1227: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6) (qreva x (Cons n lf6)).
Lemma candidate_1209: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1208: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_235: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_234: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6)) (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_788: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_600: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (lfappend lf7 Nil) (Cons n Nil)).
Lemma candidate_599: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n lf6)).
Lemma candidate_469: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (lfappend lf5 lf6))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_439: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 lf5) lf6)   (qreva (rev lf7) (lfappend lf5 lf6)).
Lemma candidate_30: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_4: forall (lf7 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_121: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (rev (lfappend (rev y) (Cons n0 (rev lf3))))   (lfappend lf3 (Cons n0 y)).
Lemma candidate_79: forall (lf3 : lst) (n0 : natural) (y : lst), @eq lst (lfappend lf3 (Cons n0 y))   (rev (lfappend (rev y) (Cons n0 (rev lf3)))).
Lemma candidate_800: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (rev lf7) (Cons n Nil)) lf6).
Lemma candidate_723: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (qreva (rev lf7) (Cons n lf6))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_602: forall (n : natural) (lf7 : lst), @eq lst (lfappend lf7 (Cons n Nil))   (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)).
Lemma candidate_598: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (qreva (rev lf7) (Cons n lf6)).
Lemma candidate_31: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_45: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_1354: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1225: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n x))).
Lemma candidate_1210: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1059: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (lfappend lf5 lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1017: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) lf5) lf6)   (lfappend (rev x) (lfappend lf5 lf6)).
Lemma candidate_785: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf7 (rev (qreva lf6 (rev lf5))))   (lfappend (lfappend lf7 lf5) lf6).
Lemma candidate_1444: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (qreva (rev lf5) lf6))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1226: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (lfappend (rev x) (Cons n lf6)).
Lemma candidate_1211: forall (n : natural) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1093: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (qreva lf5 x) (Cons n0 y))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1033: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva (qreva lf5 x) (Cons n0 y)).
Lemma candidate_798: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_722: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (rev (qreva lf6 (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_597: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (qreva lf6 (Cons n (rev lf7)))).
Lemma candidate_43: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_1351: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n (rev (rev lf6))))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1222: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (rev (rev lf6)))).
Lemma candidate_1097: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1037: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (lfappend lf5 (Cons n0 y))).
Lemma candidate_802: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) lf6).
Lemma candidate_719: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n (rev (rev lf6))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_594: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (rev (rev lf6)))).
Lemma candidate_257: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_501: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_459: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (lfappend lf5 (Cons n0 y))).
Lemma candidate_55: forall (n0 : natural) (n : natural) (y : lst), @eq lst (Cons n (Cons n0 y))   (rev (lfappend (lfappend (rev y) (Cons n0 Nil)) (Cons n Nil))).
Lemma candidate_41: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_1448: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) lf6).
Lemma candidate_1447: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) lf6).
Lemma candidate_1441: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev x) (rev (qreva lf6 (rev lf5))))   (lfappend (lfappend (rev x) lf5) lf6).
Lemma candidate_1353: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n x)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1352: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva x (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend (rev x) (Cons n Nil)) lf6).
Lemma candidate_1224: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n x))).
Lemma candidate_1223: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) lf6)   (qreva x (Cons n (lfappend lf6 Nil))).
Lemma candidate_1505: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1401: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1240: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 y))).
Lemma candidate_1096: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1036: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) lf5) (Cons n0 y))   (qreva x (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_797: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) lf6).
Lemma candidate_720: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n (lfappend lf6 Nil)))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_595: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (lfappend lf7 (Cons n (lfappend lf6 Nil))).
Lemma candidate_260: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_259: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_258: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_620: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend lf7 (Cons n (Cons n0 y))).
Lemma candidate_500: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_458: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf7 lf5) (Cons n0 y))   (lfappend lf7 (qreva (rev lf5) (Cons n0 y))).
Lemma candidate_42: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_3: forall (n0 : natural) (lf7 : lst) (n : natural) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_799: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend lf7 (Cons n lf6))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) lf6).
Lemma candidate_721: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf6) (Cons n (rev lf7))))   (lfappend (lfappend lf7 (Cons n Nil)) lf6).
Lemma candidate_596: forall (n : natural) (lf7 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) lf6)   (rev (lfappend (rev lf6) (Cons n (rev lf7)))).
Lemma candidate_842: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (rev lf7) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_756: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_619: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 y))).
Lemma candidate_44: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1449: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) lf6).
Lemma candidate_1511: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_851: forall (n0 : natural) (lf7 : lst) (y : lst) (lf5 : lst), @eq lst (lfappend lf7 (rev (qreva y (Cons n0 (rev lf5)))))   (lfappend (lfappend lf7 lf5) (Cons n0 y)).
Lemma candidate_1450: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) (Cons n lf6))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) lf6).
Lemma candidate_1510: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (qreva (rev lf5) (Cons n0 y)))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1239: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (rev x) (Cons n (Cons n0 y))).
Lemma candidate_840: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (qreva (qreva lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_754: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (qreva lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_617: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (qreva lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_1396: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva (rev (rev x)) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1235: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (rev (rev x)) (Cons n (Cons n0 y))).
Lemma candidate_844: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev lf7)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_752: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (rev (rev lf7)) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_615: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (rev (rev lf7)) (Cons n (Cons n0 y))).
Lemma candidate_1507: forall (n0 : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev (qreva y (Cons n0 (rev lf5)))))   (lfappend (lfappend (rev x) lf5) (Cons n0 y)).
Lemma candidate_1502: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (qreva x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1501: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (qreva (lfappend x Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1399: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva x (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1398: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1397: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1238: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva x (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1237: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (lfappend (qreva x Nil) (Cons n (Cons n0 y))).
Lemma candidate_1236: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) (Cons n Nil)) (Cons n0 y))   (qreva (lfappend x Nil) (Cons n (Cons n0 y))).
Lemma candidate_839: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (lfappend lf7 Nil) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_753: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y)))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_616: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (lfappend (lfappend lf7 Nil) (Cons n (Cons n0 y))).
Lemma candidate_841: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend lf7 (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (qreva lf7 Nil)) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_755: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil))))   (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y)).
Lemma candidate_618: forall (n0 : natural) (n : natural) (lf7 : lst) (y : lst), @eq lst (lfappend (lfappend lf7 (Cons n Nil)) (Cons n0 y))   (qreva (rev lf7) (Cons n (Cons n0 (lfappend y Nil)))).
Lemma candidate_1503: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) (Cons n0 y)).
Lemma candidate_1504: forall (n0 : natural) (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n (Cons n0 y)))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) (Cons n0 y)).
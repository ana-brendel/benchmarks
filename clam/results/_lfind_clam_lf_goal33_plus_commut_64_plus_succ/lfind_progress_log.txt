File Information
- File name: goal33
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal33_plus_commut_64_plus_succ
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal33_plus_commut_64_plus_succ
- Namespace: adtind
- Proof name: plus_commut
- Theorem: Theorem plus_commut: forall x0 y0 : natural, @eq natural (plus x0 y0) (plus y0 x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (Succ (plus x y)) (plus y (Succ x))

* Hypothesis:
IHx : @eq natural (plus x y) (plus y x)
x : natural
y : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
Succ x : natural
plus y (Succ x) : natural
@eq natural (plus x y) (plus y x) : Prop
x : natural
@eq natural (Succ (plus x y)) (plus y (Succ x)) : Prop
plus y x : natural
Succ (plus x y) : natural
y : natural
plus x y : natural
natural : Set

* Functions:
Succ  : forall _ : natural, natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = plus x y
lf1 : natural = plus y (Succ x)
lf4 : natural = Succ x
lf2 : natural = Succ (plus x y)

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj2: forall (lf1 : natural) (lf3 : natural), @eq natural (Succ lf3) lf1.
Lemma conj5: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural lf2 (plus y lf4).
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y lf4).
Lemma conj7: forall (lf2 : natural) (x : natural) (y : natural), @eq natural lf2 (plus y (Succ x)).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y (Succ x)).
Lemma conj10: forall (x : natural) (lf1 : natural) (y : natural), @eq natural (Succ (plus x y)) lf1.
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus x y)) (plus y lf4).
Lemma conj16: forall (x : natural) (y : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).


<---VALIDITY CHECKS--->
Time elapsed: 17 seconds
Valid:
Lemma conj16: forall (x : natural) (y : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).

Invalid:
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus x y)) (plus y lf4).
Lemma conj10: forall (x : natural) (lf1 : natural) (y : natural), @eq natural (Succ (plus x y)) lf1.
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y (Succ x)).
Lemma conj7: forall (lf2 : natural) (x : natural) (y : natural), @eq natural lf2 (plus y (Succ x)).
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y lf4).
Lemma conj5: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural lf2 (plus y lf4).
Lemma conj2: forall (lf1 : natural) (lf3 : natural), @eq natural (Succ lf3) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 25 seconds
Generalizations:
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus x y)) (plus y lf4).
Lemma conj10: forall (x : natural) (lf1 : natural) (y : natural), @eq natural (Succ (plus x y)) lf1.
Lemma conj8_imp: forall (x : natural) (y : natural) (lf3 : natural), forall _ : @eq natural lf3 (plus y x),
@eq natural (Succ lf3) (plus y (Succ x)).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y (Succ x)).
Lemma conj7: forall (lf2 : natural) (x : natural) (y : natural), @eq natural lf2 (plus y (Succ x)).
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y lf4).
Lemma conj5: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural lf2 (plus y lf4).
Lemma conj2: forall (lf1 : natural) (lf3 : natural), @eq natural (Succ lf3) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 37 seconds
Valid:
Lemma conj8_imp: forall (x : natural) (y : natural) (lf3 : natural), forall _ : @eq natural lf3 (plus y x),
@eq natural (Succ lf3) (plus y (Succ x)).

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj2: forall (lf1 : natural) (lf3 : natural), @eq natural (Succ lf3) lf1.
Lemma conj5: forall (lf2 : natural) (lf4 : natural) (y : natural), @eq natural lf2 (plus y lf4).
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y lf4).
Lemma conj7: forall (lf2 : natural) (x : natural) (y : natural), @eq natural lf2 (plus y (Succ x)).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (Succ lf3) (plus y (Succ x)).
Lemma conj10: forall (x : natural) (lf1 : natural) (y : natural), @eq natural (Succ (plus x y)) lf1.
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (Succ (plus x y)) (plus y lf4).


<---CREATE SKETCHES--->
Time elapsed: 37 seconds
Sketches:
Sketch conj2_sketch0 : @eq natural (##hole##) lf1
Sketch conj2_term_sketch0 : @eq natural (Succ lf3) (##hole##)
Sketch conj5_sketch0 : @eq natural lf2 (##hole##)
Sketch conj5_term_sketch0 : @eq natural (plus y lf4) (##hole##)
Sketch conj6_sketch0 : @eq natural (##hole##) (plus y lf4)
Sketch conj6_sketch1 : @eq natural (Succ lf3) (##hole##)
Sketch conj6_term_sketch0 : @eq natural (Succ lf3) (##hole##)
Sketch conj6_term_sketch1 : @eq natural (plus y lf4) (##hole##)
Sketch conj7_sketch0 : @eq natural lf2 (plus y (##hole##))
Sketch conj7_sketch1 : @eq natural lf2 (##hole##)
Sketch conj7_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj7_term_sketch1 : @eq natural (plus y (Succ x)) (##hole##)
Sketch conj8_sketch0 : @eq natural (Succ lf3) (plus y (##hole##))
Sketch conj8_sketch1 : @eq natural (Succ lf3) (##hole##)
Sketch conj8_sketch2 : @eq natural (##hole##) (plus y (Succ x))
Sketch conj8_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj8_term_sketch1 : @eq natural (plus y (Succ x)) (##hole##)
Sketch conj8_term_sketch2 : @eq natural (Succ lf3) (##hole##)
Sketch conj10_sketch0 : @eq natural (##hole##) lf1
Sketch conj10_sketch1 : @eq natural (Succ (##hole##)) lf1
Sketch conj10_term_sketch0 : @eq natural (Succ (plus x y)) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (plus x y) (##hole##)
Sketch conj14_sketch0 : @eq natural (Succ (plus x y)) (##hole##)
Sketch conj14_sketch1 : @eq natural (##hole##) (plus y lf4)
Sketch conj14_sketch2 : @eq natural (Succ (##hole##)) (plus y lf4)
Sketch conj14_term_sketch0 : @eq natural (plus y lf4) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (Succ (plus x y)) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (plus x y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 61 seconds
Problems per Sketch:
Sketch conj7_sketch1 --> Problem  synth_3
Sketch conj6_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj10_term_sketch0 --> Problem  synth_7
Sketch conj14_sketch2 --> Problem  synth_11
Sketch conj10_term_sketch1 --> Problem  synth_10
Sketch conj7_term_sketch0 --> Problem  synth_6
Sketch conj14_term_sketch2 --> Problem  synth_10
Sketch conj6_term_sketch1 --> Problem  synth_4
Sketch conj8_sketch1 --> Problem  synth_2
Sketch conj7_sketch0 --> Problem  synth_5
Sketch conj6_term_sketch0 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj14_sketch0 --> Problem  synth_7
Sketch conj8_term_sketch0 --> Problem  synth_6
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj8_sketch2 --> Problem  synth_7
Sketch conj8_sketch0 --> Problem  synth_8
Sketch conj14_term_sketch1 --> Problem  synth_7
Sketch conj7_term_sketch1 --> Problem  synth_7
Sketch conj8_term_sketch1 --> Problem  synth_7
Sketch conj10_sketch0 --> Problem  synth_1
Sketch conj8_term_sketch2 --> Problem  synth_2
Sketch conj5_term_sketch0 --> Problem  synth_4
Sketch conj10_sketch1 --> Problem  synth_9
Sketch conj6_sketch0 --> Problem  synth_4
Sketch conj14_sketch1 --> Problem  synth_4
Sketch conj2_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 122 seconds

Problem: synth_10
 plus x (mult y (Succ Zero))
 plus y (mult x (Succ Zero))
 plus x (plus y Zero)
 plus y (plus x Zero)
 plus x y
 plus y x

Problem: synth_8

Problem: synth_3
 plus (fac lf2) lf2
 qfac (fac lf2) lf2
 plus lf2 (fac lf2)
 mult lf2 (Succ Zero)
 plus lf2 Zero
 lf2

Problem: synth_9

Problem: synth_6
 Succ (plus x (mult x Zero))
 plus (mult x (Succ Zero)) (Succ Zero)
 Succ (mult x (Succ Zero))
 Succ (plus x Zero)
 plus x (Succ Zero)
 Succ x

Problem: synth_11

Problem: synth_7
 plus x (plus y (Succ Zero))
 plus y (plus x (Succ Zero))
 Succ (plus x y)
 Succ (plus y x)
 plus x (Succ y)
 plus y (Succ x)

Problem: synth_5

Problem: synth_4
 plus lf4 (mult y (Succ Zero))
 plus y (mult lf4 (Succ Zero))
 plus lf4 (plus y Zero)
 plus y (plus lf4 Zero)
 plus lf4 y
 plus y lf4

Problem: synth_1
 plus (fac lf1) lf1
 qfac (fac lf1) lf1
 plus lf1 (fac lf1)
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_2
 Succ (plus lf3 (mult lf3 Zero))
 plus (mult lf3 (Succ Zero)) (Succ Zero)
 Succ (mult lf3 (Succ Zero))
 Succ (plus lf3 Zero)
 plus lf3 (Succ Zero)
 Succ lf3

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 122 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).
Lemma candidate_2: forall (lf3 : natural) (y : natural) (x : natural), forall _ : @eq natural lf3 (plus y x), @eq natural (Succ lf3) (plus y (Succ x)).
Lemma candidate_3: forall (lf1 : natural), @eq natural (plus (fac lf1) lf1) lf1.
Lemma candidate_4: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_5: forall (lf1 : natural), @eq natural (plus lf1 (fac lf1)) lf1.
Lemma candidate_6: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_7: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_8: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_9: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 (mult lf3 Zero))).
Lemma candidate_10: forall (lf3 : natural), @eq natural (Succ lf3) (plus (mult lf3 (Succ Zero)) (Succ Zero)).
Lemma candidate_11: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (mult lf3 (Succ Zero))).
Lemma candidate_12: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 Zero)).
Lemma candidate_13: forall (lf3 : natural), @eq natural (Succ lf3) (plus lf3 (Succ Zero)).
Lemma candidate_14: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_15: forall (lf2 : natural), @eq natural lf2 (plus (fac lf2) lf2).
Lemma candidate_16: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_17: forall (lf2 : natural), @eq natural lf2 (plus lf2 (fac lf2)).
Lemma candidate_18: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_19: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_20: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_21: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (mult y (Succ Zero))).
Lemma candidate_22: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (mult lf4 (Succ Zero))).
Lemma candidate_23: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (plus y Zero)).
Lemma candidate_24: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (plus lf4 Zero)).
Lemma candidate_25: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 y).
Lemma candidate_26: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y lf4).
Lemma candidate_27: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 (mult y (Succ Zero))) (plus y lf4).
Lemma candidate_28: forall (y : natural) (lf4 : natural), @eq natural (plus y (mult lf4 (Succ Zero))) (plus y lf4).
Lemma candidate_29: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 (plus y Zero)) (plus y lf4).
Lemma candidate_30: forall (y : natural) (lf4 : natural), @eq natural (plus y (plus lf4 Zero)) (plus y lf4).
Lemma candidate_31: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 y) (plus y lf4).
Lemma candidate_32: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y lf4).
Lemma candidate_33: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 (mult lf3 Zero))).
Lemma candidate_34: forall (lf3 : natural), @eq natural (Succ lf3) (plus (mult lf3 (Succ Zero)) (Succ Zero)).
Lemma candidate_35: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (mult lf3 (Succ Zero))).
Lemma candidate_36: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 Zero)).
Lemma candidate_37: forall (lf3 : natural), @eq natural (Succ lf3) (plus lf3 (Succ Zero)).
Lemma candidate_38: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_39: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 (mult lf3 Zero))).
Lemma candidate_40: forall (lf3 : natural), @eq natural (Succ lf3) (plus (mult lf3 (Succ Zero)) (Succ Zero)).
Lemma candidate_41: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (mult lf3 (Succ Zero))).
Lemma candidate_42: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 Zero)).
Lemma candidate_43: forall (lf3 : natural), @eq natural (Succ lf3) (plus lf3 (Succ Zero)).
Lemma candidate_44: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_45: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (mult y (Succ Zero))).
Lemma candidate_46: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (mult lf4 (Succ Zero))).
Lemma candidate_47: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (plus y Zero)).
Lemma candidate_48: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (plus lf4 Zero)).
Lemma candidate_49: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 y).
Lemma candidate_50: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y lf4).
Lemma candidate_51: forall (lf2 : natural), @eq natural lf2 (plus (fac lf2) lf2).
Lemma candidate_52: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_53: forall (lf2 : natural), @eq natural lf2 (plus lf2 (fac lf2)).
Lemma candidate_54: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_55: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_56: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_57: forall (x : natural), @eq natural (Succ x) (Succ (plus x (mult x Zero))).
Lemma candidate_58: forall (x : natural), @eq natural (Succ x) (plus (mult x (Succ Zero)) (Succ Zero)).
Lemma candidate_59: forall (x : natural), @eq natural (Succ x) (Succ (mult x (Succ Zero))).
Lemma candidate_60: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_61: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_62: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_63: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus x (plus y (Succ Zero))).
Lemma candidate_64: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus y (plus x (Succ Zero))).
Lemma candidate_65: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (Succ (plus x y)).
Lemma candidate_66: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (Succ (plus y x)).
Lemma candidate_67: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus x (Succ y)).
Lemma candidate_68: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus y (Succ x)).
Lemma candidate_69: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 (mult lf3 Zero))).
Lemma candidate_70: forall (lf3 : natural), @eq natural (Succ lf3) (plus (mult lf3 (Succ Zero)) (Succ Zero)).
Lemma candidate_71: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (mult lf3 (Succ Zero))).
Lemma candidate_72: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 Zero)).
Lemma candidate_73: forall (lf3 : natural), @eq natural (Succ lf3) (plus lf3 (Succ Zero)).
Lemma candidate_74: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_75: forall (y : natural) (x : natural), @eq natural (plus x (plus y (Succ Zero))) (plus y (Succ x)).
Lemma candidate_76: forall (y : natural) (x : natural), @eq natural (plus y (plus x (Succ Zero))) (plus y (Succ x)).
Lemma candidate_77: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).
Lemma candidate_78: forall (y : natural) (x : natural), @eq natural (Succ (plus y x)) (plus y (Succ x)).
Lemma candidate_79: forall (y : natural) (x : natural), @eq natural (plus x (Succ y)) (plus y (Succ x)).
Lemma candidate_80: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus y (Succ x)).
Lemma candidate_81: forall (x : natural), @eq natural (Succ x) (Succ (plus x (mult x Zero))).
Lemma candidate_82: forall (x : natural), @eq natural (Succ x) (plus (mult x (Succ Zero)) (Succ Zero)).
Lemma candidate_83: forall (x : natural), @eq natural (Succ x) (Succ (mult x (Succ Zero))).
Lemma candidate_84: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_85: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_86: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_87: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus x (plus y (Succ Zero))).
Lemma candidate_88: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus y (plus x (Succ Zero))).
Lemma candidate_89: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (Succ (plus x y)).
Lemma candidate_90: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (Succ (plus y x)).
Lemma candidate_91: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus x (Succ y)).
Lemma candidate_92: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus y (Succ x)).
Lemma candidate_93: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 (mult lf3 Zero))).
Lemma candidate_94: forall (lf3 : natural), @eq natural (Succ lf3) (plus (mult lf3 (Succ Zero)) (Succ Zero)).
Lemma candidate_95: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (mult lf3 (Succ Zero))).
Lemma candidate_96: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 Zero)).
Lemma candidate_97: forall (lf3 : natural), @eq natural (Succ lf3) (plus lf3 (Succ Zero)).
Lemma candidate_98: forall (lf3 : natural), @eq natural (Succ lf3) (Succ lf3).
Lemma candidate_99: forall (lf1 : natural), @eq natural (plus (fac lf1) lf1) lf1.
Lemma candidate_100: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_101: forall (lf1 : natural), @eq natural (plus lf1 (fac lf1)) lf1.
Lemma candidate_102: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_103: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_104: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_105: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (plus y (Succ Zero))).
Lemma candidate_106: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (plus x (Succ Zero))).
Lemma candidate_107: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (Succ (plus x y)).
Lemma candidate_108: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (Succ (plus y x)).
Lemma candidate_109: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (Succ y)).
Lemma candidate_110: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).
Lemma candidate_111: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x (mult y (Succ Zero))).
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y (mult x (Succ Zero))).
Lemma candidate_113: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x (plus y Zero)).
Lemma candidate_114: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y (plus x Zero)).
Lemma candidate_115: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x y).
Lemma candidate_116: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y x).
Lemma candidate_117: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (plus y (Succ Zero))).
Lemma candidate_118: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (plus x (Succ Zero))).
Lemma candidate_119: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (Succ (plus x y)).
Lemma candidate_120: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (Succ (plus y x)).
Lemma candidate_121: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (Succ y)).
Lemma candidate_122: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).
Lemma candidate_123: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 (mult y (Succ Zero))) (plus y lf4).
Lemma candidate_124: forall (y : natural) (lf4 : natural), @eq natural (plus y (mult lf4 (Succ Zero))) (plus y lf4).
Lemma candidate_125: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 (plus y Zero)) (plus y lf4).
Lemma candidate_126: forall (y : natural) (lf4 : natural), @eq natural (plus y (plus lf4 Zero)) (plus y lf4).
Lemma candidate_127: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 y) (plus y lf4).
Lemma candidate_128: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y lf4).
Lemma candidate_129: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (mult y (Succ Zero))).
Lemma candidate_130: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (mult lf4 (Succ Zero))).
Lemma candidate_131: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (plus y Zero)).
Lemma candidate_132: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (plus lf4 Zero)).
Lemma candidate_133: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 y).
Lemma candidate_134: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y lf4).
Lemma candidate_135: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (plus y (Succ Zero))).
Lemma candidate_136: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (plus x (Succ Zero))).
Lemma candidate_137: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (Succ (plus x y)).
Lemma candidate_138: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (Succ (plus y x)).
Lemma candidate_139: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (Succ y)).
Lemma candidate_140: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (Succ x)).
Lemma candidate_141: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x (mult y (Succ Zero))).
Lemma candidate_142: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y (mult x (Succ Zero))).
Lemma candidate_143: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x (plus y Zero)).
Lemma candidate_144: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y (plus x Zero)).
Lemma candidate_145: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x y).
Lemma candidate_146: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 216 seconds
Duplicates removed: 89
Filtered by Quickchick: 4
Filtered by script: 19
Remaining: 34

Lemmas: 
Lemma candidate_16: forall (lf2 : natural), @eq natural lf2 (qfac (fac lf2) lf2).
Lemma candidate_4: forall (lf1 : natural), @eq natural (qfac (fac lf1) lf1) lf1.
Lemma candidate_18: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_6: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_114: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y (plus x Zero)).
Lemma candidate_113: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x (plus y Zero)).
Lemma candidate_109: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (Succ y)).
Lemma candidate_79: forall (y : natural) (x : natural), @eq natural (plus x (Succ y)) (plus y (Succ x)).
Lemma candidate_78: forall (y : natural) (x : natural), @eq natural (Succ (plus y x)) (plus y (Succ x)).
Lemma candidate_67: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus x (Succ y)).
Lemma candidate_66: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (Succ (plus y x)).
Lemma candidate_59: forall (x : natural), @eq natural (Succ x) (Succ (mult x (Succ Zero))).
Lemma candidate_30: forall (y : natural) (lf4 : natural), @eq natural (plus y (plus lf4 Zero)) (plus y lf4).
Lemma candidate_29: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 (plus y Zero)) (plus y lf4).
Lemma candidate_24: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (plus lf4 Zero)).
Lemma candidate_23: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (plus y Zero)).
Lemma candidate_57: forall (x : natural), @eq natural (Succ x) (Succ (plus x (mult x Zero))).
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (plus x y) (plus y (mult x (Succ Zero))).
Lemma candidate_111: forall (y : natural) (x : natural), @eq natural (plus x y) (plus x (mult y (Succ Zero))).
Lemma candidate_11: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (mult lf3 (Succ Zero))).
Lemma candidate_28: forall (y : natural) (lf4 : natural), @eq natural (plus y (mult lf4 (Succ Zero))) (plus y lf4).
Lemma candidate_27: forall (y : natural) (lf4 : natural), @eq natural (plus lf4 (mult y (Succ Zero))) (plus y lf4).
Lemma candidate_22: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus y (mult lf4 (Succ Zero))).
Lemma candidate_21: forall (y : natural) (lf4 : natural), @eq natural (plus y lf4) (plus lf4 (mult y (Succ Zero))).
Lemma candidate_9: forall (lf3 : natural), @eq natural (Succ lf3) (Succ (plus lf3 (mult lf3 Zero))).
Lemma candidate_106: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus y (plus x (Succ Zero))).
Lemma candidate_105: forall (y : natural) (x : natural), @eq natural (Succ (plus x y)) (plus x (plus y (Succ Zero))).
Lemma candidate_76: forall (y : natural) (x : natural), @eq natural (plus y (plus x (Succ Zero))) (plus y (Succ x)).
Lemma candidate_75: forall (y : natural) (x : natural), @eq natural (plus x (plus y (Succ Zero))) (plus y (Succ x)).
Lemma candidate_64: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus y (plus x (Succ Zero))).
Lemma candidate_63: forall (y : natural) (x : natural), @eq natural (plus y (Succ x)) (plus x (plus y (Succ Zero))).
Lemma candidate_58: forall (x : natural), @eq natural (Succ x) (plus (mult x (Succ Zero)) (Succ Zero)).
Lemma candidate_10: forall (lf3 : natural), @eq natural (Succ lf3) (plus (mult lf3 (Succ Zero)) (Succ Zero)).
Lemma candidate_2: forall (lf3 : natural) (y : natural) (x : natural), forall _ : @eq natural lf3 (plus y x), @eq natural (Succ lf3) (plus y (Succ x)).
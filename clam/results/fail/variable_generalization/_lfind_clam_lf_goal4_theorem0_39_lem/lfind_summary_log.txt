LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal4_theorem0_39_lem

Number of Lemmas: 315
Number of Lemmas (after duplicates removed): 81
Number of Lemmas (after QuickChick used to filter): 73
* Number of Candidate Lemmas: 56

Time until ranking: 631
Time to complete: 2070

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 5

Lemma candidate_117: forall (x : lst) (lf6 : lst), @eq natural (len (lfappend x lf6)) (len (lfappend lf6 x)).
Lemma candidate_129: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (Succ (double (len x))).
Lemma candidate_114: forall (x : lst) (lf6 : lst), @eq natural (len (lfappend x lf6)) (len (lfappend lf6 (lfappend x Nil))).
Lemma candidate_2: forall (n : natural) (lf4 : natural) (x : lst), forall _ : @eq natural lf4 (double (len x)), @eq natural (len (lfappend x (Cons n x))) (Succ lf4).
Lemma candidate_3: forall (n : natural) (x : lst) (lf5 : lst), forall _ : @eq natural (len lf5) (double (len x)), @eq natural (len (lfappend x (Cons n x))) (Succ (len lf5)).

Category 3 (provable):
Count = 18

Lemma candidate_39: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_9: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_112: forall (x : lst) (lf6 : lst), @eq lst (lfappend x lf6) (lfappend x (lfappend lf6 Nil)).
Lemma candidate_111: forall (x : lst) (lf6 : lst), @eq lst (lfappend x lf6) (lfappend (lfappend x lf6) Nil).
Lemma candidate_110: forall (x : lst) (lf6 : lst), @eq lst (lfappend x lf6) (lfappend (lfappend x Nil) lf6).
Lemma candidate_55: forall (lf5 : lst), @eq natural (Succ (len (lfappend lf5 Nil))) (Succ (len lf5)).
Lemma candidate_15: forall (lf5 : lst), @eq natural (Succ (len lf5)) (Succ (len (lfappend lf5 Nil))).
Lemma candidate_38: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend lf3 Nil) Nil)).
Lemma candidate_8: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_54: forall (lf5 : lst), @eq natural (len (lfappend lf5 (Cons Zero Nil))) (Succ (len lf5)).
Lemma candidate_14: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons Zero Nil))).
Lemma candidate_108: forall (x : lst) (lf6 : lst), @eq lst (lfappend x lf6) (lfappend (lfappend x (lfappend lf6 Nil)) Nil).
Lemma candidate_53: forall (lf5 : lst), @eq natural (len (lfappend lf5 (Cons (Succ Zero) Nil))) (Succ (len lf5)).
Lemma candidate_13: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (Succ Zero) Nil))).
Lemma candidate_37: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend (lfappend (lfappend lf3 Nil) Nil) Nil)).
Lemma candidate_7: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_51: forall (lf5 : lst), @eq natural (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil)))   (Succ (len lf5)).
Lemma candidate_11: forall (lf5 : lst), @eq natural (Succ (len lf5))   (len (lfappend (lfappend lf5 Nil) (Cons Zero Nil))).

Category 3 (not provable):
Count = 33

Lemma candidate_122: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_28: forall (x : lst), @eq lst (lfappend x x) (lfappend x (lfappend x Nil)).
Lemma candidate_27: forall (x : lst), @eq lst (lfappend x x) (lfappend (lfappend x x) Nil).
Lemma candidate_26: forall (x : lst), @eq lst (lfappend x x) (lfappend (lfappend x Nil) x).
Lemma candidate_121: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_33: forall (x : lst), @eq natural (len (lfappend x x)) (double (len (lfappend x Nil))).
Lemma candidate_25: forall (x : lst), @eq lst (lfappend x x) (lfappend (lfappend x Nil) (lfappend x Nil)).
Lemma candidate_24: forall (x : lst), @eq lst (lfappend x x) (lfappend (lfappend x (lfappend x Nil)) Nil).
Lemma candidate_32: forall (x : lst), @eq natural (len (lfappend x x)) (len (lfappend x (lfappend x Nil))).
Lemma candidate_31: forall (x : lst), @eq natural (len (lfappend x x)) (len (lfappend (lfappend x x) Nil)).
Lemma candidate_30: forall (x : lst), @eq natural (len (lfappend x x)) (len (lfappend (lfappend x Nil) x)).
Lemma candidate_134: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend x (Cons n (lfappend x Nil))).
Lemma candidate_133: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x Nil) (Cons n x)).
Lemma candidate_131: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x (Cons n x)) Nil).
Lemma candidate_130: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x (Cons n Nil)) x).
Lemma candidate_52: forall (lf5 : lst), @eq natural (len (lfappend lf5 (Cons (len lf5) Nil))) (Succ (len lf5)).
Lemma candidate_12: forall (lf5 : lst), @eq natural (Succ (len lf5)) (len (lfappend lf5 (Cons (len lf5) Nil))).
Lemma candidate_109: forall (x : lst) (lf6 : lst), @eq lst (lfappend x lf6) (lfappend (lfappend x Nil) (lfappend lf6 Nil)).
Lemma candidate_115: forall (x : lst) (lf6 : lst), @eq natural (len (lfappend x lf6)) (len (lfappend x (lfappend lf6 Nil))).
Lemma candidate_78: forall (x : lst), @eq natural (len (lfappend x (Cons Zero x))) (Succ (len (lfappend x x))).
Lemma candidate_21: forall (x : lst), @eq natural (Succ (len (lfappend x x))) (len (lfappend x (Cons Zero x))).
Lemma candidate_127: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (len (lfappend x (Cons Zero x))).
Lemma candidate_77: forall (x : lst), @eq natural (Succ (double (len (lfappend x Nil))))   (Succ (len (lfappend x x))).
Lemma candidate_20: forall (x : lst), @eq natural (Succ (len (lfappend x x)))   (Succ (double (len (lfappend x Nil)))).
Lemma candidate_75: forall (x : lst), @eq natural (len (lfappend x (Cons (Succ Zero) x)))   (Succ (len (lfappend x x))).
Lemma candidate_18: forall (x : lst), @eq natural (Succ (len (lfappend x x)))   (len (lfappend x (Cons (Succ Zero) x))).
Lemma candidate_125: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (Succ (double (len (lfappend x Nil)))).
Lemma candidate_76: forall (x : lst), @eq natural (Succ (len (lfappend x (lfappend x Nil))))   (Succ (len (lfappend x x))).
Lemma candidate_19: forall (x : lst), @eq natural (Succ (len (lfappend x x)))   (Succ (len (lfappend x (lfappend x Nil)))).
Lemma candidate_220: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (Succ (len (lfappend (lfappend x x) Nil))).
Lemma candidate_219: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (Succ (len (lfappend (lfappend x Nil) x))).
Lemma candidate_124: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (Succ (len (lfappend x (lfappend x Nil)))).
Lemma candidate_132: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x))   (lfappend (lfappend x Nil) (Cons n (lfappend x Nil))).
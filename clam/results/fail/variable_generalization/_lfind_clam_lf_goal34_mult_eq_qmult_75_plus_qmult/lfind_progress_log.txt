File Information
- File name: goal34
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal34_mult_eq_qmult_75_plus_qmult
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal34_mult_eq_qmult_75_plus_qmult
- Namespace: adtind
- Proof name: mult_eq_qmult
- Theorem: Theorem mult_eq_qmult: forall x0 y0 : natural, @eq natural (mult x0 y0) (qmult x0 y0 Zero).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (plus (qmult x y Zero) y) (qmult x y y)

* Hypothesis:
IHx : @eq natural (mult x y) (qmult x y Zero)
x : natural
y : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
qmult x y Zero : natural
mult x y : natural
x : natural
qmult x y y : natural
@eq natural (mult x y) (qmult x y Zero) : Prop
Zero : natural
y : natural
natural : Set
plus (qmult x y Zero) y : natural
@eq natural (plus (qmult x y Zero) y) (qmult x y y) : Prop

* Functions:
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural
qmult  : forall (_ : natural) (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : natural = qmult x y y
lf1 : natural = plus (qmult x y Zero) y
lf4 : natural = Zero
lf2 : natural = qmult x y Zero

Generalizations:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf2 y) lf3.
Lemma conj6: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y lf4) y) lf3.
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y Zero) y) lf3.
Lemma conj9: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qmult x y y).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus lf2 y) (qmult x y y).
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma conj16: forall (x : natural) (y : natural), @eq natural (plus (qmult x y Zero) y) (qmult x y y).


<---VALIDITY CHECKS--->
Time elapsed: 25 seconds
Valid:
Lemma conj16: forall (x : natural) (y : natural), @eq natural (plus (qmult x y Zero) y) (qmult x y y).

Invalid:
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus lf2 y) (qmult x y y).
Lemma conj9: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qmult x y y).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y Zero) y) lf3.
Lemma conj6: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y lf4) y) lf3.
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf2 y) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 42 seconds
Generalizations:
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma conj14_imp: forall (x : natural) (lf4 : natural) (y : natural), forall _ : @eq natural (mult x y) (qmult x y lf4),
@eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus lf2 y) (qmult x y y).
Lemma conj13_imp: forall (lf2 : natural) (x : natural) (y : natural), forall _ : @eq natural (mult x y) lf2, @eq natural (plus lf2 y) (qmult x y y).
Lemma conj9: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qmult x y y).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y Zero) y) lf3.
Lemma conj6: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y lf4) y) lf3.
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf2 y) lf3.
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 62 seconds
Valid:
Lemma conj13_imp: forall (lf2 : natural) (x : natural) (y : natural), forall _ : @eq natural (mult x y) lf2, @eq natural (plus lf2 y) (qmult x y y).
Lemma conj14_imp: forall (x : natural) (lf4 : natural) (y : natural), forall _ : @eq natural (mult x y) (qmult x y lf4),
@eq natural (plus (qmult x y lf4) y) (qmult x y y).

Invalid:
Lemma conj1: forall (lf1 : natural) (lf3 : natural), @eq natural lf1 lf3.
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf2 y) lf3.
Lemma conj6: forall (x : natural) (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y lf4) y) lf3.
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus (qmult x y Zero) y) lf3.
Lemma conj9: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (qmult x y y).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus lf2 y) (qmult x y y).
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).


<---CREATE SKETCHES--->
Time elapsed: 62 seconds
Sketches:
Sketch conj5_sketch0 : @eq natural (##hole##) lf3
Sketch conj5_term_sketch0 : @eq natural (plus lf2 y) (##hole##)
Sketch conj6_sketch0 : @eq natural (##hole##) lf3
Sketch conj6_sketch1 : @eq natural (plus (##hole##) y) lf3
Sketch conj6_term_sketch0 : @eq natural (plus (qmult x y lf4) y) (##hole##)
Sketch conj6_term_sketch1 : @eq natural (qmult x y lf4) (##hole##)
Sketch conj8_sketch0 : @eq natural (plus (##hole##) y) lf3
Sketch conj8_sketch1 : @eq natural (plus (qmult x y (##hole##)) y) lf3
Sketch conj8_sketch2 : @eq natural (##hole##) lf3
Sketch conj8_term_sketch0 : @eq natural (qmult x y Zero) (##hole##)
Sketch conj8_term_sketch1 : @eq natural Zero (##hole##)
Sketch conj8_term_sketch2 : @eq natural (plus (qmult x y Zero) y) (##hole##)
Sketch conj9_sketch0 : @eq natural lf1 (##hole##)
Sketch conj9_term_sketch0 : @eq natural (qmult x y y) (##hole##)
Sketch conj13_sketch0 : @eq natural (plus lf2 y) (##hole##)
Sketch conj13_sketch1 : @eq natural (##hole##) (qmult x y y)
Sketch conj13_term_sketch0 : @eq natural (qmult x y y) (##hole##)
Sketch conj13_term_sketch1 : @eq natural (plus lf2 y) (##hole##)
Sketch conj14_sketch0 : @eq natural (##hole##) (qmult x y y)
Sketch conj14_sketch1 : @eq natural (plus (qmult x y lf4) y) (##hole##)
Sketch conj14_sketch2 : @eq natural (plus (##hole##) y) (qmult x y y)
Sketch conj14_term_sketch0 : @eq natural (plus (qmult x y lf4) y) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (qmult x y y) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (qmult x y lf4) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 81 seconds
Problems per Sketch:
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj14_sketch2 --> Problem  synth_7
Sketch conj13_term_sketch0 --> Problem  synth_9
Sketch conj14_term_sketch2 --> Problem  synth_5
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj8_sketch1 --> Problem  synth_6
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj13_sketch1 --> Problem  synth_9
Sketch conj14_sketch0 --> Problem  synth_9
Sketch conj13_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj13_sketch0 --> Problem  synth_2
Sketch conj9_sketch0 --> Problem  synth_10
Sketch conj8_sketch2 --> Problem  synth_1
Sketch conj8_sketch0 --> Problem  synth_3
Sketch conj14_term_sketch1 --> Problem  synth_9
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj8_term_sketch2 --> Problem  synth_9
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj14_sketch1 --> Problem  synth_4
Sketch conj9_term_sketch0 --> Problem  synth_9


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 112 seconds

Problem: synth_10
 plus lf1 (mult lf1 Zero)
 qmult lf1 Zero lf1
 qmult lf1 (Succ Zero) Zero
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_8
 Zero

Problem: synth_3

Problem: synth_9
 plus y (mult y x)
 plus (mult x y) y
 qmult x y y
 qmult y x y
 qmult y (Succ x) Zero
 mult y (Succ x)

Problem: synth_6
 qmult y Zero Zero
 qmult x Zero Zero
 mult lf3 Zero
 mult y Zero
 mult x Zero
 Zero

Problem: synth_7
 mult x (plus y Zero)
 mult y (plus x Zero)
 qmult x y Zero
 qmult y x Zero
 mult x y
 mult y x

Problem: synth_5
 qmult x y lf4
 qmult y x lf4
 qmult x y Zero
 qmult y x Zero
 mult x y
 mult y x

Problem: synth_4
 plus (mult x y) y
 qmult x y y
 qmult y x y
 qmult y (Succ x) lf4
 qmult y (Succ x) Zero
 mult y (Succ x)

Problem: synth_1
 plus lf3 (mult lf3 Zero)
 qmult lf3 Zero lf3
 qmult lf3 (Succ Zero) Zero
 mult lf3 (Succ Zero)
 plus lf3 Zero
 lf3

Problem: synth_2
 plus lf2 (plus y Zero)
 plus y (plus lf2 Zero)
 qmult lf2 (Succ Zero) y
 qmult y (Succ Zero) lf2
 plus lf2 y
 plus y lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 112 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult x y y).
Lemma candidate_2: forall (y : natural) (x : natural) (lf2 : natural), forall _ : @eq natural (mult x y) lf2, @eq natural (plus lf2 y) (qmult x y y).
Lemma candidate_3: forall (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (mult x y) (qmult x y lf4), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma candidate_4: forall (lf3 : natural), @eq natural (plus lf3 (mult lf3 Zero)) lf3.
Lemma candidate_5: forall (lf3 : natural), @eq natural (qmult lf3 Zero lf3) lf3.
Lemma candidate_6: forall (lf3 : natural), @eq natural (qmult lf3 (Succ Zero) Zero) lf3.
Lemma candidate_7: forall (lf3 : natural), @eq natural (mult lf3 (Succ Zero)) lf3.
Lemma candidate_8: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_9: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_10: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 (plus y Zero)).
Lemma candidate_11: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y (plus lf2 Zero)).
Lemma candidate_12: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult lf2 (Succ Zero) y).
Lemma candidate_13: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult y (Succ Zero) lf2).
Lemma candidate_14: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 y).
Lemma candidate_15: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y lf2).
Lemma candidate_16: forall (lf3 : natural), @eq natural (plus lf3 (mult lf3 Zero)) lf3.
Lemma candidate_17: forall (lf3 : natural), @eq natural (qmult lf3 Zero lf3) lf3.
Lemma candidate_18: forall (lf3 : natural), @eq natural (qmult lf3 (Succ Zero) Zero) lf3.
Lemma candidate_19: forall (lf3 : natural), @eq natural (mult lf3 (Succ Zero)) lf3.
Lemma candidate_20: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_21: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_22: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (plus (mult x y) y).
Lemma candidate_23: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma candidate_24: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y x y).
Lemma candidate_25: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) lf4).
Lemma candidate_26: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) Zero).
Lemma candidate_27: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (mult y (Succ x)).
Lemma candidate_28: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult x y lf4).
Lemma candidate_29: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult y x lf4).
Lemma candidate_30: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult x y Zero).
Lemma candidate_31: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult y x Zero).
Lemma candidate_32: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (mult x y).
Lemma candidate_33: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (mult y x).
Lemma candidate_34: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (plus (qmult x y (qmult y Zero Zero)) y) lf3.
Lemma candidate_35: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (plus (qmult x y (qmult x Zero Zero)) y) lf3.
Lemma candidate_36: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (plus (qmult x y (mult lf3 Zero)) y) lf3.
Lemma candidate_37: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (plus (qmult x y (mult y Zero)) y) lf3.
Lemma candidate_38: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (plus (qmult x y (mult x Zero)) y) lf3.
Lemma candidate_39: forall (lf3 : natural) (y : natural) (x : natural), @eq natural (plus (qmult x y (Zero)) y) lf3.
Lemma candidate_40: forall (lf3 : natural), @eq natural (plus lf3 (mult lf3 Zero)) lf3.
Lemma candidate_41: forall (lf3 : natural), @eq natural (qmult lf3 Zero lf3) lf3.
Lemma candidate_42: forall (lf3 : natural), @eq natural (qmult lf3 (Succ Zero) Zero) lf3.
Lemma candidate_43: forall (lf3 : natural), @eq natural (mult lf3 (Succ Zero)) lf3.
Lemma candidate_44: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_45: forall (lf3 : natural), @eq natural (lf3) lf3.
Lemma candidate_46: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult x (plus y Zero)).
Lemma candidate_47: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult y (plus x Zero)).
Lemma candidate_48: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (qmult x y Zero).
Lemma candidate_49: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (qmult y x Zero).
Lemma candidate_50: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult x y).
Lemma candidate_51: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult y x).
Lemma candidate_52: @eq natural Zero (Zero).
Lemma candidate_53: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (plus y (mult y x)).
Lemma candidate_54: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (plus (mult x y) y).
Lemma candidate_55: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult x y y).
Lemma candidate_56: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult y x y).
Lemma candidate_57: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult y (Succ x) Zero).
Lemma candidate_58: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (mult y (Succ x)).
Lemma candidate_59: forall (lf1 : natural), @eq natural lf1 (plus lf1 (mult lf1 Zero)).
Lemma candidate_60: forall (lf1 : natural), @eq natural lf1 (qmult lf1 Zero lf1).
Lemma candidate_61: forall (lf1 : natural), @eq natural lf1 (qmult lf1 (Succ Zero) Zero).
Lemma candidate_62: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_63: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_64: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_65: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus y (mult y x)).
Lemma candidate_66: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus (mult x y) y).
Lemma candidate_67: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult x y y).
Lemma candidate_68: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y x y).
Lemma candidate_69: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y (Succ x) Zero).
Lemma candidate_70: forall (y : natural) (x : natural), @eq natural (qmult x y y) (mult y (Succ x)).
Lemma candidate_71: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 (plus y Zero)).
Lemma candidate_72: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y (plus lf2 Zero)).
Lemma candidate_73: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult lf2 (Succ Zero) y).
Lemma candidate_74: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult y (Succ Zero) lf2).
Lemma candidate_75: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 y).
Lemma candidate_76: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y lf2).
Lemma candidate_77: forall (y : natural) (x : natural), @eq natural (plus y (mult y x)) (qmult x y y).
Lemma candidate_78: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (qmult x y y).
Lemma candidate_79: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult x y y).
Lemma candidate_80: forall (y : natural) (x : natural), @eq natural (qmult y x y) (qmult x y y).
Lemma candidate_81: forall (y : natural) (x : natural), @eq natural (qmult y (Succ x) Zero) (qmult x y y).
Lemma candidate_82: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (qmult x y y).
Lemma candidate_83: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus y (mult y x)).
Lemma candidate_84: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus (mult x y) y).
Lemma candidate_85: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult x y y).
Lemma candidate_86: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y x y).
Lemma candidate_87: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y (Succ x) Zero).
Lemma candidate_88: forall (y : natural) (x : natural), @eq natural (qmult x y y) (mult y (Succ x)).
Lemma candidate_89: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 (plus y Zero)).
Lemma candidate_90: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y (plus lf2 Zero)).
Lemma candidate_91: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult lf2 (Succ Zero) y).
Lemma candidate_92: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult y (Succ Zero) lf2).
Lemma candidate_93: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 y).
Lemma candidate_94: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y lf2).
Lemma candidate_95: forall (y : natural) (x : natural), @eq natural (plus y (mult y x)) (qmult x y y).
Lemma candidate_96: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (qmult x y y).
Lemma candidate_97: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult x y y).
Lemma candidate_98: forall (y : natural) (x : natural), @eq natural (qmult y x y) (qmult x y y).
Lemma candidate_99: forall (y : natural) (x : natural), @eq natural (qmult y (Succ x) Zero) (qmult x y y).
Lemma candidate_100: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (qmult x y y).
Lemma candidate_101: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (plus (mult x y) y).
Lemma candidate_102: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma candidate_103: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y x y).
Lemma candidate_104: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) lf4).
Lemma candidate_105: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) Zero).
Lemma candidate_106: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (mult y (Succ x)).
Lemma candidate_107: forall (y : natural) (x : natural), @eq natural (plus (mult x (plus y Zero)) y) (qmult x y y).
Lemma candidate_108: forall (y : natural) (x : natural), @eq natural (plus (mult y (plus x Zero)) y) (qmult x y y).
Lemma candidate_109: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult x y y).
Lemma candidate_110: forall (y : natural) (x : natural), @eq natural (plus (qmult y x Zero) y) (qmult x y y).
Lemma candidate_111: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (qmult x y y).
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (qmult x y y).
Lemma candidate_113: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (plus (mult x y) y).
Lemma candidate_114: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
Lemma candidate_115: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y x y).
Lemma candidate_116: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) lf4).
Lemma candidate_117: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) Zero).
Lemma candidate_118: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (mult y (Succ x)).
Lemma candidate_119: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus y (mult y x)).
Lemma candidate_120: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus (mult x y) y).
Lemma candidate_121: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult x y y).
Lemma candidate_122: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y x y).
Lemma candidate_123: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y (Succ x) Zero).
Lemma candidate_124: forall (y : natural) (x : natural), @eq natural (qmult x y y) (mult y (Succ x)).
Lemma candidate_125: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult x y lf4).
Lemma candidate_126: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult y x lf4).
Lemma candidate_127: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult x y Zero).
Lemma candidate_128: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult y x Zero).
Lemma candidate_129: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (mult x y).
Lemma candidate_130: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (mult y x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 288 seconds
Duplicates removed: 65
Filtered by Quickchick: 15
Filtered by script: 9
Remaining: 41

Lemmas: 
Lemma candidate_63: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_8: forall (lf3 : natural), @eq natural (plus lf3 Zero) lf3.
Lemma candidate_60: forall (lf1 : natural), @eq natural lf1 (qmult lf1 Zero lf1).
Lemma candidate_5: forall (lf3 : natural), @eq natural (qmult lf3 Zero lf3) lf3.
Lemma candidate_15: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y lf2).
Lemma candidate_62: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_7: forall (lf3 : natural), @eq natural (mult lf3 (Succ Zero)) lf3.
Lemma candidate_80: forall (y : natural) (x : natural), @eq natural (qmult y x y) (qmult x y y).
Lemma candidate_68: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y x y).
Lemma candidate_51: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult y x).
Lemma candidate_59: forall (lf1 : natural), @eq natural lf1 (plus lf1 (mult lf1 Zero)).
Lemma candidate_4: forall (lf3 : natural), @eq natural (plus lf3 (mult lf3 Zero)) lf3.
Lemma candidate_82: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (qmult x y y).
Lemma candidate_70: forall (y : natural) (x : natural), @eq natural (qmult x y y) (mult y (Succ x)).
Lemma candidate_29: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (qmult x y lf4) (qmult y x lf4).
Lemma candidate_61: forall (lf1 : natural), @eq natural lf1 (qmult lf1 (Succ Zero) Zero).
Lemma candidate_6: forall (lf3 : natural), @eq natural (qmult lf3 (Succ Zero) Zero) lf3.
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (qmult x y y).
Lemma candidate_78: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (qmult x y y).
Lemma candidate_77: forall (y : natural) (x : natural), @eq natural (plus y (mult y x)) (qmult x y y).
Lemma candidate_66: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus (mult x y) y).
Lemma candidate_65: forall (y : natural) (x : natural), @eq natural (qmult x y y) (plus y (mult y x)).
Lemma candidate_49: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (qmult y x Zero).
Lemma candidate_81: forall (y : natural) (x : natural), @eq natural (qmult y (Succ x) Zero) (qmult x y y).
Lemma candidate_69: forall (y : natural) (x : natural), @eq natural (qmult x y y) (qmult y (Succ x) Zero).
Lemma candidate_11: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus y (plus lf2 Zero)).
Lemma candidate_10: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (plus lf2 (plus y Zero)).
Lemma candidate_13: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult y (Succ Zero) lf2).
Lemma candidate_12: forall (y : natural) (lf2 : natural), @eq natural (plus lf2 y) (qmult lf2 (Succ Zero) y).
Lemma candidate_110: forall (y : natural) (x : natural), @eq natural (plus (qmult y x Zero) y) (qmult x y y).
Lemma candidate_56: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult y x y).
Lemma candidate_47: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult y (plus x Zero)).
Lemma candidate_46: forall (y : natural) (x : natural), @eq natural (qmult x y Zero) (mult x (plus y Zero)).
Lemma candidate_58: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (mult y (Succ x)).
Lemma candidate_108: forall (y : natural) (x : natural), @eq natural (plus (mult y (plus x Zero)) y) (qmult x y y).
Lemma candidate_107: forall (y : natural) (x : natural), @eq natural (plus (mult x (plus y Zero)) y) (qmult x y y).
Lemma candidate_53: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (plus y (mult y x)).
Lemma candidate_25: forall (y : natural) (lf4 : natural) (x : natural), @eq natural (plus (qmult x y lf4) y) (qmult y (Succ x) lf4).
Lemma candidate_57: forall (y : natural) (x : natural), @eq natural (plus (qmult x y Zero) y) (qmult y (Succ x) Zero).
Lemma candidate_2: forall (y : natural) (x : natural) (lf2 : natural), forall _ : @eq natural (mult x y) lf2, @eq natural (plus lf2 y) (qmult x y y).
Lemma candidate_3: forall (y : natural) (lf4 : natural) (x : natural), forall _ : @eq natural (mult x y) (qmult x y lf4), @eq natural (plus (qmult x y lf4) y) (qmult x y y).
File Information
- File name: goal17
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal17_theorem0_40_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal17_theorem0_40_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rev (rev (lfappend x0 y0))) (lfappend (rev (rev x0)) (rev (rev y0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y)))

* Hypothesis:
x : lst
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst

* Terms:
x : lst
lfappend (rev (rev x)) (rev (rev y)) : lst
rev (rev y) : lst
rev (rev x) : lst
lst : Set
y : lst
lfappend x y : lst
rev y : lst
rev x : lst
@eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))) : Prop

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev (rev y)
lf1 : lst = lfappend (rev (rev x)) (rev (rev y))
lf4 : lst = rev (rev x)
lf5 : lst = rev y
lf2 : lst = lfappend x y
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf4 lf3).
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend lf4 lf3).
Lemma conj25: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev lf6) lf3).
Lemma conj26: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev (rev x)) lf3).
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) lf3).
Lemma conj28: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst lf2 (lfappend lf4 (rev lf5)).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev lf5)).
Lemma conj53: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend lf4 (rev (rev y))).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma conj57: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf6) (rev lf5)).
Lemma conj58: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf5)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev lf5)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma conj61: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf6) (rev (rev y))).
Lemma conj62: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).
Lemma conj64: forall (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).


<---VALIDITY CHECKS--->
Time elapsed: 95 seconds
Valid:
Lemma conj64: forall (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).
Lemma conj62: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj61: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf6) (rev (rev y))).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev lf5)).
Lemma conj58: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf5)).
Lemma conj57: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf6) (rev lf5)).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma conj53: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend lf4 (rev (rev y))).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev lf5)).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst lf2 (lfappend lf4 (rev lf5)).
Lemma conj28: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) lf3).
Lemma conj26: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev (rev x)) lf3).
Lemma conj25: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev lf6) lf3).
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend lf4 lf3).
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf4 lf3).
Lemma conj3: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 95 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).
Lemma conj62: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj61: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf6) (rev (rev y))).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev lf5)).
Lemma conj58: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf5)).
Lemma conj57: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf6) (rev lf5)).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma conj53: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend lf4 (rev (rev y))).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev lf5)).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst lf2 (lfappend lf4 (rev lf5)).
Lemma conj28: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) lf3).
Lemma conj26: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev (rev x)) lf3).
Lemma conj25: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev lf6) lf3).
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend lf4 lf3).
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf4 lf3).
Lemma conj3: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 122 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (x : lst) (lf1 : lst) (y : lst), @eq lst (lfappend x y) lf1.
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf4 lf3).
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend lf4 lf3).
Lemma conj25: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev lf6) lf3).
Lemma conj26: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (lfappend (rev (rev x)) lf3).
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) lf3).
Lemma conj28: forall (x : lst) (y : lst) (lf3 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst lf2 (lfappend lf4 (rev lf5)).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev lf5)).
Lemma conj53: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend lf4 (rev (rev y))).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma conj57: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst lf2 (lfappend (rev lf6) (rev lf5)).
Lemma conj58: forall (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev lf5)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev lf5)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma conj61: forall (lf6 : lst) (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev lf6) (rev (rev y))).
Lemma conj62: forall (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (rev (rev x)) (rev (rev y))).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).


<---CREATE SKETCHES--->
Time elapsed: 122 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst (##hole##) lf1
Sketch conj3_term_sketch0 : @eq lst (lfappend x y) (##hole##)
Sketch conj17_sketch0 : @eq lst lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj19_sketch0 : @eq lst (lfappend x y) (##hole##)
Sketch conj19_sketch1 : @eq lst (##hole##) (lfappend lf4 lf3)
Sketch conj19_term_sketch0 : @eq lst (lfappend lf4 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj25_sketch0 : @eq lst lf2 (lfappend (##hole##) lf3)
Sketch conj25_sketch1 : @eq lst lf2 (##hole##)
Sketch conj25_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj25_term_sketch1 : @eq lst (lfappend (rev lf6) lf3) (##hole##)
Sketch conj26_sketch0 : @eq lst lf2 (##hole##)
Sketch conj26_sketch1 : @eq lst lf2 (lfappend (##hole##) lf3)
Sketch conj26_sketch2 : @eq lst lf2 (lfappend (rev (##hole##)) lf3)
Sketch conj26_term_sketch0 : @eq lst (lfappend (rev (rev x)) lf3) (##hole##)
Sketch conj26_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj27_sketch0 : @eq lst (lfappend x y) (lfappend (##hole##) lf3)
Sketch conj27_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj27_sketch2 : @eq lst (##hole##) (lfappend (rev lf6) lf3)
Sketch conj27_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (lfappend (rev lf6) lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj28_sketch0 : @eq lst (lfappend x y) (##hole##)
Sketch conj28_sketch1 : @eq lst (lfappend x y) (lfappend (##hole##) lf3)
Sketch conj28_sketch2 : @eq lst (##hole##) (lfappend (rev (rev x)) lf3)
Sketch conj28_sketch3 : @eq lst (lfappend x y) (lfappend (rev (##hole##)) lf3)
Sketch conj28_term_sketch0 : @eq lst (lfappend (rev (rev x)) lf3) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (rev (rev x)) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj49_sketch0 : @eq lst lf2 (##hole##)
Sketch conj49_sketch1 : @eq lst lf2 (lfappend lf4 (##hole##))
Sketch conj49_term_sketch0 : @eq lst (lfappend lf4 (rev lf5)) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (rev lf5) (##hole##)
Sketch conj51_sketch0 : @eq lst (lfappend x y) (##hole##)
Sketch conj51_sketch1 : @eq lst (lfappend x y) (lfappend lf4 (##hole##))
Sketch conj51_sketch2 : @eq lst (##hole##) (lfappend lf4 (rev lf5))
Sketch conj51_term_sketch0 : @eq lst (lfappend lf4 (rev lf5)) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (rev lf5) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj53_sketch0 : @eq lst lf2 (lfappend lf4 (##hole##))
Sketch conj53_sketch1 : @eq lst lf2 (##hole##)
Sketch conj53_sketch2 : @eq lst lf2 (lfappend lf4 (rev (##hole##)))
Sketch conj53_term_sketch0 : @eq lst (rev (rev y)) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (lfappend lf4 (rev (rev y))) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj55_sketch0 : @eq lst (lfappend x y) (lfappend lf4 (##hole##))
Sketch conj55_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj55_sketch2 : @eq lst (##hole##) (lfappend lf4 (rev (rev y)))
Sketch conj55_sketch3 : @eq lst (lfappend x y) (lfappend lf4 (rev (##hole##)))
Sketch conj55_term_sketch0 : @eq lst (rev (rev y)) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (lfappend lf4 (rev (rev y))) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj57_sketch0 : @eq lst lf2 (lfappend (##hole##) (rev lf5))
Sketch conj57_sketch1 : @eq lst lf2 (##hole##)
Sketch conj57_sketch2 : @eq lst lf2 (lfappend (rev lf6) (##hole##))
Sketch conj57_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj57_term_sketch1 : @eq lst (lfappend (rev lf6) (rev lf5)) (##hole##)
Sketch conj57_term_sketch2 : @eq lst (rev lf5) (##hole##)
Sketch conj58_sketch0 : @eq lst lf2 (lfappend (##hole##) (rev lf5))
Sketch conj58_sketch1 : @eq lst lf2 (lfappend (rev (rev x)) (##hole##))
Sketch conj58_sketch2 : @eq lst lf2 (##hole##)
Sketch conj58_sketch3 : @eq lst lf2 (lfappend (rev (##hole##)) (rev lf5))
Sketch conj58_term_sketch0 : @eq lst (rev (rev x)) (##hole##)
Sketch conj58_term_sketch1 : @eq lst (rev lf5) (##hole##)
Sketch conj58_term_sketch2 : @eq lst (lfappend (rev (rev x)) (rev lf5)) (##hole##)
Sketch conj58_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj59_sketch0 : @eq lst (lfappend x y) (lfappend (##hole##) (rev lf5))
Sketch conj59_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj59_sketch2 : @eq lst (lfappend x y) (lfappend (rev lf6) (##hole##))
Sketch conj59_sketch3 : @eq lst (##hole##) (lfappend (rev lf6) (rev lf5))
Sketch conj59_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (lfappend (rev lf6) (rev lf5)) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (rev lf5) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj60_sketch0 : @eq lst (lfappend x y) (lfappend (##hole##) (rev lf5))
Sketch conj60_sketch1 : @eq lst (lfappend x y) (lfappend (rev (rev x)) (##hole##))
Sketch conj60_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj60_sketch3 : @eq lst (##hole##) (lfappend (rev (rev x)) (rev lf5))
Sketch conj60_sketch4 : @eq lst (lfappend x y) (lfappend (rev (##hole##)) (rev lf5))
Sketch conj60_term_sketch0 : @eq lst (rev (rev x)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (rev lf5) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lfappend (rev (rev x)) (rev lf5)) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj60_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj61_sketch0 : @eq lst lf2 (lfappend (##hole##) (rev (rev y)))
Sketch conj61_sketch1 : @eq lst lf2 (##hole##)
Sketch conj61_sketch2 : @eq lst lf2 (lfappend (rev lf6) (##hole##))
Sketch conj61_sketch3 : @eq lst lf2 (lfappend (rev lf6) (rev (##hole##)))
Sketch conj61_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj61_term_sketch1 : @eq lst (lfappend (rev lf6) (rev (rev y))) (##hole##)
Sketch conj61_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj61_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj62_sketch0 : @eq lst lf2 (##hole##)
Sketch conj62_sketch1 : @eq lst lf2 (lfappend (rev (rev x)) (##hole##))
Sketch conj62_sketch2 : @eq lst lf2 (lfappend (##hole##) (rev (rev y)))
Sketch conj62_sketch3 : @eq lst lf2 (lfappend (rev (rev x)) (rev (##hole##)))
Sketch conj62_sketch4 : @eq lst lf2 (lfappend (rev (##hole##)) (rev (rev y)))
Sketch conj62_term_sketch0 : @eq lst (lfappend (rev (rev x)) (rev (rev y))) (##hole##)
Sketch conj62_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj62_term_sketch2 : @eq lst (rev (rev x)) (##hole##)
Sketch conj62_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj62_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj63_sketch0 : @eq lst (lfappend x y) (lfappend (##hole##) (rev (rev y)))
Sketch conj63_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj63_sketch2 : @eq lst (lfappend x y) (lfappend (rev lf6) (##hole##))
Sketch conj63_sketch3 : @eq lst (##hole##) (lfappend (rev lf6) (rev (rev y)))
Sketch conj63_sketch4 : @eq lst (lfappend x y) (lfappend (rev lf6) (rev (##hole##)))
Sketch conj63_term_sketch0 : @eq lst (rev lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (lfappend (rev lf6) (rev (rev y))) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (rev (rev y)) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1348 seconds
Problems per Sketch:
Sketch conj58_term_sketch2 --> Problem  synth_28
Sketch conj28_sketch0 --> Problem  synth_2
Sketch conj53_sketch1 --> Problem  synth_3
Sketch conj60_term_sketch1 --> Problem  synth_16
Sketch conj59_term_sketch2 --> Problem  synth_16
Sketch conj26_sketch2 --> Problem  synth_8
Sketch conj25_sketch1 --> Problem  synth_3
Sketch conj63_sketch4 --> Problem  synth_39
Sketch conj62_term_sketch3 --> Problem  synth_21
Sketch conj62_sketch1 --> Problem  synth_26
Sketch conj57_term_sketch2 --> Problem  synth_16
Sketch conj60_term_sketch4 --> Problem  synth_11
Sketch conj59_term_sketch1 --> Problem  synth_25
Sketch conj59_sketch1 --> Problem  synth_2
Sketch conj53_term_sketch2 --> Problem  synth_21
Sketch conj60_sketch0 --> Problem  synth_29
Sketch conj53_term_sketch0 --> Problem  synth_19
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch1 --> Problem  synth_10
Sketch conj63_term_sketch0 --> Problem  synth_6
Sketch conj58_sketch2 --> Problem  synth_3
Sketch conj55_sketch3 --> Problem  synth_22
Sketch conj26_term_sketch2 --> Problem  synth_11
Sketch conj61_term_sketch2 --> Problem  synth_19
Sketch conj61_sketch1 --> Problem  synth_3
Sketch conj60_term_sketch3 --> Problem  synth_2
Sketch conj60_term_sketch2 --> Problem  synth_28
Sketch conj60_sketch1 --> Problem  synth_31
Sketch conj55_sketch1 --> Problem  synth_2
Sketch conj62_sketch4 --> Problem  synth_37
Sketch conj28_term_sketch3 --> Problem  synth_11
Sketch conj60_sketch2 --> Problem  synth_2
Sketch conj59_sketch3 --> Problem  synth_25
Sketch conj27_term_sketch2 --> Problem  synth_2
Sketch conj63_term_sketch4 --> Problem  synth_21
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_30
Sketch conj28_sketch2 --> Problem  synth_9
Sketch conj26_term_sketch0 --> Problem  synth_9
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj57_term_sketch0 --> Problem  synth_6
Sketch conj51_term_sketch2 --> Problem  synth_2
Sketch conj27_sketch2 --> Problem  synth_7
Sketch conj28_term_sketch2 --> Problem  synth_2
Sketch conj60_term_sketch0 --> Problem  synth_10
Sketch conj27_sketch1 --> Problem  synth_2
Sketch conj58_term_sketch1 --> Problem  synth_16
Sketch conj53_sketch0 --> Problem  synth_14
Sketch conj62_sketch0 --> Problem  synth_3
Sketch conj62_sketch3 --> Problem  synth_36
Sketch conj60_sketch3 --> Problem  synth_28
Sketch conj51_sketch0 --> Problem  synth_2
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj61_sketch2 --> Problem  synth_24
Sketch conj62_term_sketch2 --> Problem  synth_10
Sketch conj63_term_sketch1 --> Problem  synth_35
Sketch conj58_term_sketch3 --> Problem  synth_11
Sketch conj57_sketch2 --> Problem  synth_24
Sketch conj51_term_sketch1 --> Problem  synth_16
Sketch conj51_term_sketch0 --> Problem  synth_15
Sketch conj26_term_sketch1 --> Problem  synth_10
Sketch conj58_sketch1 --> Problem  synth_26
Sketch conj55_term_sketch0 --> Problem  synth_19
Sketch conj27_term_sketch1 --> Problem  synth_7
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj49_sketch0 --> Problem  synth_3
Sketch conj63_sketch2 --> Problem  synth_30
Sketch conj62_term_sketch4 --> Problem  synth_11
Sketch conj61_sketch3 --> Problem  synth_34
Sketch conj25_term_sketch1 --> Problem  synth_7
Sketch conj55_term_sketch1 --> Problem  synth_20
Sketch conj26_sketch0 --> Problem  synth_3
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_29
Sketch conj49_term_sketch1 --> Problem  synth_16
Sketch conj58_sketch0 --> Problem  synth_23
Sketch conj63_term_sketch3 --> Problem  synth_2
Sketch conj63_sketch0 --> Problem  synth_38
Sketch conj61_term_sketch3 --> Problem  synth_21
Sketch conj55_term_sketch3 --> Problem  synth_21
Sketch conj63_sketch3 --> Problem  synth_35
Sketch conj62_term_sketch0 --> Problem  synth_2
Sketch conj26_sketch1 --> Problem  synth_5
Sketch conj59_term_sketch0 --> Problem  synth_6
Sketch conj53_term_sketch1 --> Problem  synth_20
Sketch conj28_term_sketch0 --> Problem  synth_9
Sketch conj59_term_sketch3 --> Problem  synth_2
Sketch conj51_sketch1 --> Problem  synth_17
Sketch conj55_sketch0 --> Problem  synth_17
Sketch conj63_sketch1 --> Problem  synth_2
Sketch conj53_sketch2 --> Problem  synth_18
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj57_sketch1 --> Problem  synth_3
Sketch conj19_sketch1 --> Problem  synth_4
Sketch conj62_term_sketch1 --> Problem  synth_19
Sketch conj28_sketch3 --> Problem  synth_13
Sketch conj58_sketch3 --> Problem  synth_27
Sketch conj25_sketch0 --> Problem  synth_5
Sketch conj62_sketch2 --> Problem  synth_33
Sketch conj28_sketch1 --> Problem  synth_12
Sketch conj57_term_sketch1 --> Problem  synth_25
Sketch conj61_term_sketch1 --> Problem  synth_35
Sketch conj60_sketch4 --> Problem  synth_32
Sketch conj57_sketch0 --> Problem  synth_23
Sketch conj61_term_sketch0 --> Problem  synth_6
Sketch conj61_sketch0 --> Problem  synth_33
Sketch conj55_term_sketch2 --> Problem  synth_2
Sketch conj27_term_sketch0 --> Problem  synth_6
Sketch conj51_sketch2 --> Problem  synth_15
Sketch conj25_term_sketch0 --> Problem  synth_6
Sketch conj63_term_sketch2 --> Problem  synth_19
Sketch conj55_sketch2 --> Problem  synth_20
Sketch conj49_sketch1 --> Problem  synth_14
Sketch conj58_term_sketch0 --> Problem  synth_10
Sketch conj49_term_sketch0 --> Problem  synth_15


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1558 seconds

Problem: synth_28
 lfappend (rev (rev x)) (rev lf5)
 lfappend (lfappend x Nil) (rev lf5)
 rev (rev (lfappend x (rev lf5)))
 lfappend (lfappend x (rev lf5)) Nil
 rev (lfappend lf5 (rev x))
 lfappend x (rev lf5)

Problem: synth_17
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_29
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_26

Problem: synth_9
 lfappend (rev (rev x)) lf3
 lfappend (lfappend x Nil) lf3
 lfappend (lfappend x lf3) Nil
 lfappend x (rev (rev lf3))
 lfappend x (lfappend lf3 Nil)
 lfappend x lf3

Problem: synth_30
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_11
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_39
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_1
 rev (lfappend (rev lf1) Nil)
 lfappend (rev (rev lf1)) Nil
 lfappend (lfappend lf1 Nil) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_15
 lfappend (rev (rev lf4)) (rev lf5)
 lfappend (lfappend lf4 Nil) (rev lf5)
 rev (rev (lfappend lf4 (rev lf5)))
 lfappend (lfappend lf4 (rev lf5)) Nil
 rev (lfappend lf5 (rev lf4))
 lfappend lf4 (rev lf5)

Problem: synth_31
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_14

Problem: synth_8

Problem: synth_34

Problem: synth_12
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_5

Problem: synth_37

Problem: synth_2
 lfappend (rev (rev x)) y
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_22
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_20
 lfappend (rev (rev lf4)) y
 lfappend (lfappend lf4 Nil) y
 lfappend (lfappend lf4 y) Nil
 lfappend lf4 (rev (rev y))
 lfappend lf4 (lfappend y Nil)
 lfappend lf4 y

Problem: synth_18

Problem: synth_21
 lfappend (rev (lfappend y Nil)) Nil
 lfappend (lfappend (rev y) Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 rev y

Problem: synth_25
 lfappend (rev lf6) (rev (lfappend lf5 Nil))
 lfappend (rev lf6) (lfappend (rev lf5) Nil)
 rev (lfappend lf5 (rev (rev lf6)))
 rev (lfappend lf5 (lfappend lf6 Nil))
 lfappend (rev lf6) (rev lf5)
 rev (lfappend lf5 lf6)

Problem: synth_13
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_6
 lfappend (rev (lfappend lf6 Nil)) Nil
 lfappend (lfappend (rev lf6) Nil) Nil
 rev (rev (rev lf6))
 rev (lfappend lf6 Nil)
 lfappend (rev lf6) Nil
 rev lf6

Problem: synth_7
 rev (lfappend (rev lf3) (rev (rev lf6)))
 rev (lfappend (rev lf3) (lfappend lf6 Nil))
 rev (lfappend (rev lf3) lf6)
 lfappend (rev lf6) (rev (rev lf3))
 lfappend (rev lf6) (lfappend lf3 Nil)
 lfappend (rev lf6) lf3

Problem: synth_4
 lfappend (rev (rev lf4)) lf3
 lfappend (lfappend lf4 Nil) lf3
 lfappend (lfappend lf4 lf3) Nil
 lfappend lf4 (rev (rev lf3))
 lfappend lf4 (lfappend lf3 Nil)
 lfappend lf4 lf3

Problem: synth_38
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_23

Problem: synth_27

Problem: synth_16
 lfappend (rev (lfappend lf5 Nil)) Nil
 lfappend (lfappend (rev lf5) Nil) Nil
 rev (rev (rev lf5))
 rev (lfappend lf5 Nil)
 lfappend (rev lf5) Nil
 rev lf5

Problem: synth_19
 rev (lfappend (rev y) Nil)
 lfappend (rev (rev y)) Nil
 lfappend (lfappend y Nil) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_10
 rev (lfappend (rev x) Nil)
 lfappend (rev (rev x)) Nil
 lfappend (lfappend x Nil) Nil
 rev (rev x)
 lfappend x Nil
 x

Problem: synth_33

Problem: synth_24

Problem: synth_3
 rev (lfappend (rev lf2) Nil)
 lfappend (rev (rev lf2)) Nil
 lfappend (lfappend lf2 Nil) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_32
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_36

Problem: synth_35
 rev (lfappend (rev y) (rev (rev lf6)))
 rev (lfappend (rev y) (lfappend lf6 Nil))
 rev (lfappend (rev y) lf6)
 lfappend (rev lf6) (rev (rev y))
 lfappend (rev lf6) (lfappend y Nil)
 lfappend (rev lf6) y

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1558 seconds
Lemmas:
Lemma candidate_1: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev (lfappend (rev lf1) Nil)) lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst (lfappend (rev (rev lf1)) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (lfappend (lfappend lf1 Nil) Nil) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_9: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_10: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_11: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_12: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_13: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_14: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_19: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_20: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (rev (rev lf4)) lf3).
Lemma candidate_21: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 Nil) lf3).
Lemma candidate_22: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) Nil).
Lemma candidate_23: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (rev (rev lf3))).
Lemma candidate_24: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (lfappend lf3 Nil)).
Lemma candidate_25: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 lf3).
Lemma candidate_26: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_27: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_28: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_29: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_30: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_31: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_32: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) lf3) (lfappend lf4 lf3).
Lemma candidate_33: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) lf3) (lfappend lf4 lf3).
Lemma candidate_34: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf4 lf3) Nil) (lfappend lf4 lf3).
Lemma candidate_35: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev lf3))) (lfappend lf4 lf3).
Lemma candidate_36: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend lf3 Nil)) (lfappend lf4 lf3).
Lemma candidate_37: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 lf3).
Lemma candidate_38: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (rev (rev lf4)) lf3).
Lemma candidate_39: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 Nil) lf3).
Lemma candidate_40: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend (lfappend lf4 lf3) Nil).
Lemma candidate_41: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (rev (rev lf3))).
Lemma candidate_42: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 (lfappend lf3 Nil)).
Lemma candidate_43: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf4 lf3).
Lemma candidate_44: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_45: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_46: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_47: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_48: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_49: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_50: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_51: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_52: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_53: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_54: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_55: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_56: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_57: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_58: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_59: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_60: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_61: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_62: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (rev (lfappend (rev lf3) (rev (rev lf6)))).
Lemma candidate_63: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3)   (rev (lfappend (rev lf3) (lfappend lf6 Nil))).
Lemma candidate_64: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (rev (lfappend (rev lf3) lf6)).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) (rev (rev lf3))).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) lf3).
Lemma candidate_68: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_69: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_70: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_71: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_72: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_73: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_74: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (rev (rev x)) lf3).
Lemma candidate_75: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (lfappend x Nil) lf3).
Lemma candidate_76: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (lfappend x lf3) Nil).
Lemma candidate_77: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend x (rev (rev lf3))).
Lemma candidate_78: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend x (lfappend lf3 Nil)).
Lemma candidate_79: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend x lf3).
Lemma candidate_80: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_81: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_82: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_83: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_84: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_85: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_86: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_87: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_88: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_89: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_90: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_91: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_92: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) lf3).
Lemma candidate_93: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend (rev (rev x)) Nil) lf3).
Lemma candidate_94: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend (lfappend x Nil) Nil) lf3).
Lemma candidate_95: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma candidate_96: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) lf3).
Lemma candidate_97: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (x) lf3).
Lemma candidate_98: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_99: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_100: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_101: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_102: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_103: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_104: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf3) (rev (rev lf6)))) (lfappend (rev lf6) lf3).
Lemma candidate_105: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf3) (lfappend lf6 Nil)))   (lfappend (rev lf6) lf3).
Lemma candidate_106: forall (lf3 : lst) (lf6 : lst), @eq lst (rev (lfappend (rev lf3) lf6)) (lfappend (rev lf6) lf3).
Lemma candidate_107: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev lf3))) (lfappend (rev lf6) lf3).
Lemma candidate_108: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (lfappend lf3 Nil)) (lfappend (rev lf6) lf3).
Lemma candidate_109: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) lf3).
Lemma candidate_110: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_111: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_112: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_113: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_114: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_115: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_116: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (rev (lfappend (rev lf3) (rev (rev lf6)))).
Lemma candidate_117: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3)   (rev (lfappend (rev lf3) (lfappend lf6 Nil))).
Lemma candidate_118: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (rev (lfappend (rev lf3) lf6)).
Lemma candidate_119: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) (rev (rev lf3))).
Lemma candidate_120: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_121: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf3) (lfappend (rev lf6) lf3).
Lemma candidate_122: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_123: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_124: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_125: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_126: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_127: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_128: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_129: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_130: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_131: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_132: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_133: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_134: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) lf3).
Lemma candidate_135: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend (rev (rev x)) Nil) lf3).
Lemma candidate_136: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend (lfappend x Nil) Nil) lf3).
Lemma candidate_137: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma candidate_138: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) lf3).
Lemma candidate_139: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (x) lf3).
Lemma candidate_140: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (rev (rev x)) lf3).
Lemma candidate_141: forall (lf3 : lst) (x : lst), @eq lst (lfappend (lfappend x Nil) lf3) (lfappend (rev (rev x)) lf3).
Lemma candidate_142: forall (lf3 : lst) (x : lst), @eq lst (lfappend (lfappend x lf3) Nil) (lfappend (rev (rev x)) lf3).
Lemma candidate_143: forall (lf3 : lst) (x : lst), @eq lst (lfappend x (rev (rev lf3))) (lfappend (rev (rev x)) lf3).
Lemma candidate_144: forall (lf3 : lst) (x : lst), @eq lst (lfappend x (lfappend lf3 Nil)) (lfappend (rev (rev x)) lf3).
Lemma candidate_145: forall (lf3 : lst) (x : lst), @eq lst (lfappend x lf3) (lfappend (rev (rev x)) lf3).
Lemma candidate_146: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y)   (lfappend (rev (lfappend (rev (lfappend x Nil)) Nil)) lf3).
Lemma candidate_147: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y)   (lfappend (rev (lfappend (lfappend (rev x) Nil) Nil)) lf3).
Lemma candidate_148: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev (rev (rev x)))) lf3).
Lemma candidate_149: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev (lfappend x Nil))) lf3).
Lemma candidate_150: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) lf3).
Lemma candidate_151: forall (lf3 : lst) (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) lf3).
Lemma candidate_152: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (rev (rev x)) lf3).
Lemma candidate_153: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (lfappend x Nil) lf3).
Lemma candidate_154: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend (lfappend x lf3) Nil).
Lemma candidate_155: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend x (rev (rev lf3))).
Lemma candidate_156: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend x (lfappend lf3 Nil)).
Lemma candidate_157: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev (rev x)) lf3) (lfappend x lf3).
Lemma candidate_158: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_159: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_160: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_161: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_162: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_163: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_164: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_165: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_166: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_167: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_168: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_169: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_170: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_171: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_172: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_173: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_174: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_175: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_176: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_177: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_178: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_179: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_180: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_181: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_182: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend (rev (rev lf4)) (rev lf5)).
Lemma candidate_183: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend (lfappend lf4 Nil) (rev lf5)).
Lemma candidate_184: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (rev (rev (lfappend lf4 (rev lf5)))).
Lemma candidate_185: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend (lfappend lf4 (rev lf5)) Nil).
Lemma candidate_186: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_187: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend lf4 (rev lf5)).
Lemma candidate_188: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_189: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_190: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_191: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_192: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_193: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_194: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_195: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_196: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_197: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_198: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_199: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_200: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (lfappend (rev y) Nil))).
Lemma candidate_201: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (lfappend (rev (rev y)) Nil)).
Lemma candidate_202: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (lfappend (lfappend y Nil) Nil)).
Lemma candidate_203: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma candidate_204: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (lfappend y Nil)).
Lemma candidate_205: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (y)).
Lemma candidate_206: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev (rev lf4)) (rev lf5)) (lfappend lf4 (rev lf5)).
Lemma candidate_207: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 Nil) (rev lf5)) (lfappend lf4 (rev lf5)).
Lemma candidate_208: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (rev (lfappend lf4 (rev lf5)))) (lfappend lf4 (rev lf5)).
Lemma candidate_209: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf4 (rev lf5)) Nil) (lfappend lf4 (rev lf5)).
Lemma candidate_210: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 (rev lf4))) (lfappend lf4 (rev lf5)).
Lemma candidate_211: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend lf4 (rev lf5)).
Lemma candidate_212: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend (rev (rev lf4)) (rev lf5)).
Lemma candidate_213: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend (lfappend lf4 Nil) (rev lf5)).
Lemma candidate_214: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (rev (rev (lfappend lf4 (rev lf5)))).
Lemma candidate_215: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend (lfappend lf4 (rev lf5)) Nil).
Lemma candidate_216: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (rev (lfappend lf5 (rev lf4))).
Lemma candidate_217: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (rev lf5)) (lfappend lf4 (rev lf5)).
Lemma candidate_218: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_219: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_220: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_221: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_222: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_223: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_224: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_225: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_226: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_227: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_228: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_229: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_230: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_231: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_232: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_233: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_234: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_235: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_236: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_237: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_238: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_239: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_240: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_241: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_242: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend (rev (rev lf4)) y).
Lemma candidate_243: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend (lfappend lf4 Nil) y).
Lemma candidate_244: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend (lfappend lf4 y) Nil).
Lemma candidate_245: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 (rev (rev y))).
Lemma candidate_246: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 (lfappend y Nil)).
Lemma candidate_247: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 y).
Lemma candidate_248: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_249: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_250: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_251: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_252: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_253: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_254: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (lfappend (rev y) Nil))).
Lemma candidate_255: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (lfappend (rev (rev y)) Nil)).
Lemma candidate_256: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (lfappend (lfappend y Nil) Nil)).
Lemma candidate_257: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma candidate_258: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (lfappend y Nil)).
Lemma candidate_259: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (y)).
Lemma candidate_260: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_261: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_262: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_263: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_264: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_265: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_266: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) y) (lfappend lf4 (rev (rev y))).
Lemma candidate_267: forall (y : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) y) (lfappend lf4 (rev (rev y))).
Lemma candidate_268: forall (y : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf4 y) Nil) (lfappend lf4 (rev (rev y))).
Lemma candidate_269: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 (rev (rev y))).
Lemma candidate_270: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend y Nil)) (lfappend lf4 (rev (rev y))).
Lemma candidate_271: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 y) (lfappend lf4 (rev (rev y))).
Lemma candidate_272: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y)   (lfappend lf4 (rev (lfappend (rev (lfappend y Nil)) Nil))).
Lemma candidate_273: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y)   (lfappend lf4 (rev (lfappend (lfappend (rev y) Nil) Nil))).
Lemma candidate_274: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev (rev (rev y))))).
Lemma candidate_275: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev (lfappend y Nil)))).
Lemma candidate_276: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (lfappend (rev y) Nil))).
Lemma candidate_277: forall (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend x y) (lfappend lf4 (rev (rev y))).
Lemma candidate_278: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_279: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_280: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_281: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_282: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_283: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_284: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend (rev (rev lf4)) y).
Lemma candidate_285: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend (lfappend lf4 Nil) y).
Lemma candidate_286: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend (lfappend lf4 y) Nil).
Lemma candidate_287: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 (rev (rev y))).
Lemma candidate_288: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 (lfappend y Nil)).
Lemma candidate_289: forall (y : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev y))) (lfappend lf4 y).
Lemma candidate_290: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_291: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_292: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_293: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_294: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_295: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_296: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_297: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_298: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_299: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_300: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_301: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_302: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_303: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_304: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_305: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_306: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_307: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_308: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_309: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_310: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_311: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_312: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_313: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_314: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5))   (lfappend (rev lf6) (rev (lfappend lf5 Nil))).
Lemma candidate_315: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5))   (lfappend (rev lf6) (lfappend (rev lf5) Nil)).
Lemma candidate_316: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (rev (lfappend lf5 (rev (rev lf6)))).
Lemma candidate_317: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5))   (rev (lfappend lf5 (lfappend lf6 Nil))).
Lemma candidate_318: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (lfappend (rev lf6) (rev lf5)).
Lemma candidate_319: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (rev (lfappend lf5 lf6)).
Lemma candidate_320: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_321: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_322: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_323: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_324: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_325: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_326: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_327: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_328: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_329: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_330: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_331: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_332: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_333: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_334: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_335: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_336: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_337: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_338: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_339: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_340: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_341: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_342: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_343: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_344: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_345: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5))   (lfappend (lfappend x Nil) (rev lf5)).
Lemma candidate_346: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (rev (rev (lfappend x (rev lf5)))).
Lemma candidate_347: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5))   (lfappend (lfappend x (rev lf5)) Nil).
Lemma candidate_348: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (rev (lfappend lf5 (rev x))).
Lemma candidate_349: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (lfappend x (rev lf5)).
Lemma candidate_350: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_351: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_352: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_353: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_354: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_355: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_356: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) (rev lf5)).
Lemma candidate_357: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (lfappend (rev (rev x)) Nil) (rev lf5)).
Lemma candidate_358: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (lfappend (lfappend x Nil) Nil) (rev lf5)).
Lemma candidate_359: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_360: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (rev lf5)).
Lemma candidate_361: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (x) (rev lf5)).
Lemma candidate_362: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_363: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_364: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_365: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_366: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_367: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_368: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (lfappend (rev y) Nil))).
Lemma candidate_369: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (lfappend (rev (rev y)) Nil)).
Lemma candidate_370: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_371: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_372: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_373: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (y)).
Lemma candidate_374: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (lfappend lf5 Nil)))   (lfappend (rev lf6) (rev lf5)).
Lemma candidate_375: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (lfappend (rev lf5) Nil))   (lfappend (rev lf6) (rev lf5)).
Lemma candidate_376: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (rev (rev lf6)))) (lfappend (rev lf6) (rev lf5)).
Lemma candidate_377: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 (lfappend lf6 Nil)))   (lfappend (rev lf6) (rev lf5)).
Lemma candidate_378: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (lfappend (rev lf6) (rev lf5)).
Lemma candidate_379: forall (lf5 : lst) (lf6 : lst), @eq lst (rev (lfappend lf5 lf6)) (lfappend (rev lf6) (rev lf5)).
Lemma candidate_380: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_381: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_382: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_383: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_384: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_385: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_386: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5))   (lfappend (rev lf6) (rev (lfappend lf5 Nil))).
Lemma candidate_387: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5))   (lfappend (rev lf6) (lfappend (rev lf5) Nil)).
Lemma candidate_388: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (rev (lfappend lf5 (rev (rev lf6)))).
Lemma candidate_389: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5))   (rev (lfappend lf5 (lfappend lf6 Nil))).
Lemma candidate_390: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (lfappend (rev lf6) (rev lf5)).
Lemma candidate_391: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev lf5)) (rev (lfappend lf5 lf6)).
Lemma candidate_392: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_393: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_394: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_395: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_396: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_397: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_398: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_399: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_400: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_401: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_402: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_403: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_404: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) (rev lf5)).
Lemma candidate_405: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (lfappend (rev (rev x)) Nil) (rev lf5)).
Lemma candidate_406: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (lfappend (lfappend x Nil) Nil) (rev lf5)).
Lemma candidate_407: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_408: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (rev lf5)).
Lemma candidate_409: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (x) (rev lf5)).
Lemma candidate_410: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (lfappend (rev y) Nil))).
Lemma candidate_411: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (lfappend (rev (rev y)) Nil)).
Lemma candidate_412: forall (y : lst) (x : lst), @eq lst (lfappend x y)   (lfappend (rev (rev x)) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_413: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_414: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (lfappend y Nil)).
Lemma candidate_415: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (y)).
Lemma candidate_416: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_417: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_418: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_419: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_420: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_421: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_422: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_423: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x Nil) (rev lf5))   (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_424: forall (x : lst) (lf5 : lst), @eq lst (rev (rev (lfappend x (rev lf5)))) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_425: forall (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend x (rev lf5)) Nil)   (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_426: forall (x : lst) (lf5 : lst), @eq lst (rev (lfappend lf5 (rev x))) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_427: forall (x : lst) (lf5 : lst), @eq lst (lfappend x (rev lf5)) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_428: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y)   (lfappend (rev (lfappend (rev (lfappend x Nil)) Nil)) (rev lf5)).
Lemma candidate_429: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y)   (lfappend (rev (lfappend (lfappend (rev x) Nil) Nil)) (rev lf5)).
Lemma candidate_430: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (rev (rev (rev x)))) (rev lf5)).
Lemma candidate_431: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (rev (lfappend x Nil))) (rev lf5)).
Lemma candidate_432: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) (rev lf5)).
Lemma candidate_433: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_434: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_435: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_436: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_437: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_438: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_439: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_440: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev (lfappend lf5 Nil)) Nil).
Lemma candidate_441: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (lfappend (rev lf5) Nil) Nil).
Lemma candidate_442: forall (lf5 : lst), @eq lst (rev lf5) (rev (rev (rev lf5))).
Lemma candidate_443: forall (lf5 : lst), @eq lst (rev lf5) (rev (lfappend lf5 Nil)).
Lemma candidate_444: forall (lf5 : lst), @eq lst (rev lf5) (lfappend (rev lf5) Nil).
Lemma candidate_445: forall (lf5 : lst), @eq lst (rev lf5) (rev lf5).
Lemma candidate_446: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (lfappend (rev (rev x)) (rev lf5)).
Lemma candidate_447: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5))   (lfappend (lfappend x Nil) (rev lf5)).
Lemma candidate_448: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (rev (rev (lfappend x (rev lf5)))).
Lemma candidate_449: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5))   (lfappend (lfappend x (rev lf5)) Nil).
Lemma candidate_450: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (rev (lfappend lf5 (rev x))).
Lemma candidate_451: forall (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev x)) (rev lf5)) (lfappend x (rev lf5)).
Lemma candidate_452: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_453: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_454: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_455: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_456: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_457: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_458: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_459: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_460: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_461: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_462: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_463: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_464: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_465: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_466: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_467: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_468: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_469: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_470: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_471: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_472: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_473: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_474: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_475: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_476: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_477: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_478: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (rev (lfappend (rev y) lf6)).
Lemma candidate_479: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_480: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y)))   (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_481: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (lfappend (rev lf6) y).
Lemma candidate_482: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_483: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_484: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_485: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_486: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_487: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_488: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_489: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_490: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_491: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_492: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_493: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_494: forall (lf2 : lst), @eq lst lf2 (rev (lfappend (rev lf2) Nil)).
Lemma candidate_495: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_496: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_497: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_498: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_499: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_500: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (rev (rev x)) y).
Lemma candidate_501: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x Nil) y).
Lemma candidate_502: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend (lfappend x y) Nil).
Lemma candidate_503: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (rev (rev y))).
Lemma candidate_504: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x (lfappend y Nil)).
Lemma candidate_505: forall (y : lst) (x : lst), @eq lst (lfappend (rev (rev x)) (rev (rev y))) (lfappend x y).
Lemma candidate_506: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_507: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_508: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_509: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_510: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_511: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_512: forall (x : lst), @eq lst (rev (rev x)) (rev (lfappend (rev x) Nil)).
Lemma candidate_513: forall (x : lst), @eq lst (rev (rev x)) (lfappend (rev (rev x)) Nil).
Lemma candidate_514: forall (x : lst), @eq lst (rev (rev x)) (lfappend (lfappend x Nil) Nil).
Lemma candidate_515: forall (x : lst), @eq lst (rev (rev x)) (rev (rev x)).
Lemma candidate_516: forall (x : lst), @eq lst (rev (rev x)) (lfappend x Nil).
Lemma candidate_517: forall (x : lst), @eq lst (rev (rev x)) (x).
Lemma candidate_518: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_519: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_520: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_521: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_522: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_523: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_524: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_525: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_526: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_527: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_528: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_529: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_530: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (lfappend (rev x) Nil)) (rev (rev y))).
Lemma candidate_531: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend (rev (rev x)) Nil) (rev (rev y))).
Lemma candidate_532: forall (y : lst) (x : lst), @eq lst (lfappend x y)   (lfappend (lfappend (lfappend x Nil) Nil) (rev (rev y))).
Lemma candidate_533: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) (rev (rev y))).
Lemma candidate_534: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (rev (rev y))).
Lemma candidate_535: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (x) (rev (rev y))).
Lemma candidate_536: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_537: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_538: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_539: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_540: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_541: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_542: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (lfappend (rev y) Nil))).
Lemma candidate_543: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (lfappend (rev (rev y)) Nil)).
Lemma candidate_544: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (lfappend (lfappend y Nil) Nil)).
Lemma candidate_545: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_546: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_547: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (y)).
Lemma candidate_548: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (rev (rev lf6))))   (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_549: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) (lfappend lf6 Nil)))   (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_550: forall (y : lst) (lf6 : lst), @eq lst (rev (lfappend (rev y) lf6)) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_551: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_552: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (lfappend y Nil))   (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_553: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_554: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y)   (lfappend (rev lf6) (rev (lfappend (rev (lfappend y Nil)) Nil))).
Lemma candidate_555: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y)   (lfappend (rev lf6) (rev (lfappend (lfappend (rev y) Nil) Nil))).
Lemma candidate_556: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev (rev (rev y))))).
Lemma candidate_557: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev (lfappend y Nil)))).
Lemma candidate_558: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (lfappend (rev y) Nil))).
Lemma candidate_559: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend x y) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_560: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev (lfappend lf6 Nil)) Nil).
Lemma candidate_561: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (lfappend (rev lf6) Nil) Nil).
Lemma candidate_562: forall (lf6 : lst), @eq lst (rev lf6) (rev (rev (rev lf6))).
Lemma candidate_563: forall (lf6 : lst), @eq lst (rev lf6) (rev (lfappend lf6 Nil)).
Lemma candidate_564: forall (lf6 : lst), @eq lst (rev lf6) (lfappend (rev lf6) Nil).
Lemma candidate_565: forall (lf6 : lst), @eq lst (rev lf6) (rev lf6).
Lemma candidate_566: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y)))   (rev (lfappend (rev y) (rev (rev lf6)))).
Lemma candidate_567: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y)))   (rev (lfappend (rev y) (lfappend lf6 Nil))).
Lemma candidate_568: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (rev (lfappend (rev y) lf6)).
Lemma candidate_569: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (lfappend (rev lf6) (rev (rev y))).
Lemma candidate_570: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y)))   (lfappend (rev lf6) (lfappend y Nil)).
Lemma candidate_571: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev (rev y))) (lfappend (rev lf6) y).
Lemma candidate_572: forall (y : lst), @eq lst (rev (rev y)) (rev (lfappend (rev y) Nil)).
Lemma candidate_573: forall (y : lst), @eq lst (rev (rev y)) (lfappend (rev (rev y)) Nil).
Lemma candidate_574: forall (y : lst), @eq lst (rev (rev y)) (lfappend (lfappend y Nil) Nil).
Lemma candidate_575: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_576: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_577: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_578: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_579: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_580: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_581: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_582: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_583: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_584: forall (y : lst), @eq lst (rev y) (lfappend (rev (lfappend y Nil)) Nil).
Lemma candidate_585: forall (y : lst), @eq lst (rev y) (lfappend (lfappend (rev y) Nil) Nil).
Lemma candidate_586: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_587: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_588: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_589: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 2180 seconds
Duplicates removed: 391
Filtered by Quickchick: 40
Filtered by script: 158
Remaining: 0

Lemmas: 
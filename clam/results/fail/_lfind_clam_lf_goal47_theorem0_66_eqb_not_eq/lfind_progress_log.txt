File Information
- File name: goal47
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal47_theorem0_66_eqb_not_eq
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal47_theorem0_66_eqb_not_eq
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : natural) (z0 : lst) (_ : not (@eq natural x0 y0)),
@eq bool (mem (insort z0 y0) x0) (mem z0 x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))

* Hypothesis:
IHz : @eq bool (mem (insort z y) x) (mem z x)
x : natural
H : not (@eq natural x y)
y : natural
z : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : lst
n : natural

* Terms:
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)) : Prop
lfeqb x y : bool
@eq natural x y : Prop
not (@eq natural x y) : Prop
x : natural
mem (insort z y) x : bool
y : natural
@eq bool (mem (insort z y) x) (mem z x) : Prop
orb (lfeqb x y) (orb (lfeqb x n) (mem z x)) : bool
mem z x : bool
orb (lfeqb x n) (mem z x) : bool
bool : Set
lst : Set
lfeqb x n : bool
z : lst
natural : Set
n : natural
insort z y : lst

* Functions:
mem  : forall (_ : lst) (_ : natural), bool
lfeqb  : forall (_ : natural) (_ : natural), bool
orb  : forall (_ : bool) (_ : bool), bool
not  : forall _ : Prop, Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
insort  : forall (_ : lst) (_ : natural), lst

<---GENERALIZATION--->
Time elapsed: 148 seconds
Generalized Variables:
lf3 : bool = lfeqb x y
lf1 : bool = orb (lfeqb x y) (orb (lfeqb x n) (mem z x))
lf4 : bool = lfeqb x n
lf5 : bool = mem z x
lf2 : bool = orb (lfeqb x n) (mem z x)

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).


<---VALIDITY CHECKS--->
Time elapsed: 360 seconds
Valid:

Invalid:
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 393 seconds
Generalizations:
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : lst) (n : natural), forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj30_imp: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj28_imp: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj26_imp: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj25_imp: forall (lf2 : bool) (x : natural) (y : natural), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 425 seconds
Valid:
Lemma conj25_imp: forall (lf2 : bool) (x : natural) (y : natural), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj26_imp: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj30_imp: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj28_imp: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : lst) (n : natural), forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).


<---CREATE SKETCHES--->
Time elapsed: 425 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool (orb lf4 lf5) (##hole##)
Sketch conj4_sketch0 : @eq bool lf1 (orb lf4 (##hole##))
Sketch conj4_sketch1 : @eq bool lf1 (##hole##)
Sketch conj4_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj4_term_sketch1 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj6_sketch0 : @eq bool lf1 (orb (##hole##) lf5)
Sketch conj6_sketch1 : @eq bool lf1 (##hole##)
Sketch conj6_term_sketch0 : @eq bool (lfeqb x n) (##hole##)
Sketch conj6_term_sketch1 : @eq bool (orb (lfeqb x n) lf5) (##hole##)
Sketch conj8_sketch0 : @eq bool lf1 (orb (lfeqb x n) (##hole##))
Sketch conj8_sketch1 : @eq bool lf1 (##hole##)
Sketch conj8_sketch2 : @eq bool lf1 (orb (##hole##) (mem z x))
Sketch conj8_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj8_term_sketch2 : @eq bool (lfeqb x n) (##hole##)
Sketch conj9_sketch0 : @eq bool (##hole##) lf2
Sketch conj9_term_sketch0 : @eq bool (orb lf3 lf2) (##hole##)
Sketch conj10_sketch0 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj10_sketch1 : @eq bool (##hole##) (orb lf4 lf5)
Sketch conj10_term_sketch0 : @eq bool (orb lf4 lf5) (##hole##)
Sketch conj10_term_sketch1 : @eq bool (orb lf3 (orb lf4 lf5)) (##hole##)
Sketch conj12_sketch0 : @eq bool (orb lf3 (orb lf4 (##hole##))) (orb lf4 (##hole##))
Sketch conj12_sketch1 : @eq bool (##hole##) (orb lf4 (mem z x))
Sketch conj12_sketch2 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj12_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj12_term_sketch1 : @eq bool (orb lf3 (orb lf4 (mem z x))) (##hole##)
Sketch conj12_term_sketch2 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj14_sketch0 : @eq bool (##hole##) (orb (lfeqb x n) lf5)
Sketch conj14_sketch1 : @eq bool (orb lf3 (orb (##hole##) lf5)) (orb (##hole##) lf5)
Sketch conj14_sketch2 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj14_term_sketch0 : @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (lfeqb x n) (##hole##)
Sketch conj14_term_sketch2 : @eq bool (orb (lfeqb x n) lf5) (##hole##)
Sketch conj16_sketch0 : @eq bool (orb lf3 (orb (lfeqb x n) (##hole##))) (orb (lfeqb x n) (##hole##))
Sketch conj16_sketch1 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj16_sketch2 : @eq bool (orb lf3 (orb (##hole##) (mem z x))) (orb (##hole##) (mem z x))
Sketch conj16_sketch3 : @eq bool (##hole##) (orb (lfeqb x n) (mem z x))
Sketch conj16_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj16_term_sketch1 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj16_term_sketch2 : @eq bool (lfeqb x n) (##hole##)
Sketch conj16_term_sketch3 : @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (##hole##)
Sketch conj25_sketch0 : @eq bool (##hole##) lf2
Sketch conj25_sketch1 : @eq bool (orb (##hole##) lf2) lf2
Sketch conj25_term_sketch0 : @eq bool (orb (lfeqb x y) lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq bool (lfeqb x y) (##hole##)
Sketch conj26_sketch0 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj26_sketch1 : @eq bool (orb (##hole##) (orb lf4 lf5)) (orb lf4 lf5)
Sketch conj26_sketch2 : @eq bool (##hole##) (orb lf4 lf5)
Sketch conj26_term_sketch0 : @eq bool (orb lf4 lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq bool (lfeqb x y) (##hole##)
Sketch conj26_term_sketch2 : @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (##hole##)
Sketch conj28_imp_sketch2 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (##hole##),
@eq bool (orb (lfeqb x y) (orb lf4 (##hole##))) (orb lf4 (##hole##))
Sketch conj28_imp_sketch0 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (##hole##) (orb lf4 (mem z x))) (orb lf4 (mem z x))
Sketch conj28_imp_sketch3 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (##hole##) (orb lf4 (mem z x))
Sketch conj28_imp_sketch1 : forall _ : forall _ : not (@eq natural x y), @eq bool (##hole##) (mem z x),
@eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x))
Sketch conj28_imp_sketch4 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj28_imp_sketch5 : forall
  _ : forall _ : not (@eq natural x y), @eq bool (mem (##hole##) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x))
Sketch conj28_imp_term_sketch2 : @eq bool (mem z x) (##hole##)
Sketch conj28_imp_term_sketch0 : @eq bool (lfeqb x y) (##hole##)
Sketch conj28_imp_term_sketch3 : @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (##hole##)
Sketch conj28_imp_term_sketch1 : @eq bool (mem (insort z y) x) (##hole##)
Sketch conj28_imp_term_sketch4 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj28_imp_term_sketch5 : @eq lst (insort z y) (##hole##)
Sketch conj28_sketch0 : @eq bool (orb (lfeqb x y) (orb lf4 (##hole##))) (orb lf4 (##hole##))
Sketch conj28_sketch1 : @eq bool (orb (##hole##) (orb lf4 (mem z x))) (orb lf4 (mem z x))
Sketch conj28_sketch2 : @eq bool (##hole##) (orb lf4 (mem z x))
Sketch conj28_sketch3 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj28_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj28_term_sketch1 : @eq bool (lfeqb x y) (##hole##)
Sketch conj28_term_sketch2 : @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (##hole##)
Sketch conj28_term_sketch3 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj30_sketch0 : @eq bool (orb (##hole##) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5)
Sketch conj30_sketch1 : @eq bool (##hole##) (orb (lfeqb x n) lf5)
Sketch conj30_sketch2 : @eq bool (orb (lfeqb x y) (orb (##hole##) lf5)) (orb (##hole##) lf5)
Sketch conj30_sketch3 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj30_term_sketch0 : @eq bool (lfeqb x y) (##hole##)
Sketch conj30_term_sketch1 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (##hole##)
Sketch conj30_term_sketch2 : @eq bool (lfeqb x n) (##hole##)
Sketch conj30_term_sketch3 : @eq bool (orb (lfeqb x n) lf5) (##hole##)
Sketch conj32_imp_sketch3 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (##hole##),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (##hole##)))
  (orb (lfeqb x n) (##hole##))
Sketch conj32_imp_sketch4 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj32_imp_sketch0 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (##hole##) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))
Sketch conj32_imp_sketch1 : forall _ : forall _ : not (@eq natural x y), @eq bool (##hole##) (mem z x),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))
Sketch conj32_imp_sketch5 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb (##hole##) (mem z x)))
  (orb (##hole##) (mem z x))
Sketch conj32_imp_sketch2 : forall
  _ : forall _ : not (@eq natural x y),
      @eq bool (mem (insort z y) x) (mem z x),
@eq bool (##hole##) (orb (lfeqb x n) (mem z x))
Sketch conj32_imp_sketch6 : forall
  _ : forall _ : not (@eq natural x y), @eq bool (mem (##hole##) x) (mem z x),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))
Sketch conj32_imp_term_sketch3 : @eq bool (mem z x) (##hole##)
Sketch conj32_imp_term_sketch4 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj32_imp_term_sketch0 : @eq bool (lfeqb x y) (##hole##)
Sketch conj32_imp_term_sketch1 : @eq bool (mem (insort z y) x) (##hole##)
Sketch conj32_imp_term_sketch5 : @eq bool (lfeqb x n) (##hole##)
Sketch conj32_imp_term_sketch2 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x))) (##hole##)
Sketch conj32_imp_term_sketch6 : @eq lst (insort z y) (##hole##)
Sketch conj32_sketch0 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (##hole##)))
  (orb (lfeqb x n) (##hole##))
Sketch conj32_sketch1 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj32_sketch2 : @eq bool (orb (##hole##) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))
Sketch conj32_sketch3 : @eq bool (orb (lfeqb x y) (orb (##hole##) (mem z x)))
  (orb (##hole##) (mem z x))
Sketch conj32_sketch4 : @eq bool (##hole##) (orb (lfeqb x n) (mem z x))
Sketch conj32_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj32_term_sketch1 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj32_term_sketch2 : @eq bool (lfeqb x y) (##hole##)
Sketch conj32_term_sketch3 : @eq bool (lfeqb x n) (##hole##)
Sketch conj32_term_sketch4 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 4578 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_46
Sketch conj30_sketch0 --> Problem  synth_39
Sketch conj28_imp_term_sketch4 --> Problem  synth_5
Sketch conj12_sketch0 --> Problem  synth_16
Sketch conj32_imp_sketch0 --> Problem  synth_43
Sketch conj28_sketch0 --> Problem  synth_37
Sketch conj16_sketch3 --> Problem  synth_11
Sketch conj32_imp_term_sketch4 --> Problem  synth_11
Sketch conj26_sketch2 --> Problem  synth_2
Sketch conj25_sketch1 --> Problem  synth_23
Sketch conj32_imp_sketch1 --> Problem  synth_44
Sketch conj16_term_sketch1 --> Problem  synth_11
Sketch conj14_term_sketch2 --> Problem  synth_8
Sketch conj8_sketch1 --> Problem  synth_1
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj6_term_sketch0 --> Problem  synth_7
Sketch conj30_term_sketch3 --> Problem  synth_8
Sketch conj8_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch1 --> Problem  synth_25
Sketch conj28_imp_sketch3 --> Problem  synth_31
Sketch conj28_imp_term_sketch5 --> Problem  synth_36
Sketch conj26_term_sketch2 --> Problem  synth_28
Sketch conj14_term_sketch1 --> Problem  synth_7
Sketch conj32_imp_term_sketch0 --> Problem  synth_25
Sketch conj12_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch1 --> Problem  synth_11
Sketch conj32_sketch0 --> Problem  synth_48
Sketch conj30_sketch2 --> Problem  synth_40
Sketch conj10_sketch1 --> Problem  synth_2
Sketch conj9_term_sketch0 --> Problem  synth_13
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_5
Sketch conj16_sketch1 --> Problem  synth_14
Sketch conj12_sketch1 --> Problem  synth_5
Sketch conj32_imp_sketch4 --> Problem  synth_33
Sketch conj12_sketch2 --> Problem  synth_14
Sketch conj32_sketch3 --> Problem  synth_45
Sketch conj32_term_sketch3 --> Problem  synth_7
Sketch conj28_sketch2 --> Problem  synth_5
Sketch conj26_term_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch2 --> Problem  synth_7
Sketch conj30_term_sketch1 --> Problem  synth_41
Sketch conj28_imp_sketch2 --> Problem  synth_29
Sketch conj28_term_sketch2 --> Problem  synth_31
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj28_imp_term_sketch2 --> Problem  synth_4
Sketch conj30_term_sketch0 --> Problem  synth_25
Sketch conj32_imp_term_sketch6 --> Problem  synth_36
Sketch conj8_sketch0 --> Problem  synth_9
Sketch conj32_imp_sketch5 --> Problem  synth_45
Sketch conj32_term_sketch2 --> Problem  synth_25
Sketch conj12_term_sketch2 --> Problem  synth_5
Sketch conj10_sketch0 --> Problem  synth_14
Sketch conj8_term_sketch2 --> Problem  synth_7
Sketch conj28_imp_sketch1 --> Problem  synth_32
Sketch conj28_imp_sketch0 --> Problem  synth_30
Sketch conj32_sketch2 --> Problem  synth_49
Sketch conj14_sketch1 --> Problem  synth_18
Sketch conj32_sketch1 --> Problem  synth_26
Sketch conj32_imp_sketch2 --> Problem  synth_46
Sketch conj26_term_sketch1 --> Problem  synth_25
Sketch conj14_sketch2 --> Problem  synth_14
Sketch conj32_imp_sketch3 --> Problem  synth_42
Sketch conj16_sketch2 --> Problem  synth_21
Sketch conj10_term_sketch1 --> Problem  synth_15
Sketch conj30_sketch3 --> Problem  synth_26
Sketch conj25_term_sketch1 --> Problem  synth_25
Sketch conj28_imp_sketch4 --> Problem  synth_33
Sketch conj32_imp_term_sketch1 --> Problem  synth_35
Sketch conj30_sketch1 --> Problem  synth_8
Sketch conj28_imp_term_sketch1 --> Problem  synth_35
Sketch conj26_sketch0 --> Problem  synth_26
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj32_imp_term_sketch3 --> Problem  synth_4
Sketch conj12_term_sketch1 --> Problem  synth_17
Sketch conj9_sketch0 --> Problem  synth_12
Sketch conj8_sketch2 --> Problem  synth_10
Sketch conj32_imp_term_sketch5 --> Problem  synth_7
Sketch conj32_imp_term_sketch2 --> Problem  synth_46
Sketch conj26_sketch1 --> Problem  synth_27
Sketch conj28_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj28_imp_term_sketch0 --> Problem  synth_25
Sketch conj6_sketch0 --> Problem  synth_6
Sketch conj32_imp_sketch6 --> Problem  synth_47
Sketch conj32_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch1 --> Problem  synth_1
Sketch conj30_term_sketch2 --> Problem  synth_7
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj28_sketch3 --> Problem  synth_26
Sketch conj28_imp_sketch5 --> Problem  synth_34
Sketch conj25_sketch0 --> Problem  synth_12
Sketch conj28_sketch1 --> Problem  synth_38
Sketch conj32_sketch4 --> Problem  synth_11
Sketch conj32_term_sketch1 --> Problem  synth_11
Sketch conj6_term_sketch1 --> Problem  synth_8
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj16_sketch0 --> Problem  synth_20
Sketch conj28_imp_term_sketch3 --> Problem  synth_31
Sketch conj14_sketch0 --> Problem  synth_8
Sketch conj14_term_sketch0 --> Problem  synth_19
Sketch conj16_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch3 --> Problem  synth_22
Sketch conj25_term_sketch0 --> Problem  synth_24


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 4954 seconds

Problem: synth_28
 orb lf5 (orb lf4 lf5)
 orb lf4 (orb lf5 lf5)
 orb lf5 (orb lf4 false)
 orb lf4 (orb lf5 false)
 orb lf5 lf4
 orb lf4 lf5

Problem: synth_17
 orb lf4 (orb lf3 (mem z x))
 orb lf3 (orb lf4 (mem z x))
 orb lf4 (orb lf4 (mem z x))
 orb lf4 (mem (sort z) x)
 orb (mem z x) lf4
 orb lf4 (mem z x)

Problem: synth_29
 orb (mem z x) (less x Zero)
 mem (insort z (Succ x)) x
 mem (sort (sort z)) x
 orb (mem z x) false
 mem (sort z) x
 mem z x

Problem: synth_45

Problem: synth_26

Problem: synth_9

Problem: synth_30
 orb (lfeqb x y) (less x Zero)
 orb (lfeqb y x) (less x Zero)
 orb (lfeqb x y) false
 orb (lfeqb y x) false
 lfeqb x y
 lfeqb y x

Problem: synth_11
 orb (mem z x) (lfeqb x n)
 orb (lfeqb n x) (mem z x)
 orb (mem z x) (lfeqb n x)
 orb (lfeqb x n) (mem (sort z) x)
 orb (lfeqb x n) (mem z x)
 mem (insort z n) x

Problem: synth_39

Problem: synth_1
 orb (orb lf1 false) false
 orb lf1 (orb lf1 lf1)
 orb lf1 (orb lf1 false)
 orb lf1 lf1
 orb lf1 false
 lf1

Problem: synth_46
 orb (mem z x) (lfeqb x n)
 orb (lfeqb n x) (mem z x)
 orb (mem z x) (lfeqb n x)
 orb (lfeqb x n) (mem (sort z) x)
 orb (lfeqb x n) (mem z x)
 mem (insort z n) x

Problem: synth_15
 orb lf5 (orb lf4 lf5)
 orb lf4 (orb lf5 lf5)
 orb lf5 (orb lf4 false)
 orb lf4 (orb lf5 false)
 orb lf5 lf4
 orb lf4 lf5

Problem: synth_31
 orb (mem z x) (orb lf4 lf4)
 orb (mem z x) (orb lf4 false)
 orb lf4 (orb lf4 (mem z x))
 orb lf4 (mem (sort z) x)
 orb (mem z x) lf4
 orb lf4 (mem z x)

Problem: synth_14

Problem: synth_8
 orb lf5 (orb lf5 (lfeqb x n))
 orb lf5 (orb lf5 (lfeqb n x))
 orb (lfeqb x n) lf5
 orb (lfeqb n x) lf5
 orb lf5 (lfeqb x n)
 orb lf5 (lfeqb n x)

Problem: synth_34
 insort z y

Problem: synth_12
 orb (orb lf2 false) false
 orb lf2 (orb lf2 lf2)
 orb lf2 (orb lf2 false)
 orb lf2 lf2
 orb lf2 false
 lf2

Problem: synth_5
 orb (mem z x) (orb lf4 lf4)
 orb (mem z x) (orb lf4 false)
 orb lf4 (orb lf4 (mem z x))
 orb lf4 (mem (sort z) x)
 orb (mem z x) lf4
 orb lf4 (mem z x)

Problem: synth_37

Problem: synth_2
 orb lf5 (orb lf4 lf5)
 orb lf4 (orb lf5 lf5)
 orb lf5 (orb lf4 false)
 orb lf4 (orb lf5 false)
 orb lf5 lf4
 orb lf4 lf5

Problem: synth_22
 orb (mem z x) (lfeqb x n)
 orb (lfeqb n x) (mem z x)
 orb (mem z x) (lfeqb n x)
 orb (lfeqb x n) (mem (sort z) x)
 orb (lfeqb x n) (mem z x)
 mem (insort z n) x

Problem: synth_20

Problem: synth_18

Problem: synth_21

Problem: synth_41
 orb lf5 (orb lf5 (lfeqb x n))
 orb lf5 (orb lf5 (lfeqb n x))
 orb (lfeqb x n) lf5
 orb (lfeqb n x) lf5
 orb lf5 (lfeqb x n)
 orb lf5 (lfeqb n x)

Problem: synth_49

Problem: synth_25
 orb (lfeqb x y) (less x Zero)
 orb (lfeqb y x) (less x Zero)
 orb (lfeqb x y) false
 orb (lfeqb y x) false
 lfeqb x y
 lfeqb y x

Problem: synth_13
 orb lf2 (orb lf2 false)
 orb lf2 lf3
 orb lf3 lf2
 orb lf2 lf2
 orb lf2 false
 lf2

Problem: synth_6

Problem: synth_7
 orb (lfeqb x n) (less x Zero)
 orb (lfeqb n x) (less x Zero)
 orb (lfeqb x n) false
 orb (lfeqb n x) false
 lfeqb x n
 lfeqb n x

Problem: synth_4
 orb (mem z x) (less x Zero)
 mem (insort z (Succ x)) x
 mem (sort (sort z)) x
 orb (mem z x) false
 mem (sort z) x
 mem z x

Problem: synth_38

Problem: synth_23

Problem: synth_27

Problem: synth_42
 orb (mem z x) (less x Zero)
 mem (insort z (Succ x)) x
 mem (sort (sort z)) x
 orb (mem z x) false
 mem (sort z) x
 mem z x

Problem: synth_16

Problem: synth_19
 orb lf3 (orb lf5 (lfeqb n x))
 orb lf5 (orb lf5 (lfeqb n x))
 orb (lfeqb x n) lf5
 orb (lfeqb n x) lf5
 orb lf5 (lfeqb x n)
 orb lf5 (lfeqb n x)

Problem: synth_40

Problem: synth_10

Problem: synth_33

Problem: synth_47
 insort z y

Problem: synth_24
 orb lf2 (less x Zero)
 orb lf2 (orb lf2 lf2)
 orb lf2 (orb lf2 false)
 orb lf2 lf2
 orb lf2 false
 lf2

Problem: synth_3

Problem: synth_32
 orb (mem z x) (lfeqb x y)
 orb (lfeqb y x) (mem z x)
 orb (mem z x) (lfeqb y x)
 orb (lfeqb x y) (mem (sort z) x)
 orb (lfeqb x y) (mem z x)
 mem (insort z y) x

Problem: synth_48

Problem: synth_44
 orb (mem z x) (lfeqb x y)
 orb (lfeqb y x) (mem z x)
 orb (mem z x) (lfeqb y x)
 orb (lfeqb x y) (mem (sort z) x)
 orb (lfeqb x y) (mem z x)
 mem (insort z y) x

Problem: synth_36
 insort z y

Problem: synth_35
 orb (mem z x) (lfeqb x y)
 orb (lfeqb y x) (mem z x)
 orb (mem z x) (lfeqb y x)
 orb (lfeqb x y) (mem (sort z) x)
 orb (lfeqb x y) (mem z x)
 mem (insort z y) x

Problem: synth_43
 orb (lfeqb x y) (less x Zero)
 orb (lfeqb y x) (less x Zero)
 orb (lfeqb x y) false
 orb (lfeqb y x) false
 lfeqb x y
 lfeqb y x

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 4955 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural) (lf2 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma candidate_2: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_3: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (orb (orb lf1 false) false).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 lf1)).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 false)).
Lemma candidate_7: forall (lf1 : bool), @eq bool lf1 (orb lf1 lf1).
Lemma candidate_8: forall (lf1 : bool), @eq bool lf1 (orb lf1 false).
Lemma candidate_9: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_10: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_11: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_12: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_13: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_14: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_15: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_16: forall (lf1 : bool), @eq bool lf1 (orb (orb lf1 false) false).
Lemma candidate_17: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 lf1)).
Lemma candidate_18: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 false)).
Lemma candidate_19: forall (lf1 : bool), @eq bool lf1 (orb lf1 lf1).
Lemma candidate_20: forall (lf1 : bool), @eq bool lf1 (orb lf1 false).
Lemma candidate_21: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_22: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_23: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_24: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_25: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_26: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_27: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_28: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_29: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_30: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_31: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_32: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_33: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_34: forall (lf1 : bool), @eq bool lf1 (orb (orb lf1 false) false).
Lemma candidate_35: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 lf1)).
Lemma candidate_36: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 false)).
Lemma candidate_37: forall (lf1 : bool), @eq bool lf1 (orb lf1 lf1).
Lemma candidate_38: forall (lf1 : bool), @eq bool lf1 (orb lf1 false).
Lemma candidate_39: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_40: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_41: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_42: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_43: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_44: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_45: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_46: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_47: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_48: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_49: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_50: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_51: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_52: forall (lf1 : bool), @eq bool lf1 (orb (orb lf1 false) false).
Lemma candidate_53: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 lf1)).
Lemma candidate_54: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 false)).
Lemma candidate_55: forall (lf1 : bool), @eq bool lf1 (orb lf1 lf1).
Lemma candidate_56: forall (lf1 : bool), @eq bool lf1 (orb lf1 false).
Lemma candidate_57: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_58: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_59: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_60: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_61: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_62: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_63: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_64: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_65: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_66: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_67: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_68: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_69: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_70: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_71: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_72: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_73: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_74: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_75: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_76: forall (lf2 : bool), @eq bool (orb (orb lf2 false) false) lf2.
Lemma candidate_77: forall (lf2 : bool), @eq bool (orb lf2 (orb lf2 lf2)) lf2.
Lemma candidate_78: forall (lf2 : bool), @eq bool (orb lf2 (orb lf2 false)) lf2.
Lemma candidate_79: forall (lf2 : bool), @eq bool (orb lf2 lf2) lf2.
Lemma candidate_80: forall (lf2 : bool), @eq bool (orb lf2 false) lf2.
Lemma candidate_81: forall (lf2 : bool), @eq bool (lf2) lf2.
Lemma candidate_82: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 (orb lf2 false)).
Lemma candidate_83: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 lf3).
Lemma candidate_84: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf3 lf2).
Lemma candidate_85: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 lf2).
Lemma candidate_86: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 false).
Lemma candidate_87: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (lf2).
Lemma candidate_88: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_89: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 (orb lf5 lf5)) (orb lf4 lf5).
Lemma candidate_90: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 (orb lf4 false)) (orb lf4 lf5).
Lemma candidate_91: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 (orb lf5 false)) (orb lf4 lf5).
Lemma candidate_92: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 lf4) (orb lf4 lf5).
Lemma candidate_93: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_94: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_95: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_96: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_97: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_98: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_99: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_100: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf5 (orb lf4 lf5)).
Lemma candidate_101: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 (orb lf5 lf5)).
Lemma candidate_102: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf5 (orb lf4 false)).
Lemma candidate_103: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 (orb lf5 false)).
Lemma candidate_104: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf5 lf4).
Lemma candidate_105: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_106: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) (orb lf4 lf4)) (orb lf4 (mem z x)).
Lemma candidate_107: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) (orb lf4 false)) (orb lf4 (mem z x)).
Lemma candidate_108: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_109: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem (sort z) x)) (orb lf4 (mem z x)).
Lemma candidate_110: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) lf4) (orb lf4 (mem z x)).
Lemma candidate_111: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_112: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_113: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_114: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_115: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_116: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_117: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_118: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (orb lf3 (mem z x))).
Lemma candidate_119: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf3 (orb lf4 (mem z x))).
Lemma candidate_120: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_121: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem (sort z) x)).
Lemma candidate_122: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb (mem z x) lf4).
Lemma candidate_123: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_124: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_125: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_126: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_127: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_128: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_129: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_130: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (orb lf5 (lfeqb x n))) (orb (lfeqb x n) lf5).
Lemma candidate_131: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (orb lf5 (lfeqb n x))) (orb (lfeqb x n) lf5).
Lemma candidate_132: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_133: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb n x) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_134: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (lfeqb x n)) (orb (lfeqb x n) lf5).
Lemma candidate_135: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (lfeqb n x)) (orb (lfeqb x n) lf5).
Lemma candidate_136: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf3 (orb lf5 (lfeqb n x))).
Lemma candidate_137: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_138: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma candidate_139: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb n x) lf5).
Lemma candidate_140: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf5 (lfeqb x n)).
Lemma candidate_141: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf5 (lfeqb n x)).
Lemma candidate_142: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_143: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_144: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_145: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_146: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_147: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_148: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_149: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_150: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_151: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_152: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_153: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_154: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (mem z x) (lfeqb x n)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_155: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb n x) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_156: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (mem z x) (lfeqb n x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_157: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem (sort z) x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_158: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_159: forall (n : natural) (z : lst) (x : natural), @eq bool (mem (insort z n) x) (orb (lfeqb x n) (mem z x)).
Lemma candidate_160: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_161: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_162: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_163: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_164: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_165: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_166: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_167: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_168: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_169: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_170: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_171: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_172: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_173: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_174: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_175: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_176: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_177: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_178: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (mem z x) (lfeqb x n)).
Lemma candidate_179: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb n x) (mem z x)).
Lemma candidate_180: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (mem z x) (lfeqb n x)).
Lemma candidate_181: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_182: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma candidate_183: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (mem (insort z n) x).
Lemma candidate_184: forall (lf2 : bool), @eq bool (orb (orb lf2 false) false) lf2.
Lemma candidate_185: forall (lf2 : bool), @eq bool (orb lf2 (orb lf2 lf2)) lf2.
Lemma candidate_186: forall (lf2 : bool), @eq bool (orb lf2 (orb lf2 false)) lf2.
Lemma candidate_187: forall (lf2 : bool), @eq bool (orb lf2 lf2) lf2.
Lemma candidate_188: forall (lf2 : bool), @eq bool (orb lf2 false) lf2.
Lemma candidate_189: forall (lf2 : bool), @eq bool (lf2) lf2.
Lemma candidate_190: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (less x Zero)).
Lemma candidate_191: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (orb lf2 lf2)).
Lemma candidate_192: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (orb lf2 false)).
Lemma candidate_193: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 lf2).
Lemma candidate_194: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 false).
Lemma candidate_195: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (lf2).
Lemma candidate_196: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_197: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_198: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_199: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_200: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_201: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_202: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_203: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 (orb lf5 lf5)) (orb lf4 lf5).
Lemma candidate_204: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 (orb lf4 false)) (orb lf4 lf5).
Lemma candidate_205: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 (orb lf5 false)) (orb lf4 lf5).
Lemma candidate_206: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 lf4) (orb lf4 lf5).
Lemma candidate_207: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_208: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_209: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_210: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_211: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_212: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_213: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_214: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_215: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_216: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_217: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_218: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_219: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_220: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf5 (orb lf4 lf5)).
Lemma candidate_221: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 (orb lf5 lf5)).
Lemma candidate_222: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf5 (orb lf4 false)).
Lemma candidate_223: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 (orb lf5 false)).
Lemma candidate_224: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf5 lf4).
Lemma candidate_225: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_226: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (orb (mem z x) (less x Zero)), @eq bool (orb (lfeqb x y) (orb lf4 (orb (mem z x) (less x Zero))))   (orb lf4 (orb (mem z x) (less x Zero))).
Lemma candidate_227: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem (insort z (Succ x)) x), @eq bool (orb (lfeqb x y) (orb lf4 (mem (insort z (Succ x)) x)))   (orb lf4 (mem (insort z (Succ x)) x)).
Lemma candidate_228: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem (sort (sort z)) x), @eq bool (orb (lfeqb x y) (orb lf4 (mem (sort (sort z)) x)))   (orb lf4 (mem (sort (sort z)) x)).
Lemma candidate_229: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (orb (mem z x) false), @eq bool (orb (lfeqb x y) (orb lf4 (orb (mem z x) false)))   (orb lf4 (orb (mem z x) false)).
Lemma candidate_230: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem (sort z) x), @eq bool (orb (lfeqb x y) (orb lf4 (mem (sort z) x)))   (orb lf4 (mem (sort z) x)).
Lemma candidate_231: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_232: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb x y) (less x Zero)) (orb lf4 (mem z x)))   (orb lf4 (mem z x)).
Lemma candidate_233: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb y x) (less x Zero)) (orb lf4 (mem z x)))   (orb lf4 (mem z x)).
Lemma candidate_234: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb x y) false) (orb lf4 (mem z x)))   (orb lf4 (mem z x)).
Lemma candidate_235: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb y x) false) (orb lf4 (mem z x)))   (orb lf4 (mem z x)).
Lemma candidate_236: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_237: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb y x) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_238: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (orb lf4 lf4)) (orb lf4 (mem z x)).
Lemma candidate_239: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (orb lf4 false)) (orb lf4 (mem z x)).
Lemma candidate_240: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb lf4 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_241: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb lf4 (mem (sort z) x)) (orb lf4 (mem z x)).
Lemma candidate_242: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) lf4) (orb lf4 (mem z x)).
Lemma candidate_243: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_244: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (mem z x) (lfeqb x y)) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_245: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (lfeqb y x) (mem z x)) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_246: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (mem z x) (lfeqb y x)) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_247: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (lfeqb x y) (mem (sort z) x)) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_248: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (lfeqb x y) (mem z x)) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_249: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_250: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_251: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_252: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_253: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_254: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_255: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_256: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_257: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_258: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_259: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_260: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_261: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_262: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_263: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_264: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x)))   (orb (mem z x) (orb lf4 false)).
Lemma candidate_265: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_266: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem (sort z) x)).
Lemma candidate_267: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb (mem z x) lf4).
Lemma candidate_268: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_269: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (mem z x) (lfeqb x y)).
Lemma candidate_270: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb y x) (mem z x)).
Lemma candidate_271: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (mem z x) (lfeqb y x)).
Lemma candidate_272: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb x y) (mem (sort z) x)).
Lemma candidate_273: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb x y) (mem z x)).
Lemma candidate_274: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (mem (insort z y) x).
Lemma candidate_275: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_276: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_277: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_278: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_279: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_280: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_281: forall (z : lst) (y : natural), @eq lst (insort z y) (insort z y).
Lemma candidate_282: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) (orb lf4 lf4)) (orb lf4 (mem z x)).
Lemma candidate_283: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) (orb lf4 false)) (orb lf4 (mem z x)).
Lemma candidate_284: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_285: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem (sort z) x)) (orb lf4 (mem z x)).
Lemma candidate_286: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) lf4) (orb lf4 (mem z x)).
Lemma candidate_287: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_288: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_289: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_290: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_291: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_292: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_293: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_294: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_295: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_296: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_297: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_298: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_299: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_300: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_301: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x)))   (orb (mem z x) (orb lf4 false)).
Lemma candidate_302: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_303: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem (sort z) x)).
Lemma candidate_304: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb (mem z x) lf4).
Lemma candidate_305: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_306: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_307: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_308: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_309: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_310: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_311: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_312: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (orb lf5 (lfeqb x n))) (orb (lfeqb x n) lf5).
Lemma candidate_313: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (orb lf5 (lfeqb n x))) (orb (lfeqb x n) lf5).
Lemma candidate_314: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_315: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb n x) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_316: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (lfeqb x n)) (orb (lfeqb x n) lf5).
Lemma candidate_317: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (lfeqb n x)) (orb (lfeqb x n) lf5).
Lemma candidate_318: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_319: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_320: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_321: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_322: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_323: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_324: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_325: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_326: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma candidate_327: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb n x) lf5).
Lemma candidate_328: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb lf5 (lfeqb x n)).
Lemma candidate_329: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb lf5 (lfeqb n x)).
Lemma candidate_330: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_331: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_332: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_333: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_334: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_335: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_336: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_337: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_338: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_339: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_340: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_341: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_342: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (orb (mem z x) (less x Zero)), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (orb (mem z x) (less x Zero))))   (orb (lfeqb x n) (orb (mem z x) (less x Zero))).
Lemma candidate_343: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem (insort z (Succ x)) x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem (insort z (Succ x)) x)))   (orb (lfeqb x n) (mem (insort z (Succ x)) x)).
Lemma candidate_344: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem (sort (sort z)) x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem (sort (sort z)) x)))   (orb (lfeqb x n) (mem (sort (sort z)) x)).
Lemma candidate_345: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (orb (mem z x) false), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (orb (mem z x) false)))   (orb (lfeqb x n) (orb (mem z x) false)).
Lemma candidate_346: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem (sort z) x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem (sort z) x)))   (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_347: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_348: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb x y) (less x Zero)) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_349: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb y x) (less x Zero)) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_350: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb x y) false) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_351: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (orb (lfeqb y x) false) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_352: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_353: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb y x) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_354: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (mem z x) (lfeqb x y)) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_355: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (lfeqb y x) (mem z x)) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_356: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (mem z x) (lfeqb y x)) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_357: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (lfeqb x y) (mem (sort z) x)) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_358: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (orb (lfeqb x y) (mem z x)) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_359: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_360: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (lfeqb x n)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_361: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb n x) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_362: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (lfeqb n x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_363: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x n) (mem (sort z) x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_364: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_365: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (mem (insort z n) x) (orb (lfeqb x n) (mem z x)).
Lemma candidate_366: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_367: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_368: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_369: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_370: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_371: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_372: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_373: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_374: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_375: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_376: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_377: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_378: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_379: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_380: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_381: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_382: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_383: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_384: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_385: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (mem z x) (lfeqb x y)).
Lemma candidate_386: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb y x) (mem z x)).
Lemma candidate_387: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (mem z x) (lfeqb y x)).
Lemma candidate_388: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb x y) (mem (sort z) x)).
Lemma candidate_389: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb x y) (mem z x)).
Lemma candidate_390: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (mem (insort z y) x).
Lemma candidate_391: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_392: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_393: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_394: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_395: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_396: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_397: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (mem z x) (lfeqb x n)).
Lemma candidate_398: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb n x) (mem z x)).
Lemma candidate_399: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (mem z x) (lfeqb n x)).
Lemma candidate_400: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_401: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_402: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x))) (mem (insort z n) x).
Lemma candidate_403: forall (z : lst) (y : natural), @eq lst (insort z y) (insort z y).
Lemma candidate_404: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (mem z x) (lfeqb x n)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_405: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb n x) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_406: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (mem z x) (lfeqb n x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_407: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem (sort z) x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_408: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_409: forall (n : natural) (z : lst) (x : natural), @eq bool (mem (insort z n) x) (orb (lfeqb x n) (mem z x)).
Lemma candidate_410: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_411: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_412: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_413: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_414: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_415: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_416: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_417: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_418: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_419: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_420: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_421: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_422: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_423: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_424: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_425: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_426: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_427: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_428: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_429: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_430: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_431: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_432: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_433: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_434: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (mem z x) (lfeqb x n)).
Lemma candidate_435: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb n x) (mem z x)).
Lemma candidate_436: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (mem z x) (lfeqb n x)).
Lemma candidate_437: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_438: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_439: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x))) (mem (insort z n) x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 5785 seconds
Duplicates removed: 252
Filtered by Quickchick: 86
Filtered by script: 15
Remaining: 86

Lemmas: 
Lemma candidate_79: forall (lf2 : bool), @eq bool (orb lf2 lf2) lf2.
Lemma candidate_7: forall (lf1 : bool), @eq bool lf1 (orb lf1 lf1).
Lemma candidate_80: forall (lf2 : bool), @eq bool (orb lf2 false) lf2.
Lemma candidate_8: forall (lf1 : bool), @eq bool lf1 (orb lf1 false).
Lemma candidate_201: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_45: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_26: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_92: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 lf4) (orb lf4 lf5).
Lemma candidate_83: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 lf3).
Lemma candidate_77: forall (lf2 : bool), @eq bool (orb lf2 (orb lf2 lf2)) lf2.
Lemma candidate_14: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 lf1)).
Lemma candidate_78: forall (lf2 : bool), @eq bool (orb lf2 (orb lf2 false)) lf2.
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (orb lf1 (orb lf1 false)).
Lemma candidate_76: forall (lf2 : bool), @eq bool (orb (orb lf2 false) false) lf2.
Lemma candidate_25: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (orb (orb lf1 false) false).
Lemma candidate_24: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_199: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_198: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_43: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_42: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_89: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 (orb lf5 lf5)) (orb lf4 lf5).
Lemma candidate_88: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_23: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_11: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_10: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_110: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) lf4) (orb lf4 (mem z x)).
Lemma candidate_91: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 (orb lf5 false)) (orb lf4 lf5).
Lemma candidate_90: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf5 (orb lf4 false)) (orb lf4 lf5).
Lemma candidate_32: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_22: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_13: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_12: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_197: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_196: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_135: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (lfeqb n x)) (orb (lfeqb x n) lf5).
Lemma candidate_134: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (lfeqb x n)) (orb (lfeqb x n) lf5).
Lemma candidate_133: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb n x) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_51: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_50: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_49: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_41: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_40: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_109: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem (sort z) x)) (orb lf4 (mem z x)).
Lemma candidate_31: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_273: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb x y) (mem z x)).
Lemma candidate_271: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (mem z x) (lfeqb y x)).
Lemma candidate_270: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb y x) (mem z x)).
Lemma candidate_269: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (mem z x) (lfeqb x y)).
Lemma candidate_159: forall (n : natural) (z : lst) (x : natural), @eq bool (mem (insort z n) x) (orb (lfeqb x n) (mem z x)).
Lemma candidate_69: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_108: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_106: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) (orb lf4 lf4)) (orb lf4 (mem z x)).
Lemma candidate_30: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_28: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_107: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb (mem z x) (orb lf4 false)) (orb lf4 (mem z x)).
Lemma candidate_29: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_131: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (orb lf5 (lfeqb n x))) (orb (lfeqb x n) lf5).
Lemma candidate_130: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf5 (orb lf5 (lfeqb x n))) (orb (lfeqb x n) lf5).
Lemma candidate_47: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_46: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_272: forall (z : lst) (y : natural) (x : natural), @eq bool (mem (insort z y) x) (orb (lfeqb x y) (mem (sort z) x)).
Lemma candidate_156: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (mem z x) (lfeqb n x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_155: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb n x) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_154: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (mem z x) (lfeqb x n)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_66: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_65: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_64: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_118: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (orb lf3 (mem z x))).
Lemma candidate_1: forall (y : natural) (x : natural) (lf2 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma candidate_157: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem (sort z) x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_67: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_136: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf3 (orb lf5 (lfeqb n x))).
Lemma candidate_2: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_3: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma candidate_242: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) lf4) (orb lf4 (mem z x)).
Lemma candidate_241: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb lf4 (mem (sort z) x)) (orb lf4 (mem z x)).
Lemma candidate_365: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (mem (insort z n) x) (orb (lfeqb x n) (mem z x)).
Lemma candidate_240: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb lf4 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_238: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (orb lf4 lf4)) (orb lf4 (mem z x)).
Lemma candidate_239: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (orb lf4 false)) (orb lf4 (mem z x)).
Lemma candidate_362: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (lfeqb n x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_361: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb n x) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_360: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (mem z x) (lfeqb x n)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_363: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : forall _ : not (@eq natural x y),       @eq bool (mem (insort z y) x) (mem z x), @eq bool (orb (lfeqb x n) (mem (sort z) x)) (orb (lfeqb x n) (mem z x)).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_qreva_67_qreva_append

Number of Lemmas: 709
Number of Lemmas (after duplicates removed): 236
Number of Lemmas (after QuickChick used to filter): 101
* Number of Candidate Lemmas: 82

Time until ranking: 1123
Time to complete: 4296

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 5

Lemma candidate_475: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva lf4 x).
Lemma candidate_472: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend (rev lf4) x).
Lemma candidate_270: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (qreva lf3 Nil)).
Lemma candidate_2: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq lst (qreva lf3 Nil) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_3: forall (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (qreva x lf6) lf6) x, @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).

Category 3 (provable):
Count = 5

Lemma candidate_20: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_259: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_285: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (qreva lf3 lf6)) (Cons n x).
Lemma candidate_278: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) lf6) (Cons n x).

Category 3 (not provable):
Count = 72

Lemma candidate_19: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_469: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_40: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev lf2).
Lemma candidate_18: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_17: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_465: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_95: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_13: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_467: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_466: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_96: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_14: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_73: forall (lf5 : lst), @eq lst (qreva (rev (rev (rev lf5))) Nil) lf5.
Lemma candidate_36: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (rev (rev lf2))).
Lemma candidate_93: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_92: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_11: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_10: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_75: forall (lf5 : lst), @eq lst (qreva (lfappend (rev lf5) Nil) Nil) lf5.
Lemma candidate_74: forall (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 Nil)) Nil) lf5.
Lemma candidate_63: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) lf4).
Lemma candidate_38: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (rev lf2) Nil).
Lemma candidate_37: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (lfappend lf2 Nil)).
Lemma candidate_482: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (qreva x lf4).
Lemma candidate_464: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_72: forall (lf5 : lst), @eq lst (qreva (lfappend (qreva lf5 Nil) Nil) Nil) lf5.
Lemma candidate_62: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (qreva lf4 (rev lf3))).
Lemma candidate_35: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (qreva lf2 Nil) Nil).
Lemma candidate_479: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (rev (qreva lf4 x)).
Lemma candidate_94: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_12: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_480: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (lfappend (rev x) lf4).
Lemma candidate_84: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva lf4 (rev lf3)).
Lemma candidate_189: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_82: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 lf4)).
Lemma candidate_271: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (rev lf3)).
Lemma candidate_262: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_240: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n lf6)).
Lemma candidate_634: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_471: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x lf4)).
Lemma candidate_184: forall (n : natural) (x : lst), @eq lst (qreva (qreva (lfappend x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_79: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_260: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_186: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (rev (rev x))) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_289: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (rev lf3)) (Cons n x).
Lemma candidate_264: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_635: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_187: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (lfappend x Nil)) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_646: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (rev (rev x))).
Lemma candidate_288: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_286: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (lfappend x lf6)) (Cons n x).
Lemma candidate_269: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (Cons n (lfappend (rev lf3) Nil)).
Lemma candidate_267: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend lf3 (Cons n Nil))).
Lemma candidate_261: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_647: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (lfappend x Nil)).
Lemma candidate_630: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_266: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (qreva (rev lf3) (Cons n Nil))).
Lemma candidate_644: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (rev (qreva x (Cons n Nil))).
Lemma candidate_643: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (qreva (rev x) Nil)).
Lemma candidate_632: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_633: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_268: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend (rev (rev lf3)) (Cons n Nil))).
Lemma candidate_645: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_302: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_301: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend (rev (rev lf3)) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_281: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_279: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_280: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (lfappend x lf6)).
Lemma candidate_274: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (lfappend (rev (rev lf6)) (Cons n Nil))) lf6)   (Cons n x).
File Information
- File name: goal31
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal31_qreva_qreva_67_qreva_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_qreva_67_qreva_append
- Namespace: adtind
- Proof name: qreva_qreva
- Theorem: Theorem qreva_qreva: forall x0 : lst, @eq lst (qreva (qreva x0 Nil) Nil) x0.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x)

* Hypothesis:
IHx : @eq lst (qreva (qreva x Nil) Nil) x
x : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
lfappend (qreva x Nil) (Cons n Nil) : lst
@eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x) : Prop
x : lst
Cons n x : lst
qreva x Nil : lst
lst : Set
Cons n Nil : lst
qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil : lst
natural : Set
@eq lst (qreva (qreva x Nil) Nil) x : Prop
n : natural
Nil : lst
qreva (qreva x Nil) Nil : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = qreva x Nil
lf1 : lst = qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil
lf4 : lst = Cons n Nil
lf5 : lst = Cons n x
lf2 : lst = lfappend (qreva x Nil) (Cons n Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf5 : lst) (lf1 : lst), @eq lst lf1 lf5.
Lemma conj5: forall (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (Cons n x).
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 lf6) lf5.
Lemma conj18: forall (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 Nil) lf5.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) lf5.
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) lf5.
Lemma conj21: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 lf6) (Cons n x).
Lemma conj22: forall (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 Nil) (Cons n x).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (Cons n x).
Lemma conj24: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (Cons n x).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) lf5.
Lemma conj28: forall (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) lf5.
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) lf5.
Lemma conj52: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) lf5.
Lemma conj55: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (Cons n x).
Lemma conj56: forall (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (Cons n x).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) lf5.
Lemma conj60: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) lf5.
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma conj64: forall (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).


<---VALIDITY CHECKS--->
Time elapsed: 42 seconds
Valid:
Lemma conj64: forall (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma conj60: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) lf5.
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) lf5.
Lemma conj56: forall (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (Cons n x).
Lemma conj55: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (Cons n x).
Lemma conj52: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) lf5.
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) lf5.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma conj28: forall (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) lf5.
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) lf5.
Lemma conj24: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (Cons n x).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (Cons n x).
Lemma conj22: forall (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 Nil) (Cons n x).
Lemma conj21: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 lf6) (Cons n x).
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) lf5.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) lf5.
Lemma conj18: forall (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 Nil) lf5.
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 lf6) lf5.
Lemma conj5: forall (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (Cons n x).
Lemma conj1: forall (lf5 : lst) (lf1 : lst), @eq lst lf1 lf5.

<---ADD IMPLICATIONS--->
Time elapsed: 69 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma conj63_imp: forall (lf6 : lst) (x : lst) (n : natural), forall _ : @eq lst (qreva (qreva x lf6) lf6) x,
@eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma conj60: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) lf5.
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) lf5.
Lemma conj56: forall (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (Cons n x).
Lemma conj55: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (Cons n x).
Lemma conj52: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) lf5.
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) lf5.
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma conj32_imp: forall (x : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva lf3 Nil) x,
@eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma conj31_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva lf3 lf6) x,
@eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma conj28: forall (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) lf5.
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) lf5.
Lemma conj24: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (Cons n x).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (Cons n x).
Lemma conj22: forall (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 Nil) (Cons n x).
Lemma conj21: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 lf6) (Cons n x).
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) lf5.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) lf5.
Lemma conj18: forall (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 Nil) lf5.
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 lf6) lf5.
Lemma conj5: forall (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (Cons n x).
Lemma conj1: forall (lf5 : lst) (lf1 : lst), @eq lst lf1 lf5.


<---VALIDITY CHECKS--->
Time elapsed: 106 seconds
Valid:
Lemma conj32_imp: forall (x : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva lf3 Nil) x,
@eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma conj63_imp: forall (lf6 : lst) (x : lst) (n : natural), forall _ : @eq lst (qreva (qreva x lf6) lf6) x,
@eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).

Invalid:
Lemma conj1: forall (lf5 : lst) (lf1 : lst), @eq lst lf1 lf5.
Lemma conj5: forall (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (Cons n x).
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 lf6) lf5.
Lemma conj18: forall (lf2 : lst) (lf5 : lst), @eq lst (qreva lf2 Nil) lf5.
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) lf5.
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) lf5.
Lemma conj21: forall (lf6 : lst) (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 lf6) (Cons n x).
Lemma conj22: forall (lf2 : lst) (x : lst) (n : natural), @eq lst (qreva lf2 Nil) (Cons n x).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (Cons n x).
Lemma conj24: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (Cons n x).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) lf5.
Lemma conj28: forall (lf5 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) lf5.
Lemma conj31_imp: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva lf3 lf6) x,
@eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma conj31: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma conj32: forall (x : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) lf5.
Lemma conj52: forall (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) lf5.
Lemma conj55: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (Cons n x).
Lemma conj56: forall (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (Cons n x).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) lf5.
Lemma conj60: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) lf5.
Lemma conj63: forall (lf6 : lst) (x : lst) (n : natural), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).


<---CREATE SKETCHES--->
Time elapsed: 106 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj17_sketch0 : @eq lst (##hole##) lf5
Sketch conj17_term_sketch0 : @eq lst (qreva lf2 lf6) (##hole##)
Sketch conj18_sketch0 : @eq lst (##hole##) lf5
Sketch conj18_sketch1 : @eq lst (qreva lf2 (##hole##)) lf5
Sketch conj18_term_sketch0 : @eq lst (qreva lf2 Nil) (##hole##)
Sketch conj18_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj19_sketch0 : @eq lst (##hole##) lf5
Sketch conj19_sketch1 : @eq lst (qreva (##hole##) lf6) lf5
Sketch conj19_term_sketch0 : @eq lst (qreva (lfappend lf3 lf4) lf6) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj20_sketch0 : @eq lst (##hole##) lf5
Sketch conj20_sketch1 : @eq lst (qreva (##hole##) Nil) lf5
Sketch conj20_sketch2 : @eq lst (qreva (lfappend lf3 lf4) (##hole##)) lf5
Sketch conj20_term_sketch0 : @eq lst (qreva (lfappend lf3 lf4) Nil) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj20_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj21_sketch0 : @eq lst (##hole##) (Cons n x)
Sketch conj21_sketch1 : @eq lst (qreva lf2 lf6) (##hole##)
Sketch conj21_term_sketch0 : @eq lst (qreva lf2 lf6) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj22_sketch0 : @eq lst (qreva lf2 Nil) (##hole##)
Sketch conj22_sketch1 : @eq lst (##hole##) (Cons n x)
Sketch conj22_sketch2 : @eq lst (qreva lf2 (##hole##)) (Cons n x)
Sketch conj22_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj22_term_sketch1 : @eq lst (qreva lf2 Nil) (##hole##)
Sketch conj22_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj23_sketch0 : @eq lst (##hole##) (Cons n x)
Sketch conj23_sketch1 : @eq lst (qreva (##hole##) lf6) (Cons n x)
Sketch conj23_sketch2 : @eq lst (qreva (lfappend lf3 lf4) lf6) (##hole##)
Sketch conj23_term_sketch0 : @eq lst (qreva (lfappend lf3 lf4) lf6) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj24_sketch0 : @eq lst (##hole##) (Cons n x)
Sketch conj24_sketch1 : @eq lst (qreva (##hole##) Nil) (Cons n x)
Sketch conj24_sketch2 : @eq lst (qreva (lfappend lf3 lf4) Nil) (##hole##)
Sketch conj24_sketch3 : @eq lst (qreva (lfappend lf3 lf4) (##hole##)) (Cons n x)
Sketch conj24_term_sketch0 : @eq lst (qreva (lfappend lf3 lf4) Nil) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj24_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj24_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj27_sketch0 : @eq lst (qreva (lfappend lf3 (##hole##)) lf6) lf5
Sketch conj27_sketch1 : @eq lst (##hole##) lf5
Sketch conj27_sketch2 : @eq lst (qreva (##hole##) lf6) lf5
Sketch conj27_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (lfappend lf3 (Cons n lf6)) (##hole##)
Sketch conj28_sketch0 : @eq lst (qreva (##hole##) Nil) lf5
Sketch conj28_sketch1 : @eq lst (qreva (lfappend lf3 (##hole##)) Nil) lf5
Sketch conj28_sketch2 : @eq lst (##hole##) lf5
Sketch conj28_sketch3 : @eq lst (qreva (lfappend lf3 (Cons n (##hole##))) (##hole##)) lf5
Sketch conj28_term_sketch0 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (##hole##)
Sketch conj28_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj31_imp_sketch0 : forall _ : @eq lst (qreva lf3 lf6) x,
@eq lst (qreva (lfappend lf3 (##hole##)) lf6) (Cons n x)
Sketch conj31_imp_sketch1 : forall _ : @eq lst (qreva lf3 lf6) x,
@eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (##hole##)
Sketch conj31_imp_sketch2 : forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (##hole##) (Cons n x)
Sketch conj31_imp_sketch3 : forall _ : @eq lst (##hole##) x,
@eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x)
Sketch conj31_imp_sketch4 : forall _ : @eq lst (qreva lf3 lf6) x,
@eq lst (qreva (##hole##) lf6) (Cons n x)
Sketch conj31_imp_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj31_imp_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj31_imp_term_sketch2 : @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (##hole##)
Sketch conj31_imp_term_sketch3 : @eq lst (qreva lf3 lf6) (##hole##)
Sketch conj31_imp_term_sketch4 : @eq lst (lfappend lf3 (Cons n lf6)) (##hole##)
Sketch conj31_sketch0 : @eq lst (qreva (lfappend lf3 (##hole##)) lf6) (Cons n x)
Sketch conj31_sketch1 : @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (##hole##)
Sketch conj31_sketch2 : @eq lst (##hole##) (Cons n x)
Sketch conj31_sketch3 : @eq lst (qreva (##hole##) lf6) (Cons n x)
Sketch conj31_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (lfappend lf3 (Cons n lf6)) (##hole##)
Sketch conj32_sketch0 : @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (##hole##)
Sketch conj32_sketch1 : @eq lst (qreva (##hole##) Nil) (Cons n x)
Sketch conj32_sketch2 : @eq lst (qreva (lfappend lf3 (##hole##)) Nil) (Cons n x)
Sketch conj32_sketch3 : @eq lst (##hole##) (Cons n x)
Sketch conj32_sketch4 : @eq lst (qreva (lfappend lf3 (Cons n (##hole##))) (##hole##)) (Cons n x)
Sketch conj32_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj32_term_sketch1 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj32_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj32_term_sketch3 : @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (##hole##)
Sketch conj32_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj51_sketch0 : @eq lst (##hole##) lf5
Sketch conj51_sketch1 : @eq lst (qreva (##hole##) lf6) lf5
Sketch conj51_sketch2 : @eq lst (qreva (lfappend (##hole##) lf4) lf6) lf5
Sketch conj51_term_sketch0 : @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (lfappend (qreva x lf6) lf4) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (qreva x lf6) (##hole##)
Sketch conj52_sketch0 : @eq lst (qreva (lfappend (##hole##) lf4) Nil) lf5
Sketch conj52_sketch1 : @eq lst (##hole##) lf5
Sketch conj52_sketch2 : @eq lst (qreva (lfappend (qreva x (##hole##)) lf4) (##hole##)) lf5
Sketch conj52_sketch3 : @eq lst (qreva (##hole##) Nil) lf5
Sketch conj52_term_sketch0 : @eq lst (qreva x Nil) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (##hole##)
Sketch conj52_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj52_term_sketch3 : @eq lst (lfappend (qreva x Nil) lf4) (##hole##)
Sketch conj55_sketch0 : @eq lst (##hole##) (Cons n x)
Sketch conj55_sketch1 : @eq lst (qreva (##hole##) lf6) (Cons n x)
Sketch conj55_sketch2 : @eq lst (qreva (lfappend (##hole##) lf4) lf6) (Cons n x)
Sketch conj55_sketch3 : @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (##hole##)
Sketch conj55_term_sketch0 : @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (lfappend (qreva x lf6) lf4) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (qreva x lf6) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (Cons n x) (##hole##)
Sketch conj56_sketch0 : @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (##hole##)
Sketch conj56_sketch1 : @eq lst (qreva (lfappend (##hole##) lf4) Nil) (Cons n x)
Sketch conj56_sketch2 : @eq lst (##hole##) (Cons n x)
Sketch conj56_sketch3 : @eq lst (qreva (lfappend (qreva x (##hole##)) lf4) (##hole##)) (Cons n x)
Sketch conj56_sketch4 : @eq lst (qreva (##hole##) Nil) (Cons n x)
Sketch conj56_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (qreva x Nil) (##hole##)
Sketch conj56_term_sketch2 : @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (##hole##)
Sketch conj56_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj56_term_sketch4 : @eq lst (lfappend (qreva x Nil) lf4) (##hole##)
Sketch conj59_sketch0 : @eq lst (qreva (lfappend (qreva x lf6) (##hole##)) lf6) lf5
Sketch conj59_sketch1 : @eq lst (qreva (lfappend (##hole##) (Cons n lf6)) lf6) lf5
Sketch conj59_sketch2 : @eq lst (qreva (##hole##) lf6) lf5
Sketch conj59_sketch3 : @eq lst (##hole##) lf5
Sketch conj59_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (qreva x lf6) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (##hole##)
Sketch conj60_sketch0 : @eq lst (qreva (##hole##) Nil) lf5
Sketch conj60_sketch1 : @eq lst (qreva (lfappend (##hole##) (Cons n Nil)) Nil) lf5
Sketch conj60_sketch2 : @eq lst (qreva (lfappend (qreva x Nil) (##hole##)) Nil) lf5
Sketch conj60_sketch3 : @eq lst (##hole##) lf5
Sketch conj60_sketch4 : @eq lst
  (qreva (lfappend (qreva x (##hole##)) (Cons n (##hole##))) (##hole##)) lf5
Sketch conj60_term_sketch0 : @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (qreva x Nil) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj63_sketch0 : @eq lst (qreva (lfappend (qreva x lf6) (##hole##)) lf6) (Cons n x)
Sketch conj63_sketch1 : @eq lst (qreva (lfappend (##hole##) (Cons n lf6)) lf6) (Cons n x)
Sketch conj63_sketch2 : @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (##hole##)
Sketch conj63_sketch3 : @eq lst (qreva (##hole##) lf6) (Cons n x)
Sketch conj63_sketch4 : @eq lst (##hole##) (Cons n x)
Sketch conj63_term_sketch0 : @eq lst (Cons n lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (qreva x lf6) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 314 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_39
Sketch conj32_term_sketch4 --> Problem  synth_7
Sketch conj52_sketch1 --> Problem  synth_3
Sketch conj60_term_sketch1 --> Problem  synth_40
Sketch conj59_term_sketch2 --> Problem  synth_15
Sketch conj63_sketch4 --> Problem  synth_2
Sketch conj23_sketch0 --> Problem  synth_2
Sketch conj59_term_sketch1 --> Problem  synth_37
Sketch conj59_sketch1 --> Problem  synth_47
Sketch conj60_sketch0 --> Problem  synth_11
Sketch conj20_term_sketch2 --> Problem  synth_7
Sketch conj56_sketch4 --> Problem  synth_16
Sketch conj24_sketch2 --> Problem  synth_13
Sketch conj24_sketch1 --> Problem  synth_16
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj21_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch0 --> Problem  synth_19
Sketch conj56_term_sketch0 --> Problem  synth_2
Sketch conj31_sketch0 --> Problem  synth_27
Sketch conj55_sketch3 --> Problem  synth_35
Sketch conj31_imp_sketch1 --> Problem  synth_28
Sketch conj31_imp_sketch0 --> Problem  synth_27
Sketch conj60_term_sketch3 --> Problem  synth_2
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj60_sketch2 --> Problem  synth_50
Sketch conj59_sketch3 --> Problem  synth_3
Sketch conj63_term_sketch4 --> Problem  synth_48
Sketch conj32_sketch3 --> Problem  synth_2
Sketch conj32_term_sketch3 --> Problem  synth_26
Sketch conj28_sketch2 --> Problem  synth_3
Sketch conj23_term_sketch2 --> Problem  synth_2
Sketch conj24_term_sketch0 --> Problem  synth_13
Sketch conj21_sketch0 --> Problem  synth_2
Sketch conj19_term_sketch1 --> Problem  synth_10
Sketch conj28_term_sketch2 --> Problem  synth_26
Sketch conj27_sketch1 --> Problem  synth_3
Sketch conj60_sketch3 --> Problem  synth_3
Sketch conj51_sketch0 --> Problem  synth_3
Sketch conj23_term_sketch0 --> Problem  synth_9
Sketch conj52_term_sketch3 --> Problem  synth_42
Sketch conj32_sketch2 --> Problem  synth_32
Sketch conj63_term_sketch1 --> Problem  synth_37
Sketch conj18_sketch1 --> Problem  synth_5
Sketch conj51_term_sketch1 --> Problem  synth_36
Sketch conj52_term_sketch0 --> Problem  synth_40
Sketch conj27_term_sketch1 --> Problem  synth_20
Sketch conj23_sketch2 --> Problem  synth_9
Sketch conj20_sketch2 --> Problem  synth_12
Sketch conj31_imp_sketch4 --> Problem  synth_30
Sketch conj31_imp_term_sketch1 --> Problem  synth_2
Sketch conj55_term_sketch1 --> Problem  synth_36
Sketch conj52_sketch0 --> Problem  synth_38
Sketch conj56_term_sketch4 --> Problem  synth_42
Sketch conj31_imp_term_sketch2 --> Problem  synth_20
Sketch conj31_term_sketch0 --> Problem  synth_19
Sketch conj31_imp_term_sketch4 --> Problem  synth_21
Sketch conj55_sketch0 --> Problem  synth_2
Sketch conj63_sketch1 --> Problem  synth_53
Sketch conj27_sketch0 --> Problem  synth_18
Sketch conj18_sketch0 --> Problem  synth_3
Sketch conj56_term_sketch1 --> Problem  synth_40
Sketch conj56_sketch2 --> Problem  synth_2
Sketch conj22_term_sketch0 --> Problem  synth_2
Sketch conj32_sketch4 --> Problem  synth_33
Sketch conj32_term_sketch1 --> Problem  synth_24
Sketch conj60_sketch4 --> Problem  synth_51
Sketch conj56_sketch1 --> Problem  synth_44
Sketch conj24_term_sketch3 --> Problem  synth_7
Sketch conj27_term_sketch0 --> Problem  synth_19
Sketch conj51_sketch2 --> Problem  synth_34
Sketch conj63_term_sketch2 --> Problem  synth_2
Sketch conj31_imp_sketch3 --> Problem  synth_29
Sketch conj28_sketch0 --> Problem  synth_11
Sketch conj60_term_sketch4 --> Problem  synth_7
Sketch conj31_imp_sketch2 --> Problem  synth_28
Sketch conj28_term_sketch1 --> Problem  synth_25
Sketch conj31_term_sketch3 --> Problem  synth_21
Sketch conj22_sketch1 --> Problem  synth_2
Sketch conj31_term_sketch1 --> Problem  synth_2
Sketch conj24_sketch0 --> Problem  synth_2
Sketch conj32_sketch0 --> Problem  synth_26
Sketch conj23_sketch1 --> Problem  synth_15
Sketch conj60_term_sketch2 --> Problem  synth_25
Sketch conj60_sketch1 --> Problem  synth_49
Sketch conj55_sketch1 --> Problem  synth_15
Sketch conj28_term_sketch3 --> Problem  synth_7
Sketch conj27_term_sketch2 --> Problem  synth_21
Sketch conj59_sketch2 --> Problem  synth_8
Sketch conj52_term_sketch1 --> Problem  synth_41
Sketch conj20_sketch0 --> Problem  synth_3
Sketch conj20_term_sketch0 --> Problem  synth_13
Sketch conj18_term_sketch1 --> Problem  synth_7
Sketch conj51_term_sketch2 --> Problem  synth_37
Sketch conj27_sketch2 --> Problem  synth_8
Sketch conj60_term_sketch0 --> Problem  synth_16
Sketch conj52_term_sketch2 --> Problem  synth_7
Sketch conj22_term_sketch1 --> Problem  synth_6
Sketch conj31_sketch2 --> Problem  synth_2
Sketch conj32_term_sketch2 --> Problem  synth_25
Sketch conj31_sketch3 --> Problem  synth_15
Sketch conj56_term_sketch3 --> Problem  synth_7
Sketch conj19_term_sketch0 --> Problem  synth_9
Sketch conj24_term_sketch1 --> Problem  synth_10
Sketch conj32_sketch1 --> Problem  synth_16
Sketch conj24_sketch3 --> Problem  synth_17
Sketch conj22_sketch0 --> Problem  synth_6
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj51_term_sketch0 --> Problem  synth_35
Sketch conj56_sketch3 --> Problem  synth_45
Sketch conj55_term_sketch0 --> Problem  synth_35
Sketch conj19_sketch0 --> Problem  synth_3
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj63_sketch2 --> Problem  synth_48
Sketch conj22_term_sketch2 --> Problem  synth_7
Sketch conj59_sketch0 --> Problem  synth_46
Sketch conj23_term_sketch1 --> Problem  synth_10
Sketch conj20_sketch1 --> Problem  synth_11
Sketch conj63_term_sketch3 --> Problem  synth_15
Sketch conj63_sketch0 --> Problem  synth_52
Sketch conj55_term_sketch3 --> Problem  synth_2
Sketch conj63_sketch3 --> Problem  synth_15
Sketch conj59_term_sketch0 --> Problem  synth_19
Sketch conj52_sketch3 --> Problem  synth_11
Sketch conj31_imp_term_sketch3 --> Problem  synth_31
Sketch conj28_term_sketch0 --> Problem  synth_24
Sketch conj59_term_sketch3 --> Problem  synth_48
Sketch conj51_sketch1 --> Problem  synth_8
Sketch conj56_term_sketch2 --> Problem  synth_41
Sketch conj32_term_sketch0 --> Problem  synth_2
Sketch conj20_term_sketch1 --> Problem  synth_10
Sketch conj21_term_sketch0 --> Problem  synth_4
Sketch conj19_sketch1 --> Problem  synth_8
Sketch conj22_sketch2 --> Problem  synth_14
Sketch conj28_sketch3 --> Problem  synth_23
Sketch conj18_term_sketch0 --> Problem  synth_6
Sketch conj28_sketch1 --> Problem  synth_22
Sketch conj24_term_sketch2 --> Problem  synth_2
Sketch conj21_sketch1 --> Problem  synth_4
Sketch conj31_imp_term_sketch0 --> Problem  synth_19
Sketch conj56_sketch0 --> Problem  synth_41
Sketch conj31_sketch1 --> Problem  synth_20
Sketch conj31_term_sketch2 --> Problem  synth_20
Sketch conj55_term_sketch2 --> Problem  synth_37
Sketch conj55_sketch2 --> Problem  synth_43


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 623 seconds

Problem: synth_28
 Cons n (qreva lf3 lf6)
 Cons n (lfappend x lf6)
 Cons n (qreva lf3 Nil)
 Cons n (lfappend x Nil)
 Cons n (rev lf3)
 Cons n x

Problem: synth_17
 Nil

Problem: synth_29
 qreva lf3 lf6
 lfappend x lf6
 qreva lf3 Nil
 lfappend x Nil
 rev lf3
 x

Problem: synth_45
 Nil

Problem: synth_26
 rev (qreva (rev lf3) (Cons n Nil))
 rev (lfappend lf3 (Cons n Nil))
 rev (lfappend (rev (rev lf3)) (Cons n Nil))
 Cons n (lfappend (rev lf3) Nil)
 Cons n (qreva lf3 Nil)
 Cons n (rev lf3)

Problem: synth_9
 lfappend (rev lf4) (rev lf3)
 qreva (rev lf4) (rev lf3)
 rev (lfappend lf3 (rev lf4))
 rev (lfappend lf3 lf4)
 lfappend lf4 (rev lf3)
 qreva lf4 (rev lf3)

Problem: synth_30
 lfappend lf3 (Cons n lf6)
 qreva x (Cons n lf6)
 lfappend lf3 (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev (rev lf3)) (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_11
 lfappend (qreva lf5 Nil) Nil
 rev (rev (rev lf5))
 rev (lfappend lf5 Nil)
 lfappend (rev lf5) Nil
 qreva lf5 Nil
 rev lf5

Problem: synth_39
 Nil

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_46

Problem: synth_15
 lfappend (rev x) (Cons n (rev lf6))
 lfappend (rev x) (Cons n lf6)
 qreva x (Cons n (rev lf6))
 qreva x (Cons n lf6)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_31
 lfappend lf6 (rev lf3)
 qreva lf6 (rev lf3)
 qreva lf3 (rev lf6)
 qreva lf3 lf6
 qreva lf3 Nil
 rev lf3

Problem: synth_14
 Nil

Problem: synth_8
 lfappend lf6 (rev lf5)
 qreva lf6 (rev lf5)
 qreva lf5 (rev lf6)
 qreva lf5 lf6
 qreva lf5 Nil
 rev lf5

Problem: synth_34

Problem: synth_12
 Nil

Problem: synth_5
 Nil

Problem: synth_37
 lfappend lf6 (rev x)
 qreva lf6 (rev x)
 qreva x (rev lf6)
 qreva x lf6
 qreva x Nil
 rev x

Problem: synth_53
 lfappend lf6 (rev x)
 qreva lf6 (rev x)
 qreva x (rev lf6)
 qreva x lf6
 qreva x Nil
 rev x

Problem: synth_50

Problem: synth_2
 Cons n (qreva (rev x) Nil)
 rev (qreva x (Cons n Nil))
 rev (lfappend (rev x) (Cons n Nil))
 Cons n (rev (rev x))
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_22

Problem: synth_20
 lfappend lf6 (Cons n (rev lf3))
 qreva lf6 (Cons n (rev lf3))
 Cons n (qreva lf3 (rev lf6))
 Cons n (qreva lf3 lf6)
 Cons n (qreva lf3 Nil)
 Cons n (rev lf3)

Problem: synth_18

Problem: synth_21
 qreva (rev lf3) (Cons n lf6)
 qreva (rev lf3) (Cons n Nil)
 lfappend lf3 (Cons n (rev lf6))
 lfappend lf3 (Cons n lf6)
 lfappend lf3 (Cons n Nil)
 lfappend (rev (rev lf3)) (Cons n Nil)

Problem: synth_41
 rev (qreva x (rev lf4))
 rev (qreva x lf4)
 lfappend (rev lf4) x
 qreva (rev lf4) x
 lfappend lf4 x
 qreva lf4 x

Problem: synth_49

Problem: synth_25
 Cons n Nil

Problem: synth_13
 lfappend (rev lf4) (rev lf3)
 qreva (rev lf4) (rev lf3)
 rev (lfappend lf3 (rev lf4))
 rev (lfappend lf3 lf4)
 lfappend lf4 (rev lf3)
 qreva lf4 (rev lf3)

Problem: synth_6
 lfappend (qreva lf2 Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 qreva lf2 Nil
 rev lf2

Problem: synth_7
 Nil

Problem: synth_4
 lfappend lf6 (rev lf2)
 qreva lf6 (rev lf2)
 qreva lf2 (rev lf6)
 qreva lf2 lf6
 qreva lf2 Nil
 rev lf2

Problem: synth_38

Problem: synth_23
 Nil

Problem: synth_27
 qreva lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)
 lfappend (rev lf6) (Cons n Nil)
 Cons n (rev lf6)
 Cons n lf6
 Cons n Nil

Problem: synth_42
 lfappend (rev x) (rev lf4)
 rev (lfappend lf4 x)
 rev (qreva lf4 x)
 lfappend (rev x) lf4
 qreva x (rev lf4)
 qreva x lf4

Problem: synth_16
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_19
 qreva lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)
 lfappend (rev lf6) (Cons n Nil)
 Cons n (rev lf6)
 Cons n lf6
 Cons n Nil

Problem: synth_40
 lfappend (qreva x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_10
 qreva (rev lf3) (rev lf4)
 rev (lfappend lf4 (rev lf3))
 rev (qreva lf4 (rev lf3))
 qreva (rev lf3) lf4
 lfappend lf3 (rev lf4)
 lfappend lf3 lf4

Problem: synth_33
 Nil

Problem: synth_47

Problem: synth_24
 lfappend (lfappend lf3 Nil) (Cons n Nil)
 qreva (qreva lf3 Nil) (Cons n Nil)
 lfappend (rev (qreva lf3 Nil)) (Cons n Nil)
 qreva (rev lf3) (Cons n Nil)
 lfappend lf3 (Cons n Nil)
 lfappend (rev (rev lf3)) (Cons n Nil)

Problem: synth_3
 qreva (qreva lf5 Nil) Nil
 rev (qreva lf5 Nil)
 qreva (rev lf5) Nil
 rev (rev lf5)
 lfappend lf5 Nil
 lf5

Problem: synth_52
 qreva lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)
 lfappend (rev lf6) (Cons n Nil)
 Cons n (rev lf6)
 Cons n lf6
 Cons n Nil

Problem: synth_32
 Cons n Nil

Problem: synth_48
 Cons n (qreva lf6 x)
 lfappend lf6 (Cons n x)
 qreva lf6 (Cons n x)
 Cons n (lfappend x lf6)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_44
 lfappend (qreva x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_36
 lfappend (rev x) (rev lf4)
 rev (lfappend lf4 x)
 rev (qreva lf4 x)
 lfappend (rev x) lf4
 qreva x (rev lf4)
 qreva x lf4

Problem: synth_51
 Nil

Problem: synth_35
 rev (qreva x (rev lf4))
 rev (qreva x lf4)
 lfappend (rev lf4) x
 qreva (rev lf4) x
 lfappend lf4 x
 qreva lf4 x

Problem: synth_43
 lfappend lf6 (rev x)
 qreva lf6 (rev x)
 qreva x (rev lf6)
 qreva x lf6
 qreva x Nil
 rev x

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 624 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_2: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq lst (qreva lf3 Nil) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_3: forall (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (qreva x lf6) lf6) x, @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_9: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_10: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_11: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_12: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_13: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_14: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_15: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_16: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_17: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_18: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_19: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_20: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_21: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_22: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (lfappend lf6 (rev lf2)).
Lemma candidate_23: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf6 (rev lf2)).
Lemma candidate_24: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 (rev lf6)).
Lemma candidate_25: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 lf6).
Lemma candidate_26: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 Nil).
Lemma candidate_27: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (rev lf2).
Lemma candidate_28: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_29: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_30: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_31: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_32: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_33: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_34: forall (lf5 : lst) (lf2 : lst), @eq lst (qreva lf2 (Nil)) lf5.
Lemma candidate_35: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (qreva lf2 Nil) Nil).
Lemma candidate_36: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (rev (rev lf2))).
Lemma candidate_37: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (lfappend lf2 Nil)).
Lemma candidate_38: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (rev lf2) Nil).
Lemma candidate_39: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (qreva lf2 Nil).
Lemma candidate_40: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev lf2).
Lemma candidate_41: @eq lst Nil (Nil).
Lemma candidate_42: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_43: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_44: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_45: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_46: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_47: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_48: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf6 (rev lf5)) lf6) lf5.
Lemma candidate_49: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf6 (rev lf5)) lf6) lf5.
Lemma candidate_50: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 (rev lf6)) lf6) lf5.
Lemma candidate_51: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 lf6) lf6) lf5.
Lemma candidate_52: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 Nil) lf6) lf5.
Lemma candidate_53: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) lf6) lf5.
Lemma candidate_54: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_55: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (qreva (rev lf4) (rev lf3)).
Lemma candidate_56: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_57: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (rev (lfappend lf3 lf4)).
Lemma candidate_58: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (lfappend lf4 (rev lf3)).
Lemma candidate_59: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (qreva lf4 (rev lf3)).
Lemma candidate_60: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) (rev lf4)).
Lemma candidate_61: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (lfappend lf4 (rev lf3))).
Lemma candidate_62: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (qreva lf4 (rev lf3))).
Lemma candidate_63: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) lf4).
Lemma candidate_64: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 (rev lf4)).
Lemma candidate_65: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_66: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_67: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_68: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_69: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_70: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_71: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_72: forall (lf5 : lst), @eq lst (qreva (lfappend (qreva lf5 Nil) Nil) Nil) lf5.
Lemma candidate_73: forall (lf5 : lst), @eq lst (qreva (rev (rev (rev lf5))) Nil) lf5.
Lemma candidate_74: forall (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 Nil)) Nil) lf5.
Lemma candidate_75: forall (lf5 : lst), @eq lst (qreva (lfappend (rev lf5) Nil) Nil) lf5.
Lemma candidate_76: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_77: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_78: forall (lf3 : lst) (lf4 : lst) (lf5 : lst), @eq lst (qreva (lfappend lf3 lf4) (Nil)) lf5.
Lemma candidate_79: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_80: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva (rev lf4) (rev lf3)).
Lemma candidate_81: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_82: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 lf4)).
Lemma candidate_83: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend lf4 (rev lf3)).
Lemma candidate_84: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva lf4 (rev lf3)).
Lemma candidate_85: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) (rev lf4)).
Lemma candidate_86: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (lfappend lf4 (rev lf3))).
Lemma candidate_87: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (qreva lf4 (rev lf3))).
Lemma candidate_88: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) lf4).
Lemma candidate_89: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 (rev lf4)).
Lemma candidate_90: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_91: @eq lst Nil (Nil).
Lemma candidate_92: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_93: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_94: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_95: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_96: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_97: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_98: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (lfappend lf6 (rev lf2)).
Lemma candidate_99: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf6 (rev lf2)).
Lemma candidate_100: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 (rev lf6)).
Lemma candidate_101: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 lf6).
Lemma candidate_102: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 Nil).
Lemma candidate_103: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (rev lf2).
Lemma candidate_104: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (lfappend lf6 (rev lf2)).
Lemma candidate_105: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf6 (rev lf2)).
Lemma candidate_106: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 (rev lf6)).
Lemma candidate_107: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 lf6).
Lemma candidate_108: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (qreva lf2 Nil).
Lemma candidate_109: forall (lf2 : lst) (lf6 : lst), @eq lst (qreva lf2 lf6) (rev lf2).
Lemma candidate_110: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_111: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_112: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_113: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_114: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_115: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_116: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (qreva lf2 Nil) Nil).
Lemma candidate_117: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (rev (rev lf2))).
Lemma candidate_118: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (lfappend lf2 Nil)).
Lemma candidate_119: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (rev lf2) Nil).
Lemma candidate_120: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (qreva lf2 Nil).
Lemma candidate_121: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev lf2).
Lemma candidate_122: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_123: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_124: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_125: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_126: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_127: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_128: forall (n : natural) (x : lst) (lf2 : lst), @eq lst (qreva lf2 (Nil)) (Cons n x).
Lemma candidate_129: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_130: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_131: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_132: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_133: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_134: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_135: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (qreva lf2 Nil) Nil).
Lemma candidate_136: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (rev (rev lf2))).
Lemma candidate_137: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (lfappend lf2 Nil)).
Lemma candidate_138: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (rev lf2) Nil).
Lemma candidate_139: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (qreva lf2 Nil).
Lemma candidate_140: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev lf2).
Lemma candidate_141: @eq lst Nil (Nil).
Lemma candidate_142: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_143: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_144: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_145: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_146: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_147: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_148: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_149: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_150: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_151: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_152: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_153: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_154: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_155: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (qreva (rev lf4) (rev lf3)).
Lemma candidate_156: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_157: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (rev (lfappend lf3 lf4)).
Lemma candidate_158: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (lfappend lf4 (rev lf3)).
Lemma candidate_159: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (qreva lf4 (rev lf3)).
Lemma candidate_160: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_161: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (qreva (rev lf4) (rev lf3)).
Lemma candidate_162: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_163: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (rev (lfappend lf3 lf4)).
Lemma candidate_164: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (lfappend lf4 (rev lf3)).
Lemma candidate_165: forall (lf3 : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 lf4) lf6) (qreva lf4 (rev lf3)).
Lemma candidate_166: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) (rev lf4)).
Lemma candidate_167: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (lfappend lf4 (rev lf3))).
Lemma candidate_168: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (qreva lf4 (rev lf3))).
Lemma candidate_169: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) lf4).
Lemma candidate_170: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 (rev lf4)).
Lemma candidate_171: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_172: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_173: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_174: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_175: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_176: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_177: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_178: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_179: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_180: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_181: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_182: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_183: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_184: forall (n : natural) (x : lst), @eq lst (qreva (qreva (lfappend x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_185: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_186: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (rev (rev x))) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_187: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (lfappend x Nil)) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_188: forall (n : natural) (x : lst), @eq lst (qreva (qreva x (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_189: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_190: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_191: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva (rev lf4) (rev lf3)).
Lemma candidate_192: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_193: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 lf4)).
Lemma candidate_194: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend lf4 (rev lf3)).
Lemma candidate_195: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva lf4 (rev lf3)).
Lemma candidate_196: forall (lf3 : lst) (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend lf3 lf4) (Nil)) (Cons n x).
Lemma candidate_197: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_198: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva (rev lf4) (rev lf3)).
Lemma candidate_199: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 (rev lf4))).
Lemma candidate_200: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 lf4)).
Lemma candidate_201: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend lf4 (rev lf3)).
Lemma candidate_202: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva lf4 (rev lf3)).
Lemma candidate_203: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) (rev lf4)).
Lemma candidate_204: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (lfappend lf4 (rev lf3))).
Lemma candidate_205: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (qreva lf4 (rev lf3))).
Lemma candidate_206: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) lf4).
Lemma candidate_207: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 (rev lf4)).
Lemma candidate_208: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_209: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_210: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_211: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_212: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_213: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_214: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_215: @eq lst Nil (Nil).
Lemma candidate_216: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_217: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_218: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_219: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_220: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_221: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_222: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf6 (rev lf5)) lf6) lf5.
Lemma candidate_223: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf6 (rev lf5)) lf6) lf5.
Lemma candidate_224: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 (rev lf6)) lf6) lf5.
Lemma candidate_225: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 lf6) lf6) lf5.
Lemma candidate_226: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 Nil) lf6) lf5.
Lemma candidate_227: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) lf6) lf5.
Lemma candidate_228: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (qreva lf6 (Cons n Nil)).
Lemma candidate_229: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_230: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_231: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_232: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_233: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_234: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (lfappend lf6 (Cons n (rev lf3))).
Lemma candidate_235: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (qreva lf6 (Cons n (rev lf3))).
Lemma candidate_236: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (Cons n (qreva lf3 (rev lf6))).
Lemma candidate_237: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_238: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_239: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (rev lf3)).
Lemma candidate_240: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n lf6)).
Lemma candidate_241: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_242: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n (rev lf6))).
Lemma candidate_243: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n lf6)).
Lemma candidate_244: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_245: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_246: forall (lf5 : lst), @eq lst (qreva (lfappend (qreva lf5 Nil) Nil) Nil) lf5.
Lemma candidate_247: forall (lf5 : lst), @eq lst (qreva (rev (rev (rev lf5))) Nil) lf5.
Lemma candidate_248: forall (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 Nil)) Nil) lf5.
Lemma candidate_249: forall (lf5 : lst), @eq lst (qreva (lfappend (rev lf5) Nil) Nil) lf5.
Lemma candidate_250: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_251: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_252: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_253: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_254: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_255: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_256: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_257: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_258: forall (lf3 : lst) (n : natural) (lf5 : lst), @eq lst (qreva (lfappend lf3 (Cons n (Nil))) (Nil)) lf5.
Lemma candidate_259: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_260: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_261: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_262: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_263: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_264: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_265: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_266: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (qreva (rev lf3) (Cons n Nil))).
Lemma candidate_267: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend lf3 (Cons n Nil))).
Lemma candidate_268: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend (rev (rev lf3)) (Cons n Nil))).
Lemma candidate_269: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (Cons n (lfappend (rev lf3) Nil)).
Lemma candidate_270: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (qreva lf3 Nil)).
Lemma candidate_271: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (rev lf3)).
Lemma candidate_272: @eq lst Nil (Nil).
Lemma candidate_273: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (qreva lf6 (Cons n Nil))) lf6) (Cons n x).
Lemma candidate_274: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (lfappend (rev (rev lf6)) (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_275: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (lfappend (rev lf6) (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_276: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_277: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_278: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_279: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_280: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (lfappend x lf6)).
Lemma candidate_281: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_282: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (lfappend x Nil)).
Lemma candidate_283: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (rev lf3)).
Lemma candidate_284: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_285: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (qreva lf3 lf6)) (Cons n x).
Lemma candidate_286: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (lfappend x lf6)) (Cons n x).
Lemma candidate_287: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (qreva lf3 Nil)) (Cons n x).
Lemma candidate_288: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_289: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (rev lf3)) (Cons n x).
Lemma candidate_290: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n x) (Cons n x).
Lemma candidate_291: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_292: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (lfappend x lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_293: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 Nil) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_294: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (lfappend x Nil) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_295: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (rev lf3) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_296: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (x) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_297: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_298: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (qreva x (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_299: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_300: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (qreva x (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_301: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend (rev (rev lf3)) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_302: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_303: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (qreva lf6 (Cons n Nil)).
Lemma candidate_304: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_305: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_306: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_307: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_308: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_309: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_310: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_311: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_312: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_313: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_314: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_315: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (lfappend lf6 (Cons n (rev lf3))).
Lemma candidate_316: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (qreva lf6 (Cons n (rev lf3))).
Lemma candidate_317: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (Cons n (qreva lf3 (rev lf6))).
Lemma candidate_318: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_319: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_320: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (rev lf3)).
Lemma candidate_321: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva lf3 lf6) (lfappend lf6 (rev lf3)).
Lemma candidate_322: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva lf3 lf6) (qreva lf6 (rev lf3)).
Lemma candidate_323: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva lf3 lf6) (qreva lf3 (rev lf6)).
Lemma candidate_324: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva lf3 lf6) (qreva lf3 lf6).
Lemma candidate_325: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva lf3 lf6) (qreva lf3 Nil).
Lemma candidate_326: forall (lf3 : lst) (lf6 : lst), @eq lst (qreva lf3 lf6) (rev lf3).
Lemma candidate_327: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n lf6)).
Lemma candidate_328: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_329: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n (rev lf6))).
Lemma candidate_330: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n lf6)).
Lemma candidate_331: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_332: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_333: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 (qreva lf6 (Cons n Nil))) lf6) (Cons n x).
Lemma candidate_334: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 (lfappend (rev (rev lf6)) (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_335: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 (lfappend (rev lf6) (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_336: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_337: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_338: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_339: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (lfappend lf6 (Cons n (rev lf3))).
Lemma candidate_340: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (qreva lf6 (Cons n (rev lf3))).
Lemma candidate_341: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (Cons n (qreva lf3 (rev lf6))).
Lemma candidate_342: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_343: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_344: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (rev lf3)).
Lemma candidate_345: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_346: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_347: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_348: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_349: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_350: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_351: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_352: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_353: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_354: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_355: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_356: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_357: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (qreva lf6 (Cons n Nil)).
Lemma candidate_358: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_359: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_360: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_361: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_362: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_363: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_364: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_365: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_366: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_367: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_368: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_369: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (lfappend lf6 (Cons n (rev lf3))).
Lemma candidate_370: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (qreva lf6 (Cons n (rev lf3))).
Lemma candidate_371: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6)   (Cons n (qreva lf3 (rev lf6))).
Lemma candidate_372: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_373: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_374: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (rev lf3)).
Lemma candidate_375: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n lf6)).
Lemma candidate_376: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_377: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n (rev lf6))).
Lemma candidate_378: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n lf6)).
Lemma candidate_379: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_380: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_381: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (qreva (rev lf3) (Cons n Nil))).
Lemma candidate_382: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend lf3 (Cons n Nil))).
Lemma candidate_383: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend (rev (rev lf3)) (Cons n Nil))).
Lemma candidate_384: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (Cons n (lfappend (rev lf3) Nil)).
Lemma candidate_385: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (qreva lf3 Nil)).
Lemma candidate_386: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (rev lf3)).
Lemma candidate_387: forall (n : natural) (x : lst), @eq lst (qreva (qreva (lfappend x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_388: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_389: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (rev (rev x))) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_390: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (lfappend x Nil)) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_391: forall (n : natural) (x : lst), @eq lst (qreva (qreva x (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_392: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_393: forall (lf3 : lst) (n : natural) (x : lst), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_394: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_395: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_396: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_397: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_398: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_399: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_400: forall (lf3 : lst) (n : natural) (x : lst), @eq lst (qreva (lfappend lf3 (Cons n (Nil))) (Nil)) (Cons n x).
Lemma candidate_401: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_402: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_403: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_404: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_405: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_406: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_407: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_408: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_409: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_410: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_411: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_412: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_413: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_414: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (qreva (rev lf3) (Cons n Nil))).
Lemma candidate_415: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend lf3 (Cons n Nil))).
Lemma candidate_416: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend (rev (rev lf3)) (Cons n Nil))).
Lemma candidate_417: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (Cons n (lfappend (rev lf3) Nil)).
Lemma candidate_418: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (qreva lf3 Nil)).
Lemma candidate_419: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (rev lf3)).
Lemma candidate_420: @eq lst Nil (Nil).
Lemma candidate_421: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_422: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_423: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_424: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_425: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_426: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_427: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf6 (rev lf5)) lf6) lf5.
Lemma candidate_428: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf6 (rev lf5)) lf6) lf5.
Lemma candidate_429: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 (rev lf6)) lf6) lf5.
Lemma candidate_430: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 lf6) lf6) lf5.
Lemma candidate_431: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 Nil) lf6) lf5.
Lemma candidate_432: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) lf6) lf5.
Lemma candidate_433: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (rev (qreva x (rev lf4))).
Lemma candidate_434: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (rev (qreva x lf4)).
Lemma candidate_435: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (lfappend (rev lf4) x).
Lemma candidate_436: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (qreva (rev lf4) x).
Lemma candidate_437: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (lfappend lf4 x).
Lemma candidate_438: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (qreva lf4 x).
Lemma candidate_439: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_440: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (rev (lfappend lf4 x)).
Lemma candidate_441: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (rev (qreva lf4 x)).
Lemma candidate_442: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (lfappend (rev x) lf4).
Lemma candidate_443: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (qreva x (rev lf4)).
Lemma candidate_444: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (qreva x lf4).
Lemma candidate_445: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend lf6 (rev x)).
Lemma candidate_446: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva lf6 (rev x)).
Lemma candidate_447: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_448: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_449: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x Nil).
Lemma candidate_450: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev x).
Lemma candidate_451: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_452: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_453: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_454: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_455: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_456: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_457: forall (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend (qreva x (Nil)) lf4) (Nil)) lf5.
Lemma candidate_458: forall (lf5 : lst), @eq lst (qreva (lfappend (qreva lf5 Nil) Nil) Nil) lf5.
Lemma candidate_459: forall (lf5 : lst), @eq lst (qreva (rev (rev (rev lf5))) Nil) lf5.
Lemma candidate_460: forall (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 Nil)) Nil) lf5.
Lemma candidate_461: forall (lf5 : lst), @eq lst (qreva (lfappend (rev lf5) Nil) Nil) lf5.
Lemma candidate_462: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_463: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_464: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_465: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_466: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_467: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_468: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_469: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_470: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x (rev lf4))).
Lemma candidate_471: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x lf4)).
Lemma candidate_472: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend (rev lf4) x).
Lemma candidate_473: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva (rev lf4) x).
Lemma candidate_474: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend lf4 x).
Lemma candidate_475: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva lf4 x).
Lemma candidate_476: @eq lst Nil (Nil).
Lemma candidate_477: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_478: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (rev (lfappend lf4 x)).
Lemma candidate_479: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (rev (qreva lf4 x)).
Lemma candidate_480: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (lfappend (rev x) lf4).
Lemma candidate_481: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (qreva x (rev lf4)).
Lemma candidate_482: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (qreva x lf4).
Lemma candidate_483: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_484: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_485: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_486: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_487: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_488: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_489: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_490: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_491: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_492: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_493: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_494: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_495: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (lfappend lf6 (rev x)) lf4) lf6) (Cons n x).
Lemma candidate_496: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva lf6 (rev x)) lf4) lf6) (Cons n x).
Lemma candidate_497: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x (rev lf6)) lf4) lf6) (Cons n x).
Lemma candidate_498: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (Cons n x).
Lemma candidate_499: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) lf6) (Cons n x).
Lemma candidate_500: forall (n : natural) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) lf4) lf6) (Cons n x).
Lemma candidate_501: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (rev (qreva x (rev lf4))).
Lemma candidate_502: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (rev (qreva x lf4)).
Lemma candidate_503: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (lfappend (rev lf4) x).
Lemma candidate_504: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (qreva (rev lf4) x).
Lemma candidate_505: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (lfappend lf4 x).
Lemma candidate_506: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (qreva lf4 x).
Lemma candidate_507: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (rev (qreva x (rev lf4))).
Lemma candidate_508: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (rev (qreva x lf4)).
Lemma candidate_509: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (lfappend (rev lf4) x).
Lemma candidate_510: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (qreva (rev lf4) x).
Lemma candidate_511: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (lfappend lf4 x).
Lemma candidate_512: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) lf4) lf6) (qreva lf4 x).
Lemma candidate_513: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_514: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (rev (lfappend lf4 x)).
Lemma candidate_515: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (rev (qreva lf4 x)).
Lemma candidate_516: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (lfappend (rev x) lf4).
Lemma candidate_517: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (qreva x (rev lf4)).
Lemma candidate_518: forall (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) lf4) (qreva x lf4).
Lemma candidate_519: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend lf6 (rev x)).
Lemma candidate_520: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva lf6 (rev x)).
Lemma candidate_521: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_522: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_523: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x Nil).
Lemma candidate_524: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev x).
Lemma candidate_525: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_526: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_527: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_528: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_529: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_530: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_531: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x (rev lf4))).
Lemma candidate_532: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x lf4)).
Lemma candidate_533: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend (rev lf4) x).
Lemma candidate_534: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva (rev lf4) x).
Lemma candidate_535: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend lf4 x).
Lemma candidate_536: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva lf4 x).
Lemma candidate_537: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (lfappend (qreva x Nil) Nil) lf4) Nil) (Cons n x).
Lemma candidate_538: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (rev (rev (rev x))) lf4) Nil) (Cons n x).
Lemma candidate_539: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (rev (lfappend x Nil)) lf4) Nil) (Cons n x).
Lemma candidate_540: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (lfappend (rev x) Nil) lf4) Nil) (Cons n x).
Lemma candidate_541: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (Cons n x).
Lemma candidate_542: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (rev x) lf4) Nil) (Cons n x).
Lemma candidate_543: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_544: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_545: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_546: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_547: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_548: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_549: forall (n : natural) (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x (Nil)) lf4) (Nil)) (Cons n x).
Lemma candidate_550: forall (n : natural) (x : lst), @eq lst (qreva (qreva (lfappend x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_551: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_552: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (rev (rev x))) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_553: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (lfappend x Nil)) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_554: forall (n : natural) (x : lst), @eq lst (qreva (qreva x (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_555: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_556: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_557: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_558: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_559: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_560: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_561: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_562: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_563: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_564: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_565: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_566: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_567: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_568: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x (rev lf4))).
Lemma candidate_569: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x lf4)).
Lemma candidate_570: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend (rev lf4) x).
Lemma candidate_571: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva (rev lf4) x).
Lemma candidate_572: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend lf4 x).
Lemma candidate_573: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva lf4 x).
Lemma candidate_574: @eq lst Nil (Nil).
Lemma candidate_575: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_576: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (rev (lfappend lf4 x)).
Lemma candidate_577: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (rev (qreva lf4 x)).
Lemma candidate_578: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (lfappend (rev x) lf4).
Lemma candidate_579: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (qreva x (rev lf4)).
Lemma candidate_580: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (qreva x lf4).
Lemma candidate_581: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend lf6 (rev lf5)) lf6) lf5.
Lemma candidate_582: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf6 (rev lf5)) lf6) lf5.
Lemma candidate_583: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 (rev lf6)) lf6) lf5.
Lemma candidate_584: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 lf6) lf6) lf5.
Lemma candidate_585: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva lf5 Nil) lf6) lf5.
Lemma candidate_586: forall (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) lf6) lf5.
Lemma candidate_587: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_588: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_589: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_590: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_591: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_592: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_593: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (qreva lf6 (Cons n Nil)).
Lemma candidate_594: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_595: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_596: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_597: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_598: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_599: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend lf6 (rev x)).
Lemma candidate_600: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva lf6 (rev x)).
Lemma candidate_601: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_602: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_603: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x Nil).
Lemma candidate_604: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev x).
Lemma candidate_605: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6))   (lfappend (rev x) (Cons n (rev lf6))).
Lemma candidate_606: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_607: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (qreva x (Cons n (rev lf6))).
Lemma candidate_608: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_609: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (qreva x (Cons n Nil)).
Lemma candidate_610: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_611: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (qreva lf6 x)).
Lemma candidate_612: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (lfappend lf6 (Cons n x)).
Lemma candidate_613: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (qreva lf6 (Cons n x)).
Lemma candidate_614: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (lfappend x lf6)).
Lemma candidate_615: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (lfappend x Nil)).
Lemma candidate_616: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_617: forall (lf5 : lst), @eq lst (qreva (lfappend (qreva lf5 Nil) Nil) Nil) lf5.
Lemma candidate_618: forall (lf5 : lst), @eq lst (qreva (rev (rev (rev lf5))) Nil) lf5.
Lemma candidate_619: forall (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 Nil)) Nil) lf5.
Lemma candidate_620: forall (lf5 : lst), @eq lst (qreva (lfappend (rev lf5) Nil) Nil) lf5.
Lemma candidate_621: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_622: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_623: forall (lf5 : lst), @eq lst (qreva (qreva lf5 Nil) Nil) lf5.
Lemma candidate_624: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_625: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_626: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_627: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_628: forall (lf5 : lst), @eq lst (lf5) lf5.
Lemma candidate_629: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend (qreva x (Nil)) (Cons n (Nil))) (Nil)) lf5.
Lemma candidate_630: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_631: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_632: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_633: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_634: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_635: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_636: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_637: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_638: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_639: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_640: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_641: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_642: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_643: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (qreva (rev x) Nil)).
Lemma candidate_644: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (rev (qreva x (Cons n Nil))).
Lemma candidate_645: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_646: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (rev (rev x))).
Lemma candidate_647: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (lfappend x Nil)).
Lemma candidate_648: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_649: @eq lst Nil (Nil).
Lemma candidate_650: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (qreva lf6 (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_651: forall (n : natural) (x : lst) (lf6 : lst), @eq lst   (qreva (lfappend (qreva x lf6) (lfappend (rev (rev lf6)) (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_652: forall (n : natural) (x : lst) (lf6 : lst), @eq lst   (qreva (lfappend (qreva x lf6) (lfappend (rev lf6) (Cons n Nil))) lf6)   (Cons n x).
Lemma candidate_653: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_654: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_655: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_656: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (lfappend lf6 (rev x)) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_657: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva lf6 (rev x)) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_658: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x (rev lf6)) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_659: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_660: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_661: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_662: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (qreva lf6 x)).
Lemma candidate_663: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (lfappend lf6 (Cons n x)).
Lemma candidate_664: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (qreva lf6 (Cons n x)).
Lemma candidate_665: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (lfappend x lf6)).
Lemma candidate_666: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (lfappend x Nil)).
Lemma candidate_667: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_668: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_669: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_670: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n (rev lf6))) lf6) (Cons n x).
Lemma candidate_671: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_672: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (qreva x (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_673: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_674: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_675: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_676: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_677: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_678: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_679: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_680: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (qreva lf6 (Cons n Nil)).
Lemma candidate_681: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_682: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (lfappend (rev lf6) (Cons n Nil)).
Lemma candidate_683: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n (rev lf6)).
Lemma candidate_684: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n lf6).
Lemma candidate_685: forall (n : natural) (lf6 : lst), @eq lst (Cons n lf6) (Cons n Nil).
Lemma candidate_686: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend lf6 (rev x)).
Lemma candidate_687: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva lf6 (rev x)).
Lemma candidate_688: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_689: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_690: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x Nil).
Lemma candidate_691: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev x).
Lemma candidate_692: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_693: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_694: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_695: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_696: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_697: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_698: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6))   (lfappend (rev x) (Cons n (rev lf6))).
Lemma candidate_699: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (lfappend (rev x) (Cons n lf6)).
Lemma candidate_700: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (qreva x (Cons n (rev lf6))).
Lemma candidate_701: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (qreva x (Cons n lf6)).
Lemma candidate_702: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (qreva x (Cons n Nil)).
Lemma candidate_703: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva x lf6) (Cons n lf6)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_704: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (qreva lf6 x)).
Lemma candidate_705: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (lfappend lf6 (Cons n x)).
Lemma candidate_706: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (qreva lf6 (Cons n x)).
Lemma candidate_707: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (lfappend x lf6)).
Lemma candidate_708: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6)   (Cons n (lfappend x Nil)).
Lemma candidate_709: forall (n : natural) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1121 seconds
Duplicates removed: 473
Filtered by Quickchick: 135
Filtered by script: 19
Remaining: 82

Lemmas: 
Lemma candidate_19: forall (lf5 : lst), @eq lst (rev (rev lf5)) lf5.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_469: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_20: forall (lf5 : lst), @eq lst (lfappend lf5 Nil) lf5.
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_40: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev lf2).
Lemma candidate_18: forall (lf5 : lst), @eq lst (qreva (rev lf5) Nil) lf5.
Lemma candidate_17: forall (lf5 : lst), @eq lst (rev (qreva lf5 Nil)) lf5.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_465: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_95: forall (n : natural) (x : lst), @eq lst (Cons n (rev (rev x))) (Cons n x).
Lemma candidate_13: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_467: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_466: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_96: forall (n : natural) (x : lst), @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_14: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_73: forall (lf5 : lst), @eq lst (qreva (rev (rev (rev lf5))) Nil) lf5.
Lemma candidate_36: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (rev (rev lf2))).
Lemma candidate_93: forall (n : natural) (x : lst), @eq lst (rev (qreva x (Cons n Nil))) (Cons n x).
Lemma candidate_92: forall (n : natural) (x : lst), @eq lst (Cons n (qreva (rev x) Nil)) (Cons n x).
Lemma candidate_11: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_10: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_75: forall (lf5 : lst), @eq lst (qreva (lfappend (rev lf5) Nil) Nil) lf5.
Lemma candidate_74: forall (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 Nil)) Nil) lf5.
Lemma candidate_63: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva (rev lf3) lf4).
Lemma candidate_38: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (rev lf2) Nil).
Lemma candidate_37: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (rev (lfappend lf2 Nil)).
Lemma candidate_482: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (qreva x lf4).
Lemma candidate_464: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_72: forall (lf5 : lst), @eq lst (qreva (lfappend (qreva lf5 Nil) Nil) Nil) lf5.
Lemma candidate_62: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (qreva lf4 (rev lf3))).
Lemma candidate_35: forall (lf2 : lst), @eq lst (qreva lf2 Nil) (lfappend (qreva lf2 Nil) Nil).
Lemma candidate_479: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (rev (qreva lf4 x)).
Lemma candidate_94: forall (n : natural) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n Nil))) (Cons n x).
Lemma candidate_12: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_480: forall (lf4 : lst) (x : lst), @eq lst (lfappend (qreva x Nil) lf4) (lfappend (rev x) lf4).
Lemma candidate_84: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (qreva lf4 (rev lf3)).
Lemma candidate_475: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (qreva lf4 x).
Lemma candidate_189: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev x) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_82: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (rev (lfappend lf3 lf4)).
Lemma candidate_271: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (rev lf3)).
Lemma candidate_262: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_240: forall (lf3 : lst) (n : natural) (lf6 : lst), @eq lst (lfappend lf3 (Cons n lf6)) (qreva (rev lf3) (Cons n lf6)).
Lemma candidate_634: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_471: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (rev (qreva x lf4)).
Lemma candidate_184: forall (n : natural) (x : lst), @eq lst (qreva (qreva (lfappend x Nil) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_79: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva (lfappend lf3 lf4) Nil) (lfappend (rev lf4) (rev lf3)).
Lemma candidate_472: forall (lf4 : lst) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) lf4) Nil) (lfappend (rev lf4) x).
Lemma candidate_270: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n (qreva lf3 Nil)).
Lemma candidate_260: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_186: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (rev (rev x))) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_289: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (rev lf3)) (Cons n x).
Lemma candidate_264: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_635: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_187: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (rev (lfappend x Nil)) (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_259: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_285: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (qreva lf3 lf6)) (Cons n x).
Lemma candidate_646: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (rev (rev x))).
Lemma candidate_288: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (lfappend x Nil)) (Cons n x).
Lemma candidate_286: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (Cons n (lfappend x lf6)) (Cons n x).
Lemma candidate_269: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (Cons n (lfappend (rev lf3) Nil)).
Lemma candidate_267: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend lf3 (Cons n Nil))).
Lemma candidate_261: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_647: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (lfappend x Nil)).
Lemma candidate_630: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_266: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (qreva (rev lf3) (Cons n Nil))).
Lemma candidate_644: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (rev (qreva x (Cons n Nil))).
Lemma candidate_643: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (Cons n (qreva (rev x) Nil)).
Lemma candidate_632: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_633: forall (n : natural) (x : lst), @eq lst (lfappend (qreva x Nil) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_268: forall (lf3 : lst) (n : natural), @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil)   (rev (lfappend (rev (rev lf3)) (Cons n Nil))).
Lemma candidate_278: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_2: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq lst (qreva lf3 Nil) x, @eq lst (qreva (lfappend lf3 (Cons n Nil)) Nil) (Cons n x).
Lemma candidate_645: forall (n : natural) (x : lst), @eq lst (qreva (lfappend (qreva x Nil) (Cons n Nil)) Nil)   (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_302: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend (rev x) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_301: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend (rev (rev lf3)) (Cons n Nil)) lf6) (Cons n x).
Lemma candidate_281: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 Nil)).
Lemma candidate_279: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (qreva lf3 lf6)).
Lemma candidate_280: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (Cons n lf6)) lf6) (Cons n (lfappend x lf6)).
Lemma candidate_3: forall (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (qreva x lf6) lf6) x, @eq lst (qreva (lfappend (qreva x lf6) (Cons n lf6)) lf6) (Cons n x).
Lemma candidate_274: forall (lf3 : lst) (n : natural) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf3 lf6) x, @eq lst (qreva (lfappend lf3 (lfappend (rev (rev lf6)) (Cons n Nil))) lf6)   (Cons n x).
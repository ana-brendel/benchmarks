File Information
- File name: goal82
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal82_theorem0_76_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal82_theorem0_76_append_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst, @eq lst (qreva (qreva x0 (rev y0)) Nil) (lfappend y0 x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith. 

Proof Context
* Goal State: @eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (qreva (qreva x (rev y0)) Nil) (lfappend y0 x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
x : lst
qreva x (rev _UNBOUND_REL_1) : lst
y : lst
lfappend (lfappend y (Cons n Nil)) x : lst
@eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y (Cons n x)) : Prop
forall y0 : lst, @eq lst (qreva (qreva x (rev y0)) Nil) (lfappend y0 x) : Prop
lfappend _UNBOUND_REL_1 x : lst
lfappend y (Cons n x) : lst
lfappend y (Cons n Nil) : lst
rev _UNBOUND_REL_1 : lst
Cons n x : lst
lst : Set
@eq lst (qreva (qreva x (rev _UNBOUND_REL_1)) Nil)
  (lfappend _UNBOUND_REL_1 x) : Prop
Cons n Nil : lst
natural : Set
n : natural
Nil : lst
qreva (qreva x (rev _UNBOUND_REL_1)) Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lfappend y (Cons n x)
lf1 : lst = lfappend (lfappend y (Cons n Nil)) x
lf4 : lst = Cons n Nil
lf5 : lst = Cons n x
lf2 : lst = lfappend y (Cons n Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend y lf4) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend y (Cons n lf6)) x) lf3.
Lemma conj28: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x) lf3.
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj37: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend y lf5).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend y lf4) x) (lfappend y lf5).
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend y (Cons n x)).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y lf4) x) (lfappend y (Cons n x)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y lf5).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y lf5).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y (Cons n x)).
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 137 seconds
Valid:
Lemma conj64: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y (Cons n x)).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y (Cons n x)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y lf5).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y lf5).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y lf4) x) (lfappend y (Cons n x)).
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend y (Cons n x)).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend y lf4) x) (lfappend y lf5).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend y lf5).
Lemma conj37: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj28: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend y (Cons n lf6)) x) lf3.
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend y lf4) x) lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 158 seconds
Generalizations:
Lemma conj63_imp: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : forall y0 : lst, @eq lst (qreva (qreva x (rev y0)) lf6) (lfappend y0 x),
@eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y (Cons n x)).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y (Cons n x)).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n Nil)) x) (lfappend y lf5).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y (Cons n lf6)) x) (lfappend y lf5).
Lemma conj55: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend y lf4) x) (lfappend y (Cons n x)).
Lemma conj53: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend lf2 x) (lfappend y (Cons n x)).
Lemma conj51: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (lfappend y lf4) x) (lfappend y lf5).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (lfappend lf2 x) (lfappend y lf5).
Lemma conj37: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj28: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend y (Cons n Nil)) x) lf3.
Lemma conj27: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend (lfappend y (Cons n lf6)) x) lf3.
Lemma conj19: forall (x : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend (lfappend y lf4) x) lf3.
Lemma conj17: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend lf2 x) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
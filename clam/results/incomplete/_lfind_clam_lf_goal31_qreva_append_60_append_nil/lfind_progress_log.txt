File Information
- File name: goal31
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal31_qreva_append_60_append_nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_append_60_append_nil
- Namespace: adtind
- Proof name: qreva_lfappend
- Theorem: Theorem qreva_lfappend: forall x y0 : lst,
@eq lst (qreva (lfappend x y0) Nil) (lfappend (qreva y0 Nil) (qreva x Nil)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil)

* Hypothesis:
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
y : lst

* Terms:
@eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil) : Prop
lfappend (qreva y Nil) Nil : lst
qreva y Nil : lst
lst : Set
y : lst
Nil : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Nil
lf1 : lst = lfappend (qreva y Nil) Nil
lf2 : lst = qreva y Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf3) lf1.
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf2 lf3).
Lemma conj4: forall (y : lst) (lf3 : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf3) lf3).
Lemma conj6: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj7: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma conj8: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).


<---VALIDITY CHECKS--->
Time elapsed: 16 seconds
Valid:
Lemma conj8: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma conj7: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).

Invalid:
Lemma conj6: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj4: forall (y : lst) (lf3 : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf3) lf3).
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf2 lf3).
Lemma conj2: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 16 seconds
Generalizations:
Lemma conj6: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj4: forall (y : lst) (lf3 : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf3) lf3).
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf2 lf3).
Lemma conj2: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 25 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf1 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf3) lf1.
Lemma conj3: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf2 lf3).
Lemma conj4: forall (y : lst) (lf3 : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf3) lf3).
Lemma conj6: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.


<---CREATE SKETCHES--->
Time elapsed: 25 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst (##hole##) lf1
Sketch conj2_term_sketch0 : @eq lst (qreva y lf3) (##hole##)
Sketch conj3_sketch0 : @eq lst lf2 (##hole##)
Sketch conj3_term_sketch0 : @eq lst (lfappend lf2 lf3) (##hole##)
Sketch conj4_sketch0 : @eq lst (qreva y lf3) (##hole##)
Sketch conj4_sketch1 : @eq lst (##hole##) (lfappend (##hole##) lf3)
Sketch conj4_term_sketch0 : @eq lst (lfappend (qreva y lf3) lf3) (##hole##)
Sketch conj4_term_sketch1 : @eq lst (qreva y lf3) (##hole##)
Sketch conj6_sketch0 : @eq lst (##hole##) lf1
Sketch conj6_sketch1 : @eq lst (qreva y (##hole##)) lf1
Sketch conj6_term_sketch0 : @eq lst (qreva y Nil) (##hole##)
Sketch conj6_term_sketch1 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 34 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj6_sketch1 --> Problem  synth_6
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_2
Sketch conj6_term_sketch1 --> Problem  synth_8
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj4_sketch0 --> Problem  synth_2
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj6_term_sketch0 --> Problem  synth_7
Sketch conj4_sketch1 --> Problem  synth_5


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 80 seconds

Problem: synth_8
 Nil

Problem: synth_3
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_6
 Nil

Problem: synth_7
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_5

Problem: synth_4
 rev (rev lf2)
 lfappend lf2 lf3
 lfappend lf3 lf2
 qreva lf3 lf2
 lfappend lf2 Nil
 lf2

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_2
 qreva y (rev lf3)
 lfappend lf3 (rev y)
 qreva lf3 (rev y)
 qreva y lf3
 qreva y Nil
 rev y

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 80 seconds
Lemmas:
Lemma candidate_1: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_2: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_8: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_9: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y (rev lf3)).
Lemma candidate_10: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend lf3 (rev y)).
Lemma candidate_11: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva lf3 (rev y)).
Lemma candidate_12: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y lf3).
Lemma candidate_13: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y Nil).
Lemma candidate_14: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (rev y).
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_19: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_20: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_21: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf3) (rev (rev lf2)).
Lemma candidate_22: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf3) (lfappend lf2 lf3).
Lemma candidate_23: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf3) (lfappend lf3 lf2).
Lemma candidate_24: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf3) (qreva lf3 lf2).
Lemma candidate_25: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf3) (lfappend lf2 Nil).
Lemma candidate_26: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf2 lf3) (lf2).
Lemma candidate_27: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y (rev lf3)).
Lemma candidate_28: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend lf3 (rev y)).
Lemma candidate_29: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva lf3 (rev y)).
Lemma candidate_30: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y lf3).
Lemma candidate_31: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y Nil).
Lemma candidate_32: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (rev y).
Lemma candidate_33: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y lf3) lf3) (qreva y (rev lf3)).
Lemma candidate_34: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y lf3) lf3) (lfappend lf3 (rev y)).
Lemma candidate_35: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y lf3) lf3) (qreva lf3 (rev y)).
Lemma candidate_36: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y lf3) lf3) (qreva y lf3).
Lemma candidate_37: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y lf3) lf3) (qreva y Nil).
Lemma candidate_38: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y lf3) lf3) (rev y).
Lemma candidate_39: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y (rev lf3)).
Lemma candidate_40: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend lf3 (rev y)).
Lemma candidate_41: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva lf3 (rev y)).
Lemma candidate_42: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y lf3).
Lemma candidate_43: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (qreva y Nil).
Lemma candidate_44: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (rev y).
Lemma candidate_45: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_46: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_47: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_48: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_49: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_50: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_51: forall (y : lst) (lf1 : lst), @eq lst (qreva y (Nil)) lf1.
Lemma candidate_52: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_53: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_54: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_55: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_56: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_57: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_58: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 149 seconds
Duplicates removed: 21
Filtered by Quickchick: 17
Filtered by script: 6
Remaining: 14

Lemmas: 
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_57: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_7: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_2: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_53: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_55: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_54: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
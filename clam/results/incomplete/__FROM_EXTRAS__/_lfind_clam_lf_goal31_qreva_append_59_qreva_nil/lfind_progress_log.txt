File Information
- File name: goal31
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal31_qreva_append_59_qreva_nil
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_append_59_qreva_nil
- Namespace: adtind
- Proof name: qreva_lfappend
- Theorem: Theorem qreva_lfappend: forall x0 y0 : lst,
@eq lst (qreva (lfappend x0 y0) Nil) (lfappend (qreva y0 Nil) (qreva x0 Nil)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil)))

* Hypothesis:
IHx : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) (qreva x Nil))
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lfappend (qreva y Nil) (qreva x Nil) : lst
@eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) (qreva x Nil)) : Prop
x : lst
@eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))) : Prop
qreva y Nil : lst
y : lst
lfappend (qreva y Nil) (qreva x (Cons n Nil)) : lst
qreva (lfappend x y) Nil : lst
qreva (lfappend x y) (Cons n Nil) : lst
qreva x (Cons n Nil) : lst
qreva x Nil : lst
lst : Set
Cons n Nil : lst
natural : Set
lfappend x y : lst
n : natural
Nil : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = qreva x (Cons n Nil)
lf7 : lst = Nil
lf1 : lst = lfappend (qreva y Nil) (qreva x (Cons n Nil))
lf4 : lst = lfappend x y
lf5 : lst = qreva y Nil
lf2 : lst = qreva (lfappend x y) (Cons n Nil)
lf6 : lst = Cons n Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf6 : lst) (lf4 : lst) (lf1 : lst), @eq lst (qreva lf4 lf6) lf1.
Lemma conj4: forall (lf4 : lst) (lf1 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) lf1.
Lemma conj11: forall (lf6 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) lf1.
Lemma conj12: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7)) lf1.
Lemma conj17: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf5 lf3).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 lf3).
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj21: forall (lf2 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y lf7) lf3).
Lemma conj23: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) lf3).
Lemma conj24: forall (lf4 : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 lf3).
Lemma conj28: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj31: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) lf3).
Lemma conj32: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj36: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) lf1.
Lemma conj44: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil)) lf1.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj53: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y Nil) lf3).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) lf3).
Lemma conj56: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) lf3).
Lemma conj64: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend lf5 (qreva x lf6)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj96: forall (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj118: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst lf2 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj120: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj127: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).


<---VALIDITY CHECKS--->
Time elapsed: 93 seconds
Valid:
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj127: forall (lf6 : lst) (x : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).

Invalid:
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj120: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj118: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst lf2 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj96: forall (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend lf5 (qreva x lf6)).
Lemma conj64: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) lf3).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj56: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) lf3).
Lemma conj53: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y Nil) lf3).
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj44: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil)) lf1.
Lemma conj36: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) lf1.
Lemma conj32: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj31: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) lf3).
Lemma conj28: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 lf3).
Lemma conj24: forall (lf4 : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj23: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) lf3).
Lemma conj21: forall (lf2 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y lf7) lf3).
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 lf3).
Lemma conj17: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf5 lf3).
Lemma conj12: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7)) lf1.
Lemma conj11: forall (lf6 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) lf1.
Lemma conj4: forall (lf4 : lst) (lf1 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) lf1.
Lemma conj3: forall (lf6 : lst) (lf4 : lst) (lf1 : lst), @eq lst (qreva lf4 lf6) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 164 seconds
Generalizations:
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj124_imp: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj120: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj120_imp: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)),
@eq lst (qreva lf4 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj119_imp: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)),
@eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj118: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst lf2 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj116_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj96: forall (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj96_imp: forall (x : lst) (y : lst) (lf7 : lst) (n : natural), forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj95_imp: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj92_imp: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) lf7) (lfappend lf5 (qreva x lf7)),
@eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj91_imp: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj88_imp: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n : natural), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva lf4 (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj87_imp: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj85_imp: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj84_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (n : natural), forall _ : @eq lst (qreva lf4 lf7) (lfappend lf5 (qreva x lf7)),
@eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj83_imp: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend lf5 (qreva x lf6)).
Lemma conj64: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) lf3).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj56: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) lf3).
Lemma conj53: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y Nil) lf3).
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj44: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil)) lf1.
Lemma conj36: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) lf1.
Lemma conj32: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj31: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) lf3).
Lemma conj28: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 lf3).
Lemma conj24: forall (lf4 : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj23: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) lf3).
Lemma conj21: forall (lf2 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y lf7) lf3).
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 lf3).
Lemma conj17: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf5 lf3).
Lemma conj12: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7)) lf1.
Lemma conj11: forall (lf6 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) lf1.
Lemma conj4: forall (lf4 : lst) (lf1 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) lf1.
Lemma conj3: forall (lf6 : lst) (lf4 : lst) (lf1 : lst), @eq lst (qreva lf4 lf6) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 261 seconds
Valid:
Lemma conj83_imp: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj84_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (n : natural), forall _ : @eq lst (qreva lf4 lf7) (lfappend lf5 (qreva x lf7)),
@eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj87_imp: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj88_imp: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n : natural), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva lf4 (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj91_imp: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj92_imp: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) lf7) (lfappend lf5 (qreva x lf7)),
@eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj95_imp: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj96_imp: forall (x : lst) (y : lst) (lf7 : lst) (n : natural), forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj116_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj119_imp: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)),
@eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj120_imp: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)),
@eq lst (qreva lf4 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj124_imp: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)),
@eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf6 : lst) (lf4 : lst) (lf1 : lst), @eq lst (qreva lf4 lf6) lf1.
Lemma conj4: forall (lf4 : lst) (lf1 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) lf1.
Lemma conj11: forall (lf6 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) lf1.
Lemma conj12: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7)) lf1.
Lemma conj17: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf5 lf3).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 lf3).
Lemma conj20: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj21: forall (lf2 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y lf7) lf3).
Lemma conj23: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) lf3).
Lemma conj24: forall (lf4 : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 lf3).
Lemma conj28: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend lf5 lf3).
Lemma conj31: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) lf3).
Lemma conj32: forall (x : lst) (y : lst) (lf7 : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma conj36: forall (lf4 : lst) (lf1 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) lf1.
Lemma conj44: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil)) lf1.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj53: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (lfappend (qreva y Nil) lf3).
Lemma conj55: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) lf3).
Lemma conj56: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj60: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend lf5 lf3).
Lemma conj63: forall (lf6 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) lf3).
Lemma conj64: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (x : lst), @eq lst lf2 (lfappend lf5 (qreva x lf6)).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj85_imp: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj86: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst lf2 (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj88: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva lf4 (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma conj92: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend lf5 (qreva x (Cons n lf7))).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma conj96: forall (x : lst) (y : lst) (lf7 : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst lf2 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst lf2 (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj118: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst lf2 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma conj120: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (qreva lf4 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (qreva (lfappend x y) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).


<---CREATE SKETCHES--->
Time elapsed: 262 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst (##hole##) lf1
Sketch conj3_term_sketch0 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj4_sketch0 : @eq lst (##hole##) lf1
Sketch conj4_sketch1 : @eq lst (qreva lf4 (##hole##)) lf1
Sketch conj4_term_sketch0 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj4_term_sketch1 : @eq lst (Cons n lf7) (##hole##)
Sketch conj11_sketch0 : @eq lst (##hole##) lf1
Sketch conj11_sketch1 : @eq lst (qreva (##hole##) lf6) lf1
Sketch conj11_term_sketch0 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj11_term_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj12_sketch0 : @eq lst (##hole##) lf1
Sketch conj12_sketch1 : @eq lst (qreva (##hole##) (Cons n lf7)) lf1
Sketch conj12_sketch2 : @eq lst (qreva (lfappend x y) (##hole##)) lf1
Sketch conj12_term_sketch0 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj12_term_sketch1 : @eq lst (lfappend x y) (##hole##)
Sketch conj12_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj17_sketch0 : @eq lst lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj19_sketch0 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj19_sketch1 : @eq lst (##hole##) (lfappend lf5 lf3)
Sketch conj19_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj20_sketch0 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj20_sketch1 : @eq lst (##hole##) (lfappend lf5 lf3)
Sketch conj20_sketch2 : @eq lst (qreva lf4 (##hole##)) (lfappend lf5 lf3)
Sketch conj20_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj21_sketch0 : @eq lst lf2 (lfappend (##hole##) lf3)
Sketch conj21_sketch1 : @eq lst lf2 (##hole##)
Sketch conj21_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (lfappend (qreva y lf7) lf3) (##hole##)
Sketch conj23_sketch0 : @eq lst (qreva lf4 lf6) (lfappend (##hole##) lf3)
Sketch conj23_sketch1 : @eq lst (##hole##) (lfappend (qreva y lf7) lf3)
Sketch conj23_sketch2 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj23_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (lfappend (qreva y lf7) lf3) (##hole##)
Sketch conj24_sketch0 : @eq lst (qreva lf4 (Cons n lf7)) (lfappend (##hole##) lf3)
Sketch conj24_sketch1 : @eq lst (##hole##) (lfappend (qreva y lf7) lf3)
Sketch conj24_sketch2 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj24_sketch3 : @eq lst (qreva lf4 (##hole##)) (lfappend (qreva y lf7) lf3)
Sketch conj24_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj24_term_sketch2 : @eq lst (lfappend (qreva y lf7) lf3) (##hole##)
Sketch conj24_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj27_sketch0 : @eq lst (##hole##) (lfappend lf5 lf3)
Sketch conj27_sketch1 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj27_sketch2 : @eq lst (qreva (##hole##) lf6) (lfappend lf5 lf3)
Sketch conj27_term_sketch0 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj28_sketch0 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj28_sketch1 : @eq lst (##hole##) (lfappend lf5 lf3)
Sketch conj28_sketch2 : @eq lst (qreva (##hole##) (Cons n lf7)) (lfappend lf5 lf3)
Sketch conj28_sketch3 : @eq lst (qreva (lfappend x y) (##hole##)) (lfappend lf5 lf3)
Sketch conj28_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj31_sketch0 : @eq lst (##hole##) (lfappend (qreva y lf7) lf3)
Sketch conj31_sketch1 : @eq lst (qreva (lfappend x y) lf6) (lfappend (##hole##) lf3)
Sketch conj31_sketch2 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj31_sketch3 : @eq lst (qreva (##hole##) lf6) (lfappend (qreva y lf7) lf3)
Sketch conj31_term_sketch0 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (qreva y lf7) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (lfappend (qreva y lf7) lf3) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj32_sketch0 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (##hole##) lf3)
Sketch conj32_sketch1 : @eq lst (##hole##) (lfappend (qreva y lf7) lf3)
Sketch conj32_sketch2 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj32_sketch3 : @eq lst (qreva (##hole##) (Cons n lf7)) (lfappend (qreva y lf7) lf3)
Sketch conj32_sketch4 : @eq lst (qreva (lfappend x y) (##hole##)) (lfappend (qreva y lf7) lf3)
Sketch conj32_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj32_term_sketch1 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj32_term_sketch2 : @eq lst (lfappend (qreva y lf7) lf3) (##hole##)
Sketch conj32_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj32_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj36_sketch0 : @eq lst (qreva lf4 (##hole##)) lf1
Sketch conj36_sketch1 : @eq lst (qreva lf4 (Cons n (##hole##))) lf1
Sketch conj36_sketch2 : @eq lst (##hole##) lf1
Sketch conj36_term_sketch0 : @eq lst (Cons n Nil) (##hole##)
Sketch conj36_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj36_term_sketch2 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj44_sketch0 : @eq lst (##hole##) lf1
Sketch conj44_sketch1 : @eq lst (qreva (lfappend x y) (##hole##)) lf1
Sketch conj44_sketch2 : @eq lst (qreva (##hole##) (Cons n Nil)) lf1
Sketch conj44_sketch3 : @eq lst (qreva (lfappend x y) (Cons n (##hole##))) lf1
Sketch conj44_term_sketch0 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj44_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj44_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj44_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj52_sketch0 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj52_sketch1 : @eq lst (qreva lf4 (##hole##)) (lfappend lf5 lf3)
Sketch conj52_sketch2 : @eq lst (qreva lf4 (Cons n (##hole##))) (lfappend lf5 lf3)
Sketch conj52_sketch3 : @eq lst (##hole##) (lfappend lf5 lf3)
Sketch conj52_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj52_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj52_term_sketch3 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj53_sketch0 : @eq lst lf2 (lfappend (##hole##) lf3)
Sketch conj53_sketch1 : @eq lst lf2 (##hole##)
Sketch conj53_sketch2 : @eq lst lf2 (lfappend (qreva y (##hole##)) lf3)
Sketch conj53_term_sketch0 : @eq lst (qreva y Nil) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (lfappend (qreva y Nil) lf3) (##hole##)
Sketch conj53_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj55_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf3)
Sketch conj55_sketch1 : @eq lst (qreva lf4 lf6) (lfappend (##hole##) lf3)
Sketch conj55_sketch2 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj55_sketch3 : @eq lst (qreva lf4 lf6) (lfappend (qreva y (##hole##)) lf3)
Sketch conj55_term_sketch0 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (lfappend (qreva y Nil) lf3) (##hole##)
Sketch conj55_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj56_sketch0 : @eq lst (qreva lf4 (Cons n Nil)) (lfappend (##hole##) lf3)
Sketch conj56_sketch1 : @eq lst (qreva lf4 (##hole##)) (lfappend (qreva y Nil) lf3)
Sketch conj56_sketch2 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj56_sketch3 : @eq lst (qreva lf4 (Cons n (##hole##))) (lfappend (qreva y (##hole##)) lf3)
Sketch conj56_sketch4 : @eq lst (##hole##) (lfappend (qreva y Nil) lf3)
Sketch conj56_term_sketch0 : @eq lst (qreva y Nil) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj56_term_sketch2 : @eq lst (lfappend (qreva y Nil) lf3) (##hole##)
Sketch conj56_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj56_term_sketch4 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj60_sketch0 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj60_sketch1 : @eq lst (##hole##) (lfappend lf5 lf3)
Sketch conj60_sketch2 : @eq lst (qreva (lfappend x y) (##hole##)) (lfappend lf5 lf3)
Sketch conj60_sketch3 : @eq lst (qreva (##hole##) (Cons n Nil)) (lfappend lf5 lf3)
Sketch conj60_sketch4 : @eq lst (qreva (lfappend x y) (Cons n (##hole##))) (lfappend lf5 lf3)
Sketch conj60_term_sketch0 : @eq lst (lfappend lf5 lf3) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj63_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf3)
Sketch conj63_sketch1 : @eq lst (qreva (lfappend x y) lf6) (lfappend (##hole##) lf3)
Sketch conj63_sketch2 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj63_sketch3 : @eq lst (qreva (##hole##) lf6) (lfappend (qreva y Nil) lf3)
Sketch conj63_sketch4 : @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (##hole##)) lf3)
Sketch conj63_term_sketch0 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (lfappend (qreva y Nil) lf3) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj63_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf3)
Sketch conj64_sketch1 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (##hole##) lf3)
Sketch conj64_sketch2 : @eq lst (qreva (lfappend x y) (##hole##)) (lfappend (qreva y Nil) lf3)
Sketch conj64_sketch3 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj64_sketch4 : @eq lst (qreva (##hole##) (Cons n Nil)) (lfappend (qreva y Nil) lf3)
Sketch conj64_sketch5 : @eq lst (qreva (lfappend x y) (Cons n (##hole##)))
  (lfappend (qreva y (##hole##)) lf3)
Sketch conj64_term_sketch0 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj64_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj64_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj64_term_sketch3 : @eq lst (lfappend (qreva y Nil) lf3) (##hole##)
Sketch conj64_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj64_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj81_sketch0 : @eq lst lf2 (lfappend lf5 (##hole##))
Sketch conj81_sketch1 : @eq lst lf2 (##hole##)
Sketch conj81_term_sketch0 : @eq lst (qreva x lf6) (##hole##)
Sketch conj81_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf6)) (##hole##)
Sketch conj82_sketch0 : @eq lst lf2 (##hole##)
Sketch conj82_sketch1 : @eq lst lf2 (lfappend lf5 (##hole##))
Sketch conj82_sketch2 : @eq lst lf2 (lfappend lf5 (qreva x (##hole##)))
Sketch conj82_term_sketch0 : @eq lst (lfappend lf5 (qreva x (Cons n lf7))) (##hole##)
Sketch conj82_term_sketch1 : @eq lst (qreva x (Cons n lf7)) (##hole##)
Sketch conj82_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj83_sketch0 : @eq lst (qreva lf4 lf6) (lfappend lf5 (##hole##))
Sketch conj83_sketch1 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj83_sketch2 : @eq lst (##hole##) (lfappend lf5 (qreva x lf6))
Sketch conj83_term_sketch0 : @eq lst (qreva x lf6) (##hole##)
Sketch conj83_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf6)) (##hole##)
Sketch conj83_term_sketch2 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj84_sketch0 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n lf7)))
Sketch conj84_sketch1 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj84_sketch2 : @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (##hole##))
Sketch conj84_sketch3 : @eq lst (qreva lf4 (##hole##)) (lfappend lf5 (qreva x (##hole##)))
Sketch conj84_term_sketch0 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj84_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n lf7))) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (qreva x (Cons n lf7)) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj85_imp_sketch0 : forall _ : @eq lst (qreva (lfappend x y) lf7) (##hole##),
@eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj85_imp_sketch1 : forall
  _ : @eq lst (qreva (lfappend x y) lf7) (lfappend (##hole##) (qreva x lf7)),
@eq lst lf2 (lfappend (##hole##) (qreva x lf6))
Sketch conj85_imp_sketch2 : forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (##hole##)
Sketch conj85_imp_sketch3 : forall _ : @eq lst (##hole##) (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj85_imp_sketch4 : forall
  _ : @eq lst (qreva (lfappend x y) lf7)
        (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst lf2 (lfappend (qreva y lf7) (##hole##))
Sketch conj85_imp_sketch5 : forall
  _ : @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y lf7) (##hole##)),
@eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj85_imp_sketch6 : forall
  _ : @eq lst (qreva (##hole##) lf7) (lfappend (qreva y lf7) (qreva x lf7)),
@eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj85_imp_term_sketch0 : @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (##hole##)
Sketch conj85_imp_term_sketch1 : @eq lst (qreva y lf7) (##hole##)
Sketch conj85_imp_term_sketch2 : @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (##hole##)
Sketch conj85_imp_term_sketch3 : @eq lst (qreva (lfappend x y) lf7) (##hole##)
Sketch conj85_imp_term_sketch4 : @eq lst (qreva x lf6) (##hole##)
Sketch conj85_imp_term_sketch5 : @eq lst (qreva x lf7) (##hole##)
Sketch conj85_imp_term_sketch6 : @eq lst (lfappend x y) (##hole##)
Sketch conj85_sketch0 : @eq lst lf2 (lfappend (##hole##) (qreva x lf6))
Sketch conj85_sketch1 : @eq lst lf2 (##hole##)
Sketch conj85_sketch2 : @eq lst lf2 (lfappend (qreva y lf7) (##hole##))
Sketch conj85_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (qreva x lf6) (##hole##)
Sketch conj86_sketch0 : @eq lst lf2 (lfappend (##hole##) (qreva x (Cons n lf7)))
Sketch conj86_sketch1 : @eq lst lf2 (lfappend (qreva y lf7) (##hole##))
Sketch conj86_sketch2 : @eq lst lf2 (##hole##)
Sketch conj86_sketch3 : @eq lst lf2 (lfappend (qreva y lf7) (qreva x (##hole##)))
Sketch conj86_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj86_term_sketch1 : @eq lst (qreva x (Cons n lf7)) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7))) (##hole##)
Sketch conj86_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj87_sketch0 : @eq lst (qreva lf4 lf6) (lfappend (##hole##) (qreva x lf6))
Sketch conj87_sketch1 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj87_sketch2 : @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (##hole##))
Sketch conj87_sketch3 : @eq lst (##hole##) (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj87_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj87_term_sketch1 : @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (qreva x lf6) (##hole##)
Sketch conj87_term_sketch3 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj88_sketch0 : @eq lst (qreva lf4 (Cons n lf7)) (lfappend (##hole##) (qreva x (Cons n lf7)))
Sketch conj88_sketch1 : @eq lst (##hole##) (lfappend (qreva y lf7) (qreva x (Cons n lf7)))
Sketch conj88_sketch2 : @eq lst (qreva lf4 (Cons n lf7)) (lfappend (qreva y lf7) (##hole##))
Sketch conj88_sketch3 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj88_sketch4 : @eq lst (qreva lf4 (##hole##)) (lfappend (qreva y lf7) (qreva x (##hole##)))
Sketch conj88_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj88_term_sketch1 : @eq lst (qreva lf4 (Cons n lf7)) (##hole##)
Sketch conj88_term_sketch2 : @eq lst (qreva x (Cons n lf7)) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7))) (##hole##)
Sketch conj88_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj91_sketch0 : @eq lst (##hole##) (lfappend lf5 (qreva x lf6))
Sketch conj91_sketch1 : @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (##hole##))
Sketch conj91_sketch2 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj91_sketch3 : @eq lst (qreva (##hole##) lf6) (lfappend lf5 (qreva x lf6))
Sketch conj91_term_sketch0 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj91_term_sketch1 : @eq lst (qreva x lf6) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (lfappend lf5 (qreva x lf6)) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj92_sketch0 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj92_sketch1 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend lf5 (##hole##))
Sketch conj92_sketch2 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n lf7)))
Sketch conj92_sketch3 : @eq lst (qreva (##hole##) (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7)))
Sketch conj92_sketch4 : @eq lst (qreva (lfappend x y) (##hole##)) (lfappend lf5 (qreva x (##hole##)))
Sketch conj92_term_sketch0 : @eq lst (lfappend lf5 (qreva x (Cons n lf7))) (##hole##)
Sketch conj92_term_sketch1 : @eq lst (qreva x (Cons n lf7)) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_sketch0 : @eq lst (##hole##) (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj95_sketch1 : @eq lst (qreva (lfappend x y) lf6) (lfappend (##hole##) (qreva x lf6))
Sketch conj95_sketch2 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj95_sketch3 : @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (##hole##))
Sketch conj95_sketch4 : @eq lst (qreva (##hole##) lf6) (lfappend (qreva y lf7) (qreva x lf6))
Sketch conj95_term_sketch0 : @eq lst (qreva (lfappend x y) lf6) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (qreva y lf7) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (qreva x lf6) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj96_sketch0 : @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (##hole##) (qreva x (Cons n lf7)))
Sketch conj96_sketch1 : @eq lst (qreva (lfappend x y) (Cons n lf7))
  (lfappend (qreva y lf7) (##hole##))
Sketch conj96_sketch2 : @eq lst (##hole##) (lfappend (qreva y lf7) (qreva x (Cons n lf7)))
Sketch conj96_sketch3 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj96_sketch4 : @eq lst (qreva (##hole##) (Cons n lf7))
  (lfappend (qreva y lf7) (qreva x (Cons n lf7)))
Sketch conj96_sketch5 : @eq lst (qreva (lfappend x y) (##hole##))
  (lfappend (qreva y lf7) (qreva x (##hole##)))
Sketch conj96_term_sketch0 : @eq lst (qreva y lf7) (##hole##)
Sketch conj96_term_sketch1 : @eq lst (qreva x (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (qreva (lfappend x y) (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7))) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (Cons n lf7) (##hole##)
Sketch conj114_sketch0 : @eq lst lf2 (lfappend lf5 (##hole##))
Sketch conj114_sketch1 : @eq lst lf2 (##hole##)
Sketch conj114_sketch2 : @eq lst lf2 (lfappend lf5 (qreva x (##hole##)))
Sketch conj114_sketch3 : @eq lst lf2 (lfappend lf5 (qreva x (Cons n (##hole##))))
Sketch conj114_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj114_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n Nil))) (##hole##)
Sketch conj114_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj114_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj116_sketch0 : @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (##hole##))
Sketch conj116_sketch1 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj116_sketch2 : @eq lst (qreva lf4 (##hole##)) (lfappend lf5 (qreva x (##hole##)))
Sketch conj116_sketch3 : @eq lst (qreva lf4 (Cons n (##hole##)))
  (lfappend lf5 (qreva x (Cons n (##hole##))))
Sketch conj116_sketch4 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n Nil)))
Sketch conj116_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj116_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n Nil))) (##hole##)
Sketch conj116_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj116_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj116_term_sketch4 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj117_sketch0 : @eq lst lf2 (lfappend (qreva y Nil) (##hole##))
Sketch conj117_sketch1 : @eq lst lf2 (lfappend (##hole##) (qreva x lf6))
Sketch conj117_sketch2 : @eq lst lf2 (##hole##)
Sketch conj117_sketch3 : @eq lst lf2 (lfappend (qreva y (##hole##)) (qreva x lf6))
Sketch conj117_term_sketch0 : @eq lst (qreva x lf6) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj117_term_sketch2 : @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (##hole##)
Sketch conj117_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj118_sketch0 : @eq lst lf2 (lfappend (qreva y Nil) (##hole##))
Sketch conj118_sketch1 : @eq lst lf2 (lfappend (##hole##) (qreva x (Cons n Nil)))
Sketch conj118_sketch2 : @eq lst lf2 (lfappend (qreva y Nil) (qreva x (##hole##)))
Sketch conj118_sketch3 : @eq lst lf2 (##hole##)
Sketch conj118_sketch4 : @eq lst lf2 (lfappend (qreva y (##hole##)) (qreva x (Cons n (##hole##))))
Sketch conj118_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj118_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj118_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj118_term_sketch3 : @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil))) (##hole##)
Sketch conj118_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj119_sketch0 : @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (##hole##))
Sketch conj119_sketch1 : @eq lst (##hole##) (lfappend (qreva y Nil) (qreva x lf6))
Sketch conj119_sketch2 : @eq lst (qreva lf4 lf6) (lfappend (##hole##) (qreva x lf6))
Sketch conj119_sketch3 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj119_sketch4 : @eq lst (qreva lf4 lf6) (lfappend (qreva y (##hole##)) (qreva x lf6))
Sketch conj119_term_sketch0 : @eq lst (qreva x lf6) (##hole##)
Sketch conj119_term_sketch1 : @eq lst (qreva lf4 lf6) (##hole##)
Sketch conj119_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj119_term_sketch3 : @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (##hole##)
Sketch conj119_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj120_sketch0 : @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva y Nil) (##hole##))
Sketch conj120_sketch1 : @eq lst (qreva lf4 (Cons n Nil)) (lfappend (##hole##) (qreva x (Cons n Nil)))
Sketch conj120_sketch2 : @eq lst (qreva lf4 (##hole##)) (lfappend (qreva y Nil) (qreva x (##hole##)))
Sketch conj120_sketch3 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj120_sketch4 : @eq lst (qreva lf4 (Cons n (##hole##)))
  (lfappend (qreva y (##hole##)) (qreva x (Cons n (##hole##))))
Sketch conj120_sketch5 : @eq lst (##hole##) (lfappend (qreva y Nil) (qreva x (Cons n Nil)))
Sketch conj120_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj120_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj120_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj120_term_sketch3 : @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil))) (##hole##)
Sketch conj120_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj120_term_sketch5 : @eq lst (qreva lf4 (Cons n Nil)) (##hole##)
Sketch conj124_sketch0 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n Nil)))
Sketch conj124_sketch1 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend lf5 (##hole##))
Sketch conj124_sketch2 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj124_sketch3 : @eq lst (qreva (lfappend x y) (##hole##)) (lfappend lf5 (qreva x (##hole##)))
Sketch conj124_sketch4 : @eq lst (qreva (##hole##) (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil)))
Sketch conj124_sketch5 : @eq lst (qreva (lfappend x y) (Cons n (##hole##)))
  (lfappend lf5 (qreva x (Cons n (##hole##))))
Sketch conj124_term_sketch0 : @eq lst (qreva (lfappend x y) (Cons n Nil)) (##hole##)
Sketch conj124_term_sketch1 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj124_term_sketch2 : @eq lst (lfappend lf5 (qreva x (Cons n Nil))) (##hole##)
Sketch conj124_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj124_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj124_term_sketch5 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1336 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_36
Sketch conj32_term_sketch4 --> Problem  synth_5
Sketch conj88_term_sketch4 --> Problem  synth_5
Sketch conj44_sketch2 --> Problem  synth_33
Sketch conj124_term_sketch0 --> Problem  synth_35
Sketch conj52_sketch1 --> Problem  synth_14
Sketch conj85_imp_sketch0 --> Problem  synth_61
Sketch conj60_term_sketch1 --> Problem  synth_35
Sketch conj63_sketch4 --> Problem  synth_47
Sketch conj118_sketch3 --> Problem  synth_12
Sketch conj53_term_sketch2 --> Problem  synth_31
Sketch conj60_sketch0 --> Problem  synth_35
Sketch conj20_term_sketch2 --> Problem  synth_5
Sketch conj17_term_sketch0 --> Problem  synth_13
Sketch conj87_term_sketch1 --> Problem  synth_68
Sketch conj21_term_sketch1 --> Problem  synth_17
Sketch conj63_term_sketch0 --> Problem  synth_7
Sketch conj56_term_sketch0 --> Problem  synth_38
Sketch conj31_sketch0 --> Problem  synth_17
Sketch conj55_sketch3 --> Problem  synth_40
Sketch conj12_term_sketch0 --> Problem  synth_11
Sketch conj124_term_sketch2 --> Problem  synth_94
Sketch conj60_term_sketch3 --> Problem  synth_8
Sketch conj64_term_sketch5 --> Problem  synth_31
Sketch conj85_imp_term_sketch2 --> Problem  synth_68
Sketch conj81_term_sketch1 --> Problem  synth_54
Sketch conj60_sketch2 --> Problem  synth_23
Sketch conj85_sketch0 --> Problem  synth_70
Sketch conj124_sketch1 --> Problem  synth_108
Sketch conj64_term_sketch1 --> Problem  synth_38
Sketch conj32_sketch3 --> Problem  synth_27
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj32_term_sketch3 --> Problem  synth_8
Sketch conj23_term_sketch2 --> Problem  synth_17
Sketch conj86_sketch0 --> Problem  synth_72
Sketch conj24_term_sketch0 --> Problem  synth_16
Sketch conj21_sketch0 --> Problem  synth_15
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj28_term_sketch2 --> Problem  synth_8
Sketch conj91_sketch3 --> Problem  synth_81
Sketch conj120_sketch1 --> Problem  synth_105
Sketch conj23_term_sketch0 --> Problem  synth_16
Sketch conj32_sketch2 --> Problem  synth_11
Sketch conj91_term_sketch3 --> Problem  synth_8
Sketch conj114_sketch0 --> Problem  synth_52
Sketch conj52_term_sketch0 --> Problem  synth_13
Sketch conj23_sketch2 --> Problem  synth_2
Sketch conj92_sketch4 --> Problem  synth_84
Sketch conj55_term_sketch1 --> Problem  synth_38
Sketch conj52_sketch0 --> Problem  synth_32
Sketch conj44_sketch1 --> Problem  synth_10
Sketch conj87_term_sketch3 --> Problem  synth_2
Sketch conj85_term_sketch0 --> Problem  synth_16
Sketch conj56_term_sketch4 --> Problem  synth_32
Sketch conj118_sketch2 --> Problem  synth_100
Sketch conj95_term_sketch3 --> Problem  synth_53
Sketch conj53_term_sketch1 --> Problem  synth_39
Sketch conj31_term_sketch0 --> Problem  synth_7
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj96_term_sketch4 --> Problem  synth_8
Sketch conj96_term_sketch5 --> Problem  synth_5
Sketch conj55_sketch0 --> Problem  synth_39
Sketch conj119_sketch1 --> Problem  synth_7
Sketch conj117_sketch3 --> Problem  synth_98
Sketch conj63_sketch1 --> Problem  synth_24
Sketch conj27_sketch0 --> Problem  synth_13
Sketch conj85_imp_sketch5 --> Problem  synth_65
Sketch conj85_term_sketch2 --> Problem  synth_53
Sketch conj56_term_sketch1 --> Problem  synth_30
Sketch conj96_term_sketch3 --> Problem  synth_74
Sketch conj32_sketch4 --> Problem  synth_28
Sketch conj32_term_sketch1 --> Problem  synth_11
Sketch conj87_sketch1 --> Problem  synth_2
Sketch conj81_sketch1 --> Problem  synth_12
Sketch conj87_sketch3 --> Problem  synth_68
Sketch conj56_sketch1 --> Problem  synth_42
Sketch conj85_term_sketch1 --> Problem  synth_68
Sketch conj44_term_sketch0 --> Problem  synth_35
Sketch conj92_term_sketch4 --> Problem  synth_5
Sketch conj84_sketch3 --> Problem  synth_60
Sketch conj119_sketch3 --> Problem  synth_2
Sketch conj12_sketch0 --> Problem  synth_1
Sketch conj64_term_sketch0 --> Problem  synth_35
Sketch conj118_term_sketch4 --> Problem  synth_31
Sketch conj60_term_sketch4 --> Problem  synth_31
Sketch conj95_sketch4 --> Problem  synth_87
Sketch conj114_term_sketch0 --> Problem  synth_93
Sketch conj96_term_sketch0 --> Problem  synth_16
Sketch conj53_term_sketch0 --> Problem  synth_38
Sketch conj83_term_sketch2 --> Problem  synth_2
Sketch conj82_term_sketch1 --> Problem  synth_57
Sketch conj31_term_sketch3 --> Problem  synth_8
Sketch conj87_sketch2 --> Problem  synth_76
Sketch conj60_sketch1 --> Problem  synth_13
Sketch conj55_sketch1 --> Problem  synth_18
Sketch conj28_term_sketch3 --> Problem  synth_5
Sketch conj12_sketch1 --> Problem  synth_9
Sketch conj27_term_sketch2 --> Problem  synth_8
Sketch conj12_sketch2 --> Problem  synth_10
Sketch conj116_term_sketch2 --> Problem  synth_30
Sketch conj84_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch1 --> Problem  synth_30
Sketch conj20_sketch0 --> Problem  synth_4
Sketch conj82_sketch0 --> Problem  synth_12
Sketch conj91_sketch0 --> Problem  synth_54
Sketch conj27_sketch2 --> Problem  synth_21
Sketch conj82_sketch1 --> Problem  synth_52
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj85_sketch2 --> Problem  synth_71
Sketch conj31_sketch2 --> Problem  synth_7
Sketch conj118_sketch4 --> Problem  synth_101
Sketch conj96_sketch2 --> Problem  synth_74
Sketch conj85_sketch1 --> Problem  synth_12
Sketch conj118_term_sketch1 --> Problem  synth_38
Sketch conj88_sketch1 --> Problem  synth_74
Sketch conj82_sketch2 --> Problem  synth_55
Sketch conj31_sketch3 --> Problem  synth_25
Sketch conj86_sketch2 --> Problem  synth_12
Sketch conj56_term_sketch3 --> Problem  synth_31
Sketch conj19_term_sketch0 --> Problem  synth_13
Sketch conj117_term_sketch2 --> Problem  synth_7
Sketch conj24_term_sketch1 --> Problem  synth_4
Sketch conj87_term_sketch2 --> Problem  synth_53
Sketch conj118_term_sketch0 --> Problem  synth_93
Sketch conj85_imp_sketch1 --> Problem  synth_62
Sketch conj92_sketch3 --> Problem  synth_83
Sketch conj88_sketch2 --> Problem  synth_78
Sketch conj82_term_sketch0 --> Problem  synth_56
Sketch conj56_sketch3 --> Problem  synth_43
Sketch conj17_sketch0 --> Problem  synth_12
Sketch conj63_sketch2 --> Problem  synth_7
Sketch conj124_sketch3 --> Problem  synth_84
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj96_sketch5 --> Problem  synth_91
Sketch conj36_term_sketch2 --> Problem  synth_32
Sketch conj117_sketch2 --> Problem  synth_12
Sketch conj55_term_sketch3 --> Problem  synth_31
Sketch conj88_term_sketch0 --> Problem  synth_16
Sketch conj52_sketch3 --> Problem  synth_13
Sketch conj64_sketch2 --> Problem  synth_49
Sketch conj44_term_sketch1 --> Problem  synth_30
Sketch conj20_term_sketch1 --> Problem  synth_4
Sketch conj21_term_sketch0 --> Problem  synth_16
Sketch conj92_sketch0 --> Problem  synth_11
Sketch conj86_term_sketch3 --> Problem  synth_5
Sketch conj91_sketch1 --> Problem  synth_80
Sketch conj28_sketch3 --> Problem  synth_23
Sketch conj64_term_sketch2 --> Problem  synth_30
Sketch conj28_sketch1 --> Problem  synth_13
Sketch conj21_sketch1 --> Problem  synth_12
Sketch conj116_sketch3 --> Problem  synth_96
Sketch conj85_imp_term_sketch0 --> Problem  synth_67
Sketch conj83_sketch2 --> Problem  synth_54
Sketch conj91_term_sketch1 --> Problem  synth_53
Sketch conj114_sketch1 --> Problem  synth_12
Sketch conj56_sketch0 --> Problem  synth_41
Sketch conj119_sketch2 --> Problem  synth_75
Sketch conj92_term_sketch0 --> Problem  synth_56
Sketch conj81_term_sketch0 --> Problem  synth_53
Sketch conj55_term_sketch2 --> Problem  synth_39
Sketch conj116_term_sketch1 --> Problem  synth_94
Sketch conj55_sketch2 --> Problem  synth_2
Sketch conj64_term_sketch3 --> Problem  synth_39
Sketch conj117_term_sketch1 --> Problem  synth_38
Sketch conj83_sketch1 --> Problem  synth_2
Sketch conj53_sketch1 --> Problem  synth_12
Sketch conj84_sketch1 --> Problem  synth_4
Sketch conj11_term_sketch1 --> Problem  synth_8
Sketch conj116_term_sketch3 --> Problem  synth_31
Sketch conj23_sketch0 --> Problem  synth_18
Sketch conj120_term_sketch3 --> Problem  synth_35
Sketch conj96_sketch4 --> Problem  synth_90
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj124_term_sketch1 --> Problem  synth_93
Sketch conj56_sketch4 --> Problem  synth_39
Sketch conj24_sketch2 --> Problem  synth_4
Sketch conj24_sketch1 --> Problem  synth_17
Sketch conj119_sketch0 --> Problem  synth_102
Sketch conj88_sketch0 --> Problem  synth_77
Sketch conj124_sketch5 --> Problem  synth_110
Sketch conj36_sketch0 --> Problem  synth_3
Sketch conj120_term_sketch0 --> Problem  synth_93
Sketch conj84_sketch2 --> Problem  synth_59
Sketch conj114_sketch2 --> Problem  synth_55
Sketch conj92_term_sketch2 --> Problem  synth_11
Sketch conj63_term_sketch4 --> Problem  synth_31
Sketch conj28_sketch2 --> Problem  synth_22
Sketch conj11_term_sketch0 --> Problem  synth_7
Sketch conj92_term_sketch3 --> Problem  synth_8
Sketch conj83_term_sketch1 --> Problem  synth_54
Sketch conj85_imp_sketch3 --> Problem  synth_61
Sketch conj82_term_sketch2 --> Problem  synth_5
Sketch conj27_sketch1 --> Problem  synth_7
Sketch conj114_term_sketch1 --> Problem  synth_94
Sketch conj96_term_sketch2 --> Problem  synth_11
Sketch conj60_sketch3 --> Problem  synth_44
Sketch conj88_term_sketch2 --> Problem  synth_57
Sketch conj120_term_sketch1 --> Problem  synth_38
Sketch conj117_term_sketch3 --> Problem  synth_31
Sketch conj84_term_sketch3 --> Problem  synth_5
Sketch conj52_term_sketch3 --> Problem  synth_32
Sketch conj63_term_sketch1 --> Problem  synth_38
Sketch conj120_term_sketch2 --> Problem  synth_30
Sketch conj119_term_sketch1 --> Problem  synth_2
Sketch conj95_sketch1 --> Problem  synth_85
Sketch conj44_sketch0 --> Problem  synth_1
Sketch conj27_term_sketch1 --> Problem  synth_13
Sketch conj120_sketch2 --> Problem  synth_106
Sketch conj96_sketch1 --> Problem  synth_89
Sketch conj116_sketch2 --> Problem  synth_60
Sketch conj20_sketch2 --> Problem  synth_14
Sketch conj88_term_sketch3 --> Problem  synth_74
Sketch conj96_term_sketch1 --> Problem  synth_57
Sketch conj36_term_sketch0 --> Problem  synth_30
Sketch conj124_sketch4 --> Problem  synth_109
Sketch conj84_term_sketch1 --> Problem  synth_56
Sketch conj95_term_sketch4 --> Problem  synth_8
Sketch conj12_term_sketch1 --> Problem  synth_8
Sketch conj64_term_sketch4 --> Problem  synth_8
Sketch conj64_sketch1 --> Problem  synth_48
Sketch conj91_sketch2 --> Problem  synth_7
Sketch conj92_sketch2 --> Problem  synth_56
Sketch conj116_term_sketch0 --> Problem  synth_93
Sketch conj119_term_sketch0 --> Problem  synth_53
Sketch conj116_sketch1 --> Problem  synth_32
Sketch conj87_term_sketch0 --> Problem  synth_16
Sketch conj83_sketch0 --> Problem  synth_58
Sketch conj53_sketch2 --> Problem  synth_37
Sketch conj64_sketch4 --> Problem  synth_50
Sketch conj56_sketch2 --> Problem  synth_32
Sketch conj118_term_sketch3 --> Problem  synth_35
Sketch conj118_term_sketch2 --> Problem  synth_30
Sketch conj116_term_sketch4 --> Problem  synth_32
Sketch conj64_sketch5 --> Problem  synth_51
Sketch conj92_sketch1 --> Problem  synth_82
Sketch conj4_sketch1 --> Problem  synth_3
Sketch conj60_sketch4 --> Problem  synth_45
Sketch conj85_imp_term_sketch3 --> Problem  synth_67
Sketch conj24_term_sketch3 --> Problem  synth_5
Sketch conj85_imp_sketch2 --> Problem  synth_63
Sketch conj85_imp_term_sketch1 --> Problem  synth_16
Sketch conj120_term_sketch5 --> Problem  synth_32
Sketch conj116_sketch0 --> Problem  synth_95
Sketch conj11_sketch0 --> Problem  synth_1
Sketch conj27_term_sketch0 --> Problem  synth_7
Sketch conj81_sketch0 --> Problem  synth_52
Sketch conj63_term_sketch2 --> Problem  synth_39
Sketch conj84_term_sketch2 --> Problem  synth_57
Sketch conj85_imp_sketch4 --> Problem  synth_64
Sketch conj120_sketch3 --> Problem  synth_32
Sketch conj84_sketch0 --> Problem  synth_56
Sketch conj117_sketch0 --> Problem  synth_97
Sketch conj44_term_sketch2 --> Problem  synth_8
Sketch conj28_sketch0 --> Problem  synth_11
Sketch conj124_term_sketch4 --> Problem  synth_8
Sketch conj92_term_sketch1 --> Problem  synth_57
Sketch conj11_sketch1 --> Problem  synth_6
Sketch conj28_term_sketch1 --> Problem  synth_11
Sketch conj31_term_sketch1 --> Problem  synth_16
Sketch conj24_sketch0 --> Problem  synth_19
Sketch conj32_sketch0 --> Problem  synth_26
Sketch conj23_sketch1 --> Problem  synth_17
Sketch conj120_term_sketch4 --> Problem  synth_31
Sketch conj60_term_sketch2 --> Problem  synth_30
Sketch conj119_sketch4 --> Problem  synth_103
Sketch conj118_sketch1 --> Problem  synth_99
Sketch conj114_term_sketch2 --> Problem  synth_30
Sketch conj36_sketch2 --> Problem  synth_1
Sketch conj20_term_sketch0 --> Problem  synth_13
Sketch conj91_term_sketch0 --> Problem  synth_7
Sketch conj95_sketch3 --> Problem  synth_86
Sketch conj91_term_sketch2 --> Problem  synth_54
Sketch conj86_sketch1 --> Problem  synth_71
Sketch conj85_imp_term_sketch6 --> Problem  synth_8
Sketch conj119_term_sketch2 --> Problem  synth_38
Sketch conj60_term_sketch0 --> Problem  synth_13
Sketch conj52_term_sketch2 --> Problem  synth_31
Sketch conj85_imp_term_sketch5 --> Problem  synth_69
Sketch conj53_sketch0 --> Problem  synth_15
Sketch conj32_term_sketch2 --> Problem  synth_17
Sketch conj12_term_sketch2 --> Problem  synth_5
Sketch conj44_term_sketch3 --> Problem  synth_31
Sketch conj86_term_sketch1 --> Problem  synth_57
Sketch conj32_sketch1 --> Problem  synth_17
Sketch conj24_sketch3 --> Problem  synth_20
Sketch conj118_sketch0 --> Problem  synth_97
Sketch conj85_imp_term_sketch4 --> Problem  synth_53
Sketch conj55_term_sketch0 --> Problem  synth_2
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj85_imp_sketch6 --> Problem  synth_66
Sketch conj124_sketch2 --> Problem  synth_35
Sketch conj96_sketch3 --> Problem  synth_11
Sketch conj83_term_sketch0 --> Problem  synth_53
Sketch conj124_term_sketch5 --> Problem  synth_31
Sketch conj96_sketch0 --> Problem  synth_88
Sketch conj114_sketch3 --> Problem  synth_92
Sketch conj120_sketch4 --> Problem  synth_107
Sketch conj23_term_sketch1 --> Problem  synth_2
Sketch conj95_term_sketch1 --> Problem  synth_16
Sketch conj95_term_sketch0 --> Problem  synth_7
Sketch conj36_sketch1 --> Problem  synth_29
Sketch conj20_sketch1 --> Problem  synth_13
Sketch conj116_sketch4 --> Problem  synth_94
Sketch conj63_term_sketch3 --> Problem  synth_8
Sketch conj63_sketch0 --> Problem  synth_39
Sketch conj63_sketch3 --> Problem  synth_46
Sketch conj120_sketch0 --> Problem  synth_104
Sketch conj119_term_sketch4 --> Problem  synth_31
Sketch conj28_term_sketch0 --> Problem  synth_13
Sketch conj117_term_sketch0 --> Problem  synth_53
Sketch conj117_sketch1 --> Problem  synth_70
Sketch conj86_term_sketch0 --> Problem  synth_16
Sketch conj86_term_sketch2 --> Problem  synth_74
Sketch conj56_term_sketch2 --> Problem  synth_39
Sketch conj87_sketch0 --> Problem  synth_75
Sketch conj32_term_sketch0 --> Problem  synth_16
Sketch conj88_term_sketch1 --> Problem  synth_4
Sketch conj64_sketch3 --> Problem  synth_35
Sketch conj124_sketch0 --> Problem  synth_94
Sketch conj88_sketch3 --> Problem  synth_4
Sketch conj19_sketch1 --> Problem  synth_13
Sketch conj88_sketch4 --> Problem  synth_79
Sketch conj86_sketch3 --> Problem  synth_73
Sketch conj44_sketch3 --> Problem  synth_34
Sketch conj24_term_sketch2 --> Problem  synth_17
Sketch conj95_sketch2 --> Problem  synth_7
Sketch conj120_sketch5 --> Problem  synth_35
Sketch conj31_sketch1 --> Problem  synth_24
Sketch conj119_term_sketch3 --> Problem  synth_7
Sketch conj64_sketch0 --> Problem  synth_39
Sketch conj31_term_sketch2 --> Problem  synth_17
Sketch conj95_term_sketch2 --> Problem  synth_68
Sketch conj95_sketch0 --> Problem  synth_68
Sketch conj36_term_sketch1 --> Problem  synth_31
Sketch conj114_term_sketch3 --> Problem  synth_31
Sketch conj124_term_sketch3 --> Problem  synth_30


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 2336 seconds

Problem: synth_63
 rev (rev lf2)
 lfappend lf2 lf7
 lfappend lf7 lf2
 qreva lf7 lf2
 lfappend lf2 Nil
 lf2

Problem: synth_106

Problem: synth_91

Problem: synth_109
 lfappend (lfappend x (rev lf5)) Nil
 qreva (rev x) (qreva lf5 Nil)
 lfappend x (qreva lf5 Nil)
 qreva (rev x) (rev lf5)
 rev (lfappend lf5 (rev x))
 lfappend x (rev lf5)

Problem: synth_68
 lfappend (qreva y (rev x)) lf6
 qreva (lfappend x y) lf6
 lfappend (rev y) (qreva x (rev lf6))
 lfappend (rev y) (qreva x lf6)
 qreva y (qreva x (rev lf6))
 qreva y (qreva x lf6)

Problem: synth_67
 qreva lf7 (qreva y (rev x))
 qreva y (qreva x lf7)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_77

Problem: synth_64

Problem: synth_96
 Nil

Problem: synth_11
 qreva y (lfappend (rev x) (Cons n lf7))
 qreva y (qreva x (Cons n (rev lf7)))
 qreva y (qreva x (Cons n lf7))
 qreva y (qreva x (Cons n Nil))
 qreva y (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_54
 lfappend (lfappend lf5 (rev x)) lf6
 qreva (lfappend x (rev lf5)) lf6
 qreva (rev lf5) (qreva x (rev lf6))
 qreva (rev lf5) (qreva x lf6)
 lfappend lf5 (qreva x (rev lf6))
 lfappend lf5 (qreva x lf6)

Problem: synth_39
 lfappend (rev y) (lfappend lf3 Nil)
 qreva y (rev (rev lf3))
 qreva y (lfappend lf3 Nil)
 rev (qreva lf3 y)
 lfappend (rev y) lf3
 qreva y lf3

Problem: synth_46

Problem: synth_101
 Nil

Problem: synth_98
 Nil

Problem: synth_100

Problem: synth_66
 lfappend lf7 (lfappend x y)
 qreva lf7 (lfappend x y)
 lfappend x (lfappend y Nil)
 rev (qreva y (rev x))
 qreva (rev x) y
 lfappend x y

Problem: synth_57
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 qreva x (Cons n (rev lf7))
 qreva x (Cons n lf7)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_59

Problem: synth_31
 Nil

Problem: synth_8
 qreva (rev x) (lfappend y Nil)
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 rev (qreva y (rev x))
 qreva (rev x) y
 lfappend x y

Problem: synth_34
 Nil

Problem: synth_5
 qreva lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_37
 Nil

Problem: synth_58

Problem: synth_53
 lfappend (rev x) (rev lf6)
 rev (lfappend lf6 x)
 rev (qreva lf6 x)
 lfappend (rev x) lf6
 qreva x (rev lf6)
 qreva x lf6

Problem: synth_2
 lfappend (rev lf4) (rev lf6)
 rev (lfappend lf6 lf4)
 rev (qreva lf6 lf4)
 lfappend (rev lf4) lf6
 qreva lf4 (rev lf6)
 qreva lf4 lf6

Problem: synth_95

Problem: synth_22

Problem: synth_18

Problem: synth_21

Problem: synth_72

Problem: synth_56
 lfappend lf5 (lfappend (rev x) (Cons n lf7))
 lfappend lf5 (qreva x (Cons n (rev lf7)))
 lfappend lf5 (qreva x (Cons n lf7))
 lfappend lf5 (qreva x (Cons n Nil))
 lfappend lf5 (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)

Problem: synth_41

Problem: synth_49

Problem: synth_75

Problem: synth_25

Problem: synth_13
 qreva (rev lf5) (lfappend lf3 Nil)
 lfappend lf5 (rev (rev lf3))
 lfappend lf5 (lfappend lf3 Nil)
 rev (qreva lf3 (rev lf5))
 qreva (rev lf5) lf3
 lfappend lf5 lf3

Problem: synth_6

Problem: synth_4
 lfappend (rev lf4) (Cons n (rev lf7))
 lfappend (rev lf4) (Cons n lf7)
 qreva lf4 (Cons n (rev lf7))
 qreva lf4 (Cons n lf7)
 qreva lf4 (Cons n Nil)
 lfappend (rev lf4) (Cons n Nil)

Problem: synth_38
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_105

Problem: synth_104

Problem: synth_65
 qreva x (rev lf7)
 lfappend lf7 (rev x)
 qreva lf7 (rev x)
 qreva x lf7
 qreva x Nil
 rev x

Problem: synth_23

Problem: synth_88
 qreva y (rev lf7)
 lfappend lf7 (rev y)
 qreva lf7 (rev y)
 qreva y lf7
 qreva y Nil
 rev y

Problem: synth_102

Problem: synth_19

Problem: synth_10

Problem: synth_24
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_97

Problem: synth_92
 Nil

Problem: synth_32
 qreva (lfappend lf4 Nil) (Cons n Nil)
 lfappend (qreva lf4 Nil) (Cons n Nil)
 lfappend (rev (rev (rev lf4))) (Cons n Nil)
 lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)
 qreva lf4 (Cons n Nil)
 lfappend (rev lf4) (Cons n Nil)

Problem: synth_48
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_51
 Nil

Problem: synth_35
 lfappend (rev y) (lfappend (rev x) (Cons n Nil))
 lfappend (qreva y (rev x)) (Cons n Nil)
 qreva (lfappend x y) (Cons n Nil)
 qreva y (qreva x (Cons n Nil))
 qreva y (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_28

Problem: synth_110
 Nil

Problem: synth_90
 lfappend lf7 (lfappend x y)
 qreva lf7 (lfappend x y)
 lfappend x (lfappend y Nil)
 rev (qreva y (rev x))
 qreva (rev x) y
 lfappend x y

Problem: synth_73

Problem: synth_17
 qreva lf7 (qreva y lf3)
 qreva y (lfappend lf3 lf7)
 qreva y (lfappend lf3 Nil)
 rev (qreva lf3 y)
 lfappend (rev y) lf3
 qreva y lf3

Problem: synth_29
 Nil

Problem: synth_45
 Nil

Problem: synth_76

Problem: synth_26
 qreva y (rev lf7)
 lfappend lf7 (rev y)
 qreva lf7 (rev y)
 qreva y lf7
 qreva y Nil
 rev y

Problem: synth_70

Problem: synth_9

Problem: synth_30
 Cons n Nil

Problem: synth_81
 lfappend (lfappend x (rev lf5)) Nil
 qreva (rev x) (qreva lf5 Nil)
 lfappend x (qreva lf5 Nil)
 qreva (rev x) (rev lf5)
 rev (lfappend lf5 (rev x))
 lfappend x (rev lf5)

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_69
 qreva x (rev lf7)
 lfappend lf7 (rev x)
 qreva lf7 (rev x)
 qreva x lf7
 qreva x Nil
 rev x

Problem: synth_86
 lfappend (rev x) (rev lf6)
 rev (lfappend lf6 x)
 rev (qreva lf6 x)
 lfappend (rev x) lf6
 qreva x (rev lf6)
 qreva x lf6

Problem: synth_55

Problem: synth_107
 Nil

Problem: synth_71

Problem: synth_15

Problem: synth_14

Problem: synth_103
 Nil

Problem: synth_87
 lfappend lf7 (lfappend x y)
 qreva lf7 (lfappend x y)
 lfappend x (lfappend y Nil)
 rev (qreva y (rev x))
 qreva (rev x) y
 lfappend x y

Problem: synth_79

Problem: synth_83
 qreva lf7 (lfappend x (rev lf5))
 lfappend x (qreva lf5 lf7)
 lfappend x (qreva lf5 Nil)
 qreva (rev x) (rev lf5)
 rev (lfappend lf5 (rev x))
 lfappend x (rev lf5)

Problem: synth_12
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_85
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_62
 qreva y (rev lf7)
 lfappend lf7 (rev y)
 qreva lf7 (rev y)
 qreva y lf7
 qreva y Nil
 rev y

Problem: synth_74
 qreva y (lfappend (rev x) (Cons n lf7))
 qreva y (qreva x (Cons n (rev lf7)))
 qreva y (qreva x (Cons n lf7))
 qreva y (qreva x (Cons n Nil))
 qreva y (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_50

Problem: synth_84

Problem: synth_20

Problem: synth_94
 qreva (rev lf5) (lfappend (rev x) (Cons n Nil))
 lfappend (lfappend lf5 (rev x)) (Cons n Nil)
 qreva (lfappend x (rev lf5)) (Cons n Nil)
 lfappend lf5 (qreva x (Cons n Nil))
 lfappend lf5 (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)

Problem: synth_108
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_7
 lfappend (qreva y (rev x)) lf6
 qreva (lfappend x y) lf6
 lfappend (rev y) (qreva x (rev lf6))
 lfappend (rev y) (qreva x lf6)
 qreva y (qreva x (rev lf6))
 qreva y (qreva x lf6)

Problem: synth_61
 qreva lf7 (qreva y (rev x))
 qreva y (qreva x lf7)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_27

Problem: synth_42

Problem: synth_16
 qreva y (rev lf7)
 lfappend lf7 (rev y)
 qreva lf7 (rev y)
 qreva y lf7
 qreva y Nil
 rev y

Problem: synth_93
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_40
 Nil

Problem: synth_80
 lfappend (rev x) (rev lf6)
 rev (lfappend lf6 x)
 rev (qreva lf6 x)
 lfappend (rev x) lf6
 qreva x (rev lf6)
 qreva x lf6

Problem: synth_33

Problem: synth_89
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 qreva x (Cons n (rev lf7))
 qreva x (Cons n lf7)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_47
 Nil

Problem: synth_3

Problem: synth_52

Problem: synth_44

Problem: synth_60

Problem: synth_36
 Nil

Problem: synth_82
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 qreva x (Cons n (rev lf7))
 qreva x (Cons n lf7)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_78

Problem: synth_99

Problem: synth_43
 Nil

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 2337 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_3: forall (lf4 : lst) (x : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_4: forall (n : natural) (lf7 : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend lf5 (qreva x lf7)), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_5: forall (lf7 : lst) (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_6: forall (n : natural) (lf7 : lst) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva lf4 (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_7: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_8: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (lfappend lf5 (qreva x lf7)), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_9: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_10: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_11: forall (n : natural) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_12: forall (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_13: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_14: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_15: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_17: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_20: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_21: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_22: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_24: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_25: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_26: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_27: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_28: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_29: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_30: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_31: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_32: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_33: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_34: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_35: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_36: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_37: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_38: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_39: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_40: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_41: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_42: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_43: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_44: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_45: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_46: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_47: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_48: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_49: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_50: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_51: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_52: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_53: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_54: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_55: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_56: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_57: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_58: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_59: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_60: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_61: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_62: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_63: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_64: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_65: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_66: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_67: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_68: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_69: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_70: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_71: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_72: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_73: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_74: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_75: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_76: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_77: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_78: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_79: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_80: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_81: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_82: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_83: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_84: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_85: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_86: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_87: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_88: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_89: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_90: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_91: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_92: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_93: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_94: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_95: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_96: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_97: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_98: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_99: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_100: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_101: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_102: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_103: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_104: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_105: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_106: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_107: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_108: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_109: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_110: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_111: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_112: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_113: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_114: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_115: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_116: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_117: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_118: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_119: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_120: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_121: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_122: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_123: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_124: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_125: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_126: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_127: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_128: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_129: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_130: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_131: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_132: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_133: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_134: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_135: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_136: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_137: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_138: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_139: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_140: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_141: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_142: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_143: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_144: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_145: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_146: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_147: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_148: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_149: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_150: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_151: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_152: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_153: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_154: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_155: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_156: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_157: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_158: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_159: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_160: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_161: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_162: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_163: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_164: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_165: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva lf7 (qreva y lf3)).
Lemma candidate_166: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 lf7)).
Lemma candidate_167: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_168: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (rev (qreva lf3 y)).
Lemma candidate_169: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (lfappend (rev y) lf3).
Lemma candidate_170: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y lf3).
Lemma candidate_171: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva lf7 (qreva y lf3)) (lfappend (qreva y lf7) lf3).
Lemma candidate_172: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 lf7)) (lfappend (qreva y lf7) lf3).
Lemma candidate_173: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y lf7) lf3).
Lemma candidate_174: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y lf7) lf3).
Lemma candidate_175: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_176: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_177: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_178: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_179: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_180: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_181: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_182: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_183: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_184: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_185: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_186: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_187: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_188: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_189: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_190: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_191: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_192: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_193: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_194: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_195: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva lf7 (qreva y lf3)).
Lemma candidate_196: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 lf7)).
Lemma candidate_197: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_198: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (rev (qreva lf3 y)).
Lemma candidate_199: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (lfappend (rev y) lf3).
Lemma candidate_200: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y lf3).
Lemma candidate_201: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva lf7 (qreva y lf3)) (lfappend (qreva y lf7) lf3).
Lemma candidate_202: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 lf7)) (lfappend (qreva y lf7) lf3).
Lemma candidate_203: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y lf7) lf3).
Lemma candidate_204: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y lf7) lf3).
Lemma candidate_205: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_206: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_207: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_208: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_209: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_210: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_211: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_212: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_213: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_214: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_215: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_216: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_217: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_218: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_219: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_220: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_221: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_222: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_223: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_224: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_225: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva lf7 (qreva y lf3)).
Lemma candidate_226: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 lf7)).
Lemma candidate_227: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_228: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (rev (qreva lf3 y)).
Lemma candidate_229: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (lfappend (rev y) lf3).
Lemma candidate_230: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y lf3).
Lemma candidate_231: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_232: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_233: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_234: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_235: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_236: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_237: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_238: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_239: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_240: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_241: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_242: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_243: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_244: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_245: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_246: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_247: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_248: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_249: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_250: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_251: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_252: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_253: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_254: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_255: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_256: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_257: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_258: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_259: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_260: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_261: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_262: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_263: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_264: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_265: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_266: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_267: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_268: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_269: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_270: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_271: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_272: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_273: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_274: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_275: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_276: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_277: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_278: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_279: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_280: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_281: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_282: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_283: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_284: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_285: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_286: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_287: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_288: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_289: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_290: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_291: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_292: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_293: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_294: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_295: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_296: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_297: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_298: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_299: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_300: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_301: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_302: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_303: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva lf7 (qreva y lf3)) (lfappend (qreva y lf7) lf3).
Lemma candidate_304: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 lf7)) (lfappend (qreva y lf7) lf3).
Lemma candidate_305: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y lf7) lf3).
Lemma candidate_306: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y lf7) lf3).
Lemma candidate_307: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_308: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_309: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (qreva y Nil) Nil) lf3).
Lemma candidate_310: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev (rev (rev y))) lf3).
Lemma candidate_311: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev (lfappend y Nil)) lf3).
Lemma candidate_312: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (lfappend (rev y) Nil) lf3).
Lemma candidate_313: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) lf3).
Lemma candidate_314: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) lf3).
Lemma candidate_315: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_316: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_317: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_318: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_319: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_320: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_321: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_322: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_323: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_324: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_325: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_326: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_327: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_328: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_329: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_330: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_331: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_332: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_333: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva lf7 (qreva y lf3)).
Lemma candidate_334: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 lf7)).
Lemma candidate_335: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_336: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (rev (qreva lf3 y)).
Lemma candidate_337: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (lfappend (rev y) lf3).
Lemma candidate_338: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y lf3).
Lemma candidate_339: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_340: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_341: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_342: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_343: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_344: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_345: forall (lf3 : lst) (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y (rev lf7)) lf3).
Lemma candidate_346: forall (lf3 : lst) (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (lfappend lf7 (rev y)) lf3).
Lemma candidate_347: forall (lf3 : lst) (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva lf7 (rev y)) lf3).
Lemma candidate_348: forall (lf3 : lst) (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (qreva y lf7) lf3).
Lemma candidate_349: forall (lf3 : lst) (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (qreva y Nil) lf3).
Lemma candidate_350: forall (lf3 : lst) (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (lfappend (rev y) lf3).
Lemma candidate_351: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva lf7 (qreva y lf3)) (lfappend (qreva y lf7) lf3).
Lemma candidate_352: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 lf7)) (lfappend (qreva y lf7) lf3).
Lemma candidate_353: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y lf7) lf3).
Lemma candidate_354: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y lf7) lf3).
Lemma candidate_355: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_356: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y lf7) lf3).
Lemma candidate_357: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_358: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_359: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_360: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_361: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_362: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_363: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_364: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_365: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_366: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_367: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_368: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_369: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_370: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_371: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_372: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_373: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_374: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_375: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva lf7 (qreva y lf3)).
Lemma candidate_376: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 lf7)).
Lemma candidate_377: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_378: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (rev (qreva lf3 y)).
Lemma candidate_379: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (lfappend (rev y) lf3).
Lemma candidate_380: forall (lf3 : lst) (lf7 : lst) (y : lst), @eq lst (lfappend (qreva y lf7) lf3) (qreva y lf3).
Lemma candidate_381: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_382: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_383: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_384: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_385: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_386: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_387: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_388: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_389: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_390: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_391: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_392: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_393: forall (n : natural) (lf1 : lst) (lf4 : lst), @eq lst (qreva lf4 (Cons n (Nil))) lf1.
Lemma candidate_394: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_395: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_396: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_397: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_398: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_399: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_400: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_401: @eq lst Nil (Nil).
Lemma candidate_402: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_403: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_404: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_405: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_406: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_407: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_408: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_409: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_410: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_411: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_412: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_413: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_414: forall (n : natural) (y : lst) (lf1 : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n (Nil))) lf1.
Lemma candidate_415: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_416: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_417: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_418: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_419: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_420: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_421: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_422: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_423: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_424: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_425: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_426: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_427: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_428: @eq lst Nil (Nil).
Lemma candidate_429: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_430: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_431: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_432: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_433: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_434: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_435: forall (lf3 : lst) (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (qreva lf4 (Cons n (Nil))) (lfappend lf5 lf3).
Lemma candidate_436: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_437: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_438: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_439: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_440: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_441: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_442: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_443: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_444: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_445: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_446: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_447: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_448: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_449: @eq lst Nil (Nil).
Lemma candidate_450: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_451: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_452: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_453: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_454: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_455: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_456: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_457: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_458: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_459: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_460: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_461: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_462: forall (lf3 : lst) (y : lst) (lf2 : lst), @eq lst lf2 (lfappend (qreva y (Nil)) lf3).
Lemma candidate_463: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_464: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_465: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_466: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_467: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_468: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_469: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_470: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_471: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_472: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_473: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_474: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_475: @eq lst Nil (Nil).
Lemma candidate_476: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_477: forall (lf3 : lst) (y : lst), @eq lst (qreva y (rev (rev lf3))) (lfappend (qreva y Nil) lf3).
Lemma candidate_478: forall (lf3 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_479: forall (lf3 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y Nil) lf3).
Lemma candidate_480: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_481: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_482: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_483: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_484: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_485: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_486: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_487: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_488: forall (lf3 : lst) (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y (Nil)) lf3).
Lemma candidate_489: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_490: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_491: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_492: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_493: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_494: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_495: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_496: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_497: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_498: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_499: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_500: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_501: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_502: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_503: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_504: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_505: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_506: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_507: @eq lst Nil (Nil).
Lemma candidate_508: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_509: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_510: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_511: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_512: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_513: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_514: forall (lf3 : lst) (n : natural) (y : lst) (lf4 : lst), @eq lst (qreva lf4 (Cons n (Nil))) (lfappend (qreva y (Nil)) lf3).
Lemma candidate_515: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_516: forall (lf3 : lst) (y : lst), @eq lst (qreva y (rev (rev lf3))) (lfappend (qreva y Nil) lf3).
Lemma candidate_517: forall (lf3 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_518: forall (lf3 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y Nil) lf3).
Lemma candidate_519: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_520: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_521: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_522: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_523: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_524: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_525: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_526: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_527: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_528: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_529: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_530: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_531: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_532: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_533: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_534: @eq lst Nil (Nil).
Lemma candidate_535: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_536: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_537: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_538: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_539: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_540: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_541: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_542: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_543: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_544: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_545: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_546: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_547: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_548: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_549: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_550: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_551: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_552: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_553: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n (Nil))) (lfappend lf5 lf3).
Lemma candidate_554: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_555: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_556: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_557: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_558: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_559: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 lf3).
Lemma candidate_560: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_561: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_562: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_563: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_564: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_565: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_566: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_567: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_568: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_569: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_570: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_571: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_572: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_573: @eq lst Nil (Nil).
Lemma candidate_574: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_575: forall (lf3 : lst) (y : lst), @eq lst (qreva y (rev (rev lf3))) (lfappend (qreva y Nil) lf3).
Lemma candidate_576: forall (lf3 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_577: forall (lf3 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y Nil) lf3).
Lemma candidate_578: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_579: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_580: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (qreva y Nil) Nil) lf3).
Lemma candidate_581: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev (rev (rev y))) lf3).
Lemma candidate_582: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev (lfappend y Nil)) lf3).
Lemma candidate_583: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (lfappend (rev y) Nil) lf3).
Lemma candidate_584: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) lf3).
Lemma candidate_585: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) lf3).
Lemma candidate_586: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_587: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_588: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_589: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_590: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_591: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_592: forall (lf3 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (Nil)) lf3).
Lemma candidate_593: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_594: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_595: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_596: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_597: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_598: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_599: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_600: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_601: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_602: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_603: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_604: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_605: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_606: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_607: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_608: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_609: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_610: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_611: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_612: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_613: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_614: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_615: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_616: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_617: @eq lst Nil (Nil).
Lemma candidate_618: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_619: forall (lf3 : lst) (y : lst), @eq lst (qreva y (rev (rev lf3))) (lfappend (qreva y Nil) lf3).
Lemma candidate_620: forall (lf3 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_621: forall (lf3 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y Nil) lf3).
Lemma candidate_622: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_623: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_624: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (lfappend (qreva y Nil) Nil) lf3).
Lemma candidate_625: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (rev (rev y))) lf3).
Lemma candidate_626: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend y Nil)) lf3).
Lemma candidate_627: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (lfappend (rev y) Nil) lf3).
Lemma candidate_628: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_629: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (lfappend (rev y) lf3).
Lemma candidate_630: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_631: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_632: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_633: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_634: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_635: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_636: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n (Nil))) (lfappend (qreva y (Nil)) lf3).
Lemma candidate_637: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_638: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_639: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_640: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_641: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_642: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_643: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_644: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_645: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_646: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_647: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_648: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_649: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_650: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_651: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_652: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_653: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_654: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_655: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_656: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_657: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_658: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_659: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_660: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_661: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_662: @eq lst Nil (Nil).
Lemma candidate_663: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_664: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_665: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_666: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_667: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_668: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_669: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_670: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_671: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_672: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_673: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_674: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_675: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend (lfappend lf5 (rev x)) lf6).
Lemma candidate_676: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (lfappend x (rev lf5)) lf6).
Lemma candidate_677: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x (rev lf6))).
Lemma candidate_678: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x lf6)).
Lemma candidate_679: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x (rev lf6))).
Lemma candidate_680: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_681: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_682: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_683: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_684: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_685: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_686: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_687: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n lf7))).
Lemma candidate_688: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n (rev lf7)))).
Lemma candidate_689: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_690: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_691: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_692: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_693: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_694: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_695: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n (rev lf7))).
Lemma candidate_696: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n lf7)).
Lemma candidate_697: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n Nil)).
Lemma candidate_698: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_699: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_700: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_701: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_702: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_703: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_704: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_705: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_706: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_707: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_708: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_709: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_710: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_711: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_712: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_713: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) (qreva x (rev lf6))) (lfappend lf5 (qreva x lf6)).
Lemma candidate_714: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_715: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x (rev lf6))) (lfappend lf5 (qreva x lf6)).
Lemma candidate_716: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_717: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_718: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_719: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_720: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_721: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_722: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_723: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend (lfappend lf5 (rev x)) lf6).
Lemma candidate_724: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (lfappend x (rev lf5)) lf6).
Lemma candidate_725: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x (rev lf6))).
Lemma candidate_726: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x lf6)).
Lemma candidate_727: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x (rev lf6))).
Lemma candidate_728: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_729: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_730: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_731: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_732: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_733: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_734: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_735: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_736: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n (rev lf7))))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_737: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_738: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_739: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_740: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_741: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_742: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_743: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_744: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_745: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_746: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_747: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_748: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_749: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_750: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_751: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_752: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_753: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n lf7))).
Lemma candidate_754: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n (rev lf7)))).
Lemma candidate_755: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_756: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_757: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_758: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_759: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_760: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_761: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n (rev lf7))).
Lemma candidate_762: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n lf7)).
Lemma candidate_763: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n Nil)).
Lemma candidate_764: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_765: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_766: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_767: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_768: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_769: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_770: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_771: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (qreva lf7 (qreva y (rev x))), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_772: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (qreva y (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_773: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (qreva y (qreva x Nil)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_774: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (lfappend (rev y) (rev x)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_775: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (rev (lfappend x y)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_776: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (qreva y (rev x)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_777: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y (rev lf7)) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y (rev lf7)) (qreva x lf6)).
Lemma candidate_778: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (lfappend lf7 (rev y)) (qreva x lf7)), @eq lst lf2 (lfappend (lfappend lf7 (rev y)) (qreva x lf6)).
Lemma candidate_779: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva lf7 (rev y)) (qreva x lf7)), @eq lst lf2 (lfappend (qreva lf7 (rev y)) (qreva x lf6)).
Lemma candidate_780: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_781: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y Nil) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_782: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7) (lfappend (rev y) (qreva x lf7)), @eq lst lf2 (lfappend (rev y) (qreva x lf6)).
Lemma candidate_783: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_784: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf2 lf7).
Lemma candidate_785: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf7 lf2).
Lemma candidate_786: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (qreva lf7 lf2).
Lemma candidate_787: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_788: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lf2).
Lemma candidate_789: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva lf7 (qreva y (rev x)))         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_790: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_791: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva y (qreva x Nil)) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_792: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (lfappend (rev y) (rev x))         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_793: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (rev (lfappend x y)) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_794: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall _ : @eq lst (qreva y (rev x)) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_795: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x (rev lf7))), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_796: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (lfappend lf7 (rev x))), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_797: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva lf7 (rev x))), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_798: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_799: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x Nil)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_800: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y lf7) (rev x)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_801: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend lf7 (lfappend x y)) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_802: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (qreva lf7 (lfappend x y)) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_803: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x (lfappend y Nil)) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_804: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (rev (qreva y (rev x))) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_805: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (qreva (rev x) y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_806: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_807: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (qreva lf7 (qreva y (rev x))).
Lemma candidate_808: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_809: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (qreva y (qreva x Nil)).
Lemma candidate_810: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (lfappend (rev y) (rev x)).
Lemma candidate_811: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (rev (lfappend x y)).
Lemma candidate_812: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf7)) (qreva y (rev x)).
Lemma candidate_813: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_814: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_815: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_816: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_817: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_818: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_819: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_820: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_821: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_822: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_823: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x (rev lf6))).
Lemma candidate_824: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_825: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (qreva lf7 (qreva y (rev x))).
Lemma candidate_826: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (qreva y (qreva x lf7)).
Lemma candidate_827: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (qreva y (qreva x Nil)).
Lemma candidate_828: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (rev y) (rev x)).
Lemma candidate_829: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (rev (lfappend x y)).
Lemma candidate_830: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (qreva y (rev x)).
Lemma candidate_831: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_832: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_833: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_834: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_835: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_836: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_837: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_838: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend lf7 (rev x)).
Lemma candidate_839: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva lf7 (rev x)).
Lemma candidate_840: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_841: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x Nil).
Lemma candidate_842: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev x).
Lemma candidate_843: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_844: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_845: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_846: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_847: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_848: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_849: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_850: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_851: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_852: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_853: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_854: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_855: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_856: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_857: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_858: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_859: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_860: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_861: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_862: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_863: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_864: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_865: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x (rev lf6))).
Lemma candidate_866: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_867: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_868: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_869: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_870: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_871: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_872: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_873: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_874: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_875: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_876: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_877: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_878: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_879: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_880: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_881: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_882: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_883: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_884: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_885: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_886: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_887: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n (rev lf7))).
Lemma candidate_888: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n lf7)).
Lemma candidate_889: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n Nil)).
Lemma candidate_890: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_891: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_892: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_893: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n lf7))).
Lemma candidate_894: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_895: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_896: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_897: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_898: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_899: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_900: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_901: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_902: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_903: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_904: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_905: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_906: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_907: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_908: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_909: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y (rev x)) lf6)   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_910: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_911: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x (rev lf6)))   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_912: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x lf6))   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_913: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x (rev lf6))) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_914: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x lf6)) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_915: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_916: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_917: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_918: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_919: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_920: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_921: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_922: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_923: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_924: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_925: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x (rev lf6))).
Lemma candidate_926: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_927: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_928: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_929: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_930: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_931: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_932: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_933: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_934: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_935: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_936: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_937: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_938: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_939: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n lf7)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_940: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n (rev lf7))))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_941: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n lf7)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_942: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_943: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_944: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_945: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_946: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_947: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_948: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_949: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_950: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_951: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_952: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_953: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_954: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_955: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_956: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_957: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n (rev lf7))).
Lemma candidate_958: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_959: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n (rev lf7))).
Lemma candidate_960: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n lf7)).
Lemma candidate_961: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (qreva lf4 (Cons n Nil)).
Lemma candidate_962: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_963: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_964: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_965: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n (rev lf7))).
Lemma candidate_966: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n lf7)).
Lemma candidate_967: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n Nil)).
Lemma candidate_968: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_969: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_970: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_971: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n lf7))).
Lemma candidate_972: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_973: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_974: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_975: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_976: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_977: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_978: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_979: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_980: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_981: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_982: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_983: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) (qreva x (rev lf6))) (lfappend lf5 (qreva x lf6)).
Lemma candidate_984: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_985: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x (rev lf6))) (lfappend lf5 (qreva x lf6)).
Lemma candidate_986: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_987: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend lf5 (lfappend (rev x) (rev lf6))).
Lemma candidate_988: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (rev (lfappend lf6 x))).
Lemma candidate_989: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (rev (qreva lf6 x))).
Lemma candidate_990: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (lfappend (rev x) lf6)).
Lemma candidate_991: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x (rev lf6))).
Lemma candidate_992: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_993: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_994: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_995: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_996: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_997: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_998: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_999: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend (lfappend x (rev lf5)) Nil) lf6)   (lfappend lf5 (qreva x lf6)).
Lemma candidate_1000: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) (qreva lf5 Nil)) lf6)   (lfappend lf5 (qreva x lf6)).
Lemma candidate_1001: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1002: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1003: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1004: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1005: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1006: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_1007: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_1008: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1009: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_1010: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_1011: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_1012: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_1013: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_1014: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_1015: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_1016: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_1017: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend (lfappend lf5 (rev x)) lf6).
Lemma candidate_1018: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (lfappend x (rev lf5)) lf6).
Lemma candidate_1019: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x (rev lf6))).
Lemma candidate_1020: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x lf6)).
Lemma candidate_1021: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x (rev lf6))).
Lemma candidate_1022: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1023: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1024: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1025: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1026: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_1027: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_1028: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1029: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1030: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_1031: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1032: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1033: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1034: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1035: forall (lf7 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (lfappend (rev x) (Cons n (rev lf7)))).
Lemma candidate_1036: forall (lf7 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1037: forall (lf7 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n (rev lf7)))).
Lemma candidate_1038: forall (lf7 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1039: forall (lf7 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1040: forall (lf7 : lst) (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1041: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1042: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n (rev lf7))))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1043: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1044: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1045: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1046: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1047: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva lf7 (lfappend x (rev lf5))) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1048: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 lf7)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1049: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1050: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1051: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1052: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1053: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1054: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n (rev lf7)))).
Lemma candidate_1055: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1056: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1057: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1058: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1059: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_1060: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_1061: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n (rev lf7))).
Lemma candidate_1062: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n lf7)).
Lemma candidate_1063: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n Nil)).
Lemma candidate_1064: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1065: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1066: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_1067: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1068: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1069: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1070: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1071: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1072: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1073: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1074: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_1075: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_1076: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1077: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_1078: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1079: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_1080: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_1081: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_1082: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_1083: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y (rev x)) lf6)   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1084: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1085: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x (rev lf6)))   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1086: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x lf6))   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1087: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x (rev lf6))) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1088: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x lf6)) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1089: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (qreva y Nil) Nil) (qreva x lf6)).
Lemma candidate_1090: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (rev (rev (rev y))) (qreva x lf6)).
Lemma candidate_1091: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (rev (lfappend y Nil)) (qreva x lf6)).
Lemma candidate_1092: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (rev y) Nil) (qreva x lf6)).
Lemma candidate_1093: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1094: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1095: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1096: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_1097: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_1098: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1099: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_1100: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_1101: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (qreva y lf7) (lfappend (rev x) (rev lf6))).
Lemma candidate_1102: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (qreva y lf7) (rev (lfappend lf6 x))).
Lemma candidate_1103: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (qreva y lf7) (rev (qreva lf6 x))).
Lemma candidate_1104: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (qreva y lf7) (lfappend (rev x) lf6)).
Lemma candidate_1105: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (qreva y lf7) (qreva x (rev lf6))).
Lemma candidate_1106: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1107: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend lf7 (lfappend x y)) lf6)   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1108: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (qreva lf7 (lfappend x y)) lf6)   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1109: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x (lfappend y Nil)) lf6)   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1110: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (rev (qreva y (rev x))) lf6)   (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1111: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1112: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_1113: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1114: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva (lfappend x y) lf6).
Lemma candidate_1115: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_1116: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1117: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x (rev lf6))).
Lemma candidate_1118: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_1119: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_1120: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_1121: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_1122: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_1123: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_1124: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_1125: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1126: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_1127: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_1128: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1129: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x (rev lf6))).
Lemma candidate_1130: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y lf7) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_1131: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_1132: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_1133: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_1134: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_1135: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_1136: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_1137: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1138: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1139: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1140: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_1141: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_1142: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1143: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y (rev lf7)) (qreva x (Cons n lf7))).
Lemma candidate_1144: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (lfappend lf7 (rev y)) (qreva x (Cons n lf7))).
Lemma candidate_1145: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva lf7 (rev y)) (qreva x (Cons n lf7))).
Lemma candidate_1146: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1147: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y Nil) (qreva x (Cons n lf7))).
Lemma candidate_1148: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev y) (qreva x (Cons n lf7))).
Lemma candidate_1149: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (lfappend (rev x) (Cons n (rev lf7)))).
Lemma candidate_1150: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1151: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n (rev lf7)))).
Lemma candidate_1152: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1153: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n Nil))).
Lemma candidate_1154: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1155: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n lf7)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1156: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n (rev lf7))))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1157: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n lf7)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1158: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1159: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1160: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1161: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1162: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_1163: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1164: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1165: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1166: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1167: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend lf7 (lfappend x y)) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1168: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (qreva lf7 (lfappend x y)) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1169: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x (lfappend y Nil)) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1170: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (rev (qreva y (rev x))) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1171: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (qreva (rev x) y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1172: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_1173: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y (rev lf7)).
Lemma candidate_1174: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (lfappend lf7 (rev y)).
Lemma candidate_1175: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva lf7 (rev y)).
Lemma candidate_1176: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y lf7).
Lemma candidate_1177: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (qreva y Nil).
Lemma candidate_1178: forall (lf7 : lst) (y : lst), @eq lst (qreva y lf7) (rev y).
Lemma candidate_1179: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_1180: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_1181: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n (rev lf7))).
Lemma candidate_1182: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n lf7)).
Lemma candidate_1183: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (qreva x (Cons n Nil)).
Lemma candidate_1184: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1185: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1186: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_1187: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1188: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1189: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1190: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1191: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_1192: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n (rev lf7)))).
Lemma candidate_1193: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1194: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1195: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1196: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y lf7) (qreva x (Cons n lf7)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1197: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1198: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1199: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1200: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_1201: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_1202: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1203: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (qreva lf7 (Cons n Nil)).
Lemma candidate_1204: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1205: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_1206: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_1207: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_1208: forall (lf7 : lst) (n : natural), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_1209: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1210: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1211: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1212: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1213: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1214: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1215: forall (n : natural) (x : lst) (lf5 : lst) (lf2 : lst), @eq lst lf2 (lfappend lf5 (qreva x (Cons n (Nil)))).
Lemma candidate_1216: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1217: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1218: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1219: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1220: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1221: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1222: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1223: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1224: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1225: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1226: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1227: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1228: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1229: @eq lst Nil (Nil).
Lemma candidate_1230: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1231: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_1232: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_1233: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_1234: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_1235: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_1236: forall (n : natural) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (qreva lf4 (Cons n (Nil))) (lfappend lf5 (qreva x (Cons n (Nil)))).
Lemma candidate_1237: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1238: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1239: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1240: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1241: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1242: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1243: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1244: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1245: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1246: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1247: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1248: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1249: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1250: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1251: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1252: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1253: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1254: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1255: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1256: @eq lst Nil (Nil).
Lemma candidate_1257: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1258: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_1259: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_1260: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_1261: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_1262: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_1263: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1264: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1265: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1266: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1267: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1268: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1269: forall (y : lst) (x : lst) (lf2 : lst) (lf6 : lst), @eq lst lf2 (lfappend (qreva y (Nil)) (qreva x lf6)).
Lemma candidate_1270: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_1271: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_1272: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_1273: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_1274: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_1275: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_1276: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1277: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1278: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1279: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1280: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1281: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1282: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1283: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_1284: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_1285: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1286: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva y (qreva x (rev lf6))).
Lemma candidate_1287: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_1288: @eq lst Nil (Nil).
Lemma candidate_1289: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_1290: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_1291: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_1292: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1293: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_1294: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1295: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst lf2 (lfappend (qreva y (Nil)) (qreva x (Cons n (Nil)))).
Lemma candidate_1296: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1297: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1298: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1299: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1300: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1301: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1302: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1303: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1304: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1305: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1306: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1307: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1308: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1309: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1310: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1311: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1312: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1313: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1314: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1315: @eq lst Nil (Nil).
Lemma candidate_1316: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y (rev x)) lf6)   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1317: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1318: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x (rev lf6)))   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1319: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x lf6))   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1320: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x (rev lf6))) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1321: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x lf6)) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1322: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_1323: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_1324: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_1325: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_1326: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_1327: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_1328: forall (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (qreva y (Nil)) (qreva x lf6)).
Lemma candidate_1329: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) (rev lf6)).
Lemma candidate_1330: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (lfappend lf6 x)).
Lemma candidate_1331: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_1332: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_1333: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x (rev lf6)).
Lemma candidate_1334: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (qreva x lf6).
Lemma candidate_1335: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) (rev lf6)).
Lemma candidate_1336: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (lfappend lf6 lf4)).
Lemma candidate_1337: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_1338: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_1339: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 (rev lf6)).
Lemma candidate_1340: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (qreva lf4 lf6).
Lemma candidate_1341: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1342: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1343: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1344: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1345: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1346: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1347: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1348: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_1349: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (rev y) (qreva x (rev lf6))).
Lemma candidate_1350: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1351: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva y (qreva x (rev lf6))).
Lemma candidate_1352: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_1353: @eq lst Nil (Nil).
Lemma candidate_1354: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1355: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_1356: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_1357: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_1358: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_1359: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_1360: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (qreva lf4 (Cons n (Nil)))   (lfappend (qreva y (Nil)) (qreva x (Cons n (Nil)))).
Lemma candidate_1361: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1362: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1363: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1364: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1365: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1367: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1368: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1369: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1370: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1371: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1372: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1373: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1374: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1375: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1376: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1377: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1378: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1379: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1380: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1381: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1382: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1383: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1384: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1385: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1386: @eq lst Nil (Nil).
Lemma candidate_1387: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1388: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_1389: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_1390: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_1391: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva lf4 (Cons n Nil)).
Lemma candidate_1392: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_1393: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1394: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1395: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1396: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1397: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1398: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1399: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (qreva (lfappend x Nil) (Cons n Nil))).
Lemma candidate_1400: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (lfappend (qreva x Nil) (Cons n Nil))).
Lemma candidate_1401: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev (rev x))) (Cons n Nil))).
Lemma candidate_1402: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (lfappend (rev (lfappend x Nil)) (Cons n Nil))).
Lemma candidate_1403: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1404: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1405: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1406: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1407: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1408: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1409: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1410: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1411: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend (lfappend x (rev lf5)) Nil) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1412: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (qreva lf5 Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1413: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1414: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1415: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1416: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1417: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x y) (Cons n (Nil)))   (lfappend lf5 (qreva x (Cons n (Nil)))).
Lemma candidate_1418: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1419: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1420: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1421: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1422: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1423: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1424: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1425: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1426: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1427: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1428: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_1429: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1430: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1431: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1432: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1433: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1434: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1435: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1436: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1437: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1438: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1439: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_1440: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_1441: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_1442: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_1443: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 3559 seconds
Duplicates removed: 1074
Filtered by Quickchick: 204
Filtered by script: 22
Remaining: 143

Lemmas: 
Lemma candidate_90: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_468: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_91: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_19: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_89: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_88: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_87: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_15: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_61: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_671: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_464: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_672: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_466: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_465: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_60: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_109: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_97: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_24: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_58: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_481: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_474: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_463: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_59: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_108: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_96: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_57: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_479: forall (lf3 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y Nil) lf3).
Lemma candidate_472: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_106: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_94: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_826: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (qreva y (qreva x lf7)).
Lemma candidate_56: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_480: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_473: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_107: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_95: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_1221: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_694: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_477: forall (lf3 : lst) (y : lst), @eq lst (qreva y (rev (rev lf3))) (lfappend (qreva y Nil) lf3).
Lemma candidate_470: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_105: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_93: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_478: forall (lf3 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_471: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_407: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_34: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_54: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_51: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1217: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1216: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_714: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_678: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x lf6)).
Lemma candidate_1321: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x lf6)) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1287: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_712: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_676: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (lfappend x (rev lf5)) lf6).
Lemma candidate_403: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_402: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1283: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_2: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1218: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1002: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_711: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_675: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend (lfappend lf5 (rev x)) lf6).
Lemma candidate_476: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_469: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_418: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_71: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1219: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1003: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1001: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_404: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_1319: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x lf6))   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1316: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y (rev x)) lf6)   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1285: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1282: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1090: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (rev (rev (rev y))) (qreva x lf6)).
Lemma candidate_1000: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) (qreva lf5 Nil)) lf6)   (lfappend lf5 (qreva x lf6)).
Lemma candidate_405: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_1092: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (rev y) Nil) (qreva x lf6)).
Lemma candidate_1091: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (rev (lfappend y Nil)) (qreva x lf6)).
Lemma candidate_1148: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev y) (qreva x (Cons n lf7))).
Lemma candidate_419: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_416: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_69: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_999: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend (lfappend x (rev lf5)) Nil) lf6)   (lfappend lf5 (qreva x lf6)).
Lemma candidate_1364: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1312: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1089: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (qreva y Nil) Nil) (qreva x lf6)).
Lemma candidate_420: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1239: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1224: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1052: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1311: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1147: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y Nil) (qreva x (Cons n lf7))).
Lemma candidate_1414: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1241: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1238: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1226: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1223: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1050: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_735: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_687: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n lf7))).
Lemma candidate_415: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1415: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1413: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1237: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1222: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1051: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1049: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1365: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1362: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1313: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1310: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1412: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (qreva lf5 Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1242: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1227: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1314: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1411: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend (lfappend x (rev lf5)) Nil) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1361: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1309: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_3: forall (lf4 : lst) (x : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_786: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (qreva lf7 lf2).
Lemma candidate_783: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_787: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_785: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf7 lf2).
Lemma candidate_784: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf2 lf7).
Lemma candidate_11: forall (n : natural) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_4: forall (n : natural) (lf7 : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend lf5 (qreva x lf7)), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_12: forall (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_5: forall (lf7 : lst) (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_7: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_13: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_6: forall (n : natural) (lf7 : lst) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva lf4 (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_14: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_8: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (lfappend lf5 (qreva x lf7)), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_9: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_10: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
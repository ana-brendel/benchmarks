File Information
- File name: goal38
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal38_theorem0_56_goal37
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal38_theorem0_56_goal37
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 : natural) (y0 z0 : lst)
  (_ : or (@eq bool (mem y0 x0) true) (@eq bool (mem z0 x0) true)),
@eq bool (mem (lfappend y0 z0) x0) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (mem (lfappend y z) x) true

* Hypothesis:
x : natural
H : @eq bool (mem z x) true
y : lst
z : lst

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : lst
z : lst

* Terms:
mem z x : bool
mem (lfappend y z) x : bool
@eq bool (mem (lfappend y z) x) true : Prop
bool : Set
x : natural
lst : Set
y : lst
z : lst
true : bool
natural : Set
lfappend y z : lst
@eq bool (mem z x) true : Prop

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
mem  : forall (_ : lst) (_ : natural), bool
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 108 seconds
Generalized Variables:
lf3 : bool = true
lf1 : bool = mem (lfappend y z) x
lf2 : lst = lfappend y z

Generalizations:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (mem lf2 x) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (mem (lfappend y z) x) lf3.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (mem lf2 x) true.
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (mem (lfappend y z) x) true.


<---VALIDITY CHECKS--->
Time elapsed: 143 seconds
Valid:

Invalid:
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (mem (lfappend y z) x) true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (mem lf2 x) true.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (mem (lfappend y z) x) lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (mem lf2 x) lf3.
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 152 seconds
Generalizations:
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (mem (lfappend y z) x) true.
Lemma conj8_imp: forall (x : natural) (y : lst) (z : lst), forall _ : @eq bool (mem z x) true, @eq bool (mem (lfappend y z) x) true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (mem lf2 x) true.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (mem (lfappend y z) x) lf3.
Lemma conj4_imp: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), forall _ : @eq bool (mem z x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (mem lf2 x) lf3.
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 165 seconds
Valid:
Lemma conj8_imp: forall (x : natural) (y : lst) (z : lst), forall _ : @eq bool (mem z x) true, @eq bool (mem (lfappend y z) x) true.

Invalid:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (mem lf2 x) lf3.
Lemma conj4_imp: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), forall _ : @eq bool (mem z x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (mem (lfappend y z) x) lf3.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (mem lf2 x) true.
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (mem (lfappend y z) x) true.


<---CREATE SKETCHES--->
Time elapsed: 165 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool (##hole##) lf3
Sketch conj3_term_sketch0 : @eq bool (mem lf2 x) (##hole##)
Sketch conj4_imp_sketch0 : forall _ : @eq bool (mem z x) lf3, @eq bool (##hole##) lf3
Sketch conj4_imp_sketch1 : forall _ : @eq bool (##hole##) lf3, @eq bool (mem (lfappend y z) x) lf3
Sketch conj4_imp_sketch2 : forall _ : @eq bool (mem z x) lf3, @eq bool (mem (##hole##) x) lf3
Sketch conj4_imp_term_sketch0 : @eq bool (mem (lfappend y z) x) (##hole##)
Sketch conj4_imp_term_sketch1 : @eq bool (mem z x) (##hole##)
Sketch conj4_imp_term_sketch2 : @eq lst (lfappend y z) (##hole##)
Sketch conj4_sketch0 : @eq bool (##hole##) lf3
Sketch conj4_sketch1 : @eq bool (mem (##hole##) x) lf3
Sketch conj4_term_sketch0 : @eq bool (mem (lfappend y z) x) (##hole##)
Sketch conj4_term_sketch1 : @eq lst (lfappend y z) (##hole##)
Sketch conj5_sketch0 : @eq bool lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq bool true (##hole##)
Sketch conj7_sketch0 : @eq bool (mem lf2 x) (##hole##)
Sketch conj7_sketch1 : @eq bool (##hole##) true
Sketch conj7_term_sketch0 : @eq bool true (##hole##)
Sketch conj7_term_sketch1 : @eq bool (mem lf2 x) (##hole##)
Sketch conj8_sketch0 : @eq bool (##hole##) true
Sketch conj8_sketch1 : @eq bool (mem (lfappend y z) x) (##hole##)
Sketch conj8_sketch2 : @eq bool (mem (##hole##) x) true
Sketch conj8_term_sketch0 : @eq bool (mem (lfappend y z) x) (##hole##)
Sketch conj8_term_sketch1 : @eq bool true (##hole##)
Sketch conj8_term_sketch2 : @eq lst (lfappend y z) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 368 seconds
Problems per Sketch:
Sketch conj4_imp_sketch2 --> Problem  synth_5
Sketch conj7_sketch1 --> Problem  synth_11
Sketch conj5_sketch0 --> Problem  synth_10
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj4_imp_term_sketch2 --> Problem  synth_8
Sketch conj7_term_sketch0 --> Problem  synth_11
Sketch conj4_imp_term_sketch0 --> Problem  synth_6
Sketch conj8_sketch1 --> Problem  synth_6
Sketch conj7_sketch0 --> Problem  synth_2
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_9
Sketch conj4_term_sketch1 --> Problem  synth_8
Sketch conj4_imp_sketch1 --> Problem  synth_4
Sketch conj8_term_sketch0 --> Problem  synth_6
Sketch conj4_imp_term_sketch1 --> Problem  synth_7
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj8_sketch2 --> Problem  synth_12
Sketch conj8_sketch0 --> Problem  synth_11
Sketch conj7_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch1 --> Problem  synth_11
Sketch conj4_term_sketch0 --> Problem  synth_6
Sketch conj8_term_sketch2 --> Problem  synth_8
Sketch conj5_term_sketch0 --> Problem  synth_11
Sketch conj4_imp_sketch0 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 461 seconds

Problem: synth_10
 lf1
 true

Problem: synth_8
 lfappend (lfappend y (lfappend z Nil)) Nil
 lfappend (lfappend y Nil) (lfappend z Nil)
 lfappend (lfappend y Nil) z
 lfappend (lfappend y z) Nil
 lfappend y (lfappend z Nil)
 lfappend y z

Problem: synth_3
 orb match x with | Succ _ => false | Zero => true end true
 orb (eqb x x) (mem z x)
 orb (eqb x x) false
 eqb x x
 lf3
 true

Problem: synth_9

Problem: synth_12

Problem: synth_6
 orb (eqb x x) (mem z x)
 mem (lfappend z y) x
 orb (eqb x x) (mem y x)
 orb (eqb x x) false
 eqb x x
 true

Problem: synth_11
 true

Problem: synth_7
 mem (lfappend z (lfappend z z)) x
 mem (lfappend z (lfappend z Nil)) x
 orb (eqb x (Succ x)) (mem z x)
 mem (lfappend z z) x
 mem (lfappend z Nil) x
 mem z x

Problem: synth_5

Problem: synth_4
 mem (lfappend z (lfappend z z)) x
 mem (lfappend z (lfappend z Nil)) x
 orb (eqb x (Succ x)) (mem z x)
 mem (lfappend z z) x
 mem (lfappend z Nil) x
 mem z x

Problem: synth_1
 lf3
 true

Problem: synth_2
 orb (eqb x Zero) (mem lf2 x)
 mem (lfappend lf2 Nil) x
 orb (eqb x x) false
 mem lf2 x
 eqb x x
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 461 seconds
Lemmas:
Lemma candidate_1: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem z x) true, @eq bool (mem (lfappend y z) x) true.
Lemma candidate_2: forall (lf3 : bool), @eq bool (lf3) lf3.
Lemma candidate_3: forall (lf3 : bool), @eq bool (true) lf3.
Lemma candidate_4: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (orb (eqb x Zero) (mem lf2 x)).
Lemma candidate_5: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (mem (lfappend lf2 Nil) x).
Lemma candidate_6: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (orb (eqb x x) false).
Lemma candidate_7: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (mem lf2 x).
Lemma candidate_8: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (eqb x x).
Lemma candidate_9: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (true).
Lemma candidate_10: forall (lf3 : bool) (z : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (orb match x with | Succ _ => false | Zero => true end true) lf3.
Lemma candidate_11: forall (lf3 : bool) (z : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (orb (eqb x x) (mem z x)) lf3.
Lemma candidate_12: forall (lf3 : bool) (z : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (orb (eqb x x) false) lf3.
Lemma candidate_13: forall (lf3 : bool) (z : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (eqb x x) lf3.
Lemma candidate_14: forall (lf3 : bool) (z : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (lf3) lf3.
Lemma candidate_15: forall (lf3 : bool) (z : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (true) lf3.
Lemma candidate_16: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem (lfappend z (lfappend z z)) x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma candidate_17: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem (lfappend z (lfappend z Nil)) x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma candidate_18: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall _ : @eq bool (orb (eqb x (Succ x)) (mem z x)) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma candidate_19: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem (lfappend z z) x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma candidate_20: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem (lfappend z Nil) x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma candidate_21: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem z x) lf3, @eq bool (mem (lfappend y z) x) lf3.
Lemma candidate_22: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem z x)).
Lemma candidate_23: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (mem (lfappend z y) x).
Lemma candidate_24: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem y x)).
Lemma candidate_25: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) false).
Lemma candidate_26: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (eqb x x).
Lemma candidate_27: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (true).
Lemma candidate_28: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (lfappend z (lfappend z z)) x).
Lemma candidate_29: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (lfappend z (lfappend z Nil)) x).
Lemma candidate_30: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (eqb x (Succ x)) (mem z x)).
Lemma candidate_31: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (lfappend z z) x).
Lemma candidate_32: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (lfappend z Nil) x).
Lemma candidate_33: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_34: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y (lfappend z Nil)) Nil).
Lemma candidate_35: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y Nil) (lfappend z Nil)).
Lemma candidate_36: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y Nil) z).
Lemma candidate_37: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y z) Nil).
Lemma candidate_38: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend y (lfappend z Nil)).
Lemma candidate_39: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend y z).
Lemma candidate_40: forall (lf3 : bool), @eq bool (lf3) lf3.
Lemma candidate_41: forall (lf3 : bool), @eq bool (true) lf3.
Lemma candidate_42: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem z x)).
Lemma candidate_43: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (mem (lfappend z y) x).
Lemma candidate_44: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem y x)).
Lemma candidate_45: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) false).
Lemma candidate_46: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (eqb x x).
Lemma candidate_47: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (true).
Lemma candidate_48: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y (lfappend z Nil)) Nil).
Lemma candidate_49: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y Nil) (lfappend z Nil)).
Lemma candidate_50: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y Nil) z).
Lemma candidate_51: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y z) Nil).
Lemma candidate_52: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend y (lfappend z Nil)).
Lemma candidate_53: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend y z).
Lemma candidate_54: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_55: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_56: @eq bool true (true).
Lemma candidate_57: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (orb (eqb x Zero) (mem lf2 x)).
Lemma candidate_58: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (mem (lfappend lf2 Nil) x).
Lemma candidate_59: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (orb (eqb x x) false).
Lemma candidate_60: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (mem lf2 x).
Lemma candidate_61: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (eqb x x).
Lemma candidate_62: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (true).
Lemma candidate_63: @eq bool (true) true.
Lemma candidate_64: @eq bool true (true).
Lemma candidate_65: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (orb (eqb x Zero) (mem lf2 x)).
Lemma candidate_66: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (mem (lfappend lf2 Nil) x).
Lemma candidate_67: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (orb (eqb x x) false).
Lemma candidate_68: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (mem lf2 x).
Lemma candidate_69: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (eqb x x).
Lemma candidate_70: forall (x : natural) (lf2 : lst), @eq bool (mem lf2 x) (true).
Lemma candidate_71: @eq bool (true) true.
Lemma candidate_72: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem z x)).
Lemma candidate_73: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (mem (lfappend z y) x).
Lemma candidate_74: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem y x)).
Lemma candidate_75: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) false).
Lemma candidate_76: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (eqb x x).
Lemma candidate_77: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (true).
Lemma candidate_78: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem z x)).
Lemma candidate_79: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (mem (lfappend z y) x).
Lemma candidate_80: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) (mem y x)).
Lemma candidate_81: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (orb (eqb x x) false).
Lemma candidate_82: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (eqb x x).
Lemma candidate_83: forall (z : lst) (y : lst) (x : natural), @eq bool (mem (lfappend y z) x) (true).
Lemma candidate_84: @eq bool true (true).
Lemma candidate_85: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y (lfappend z Nil)) Nil).
Lemma candidate_86: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y Nil) (lfappend z Nil)).
Lemma candidate_87: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y Nil) z).
Lemma candidate_88: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend (lfappend y z) Nil).
Lemma candidate_89: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend y (lfappend z Nil)).
Lemma candidate_90: forall (z : lst) (y : lst), @eq lst (lfappend y z) (lfappend y z).
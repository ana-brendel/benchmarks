File Information
- File name: goal40
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal40_subset_append_81_append_cons
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal40_subset_append_81_append_cons
- Namespace: adtind
- Proof name: subset_append
- Theorem: Theorem subset_append: forall x0 y0 : lst, @eq bool (lst_subset x0 (lfappend y0 x0)) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_subset x (lfappend y (Cons n x))) true

* Hypothesis:
IHx : forall y0 : lst, @eq bool (lst_subset x (lfappend y0 x)) true
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lfappend _UNBOUND_REL_1 x : lst
lfappend y (Cons n x) : lst
bool : Set
x : lst
Cons n x : lst
lst_subset x (lfappend _UNBOUND_REL_1 x) : bool
@eq bool (lst_subset x (lfappend y (Cons n x))) true : Prop
lst : Set
y : lst
lst_subset x (lfappend y (Cons n x)) : bool
natural : Set
true : bool
n : natural
@eq bool (lst_subset x (lfappend _UNBOUND_REL_1 x)) true : Prop
forall y0 : lst, @eq bool (lst_subset x (lfappend y0 x)) true : Prop

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
lst_subset  : forall (_ : lst) (_ : lst), bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons n x
lf1 : bool = lst_subset x (lfappend y (Cons n x))
lf4 : bool = true
lf2 : lst = lfappend y (Cons n x)

Generalizations:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend y lf3)) lf4.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend y lf3)) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend y (Cons n x))) lf4.
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend y (Cons n x))) true.


<---VALIDITY CHECKS--->
Time elapsed: 87 seconds
Valid:
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend y (Cons n x))) true.

Invalid:
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend y (Cons n x))) lf4.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend y lf3)) true.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend y lf3)) lf4.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 96 seconds
Generalizations:
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), forall _ : forall y0 : lst, @eq bool (lst_subset x (lfappend y0 x)) lf4,
@eq bool (lst_subset x (lfappend y (Cons n x))) lf4.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (lfappend y (Cons n x))) lf4.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend y lf3)) true.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj6_imp: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), forall _ : forall y0 : lst, @eq bool (lst_subset x (lfappend y0 x)) lf4,
@eq bool (lst_subset x (lfappend y lf3)) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset x (lfappend y lf3)) lf4.
Lemma conj5_imp: forall (lf2 : lst) (x : lst) (lf4 : bool), forall _ : forall y0 : lst, @eq bool (lst_subset x (lfappend y0 x)) lf4,
@eq bool (lst_subset x lf2) lf4.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
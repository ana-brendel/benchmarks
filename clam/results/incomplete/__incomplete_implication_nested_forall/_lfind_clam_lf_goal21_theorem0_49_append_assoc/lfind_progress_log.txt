File Information
- File name: goal21
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal21_theorem0_49_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal21_theorem0_49_append_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rotate (len x0) (lfappend x0 y0)) (lfappend y0 x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (rotate (len x) (lfappend x y0)) (lfappend y0 x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
x : lst
len x : natural
y : lst
rotate (len x) (lfappend x _UNBOUND_REL_1) : lst
lfappend (lfappend x y) (Cons n Nil) : lst
lfappend x _UNBOUND_REL_1 : lst
lfappend _UNBOUND_REL_1 x : lst
@eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)) : Prop
lfappend y (Cons n x) : lst
rotate (len x) (lfappend (lfappend x y) (Cons n Nil)) : lst
Cons n x : lst
lst : Set
Cons n Nil : lst
forall y0 : lst, @eq lst (rotate (len x) (lfappend x y0)) (lfappend y0 x) : Prop
natural : Set
n : natural
lfappend x y : lst
Nil : lst
@eq lst (rotate (len x) (lfappend x _UNBOUND_REL_1))
  (lfappend _UNBOUND_REL_1 x) : Prop

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
rotate  : forall (_ : natural) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lfappend y (Cons n x)
lf7 : natural = len x
lf1 : lst = rotate (len x) (lfappend (lfappend x y) (Cons n Nil))
lf4 : lst = lfappend x y
lf5 : lst = Cons n Nil
lf2 : lst = lfappend (lfappend x y) (Cons n Nil)
lf8 : lst = Nil
lf6 : lst = Cons n x

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj33: forall (lf2 : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 lf2) lf3.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 lf5)) lf3.
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) lf3.
Lemma conj47: forall (lf4 : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8))) lf3.
Lemma conj63: forall (x : lst) (y : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil))) lf3.
Lemma conj97: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (rotate (len x) lf2) lf3.
Lemma conj101: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 lf5)) lf3.
Lemma conj109: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) lf3.
Lemma conj111: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5)) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8))) lf3.
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil))) lf3.
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 lf2) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 lf2) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 lf5)) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 lf5)) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8))) (lfappend y lf6).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil))) (lfappend y lf6).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst (rotate (len x) lf2) (lfappend y lf6).
Lemma conj226: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) lf2) (lfappend y (Cons n x)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rotate (len x) (lfappend lf4 lf5)) (lfappend y lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 lf5)) (lfappend y (Cons n x)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) (lfappend y lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) (lfappend y (Cons n x)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) (lfappend y lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5)) (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5))
  (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y lf6).
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 182 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)).

Invalid:
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5))
  (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5)) (lfappend y lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) (lfappend y (Cons n x)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) (lfappend y lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) (lfappend y (Cons n x)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) (lfappend y lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 lf5)) (lfappend y (Cons n x)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rotate (len x) (lfappend lf4 lf5)) (lfappend y lf6).
Lemma conj226: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) lf2) (lfappend y (Cons n x)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst (rotate (len x) lf2) (lfappend y lf6).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil))) (lfappend y lf6).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8))) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 lf5)) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 lf5)) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 lf2) (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 lf2) (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil))) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8))) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5)) lf3.
Lemma conj111: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) lf3.
Lemma conj109: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) lf3.
Lemma conj101: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 lf5)) lf3.
Lemma conj97: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (rotate (len x) lf2) lf3.
Lemma conj63: forall (x : lst) (y : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil))) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8))) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) lf3.
Lemma conj47: forall (lf4 : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) lf3.
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) lf3.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 lf5)) lf3.
Lemma conj33: forall (lf2 : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 241 seconds
Generalizations:
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y lf6).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj253: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y lf6).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5))
  (lfappend y (Cons n x)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5)) (lfappend y lf6).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) (lfappend y (Cons n x)).
Lemma conj239: forall (lf6 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) (lfappend y lf6).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) (lfappend y (Cons n x)).
Lemma conj237: forall (lf6 : lst) (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) (lfappend y lf6).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rotate (len x) (lfappend lf4 lf5)) (lfappend y (Cons n x)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rotate (len x) (lfappend lf4 lf5)) (lfappend y lf6).
Lemma conj226: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rotate (len x) lf2) (lfappend y (Cons n x)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (x : lst) (y : lst), @eq lst (rotate (len x) lf2) (lfappend y lf6).
Lemma conj192_imp: forall (x : lst) (y : lst) (n : natural) (lf7 : natural), forall
  _ : forall y0 : lst, @eq lst (rotate lf7 (lfappend x y0)) (lfappend y0 x),
@eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil)))
  (lfappend y (Cons n x)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil))) (lfappend y lf6).
Lemma conj190_imp: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), forall
  _ : forall y0 : lst, @eq lst (rotate lf7 (lfappend x y0)) (lfappend y0 x),
@eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8)))
  (lfappend y (Cons n x)).
Lemma conj189: forall (lf6 : lst) (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8))) (lfappend y lf6).
Lemma conj182: forall (lf5 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) (lfappend y (Cons n x)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) (lfappend y lf6).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) (lfappend y (Cons n x)).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) (lfappend y lf6).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) (lfappend y (Cons n x)).
Lemma conj173: forall (lf6 : lst) (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) (lfappend y lf6).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 lf5)) (lfappend y (Cons n x)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 (lfappend lf4 lf5)) (lfappend y lf6).
Lemma conj162: forall (lf2 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural), @eq lst (rotate lf7 lf2) (lfappend y (Cons n x)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : natural), @eq lst (rotate lf7 lf2) (lfappend y lf6).
Lemma conj130: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj129: forall (lf6 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf6).
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n Nil))) lf3.
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) (Cons n lf8))) lf3.
Lemma conj117: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (rotate (len x) (lfappend (lfappend x y) lf5)) lf3.
Lemma conj111: forall (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 (Cons n Nil))) lf3.
Lemma conj109: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 (Cons n lf8))) lf3.
Lemma conj101: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rotate (len x) (lfappend lf4 lf5)) lf3.
Lemma conj97: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (rotate (len x) lf2) lf3.
Lemma conj63: forall (x : lst) (y : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n Nil))) lf3.
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) (Cons n lf8))) lf3.
Lemma conj53: forall (lf5 : lst) (x : lst) (y : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend (lfappend x y) lf5)) lf3.
Lemma conj47: forall (lf4 : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 (Cons n Nil))) lf3.
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (n : natural) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 (Cons n lf8))) lf3.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 (lfappend lf4 lf5)) lf3.
Lemma conj33: forall (lf2 : lst) (lf7 : natural) (lf3 : lst), @eq lst (rotate lf7 lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
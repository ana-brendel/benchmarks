File Information
- File name: goal60
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal60_theorem0_34_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal60_theorem0_34_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x y0 : lst) (z0 : natural),
@eq lst (rev (lfappend x (lfappend y0 (Cons z0 Nil))))
  (Cons z0 (rev (lfappend x y0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y))

* Hypothesis:
y : lst
z : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
y : lst
z : natural

* Terms:
lfappend y (Cons z Nil) : lst
Cons z Nil : lst
@eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)) : Prop
lst : Set
y : lst
z : natural
Cons z (rev y) : lst
rev (lfappend y (Cons z Nil)) : lst
natural : Set
rev y : lst
Nil : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons z (rev y)
lf1 : lst = rev (lfappend y (Cons z Nil))
lf4 : lst = Cons z Nil
lf5 : lst = rev y
lf2 : lst = lfappend y (Cons z Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj19: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (rev (lfappend y lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z lf6))) lf3.
Lemma conj28: forall (y : lst) (z : natural) (lf3 : lst), @eq lst (rev (lfappend y (Cons z Nil))) lf3.
Lemma conj33: forall (lf5 : lst) (lf1 : lst) (z : natural), @eq lst lf1 (Cons z lf5).
Lemma conj37: forall (lf1 : lst) (y : lst) (z : natural), @eq lst lf1 (Cons z (rev y)).
Lemma conj49: forall (lf2 : lst) (lf5 : lst) (z : natural), @eq lst (rev lf2) (Cons z lf5).
Lemma conj51: forall (lf5 : lst) (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z lf5).
Lemma conj53: forall (lf2 : lst) (y : lst) (z : natural), @eq lst (rev lf2) (Cons z (rev y)).
Lemma conj55: forall (lf4 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y lf4)) (Cons z (rev y)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z lf5).
Lemma conj60: forall (lf5 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z lf5).
Lemma conj63: forall (lf6 : lst) (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z lf6))) (Cons z (rev y)).
Lemma conj64: forall (y : lst) (z : natural), @eq lst (rev (lfappend y (Cons z Nil))) (Cons z (rev y)).
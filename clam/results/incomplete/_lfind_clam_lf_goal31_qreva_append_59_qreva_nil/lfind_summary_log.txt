LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_append_59_qreva_nil

Number of Lemmas: 1443
Number of Lemmas (after duplicates removed): 369
Number of Lemmas (after QuickChick used to filter): 165
* Number of Candidate Lemmas: 143

Time until ranking: 3561
Time to complete: 13230

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 15

Lemma candidate_1283: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva (lfappend x y) lf6).
Lemma candidate_2: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1311: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1147: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y Nil) (qreva x (Cons n lf7))).
Lemma candidate_3: forall (lf4 : lst) (x : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva lf4 lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_11: forall (n : natural) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva lf4 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_4: forall (n : natural) (lf7 : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend lf5 (qreva x lf7)), @eq lst (qreva lf4 (Cons n lf7)) (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_12: forall (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)), @eq lst (qreva lf4 lf6) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_5: forall (lf7 : lst) (y : lst) (lf4 : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva lf4 lf6) (lfappend (qreva y lf7) (qreva x lf6)).
Lemma candidate_7: forall (y : lst) (x : lst) (lf5 : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva (lfappend x y) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_13: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (qreva lf4 Nil) (lfappend (qreva y Nil) (qreva x Nil)), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_6: forall (n : natural) (lf7 : lst) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (qreva lf4 lf7) (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva lf4 (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).
Lemma candidate_14: forall (n : natural) (y : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend lf5 (qreva x Nil)), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_8: forall (n : natural) (lf7 : lst) (y : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (qreva (lfappend x y) lf7) (lfappend lf5 (qreva x lf7)), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_10: forall (n : natural) (lf7 : lst) (y : lst) (x : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (qreva y lf7) (qreva x (Cons n lf7))).

Category 3 (provable):
Count = 2

Lemma candidate_91: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_19: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.

Category 3 (not provable):
Count = 126

Lemma candidate_90: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_468: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_89: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_88: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_87: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_15: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_61: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_671: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (rev (qreva lf6 x)).
Lemma candidate_464: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_672: forall (x : lst) (lf6 : lst), @eq lst (qreva x lf6) (lfappend (rev x) lf6).
Lemma candidate_466: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_465: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_23: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (rev (qreva lf6 lf4)).
Lemma candidate_60: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_109: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf3) (lfappend lf5 lf3).
Lemma candidate_97: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) lf3).
Lemma candidate_24: forall (lf4 : lst) (lf6 : lst), @eq lst (qreva lf4 lf6) (lfappend (rev lf4) lf6).
Lemma candidate_58: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_481: forall (lf3 : lst) (y : lst), @eq lst (qreva y lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_474: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y lf3).
Lemma candidate_463: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_59: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_108: forall (lf3 : lst) (lf5 : lst), @eq lst (rev (qreva lf3 (rev lf5))) (lfappend lf5 lf3).
Lemma candidate_96: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (rev (qreva lf3 (rev lf5))).
Lemma candidate_57: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_479: forall (lf3 : lst) (y : lst), @eq lst (rev (qreva lf3 y)) (lfappend (qreva y Nil) lf3).
Lemma candidate_472: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (rev (qreva lf3 y)).
Lemma candidate_106: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf3))) (lfappend lf5 lf3).
Lemma candidate_94: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (rev (rev lf3))).
Lemma candidate_826: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (qreva y (qreva x lf7)).
Lemma candidate_56: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (qreva y (qreva x lf6)).
Lemma candidate_480: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) lf3) (lfappend (qreva y Nil) lf3).
Lemma candidate_473: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) lf3).
Lemma candidate_107: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_95: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (lfappend lf5 (lfappend lf3 Nil)).
Lemma candidate_1221: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_694: forall (lf7 : lst) (n : natural) (x : lst), @eq lst (qreva x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_477: forall (lf3 : lst) (y : lst), @eq lst (qreva y (rev (rev lf3))) (lfappend (qreva y Nil) lf3).
Lemma candidate_470: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (rev (rev lf3))).
Lemma candidate_105: forall (lf3 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf3 Nil)) (lfappend lf5 lf3).
Lemma candidate_93: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf3) (qreva (rev lf5) (lfappend lf3 Nil)).
Lemma candidate_478: forall (lf3 : lst) (y : lst), @eq lst (qreva y (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_471: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (qreva y (lfappend lf3 Nil)).
Lemma candidate_407: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (rev lf4) (Cons n Nil)).
Lemma candidate_34: forall (lf7 : lst) (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n lf7)) (lfappend (rev lf4) (Cons n lf7)).
Lemma candidate_54: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (rev y) (qreva x lf6)).
Lemma candidate_51: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1217: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_1216: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_714: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev lf5) (qreva x lf6)) (lfappend lf5 (qreva x lf6)).
Lemma candidate_678: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (rev lf5) (qreva x lf6)).
Lemma candidate_1321: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva y (qreva x lf6)) (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1287: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6)) (qreva y (qreva x lf6)).
Lemma candidate_712: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_676: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (qreva (lfappend x (rev lf5)) lf6).
Lemma candidate_403: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (lfappend (qreva lf4 Nil) (Cons n Nil)).
Lemma candidate_402: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil)) (qreva (lfappend lf4 Nil) (Cons n Nil)).
Lemma candidate_1218: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1002: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_711: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_675: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 (qreva x lf6)) (lfappend (lfappend lf5 (rev x)) lf6).
Lemma candidate_476: forall (lf3 : lst) (y : lst), @eq lst (lfappend (rev y) (lfappend lf3 Nil)) (lfappend (qreva y Nil) lf3).
Lemma candidate_469: forall (lf3 : lst) (y : lst), @eq lst (lfappend (qreva y Nil) lf3) (lfappend (rev y) (lfappend lf3 Nil)).
Lemma candidate_418: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil)) (qreva y (qreva x (Cons n Nil))).
Lemma candidate_71: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7)) (qreva y (qreva x (Cons n lf7))).
Lemma candidate_1219: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1003: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_1001: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) lf6) (lfappend lf5 (qreva x lf6)).
Lemma candidate_404: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (rev (rev lf4))) (Cons n Nil)).
Lemma candidate_1319: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev y) (qreva x lf6))   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1316: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y (rev x)) lf6)   (lfappend (qreva y Nil) (qreva x lf6)).
Lemma candidate_1285: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (rev y) (qreva x lf6)).
Lemma candidate_1282: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf6))   (lfappend (qreva y (rev x)) lf6).
Lemma candidate_1090: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (rev (rev (rev y))) (qreva x lf6)).
Lemma candidate_1000: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (qreva (rev x) (qreva lf5 Nil)) lf6)   (lfappend lf5 (qreva x lf6)).
Lemma candidate_405: forall (n : natural) (lf4 : lst), @eq lst (qreva lf4 (Cons n Nil))   (lfappend (rev (lfappend lf4 Nil)) (Cons n Nil)).
Lemma candidate_1092: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (rev y) Nil) (qreva x lf6)).
Lemma candidate_1091: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (rev (lfappend y Nil)) (qreva x lf6)).
Lemma candidate_1148: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (lfappend (rev y) (qreva x (Cons n lf7))).
Lemma candidate_419: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_416: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_69: forall (lf7 : lst) (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n lf7))   (qreva y (lfappend (rev x) (Cons n lf7))).
Lemma candidate_999: forall (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (qreva (lfappend (lfappend x (rev lf5)) Nil) lf6)   (lfappend lf5 (qreva x lf6)).
Lemma candidate_1364: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1312: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1089: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva (lfappend x y) lf6)   (lfappend (lfappend (qreva y Nil) Nil) (qreva x lf6)).
Lemma candidate_420: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1239: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1224: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1052: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1414: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1241: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1238: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1226: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1223: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1050: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (rev lf5)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_735: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf7)))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_687: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf7)))   (lfappend lf5 (lfappend (rev x) (Cons n lf7))).
Lemma candidate_415: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1415: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1413: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1237: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1222: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1051: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev (lfappend lf5 (rev x))) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1049: forall (lf7 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (qreva lf5 Nil)) (Cons n lf7))   (lfappend lf5 (qreva x (Cons n lf7))).
Lemma candidate_1365: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1362: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1313: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1310: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1412: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (qreva (rev x) (qreva lf5 Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1242: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1227: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1314: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1411: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend (lfappend x (rev lf5)) Nil) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1361: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1309: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_786: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (qreva lf7 lf2).
Lemma candidate_783: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_787: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_785: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf7 lf2).
Lemma candidate_784: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst lf2 (lfappend lf2 lf7).
Lemma candidate_9: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf7)         (lfappend (qreva y lf7) (qreva x lf7)), @eq lst (qreva (lfappend x y) lf6) (lfappend (qreva y lf7) (qreva x lf6)).
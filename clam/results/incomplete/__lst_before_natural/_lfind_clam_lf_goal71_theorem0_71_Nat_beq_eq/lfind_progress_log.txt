File Information
- File name: goal71
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal71_theorem0_71_Nat_beq_eq
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal71_theorem0_71_Nat_beq_eq
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : natural) (z0 : lst) (_ : not (@eq natural x0 y0)),
@eq natural (count x0 (insort y0 z0)) (count x0 z0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (Succ (if lfeqb x n then Succ (count x z) else count x z))
  (count x z)

* Hypothesis:
IHz : @eq natural (count x (insort y z)) (count x z)
Heqb : @eq bool (lfeqb x n) false
x : natural
H : not (@eq natural x y)
Heqb0 : @eq bool (less y n) true
y : natural
Heqb1 : @eq bool (lfeqb x y) true
z : lst
n : natural

* Types:
Set
natural
Prop
lst
forall _ : bool, Set
bool

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : lst
n : natural

* Terms:
count x z : natural
@eq natural (Succ (if lfeqb x n then Succ (count x z) else count x z))
  (count x z) : Prop
lfeqb x y : bool
@eq natural x y : Prop
not (@eq natural x y) : Prop
Succ (count x z) : natural
Succ (if lfeqb x n then Succ (count x z) else count x z) : natural
x : natural
@eq bool (lfeqb x y) true : Prop
insort y z : lst
count x (insort y z) : natural
fun _ : bool => natural : forall _ : bool, Set
if lfeqb x n then Succ (count x z) else count x z : natural
y : natural
@eq bool (lfeqb x n) false : Prop
true : bool
false : bool
bool : Set
less y n : bool
lst : Set
@eq bool (less y n) true : Prop
lfeqb x n : bool
z : lst
natural : Set
n : natural
@eq natural (count x (insort y z)) (count x z) : Prop

* Functions:
Succ  : forall _ : natural, natural
count  : forall (_ : natural) (_ : lst), natural
lfeqb  : forall (_ : natural) (_ : natural), bool
less  : forall (_ : natural) (_ : natural), bool
not  : forall _ : Prop, Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
insort  : forall (_ : natural) (_ : lst), lst
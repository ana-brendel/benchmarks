File Information
- File name: goal42
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal42_theorem0_69_Nat_beq_eq
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal42_theorem0_69_Nat_beq_eq
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 : natural) (y0 z0 : lst) (_ : @eq bool (lst_mem x0 y0) true),
@eq bool (lst_mem x0 (lst_union y0 z0)) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_mem x z) true

* Hypothesis:
Heqb : @eq bool (lst_mem n z) true
x : natural
H : @eq bool (lfeqb x n) true
y : lst
z : lst
n : natural
IHy : forall _ : @eq bool (lst_mem x y) true,
@eq bool (lst_mem x (lst_union y z)) true

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : lst
z : lst
n : natural

* Terms:
lst_mem n z : bool
x : natural
forall _ : @eq bool (lst_mem x y) true,
@eq bool (lst_mem x (lst_union y z)) true : Prop
lst_mem x (lst_union y z) : bool
@eq bool (lst_mem x z) true : Prop
y : lst
@eq bool (lfeqb x n) true : Prop
true : bool
lst_mem x y : bool
@eq bool (lst_mem n z) true : Prop
lst_union y z : lst
lst_mem x z : bool
bool : Set
@eq bool (lst_mem x (lst_union y z)) true : Prop
lst : Set
lfeqb x n : bool
z : lst
@eq bool (lst_mem x y) true : Prop
natural : Set
n : natural

* Functions:
lfeqb  : forall (_ : natural) (_ : natural), bool
lst_union  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf1 : bool = lst_mem x z
lf2 : bool = true

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj3: forall (lf2 : bool) (x : natural) (z : lst), @eq bool (lst_mem x z) lf2.
Lemma conj4: forall (x : natural) (z : lst), @eq bool (lst_mem x z) true.


<---VALIDITY CHECKS--->
Time elapsed: 9 seconds
Valid:

Invalid:
Lemma conj4: forall (x : natural) (z : lst), @eq bool (lst_mem x z) true.
Lemma conj3: forall (lf2 : bool) (x : natural) (z : lst), @eq bool (lst_mem x z) lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 16 seconds
Generalizations:
Lemma conj4: forall (x : natural) (z : lst), @eq bool (lst_mem x z) true.
Lemma conj3: forall (lf2 : bool) (x : natural) (z : lst), @eq bool (lst_mem x z) lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 22 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj3: forall (lf2 : bool) (x : natural) (z : lst), @eq bool (lst_mem x z) lf2.
Lemma conj4: forall (x : natural) (z : lst), @eq bool (lst_mem x z) true.


<---CREATE SKETCHES--->
Time elapsed: 22 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool true (##hole##)
Sketch conj3_sketch0 : @eq bool (##hole##) lf2
Sketch conj3_term_sketch0 : @eq bool (lst_mem x z) (##hole##)
Sketch conj4_sketch0 : @eq bool (##hole##) true
Sketch conj4_sketch1 : @eq bool (lst_mem x z) (##hole##)
Sketch conj4_term_sketch0 : @eq bool (lst_mem x z) (##hole##)
Sketch conj4_term_sketch1 : @eq bool true (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 27 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj4_sketch0 --> Problem  synth_5
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_6


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 89 seconds

Problem: synth_3
 false

Problem: synth_6
 orb match x with | Succ _ => false | Zero => true end false
 orb (lfeqb x Zero) false
 lfeqb x x
 match x with | Succ _ => false | Zero => true end
 lfeqb x Zero
 true

Problem: synth_5
 false

Problem: synth_4
 lfeqb x (Succ Zero)
 lst_mem x z
 lst_mem Zero z
 mem z x
 mem z Zero
 false

Problem: synth_1
 true

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 90 seconds
Lemmas:
Lemma candidate_1: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_2: @eq bool true (true).
Lemma candidate_3: forall (lf2 : bool), @eq bool (false) lf2.
Lemma candidate_4: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lfeqb x (Succ Zero)).
Lemma candidate_5: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lst_mem x z).
Lemma candidate_6: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lst_mem Zero z).
Lemma candidate_7: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (mem z x).
Lemma candidate_8: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (mem z Zero).
Lemma candidate_9: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (false).
Lemma candidate_10: @eq bool (false) true.
Lemma candidate_11: forall (z : lst) (x : natural), @eq bool (lst_mem x z)   (orb match x with | Succ _ => false | Zero => true end false).
Lemma candidate_12: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (orb (lfeqb x Zero) false).
Lemma candidate_13: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lfeqb x x).
Lemma candidate_14: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_15: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lfeqb x Zero).
Lemma candidate_16: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (true).
Lemma candidate_17: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lfeqb x (Succ Zero)).
Lemma candidate_18: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lst_mem x z).
Lemma candidate_19: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lst_mem Zero z).
Lemma candidate_20: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (mem z x).
Lemma candidate_21: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (mem z Zero).
Lemma candidate_22: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (false).
Lemma candidate_23: @eq bool true (true).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 115 seconds
Duplicates removed: 7
Filtered by Quickchick: 13
Filtered by script: 3
Remaining: 0

Lemmas: 
File Information
- File name: goal47
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal47_theorem0_66_eqb_not_eq
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal47_theorem0_66_eqb_not_eq
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : natural) (z0 : lst) (_ : not (@eq natural x0 y0)),
@eq bool (mem (insort z0 y0) x0) (mem z0 x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))

* Hypothesis:
IHz : @eq bool (mem (insort z y) x) (mem z x)
x : natural
H : not (@eq natural x y)
y : natural
z : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : lst
n : natural

* Terms:
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)) : Prop
lfeqb x y : bool
@eq natural x y : Prop
not (@eq natural x y) : Prop
x : natural
mem (insort z y) x : bool
y : natural
@eq bool (mem (insort z y) x) (mem z x) : Prop
orb (lfeqb x y) (orb (lfeqb x n) (mem z x)) : bool
mem z x : bool
orb (lfeqb x n) (mem z x) : bool
bool : Set
lst : Set
lfeqb x n : bool
z : lst
natural : Set
n : natural
insort z y : lst

* Functions:
mem  : forall (_ : lst) (_ : natural), bool
lfeqb  : forall (_ : natural) (_ : natural), bool
orb  : forall (_ : bool) (_ : bool), bool
not  : forall _ : Prop, Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
insort  : forall (_ : lst) (_ : natural), lst

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : bool = lfeqb x y
lf1 : bool = orb (lfeqb x y) (orb (lfeqb x n) (mem z x))
lf4 : bool = lfeqb x n
lf5 : bool = mem z x
lf2 : bool = orb (lfeqb x n) (mem z x)

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).


<---VALIDITY CHECKS--->
Time elapsed: 54 seconds
Valid:

Invalid:
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 77 seconds
Generalizations:
Lemma conj32_imp: forall (x : natural) (y : natural) (z : lst) (n : natural), forall
  _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).
Lemma conj30_imp: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj28_imp: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), forall
  _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)),
@eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj26_imp: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj25_imp: forall (lf2 : bool) (x : natural) (y : natural), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 107 seconds
Valid:
Lemma conj25_imp: forall (lf2 : bool) (x : natural) (y : natural), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj26_imp: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj28_imp: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), forall
  _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)),
@eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj30_imp: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), forall _ : not (@eq natural x y),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj32_imp: forall (x : natural) (y : natural) (z : lst) (n : natural), forall
  _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)),
@eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf5 : bool) (lf4 : bool) (lf1 : bool), @eq bool lf1 (orb lf4 lf5).
Lemma conj4: forall (x : natural) (lf4 : bool) (lf1 : bool) (z : lst), @eq bool lf1 (orb lf4 (mem z x)).
Lemma conj6: forall (lf5 : bool) (x : natural) (lf1 : bool) (n : natural), @eq bool lf1 (orb (lfeqb x n) lf5).
Lemma conj8: forall (x : natural) (lf1 : bool) (z : lst) (n : natural), @eq bool lf1 (orb (lfeqb x n) (mem z x)).
Lemma conj9: forall (lf2 : bool) (lf3 : bool), @eq bool (orb lf3 lf2) lf2.
Lemma conj10: forall (lf5 : bool) (lf4 : bool) (lf3 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj12: forall (x : natural) (lf4 : bool) (z : lst) (lf3 : bool), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj14: forall (lf5 : bool) (x : natural) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj16: forall (x : natural) (z : lst) (n : natural) (lf3 : bool), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) (mem z x)).
Lemma conj25: forall (lf2 : bool) (x : natural) (y : natural), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : bool) (y : natural), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma conj28: forall (x : natural) (lf4 : bool) (y : natural) (z : lst), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma conj30: forall (lf5 : bool) (x : natural) (y : natural) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma conj32: forall (x : natural) (y : natural) (z : lst) (n : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x)).


<---CREATE SKETCHES--->
Time elapsed: 107 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool (orb lf4 lf5) (##hole##)
Sketch conj4_sketch0 : @eq bool lf1 (orb lf4 (##hole##))
Sketch conj4_sketch1 : @eq bool lf1 (##hole##)
Sketch conj4_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj4_term_sketch1 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj6_sketch0 : @eq bool lf1 (orb (##hole##) lf5)
Sketch conj6_sketch1 : @eq bool lf1 (##hole##)
Sketch conj6_term_sketch0 : @eq bool (lfeqb x n) (##hole##)
Sketch conj6_term_sketch1 : @eq bool (orb (lfeqb x n) lf5) (##hole##)
Sketch conj8_sketch0 : @eq bool lf1 (orb (lfeqb x n) (##hole##))
Sketch conj8_sketch1 : @eq bool lf1 (##hole##)
Sketch conj8_sketch2 : @eq bool lf1 (orb (##hole##) (mem z x))
Sketch conj8_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj8_term_sketch2 : @eq bool (lfeqb x n) (##hole##)
Sketch conj9_sketch0 : @eq bool (##hole##) lf2
Sketch conj9_term_sketch0 : @eq bool (orb lf3 lf2) (##hole##)
Sketch conj10_sketch0 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj10_sketch1 : @eq bool (##hole##) (orb lf4 lf5)
Sketch conj10_term_sketch0 : @eq bool (orb lf4 lf5) (##hole##)
Sketch conj10_term_sketch1 : @eq bool (orb lf3 (orb lf4 lf5)) (##hole##)
Sketch conj12_sketch0 : @eq bool (orb lf3 (orb lf4 (##hole##))) (orb lf4 (##hole##))
Sketch conj12_sketch1 : @eq bool (##hole##) (orb lf4 (mem z x))
Sketch conj12_sketch2 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj12_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj12_term_sketch1 : @eq bool (orb lf3 (orb lf4 (mem z x))) (##hole##)
Sketch conj12_term_sketch2 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj14_sketch0 : @eq bool (##hole##) (orb (lfeqb x n) lf5)
Sketch conj14_sketch1 : @eq bool (orb lf3 (orb (##hole##) lf5)) (orb (##hole##) lf5)
Sketch conj14_sketch2 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj14_term_sketch0 : @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (lfeqb x n) (##hole##)
Sketch conj14_term_sketch2 : @eq bool (orb (lfeqb x n) lf5) (##hole##)
Sketch conj16_sketch0 : @eq bool (orb lf3 (orb (lfeqb x n) (##hole##))) (orb (lfeqb x n) (##hole##))
Sketch conj16_sketch1 : @eq bool (orb lf3 (##hole##)) (##hole##)
Sketch conj16_sketch2 : @eq bool (orb lf3 (orb (##hole##) (mem z x))) (orb (##hole##) (mem z x))
Sketch conj16_sketch3 : @eq bool (##hole##) (orb (lfeqb x n) (mem z x))
Sketch conj16_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj16_term_sketch1 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj16_term_sketch2 : @eq bool (lfeqb x n) (##hole##)
Sketch conj16_term_sketch3 : @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (##hole##)
Sketch conj25_sketch0 : @eq bool (##hole##) lf2
Sketch conj25_sketch1 : @eq bool (orb (##hole##) lf2) lf2
Sketch conj25_term_sketch0 : @eq bool (orb (lfeqb x y) lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq bool (lfeqb x y) (##hole##)
Sketch conj26_sketch0 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj26_sketch1 : @eq bool (orb (##hole##) (orb lf4 lf5)) (orb lf4 lf5)
Sketch conj26_sketch2 : @eq bool (##hole##) (orb lf4 lf5)
Sketch conj26_term_sketch0 : @eq bool (orb lf4 lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq bool (lfeqb x y) (##hole##)
Sketch conj26_term_sketch2 : @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (##hole##)
Sketch conj28_sketch0 : @eq bool (orb (lfeqb x y) (orb lf4 (##hole##))) (orb lf4 (##hole##))
Sketch conj28_sketch1 : @eq bool (orb (##hole##) (orb lf4 (mem z x))) (orb lf4 (mem z x))
Sketch conj28_sketch2 : @eq bool (##hole##) (orb lf4 (mem z x))
Sketch conj28_sketch3 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj28_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj28_term_sketch1 : @eq bool (lfeqb x y) (##hole##)
Sketch conj28_term_sketch2 : @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (##hole##)
Sketch conj28_term_sketch3 : @eq bool (orb lf4 (mem z x)) (##hole##)
Sketch conj30_sketch0 : @eq bool (orb (##hole##) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5)
Sketch conj30_sketch1 : @eq bool (##hole##) (orb (lfeqb x n) lf5)
Sketch conj30_sketch2 : @eq bool (orb (lfeqb x y) (orb (##hole##) lf5)) (orb (##hole##) lf5)
Sketch conj30_sketch3 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj30_term_sketch0 : @eq bool (lfeqb x y) (##hole##)
Sketch conj30_term_sketch1 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (##hole##)
Sketch conj30_term_sketch2 : @eq bool (lfeqb x n) (##hole##)
Sketch conj30_term_sketch3 : @eq bool (orb (lfeqb x n) lf5) (##hole##)
Sketch conj32_sketch0 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (##hole##)))
  (orb (lfeqb x n) (##hole##))
Sketch conj32_sketch1 : @eq bool (orb (lfeqb x y) (##hole##)) (##hole##)
Sketch conj32_sketch2 : @eq bool (orb (##hole##) (orb (lfeqb x n) (mem z x)))
  (orb (lfeqb x n) (mem z x))
Sketch conj32_sketch3 : @eq bool (orb (lfeqb x y) (orb (##hole##) (mem z x)))
  (orb (##hole##) (mem z x))
Sketch conj32_sketch4 : @eq bool (##hole##) (orb (lfeqb x n) (mem z x))
Sketch conj32_term_sketch0 : @eq bool (mem z x) (##hole##)
Sketch conj32_term_sketch1 : @eq bool (orb (lfeqb x n) (mem z x)) (##hole##)
Sketch conj32_term_sketch2 : @eq bool (lfeqb x y) (##hole##)
Sketch conj32_term_sketch3 : @eq bool (lfeqb x n) (##hole##)
Sketch conj32_term_sketch4 : @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 592 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_42
Sketch conj30_sketch0 --> Problem  synth_36
Sketch conj12_sketch0 --> Problem  synth_17
Sketch conj28_sketch0 --> Problem  synth_33
Sketch conj16_sketch3 --> Problem  synth_25
Sketch conj26_sketch2 --> Problem  synth_15
Sketch conj25_sketch1 --> Problem  synth_27
Sketch conj16_term_sketch1 --> Problem  synth_11
Sketch conj14_term_sketch2 --> Problem  synth_8
Sketch conj8_sketch1 --> Problem  synth_1
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj6_term_sketch0 --> Problem  synth_7
Sketch conj30_term_sketch3 --> Problem  synth_8
Sketch conj8_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch1 --> Problem  synth_29
Sketch conj26_term_sketch2 --> Problem  synth_32
Sketch conj14_term_sketch1 --> Problem  synth_7
Sketch conj12_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch1 --> Problem  synth_11
Sketch conj32_sketch0 --> Problem  synth_39
Sketch conj30_sketch2 --> Problem  synth_37
Sketch conj10_sketch1 --> Problem  synth_15
Sketch conj9_term_sketch0 --> Problem  synth_13
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_5
Sketch conj16_sketch1 --> Problem  synth_14
Sketch conj12_sketch1 --> Problem  synth_18
Sketch conj12_sketch2 --> Problem  synth_14
Sketch conj32_sketch3 --> Problem  synth_41
Sketch conj32_term_sketch3 --> Problem  synth_7
Sketch conj28_sketch2 --> Problem  synth_18
Sketch conj26_term_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch2 --> Problem  synth_7
Sketch conj30_term_sketch1 --> Problem  synth_38
Sketch conj28_term_sketch2 --> Problem  synth_35
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj30_term_sketch0 --> Problem  synth_29
Sketch conj8_sketch0 --> Problem  synth_9
Sketch conj32_term_sketch2 --> Problem  synth_29
Sketch conj12_term_sketch2 --> Problem  synth_5
Sketch conj10_sketch0 --> Problem  synth_14
Sketch conj8_term_sketch2 --> Problem  synth_7
Sketch conj32_sketch2 --> Problem  synth_40
Sketch conj14_sketch1 --> Problem  synth_21
Sketch conj32_sketch1 --> Problem  synth_30
Sketch conj26_term_sketch1 --> Problem  synth_29
Sketch conj14_sketch2 --> Problem  synth_14
Sketch conj16_sketch2 --> Problem  synth_24
Sketch conj10_term_sketch1 --> Problem  synth_16
Sketch conj30_sketch3 --> Problem  synth_30
Sketch conj25_term_sketch1 --> Problem  synth_29
Sketch conj30_sketch1 --> Problem  synth_20
Sketch conj26_sketch0 --> Problem  synth_30
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj12_term_sketch1 --> Problem  synth_19
Sketch conj9_sketch0 --> Problem  synth_12
Sketch conj8_sketch2 --> Problem  synth_10
Sketch conj26_sketch1 --> Problem  synth_31
Sketch conj28_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_6
Sketch conj32_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch1 --> Problem  synth_1
Sketch conj30_term_sketch2 --> Problem  synth_7
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj28_sketch3 --> Problem  synth_30
Sketch conj25_sketch0 --> Problem  synth_12
Sketch conj28_sketch1 --> Problem  synth_34
Sketch conj32_sketch4 --> Problem  synth_25
Sketch conj32_term_sketch1 --> Problem  synth_11
Sketch conj6_term_sketch1 --> Problem  synth_8
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj16_sketch0 --> Problem  synth_23
Sketch conj14_sketch0 --> Problem  synth_20
Sketch conj14_term_sketch0 --> Problem  synth_22
Sketch conj16_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch3 --> Problem  synth_26
Sketch conj25_term_sketch0 --> Problem  synth_28


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 986 seconds

Problem: synth_28
 orb lf2 (orb lf2 (lfeqb x y))
 orb lf2 (orb lf2 (lfeqb y x))
 orb (lfeqb x y) lf2
 orb (lfeqb y x) lf2
 orb lf2 (lfeqb x y)
 orb lf2 (lfeqb y x)

Problem: synth_17

Problem: synth_29
 orb (lfeqb x y) (less x Zero)
 orb (lfeqb y x) (less x Zero)
 orb (lfeqb x y) false
 orb (lfeqb y x) false
 lfeqb x y
 lfeqb y x

Problem: synth_26
 orb lf3 (orb lf3 (lfeqb x n))
 orb lf3 (orb lf3 (lfeqb n x))
 orb (lfeqb x n) lf3
 orb (lfeqb n x) lf3
 orb lf3 (lfeqb x n)
 orb lf3 (lfeqb n x)

Problem: synth_9

Problem: synth_30

Problem: synth_11
 orb (mem z x) (lfeqb x n)
 orb (lfeqb n x) (mem z x)
 orb (mem z x) (lfeqb n x)
 orb (lfeqb x n) (mem (sort z) x)
 orb (lfeqb x n) (mem z x)
 mem (insort z n) x

Problem: synth_39

Problem: synth_1

Problem: synth_15

Problem: synth_31

Problem: synth_14

Problem: synth_8
 orb lf5 (orb lf5 (lfeqb x n))
 orb lf5 (orb lf5 (lfeqb n x))
 orb (lfeqb x n) lf5
 orb (lfeqb n x) lf5
 orb lf5 (lfeqb x n)
 orb lf5 (lfeqb n x)

Problem: synth_34

Problem: synth_12

Problem: synth_5
 orb (mem z x) (orb lf4 lf4)
 orb (mem z x) (orb lf4 false)
 orb lf4 (orb lf4 (mem z x))
 orb lf4 (mem (sort z) x)
 orb (mem z x) lf4
 orb lf4 (mem z x)

Problem: synth_37

Problem: synth_2
 orb lf5 (orb lf4 lf5)
 orb lf4 (orb lf5 lf5)
 orb lf5 (orb lf4 false)
 orb lf4 (orb lf5 false)
 orb lf5 lf4
 orb lf4 lf5

Problem: synth_22
 orb lf5 (orb lf3 (lfeqb n x))
 orb lf3 (orb lf5 (lfeqb n x))
 orb (lfeqb x n) lf3
 orb (lfeqb n x) lf3
 orb lf3 (lfeqb x n)
 orb lf3 (lfeqb n x)

Problem: synth_20

Problem: synth_18

Problem: synth_21

Problem: synth_41

Problem: synth_25

Problem: synth_13
 orb lf2 (orb lf3 lf2)
 orb lf3 (orb lf2 lf2)
 orb lf2 (orb lf3 false)
 orb lf3 (orb lf2 false)
 orb lf2 lf3
 orb lf3 lf2

Problem: synth_6

Problem: synth_7
 orb (lfeqb x n) (less x Zero)
 orb (lfeqb n x) (less x Zero)
 orb (lfeqb x n) false
 orb (lfeqb n x) false
 lfeqb x n
 lfeqb n x

Problem: synth_4
 orb (mem z x) (less x Zero)
 mem (insort z (Succ x)) x
 mem (sort (sort z)) x
 orb (mem z x) false
 mem (sort z) x
 mem z x

Problem: synth_38
 orb (lfeqb x n) (lfeqb x y)
 orb (lfeqb n x) (lfeqb x y)
 orb (lfeqb x y) (lfeqb n x)
 orb (lfeqb y x) (lfeqb n x)
 orb (lfeqb x n) (lfeqb y x)
 orb (lfeqb n x) (lfeqb y x)

Problem: synth_23

Problem: synth_27

Problem: synth_42
 orb (lfeqb x n) (lfeqb x y)
 orb (lfeqb n x) (lfeqb x y)
 orb (lfeqb x y) (lfeqb n x)
 orb (lfeqb y x) (lfeqb n x)
 orb (lfeqb x n) (lfeqb y x)
 orb (lfeqb n x) (lfeqb y x)

Problem: synth_16
 orb lf4 (orb lf3 lf5)
 orb lf3 (orb lf4 lf5)
 orb lf4 (orb lf3 false)
 orb lf3 (orb lf4 false)
 orb lf4 lf3
 orb lf3 lf4

Problem: synth_19
 orb lf4 (orb lf3 lf4)
 orb lf3 (orb lf4 lf4)
 orb lf4 (orb lf3 false)
 orb lf3 (orb lf4 false)
 orb lf4 lf3
 orb lf3 lf4

Problem: synth_40

Problem: synth_10

Problem: synth_33

Problem: synth_24

Problem: synth_3

Problem: synth_32
 orb lf5 (orb lf4 (lfeqb y x))
 orb lf4 (orb lf5 (lfeqb y x))
 orb (lfeqb x y) lf4
 orb (lfeqb y x) lf4
 orb lf4 (lfeqb x y)
 orb lf4 (lfeqb y x)

Problem: synth_36

Problem: synth_35
 orb lf4 (orb lf4 (lfeqb x y))
 orb lf4 (orb lf4 (lfeqb y x))
 orb (lfeqb x y) lf4
 orb (lfeqb y x) lf4
 orb lf4 (lfeqb x y)
 orb lf4 (lfeqb y x)

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 986 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural) (lf2 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma candidate_2: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_3: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_4: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma candidate_5: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
Lemma candidate_6: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_7: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_8: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_9: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_10: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_11: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_12: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_13: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_14: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_15: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_16: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_17: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_18: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_19: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_20: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_21: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_22: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_23: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_24: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_25: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_26: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_27: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_28: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_29: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_30: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_31: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_32: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_33: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_34: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_35: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_36: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_37: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_38: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_39: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_40: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_41: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_42: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_43: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_44: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_45: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_46: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_47: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_48: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_49: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_50: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_51: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_52: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_53: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_54: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 (orb lf3 lf2)).
Lemma candidate_55: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf3 (orb lf2 lf2)).
Lemma candidate_56: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 (orb lf3 false)).
Lemma candidate_57: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf3 (orb lf2 false)).
Lemma candidate_58: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 lf3).
Lemma candidate_59: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf3 lf2).
Lemma candidate_60: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_61: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_62: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_63: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_64: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_65: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_66: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 (orb lf3 lf5)).
Lemma candidate_67: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf3 (orb lf4 lf5)).
Lemma candidate_68: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 (orb lf3 false)).
Lemma candidate_69: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf3 (orb lf4 false)).
Lemma candidate_70: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 lf3).
Lemma candidate_71: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf3 lf4).
Lemma candidate_72: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_73: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_74: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_75: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_76: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_77: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_78: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (orb lf3 lf4)).
Lemma candidate_79: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf3 (orb lf4 lf4)).
Lemma candidate_80: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (orb lf3 false)).
Lemma candidate_81: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf3 (orb lf4 false)).
Lemma candidate_82: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 lf3).
Lemma candidate_83: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf3 lf4).
Lemma candidate_84: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_85: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_86: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_87: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_88: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_89: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_90: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf5 (orb lf3 (lfeqb n x))).
Lemma candidate_91: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf3 (orb lf5 (lfeqb n x))).
Lemma candidate_92: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf3).
Lemma candidate_93: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb (lfeqb n x) lf3).
Lemma candidate_94: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf3 (lfeqb x n)).
Lemma candidate_95: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf3 (lfeqb n x)).
Lemma candidate_96: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_97: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_98: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_99: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_100: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_101: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_102: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_103: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_104: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_105: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_106: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_107: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_108: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_109: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_110: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_111: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_112: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_113: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_114: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_115: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_116: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_117: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_118: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_119: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_120: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_121: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_122: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_123: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_124: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_125: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_126: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x)))   (orb lf3 (orb lf3 (lfeqb x n))).
Lemma candidate_127: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x)))   (orb lf3 (orb lf3 (lfeqb n x))).
Lemma candidate_128: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb x n) lf3).
Lemma candidate_129: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb n x) lf3).
Lemma candidate_130: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb lf3 (lfeqb x n)).
Lemma candidate_131: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb lf3 (lfeqb n x)).
Lemma candidate_132: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (orb lf2 (lfeqb x y))).
Lemma candidate_133: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (orb lf2 (lfeqb y x))).
Lemma candidate_134: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb (lfeqb x y) lf2).
Lemma candidate_135: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb (lfeqb y x) lf2).
Lemma candidate_136: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (lfeqb x y)).
Lemma candidate_137: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (lfeqb y x)).
Lemma candidate_138: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_139: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_140: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_141: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_142: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_143: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_144: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_145: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_146: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_147: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_148: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_149: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 lf5).
Lemma candidate_150: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_151: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_152: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_153: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_154: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_155: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_156: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf5 (orb lf4 (lfeqb y x))).
Lemma candidate_157: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 (orb lf5 (lfeqb y x))).
Lemma candidate_158: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb (lfeqb x y) lf4).
Lemma candidate_159: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb (lfeqb y x) lf4).
Lemma candidate_160: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 (lfeqb x y)).
Lemma candidate_161: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 (lfeqb y x)).
Lemma candidate_162: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_163: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_164: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_165: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_166: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_167: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_168: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_169: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_170: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_171: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_172: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_173: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_174: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x)))   (orb lf4 (orb lf4 (lfeqb x y))).
Lemma candidate_175: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x)))   (orb lf4 (orb lf4 (lfeqb y x))).
Lemma candidate_176: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb (lfeqb x y) lf4).
Lemma candidate_177: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb (lfeqb y x) lf4).
Lemma candidate_178: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (lfeqb x y)).
Lemma candidate_179: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (lfeqb y x)).
Lemma candidate_180: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_181: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_182: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_183: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_184: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_185: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem z x)).
Lemma candidate_186: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_187: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_188: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_189: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_190: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_191: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_192: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb (lfeqb x n) (lfeqb x y)).
Lemma candidate_193: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb (lfeqb n x) (lfeqb x y)).
Lemma candidate_194: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb (lfeqb x y) (lfeqb n x)).
Lemma candidate_195: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb (lfeqb y x) (lfeqb n x)).
Lemma candidate_196: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb (lfeqb x n) (lfeqb y x)).
Lemma candidate_197: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5))   (orb (lfeqb n x) (lfeqb y x)).
Lemma candidate_198: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_199: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_200: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_201: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_202: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_203: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_204: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_205: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_206: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb x n) lf5).
Lemma candidate_207: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_208: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_209: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_210: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_211: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_212: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_213: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_214: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_215: forall (z : lst) (x : natural), @eq bool (mem z x) (mem z x).
Lemma candidate_216: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_217: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_218: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_219: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_220: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem z x)).
Lemma candidate_221: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_222: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_223: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_224: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_225: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_226: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb x y).
Lemma candidate_227: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_228: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_229: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_230: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_231: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_232: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb x n).
Lemma candidate_233: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_234: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (lfeqb x y)).
Lemma candidate_235: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb n x) (lfeqb x y)).
Lemma candidate_236: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x y) (lfeqb n x)).
Lemma candidate_237: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb y x) (lfeqb n x)).
Lemma candidate_238: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (lfeqb y x)).
Lemma candidate_239: forall (n : natural) (z : lst) (y : natural) (x : natural), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb n x) (lfeqb y x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1411 seconds
Duplicates removed: 132
Filtered by Quickchick: 40
Filtered by script: 10
Remaining: 57

Lemmas: 
Lemma candidate_143: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (lfeqb y x).
Lemma candidate_29: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (lfeqb n x).
Lemma candidate_16: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort z) x).
Lemma candidate_58: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 lf3).
Lemma candidate_10: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 lf4).
Lemma candidate_15: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) false).
Lemma candidate_14: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (sort (sort z)) x).
Lemma candidate_141: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) false).
Lemma candidate_140: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) false).
Lemma candidate_27: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) false).
Lemma candidate_26: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) false).
Lemma candidate_55: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf3 (orb lf2 lf2)).
Lemma candidate_54: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 (orb lf3 lf2)).
Lemma candidate_13: forall (z : lst) (x : natural), @eq bool (mem z x) (mem (insort z (Succ x)) x).
Lemma candidate_7: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 lf5)).
Lemma candidate_6: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 lf5)).
Lemma candidate_57: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf3 (orb lf2 false)).
Lemma candidate_56: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf3 lf2) (orb lf2 (orb lf3 false)).
Lemma candidate_22: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) lf4).
Lemma candidate_12: forall (z : lst) (x : natural), @eq bool (mem z x) (orb (mem z x) (less x Zero)).
Lemma candidate_9: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf4 (orb lf5 false)).
Lemma candidate_8: forall (lf4 : bool) (lf5 : bool), @eq bool (orb lf4 lf5) (orb lf5 (orb lf4 false)).
Lemma candidate_139: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb y x) (less x Zero)).
Lemma candidate_138: forall (y : natural) (x : natural), @eq bool (lfeqb x y) (orb (lfeqb x y) (less x Zero)).
Lemma candidate_137: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (lfeqb y x)).
Lemma candidate_136: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (lfeqb x y)).
Lemma candidate_135: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb (lfeqb y x) lf2).
Lemma candidate_35: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb n x)).
Lemma candidate_34: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (lfeqb x n)).
Lemma candidate_33: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb (lfeqb n x) lf5).
Lemma candidate_25: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb n x) (less x Zero)).
Lemma candidate_24: forall (n : natural) (x : natural), @eq bool (lfeqb x n) (orb (lfeqb x n) (less x Zero)).
Lemma candidate_21: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (mem (sort z) x)).
Lemma candidate_66: forall (lf3 : bool) (lf4 : bool) (lf5 : bool), @eq bool (orb lf3 (orb lf4 lf5)) (orb lf4 (orb lf3 lf5)).
Lemma candidate_47: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (mem (insort z n) x).
Lemma candidate_20: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb lf4 (orb lf4 (mem z x))).
Lemma candidate_18: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 lf4)).
Lemma candidate_19: forall (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf4 (mem z x)) (orb (mem z x) (orb lf4 false)).
Lemma candidate_133: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (orb lf2 (lfeqb y x))).
Lemma candidate_132: forall (y : natural) (x : natural) (lf2 : bool), @eq bool (orb (lfeqb x y) lf2) (orb lf2 (orb lf2 (lfeqb x y))).
Lemma candidate_31: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb n x))).
Lemma candidate_30: forall (n : natural) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x n) lf5) (orb lf5 (orb lf5 (lfeqb x n))).
Lemma candidate_80: forall (lf3 : bool) (z : lst) (lf4 : bool) (x : natural), @eq bool (orb lf3 (orb lf4 (mem z x))) (orb lf4 (orb lf3 false)).
Lemma candidate_44: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb n x)).
Lemma candidate_43: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb n x) (mem z x)).
Lemma candidate_42: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (mem z x) (lfeqb x n)).
Lemma candidate_129: forall (lf3 : bool) (n : natural) (z : lst) (x : natural), @eq bool (orb lf3 (orb (lfeqb x n) (mem z x))) (orb (lfeqb n x) lf3).
Lemma candidate_1: forall (y : natural) (x : natural) (lf2 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) lf2) lf2.
Lemma candidate_45: forall (n : natural) (z : lst) (x : natural), @eq bool (orb (lfeqb x n) (mem z x)) (orb (lfeqb x n) (mem (sort z) x)).
Lemma candidate_157: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 (orb lf5 (lfeqb y x))).
Lemma candidate_156: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf5 (orb lf4 (lfeqb y x))).
Lemma candidate_91: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf3 (orb lf5 (lfeqb n x))).
Lemma candidate_90: forall (lf3 : bool) (n : natural) (x : natural) (lf5 : bool), @eq bool (orb lf3 (orb (lfeqb x n) lf5)) (orb lf5 (orb lf3 (lfeqb n x))).
Lemma candidate_2: forall (y : natural) (lf4 : bool) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb lf4 lf5)) (orb lf4 lf5).
Lemma candidate_4: forall (n : natural) (y : natural) (x : natural) (lf5 : bool), forall _ : not (@eq natural x y), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) lf5)) (orb (lfeqb x n) lf5).
Lemma candidate_3: forall (z : lst) (y : natural) (lf4 : bool) (x : natural), forall   _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)), @eq bool (orb (lfeqb x y) (orb lf4 (mem z x))) (orb lf4 (mem z x)).
Lemma candidate_5: forall (n : natural) (z : lst) (y : natural) (x : natural), forall   _ : and (@eq bool (mem (insort z y) x) (mem z x)) (not (@eq natural x y)), @eq bool (orb (lfeqb x y) (orb (lfeqb x n) (mem z x)))   (orb (lfeqb x n) (mem z x)).
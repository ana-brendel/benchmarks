File Information
- File name: goal22
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal22_theorem0_46_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal22_theorem0_46_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq bool (even (len (lfappend x0 y0))) (even (len (lfappend y0 x0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq bool (negb (even (len (lfappend x y))))
  (even (len (lfappend y (Cons n x))))

* Hypothesis:
IHx : forall y0 : lst,
@eq bool (even (len (lfappend x y0))) (even (len (lfappend y0 x)))
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
even (len (lfappend _UNBOUND_REL_1 x)) : bool
len (lfappend x y) : natural
forall y0 : lst,
@eq bool (even (len (lfappend x y0))) (even (len (lfappend y0 x))) : Prop
len (lfappend y (Cons n x)) : natural
x : lst
negb (even (len (lfappend x y))) : bool
y : lst
lfappend x _UNBOUND_REL_1 : lst
@eq bool (even (len (lfappend x _UNBOUND_REL_1)))
  (even (len (lfappend _UNBOUND_REL_1 x))) : Prop
even (len (lfappend x y)) : bool
lfappend _UNBOUND_REL_1 x : lst
lfappend y (Cons n x) : lst
@eq bool (negb (even (len (lfappend x y))))
  (even (len (lfappend y (Cons n x)))) : Prop
bool : Set
Cons n x : lst
len (lfappend x _UNBOUND_REL_1) : natural
lst : Set
len (lfappend _UNBOUND_REL_1 x) : natural
even (len (lfappend x _UNBOUND_REL_1)) : bool
natural : Set
n : natural
lfappend x y : lst
even (len (lfappend y (Cons n x))) : bool

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
even  : forall _ : natural, bool
negb  : forall _ : bool, bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = len (lfappend y (Cons n x))
lf7 : lst = lfappend x y
lf1 : bool = even (len (lfappend y (Cons n x)))
lf4 : bool = even (len (lfappend x y))
lf5 : lst = lfappend y (Cons n x)
lf2 : bool = negb (even (len (lfappend x y)))
lf8 : lst = Cons n x
lf6 : natural = len (lfappend x y)

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.
Lemma conj5: forall (lf4 : bool) (lf1 : bool), @eq bool (negb lf4) lf1.
Lemma conj21: forall (lf6 : natural) (lf1 : bool), @eq bool (negb (even lf6)) lf1.
Lemma conj22: forall (lf1 : bool) (lf7 : lst), @eq bool (negb (even (len lf7))) lf1.
Lemma conj33: forall (lf2 : bool) (lf3 : natural), @eq bool lf2 (even lf3).
Lemma conj37: forall (lf4 : bool) (lf3 : natural), @eq bool (negb lf4) (even lf3).
Lemma conj53: forall (lf6 : natural) (lf3 : natural), @eq bool (negb (even lf6)) (even lf3).
Lemma conj54: forall (lf7 : lst) (lf3 : natural), @eq bool (negb (even (len lf7))) (even lf3).
Lemma conj86: forall (x : lst) (lf1 : bool) (y : lst), @eq bool (negb (even (len (lfappend x y)))) lf1.
Lemma conj118: forall (x : lst) (y : lst) (lf3 : natural), @eq bool (negb (even (len (lfappend x y)))) (even lf3).
Lemma conj161: forall (lf2 : bool) (lf5 : lst), @eq bool lf2 (even (len lf5)).
Lemma conj165: forall (lf5 : lst) (lf4 : bool), @eq bool (negb lf4) (even (len lf5)).
Lemma conj169: forall (lf8 : lst) (lf2 : bool) (y : lst), @eq bool lf2 (even (len (lfappend y lf8))).
Lemma conj171: forall (lf2 : bool) (x : lst) (y : lst) (n : natural), @eq bool lf2 (even (len (lfappend y (Cons n x)))).
Lemma conj173: forall (lf8 : lst) (lf4 : bool) (y : lst), @eq bool (negb lf4) (even (len (lfappend y lf8))).
Lemma conj175: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (negb lf4) (even (len (lfappend y (Cons n x)))).
Lemma conj181: forall (lf6 : natural) (lf5 : lst), @eq bool (negb (even lf6)) (even (len lf5)).
Lemma conj182: forall (lf5 : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len lf5)).
Lemma conj189: forall (lf8 : lst) (lf6 : natural) (y : lst), @eq bool (negb (even lf6)) (even (len (lfappend y lf8))).
Lemma conj190: forall (lf8 : lst) (y : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y lf8))).
Lemma conj191: forall (lf6 : natural) (x : lst) (y : lst) (n : natural), @eq bool (negb (even lf6)) (even (len (lfappend y (Cons n x)))).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y (Cons n x)))).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len lf5)).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len (lfappend y lf8))).
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq bool (negb (even (len (lfappend x y))))
  (even (len (lfappend y (Cons n x)))).


<---VALIDITY CHECKS--->
Time elapsed: 158 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq bool (negb (even (len (lfappend x y))))
  (even (len (lfappend y (Cons n x)))).

Invalid:
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len (lfappend y lf8))).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len lf5)).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y (Cons n x)))).
Lemma conj191: forall (lf6 : natural) (x : lst) (y : lst) (n : natural), @eq bool (negb (even lf6)) (even (len (lfappend y (Cons n x)))).
Lemma conj190: forall (lf8 : lst) (y : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y lf8))).
Lemma conj189: forall (lf8 : lst) (lf6 : natural) (y : lst), @eq bool (negb (even lf6)) (even (len (lfappend y lf8))).
Lemma conj182: forall (lf5 : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len lf5)).
Lemma conj181: forall (lf6 : natural) (lf5 : lst), @eq bool (negb (even lf6)) (even (len lf5)).
Lemma conj175: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (negb lf4) (even (len (lfappend y (Cons n x)))).
Lemma conj173: forall (lf8 : lst) (lf4 : bool) (y : lst), @eq bool (negb lf4) (even (len (lfappend y lf8))).
Lemma conj171: forall (lf2 : bool) (x : lst) (y : lst) (n : natural), @eq bool lf2 (even (len (lfappend y (Cons n x)))).
Lemma conj169: forall (lf8 : lst) (lf2 : bool) (y : lst), @eq bool lf2 (even (len (lfappend y lf8))).
Lemma conj165: forall (lf5 : lst) (lf4 : bool), @eq bool (negb lf4) (even (len lf5)).
Lemma conj161: forall (lf2 : bool) (lf5 : lst), @eq bool lf2 (even (len lf5)).
Lemma conj118: forall (x : lst) (y : lst) (lf3 : natural), @eq bool (negb (even (len (lfappend x y)))) (even lf3).
Lemma conj86: forall (x : lst) (lf1 : bool) (y : lst), @eq bool (negb (even (len (lfappend x y)))) lf1.
Lemma conj54: forall (lf7 : lst) (lf3 : natural), @eq bool (negb (even (len lf7))) (even lf3).
Lemma conj53: forall (lf6 : natural) (lf3 : natural), @eq bool (negb (even lf6)) (even lf3).
Lemma conj37: forall (lf4 : bool) (lf3 : natural), @eq bool (negb lf4) (even lf3).
Lemma conj33: forall (lf2 : bool) (lf3 : natural), @eq bool lf2 (even lf3).
Lemma conj22: forall (lf1 : bool) (lf7 : lst), @eq bool (negb (even (len lf7))) lf1.
Lemma conj21: forall (lf6 : natural) (lf1 : bool), @eq bool (negb (even lf6)) lf1.
Lemma conj5: forall (lf4 : bool) (lf1 : bool), @eq bool (negb lf4) lf1.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 182 seconds
Generalizations:
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len (lfappend y lf8))).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len lf5)).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y (Cons n x)))).
Lemma conj191: forall (lf6 : natural) (x : lst) (y : lst) (n : natural), @eq bool (negb (even lf6)) (even (len (lfappend y (Cons n x)))).
Lemma conj190: forall (lf8 : lst) (y : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y lf8))).
Lemma conj189: forall (lf8 : lst) (lf6 : natural) (y : lst), @eq bool (negb (even lf6)) (even (len (lfappend y lf8))).
Lemma conj182: forall (lf5 : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len lf5)).
Lemma conj181: forall (lf6 : natural) (lf5 : lst), @eq bool (negb (even lf6)) (even (len lf5)).
Lemma conj175: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (negb lf4) (even (len (lfappend y (Cons n x)))).
Lemma conj173: forall (lf8 : lst) (lf4 : bool) (y : lst), @eq bool (negb lf4) (even (len (lfappend y lf8))).
Lemma conj171: forall (lf2 : bool) (x : lst) (y : lst) (n : natural), @eq bool lf2 (even (len (lfappend y (Cons n x)))).
Lemma conj169: forall (lf8 : lst) (lf2 : bool) (y : lst), @eq bool lf2 (even (len (lfappend y lf8))).
Lemma conj165: forall (lf5 : lst) (lf4 : bool), @eq bool (negb lf4) (even (len lf5)).
Lemma conj161: forall (lf2 : bool) (lf5 : lst), @eq bool lf2 (even (len lf5)).
Lemma conj118: forall (x : lst) (y : lst) (lf3 : natural), @eq bool (negb (even (len (lfappend x y)))) (even lf3).
Lemma conj86: forall (x : lst) (lf1 : bool) (y : lst), @eq bool (negb (even (len (lfappend x y)))) lf1.
Lemma conj54: forall (lf7 : lst) (lf3 : natural), @eq bool (negb (even (len lf7))) (even lf3).
Lemma conj53: forall (lf6 : natural) (lf3 : natural), @eq bool (negb (even lf6)) (even lf3).
Lemma conj37: forall (lf4 : bool) (lf3 : natural), @eq bool (negb lf4) (even lf3).
Lemma conj33: forall (lf2 : bool) (lf3 : natural), @eq bool lf2 (even lf3).
Lemma conj22: forall (lf1 : bool) (lf7 : lst), @eq bool (negb (even (len lf7))) lf1.
Lemma conj21: forall (lf6 : natural) (lf1 : bool), @eq bool (negb (even lf6)) lf1.
Lemma conj5: forall (lf4 : bool) (lf1 : bool), @eq bool (negb lf4) lf1.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 222 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf2 lf1.
Lemma conj5: forall (lf4 : bool) (lf1 : bool), @eq bool (negb lf4) lf1.
Lemma conj21: forall (lf6 : natural) (lf1 : bool), @eq bool (negb (even lf6)) lf1.
Lemma conj22: forall (lf1 : bool) (lf7 : lst), @eq bool (negb (even (len lf7))) lf1.
Lemma conj33: forall (lf2 : bool) (lf3 : natural), @eq bool lf2 (even lf3).
Lemma conj37: forall (lf4 : bool) (lf3 : natural), @eq bool (negb lf4) (even lf3).
Lemma conj53: forall (lf6 : natural) (lf3 : natural), @eq bool (negb (even lf6)) (even lf3).
Lemma conj54: forall (lf7 : lst) (lf3 : natural), @eq bool (negb (even (len lf7))) (even lf3).
Lemma conj86: forall (x : lst) (lf1 : bool) (y : lst), @eq bool (negb (even (len (lfappend x y)))) lf1.
Lemma conj118: forall (x : lst) (y : lst) (lf3 : natural), @eq bool (negb (even (len (lfappend x y)))) (even lf3).
Lemma conj161: forall (lf2 : bool) (lf5 : lst), @eq bool lf2 (even (len lf5)).
Lemma conj165: forall (lf5 : lst) (lf4 : bool), @eq bool (negb lf4) (even (len lf5)).
Lemma conj169: forall (lf8 : lst) (lf2 : bool) (y : lst), @eq bool lf2 (even (len (lfappend y lf8))).
Lemma conj171: forall (lf2 : bool) (x : lst) (y : lst) (n : natural), @eq bool lf2 (even (len (lfappend y (Cons n x)))).
Lemma conj173: forall (lf8 : lst) (lf4 : bool) (y : lst), @eq bool (negb lf4) (even (len (lfappend y lf8))).
Lemma conj175: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (negb lf4) (even (len (lfappend y (Cons n x)))).
Lemma conj181: forall (lf6 : natural) (lf5 : lst), @eq bool (negb (even lf6)) (even (len lf5)).
Lemma conj182: forall (lf5 : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len lf5)).
Lemma conj189: forall (lf8 : lst) (lf6 : natural) (y : lst), @eq bool (negb (even lf6)) (even (len (lfappend y lf8))).
Lemma conj190: forall (lf8 : lst) (y : lst) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y lf8))).
Lemma conj191: forall (lf6 : natural) (x : lst) (y : lst) (n : natural), @eq bool (negb (even lf6)) (even (len (lfappend y (Cons n x)))).
Lemma conj192: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend y (Cons n x)))).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len lf5)).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst), @eq bool (negb (even (len (lfappend x y)))) (even (len (lfappend y lf8))).


<---CREATE SKETCHES--->
Time elapsed: 223 seconds
Sketches:
Sketch conj5_sketch0 : @eq bool (##hole##) lf1
Sketch conj5_term_sketch0 : @eq bool (negb lf4) (##hole##)
Sketch conj21_sketch0 : @eq bool (negb (##hole##)) lf1
Sketch conj21_sketch1 : @eq bool (##hole##) lf1
Sketch conj21_term_sketch0 : @eq bool (even lf6) (##hole##)
Sketch conj21_term_sketch1 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj22_sketch0 : @eq bool (negb (even (##hole##))) lf1
Sketch conj22_sketch1 : @eq bool (negb (##hole##)) lf1
Sketch conj22_sketch2 : @eq bool (##hole##) lf1
Sketch conj22_term_sketch0 : @eq natural (len lf7) (##hole##)
Sketch conj22_term_sketch1 : @eq bool (even (len lf7)) (##hole##)
Sketch conj22_term_sketch2 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj33_sketch0 : @eq bool lf2 (##hole##)
Sketch conj33_term_sketch0 : @eq bool (even lf3) (##hole##)
Sketch conj37_sketch0 : @eq bool (##hole##) (even lf3)
Sketch conj37_sketch1 : @eq bool (negb lf4) (##hole##)
Sketch conj37_term_sketch0 : @eq bool (negb lf4) (##hole##)
Sketch conj37_term_sketch1 : @eq bool (even lf3) (##hole##)
Sketch conj53_sketch0 : @eq bool (negb (##hole##)) (even lf3)
Sketch conj53_sketch1 : @eq bool (##hole##) (even lf3)
Sketch conj53_sketch2 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj53_term_sketch0 : @eq bool (even lf6) (##hole##)
Sketch conj53_term_sketch1 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj53_term_sketch2 : @eq bool (even lf3) (##hole##)
Sketch conj54_sketch0 : @eq bool (negb (even (##hole##))) (even lf3)
Sketch conj54_sketch1 : @eq bool (negb (##hole##)) (even lf3)
Sketch conj54_sketch2 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj54_sketch3 : @eq bool (##hole##) (even lf3)
Sketch conj54_term_sketch0 : @eq natural (len lf7) (##hole##)
Sketch conj54_term_sketch1 : @eq bool (even (len lf7)) (##hole##)
Sketch conj54_term_sketch2 : @eq bool (even lf3) (##hole##)
Sketch conj54_term_sketch3 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj86_sketch0 : @eq bool (negb (even (##hole##))) lf1
Sketch conj86_sketch1 : @eq bool (##hole##) lf1
Sketch conj86_sketch2 : @eq bool (negb (even (len (##hole##)))) lf1
Sketch conj86_sketch3 : @eq bool (negb (##hole##)) lf1
Sketch conj86_term_sketch0 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj86_term_sketch1 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj86_term_sketch3 : @eq bool (even (len (lfappend x y))) (##hole##)
Sketch conj118_sketch0 : @eq bool (negb (even (##hole##))) (even lf3)
Sketch conj118_sketch1 : @eq bool (##hole##) (even lf3)
Sketch conj118_sketch2 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj118_sketch3 : @eq bool (negb (even (len (##hole##)))) (even lf3)
Sketch conj118_sketch4 : @eq bool (negb (##hole##)) (even lf3)
Sketch conj118_term_sketch0 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj118_term_sketch1 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj118_term_sketch2 : @eq bool (even lf3) (##hole##)
Sketch conj118_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj118_term_sketch4 : @eq bool (even (len (lfappend x y))) (##hole##)
Sketch conj161_sketch0 : @eq bool lf2 (even (##hole##))
Sketch conj161_sketch1 : @eq bool lf2 (##hole##)
Sketch conj161_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj161_term_sketch1 : @eq bool (even (len lf5)) (##hole##)
Sketch conj165_sketch0 : @eq bool (negb lf4) (even (##hole##))
Sketch conj165_sketch1 : @eq bool (##hole##) (even (len lf5))
Sketch conj165_sketch2 : @eq bool (negb lf4) (##hole##)
Sketch conj165_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj165_term_sketch1 : @eq bool (negb lf4) (##hole##)
Sketch conj165_term_sketch2 : @eq bool (even (len lf5)) (##hole##)
Sketch conj169_sketch0 : @eq bool lf2 (even (len (##hole##)))
Sketch conj169_sketch1 : @eq bool lf2 (even (##hole##))
Sketch conj169_sketch2 : @eq bool lf2 (##hole##)
Sketch conj169_term_sketch0 : @eq lst (lfappend y lf8) (##hole##)
Sketch conj169_term_sketch1 : @eq natural (len (lfappend y lf8)) (##hole##)
Sketch conj169_term_sketch2 : @eq bool (even (len (lfappend y lf8))) (##hole##)
Sketch conj171_sketch0 : @eq bool lf2 (even (len (##hole##)))
Sketch conj171_sketch1 : @eq bool lf2 (even (##hole##))
Sketch conj171_sketch2 : @eq bool lf2 (even (len (lfappend y (##hole##))))
Sketch conj171_sketch3 : @eq bool lf2 (##hole##)
Sketch conj171_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj171_term_sketch1 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj171_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj171_term_sketch3 : @eq bool (even (len (lfappend y (Cons n x)))) (##hole##)
Sketch conj173_sketch0 : @eq bool (negb lf4) (even (len (##hole##)))
Sketch conj173_sketch1 : @eq bool (##hole##) (even (len (lfappend y lf8)))
Sketch conj173_sketch2 : @eq bool (negb lf4) (even (##hole##))
Sketch conj173_sketch3 : @eq bool (negb lf4) (##hole##)
Sketch conj173_term_sketch0 : @eq lst (lfappend y lf8) (##hole##)
Sketch conj173_term_sketch1 : @eq bool (negb lf4) (##hole##)
Sketch conj173_term_sketch2 : @eq natural (len (lfappend y lf8)) (##hole##)
Sketch conj173_term_sketch3 : @eq bool (even (len (lfappend y lf8))) (##hole##)
Sketch conj175_sketch0 : @eq bool (negb lf4) (even (len (##hole##)))
Sketch conj175_sketch1 : @eq bool (negb lf4) (even (##hole##))
Sketch conj175_sketch2 : @eq bool (negb lf4) (even (len (lfappend y (##hole##))))
Sketch conj175_sketch3 : @eq bool (##hole##) (even (len (lfappend y (Cons n x))))
Sketch conj175_sketch4 : @eq bool (negb lf4) (##hole##)
Sketch conj175_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj175_term_sketch1 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj175_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj175_term_sketch3 : @eq bool (negb lf4) (##hole##)
Sketch conj175_term_sketch4 : @eq bool (even (len (lfappend y (Cons n x)))) (##hole##)
Sketch conj181_sketch0 : @eq bool (negb (even lf6)) (even (##hole##))
Sketch conj181_sketch1 : @eq bool (negb (##hole##)) (even (len lf5))
Sketch conj181_sketch2 : @eq bool (##hole##) (even (len lf5))
Sketch conj181_sketch3 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj181_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj181_term_sketch1 : @eq bool (even lf6) (##hole##)
Sketch conj181_term_sketch2 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj181_term_sketch3 : @eq bool (even (len lf5)) (##hole##)
Sketch conj182_sketch0 : @eq bool (negb (even (len lf7))) (even (##hole##))
Sketch conj182_sketch1 : @eq bool (negb (even (##hole##))) (even (len lf5))
Sketch conj182_sketch2 : @eq bool (negb (##hole##)) (even (len lf5))
Sketch conj182_sketch3 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj182_sketch4 : @eq bool (##hole##) (even (len lf5))
Sketch conj182_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj182_term_sketch1 : @eq natural (len lf7) (##hole##)
Sketch conj182_term_sketch2 : @eq bool (even (len lf7)) (##hole##)
Sketch conj182_term_sketch3 : @eq bool (even (len lf5)) (##hole##)
Sketch conj182_term_sketch4 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj189_sketch0 : @eq bool (negb (even lf6)) (even (len (##hole##)))
Sketch conj189_sketch1 : @eq bool (negb (##hole##)) (even (len (lfappend y lf8)))
Sketch conj189_sketch2 : @eq bool (##hole##) (even (len (lfappend y lf8)))
Sketch conj189_sketch3 : @eq bool (negb (even lf6)) (even (##hole##))
Sketch conj189_sketch4 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj189_term_sketch0 : @eq lst (lfappend y lf8) (##hole##)
Sketch conj189_term_sketch1 : @eq bool (even lf6) (##hole##)
Sketch conj189_term_sketch2 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj189_term_sketch3 : @eq natural (len (lfappend y lf8)) (##hole##)
Sketch conj189_term_sketch4 : @eq bool (even (len (lfappend y lf8))) (##hole##)
Sketch conj190_sketch0 : @eq bool (negb (even (len lf7))) (even (len (##hole##)))
Sketch conj190_sketch1 : @eq bool (negb (even (##hole##))) (even (len (lfappend y lf8)))
Sketch conj190_sketch2 : @eq bool (negb (even (len lf7))) (even (##hole##))
Sketch conj190_sketch3 : @eq bool (negb (##hole##)) (even (len (lfappend y lf8)))
Sketch conj190_sketch4 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj190_sketch5 : @eq bool (##hole##) (even (len (lfappend y lf8)))
Sketch conj190_term_sketch0 : @eq lst (lfappend y lf8) (##hole##)
Sketch conj190_term_sketch1 : @eq natural (len lf7) (##hole##)
Sketch conj190_term_sketch2 : @eq natural (len (lfappend y lf8)) (##hole##)
Sketch conj190_term_sketch3 : @eq bool (even (len lf7)) (##hole##)
Sketch conj190_term_sketch4 : @eq bool (even (len (lfappend y lf8))) (##hole##)
Sketch conj190_term_sketch5 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj191_sketch0 : @eq bool (negb (##hole##)) (even (len (lfappend y (Cons n x))))
Sketch conj191_sketch1 : @eq bool (negb (even lf6)) (even (len (##hole##)))
Sketch conj191_sketch2 : @eq bool (negb (even lf6)) (even (##hole##))
Sketch conj191_sketch3 : @eq bool (##hole##) (even (len (lfappend y (Cons n x))))
Sketch conj191_sketch4 : @eq bool (negb (even lf6)) (even (len (lfappend y (##hole##))))
Sketch conj191_sketch5 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj191_term_sketch0 : @eq bool (even lf6) (##hole##)
Sketch conj191_term_sketch1 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj191_term_sketch2 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj191_term_sketch3 : @eq bool (negb (even lf6)) (##hole##)
Sketch conj191_term_sketch4 : @eq lst (Cons n x) (##hole##)
Sketch conj191_term_sketch5 : @eq bool (even (len (lfappend y (Cons n x)))) (##hole##)
Sketch conj192_sketch0 : @eq bool (negb (even (len lf7))) (even (len (##hole##)))
Sketch conj192_sketch1 : @eq bool (negb (even (len lf7))) (even (##hole##))
Sketch conj192_sketch2 : @eq bool (negb (even (len lf7))) (even (len (lfappend y (##hole##))))
Sketch conj192_sketch3 : @eq bool (negb (even (##hole##))) (even (len (lfappend y (Cons n x))))
Sketch conj192_sketch4 : @eq bool (negb (##hole##)) (even (len (lfappend y (Cons n x))))
Sketch conj192_sketch5 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj192_sketch6 : @eq bool (##hole##) (even (len (lfappend y (Cons n x))))
Sketch conj192_term_sketch0 : @eq lst (lfappend y (Cons n x)) (##hole##)
Sketch conj192_term_sketch1 : @eq natural (len (lfappend y (Cons n x))) (##hole##)
Sketch conj192_term_sketch2 : @eq lst (Cons n x) (##hole##)
Sketch conj192_term_sketch3 : @eq natural (len lf7) (##hole##)
Sketch conj192_term_sketch4 : @eq bool (even (len lf7)) (##hole##)
Sketch conj192_term_sketch5 : @eq bool (even (len (lfappend y (Cons n x)))) (##hole##)
Sketch conj192_term_sketch6 : @eq bool (negb (even (len lf7))) (##hole##)
Sketch conj246_sketch0 : @eq bool (negb (even (len (lfappend x y)))) (even (##hole##))
Sketch conj246_sketch1 : @eq bool (negb (even (##hole##))) (even (len lf5))
Sketch conj246_sketch2 : @eq bool (##hole##) (even (len lf5))
Sketch conj246_sketch3 : @eq bool (negb (even (len (##hole##)))) (even (len lf5))
Sketch conj246_sketch4 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj246_sketch5 : @eq bool (negb (##hole##)) (even (len lf5))
Sketch conj246_term_sketch0 : @eq natural (len lf5) (##hole##)
Sketch conj246_term_sketch1 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj246_term_sketch2 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj246_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj246_term_sketch4 : @eq bool (even (len lf5)) (##hole##)
Sketch conj246_term_sketch5 : @eq bool (even (len (lfappend x y))) (##hole##)
Sketch conj254_sketch0 : @eq bool (negb (even (len (lfappend x y)))) (even (len (##hole##)))
Sketch conj254_sketch1 : @eq bool (negb (even (##hole##))) (even (len (lfappend y lf8)))
Sketch conj254_sketch2 : @eq bool (##hole##) (even (len (lfappend y lf8)))
Sketch conj254_sketch3 : @eq bool (negb (even (len (lfappend x y)))) (even (##hole##))
Sketch conj254_sketch4 : @eq bool (negb (even (len (##hole##)))) (even (len (lfappend y lf8)))
Sketch conj254_sketch5 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj254_sketch6 : @eq bool (negb (##hole##)) (even (len (lfappend y lf8)))
Sketch conj254_term_sketch0 : @eq lst (lfappend y lf8) (##hole##)
Sketch conj254_term_sketch1 : @eq natural (len (lfappend x y)) (##hole##)
Sketch conj254_term_sketch2 : @eq bool (negb (even (len (lfappend x y)))) (##hole##)
Sketch conj254_term_sketch3 : @eq natural (len (lfappend y lf8)) (##hole##)
Sketch conj254_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj254_term_sketch5 : @eq bool (even (len (lfappend y lf8))) (##hole##)
Sketch conj254_term_sketch6 : @eq bool (even (len (lfappend x y))) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2920 seconds
Problems per Sketch:
Sketch conj254_term_sketch5 --> Problem  synth_27
Sketch conj53_sketch1 --> Problem  synth_11
Sketch conj181_term_sketch3 --> Problem  synth_22
Sketch conj254_term_sketch0 --> Problem  synth_25
Sketch conj118_sketch3 --> Problem  synth_19
Sketch conj175_sketch2 --> Problem  synth_34
Sketch conj246_sketch4 --> Problem  synth_16
Sketch conj53_term_sketch2 --> Problem  synth_11
Sketch conj171_sketch0 --> Problem  synth_24
Sketch conj173_term_sketch2 --> Problem  synth_26
Sketch conj21_term_sketch1 --> Problem  synth_5
Sketch conj182_term_sketch4 --> Problem  synth_9
Sketch conj191_sketch3 --> Problem  synth_32
Sketch conj190_term_sketch0 --> Problem  synth_25
Sketch conj173_sketch0 --> Problem  synth_33
Sketch conj246_term_sketch5 --> Problem  synth_18
Sketch conj246_sketch5 --> Problem  synth_36
Sketch conj246_sketch3 --> Problem  synth_48
Sketch conj54_sketch1 --> Problem  synth_12
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj173_sketch2 --> Problem  synth_23
Sketch conj254_sketch1 --> Problem  synth_42
Sketch conj175_term_sketch0 --> Problem  synth_29
Sketch conj171_term_sketch2 --> Problem  synth_31
Sketch conj169_sketch2 --> Problem  synth_10
Sketch conj192_term_sketch0 --> Problem  synth_29
Sketch conj254_term_sketch3 --> Problem  synth_26
Sketch conj246_term_sketch3 --> Problem  synth_17
Sketch conj189_term_sketch2 --> Problem  synth_5
Sketch conj246_sketch2 --> Problem  synth_22
Sketch conj175_sketch0 --> Problem  synth_33
Sketch conj192_sketch6 --> Problem  synth_32
Sketch conj86_sketch0 --> Problem  synth_6
Sketch conj21_sketch0 --> Problem  synth_3
Sketch conj192_sketch3 --> Problem  synth_46
Sketch conj181_term_sketch0 --> Problem  synth_21
Sketch conj190_sketch0 --> Problem  synth_41
Sketch conj182_sketch2 --> Problem  synth_36
Sketch conj181_sketch2 --> Problem  synth_22
Sketch conj254_term_sketch1 --> Problem  synth_15
Sketch conj171_sketch1 --> Problem  synth_20
Sketch conj246_sketch0 --> Problem  synth_47
Sketch conj171_sketch2 --> Problem  synth_28
Sketch conj192_term_sketch1 --> Problem  synth_30
Sketch conj189_sketch4 --> Problem  synth_5
Sketch conj54_sketch3 --> Problem  synth_11
Sketch conj37_sketch0 --> Problem  synth_11
Sketch conj54_sketch2 --> Problem  synth_9
Sketch conj182_sketch4 --> Problem  synth_22
Sketch conj254_sketch0 --> Problem  synth_49
Sketch conj169_term_sketch2 --> Problem  synth_27
Sketch conj118_sketch2 --> Problem  synth_16
Sketch conj161_sketch1 --> Problem  synth_10
Sketch conj53_term_sketch1 --> Problem  synth_5
Sketch conj190_term_sketch3 --> Problem  synth_8
Sketch conj53_sketch2 --> Problem  synth_5
Sketch conj190_sketch2 --> Problem  synth_37
Sketch conj189_sketch2 --> Problem  synth_27
Sketch conj190_sketch1 --> Problem  synth_42
Sketch conj171_term_sketch3 --> Problem  synth_32
Sketch conj182_term_sketch2 --> Problem  synth_8
Sketch conj190_term_sketch4 --> Problem  synth_27
Sketch conj54_sketch0 --> Problem  synth_13
Sketch conj22_term_sketch0 --> Problem  synth_7
Sketch conj173_term_sketch3 --> Problem  synth_27
Sketch conj173_sketch1 --> Problem  synth_27
Sketch conj118_term_sketch3 --> Problem  synth_17
Sketch conj118_term_sketch2 --> Problem  synth_11
Sketch conj246_term_sketch2 --> Problem  synth_16
Sketch conj181_sketch0 --> Problem  synth_35
Sketch conj246_term_sketch0 --> Problem  synth_21
Sketch conj254_term_sketch2 --> Problem  synth_16
Sketch conj165_term_sketch1 --> Problem  synth_2
Sketch conj165_sketch2 --> Problem  synth_2
Sketch conj191_sketch1 --> Problem  synth_39
Sketch conj175_sketch1 --> Problem  synth_23
Sketch conj189_sketch0 --> Problem  synth_39
Sketch conj254_sketch2 --> Problem  synth_27
Sketch conj192_sketch0 --> Problem  synth_41
Sketch conj190_sketch5 --> Problem  synth_27
Sketch conj169_term_sketch1 --> Problem  synth_26
Sketch conj181_sketch1 --> Problem  synth_36
Sketch conj165_sketch1 --> Problem  synth_22
Sketch conj173_term_sketch1 --> Problem  synth_2
Sketch conj33_sketch0 --> Problem  synth_10
Sketch conj254_sketch3 --> Problem  synth_47
Sketch conj246_term_sketch1 --> Problem  synth_15
Sketch conj192_term_sketch6 --> Problem  synth_9
Sketch conj171_term_sketch0 --> Problem  synth_29
Sketch conj191_sketch4 --> Problem  synth_44
Sketch conj189_sketch3 --> Problem  synth_35
Sketch conj246_sketch1 --> Problem  synth_38
Sketch conj189_term_sketch4 --> Problem  synth_27
Sketch conj182_sketch1 --> Problem  synth_38
Sketch conj118_term_sketch4 --> Problem  synth_18
Sketch conj191_term_sketch5 --> Problem  synth_32
Sketch conj191_sketch2 --> Problem  synth_35
Sketch conj190_sketch3 --> Problem  synth_40
Sketch conj175_sketch3 --> Problem  synth_32
Sketch conj173_term_sketch0 --> Problem  synth_25
Sketch conj53_term_sketch0 --> Problem  synth_4
Sketch conj22_sketch1 --> Problem  synth_3
Sketch conj191_sketch0 --> Problem  synth_43
Sketch conj190_term_sketch1 --> Problem  synth_7
Sketch conj254_sketch6 --> Problem  synth_40
Sketch conj175_term_sketch3 --> Problem  synth_2
Sketch conj54_term_sketch3 --> Problem  synth_9
Sketch conj189_term_sketch1 --> Problem  synth_4
Sketch conj175_sketch4 --> Problem  synth_2
Sketch conj192_term_sketch3 --> Problem  synth_7
Sketch conj254_term_sketch4 --> Problem  synth_17
Sketch conj254_sketch4 --> Problem  synth_50
Sketch conj165_sketch0 --> Problem  synth_23
Sketch conj118_sketch1 --> Problem  synth_11
Sketch conj182_term_sketch3 --> Problem  synth_22
Sketch conj192_sketch2 --> Problem  synth_45
Sketch conj33_term_sketch0 --> Problem  synth_11
Sketch conj86_sketch1 --> Problem  synth_1
Sketch conj22_term_sketch1 --> Problem  synth_8
Sketch conj53_sketch0 --> Problem  synth_12
Sketch conj182_term_sketch1 --> Problem  synth_7
Sketch conj118_sketch4 --> Problem  synth_12
Sketch conj118_term_sketch1 --> Problem  synth_16
Sketch conj192_term_sketch2 --> Problem  synth_31
Sketch conj190_term_sketch5 --> Problem  synth_9
Sketch conj182_term_sketch0 --> Problem  synth_21
Sketch conj86_sketch2 --> Problem  synth_14
Sketch conj191_term_sketch4 --> Problem  synth_31
Sketch conj86_term_sketch1 --> Problem  synth_16
Sketch conj182_sketch3 --> Problem  synth_9
Sketch conj181_sketch3 --> Problem  synth_5
Sketch conj118_term_sketch0 --> Problem  synth_15
Sketch conj161_sketch0 --> Problem  synth_20
Sketch conj22_sketch0 --> Problem  synth_6
Sketch conj118_sketch0 --> Problem  synth_13
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj192_term_sketch5 --> Problem  synth_32
Sketch conj175_term_sketch4 --> Problem  synth_32
Sketch conj165_term_sketch0 --> Problem  synth_21
Sketch conj192_sketch1 --> Problem  synth_37
Sketch conj161_term_sketch0 --> Problem  synth_21
Sketch conj191_term_sketch2 --> Problem  synth_30
Sketch conj22_term_sketch2 --> Problem  synth_9
Sketch conj191_term_sketch0 --> Problem  synth_4
Sketch conj191_term_sketch3 --> Problem  synth_5
Sketch conj181_term_sketch2 --> Problem  synth_5
Sketch conj192_sketch5 --> Problem  synth_9
Sketch conj37_term_sketch0 --> Problem  synth_2
Sketch conj254_term_sketch6 --> Problem  synth_18
Sketch conj189_sketch1 --> Problem  synth_40
Sketch conj171_sketch3 --> Problem  synth_10
Sketch conj169_sketch1 --> Problem  synth_20
Sketch conj86_term_sketch0 --> Problem  synth_15
Sketch conj86_term_sketch2 --> Problem  synth_17
Sketch conj54_term_sketch0 --> Problem  synth_7
Sketch conj182_sketch0 --> Problem  synth_37
Sketch conj161_term_sketch1 --> Problem  synth_22
Sketch conj21_term_sketch0 --> Problem  synth_4
Sketch conj86_term_sketch3 --> Problem  synth_18
Sketch conj169_sketch0 --> Problem  synth_24
Sketch conj86_sketch3 --> Problem  synth_3
Sketch conj22_sketch2 --> Problem  synth_1
Sketch conj191_sketch5 --> Problem  synth_5
Sketch conj189_term_sketch0 --> Problem  synth_25
Sketch conj171_term_sketch1 --> Problem  synth_30
Sketch conj21_sketch1 --> Problem  synth_1
Sketch conj190_sketch4 --> Problem  synth_9
Sketch conj175_term_sketch1 --> Problem  synth_30
Sketch conj54_term_sketch1 --> Problem  synth_8
Sketch conj175_term_sketch2 --> Problem  synth_31
Sketch conj192_term_sketch4 --> Problem  synth_8
Sketch conj54_term_sketch2 --> Problem  synth_11
Sketch conj37_term_sketch1 --> Problem  synth_11
Sketch conj192_sketch4 --> Problem  synth_43
Sketch conj189_term_sketch3 --> Problem  synth_26
Sketch conj165_term_sketch2 --> Problem  synth_22
Sketch conj246_term_sketch4 --> Problem  synth_22
Sketch conj191_term_sketch1 --> Problem  synth_29
Sketch conj181_term_sketch1 --> Problem  synth_4
Sketch conj169_term_sketch0 --> Problem  synth_25
Sketch conj254_sketch5 --> Problem  synth_16
Sketch conj173_sketch3 --> Problem  synth_2
Sketch conj190_term_sketch2 --> Problem  synth_26
Sketch conj37_sketch1 --> Problem  synth_2


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 3414 seconds

Problem: synth_28

Problem: synth_17
 lfappend (lfappend x (lfappend y Nil)) Nil
 lfappend (lfappend x Nil) (lfappend y Nil)
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_29
 lfappend (lfappend y (Cons n Nil)) x
 lfappend (lfappend y (Cons n x)) Nil
 lfappend (lfappend y Nil) (Cons n (lfappend x Nil))
 lfappend (lfappend y Nil) (Cons n x)
 lfappend y (Cons n (lfappend x Nil))
 lfappend y (Cons n x)

Problem: synth_45

Problem: synth_26
 len (lfappend (lfappend lf8 y) Nil)
 len (lfappend (lfappend y lf8) Nil)
 len (lfappend lf8 (lfappend y Nil))
 len (lfappend y (lfappend lf8 Nil))
 len (lfappend lf8 y)
 len (lfappend y lf8)

Problem: synth_9
 even (len (lfappend lf7 (Cons (Succ Zero) Nil)))
 negb (even (len (lfappend lf7 (lfappend lf7 lf7))))
 even (len (lfappend lf7 (Cons Zero Nil)))
 negb (even (len (lfappend lf7 Nil)))
 negb (negb (negb (even (len lf7))))
 negb (even (len lf7))

Problem: synth_30
 len (lfappend x (Cons n y))
 len (lfappend x (Cons Zero y))
 len (lfappend y (Cons n x))
 len (lfappend y (Cons Zero x))
 Succ (len (lfappend x y))
 Succ (len (lfappend y x))

Problem: synth_11
 negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))
 negb (negb (negb (negb (negb (negb (even lf3))))))
 negb (negb (negb (negb (even lf3))))
 negb (negb (even lf3))
 even lf3

Problem: synth_39

Problem: synth_1
 negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))
 negb (negb (negb (negb (negb (negb lf1)))))
 negb (negb (negb (negb lf1)))
 negb (negb lf1)
 lf1

Problem: synth_46
 len (lfappend (lfappend x y) Nil)
 len (lfappend (lfappend y x) Nil)
 len (lfappend x (lfappend y Nil))
 len (lfappend y (lfappend x Nil))
 len (lfappend x y)
 len (lfappend y x)

Problem: synth_15
 len (lfappend (lfappend x y) Nil)
 len (lfappend (lfappend y x) Nil)
 len (lfappend x (lfappend y Nil))
 len (lfappend y (lfappend x Nil))
 len (lfappend x y)
 len (lfappend y x)

Problem: synth_31
 Cons n (lfappend (lfappend x Nil) Nil)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_14

Problem: synth_8
 negb (negb (even (len (lfappend lf7 Nil))))
 negb (negb (negb (negb (even (len lf7)))))
 even (len (lfappend lf7 (lfappend lf7 lf7)))
 even (len (lfappend lf7 Nil))
 negb (negb (even (len lf7)))
 even (len lf7)

Problem: synth_34

Problem: synth_12
 negb (negb (negb (negb (negb (negb (negb (even lf3)))))))
 negb (negb (negb (negb (negb (even lf3)))))
 negb (negb (negb (even lf3)))
 negb (even lf3)

Problem: synth_5
 negb (negb (negb (negb (negb (negb (negb (even lf6)))))))
 negb (negb (negb (negb (negb (even lf6)))))
 negb (negb (negb (even lf6)))
 negb (even lf6)

Problem: synth_37
 len (lfappend (lfappend lf7 Nil) (Cons Zero Nil))
 len (lfappend lf7 (Cons (len lf7) Nil))
 len (lfappend lf7 (Cons (Succ Zero) Nil))
 len (lfappend lf7 (Cons Zero Nil))
 Succ (len (lfappend lf7 Nil))
 Succ (len lf7)

Problem: synth_50

Problem: synth_2
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))
 negb (negb (negb (negb (negb (negb (negb lf4))))))
 negb (negb (negb (negb (negb lf4))))
 negb (negb (negb lf4))
 negb lf4

Problem: synth_22
 negb (negb (even (len (lfappend lf5 Nil))))
 negb (negb (negb (negb (even (len lf5)))))
 even (len (lfappend lf5 (lfappend lf5 lf5)))
 even (len (lfappend lf5 Nil))
 negb (negb (even (len lf5)))
 even (len lf5)

Problem: synth_20

Problem: synth_18
 negb (negb (even (len (lfappend x y))))
 negb (negb (even (len (lfappend y x))))
 even (len (lfappend x (lfappend y Nil)))
 even (len (lfappend y (lfappend x Nil)))
 even (len (lfappend x y))
 even (len (lfappend y x))

Problem: synth_21
 len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)
 len (lfappend (lfappend lf5 Nil) Nil)
 len (lfappend lf5 Nil)
 len lf5

Problem: synth_41

Problem: synth_49

Problem: synth_25
 lfappend (lfappend y (lfappend lf8 Nil)) Nil
 lfappend (lfappend y Nil) (lfappend lf8 Nil)
 lfappend (lfappend y Nil) lf8
 lfappend (lfappend y lf8) Nil
 lfappend y (lfappend lf8 Nil)
 lfappend y lf8

Problem: synth_13

Problem: synth_6

Problem: synth_7
 len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)
 len (lfappend (lfappend lf7 Nil) Nil)
 len (lfappend lf7 Nil)
 len lf7

Problem: synth_4
 negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))
 negb (negb (negb (negb (negb (negb (even lf6))))))
 negb (negb (negb (negb (even lf6))))
 negb (negb (even lf6))
 even lf6

Problem: synth_38

Problem: synth_23

Problem: synth_27
 negb (negb (even (len (lfappend lf8 y))))
 negb (negb (even (len (lfappend y lf8))))
 even (len (lfappend lf8 (lfappend y Nil)))
 even (len (lfappend y (lfappend lf8 Nil)))
 even (len (lfappend lf8 y))
 even (len (lfappend y lf8))

Problem: synth_42

Problem: synth_16
 negb (even (len (lfappend x (lfappend y Nil))))
 negb (even (len (lfappend y (lfappend x Nil))))
 even (len (lfappend x (Cons Zero y)))
 even (len (lfappend y (Cons Zero x)))
 negb (even (len (lfappend x y)))
 negb (even (len (lfappend y x)))

Problem: synth_19

Problem: synth_40
 negb (even (len (lfappend lf8 (lfappend y Nil))))
 negb (even (len (lfappend y (lfappend lf8 Nil))))
 even (len (lfappend lf8 (Cons Zero y)))
 even (len (lfappend y (Cons Zero lf8)))
 negb (even (len (lfappend lf8 y)))
 negb (even (len (lfappend y lf8)))

Problem: synth_10
 negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))
 negb (negb (negb (negb (negb (negb lf2)))))
 negb (negb (negb (negb lf2)))
 negb (negb lf2)
 lf2

Problem: synth_33

Problem: synth_47
 Succ (len (lfappend x (lfappend y Nil)))
 Succ (len (lfappend y (lfappend x Nil)))
 len (lfappend x (Cons Zero y))
 len (lfappend y (Cons Zero x))
 Succ (len (lfappend x y))
 Succ (len (lfappend y x))

Problem: synth_24

Problem: synth_3
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))
 negb (negb (negb (negb (negb (negb (negb lf1))))))
 negb (negb (negb (negb (negb lf1))))
 negb (negb (negb lf1))
 negb lf1

Problem: synth_32
 even (len (lfappend x (Cons n y)))
 even (len (lfappend x (Cons Zero y)))
 even (len (lfappend y (Cons n x)))
 even (len (lfappend y (Cons Zero x)))
 negb (even (len (lfappend x y)))
 negb (even (len (lfappend y x)))

Problem: synth_48

Problem: synth_44

Problem: synth_36
 even (len (lfappend lf5 (Cons (Succ Zero) Nil)))
 negb (even (len (lfappend lf5 (lfappend lf5 lf5))))
 even (len (lfappend lf5 (Cons Zero Nil)))
 negb (even (len (lfappend lf5 Nil)))
 negb (negb (negb (even (len lf5))))
 negb (even (len lf5))

Problem: synth_35
 Succ lf6

Problem: synth_43
 negb (negb (even (len (lfappend x y))))
 negb (negb (even (len (lfappend y x))))
 even (len (lfappend x (lfappend y Nil)))
 even (len (lfappend y (lfappend x Nil)))
 even (len (lfappend x y))
 even (len (lfappend y x))

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 3415 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_2: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_3: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_4: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_5: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_6: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_7: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_8: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_9: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_10: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_11: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_12: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_13: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_14: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_15: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_16: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_17: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_18: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_19: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_20: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_21: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_22: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_23: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_24: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_25: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_26: forall (lf6 : natural), @eq bool (even lf6) (even lf6).
Lemma candidate_27: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_28: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_29: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_30: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_31: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_32: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_33: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_34: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_35: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_36: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_37: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_38: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_39: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_40: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_41: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_42: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_43: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_44: forall (lf7 : lst), @eq natural (len lf7) (len lf7).
Lemma candidate_45: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_46: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_47: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_48: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 Nil))).
Lemma candidate_49: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_50: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len lf7)).
Lemma candidate_51: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_52: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_53: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_54: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_55: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_56: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_57: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))).
Lemma candidate_58: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb lf2)))))).
Lemma candidate_59: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb lf2)))).
Lemma candidate_60: forall (lf2 : bool), @eq bool lf2 (negb (negb lf2)).
Lemma candidate_61: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_62: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_63: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_64: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_65: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_66: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_67: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_68: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_69: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_70: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_71: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_72: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_73: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_74: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_75: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_76: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_77: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_78: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_79: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_80: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_81: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_82: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_83: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_84: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_85: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_86: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_87: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_88: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_89: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_90: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_91: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_92: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_93: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_94: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_95: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_96: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_97: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_98: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_99: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_100: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_101: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_102: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_103: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_104: forall (lf6 : natural), @eq bool (even lf6) (even lf6).
Lemma candidate_105: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_106: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_107: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_108: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_109: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_110: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_111: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_112: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_113: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_114: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_115: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_116: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_117: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_118: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_119: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_120: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_121: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_122: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_123: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_124: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_125: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_126: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_127: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_128: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_129: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_130: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_131: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_132: forall (lf7 : lst), @eq natural (len lf7) (len lf7).
Lemma candidate_133: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_134: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_135: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_136: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 Nil))).
Lemma candidate_137: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_138: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len lf7)).
Lemma candidate_139: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_140: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_141: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_142: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_143: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_144: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_145: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_146: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_147: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_148: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_149: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_150: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_151: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_152: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_153: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_154: forall (lf1 : bool), @eq bool (lf1) lf1.
Lemma candidate_155: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_156: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_157: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_158: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_159: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_160: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_164: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_166: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_167: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_168: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_169: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_170: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_171: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_172: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x (lfappend y Nil)) Nil).
Lemma candidate_173: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (lfappend y Nil)).
Lemma candidate_174: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_175: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_176: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_177: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_178: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend x y))))).
Lemma candidate_179: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend y x))))).
Lemma candidate_180: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend x (lfappend y Nil)))).
Lemma candidate_181: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend y (lfappend x Nil)))).
Lemma candidate_182: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend x y))).
Lemma candidate_183: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend y x))).
Lemma candidate_184: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_185: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_186: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_187: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_188: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_189: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_190: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_191: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_192: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_193: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_194: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_195: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_196: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_197: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_198: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_199: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_200: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_201: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_202: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_203: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_204: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_205: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_206: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_207: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_208: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_209: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_210: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_211: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_212: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_213: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_214: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_215: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_216: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x (lfappend y Nil)) Nil).
Lemma candidate_217: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (lfappend y Nil)).
Lemma candidate_218: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_219: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_220: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_221: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_222: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend x y))))).
Lemma candidate_223: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend y x))))).
Lemma candidate_224: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend x (lfappend y Nil)))).
Lemma candidate_225: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend y (lfappend x Nil)))).
Lemma candidate_226: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend x y))).
Lemma candidate_227: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend y x))).
Lemma candidate_228: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))).
Lemma candidate_229: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb lf2)))))).
Lemma candidate_230: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb lf2)))).
Lemma candidate_231: forall (lf2 : bool), @eq bool lf2 (negb (negb lf2)).
Lemma candidate_232: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_233: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_234: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_235: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_236: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_237: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_238: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_239: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_240: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 Nil))).
Lemma candidate_241: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_242: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_243: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_244: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_245: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 (lfappend lf5 lf5)))) (even (len lf5)).
Lemma candidate_246: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 Nil))) (even (len lf5)).
Lemma candidate_247: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_248: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_249: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_250: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_251: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_252: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_253: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_254: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_255: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_256: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_257: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_258: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_259: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_260: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_261: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_262: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_263: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_264: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_265: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_266: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 Nil))).
Lemma candidate_267: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_268: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_269: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))).
Lemma candidate_270: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb lf2)))))).
Lemma candidate_271: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb lf2)))).
Lemma candidate_272: forall (lf2 : bool), @eq bool lf2 (negb (negb lf2)).
Lemma candidate_273: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_274: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_275: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_276: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_277: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_278: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_279: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y lf8).
Lemma candidate_280: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_281: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_282: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_283: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_284: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_285: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y lf8)).
Lemma candidate_286: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_287: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_288: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_289: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_290: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend lf8 y))).
Lemma candidate_291: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_292: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))).
Lemma candidate_293: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb lf2)))))).
Lemma candidate_294: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb lf2)))).
Lemma candidate_295: forall (lf2 : bool), @eq bool lf2 (negb (negb lf2)).
Lemma candidate_296: forall (lf2 : bool), @eq bool lf2 (lf2).
Lemma candidate_297: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_298: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_299: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_300: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_301: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_302: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_303: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_304: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_305: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_306: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_307: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_308: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_309: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_310: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_311: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_312: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons n y)))).
Lemma candidate_313: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_314: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_315: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_316: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend x y)))).
Lemma candidate_317: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend y x)))).
Lemma candidate_318: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_319: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_320: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 (lfappend y Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_321: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y (lfappend lf8 Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_322: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 y))) (even (len (lfappend y lf8))).
Lemma candidate_323: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_324: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_325: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_326: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_327: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_328: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_329: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_330: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_331: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_332: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_333: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_334: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y lf8).
Lemma candidate_335: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_336: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_337: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_338: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_339: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_340: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_341: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_342: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_343: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_344: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_345: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y lf8)).
Lemma candidate_346: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_347: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_348: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_349: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_350: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend lf8 y))).
Lemma candidate_351: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_352: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons n y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_353: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons Zero y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_354: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_355: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons Zero x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_356: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_357: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_358: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_359: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_360: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_361: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_362: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_363: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_364: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_365: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_366: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_367: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_368: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_369: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_370: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_371: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_372: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_373: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_374: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_375: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_376: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_377: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_378: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_379: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_380: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_381: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_382: forall (lf4 : bool), @eq bool (negb lf4) (negb lf4).
Lemma candidate_383: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons n y)))).
Lemma candidate_384: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_385: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_386: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_387: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend x y)))).
Lemma candidate_388: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend y x)))).
Lemma candidate_389: forall (lf6 : natural), @eq bool (negb (even lf6)) (even (Succ lf6)).
Lemma candidate_390: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons (Succ Zero) Nil)))))   (even (len lf5)).
Lemma candidate_391: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 (lfappend lf5 lf5))))))   (even (len lf5)).
Lemma candidate_392: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons Zero Nil))))) (even (len lf5)).
Lemma candidate_393: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_394: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_395: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_396: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_397: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_398: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 (lfappend lf5 lf5)))) (even (len lf5)).
Lemma candidate_399: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 Nil))) (even (len lf5)).
Lemma candidate_400: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_401: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_402: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_403: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_404: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_405: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_406: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_407: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_408: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_409: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_410: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_411: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_412: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_413: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_414: forall (lf6 : natural), @eq bool (even lf6) (even lf6).
Lemma candidate_415: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_416: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_417: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_418: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_419: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_420: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_421: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_422: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 Nil))).
Lemma candidate_423: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_424: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_425: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend (lfappend lf7 Nil) (Cons Zero Nil)))).
Lemma candidate_426: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (len lf7) Nil)))).
Lemma candidate_427: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_428: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_429: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len (lfappend lf7 Nil)))).
Lemma candidate_430: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len lf7))).
Lemma candidate_431: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons (Succ Zero) Nil)))))   (even (len lf5)).
Lemma candidate_432: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 (lfappend lf5 lf5))))))   (even (len lf5)).
Lemma candidate_433: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons Zero Nil))))) (even (len lf5)).
Lemma candidate_434: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_435: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_436: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_437: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_438: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_439: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_440: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_441: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_442: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_443: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_444: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_445: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 (lfappend lf5 lf5)))) (even (len lf5)).
Lemma candidate_446: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 Nil))) (even (len lf5)).
Lemma candidate_447: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_448: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_449: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_450: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_451: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_452: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_453: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_454: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_455: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_456: forall (lf7 : lst), @eq natural (len lf7) (len lf7).
Lemma candidate_457: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_458: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_459: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_460: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 Nil))).
Lemma candidate_461: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_462: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len lf7)).
Lemma candidate_463: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_464: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_465: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_466: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 Nil))).
Lemma candidate_467: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_468: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_469: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_470: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_471: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_472: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_473: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_474: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_475: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 (lfappend y Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_476: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y (lfappend lf8 Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_477: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend lf8 (Cons Zero y)))))   (even (len (lfappend y lf8))).
Lemma candidate_478: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend y (Cons Zero lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_479: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_480: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_481: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_482: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_483: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 (lfappend y Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_484: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y (lfappend lf8 Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_485: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 y))) (even (len (lfappend y lf8))).
Lemma candidate_486: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_487: forall (lf6 : natural), @eq bool (negb (even lf6)) (even (Succ lf6)).
Lemma candidate_488: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_489: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_490: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_491: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_492: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_493: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_494: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_495: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_496: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_497: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y lf8).
Lemma candidate_498: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_499: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_500: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_501: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_502: forall (lf6 : natural), @eq bool (even lf6) (even lf6).
Lemma candidate_503: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_504: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_505: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_506: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_507: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_508: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_509: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_510: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_511: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_512: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y lf8)).
Lemma candidate_513: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_514: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_515: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_516: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_517: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend lf8 y))).
Lemma candidate_518: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_519: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend (lfappend lf7 Nil) (Cons Zero Nil)))).
Lemma candidate_520: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (len lf7) Nil)))).
Lemma candidate_521: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_522: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_523: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len (lfappend lf7 Nil)))).
Lemma candidate_524: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len lf7))).
Lemma candidate_525: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 (lfappend y Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_526: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y (lfappend lf8 Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_527: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend lf8 (Cons Zero y)))))   (even (len (lfappend y lf8))).
Lemma candidate_528: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend y (Cons Zero lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_529: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_530: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_531: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_532: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_533: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_534: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_535: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_536: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_537: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_538: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_539: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 (lfappend y Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_540: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y (lfappend lf8 Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_541: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 y))) (even (len (lfappend y lf8))).
Lemma candidate_542: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_543: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_544: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_545: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_546: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_547: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_548: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y lf8).
Lemma candidate_549: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_550: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_551: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_552: forall (lf7 : lst), @eq natural (len lf7) (len lf7).
Lemma candidate_553: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_554: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_555: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_556: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_557: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_558: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y lf8)).
Lemma candidate_559: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_560: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_561: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_562: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 Nil))).
Lemma candidate_563: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_564: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len lf7)).
Lemma candidate_565: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_566: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_567: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_568: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_569: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend lf8 y))).
Lemma candidate_570: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_571: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_572: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_573: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_574: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_575: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_576: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_577: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend x y))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_578: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend y x))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_579: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x (lfappend y Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_580: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y (lfappend x Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_581: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_582: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_583: forall (lf6 : natural), @eq bool (negb (even lf6)) (even (Succ lf6)).
Lemma candidate_584: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons n y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_585: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons Zero y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_586: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_587: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons Zero x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_588: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_589: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_590: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_591: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_592: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_593: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_594: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_595: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_596: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_597: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_598: forall (lf6 : natural), @eq bool (even lf6) (even lf6).
Lemma candidate_599: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_600: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_601: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_602: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_603: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_604: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_605: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_606: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_607: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_608: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_609: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_610: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_611: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_612: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_613: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_614: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (even lf6)).
Lemma candidate_615: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_616: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_617: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_618: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons n y)))).
Lemma candidate_619: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_620: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_621: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_622: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend x y)))).
Lemma candidate_623: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend y x)))).
Lemma candidate_624: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend (lfappend lf7 Nil) (Cons Zero Nil)))).
Lemma candidate_625: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (len lf7) Nil)))).
Lemma candidate_626: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_627: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_628: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len (lfappend lf7 Nil)))).
Lemma candidate_629: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len lf7))).
Lemma candidate_630: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend (lfappend x y) Nil))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_631: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend (lfappend y x) Nil))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_632: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x (lfappend y Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_633: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y (lfappend x Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_634: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_635: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_636: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend x y))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_637: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend y x))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_638: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x (lfappend y Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_639: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y (lfappend x Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_640: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_641: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_642: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_643: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_644: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_645: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_646: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_647: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_648: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons n y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_649: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons Zero y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_650: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_651: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons Zero x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_652: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_653: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_654: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_655: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_656: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_657: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_658: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_659: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_660: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_661: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_662: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons n x))).
Lemma candidate_663: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_664: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_665: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_666: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_667: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_668: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_669: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_670: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_671: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_672: forall (lf7 : lst), @eq natural (len lf7) (len lf7).
Lemma candidate_673: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_674: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_675: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_676: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 Nil))).
Lemma candidate_677: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_678: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len lf7)).
Lemma candidate_679: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons n y)))).
Lemma candidate_680: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_681: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_682: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_683: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend x y)))).
Lemma candidate_684: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend y x)))).
Lemma candidate_685: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend lf7 (Cons (Succ Zero) Nil)))).
Lemma candidate_686: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_687: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (len (lfappend lf7 (Cons Zero Nil)))).
Lemma candidate_688: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len (lfappend lf7 Nil)))).
Lemma candidate_689: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_690: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (even (len lf7))).
Lemma candidate_691: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend x (lfappend y Nil))))).
Lemma candidate_692: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend y (lfappend x Nil))))).
Lemma candidate_693: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_694: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_695: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend x y)))).
Lemma candidate_696: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend y x)))).
Lemma candidate_697: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_698: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_699: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 (lfappend lf5 lf5)))) (even (len lf5)).
Lemma candidate_700: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 Nil))) (even (len lf5)).
Lemma candidate_701: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_702: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_703: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_704: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_705: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_706: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_707: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_708: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_709: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons (Succ Zero) Nil)))))   (even (len lf5)).
Lemma candidate_710: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 (lfappend lf5 lf5))))))   (even (len lf5)).
Lemma candidate_711: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons Zero Nil))))) (even (len lf5)).
Lemma candidate_712: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_713: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_714: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_715: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_716: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_717: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_718: forall (lf5 : lst), @eq natural (len lf5) (len lf5).
Lemma candidate_719: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_720: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_721: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_722: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_723: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_724: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_725: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_726: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_727: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_728: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_729: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_730: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_731: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x (lfappend y Nil)) Nil).
Lemma candidate_732: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (lfappend y Nil)).
Lemma candidate_733: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_734: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_735: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_736: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_737: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_738: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_739: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_740: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 Nil))).
Lemma candidate_741: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_742: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len lf5)).
Lemma candidate_743: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend x y))))).
Lemma candidate_744: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend y x))))).
Lemma candidate_745: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend x (lfappend y Nil)))).
Lemma candidate_746: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend y (lfappend x Nil)))).
Lemma candidate_747: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend x y))).
Lemma candidate_748: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend y x))).
Lemma candidate_749: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_750: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_751: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 (lfappend y Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_752: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y (lfappend lf8 Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_753: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 y))) (even (len (lfappend y lf8))).
Lemma candidate_754: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_755: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend x (lfappend y Nil))))).
Lemma candidate_756: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend y (lfappend x Nil))))).
Lemma candidate_757: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_758: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_759: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend x y)))).
Lemma candidate_760: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend y x)))).
Lemma candidate_761: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_762: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_763: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_764: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_765: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_766: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_767: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 (lfappend y Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_768: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y (lfappend lf8 Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_769: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend lf8 (Cons Zero y)))))   (even (len (lfappend y lf8))).
Lemma candidate_770: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend y (Cons Zero lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_771: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_772: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_773: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_774: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_775: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_776: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_777: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_778: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y lf8).
Lemma candidate_779: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_780: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_781: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_782: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_783: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x y)).
Lemma candidate_784: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_785: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_786: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_787: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_788: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_789: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x y)))).
Lemma candidate_790: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y x)))).
Lemma candidate_791: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_792: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_793: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_794: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_795: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_796: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y lf8)).
Lemma candidate_797: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x (lfappend y Nil)) Nil).
Lemma candidate_798: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (lfappend y Nil)).
Lemma candidate_799: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_800: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_801: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_802: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_803: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_804: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_805: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_806: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_807: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend lf8 y))).
Lemma candidate_808: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8))) (even (len (lfappend y lf8))).
Lemma candidate_809: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend x y))))).
Lemma candidate_810: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend y x))))).
Lemma candidate_811: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend x (lfappend y Nil)))).
Lemma candidate_812: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend y (lfappend x Nil)))).
Lemma candidate_813: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend x y))).
Lemma candidate_814: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y))) (even (len (lfappend y x))).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 4310 seconds
Duplicates removed: 655
Filtered by Quickchick: 0
Filtered by script: 38
Remaining: 121

Lemmas: 
Lemma candidate_60: forall (lf2 : bool), @eq bool lf2 (negb (negb lf2)).
Lemma candidate_5: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_310: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_70: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_65: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_59: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb lf2)))).
Lemma candidate_25: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_10: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_4: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_235: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_43: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_176: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_175: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_174: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_278: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_277: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_276: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_247: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_241: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_49: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_284: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_69: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_64: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_58: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb lf2)))))).
Lemma candidate_29: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_24: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_9: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_3: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_309: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_234: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_42: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_173: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (lfappend y Nil)).
Lemma candidate_172: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x (lfappend y Nil)) Nil).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_160: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_308: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).
Lemma candidate_307: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_301: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_300: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_298: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_297: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_244: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_238: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_55: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_46: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_429: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len (lfappend lf7 Nil)))).
Lemma candidate_303: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_275: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_274: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_243: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_237: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_45: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_283: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_282: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_281: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_280: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_245: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 (lfappend lf5 lf5)))) (even (len lf5)).
Lemma candidate_239: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_68: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_63: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_57: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))).
Lemma candidate_47: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_28: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_23: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_8: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_2: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_306: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_304: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_392: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons Zero Nil))))) (even (len lf5)).
Lemma candidate_233: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_41: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_179: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend y x))))).
Lemma candidate_178: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend x y))))).
Lemma candidate_181: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend y (lfappend x Nil)))).
Lemma candidate_180: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend x (lfappend y Nil)))).
Lemma candidate_357: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_317: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend y x)))).
Lemma candidate_352: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons n y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_319: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_318: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_312: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons n y)))).
Lemma candidate_287: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_286: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_390: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons (Succ Zero) Nil)))))   (even (len lf5)).
Lemma candidate_321: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y (lfappend lf8 Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_320: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 (lfappend y Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_289: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_288: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_169: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_168: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_355: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons Zero x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_353: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons Zero y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_315: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_313: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_299: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_391: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 (lfappend lf5 lf5))))))   (even (len lf5)).
Lemma candidate_67: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_62: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_52: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_27: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_22: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_7: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_478: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend y (Cons Zero lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_477: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend lf8 (Cons Zero y)))))   (even (len (lfappend y lf8))).
Lemma candidate_12: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_425: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend (lfappend lf7 Nil) (Cons Zero Nil)))).
Lemma candidate_692: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend y (lfappend x Nil))))).
Lemma candidate_691: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend x (lfappend y Nil))))).
Lemma candidate_167: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_166: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_578: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend y x))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_577: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend x y))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_631: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend (lfappend y x) Nil))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_630: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend (lfappend x y) Nil))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_580: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y (lfappend x Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_579: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x (lfappend y Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_476: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y (lfappend lf8 Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_475: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 (lfappend y Nil))))))   (even (len (lfappend y lf8))).
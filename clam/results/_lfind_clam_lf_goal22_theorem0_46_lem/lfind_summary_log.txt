LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal22_theorem0_46_lem

Number of Lemmas: 814
Number of Lemmas (after duplicates removed): 159
Number of Lemmas (after QuickChick used to filter): 159
* Number of Candidate Lemmas: 121

Time until ranking: 4310
Time to complete: 11649

Stuck state true independent of hypotheses: true

Category 1:
Count = 1

Lemma candidate_308: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend y x))).

Category 2:
Count = 11

Lemma candidate_307: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (Succ (len (lfappend x y))).
Lemma candidate_303: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons n y))).
Lemma candidate_304: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend x (Cons Zero y))).
Lemma candidate_357: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_317: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (negb (even (len (lfappend y x)))).
Lemma candidate_352: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons n y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_312: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons n y)))).
Lemma candidate_353: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend x (Cons Zero y))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_313: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_578: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend y x))))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_577: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (negb (negb (even (len (lfappend x y))))))   (even (len (lfappend y (Cons n x)))).

Category 3 (provable):
Count = 60

Lemma candidate_60: forall (lf2 : bool), @eq bool lf2 (negb (negb lf2)).
Lemma candidate_5: forall (lf1 : bool), @eq bool (negb (negb lf1)) lf1.
Lemma candidate_70: forall (lf3 : natural), @eq bool (negb (negb (even lf3))) (even lf3).
Lemma candidate_65: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_59: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb lf2)))).
Lemma candidate_25: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (even lf6))).
Lemma candidate_10: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb lf4))).
Lemma candidate_4: forall (lf1 : bool), @eq bool (negb (negb (negb (negb lf1)))) lf1.
Lemma candidate_235: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend lf5 Nil)).
Lemma candidate_43: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend lf7 Nil)).
Lemma candidate_174: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_278: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend y (lfappend lf8 Nil)).
Lemma candidate_277: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y lf8) Nil).
Lemma candidate_276: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) lf8).
Lemma candidate_247: forall (lf5 : lst), @eq bool (negb (negb (even (len lf5)))) (even (len lf5)).
Lemma candidate_241: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len lf5)))).
Lemma candidate_49: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len lf7)))).
Lemma candidate_69: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (even lf3))))) (even lf3).
Lemma candidate_64: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_58: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb lf2)))))).
Lemma candidate_29: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (even lf6)))).
Lemma candidate_24: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (even lf6))))).
Lemma candidate_9: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb lf4))))).
Lemma candidate_3: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf1)))))) lf1.
Lemma candidate_234: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend lf5 Nil) Nil)).
Lemma candidate_42: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend lf7 Nil) Nil)).
Lemma candidate_244: forall (lf5 : lst), @eq bool (negb (negb (negb (negb (even (len lf5)))))) (even (len lf5)).
Lemma candidate_238: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (negb (negb (even (len lf5)))))).
Lemma candidate_55: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (negb (negb (negb (even (len lf7))))).
Lemma candidate_46: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (negb (negb (even (len lf7)))))).
Lemma candidate_429: forall (lf7 : lst), @eq bool (negb (even (len lf7))) (even (Succ (len (lfappend lf7 Nil)))).
Lemma candidate_275: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y Nil) (lfappend lf8 Nil)).
Lemma candidate_274: forall (y : lst) (lf8 : lst), @eq lst (lfappend y lf8) (lfappend (lfappend y (lfappend lf8 Nil)) Nil).
Lemma candidate_243: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 Nil))))) (even (len lf5)).
Lemma candidate_237: forall (lf5 : lst), @eq bool (even (len lf5)) (negb (negb (even (len (lfappend lf5 Nil))))).
Lemma candidate_45: forall (lf7 : lst), @eq bool (even (len lf7)) (negb (negb (even (len (lfappend lf7 Nil))))).
Lemma candidate_283: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend y (lfappend lf8 Nil))).
Lemma candidate_281: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend y lf8) Nil)).
Lemma candidate_68: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (even lf3))))))) (even lf3).
Lemma candidate_63: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_57: forall (lf2 : bool), @eq bool lf2 (negb (negb (negb (negb (negb (negb (negb (negb lf2)))))))).
Lemma candidate_28: forall (lf6 : natural), @eq bool (negb (even lf6)) (negb (negb (negb (negb (negb (even lf6)))))).
Lemma candidate_23: forall (lf6 : natural), @eq bool (even lf6) (negb (negb (negb (negb (negb (negb (even lf6))))))).
Lemma candidate_8: forall (lf4 : bool), @eq bool (negb lf4) (negb (negb (negb (negb (negb (negb (negb lf4))))))).
Lemma candidate_2: forall (lf1 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))) lf1.
Lemma candidate_306: forall (n : natural) (y : lst) (x : lst), @eq natural (len (lfappend y (Cons n x))) (len (lfappend y (Cons Zero x))).
Lemma candidate_392: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons Zero Nil))))) (even (len lf5)).
Lemma candidate_233: forall (lf5 : lst), @eq natural (len lf5) (len (lfappend (lfappend (lfappend lf5 Nil) Nil) Nil)).
Lemma candidate_41: forall (lf7 : lst), @eq natural (len lf7) (len (lfappend (lfappend (lfappend lf7 Nil) Nil) Nil)).
Lemma candidate_178: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend x y))))).
Lemma candidate_319: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_287: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend y lf8))))).
Lemma candidate_390: forall (lf5 : lst), @eq bool (negb (even (len (lfappend lf5 (Cons (Succ Zero) Nil)))))   (even (len lf5)).
Lemma candidate_67: forall (lf3 : natural), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))))   (even lf3).
Lemma candidate_62: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_27: forall (lf6 : natural), @eq bool (negb (even lf6))   (negb (negb (negb (negb (negb (negb (negb (even lf6)))))))).
Lemma candidate_22: forall (lf6 : natural), @eq bool (even lf6)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf6))))))))).
Lemma candidate_7: forall (lf4 : bool), @eq bool (negb lf4)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf4))))))))).
Lemma candidate_12: forall (lf1 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf1))))))))))   lf1.
Lemma candidate_425: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (even (len (lfappend (lfappend lf7 Nil) (Cons Zero Nil)))).

Category 3 (not provable):
Count = 49

Lemma candidate_310: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_176: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_175: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y x)).
Lemma candidate_284: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 y)).
Lemma candidate_309: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_173: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) (lfappend y Nil)).
Lemma candidate_172: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x (lfappend y Nil)) Nil).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend y (lfappend x Nil))).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend x (lfappend y Nil))).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend y x) Nil)).
Lemma candidate_160: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (len (lfappend (lfappend x y) Nil)).
Lemma candidate_301: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_300: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y Nil) (Cons n x)).
Lemma candidate_298: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n x)) Nil).
Lemma candidate_297: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend (lfappend y (Cons n Nil)) x).
Lemma candidate_282: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend lf8 (lfappend y Nil))).
Lemma candidate_280: forall (y : lst) (lf8 : lst), @eq natural (len (lfappend y lf8)) (len (lfappend (lfappend lf8 y) Nil)).
Lemma candidate_245: forall (lf5 : lst), @eq bool (even (len (lfappend lf5 (lfappend lf5 lf5)))) (even (len lf5)).
Lemma candidate_239: forall (lf5 : lst), @eq bool (even (len lf5)) (even (len (lfappend lf5 (lfappend lf5 lf5)))).
Lemma candidate_47: forall (lf7 : lst), @eq bool (even (len lf7)) (even (len (lfappend lf7 (lfappend lf7 lf7)))).
Lemma candidate_179: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (negb (negb (even (len (lfappend y x))))).
Lemma candidate_181: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend y (lfappend x Nil)))).
Lemma candidate_180: forall (y : lst) (x : lst), @eq bool (even (len (lfappend x y)))   (even (len (lfappend x (lfappend y Nil)))).
Lemma candidate_318: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 y)))))   (even (len (lfappend y lf8))).
Lemma candidate_286: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (negb (negb (even (len (lfappend lf8 y))))).
Lemma candidate_321: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y (lfappend lf8 Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_320: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend lf8 (lfappend y Nil))))   (even (len (lfappend y lf8))).
Lemma candidate_289: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend y (lfappend lf8 Nil)))).
Lemma candidate_288: forall (y : lst) (lf8 : lst), @eq bool (even (len (lfappend y lf8)))   (even (len (lfappend lf8 (lfappend y Nil)))).
Lemma candidate_169: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_168: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (len (lfappend x (Cons Zero y)))).
Lemma candidate_355: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons Zero x))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_315: forall (n : natural) (y : lst) (x : lst), @eq bool (even (len (lfappend y (Cons n x))))   (even (len (lfappend y (Cons Zero x)))).
Lemma candidate_299: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x))   (lfappend (lfappend y Nil) (Cons n (lfappend x Nil))).
Lemma candidate_391: forall (lf5 : lst), @eq bool (negb (negb (even (len (lfappend lf5 (lfappend lf5 lf5))))))   (even (len lf5)).
Lemma candidate_52: forall (lf7 : lst), @eq bool (negb (even (len lf7)))   (negb (even (len (lfappend lf7 (lfappend lf7 lf7))))).
Lemma candidate_478: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend y (Cons Zero lf8)))))   (even (len (lfappend y lf8))).
Lemma candidate_477: forall (y : lst) (lf8 : lst), @eq bool (negb (even (len (lfappend lf8 (Cons Zero y)))))   (even (len (lfappend y lf8))).
Lemma candidate_692: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend y (lfappend x Nil))))).
Lemma candidate_691: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (even (Succ (len (lfappend x (lfappend y Nil))))).
Lemma candidate_167: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend y (lfappend x Nil))))).
Lemma candidate_166: forall (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x y))))   (negb (even (len (lfappend x (lfappend y Nil))))).
Lemma candidate_631: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend (lfappend y x) Nil))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_630: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend (lfappend x y) Nil))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_580: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend y (lfappend x Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_579: forall (n : natural) (y : lst) (x : lst), @eq bool (negb (even (len (lfappend x (lfappend y Nil)))))   (even (len (lfappend y (Cons n x)))).
Lemma candidate_476: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend y (lfappend lf8 Nil))))))   (even (len (lfappend y lf8))).
Lemma candidate_475: forall (y : lst) (lf8 : lst), @eq bool (negb (negb (even (len (lfappend lf8 (lfappend y Nil))))))   (even (len (lfappend y lf8))).
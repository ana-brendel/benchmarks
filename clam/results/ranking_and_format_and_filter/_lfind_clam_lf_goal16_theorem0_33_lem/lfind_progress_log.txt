File Information
- File name: goal16
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal16_theorem0_33_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal16_theorem0_33_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : natural, @eq bool (even (plus x0 x0)) true.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq bool (negb (even (plus x (Succ x)))) true

* Hypothesis:
IHx : @eq bool (even (plus x x)) true
x : natural

* Types:
Set
natural
Prop
bool

* Polymorphic Types:


* Variables:
x : natural

* Terms:
plus x x : natural
Succ x : natural
@eq bool (negb (even (plus x (Succ x)))) true : Prop
@eq bool (even (plus x x)) true : Prop
bool : Set
x : natural
even (plus x x) : bool
negb (even (plus x (Succ x))) : bool
natural : Set
true : bool
even (plus x (Succ x)) : bool
plus x (Succ x) : natural

* Functions:
Succ  : forall _ : natural, natural
even  : forall _ : natural, bool
negb  : forall _ : bool, bool
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : natural = plus x (Succ x)
lf1 : bool = negb (even (plus x (Succ x)))
lf4 : natural = Succ x
lf5 : bool = true
lf2 : bool = even (plus x (Succ x))

Generalizations:
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj9: forall (lf2 : bool) (lf5 : bool), @eq bool (negb lf2) lf5.
Lemma conj10: forall (lf5 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf5.
Lemma conj11: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj12: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) lf5.
Lemma conj28: forall (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) true.
Lemma conj30: forall (lf5 : bool) (x : natural), @eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma conj32: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) true.


<---VALIDITY CHECKS--->
Time elapsed: 25 seconds
Valid:
Lemma conj32: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) true.

Invalid:
Lemma conj30: forall (lf5 : bool) (x : natural), @eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma conj28: forall (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) true.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) lf5.
Lemma conj12: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj11: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj10: forall (lf5 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf5.
Lemma conj9: forall (lf2 : bool) (lf5 : bool), @eq bool (negb lf2) lf5.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.

<---ADD IMPLICATIONS--->
Time elapsed: 38 seconds
Generalizations:
Lemma conj30: forall (lf5 : bool) (x : natural), @eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma conj30_imp: forall (lf5 : bool) (x : natural), forall _ : @eq bool (even (plus x x)) lf5,
@eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma conj28: forall (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) true.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) lf5.
Lemma conj12: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj11: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj10: forall (lf5 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf5.
Lemma conj9: forall (lf2 : bool) (lf5 : bool), @eq bool (negb lf2) lf5.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.


<---VALIDITY CHECKS--->
Time elapsed: 60 seconds
Valid:
Lemma conj30_imp: forall (lf5 : bool) (x : natural), forall _ : @eq bool (even (plus x x)) lf5,
@eq bool (negb (even (plus x (Succ x)))) lf5.

Invalid:
Lemma conj1: forall (lf5 : bool) (lf1 : bool), @eq bool lf1 lf5.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj9: forall (lf2 : bool) (lf5 : bool), @eq bool (negb lf2) lf5.
Lemma conj10: forall (lf5 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf5.
Lemma conj11: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj12: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj26: forall (lf5 : bool) (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) lf5.
Lemma conj28: forall (x : natural) (lf4 : natural), @eq bool (negb (even (plus x lf4))) true.
Lemma conj30: forall (lf5 : bool) (x : natural), @eq bool (negb (even (plus x (Succ x)))) lf5.


<---CREATE SKETCHES--->
Time elapsed: 60 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq bool true (##hole##)
Sketch conj9_sketch0 : @eq bool (##hole##) lf5
Sketch conj9_term_sketch0 : @eq bool (negb lf2) (##hole##)
Sketch conj10_sketch0 : @eq bool (negb (##hole##)) lf5
Sketch conj10_sketch1 : @eq bool (##hole##) lf5
Sketch conj10_term_sketch0 : @eq bool (even lf3) (##hole##)
Sketch conj10_term_sketch1 : @eq bool (negb (even lf3)) (##hole##)
Sketch conj11_sketch0 : @eq bool (##hole##) true
Sketch conj11_sketch1 : @eq bool (negb lf2) (##hole##)
Sketch conj11_term_sketch0 : @eq bool (negb lf2) (##hole##)
Sketch conj11_term_sketch1 : @eq bool true (##hole##)
Sketch conj12_sketch0 : @eq bool (negb (##hole##)) true
Sketch conj12_sketch1 : @eq bool (negb (even lf3)) (##hole##)
Sketch conj12_sketch2 : @eq bool (##hole##) true
Sketch conj12_term_sketch0 : @eq bool (even lf3) (##hole##)
Sketch conj12_term_sketch1 : @eq bool true (##hole##)
Sketch conj12_term_sketch2 : @eq bool (negb (even lf3)) (##hole##)
Sketch conj26_sketch0 : @eq bool (negb (##hole##)) lf5
Sketch conj26_sketch1 : @eq bool (negb (even (##hole##))) lf5
Sketch conj26_sketch2 : @eq bool (##hole##) lf5
Sketch conj26_term_sketch0 : @eq bool (even (plus x lf4)) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (plus x lf4) (##hole##)
Sketch conj26_term_sketch2 : @eq bool (negb (even (plus x lf4))) (##hole##)
Sketch conj28_sketch0 : @eq bool (negb (##hole##)) true
Sketch conj28_sketch1 : @eq bool (negb (even (##hole##))) true
Sketch conj28_sketch2 : @eq bool (negb (even (plus x lf4))) (##hole##)
Sketch conj28_sketch3 : @eq bool (##hole##) true
Sketch conj28_term_sketch0 : @eq bool (even (plus x lf4)) (##hole##)
Sketch conj28_term_sketch1 : @eq natural (plus x lf4) (##hole##)
Sketch conj28_term_sketch2 : @eq bool true (##hole##)
Sketch conj28_term_sketch3 : @eq bool (negb (even (plus x lf4))) (##hole##)
Sketch conj30_sketch0 : @eq bool (negb (even (plus x (##hole##)))) lf5
Sketch conj30_sketch1 : @eq bool (##hole##) lf5
Sketch conj30_sketch2 : @eq bool (negb (##hole##)) lf5
Sketch conj30_sketch3 : @eq bool (negb (even (##hole##))) lf5
Sketch conj30_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj30_term_sketch1 : @eq bool (negb (even (plus x (Succ x)))) (##hole##)
Sketch conj30_term_sketch2 : @eq bool (even (plus x (Succ x))) (##hole##)
Sketch conj30_term_sketch3 : @eq natural (plus x (Succ x)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 68 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_14
Sketch conj12_sketch0 --> Problem  synth_8
Sketch conj28_sketch0 --> Problem  synth_8
Sketch conj26_term_sketch1 --> Problem  synth_11
Sketch conj26_sketch2 --> Problem  synth_3
Sketch conj11_term_sketch1 --> Problem  synth_2
Sketch conj10_term_sketch1 --> Problem  synth_7
Sketch conj30_sketch3 --> Problem  synth_9
Sketch conj30_sketch1 --> Problem  synth_3
Sketch conj26_sketch0 --> Problem  synth_5
Sketch conj30_term_sketch3 --> Problem  synth_18
Sketch conj11_sketch1 --> Problem  synth_4
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch1 --> Problem  synth_11
Sketch conj12_term_sketch1 --> Problem  synth_2
Sketch conj9_sketch0 --> Problem  synth_3
Sketch conj26_term_sketch2 --> Problem  synth_12
Sketch conj12_term_sketch0 --> Problem  synth_6
Sketch conj26_sketch1 --> Problem  synth_9
Sketch conj30_sketch2 --> Problem  synth_5
Sketch conj28_term_sketch0 --> Problem  synth_10
Sketch conj10_sketch1 --> Problem  synth_3
Sketch conj9_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch3 --> Problem  synth_12
Sketch conj12_sketch1 --> Problem  synth_7
Sketch conj30_term_sketch2 --> Problem  synth_17
Sketch conj12_sketch2 --> Problem  synth_2
Sketch conj10_term_sketch0 --> Problem  synth_6
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj28_sketch2 --> Problem  synth_12
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj28_sketch3 --> Problem  synth_2
Sketch conj26_term_sketch0 --> Problem  synth_10
Sketch conj30_term_sketch1 --> Problem  synth_16
Sketch conj28_sketch1 --> Problem  synth_13
Sketch conj28_term_sketch2 --> Problem  synth_2
Sketch conj30_term_sketch0 --> Problem  synth_15
Sketch conj11_sketch0 --> Problem  synth_2
Sketch conj12_term_sketch2 --> Problem  synth_7
Sketch conj10_sketch0 --> Problem  synth_5


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 130 seconds

Problem: synth_18
 plus (plus x (Succ Zero)) x
 plus (plus x (Succ x)) Zero
 Succ (plus x (plus x Zero))
 plus x (plus x (Succ Zero))
 Succ (plus x x)
 plus x (Succ x)

Problem: synth_17
 negb (even (plus x (Succ (Succ x))))
 negb (even (plus x (plus x Zero)))
 even (plus x (plus x (Succ Zero)))
 negb (even (plus x x))
 even (plus x (Succ x))
 false

Problem: synth_9

Problem: synth_13

Problem: synth_6
 negb (even (plus lf3 lf3))
 even (plus lf3 (Succ lf3))
 even (plus lf3 Zero)
 negb (negb (even lf3))
 even lf3
 false

Problem: synth_11
 plus x (plus lf4 Zero)
 plus lf4 (plus x Zero)
 Succ (plus x x)
 plus x (Succ x)
 plus x lf4
 plus lf4 x

Problem: synth_7
 negb (even (plus lf3 Zero))
 negb (negb (negb (even lf3)))
 even (plus lf3 (Succ Zero))
 even (plus lf3 lf3)
 negb (even lf3)
 true

Problem: synth_4
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))
 negb (negb (negb (negb (negb (negb (negb lf2))))))
 negb (negb (negb (negb (negb lf2))))
 negb (negb (negb lf2))
 negb lf2
 true

Problem: synth_1
 negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))
 negb (negb (negb (negb (negb (negb lf1)))))
 negb (negb (negb (negb lf1)))
 negb (negb lf1)
 lf1
 true

Problem: synth_16
 negb (even (plus x (plus x (Succ Zero))))
 even (plus x (Succ (Succ x)))
 even (plus x (plus x Zero))
 negb (even (plus x (Succ x)))
 even (plus x x)
 true

Problem: synth_15
 Succ (plus (plus x Zero) Zero)
 plus (plus x Zero) (Succ Zero)
 plus (plus x (Succ Zero)) Zero
 Succ (plus x Zero)
 plus x (Succ Zero)
 Succ x

Problem: synth_14
 Succ (plus (plus x Zero) Zero)
 plus (plus x Zero) (Succ Zero)
 plus (plus x (Succ Zero)) Zero
 Succ (plus x Zero)
 plus x (Succ Zero)
 Succ x

Problem: synth_10
 negb (even (plus x x))
 even (plus lf4 (Succ lf4))
 even (plus x (Succ x))
 even (plus x lf4)
 even (plus lf4 x)
 false

Problem: synth_8
 false

Problem: synth_3
 negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))
 negb (negb (negb (negb (negb (negb lf5)))))
 negb (negb (negb (negb lf5)))
 negb (negb lf5)
 lf5
 true

Problem: synth_12
 negb (even (plus lf4 x))
 even (plus x (Succ lf4))
 even (plus lf4 (Succ x))
 even (plus lf4 lf4)
 even (plus x x)
 true

Problem: synth_5
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf5))))))))
 negb (negb (negb (negb (negb (negb (negb lf5))))))
 negb (negb (negb (negb (negb lf5))))
 negb (negb (negb lf5))
 negb lf5
 false

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 130 seconds
Lemmas:
Lemma candidate_1: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) true.
Lemma candidate_2: forall (x : natural) (lf5 : bool), forall _ : @eq bool (even (plus x x)) lf5, @eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb lf1)))))).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb lf1)))).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (negb (negb lf1)).
Lemma candidate_7: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_8: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_9: @eq bool true (true).
Lemma candidate_10: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_11: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_12: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_13: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_14: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_15: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_16: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_17: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_18: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_19: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_20: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_21: forall (lf2 : bool), @eq bool (negb lf2) (true).
Lemma candidate_22: forall (lf5 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf5))))))))))   lf5.
Lemma candidate_23: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_24: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_25: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_26: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_27: forall (lf5 : bool), @eq bool (negb (false)) lf5.
Lemma candidate_28: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_29: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_30: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_31: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_32: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_33: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_34: forall (lf3 : natural), @eq bool (even lf3) (negb (even (plus lf3 lf3))).
Lemma candidate_35: forall (lf3 : natural), @eq bool (even lf3) (even (plus lf3 (Succ lf3))).
Lemma candidate_36: forall (lf3 : natural), @eq bool (even lf3) (even (plus lf3 Zero)).
Lemma candidate_37: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_38: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_39: forall (lf3 : natural), @eq bool (even lf3) (false).
Lemma candidate_40: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even (plus lf3 Zero))).
Lemma candidate_41: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_42: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 (Succ Zero))).
Lemma candidate_43: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 lf3)).
Lemma candidate_44: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even lf3)).
Lemma candidate_45: forall (lf3 : natural), @eq bool (negb (even lf3)) (true).
Lemma candidate_46: @eq bool (true) true.
Lemma candidate_47: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_48: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_49: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_50: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_51: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_52: forall (lf2 : bool), @eq bool (negb lf2) (true).
Lemma candidate_53: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_54: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_55: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_56: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_57: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_58: forall (lf2 : bool), @eq bool (negb lf2) (true).
Lemma candidate_59: @eq bool true (true).
Lemma candidate_60: @eq bool (negb (false)) true.
Lemma candidate_61: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even (plus lf3 Zero))).
Lemma candidate_62: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_63: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 (Succ Zero))).
Lemma candidate_64: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 lf3)).
Lemma candidate_65: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even lf3)).
Lemma candidate_66: forall (lf3 : natural), @eq bool (negb (even lf3)) (true).
Lemma candidate_67: @eq bool (true) true.
Lemma candidate_68: forall (lf3 : natural), @eq bool (even lf3) (negb (even (plus lf3 lf3))).
Lemma candidate_69: forall (lf3 : natural), @eq bool (even lf3) (even (plus lf3 (Succ lf3))).
Lemma candidate_70: forall (lf3 : natural), @eq bool (even lf3) (even (plus lf3 Zero)).
Lemma candidate_71: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_72: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_73: forall (lf3 : natural), @eq bool (even lf3) (false).
Lemma candidate_74: @eq bool true (true).
Lemma candidate_75: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even (plus lf3 Zero))).
Lemma candidate_76: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_77: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 (Succ Zero))).
Lemma candidate_78: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 lf3)).
Lemma candidate_79: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even lf3)).
Lemma candidate_80: forall (lf3 : natural), @eq bool (negb (even lf3)) (true).
Lemma candidate_81: forall (lf5 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf5))))))))))   lf5.
Lemma candidate_82: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_83: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_84: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_85: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_86: forall (lf5 : bool), @eq bool (negb (false)) lf5.
Lemma candidate_87: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_88: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_89: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_90: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_91: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_92: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_93: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (negb (even (plus x x))).
Lemma candidate_94: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus lf4 (Succ lf4))).
Lemma candidate_95: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus x (Succ x))).
Lemma candidate_96: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus x lf4)).
Lemma candidate_97: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus lf4 x)).
Lemma candidate_98: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (false).
Lemma candidate_99: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (plus lf4 Zero)).
Lemma candidate_100: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 (plus x Zero)).
Lemma candidate_101: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (Succ (plus x x)).
Lemma candidate_102: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (Succ x)).
Lemma candidate_103: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x lf4).
Lemma candidate_104: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 x).
Lemma candidate_105: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (negb (even (plus lf4 x))).
Lemma candidate_106: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x (Succ lf4))).
Lemma candidate_107: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 (Succ x))).
Lemma candidate_108: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 lf4)).
Lemma candidate_109: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x x)).
Lemma candidate_110: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (true).
Lemma candidate_111: @eq bool (negb (false)) true.
Lemma candidate_112: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (negb (even (plus lf4 x))).
Lemma candidate_113: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x (Succ lf4))).
Lemma candidate_114: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 (Succ x))).
Lemma candidate_115: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 lf4)).
Lemma candidate_116: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x x)).
Lemma candidate_117: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (true).
Lemma candidate_118: @eq bool (true) true.
Lemma candidate_119: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (negb (even (plus x x))).
Lemma candidate_120: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus lf4 (Succ lf4))).
Lemma candidate_121: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus x (Succ x))).
Lemma candidate_122: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus x lf4)).
Lemma candidate_123: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus lf4 x)).
Lemma candidate_124: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (false).
Lemma candidate_125: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (plus lf4 Zero)).
Lemma candidate_126: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 (plus x Zero)).
Lemma candidate_127: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (Succ (plus x x)).
Lemma candidate_128: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (Succ x)).
Lemma candidate_129: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x lf4).
Lemma candidate_130: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 x).
Lemma candidate_131: @eq bool true (true).
Lemma candidate_132: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (negb (even (plus lf4 x))).
Lemma candidate_133: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x (Succ lf4))).
Lemma candidate_134: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 (Succ x))).
Lemma candidate_135: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 lf4)).
Lemma candidate_136: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x x)).
Lemma candidate_137: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (true).
Lemma candidate_138: forall (x : natural) (lf5 : bool), @eq bool (negb (even (plus x (Succ (plus (plus x Zero) Zero))))) lf5.
Lemma candidate_139: forall (x : natural) (lf5 : bool), @eq bool (negb (even (plus x (plus (plus x Zero) (Succ Zero))))) lf5.
Lemma candidate_140: forall (x : natural) (lf5 : bool), @eq bool (negb (even (plus x (plus (plus x (Succ Zero)) Zero)))) lf5.
Lemma candidate_141: forall (x : natural) (lf5 : bool), @eq bool (negb (even (plus x (Succ (plus x Zero))))) lf5.
Lemma candidate_142: forall (x : natural) (lf5 : bool), @eq bool (negb (even (plus x (plus x (Succ Zero))))) lf5.
Lemma candidate_143: forall (x : natural) (lf5 : bool), @eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma candidate_144: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_145: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_146: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_147: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_148: forall (lf5 : bool), @eq bool (lf5) lf5.
Lemma candidate_149: forall (lf5 : bool), @eq bool (true) lf5.
Lemma candidate_150: forall (lf5 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf5))))))))))   lf5.
Lemma candidate_151: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_152: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_153: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_154: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_155: forall (lf5 : bool), @eq bool (negb (false)) lf5.
Lemma candidate_156: forall (x : natural), @eq natural (Succ x) (Succ (plus (plus x Zero) Zero)).
Lemma candidate_157: forall (x : natural), @eq natural (Succ x) (plus (plus x Zero) (Succ Zero)).
Lemma candidate_158: forall (x : natural), @eq natural (Succ x) (plus (plus x (Succ Zero)) Zero).
Lemma candidate_159: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_160: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_161: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_162: forall (x : natural), @eq bool (negb (even (plus x (Succ x))))   (negb (even (plus x (plus x (Succ Zero))))).
Lemma candidate_163: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (even (plus x (Succ (Succ x)))).
Lemma candidate_164: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (even (plus x (plus x Zero))).
Lemma candidate_165: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (negb (even (plus x (Succ x)))).
Lemma candidate_166: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (even (plus x x)).
Lemma candidate_167: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (true).
Lemma candidate_168: forall (x : natural), @eq bool (even (plus x (Succ x))) (negb (even (plus x (Succ (Succ x))))).
Lemma candidate_169: forall (x : natural), @eq bool (even (plus x (Succ x))) (negb (even (plus x (plus x Zero)))).
Lemma candidate_170: forall (x : natural), @eq bool (even (plus x (Succ x))) (even (plus x (plus x (Succ Zero)))).
Lemma candidate_171: forall (x : natural), @eq bool (even (plus x (Succ x))) (negb (even (plus x x))).
Lemma candidate_172: forall (x : natural), @eq bool (even (plus x (Succ x))) (even (plus x (Succ x))).
Lemma candidate_173: forall (x : natural), @eq bool (even (plus x (Succ x))) (false).
Lemma candidate_174: forall (x : natural), @eq natural (plus x (Succ x)) (plus (plus x (Succ Zero)) x).
Lemma candidate_175: forall (x : natural), @eq natural (plus x (Succ x)) (plus (plus x (Succ x)) Zero).
Lemma candidate_176: forall (x : natural), @eq natural (plus x (Succ x)) (Succ (plus x (plus x Zero))).
Lemma candidate_177: forall (x : natural), @eq natural (plus x (Succ x)) (plus x (plus x (Succ Zero))).
Lemma candidate_178: forall (x : natural), @eq natural (plus x (Succ x)) (Succ (plus x x)).
Lemma candidate_179: forall (x : natural), @eq natural (plus x (Succ x)) (plus x (Succ x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 337 seconds
Duplicates removed: 95
Filtered by Quickchick: 24
Filtered by script: 14
Remaining: 46

Lemmas: 
Lemma candidate_13: forall (lf5 : bool), @eq bool (negb (negb lf5)) lf5.
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (negb (negb lf1)).
Lemma candidate_104: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 x).
Lemma candidate_173: forall (x : natural), @eq bool (even (plus x (Succ x))) (false).
Lemma candidate_160: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_159: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_36: forall (lf3 : natural), @eq bool (even lf3) (even (plus lf3 Zero)).
Lemma candidate_37: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_19: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_12: forall (lf5 : bool), @eq bool (negb (negb (negb (negb lf5)))) lf5.
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb lf1)))).
Lemma candidate_178: forall (x : natural), @eq natural (plus x (Succ x)) (Succ (plus x x)).
Lemma candidate_167: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (true).
Lemma candidate_97: forall (lf4 : natural) (x : natural), @eq bool (even (plus x lf4)) (even (plus lf4 x)).
Lemma candidate_100: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus lf4 (plus x Zero)).
Lemma candidate_99: forall (lf4 : natural) (x : natural), @eq natural (plus x lf4) (plus x (plus lf4 Zero)).
Lemma candidate_158: forall (x : natural), @eq natural (Succ x) (plus (plus x (Succ Zero)) Zero).
Lemma candidate_157: forall (x : natural), @eq natural (Succ x) (plus (plus x Zero) (Succ Zero)).
Lemma candidate_156: forall (x : natural), @eq natural (Succ x) (Succ (plus (plus x Zero) Zero)).
Lemma candidate_42: forall (lf3 : natural), @eq bool (negb (even lf3)) (even (plus lf3 (Succ Zero))).
Lemma candidate_40: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even (plus lf3 Zero))).
Lemma candidate_171: forall (x : natural), @eq bool (even (plus x (Succ x))) (negb (even (plus x x))).
Lemma candidate_166: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (even (plus x x)).
Lemma candidate_41: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_18: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_11: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf5)))))) lf5.
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb lf1)))))).
Lemma candidate_177: forall (x : natural), @eq natural (plus x (Succ x)) (plus x (plus x (Succ Zero))).
Lemma candidate_176: forall (x : natural), @eq natural (plus x (Succ x)) (Succ (plus x (plus x Zero))).
Lemma candidate_175: forall (x : natural), @eq natural (plus x (Succ x)) (plus (plus x (Succ x)) Zero).
Lemma candidate_174: forall (x : natural), @eq natural (plus x (Succ x)) (plus (plus x (Succ Zero)) x).
Lemma candidate_107: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus lf4 (Succ x))).
Lemma candidate_106: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (even (plus x (Succ lf4))).
Lemma candidate_105: forall (lf4 : natural) (x : natural), @eq bool (negb (even (plus x lf4))) (negb (even (plus lf4 x))).
Lemma candidate_170: forall (x : natural), @eq bool (even (plus x (Succ x))) (even (plus x (plus x (Succ Zero)))).
Lemma candidate_169: forall (x : natural), @eq bool (even (plus x (Succ x))) (negb (even (plus x (plus x Zero)))).
Lemma candidate_164: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (even (plus x (plus x Zero))).
Lemma candidate_168: forall (x : natural), @eq bool (even (plus x (Succ x))) (negb (even (plus x (Succ (Succ x))))).
Lemma candidate_163: forall (x : natural), @eq bool (negb (even (plus x (Succ x)))) (even (plus x (Succ (Succ x)))).
Lemma candidate_17: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_10: forall (lf5 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf5)))))))) lf5.
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))).
Lemma candidate_162: forall (x : natural), @eq bool (negb (even (plus x (Succ x))))   (negb (even (plus x (plus x (Succ Zero))))).
Lemma candidate_2: forall (x : natural) (lf5 : bool), forall _ : @eq bool (even (plus x x)) lf5, @eq bool (negb (even (plus x (Succ x)))) lf5.
Lemma candidate_16: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_22: forall (lf5 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf5))))))))))   lf5.
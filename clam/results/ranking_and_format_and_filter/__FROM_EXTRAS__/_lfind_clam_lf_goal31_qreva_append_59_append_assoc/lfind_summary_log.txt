LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_append_59_append_assoc

Number of Lemmas: 2533
Number of Lemmas (after duplicates removed): 540
Number of Lemmas (after QuickChick used to filter): 279
* Number of Candidate Lemmas: 251

Time until ranking: 6051
Time to complete: 20424

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 23

Lemma candidate_4: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1584: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva (lfappend x y) Nil) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_2194: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1528: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x Nil)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_3: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_2495: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva (lfappend x y) Nil) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_281: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_264: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_5: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_2433: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x Nil)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_287: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x (rev lf7))).
Lemma candidate_751: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y Nil) (qreva x (Cons n lf8))).
Lemma candidate_738: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_6: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3, @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_749: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y (rev lf8)) (qreva x (Cons n lf8))).
Lemma candidate_737: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n (rev lf8)))).
Lemma candidate_9: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_7: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_12: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_8: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf8)         (lfappend (qreva y lf8) (qreva x lf8)), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf8)         (lfappend (qreva y lf8) (qreva x lf8)), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).

Category 3 (provable):
Count = 6

Lemma candidate_135: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_902: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_911: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_532: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_1693: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).

Category 3 (not provable):
Count = 222

Lemma candidate_134: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_954: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_55: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_133: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_132: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_14: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_131: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_13: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_329: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_950: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_77: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_51: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_952: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_951: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_78: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_53: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_52: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_328: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_904: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_147: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_140: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_23: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_326: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1144: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_949: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_202: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_62: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_50: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_327: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_903: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_146: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_139: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_22: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_325: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1142: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_200: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_60: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_901: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_144: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_20: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_308: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x lf8)).
Lemma candidate_1143: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_960: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (rev x)).
Lemma candidate_201: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_61: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_145: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_21: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1140: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_958: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (rev x)).
Lemma candidate_441: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_412: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_198: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_58: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_900: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_143: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_19: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1158: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (rev x)).
Lemma candidate_1141: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_959: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (rev (lfappend x (rev lf5))).
Lemma candidate_199: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_59: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_535: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_519: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_1157: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (rev (lfappend x y)).
Lemma candidate_956: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (qreva x Nil)).
Lemma candidate_437: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_436: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_232: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_72: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1155: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (qreva x Nil)).
Lemma candidate_372: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_117: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_955: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (lfappend x (rev lf5)) Nil).
Lemma candidate_230: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_70: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_533: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_1156: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (lfappend (rev y) (rev x)).
Lemma candidate_368: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_113: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_1139: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_438: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_229: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_197: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_69: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_57: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_906: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_537: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_1341: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1127: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_439: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1359: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (qreva (rev lf6) lf7)).
Lemma candidate_909: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_1154: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil))   (lfappend (rev y) (qreva x Nil)).
Lemma candidate_370: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_367: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_115: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_112: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1342: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1132: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1128: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_534: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_1588: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1339: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_946: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1358: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1586: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1164: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1411: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev (rev (rev x)))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1338: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_944: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1587: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1160: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_858: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_503: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1413: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (lfappend (rev x) Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1412: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev (lfappend x Nil))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1130: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_943: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_710: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_444: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_857: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_502: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_2197: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_712: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_709: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_672: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_446: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_443: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_417: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1690: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_1630: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1585: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1529: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1162: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1159: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_2297: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2195: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1947: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_1583: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (lfappend lf6 lf7)).
Lemma candidate_1469: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (lfappend lf6 lf7)).
Lemma candidate_1410: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (lfappend (qreva x Nil) Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_708: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_442: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2180: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n lf8))).
Lemma candidate_1692: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_859: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_856: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_504: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_501: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_268: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_2196: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1950: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_1948: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_1581: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva (rev lf6) lf7)).
Lemma candidate_1467: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva (rev lf6) lf7)).
Lemma candidate_713: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_447: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_860: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_505: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2295: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1949: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2301: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (qreva lf6 Nil) (Cons n Nil))).
Lemma candidate_1695: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_2497: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1983: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_267: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_2294: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1952: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_1706: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1580: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1466: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1694: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2498: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1982: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_855: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_500: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_266: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_1708: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1705: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_2300: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (lfappend lf6 Nil) (Cons n Nil))).
Lemma candidate_1951: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1704: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2302: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (qreva lf6 Nil)) (Cons n Nil))).
Lemma candidate_2496: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2434: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_1984: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1981: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_757: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_2481: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_2348: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1709: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1985: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_754: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_753: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_2480: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2345: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva (rev lf6) (Cons n lf8))).
Lemma candidate_262: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_755: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_285: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (rev (qreva lf7 x))).
Lemma candidate_279: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y (rev lf8)) (qreva x lf7)).
Lemma candidate_278: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva lf8 (rev y)) (qreva x lf7)).
Lemma candidate_263: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (rev lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1980: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2478: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva (qreva lf6 Nil) (Cons n Nil))).
Lemma candidate_286: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (lfappend (rev x) lf7)).
Lemma candidate_277: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (lfappend lf8 (rev y)) (qreva x lf7)).
Lemma candidate_261: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (rev (qreva lf7 (rev lf3))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_2482: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_752: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev y) (qreva x (Cons n lf8))).
Lemma candidate_2477: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (lfappend lf6 Nil) (Cons n Nil))).
Lemma candidate_2479: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (rev (qreva lf6 Nil)) (Cons n Nil))).
Lemma candidate_283: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7)   (lfappend (qreva y lf8) (lfappend (rev x) (rev lf7))).
Lemma candidate_765: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_767: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n (rev lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_748: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva lf8 (rev y)) (qreva x (Cons n lf8))).
Lemma candidate_747: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (qreva x (Cons n lf8))).
Lemma candidate_740: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_736: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_770: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend (rev (rev lf3)) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_735: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n (rev lf8)))).
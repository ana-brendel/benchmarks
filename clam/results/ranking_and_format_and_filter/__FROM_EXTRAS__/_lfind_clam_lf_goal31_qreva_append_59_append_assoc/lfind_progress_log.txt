File Information
- File name: goal31
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal31_qreva_append_59_append_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal31_qreva_append_59_append_assoc
- Namespace: adtind
- Proof name: qreva_lfappend
- Theorem: Theorem qreva_lfappend: forall x0 y0 : lst,
@eq lst (qreva (lfappend x0 y0) Nil) (lfappend (qreva y0 Nil) (qreva x0 Nil)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil)))

* Hypothesis:
IHx : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) (qreva x Nil))
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lfappend (qreva y Nil) (qreva x Nil) : lst
@eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) (qreva x Nil)) : Prop
x : lst
qreva y Nil : lst
y : lst
@eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))) : Prop
lfappend (qreva y Nil) (qreva x (Cons n Nil)) : lst
qreva (lfappend x y) Nil : lst
lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil) : lst
qreva x (Cons n Nil) : lst
qreva x Nil : lst
lst : Set
Cons n Nil : lst
natural : Set
lfappend x y : lst
n : natural
Nil : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 4 seconds
Generalized Variables:
lf3 : lst = lfappend (qreva y Nil) (qreva x Nil)
lf7 : lst = Cons n Nil
lf1 : lst = lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil)
lf4 : lst = qreva x (Cons n Nil)
lf5 : lst = qreva y Nil
lf2 : lst = lfappend (qreva y Nil) (qreva x (Cons n Nil))
lf8 : lst = Nil
lf6 : lst = qreva x Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf5 lf4).
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y lf8) lf4).
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y Nil) lf4).
Lemma conj21: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf5 (qreva x lf7)).
Lemma conj29: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj31: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) lf2.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 lf4).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) lf4).
Lemma conj47: forall (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) lf4).
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj63: forall (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj85: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj87: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj93: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj95: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj97: forall (lf8 : lst) (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) lf2.
Lemma conj99: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) lf2.
Lemma conj101: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj103: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (qreva y lf8) lf4).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (qreva y Nil) lf4).
Lemma conj117: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj119: forall (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) lf2.
Lemma conj162: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) lf2.
Lemma conj164: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) lf2.
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 lf4).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (lfappend lf5 lf4).
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (lfappend lf5 lf4).
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) lf2.
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) lf2.
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) lf2.
Lemma conj172: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) lf2.
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)
  (lfappend lf5 (qreva x lf7)).
Lemma conj184: forall (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)
  (lfappend lf5 (qreva x lf7)).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj192: forall (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj225: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) lf2.
Lemma conj226: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj227: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) lf2.
Lemma conj228: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj229: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj230: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 lf4).
Lemma conj231: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj232: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))
  (lfappend lf5 lf4).
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) lf2.
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) lf2.
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj245: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj246: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj247: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj248: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).


<---VALIDITY CHECKS--->
Time elapsed: 151 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj248: forall (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj192: forall (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj184: forall (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)
  (lfappend lf5 (qreva x lf7)).

Invalid:
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj247: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj246: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj245: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) lf2.
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) lf2.
Lemma conj232: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))
  (lfappend lf5 lf4).
Lemma conj231: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj230: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 lf4).
Lemma conj229: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj228: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj227: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) lf2.
Lemma conj226: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj225: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) lf2.
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)
  (lfappend lf5 (qreva x lf7)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj172: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) lf2.
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) lf2.
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) lf2.
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) lf2.
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (lfappend lf5 lf4).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (lfappend lf5 lf4).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 lf4).
Lemma conj164: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) lf2.
Lemma conj162: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) lf2.
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) lf2.
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj119: forall (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj117: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (qreva y Nil) lf4).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (qreva y lf8) lf4).
Lemma conj103: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj101: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj99: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) lf2.
Lemma conj97: forall (lf8 : lst) (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) lf2.
Lemma conj95: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj93: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj87: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj85: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj63: forall (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj47: forall (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) lf4).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) lf4).
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 lf4).
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) lf2.
Lemma conj31: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj29: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj21: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf5 (qreva x lf7)).
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y Nil) lf4).
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y lf8) lf4).
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf5 lf4).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 231 seconds
Generalizations:
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj255_imp: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6),
@eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj254_imp: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : @eq lst (qreva (lfappend x y) lf8)
        (lfappend (qreva y lf8) (qreva x lf8)),
@eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj253_imp: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6),
@eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj247: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj246: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj245: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) lf2.
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) lf2.
Lemma conj232: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))
  (lfappend lf5 lf4).
Lemma conj231: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj230: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 lf4).
Lemma conj229: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj228: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj227: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) lf2.
Lemma conj226: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj225: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) lf2.
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj191_imp: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6),
@eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj190_imp: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), forall
  _ : @eq lst (qreva (lfappend x y) lf8)
        (lfappend (qreva y lf8) (qreva x lf8)),
@eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj189_imp: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6),
@eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)
  (lfappend lf5 (qreva x lf7)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj172: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) lf2.
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) lf2.
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) lf2.
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) lf2.
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (lfappend lf5 lf4).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (lfappend lf5 lf4).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 lf4).
Lemma conj164: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) lf2.
Lemma conj162: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) lf2.
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) lf2.
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj127_imp: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3,
@eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj125_imp: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj119: forall (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj117: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (qreva y Nil) lf4).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (qreva y lf8) lf4).
Lemma conj103: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj101: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj99: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) lf2.
Lemma conj97: forall (lf8 : lst) (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) lf2.
Lemma conj95: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj93: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj87: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj85: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj63: forall (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj63_imp: forall (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj61_imp: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj47: forall (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) lf4).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) lf4).
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 lf4).
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) lf2.
Lemma conj31: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj29: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj21: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf5 (qreva x lf7)).
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y Nil) lf4).
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y lf8) lf4).
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf5 lf4).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 371 seconds
Valid:
Lemma conj63_imp: forall (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj127_imp: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3,
@eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj189_imp: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6),
@eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj190_imp: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), forall
  _ : @eq lst (qreva (lfappend x y) lf8)
        (lfappend (qreva y lf8) (qreva x lf8)),
@eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj191_imp: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6),
@eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj253_imp: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6),
@eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj254_imp: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), forall
  _ : @eq lst (qreva (lfappend x y) lf8)
        (lfappend (qreva y lf8) (qreva x lf8)),
@eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj255_imp: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6),
@eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst lf1 (lfappend lf5 lf4).
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y lf8) lf4).
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend (qreva y Nil) lf4).
Lemma conj21: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst lf1 (lfappend lf5 (qreva x lf7)).
Lemma conj29: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj31: forall (x : lst) (lf1 : lst) (y : lst) (lf7 : lst), @eq lst lf1 (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) lf2.
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 lf4).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) lf4).
Lemma conj47: forall (lf4 : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) lf4).
Lemma conj53: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj61_imp: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj61: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj63: forall (x : lst) (y : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj85: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj87: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : natural), @eq lst lf1 (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj93: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj95: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj97: forall (lf8 : lst) (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) lf2.
Lemma conj99: forall (lf2 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) lf2.
Lemma conj101: forall (lf8 : lst) (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj103: forall (lf5 : lst) (lf4 : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (qreva y lf8) lf4).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (qreva y Nil) lf4).
Lemma conj117: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj119: forall (lf5 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj125_imp: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj125: forall (lf8 : lst) (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj127: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) lf2.
Lemma conj162: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) lf2.
Lemma conj164: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) lf2.
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 lf4).
Lemma conj166: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (lfappend lf5 lf4).
Lemma conj168: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (lfappend lf5 lf4).
Lemma conj169: forall (lf6 : lst) (lf8 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) lf2.
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) lf2.
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) lf2.
Lemma conj172: forall (lf2 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) lf2.
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) lf4).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj176: forall (x : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)
  (lfappend (qreva y Nil) lf4).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (qreva x lf7)).
Lemma conj182: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)
  (lfappend lf5 (qreva x lf7)).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj190: forall (lf8 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7)).
Lemma conj191: forall (lf6 : lst) (x : lst) (y : lst) (lf7 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (qreva x lf7)).
Lemma conj225: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) lf2.
Lemma conj226: forall (lf8 : lst) (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj227: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) lf2.
Lemma conj228: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj229: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (lfappend lf5 lf4).
Lemma conj230: forall (lf8 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 lf4).
Lemma conj231: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (lfappend lf5 lf4).
Lemma conj232: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))
  (lfappend lf5 lf4).
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) lf2.
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8)) lf2.
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) lf2.
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil)) lf2.
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) lf4).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (lfappend (qreva y Nil) lf4).
Lemma conj245: forall (lf8 : lst) (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj246: forall (lf8 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8))).
Lemma conj247: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : natural), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil))).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma conj255: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil))).


<---CREATE SKETCHES--->
Time elapsed: 372 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj13_sketch0 : @eq lst lf1 (lfappend (##hole##) lf4)
Sketch conj13_sketch1 : @eq lst lf1 (##hole##)
Sketch conj13_term_sketch0 : @eq lst (qreva y lf8) (##hole##)
Sketch conj13_term_sketch1 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj15_sketch0 : @eq lst lf1 (lfappend (##hole##) lf4)
Sketch conj15_sketch1 : @eq lst lf1 (lfappend (qreva y (##hole##)) lf4)
Sketch conj15_sketch2 : @eq lst lf1 (##hole##)
Sketch conj15_term_sketch0 : @eq lst (qreva y Nil) (##hole##)
Sketch conj15_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj15_term_sketch2 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj21_sketch0 : @eq lst lf1 (##hole##)
Sketch conj21_sketch1 : @eq lst lf1 (lfappend lf5 (##hole##))
Sketch conj21_term_sketch0 : @eq lst (lfappend lf5 (qreva x lf7)) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (qreva x lf7) (##hole##)
Sketch conj29_sketch0 : @eq lst lf1 (##hole##)
Sketch conj29_sketch1 : @eq lst lf1 (lfappend (##hole##) (qreva x lf7))
Sketch conj29_sketch2 : @eq lst lf1 (lfappend (qreva y lf8) (##hole##))
Sketch conj29_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (##hole##)
Sketch conj29_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj29_term_sketch2 : @eq lst (qreva x lf7) (##hole##)
Sketch conj31_sketch0 : @eq lst lf1 (##hole##)
Sketch conj31_sketch1 : @eq lst lf1 (lfappend (##hole##) (qreva x lf7))
Sketch conj31_sketch2 : @eq lst lf1 (lfappend (qreva y Nil) (##hole##))
Sketch conj31_sketch3 : @eq lst lf1 (lfappend (qreva y (##hole##)) (qreva x lf7))
Sketch conj31_term_sketch0 : @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (qreva x lf7) (##hole##)
Sketch conj31_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj33_sketch0 : @eq lst (##hole##) lf2
Sketch conj33_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj37_sketch0 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj37_sketch1 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj37_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj45_sketch0 : @eq lst (##hole##) (lfappend (qreva y lf8) lf4)
Sketch conj45_sketch1 : @eq lst (lfappend lf3 lf7) (lfappend (##hole##) lf4)
Sketch conj45_sketch2 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj45_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj45_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj45_term_sketch2 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj47_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf4)
Sketch conj47_sketch1 : @eq lst (lfappend lf3 lf7) (lfappend (##hole##) lf4)
Sketch conj47_sketch2 : @eq lst (lfappend lf3 lf7) (lfappend (qreva y (##hole##)) lf4)
Sketch conj47_sketch3 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj47_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj47_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj47_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj47_term_sketch3 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj53_sketch0 : @eq lst (##hole##) (lfappend lf5 (qreva x lf7))
Sketch conj53_sketch1 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj53_sketch2 : @eq lst (lfappend lf3 lf7) (lfappend lf5 (##hole##))
Sketch conj53_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf7)) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (qreva x lf7) (##hole##)
Sketch conj61_imp_sketch0 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (##hole##) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj61_imp_sketch1 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj61_imp_sketch2 : forall _ : @eq lst (##hole##) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj61_imp_sketch3 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (##hole##) (qreva x lf7))
Sketch conj61_imp_sketch4 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (##hole##))
Sketch conj61_imp_sketch5 : forall _ : @eq lst (qreva (##hole##) lf8) lf3,
@eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj61_imp_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj61_imp_term_sketch1 : @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (##hole##)
Sketch conj61_imp_term_sketch2 : @eq lst (qreva (lfappend x y) lf8) (##hole##)
Sketch conj61_imp_term_sketch3 : @eq lst (qreva y lf8) (##hole##)
Sketch conj61_imp_term_sketch4 : @eq lst (qreva x lf7) (##hole##)
Sketch conj61_imp_term_sketch5 : @eq lst (lfappend x y) (##hole##)
Sketch conj61_sketch0 : @eq lst (##hole##) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj61_sketch1 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj61_sketch2 : @eq lst (lfappend lf3 lf7) (lfappend (##hole##) (qreva x lf7))
Sketch conj61_sketch3 : @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (##hole##))
Sketch conj61_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj61_term_sketch1 : @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (##hole##)
Sketch conj61_term_sketch2 : @eq lst (qreva y lf8) (##hole##)
Sketch conj61_term_sketch3 : @eq lst (qreva x lf7) (##hole##)
Sketch conj63_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) (qreva x lf7))
Sketch conj63_sketch1 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj63_sketch2 : @eq lst (lfappend lf3 lf7) (lfappend (##hole##) (qreva x lf7))
Sketch conj63_sketch3 : @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (##hole##))
Sketch conj63_sketch4 : @eq lst (lfappend lf3 lf7) (lfappend (qreva y (##hole##)) (qreva x lf7))
Sketch conj63_term_sketch0 : @eq lst (lfappend lf3 lf7) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (qreva x lf7) (##hole##)
Sketch conj63_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj85_sketch0 : @eq lst lf1 (lfappend lf5 (##hole##))
Sketch conj85_sketch1 : @eq lst lf1 (##hole##)
Sketch conj85_sketch2 : @eq lst lf1 (lfappend lf5 (qreva x (##hole##)))
Sketch conj85_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n lf8))) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj87_sketch0 : @eq lst lf1 (lfappend lf5 (##hole##))
Sketch conj87_sketch1 : @eq lst lf1 (##hole##)
Sketch conj87_sketch2 : @eq lst lf1 (lfappend lf5 (qreva x (##hole##)))
Sketch conj87_sketch3 : @eq lst lf1 (lfappend lf5 (qreva x (Cons n (##hole##))))
Sketch conj87_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj87_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n Nil))) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj87_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj93_sketch0 : @eq lst lf1 (lfappend (qreva y lf8) (##hole##))
Sketch conj93_sketch1 : @eq lst lf1 (lfappend (##hole##) (qreva x (Cons n lf8)))
Sketch conj93_sketch2 : @eq lst lf1 (##hole##)
Sketch conj93_sketch3 : @eq lst lf1 (lfappend (qreva y lf8) (qreva x (##hole##)))
Sketch conj93_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj93_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj93_term_sketch2 : @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8))) (##hole##)
Sketch conj93_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj95_sketch0 : @eq lst lf1 (lfappend (qreva y Nil) (##hole##))
Sketch conj95_sketch1 : @eq lst lf1 (lfappend (##hole##) (qreva x (Cons n Nil)))
Sketch conj95_sketch2 : @eq lst lf1 (lfappend (qreva y Nil) (qreva x (##hole##)))
Sketch conj95_sketch3 : @eq lst lf1 (##hole##)
Sketch conj95_sketch4 : @eq lst lf1 (lfappend (qreva y (##hole##)) (qreva x (Cons n (##hole##))))
Sketch conj95_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil))) (##hole##)
Sketch conj95_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj97_sketch0 : @eq lst (lfappend lf3 (##hole##)) lf2
Sketch conj97_sketch1 : @eq lst (##hole##) lf2
Sketch conj97_term_sketch0 : @eq lst (Cons n lf8) (##hole##)
Sketch conj97_term_sketch1 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj99_sketch0 : @eq lst (##hole##) lf2
Sketch conj99_sketch1 : @eq lst (lfappend lf3 (##hole##)) lf2
Sketch conj99_sketch2 : @eq lst (lfappend lf3 (Cons n (##hole##))) lf2
Sketch conj99_term_sketch0 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj99_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj99_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj101_sketch0 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj101_sketch1 : @eq lst (lfappend lf3 (##hole##)) (lfappend lf5 lf4)
Sketch conj101_sketch2 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj101_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj101_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj101_term_sketch2 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj103_sketch0 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj103_sketch1 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj103_sketch2 : @eq lst (lfappend lf3 (##hole##)) (lfappend lf5 lf4)
Sketch conj103_sketch3 : @eq lst (lfappend lf3 (Cons n (##hole##))) (lfappend lf5 lf4)
Sketch conj103_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj103_term_sketch1 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj103_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj103_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj109_sketch0 : @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (##hole##) lf4)
Sketch conj109_sketch1 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj109_sketch2 : @eq lst (lfappend lf3 (##hole##)) (lfappend (qreva y lf8) lf4)
Sketch conj109_sketch3 : @eq lst (##hole##) (lfappend (qreva y lf8) lf4)
Sketch conj109_term_sketch0 : @eq lst (qreva y lf8) (##hole##)
Sketch conj109_term_sketch1 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj109_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj109_term_sketch3 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj111_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf4)
Sketch conj111_sketch1 : @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (##hole##) lf4)
Sketch conj111_sketch2 : @eq lst (lfappend lf3 (##hole##)) (lfappend (qreva y Nil) lf4)
Sketch conj111_sketch3 : @eq lst (lfappend lf3 (Cons n (##hole##)))
  (lfappend (qreva y (##hole##)) lf4)
Sketch conj111_sketch4 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj111_term_sketch0 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj111_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj111_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj111_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj111_term_sketch4 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj117_sketch0 : @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf5 (##hole##))
Sketch conj117_sketch1 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj117_sketch2 : @eq lst (lfappend lf3 (##hole##)) (lfappend lf5 (qreva x (##hole##)))
Sketch conj117_sketch3 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n lf8)))
Sketch conj117_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n lf8))) (##hole##)
Sketch conj117_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj117_term_sketch3 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj119_sketch0 : @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf5 (##hole##))
Sketch conj119_sketch1 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj119_sketch2 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n Nil)))
Sketch conj119_sketch3 : @eq lst (lfappend lf3 (##hole##)) (lfappend lf5 (qreva x (##hole##)))
Sketch conj119_sketch4 : @eq lst (lfappend lf3 (Cons n (##hole##)))
  (lfappend lf5 (qreva x (Cons n (##hole##))))
Sketch conj119_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj119_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n Nil))) (##hole##)
Sketch conj119_term_sketch2 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj119_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj119_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj125_imp_sketch0 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 (Cons n lf8)) (lfappend (qreva y lf8) (##hole##))
Sketch conj125_imp_sketch1 : forall _ : @eq lst (##hole##) lf3,
@eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj125_imp_sketch2 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (##hole##) (qreva x (Cons n lf8)))
Sketch conj125_imp_sketch3 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj125_imp_sketch4 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (lfappend lf3 (##hole##))
  (lfappend (qreva y lf8) (qreva x (##hole##)))
Sketch conj125_imp_sketch5 : forall _ : @eq lst (qreva (##hole##) lf8) lf3,
@eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj125_imp_sketch6 : forall _ : @eq lst (qreva (lfappend x y) lf8) lf3,
@eq lst (##hole##) (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj125_imp_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj125_imp_term_sketch1 : @eq lst (qreva (lfappend x y) lf8) (##hole##)
Sketch conj125_imp_term_sketch2 : @eq lst (qreva y lf8) (##hole##)
Sketch conj125_imp_term_sketch3 : @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8))) (##hole##)
Sketch conj125_imp_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj125_imp_term_sketch5 : @eq lst (lfappend x y) (##hole##)
Sketch conj125_imp_term_sketch6 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj125_sketch0 : @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (qreva y lf8) (##hole##))
Sketch conj125_sketch1 : @eq lst (lfappend lf3 (Cons n lf8))
  (lfappend (##hole##) (qreva x (Cons n lf8)))
Sketch conj125_sketch2 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj125_sketch3 : @eq lst (lfappend lf3 (##hole##))
  (lfappend (qreva y lf8) (qreva x (##hole##)))
Sketch conj125_sketch4 : @eq lst (##hole##) (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj125_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj125_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj125_term_sketch2 : @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8))) (##hole##)
Sketch conj125_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj125_term_sketch4 : @eq lst (lfappend lf3 (Cons n lf8)) (##hole##)
Sketch conj127_sketch0 : @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (qreva y Nil) (##hole##))
Sketch conj127_sketch1 : @eq lst (##hole##) (lfappend (qreva y Nil) (qreva x (Cons n Nil)))
Sketch conj127_sketch2 : @eq lst (lfappend lf3 (Cons n Nil))
  (lfappend (##hole##) (qreva x (Cons n Nil)))
Sketch conj127_sketch3 : @eq lst (lfappend lf3 (##hole##))
  (lfappend (qreva y Nil) (qreva x (##hole##)))
Sketch conj127_sketch4 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj127_sketch5 : @eq lst (lfappend lf3 (Cons n (##hole##)))
  (lfappend (qreva y (##hole##)) (qreva x (Cons n (##hole##))))
Sketch conj127_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (lfappend lf3 (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil))) (##hole##)
Sketch conj127_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj161_sketch0 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj161_sketch1 : @eq lst (##hole##) lf2
Sketch conj161_term_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj161_term_sketch1 : @eq lst (lfappend (lfappend lf5 lf6) lf7) (##hole##)
Sketch conj162_sketch0 : @eq lst (##hole##) lf2
Sketch conj162_sketch1 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj162_sketch2 : @eq lst (lfappend (lfappend lf5 (##hole##)) lf7) lf2
Sketch conj162_term_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (##hole##)
Sketch conj162_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf8)) (##hole##)
Sketch conj162_term_sketch2 : @eq lst (qreva x lf8) (##hole##)
Sketch conj164_sketch0 : @eq lst (##hole##) lf2
Sketch conj164_sketch1 : @eq lst (lfappend (lfappend lf5 (##hole##)) lf7) lf2
Sketch conj164_sketch2 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj164_sketch3 : @eq lst (lfappend (lfappend lf5 (qreva x (##hole##))) lf7) lf2
Sketch conj164_term_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (##hole##)
Sketch conj164_term_sketch1 : @eq lst (qreva x Nil) (##hole##)
Sketch conj164_term_sketch2 : @eq lst (lfappend lf5 (qreva x Nil)) (##hole##)
Sketch conj164_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj165_sketch0 : @eq lst (lfappend (lfappend lf5 lf6) lf7) (##hole##)
Sketch conj165_sketch1 : @eq lst (lfappend (##hole##) lf7) (lfappend lf5 lf4)
Sketch conj165_sketch2 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj165_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj165_term_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj165_term_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) lf7) (##hole##)
Sketch conj166_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (##hole##)
Sketch conj166_sketch1 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj166_sketch2 : @eq lst (lfappend (##hole##) lf7) (lfappend lf5 lf4)
Sketch conj166_sketch3 : @eq lst (lfappend (lfappend lf5 (##hole##)) lf7) (lfappend lf5 lf4)
Sketch conj166_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj166_term_sketch1 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (##hole##)
Sketch conj166_term_sketch2 : @eq lst (lfappend lf5 (qreva x lf8)) (##hole##)
Sketch conj166_term_sketch3 : @eq lst (qreva x lf8) (##hole##)
Sketch conj168_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (##hole##)
Sketch conj168_sketch1 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj168_sketch2 : @eq lst (lfappend (lfappend lf5 (##hole##)) lf7) (lfappend lf5 lf4)
Sketch conj168_sketch3 : @eq lst (lfappend (##hole##) lf7) (lfappend lf5 lf4)
Sketch conj168_sketch4 : @eq lst (lfappend (lfappend lf5 (qreva x (##hole##))) lf7) (lfappend lf5 lf4)
Sketch conj168_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj168_term_sketch1 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7) (##hole##)
Sketch conj168_term_sketch2 : @eq lst (qreva x Nil) (##hole##)
Sketch conj168_term_sketch3 : @eq lst (lfappend lf5 (qreva x Nil)) (##hole##)
Sketch conj168_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj169_sketch0 : @eq lst (lfappend (lfappend (##hole##) lf6) lf7) lf2
Sketch conj169_sketch1 : @eq lst (##hole##) lf2
Sketch conj169_sketch2 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj169_term_sketch0 : @eq lst (qreva y lf8) (##hole##)
Sketch conj169_term_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (##hole##)
Sketch conj169_term_sketch2 : @eq lst (lfappend (qreva y lf8) lf6) (##hole##)
Sketch conj170_sketch0 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj170_sketch1 : @eq lst (lfappend (lfappend (##hole##) (qreva x lf8)) lf7) lf2
Sketch conj170_sketch2 : @eq lst (##hole##) lf2
Sketch conj170_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) (##hole##)) lf7) lf2
Sketch conj170_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)
Sketch conj170_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj170_term_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) (##hole##)
Sketch conj170_term_sketch3 : @eq lst (qreva x lf8) (##hole##)
Sketch conj171_sketch0 : @eq lst (##hole##) lf2
Sketch conj171_sketch1 : @eq lst (lfappend (lfappend (##hole##) lf6) lf7) lf2
Sketch conj171_sketch2 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj171_sketch3 : @eq lst (lfappend (lfappend (qreva y (##hole##)) lf6) lf7) lf2
Sketch conj171_term_sketch0 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (##hole##)
Sketch conj171_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj171_term_sketch2 : @eq lst (lfappend (qreva y Nil) lf6) (##hole##)
Sketch conj171_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj172_sketch0 : @eq lst (lfappend (##hole##) lf7) lf2
Sketch conj172_sketch1 : @eq lst (##hole##) lf2
Sketch conj172_sketch2 : @eq lst (lfappend (lfappend (qreva y Nil) (##hole##)) lf7) lf2
Sketch conj172_sketch3 : @eq lst (lfappend (lfappend (##hole##) (qreva x Nil)) lf7) lf2
Sketch conj172_sketch4 : @eq lst (lfappend (lfappend (qreva y (##hole##)) (qreva x (##hole##))) lf7)
  lf2
Sketch conj172_term_sketch0 : @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (##hole##)
Sketch conj172_term_sketch1 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) (##hole##)
Sketch conj172_term_sketch2 : @eq lst (qreva x Nil) (##hole##)
Sketch conj172_term_sketch3 : @eq lst (qreva y Nil) (##hole##)
Sketch conj172_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj173_sketch0 : @eq lst (lfappend (lfappend (##hole##) lf6) lf7) (lfappend (##hole##) lf4)
Sketch conj173_sketch1 : @eq lst (##hole##) (lfappend (qreva y lf8) lf4)
Sketch conj173_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (##hole##)
Sketch conj173_sketch3 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y lf8) lf4)
Sketch conj173_term_sketch0 : @eq lst (qreva y lf8) (##hole##)
Sketch conj173_term_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (##hole##)
Sketch conj173_term_sketch2 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj173_term_sketch3 : @eq lst (lfappend (qreva y lf8) lf6) (##hole##)
Sketch conj174_sketch0 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y lf8) lf4)
Sketch conj174_sketch1 : @eq lst (lfappend (lfappend (##hole##) (qreva x lf8)) lf7)
  (lfappend (##hole##) lf4)
Sketch conj174_sketch2 : @eq lst (##hole##) (lfappend (qreva y lf8) lf4)
Sketch conj174_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) (##hole##)
Sketch conj174_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) (##hole##)) lf7)
  (lfappend (qreva y lf8) lf4)
Sketch conj174_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)
Sketch conj174_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj174_term_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) (##hole##)
Sketch conj174_term_sketch3 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj174_term_sketch4 : @eq lst (qreva x lf8) (##hole##)
Sketch conj175_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf4)
Sketch conj175_sketch1 : @eq lst (lfappend (lfappend (##hole##) lf6) lf7) (lfappend (##hole##) lf4)
Sketch conj175_sketch2 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y Nil) lf4)
Sketch conj175_sketch3 : @eq lst (lfappend (lfappend (qreva y (##hole##)) lf6) lf7)
  (lfappend (qreva y (##hole##)) lf4)
Sketch conj175_sketch4 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (##hole##)
Sketch conj175_term_sketch0 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (##hole##)
Sketch conj175_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj175_term_sketch2 : @eq lst (lfappend (qreva y Nil) lf6) (##hole##)
Sketch conj175_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj175_term_sketch4 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj176_sketch0 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y Nil) lf4)
Sketch conj176_sketch1 : @eq lst (##hole##) (lfappend (qreva y Nil) lf4)
Sketch conj176_sketch2 : @eq lst (lfappend (lfappend (##hole##) (qreva x Nil)) lf7)
  (lfappend (##hole##) lf4)
Sketch conj176_sketch3 : @eq lst (lfappend (lfappend (qreva y Nil) (##hole##)) lf7)
  (lfappend (qreva y Nil) lf4)
Sketch conj176_sketch4 : @eq lst (lfappend (lfappend (qreva y (##hole##)) (qreva x (##hole##))) lf7)
  (lfappend (qreva y (##hole##)) lf4)
Sketch conj176_sketch5 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) (##hole##)
Sketch conj176_term_sketch0 : @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (##hole##)
Sketch conj176_term_sketch1 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7) (##hole##)
Sketch conj176_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj176_term_sketch3 : @eq lst (qreva x Nil) (##hole##)
Sketch conj176_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_term_sketch5 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj181_sketch0 : @eq lst (lfappend (##hole##) lf7) (lfappend lf5 (qreva x lf7))
Sketch conj181_sketch1 : @eq lst (lfappend (lfappend lf5 lf6) lf7) (##hole##)
Sketch conj181_sketch2 : @eq lst (##hole##) (lfappend lf5 (qreva x lf7))
Sketch conj181_sketch3 : @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (##hole##))
Sketch conj181_term_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj181_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf7)) (##hole##)
Sketch conj181_term_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) lf7) (##hole##)
Sketch conj181_term_sketch3 : @eq lst (qreva x lf7) (##hole##)
Sketch conj182_sketch0 : @eq lst (##hole##) (lfappend lf5 (qreva x lf7))
Sketch conj182_sketch1 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (##hole##)
Sketch conj182_sketch2 : @eq lst (lfappend (##hole##) lf7) (lfappend lf5 (qreva x lf7))
Sketch conj182_sketch3 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (lfappend lf5 (##hole##))
Sketch conj182_sketch4 : @eq lst (lfappend (lfappend lf5 (##hole##)) lf7) (lfappend lf5 (qreva x lf7))
Sketch conj182_term_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7) (##hole##)
Sketch conj182_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf7)) (##hole##)
Sketch conj182_term_sketch2 : @eq lst (lfappend lf5 (qreva x lf8)) (##hole##)
Sketch conj182_term_sketch3 : @eq lst (qreva x lf7) (##hole##)
Sketch conj182_term_sketch4 : @eq lst (qreva x lf8) (##hole##)
Sketch conj189_sketch0 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (##hole##)
Sketch conj189_sketch1 : @eq lst (lfappend (lfappend (##hole##) lf6) lf7)
  (lfappend (##hole##) (qreva x lf7))
Sketch conj189_sketch2 : @eq lst (##hole##) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj189_sketch3 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj189_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)
  (lfappend (qreva y lf8) (##hole##))
Sketch conj189_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (##hole##)
Sketch conj189_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj189_term_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (##hole##)
Sketch conj189_term_sketch3 : @eq lst (lfappend (qreva y lf8) lf6) (##hole##)
Sketch conj189_term_sketch4 : @eq lst (qreva x lf7) (##hole##)
Sketch conj190_sketch0 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj190_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) (##hole##)
Sketch conj190_sketch2 : @eq lst (lfappend (lfappend (##hole##) (qreva x lf8)) lf7)
  (lfappend (##hole##) (qreva x lf7))
Sketch conj190_sketch3 : @eq lst (##hole##) (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj190_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)
  (lfappend (qreva y lf8) (##hole##))
Sketch conj190_sketch5 : @eq lst (lfappend (lfappend (qreva y lf8) (##hole##)) lf7)
  (lfappend (qreva y lf8) (qreva x lf7))
Sketch conj190_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)
Sketch conj190_term_sketch1 : @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (##hole##)
Sketch conj190_term_sketch2 : @eq lst (qreva y lf8) (##hole##)
Sketch conj190_term_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7) (##hole##)
Sketch conj190_term_sketch4 : @eq lst (qreva x lf7) (##hole##)
Sketch conj190_term_sketch5 : @eq lst (qreva x lf8) (##hole##)
Sketch conj191_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) (qreva x lf7))
Sketch conj191_sketch1 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (##hole##)
Sketch conj191_sketch2 : @eq lst (lfappend (lfappend (##hole##) lf6) lf7)
  (lfappend (##hole##) (qreva x lf7))
Sketch conj191_sketch3 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)
  (lfappend (qreva y Nil) (##hole##))
Sketch conj191_sketch4 : @eq lst (lfappend (##hole##) lf7) (lfappend (qreva y Nil) (qreva x lf7))
Sketch conj191_sketch5 : @eq lst (lfappend (lfappend (qreva y (##hole##)) lf6) lf7)
  (lfappend (qreva y (##hole##)) (qreva x lf7))
Sketch conj191_term_sketch0 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (##hole##)
Sketch conj191_term_sketch1 : @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (##hole##)
Sketch conj191_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj191_term_sketch3 : @eq lst (qreva x lf7) (##hole##)
Sketch conj191_term_sketch4 : @eq lst (lfappend (qreva y Nil) lf6) (##hole##)
Sketch conj191_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj225_sketch0 : @eq lst (##hole##) lf2
Sketch conj225_sketch1 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj225_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) (##hole##)) lf2
Sketch conj225_term_sketch0 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (##hole##)
Sketch conj225_term_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj225_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj226_sketch0 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj226_sketch1 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (##hole##)) lf2
Sketch conj226_sketch2 : @eq lst (##hole##) lf2
Sketch conj226_sketch3 : @eq lst (lfappend (lfappend lf5 (##hole##)) (Cons n lf8)) lf2
Sketch conj226_term_sketch0 : @eq lst (lfappend lf5 (qreva x lf8)) (##hole##)
Sketch conj226_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj226_term_sketch2 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) (##hole##)
Sketch conj226_term_sketch3 : @eq lst (qreva x lf8) (##hole##)
Sketch conj227_sketch0 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj227_sketch1 : @eq lst (lfappend (lfappend lf5 lf6) (##hole##)) lf2
Sketch conj227_sketch2 : @eq lst (##hole##) lf2
Sketch conj227_sketch3 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n (##hole##))) lf2
Sketch conj227_term_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj227_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj227_term_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (##hole##)
Sketch conj227_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj228_sketch0 : @eq lst (##hole##) lf2
Sketch conj228_sketch1 : @eq lst (lfappend (lfappend lf5 (##hole##)) (Cons n Nil)) lf2
Sketch conj228_sketch2 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (##hole##)) lf2
Sketch conj228_sketch3 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj228_sketch4 : @eq lst (lfappend (lfappend lf5 (qreva x (##hole##))) (Cons n (##hole##)))
  lf2
Sketch conj228_term_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) (##hole##)
Sketch conj228_term_sketch1 : @eq lst (qreva x Nil) (##hole##)
Sketch conj228_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj228_term_sketch3 : @eq lst (lfappend lf5 (qreva x Nil)) (##hole##)
Sketch conj228_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj229_sketch0 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj229_sketch1 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (##hole##)
Sketch conj229_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend lf5 lf4)
Sketch conj229_sketch3 : @eq lst (lfappend (lfappend lf5 lf6) (##hole##)) (lfappend lf5 lf4)
Sketch conj229_term_sketch0 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (##hole##)
Sketch conj229_term_sketch1 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj229_term_sketch2 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj229_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj230_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) (##hole##)
Sketch conj230_sketch1 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend lf5 lf4)
Sketch conj230_sketch2 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (##hole##)) (lfappend lf5 lf4)
Sketch conj230_sketch3 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj230_sketch4 : @eq lst (lfappend (lfappend lf5 (##hole##)) (Cons n lf8)) (lfappend lf5 lf4)
Sketch conj230_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj230_term_sketch1 : @eq lst (lfappend lf5 (qreva x lf8)) (##hole##)
Sketch conj230_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj230_term_sketch3 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) (##hole##)
Sketch conj230_term_sketch4 : @eq lst (qreva x lf8) (##hole##)
Sketch conj231_sketch0 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (##hole##)
Sketch conj231_sketch1 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend lf5 lf4)
Sketch conj231_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) (##hole##)) (lfappend lf5 lf4)
Sketch conj231_sketch3 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj231_sketch4 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n (##hole##))) (lfappend lf5 lf4)
Sketch conj231_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj231_term_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj231_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj231_term_sketch3 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (##hole##)
Sketch conj231_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj232_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) (##hole##)
Sketch conj232_sketch1 : @eq lst (##hole##) (lfappend lf5 lf4)
Sketch conj232_sketch2 : @eq lst (lfappend (lfappend lf5 (##hole##)) (Cons n Nil)) (lfappend lf5 lf4)
Sketch conj232_sketch3 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (##hole##)) (lfappend lf5 lf4)
Sketch conj232_sketch4 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend lf5 lf4)
Sketch conj232_sketch5 : @eq lst (lfappend (lfappend lf5 (qreva x (##hole##))) (Cons n (##hole##)))
  (lfappend lf5 lf4)
Sketch conj232_term_sketch0 : @eq lst (lfappend lf5 lf4) (##hole##)
Sketch conj232_term_sketch1 : @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil)) (##hole##)
Sketch conj232_term_sketch2 : @eq lst (qreva x Nil) (##hole##)
Sketch conj232_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj232_term_sketch4 : @eq lst (lfappend lf5 (qreva x Nil)) (##hole##)
Sketch conj232_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj233_sketch0 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n lf8)) lf2
Sketch conj233_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (##hole##)) lf2
Sketch conj233_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj233_sketch3 : @eq lst (##hole##) lf2
Sketch conj233_term_sketch0 : @eq lst (qreva y lf8) (##hole##)
Sketch conj233_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj233_term_sketch2 : @eq lst (lfappend (qreva y lf8) lf6) (##hole##)
Sketch conj233_term_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) (##hole##)
Sketch conj234_sketch0 : @eq lst (lfappend (##hole##) (Cons n lf8)) lf2
Sketch conj234_sketch1 : @eq lst (##hole##) lf2
Sketch conj234_sketch2 : @eq lst (lfappend (lfappend (##hole##) (qreva x lf8)) (Cons n lf8)) lf2
Sketch conj234_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)) lf2
Sketch conj234_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) (##hole##)) (Cons n lf8)) lf2
Sketch conj234_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)
Sketch conj234_term_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (##hole##)
Sketch conj234_term_sketch2 : @eq lst (qreva y lf8) (##hole##)
Sketch conj234_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj234_term_sketch4 : @eq lst (qreva x lf8) (##hole##)
Sketch conj235_sketch0 : @eq lst (##hole##) lf2
Sketch conj235_sketch1 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n Nil)) lf2
Sketch conj235_sketch2 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (##hole##)) lf2
Sketch conj235_sketch3 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj235_sketch4 : @eq lst (lfappend (lfappend (qreva y (##hole##)) lf6) (Cons n (##hole##)))
  lf2
Sketch conj235_term_sketch0 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) (##hole##)
Sketch conj235_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj235_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj235_term_sketch3 : @eq lst (lfappend (qreva y Nil) lf6) (##hole##)
Sketch conj235_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj236_sketch0 : @eq lst (lfappend (##hole##) (Cons n Nil)) lf2
Sketch conj236_sketch1 : @eq lst (##hole##) lf2
Sketch conj236_sketch2 : @eq lst (lfappend (lfappend (qreva y Nil) (##hole##)) (Cons n Nil)) lf2
Sketch conj236_sketch3 : @eq lst (lfappend (lfappend (##hole##) (qreva x Nil)) (Cons n Nil)) lf2
Sketch conj236_sketch4 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (##hole##)) lf2
Sketch conj236_sketch5 : @eq lst
  (lfappend (lfappend (qreva y (##hole##)) (qreva x (##hole##)))
     (Cons n (##hole##))) lf2
Sketch conj236_term_sketch0 : @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (##hole##)
Sketch conj236_term_sketch1 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (##hole##)
Sketch conj236_term_sketch2 : @eq lst (qreva x Nil) (##hole##)
Sketch conj236_term_sketch3 : @eq lst (qreva y Nil) (##hole##)
Sketch conj236_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj236_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj237_sketch0 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n lf8))
  (lfappend (##hole##) lf4)
Sketch conj237_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) (##hole##)
Sketch conj237_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (##hole##))
  (lfappend (qreva y lf8) lf4)
Sketch conj237_sketch3 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend (qreva y lf8) lf4)
Sketch conj237_sketch4 : @eq lst (##hole##) (lfappend (qreva y lf8) lf4)
Sketch conj237_term_sketch0 : @eq lst (qreva y lf8) (##hole##)
Sketch conj237_term_sketch1 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj237_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj237_term_sketch3 : @eq lst (lfappend (qreva y lf8) lf6) (##hole##)
Sketch conj237_term_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) (##hole##)
Sketch conj238_sketch0 : @eq lst (lfappend (##hole##) (Cons n lf8)) (lfappend (qreva y lf8) lf4)
Sketch conj238_sketch1 : @eq lst (##hole##) (lfappend (qreva y lf8) lf4)
Sketch conj238_sketch2 : @eq lst (lfappend (lfappend (##hole##) (qreva x lf8)) (Cons n lf8))
  (lfappend (##hole##) lf4)
Sketch conj238_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (##hole##)
Sketch conj238_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (##hole##))
  (lfappend (qreva y lf8) lf4)
Sketch conj238_sketch5 : @eq lst (lfappend (lfappend (qreva y lf8) (##hole##)) (Cons n lf8))
  (lfappend (qreva y lf8) lf4)
Sketch conj238_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)
Sketch conj238_term_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (##hole##)
Sketch conj238_term_sketch2 : @eq lst (qreva y lf8) (##hole##)
Sketch conj238_term_sketch3 : @eq lst (lfappend (qreva y lf8) lf4) (##hole##)
Sketch conj238_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj238_term_sketch5 : @eq lst (qreva x lf8) (##hole##)
Sketch conj239_sketch0 : @eq lst (##hole##) (lfappend (qreva y Nil) lf4)
Sketch conj239_sketch1 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n Nil))
  (lfappend (##hole##) lf4)
Sketch conj239_sketch2 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (##hole##))
  (lfappend (qreva y Nil) lf4)
Sketch conj239_sketch3 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend (qreva y Nil) lf4)
Sketch conj239_sketch4 : @eq lst (lfappend (lfappend (qreva y (##hole##)) lf6) (Cons n (##hole##)))
  (lfappend (qreva y (##hole##)) lf4)
Sketch conj239_sketch5 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch0 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj239_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj239_term_sketch3 : @eq lst (lfappend (qreva y Nil) lf6) (##hole##)
Sketch conj239_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj239_term_sketch5 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj240_sketch0 : @eq lst (lfappend (##hole##) (Cons n Nil)) (lfappend (qreva y Nil) lf4)
Sketch conj240_sketch1 : @eq lst (##hole##) (lfappend (qreva y Nil) lf4)
Sketch conj240_sketch2 : @eq lst (lfappend (lfappend (##hole##) (qreva x Nil)) (Cons n Nil))
  (lfappend (##hole##) lf4)
Sketch conj240_sketch3 : @eq lst (lfappend (lfappend (qreva y Nil) (##hole##)) (Cons n Nil))
  (lfappend (qreva y Nil) lf4)
Sketch conj240_sketch4 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (##hole##))
  (lfappend (qreva y Nil) lf4)
Sketch conj240_sketch5 : @eq lst
  (lfappend (lfappend (qreva y (##hole##)) (qreva x (##hole##)))
     (Cons n (##hole##))) (lfappend (qreva y (##hole##)) lf4)
Sketch conj240_sketch6 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (##hole##)
Sketch conj240_term_sketch0 : @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (##hole##)
Sketch conj240_term_sketch1 : @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))
  (##hole##)
Sketch conj240_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj240_term_sketch3 : @eq lst (qreva x Nil) (##hole##)
Sketch conj240_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj240_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj240_term_sketch6 : @eq lst (lfappend (qreva y Nil) lf4) (##hole##)
Sketch conj245_sketch0 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n lf8)))
Sketch conj245_sketch1 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (lfappend lf5 (##hole##))
Sketch conj245_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (##hole##)
Sketch conj245_sketch3 : @eq lst (lfappend (##hole##) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8)))
Sketch conj245_sketch4 : @eq lst (lfappend (lfappend lf5 lf6) (##hole##))
  (lfappend lf5 (qreva x (##hole##)))
Sketch conj245_term_sketch0 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8)) (##hole##)
Sketch conj245_term_sketch1 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj245_term_sketch2 : @eq lst (lfappend lf5 (qreva x (Cons n lf8))) (##hole##)
Sketch conj245_term_sketch3 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj245_term_sketch4 : @eq lst (Cons n lf8) (##hole##)
Sketch conj246_sketch0 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))
  (lfappend lf5 (##hole##))
Sketch conj246_sketch1 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) (##hole##)
Sketch conj246_sketch2 : @eq lst (lfappend (##hole##) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8)))
Sketch conj246_sketch3 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (##hole##))
  (lfappend lf5 (qreva x (##hole##)))
Sketch conj246_sketch4 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n lf8)))
Sketch conj246_sketch5 : @eq lst (lfappend (lfappend lf5 (##hole##)) (Cons n lf8))
  (lfappend lf5 (qreva x (Cons n lf8)))
Sketch conj246_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj246_term_sketch1 : @eq lst (lfappend lf5 (qreva x (Cons n lf8))) (##hole##)
Sketch conj246_term_sketch2 : @eq lst (lfappend lf5 (qreva x lf8)) (##hole##)
Sketch conj246_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj246_term_sketch4 : @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8)) (##hole##)
Sketch conj246_term_sketch5 : @eq lst (qreva x lf8) (##hole##)
Sketch conj247_sketch0 : @eq lst (lfappend (##hole##) (Cons n Nil))
  (lfappend lf5 (qreva x (Cons n Nil)))
Sketch conj247_sketch1 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (lfappend lf5 (##hole##))
Sketch conj247_sketch2 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (##hole##)
Sketch conj247_sketch3 : @eq lst (lfappend (lfappend lf5 lf6) (##hole##))
  (lfappend lf5 (qreva x (##hole##)))
Sketch conj247_sketch4 : @eq lst (##hole##) (lfappend lf5 (qreva x (Cons n Nil)))
Sketch conj247_sketch5 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n (##hole##)))
  (lfappend lf5 (qreva x (Cons n (##hole##))))
Sketch conj247_term_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj247_term_sketch1 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj247_term_sketch2 : @eq lst (lfappend lf5 (qreva x (Cons n Nil))) (##hole##)
Sketch conj247_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj247_term_sketch4 : @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil)) (##hole##)
Sketch conj247_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj253_sketch0 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))
  (lfappend (qreva y lf8) (##hole##))
Sketch conj253_sketch1 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n lf8))
  (lfappend (##hole##) (qreva x (Cons n lf8)))
Sketch conj253_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) (##hole##)
Sketch conj253_sketch3 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (##hole##))
  (lfappend (qreva y lf8) (qreva x (##hole##)))
Sketch conj253_sketch4 : @eq lst (lfappend (##hole##) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj253_sketch5 : @eq lst (##hole##) (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj253_term_sketch0 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj253_term_sketch1 : @eq lst (qreva y lf8) (##hole##)
Sketch conj253_term_sketch2 : @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8))) (##hole##)
Sketch conj253_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj253_term_sketch4 : @eq lst (lfappend (qreva y lf8) lf6) (##hole##)
Sketch conj253_term_sketch5 : @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8)) (##hole##)
Sketch conj254_sketch0 : @eq lst (lfappend (##hole##) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj254_sketch1 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (lfappend (qreva y lf8) (##hole##))
Sketch conj254_sketch2 : @eq lst (##hole##) (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj254_sketch3 : @eq lst (lfappend (lfappend (##hole##) (qreva x lf8)) (Cons n lf8))
  (lfappend (##hole##) (qreva x (Cons n lf8)))
Sketch conj254_sketch4 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (##hole##)
Sketch conj254_sketch5 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (##hole##))
  (lfappend (qreva y lf8) (qreva x (##hole##)))
Sketch conj254_sketch6 : @eq lst (lfappend (lfappend (qreva y lf8) (##hole##)) (Cons n lf8))
  (lfappend (qreva y lf8) (qreva x (Cons n lf8)))
Sketch conj254_term_sketch0 : @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (##hole##)
Sketch conj254_term_sketch1 : @eq lst (qreva x (Cons n lf8)) (##hole##)
Sketch conj254_term_sketch2 : @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))
  (##hole##)
Sketch conj254_term_sketch3 : @eq lst (qreva y lf8) (##hole##)
Sketch conj254_term_sketch4 : @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8))) (##hole##)
Sketch conj254_term_sketch5 : @eq lst (Cons n lf8) (##hole##)
Sketch conj254_term_sketch6 : @eq lst (qreva x lf8) (##hole##)
Sketch conj255_sketch0 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))
  (lfappend (qreva y Nil) (##hole##))
Sketch conj255_sketch1 : @eq lst (##hole##) (lfappend (qreva y Nil) (qreva x (Cons n Nil)))
Sketch conj255_sketch2 : @eq lst (lfappend (lfappend (##hole##) lf6) (Cons n Nil))
  (lfappend (##hole##) (qreva x (Cons n Nil)))
Sketch conj255_sketch3 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (##hole##))
  (lfappend (qreva y Nil) (qreva x (##hole##)))
Sketch conj255_sketch4 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) (##hole##)
Sketch conj255_sketch5 : @eq lst (lfappend (##hole##) (Cons n Nil))
  (lfappend (qreva y Nil) (qreva x (Cons n Nil)))
Sketch conj255_sketch6 : @eq lst (lfappend (lfappend (qreva y (##hole##)) lf6) (Cons n (##hole##)))
  (lfappend (qreva y (##hole##)) (qreva x (Cons n (##hole##))))
Sketch conj255_term_sketch0 : @eq lst (qreva x (Cons n Nil)) (##hole##)
Sketch conj255_term_sketch1 : @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil)) (##hole##)
Sketch conj255_term_sketch2 : @eq lst (qreva y Nil) (##hole##)
Sketch conj255_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj255_term_sketch4 : @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil))) (##hole##)
Sketch conj255_term_sketch5 : @eq lst (lfappend (qreva y Nil) lf6) (##hole##)
Sketch conj255_term_sketch6 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2970 seconds
Problems per Sketch:
Sketch conj181_term_sketch3 --> Problem  synth_12
Sketch conj101_term_sketch2 --> Problem  synth_51
Sketch conj63_sketch4 --> Problem  synth_34
Sketch conj246_sketch4 --> Problem  synth_37
Sketch conj228_term_sketch4 --> Problem  synth_8
Sketch conj170_term_sketch3 --> Problem  synth_83
Sketch conj53_term_sketch2 --> Problem  synth_12
Sketch conj109_term_sketch1 --> Problem  synth_5
Sketch conj63_term_sketch0 --> Problem  synth_20
Sketch conj191_sketch3 --> Problem  synth_121
Sketch conj173_sketch0 --> Problem  synth_102
Sketch conj246_term_sketch5 --> Problem  synth_83
Sketch conj246_sketch5 --> Problem  synth_177
Sketch conj246_sketch3 --> Problem  synth_176
Sketch conj237_term_sketch4 --> Problem  synth_146
Sketch conj61_imp_term_sketch4 --> Problem  synth_12
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj235_term_sketch3 --> Problem  synth_97
Sketch conj254_sketch1 --> Problem  synth_185
Sketch conj231_term_sketch1 --> Problem  synth_78
Sketch conj101_sketch0 --> Problem  synth_51
Sketch conj246_term_sketch3 --> Problem  synth_38
Sketch conj85_sketch0 --> Problem  synth_10
Sketch conj246_sketch2 --> Problem  synth_173
Sketch conj230_sketch3 --> Problem  synth_2
Sketch conj175_sketch0 --> Problem  synth_9
Sketch conj13_term_sketch0 --> Problem  synth_4
Sketch conj174_sketch2 --> Problem  synth_5
Sketch conj253_term_sketch0 --> Problem  synth_36
Sketch conj182_sketch2 --> Problem  synth_111
Sketch conj181_sketch2 --> Problem  synth_11
Sketch conj170_term_sketch0 --> Problem  synth_29
Sketch conj234_term_sketch1 --> Problem  synth_45
Sketch conj164_term_sketch3 --> Problem  synth_8
Sketch conj168_sketch3 --> Problem  synth_87
Sketch conj29_term_sketch1 --> Problem  synth_4
Sketch conj226_sketch2 --> Problem  synth_19
Sketch conj236_term_sketch4 --> Problem  synth_42
Sketch conj246_sketch0 --> Problem  synth_175
Sketch conj239_sketch3 --> Problem  synth_166
Sketch conj227_sketch2 --> Problem  synth_19
Sketch conj15_sketch1 --> Problem  synth_6
Sketch conj235_term_sketch4 --> Problem  synth_8
Sketch conj236_term_sketch1 --> Problem  synth_49
Sketch conj189_sketch4 --> Problem  synth_117
Sketch conj61_imp_sketch3 --> Problem  synth_26
Sketch conj225_term_sketch2 --> Problem  synth_38
Sketch conj170_sketch3 --> Problem  synth_94
Sketch conj245_term_sketch2 --> Problem  synth_37
Sketch conj125_imp_sketch6 --> Problem  synth_68
Sketch conj240_term_sketch1 --> Problem  synth_49
Sketch conj164_sketch2 --> Problem  synth_77
Sketch conj85_term_sketch0 --> Problem  synth_36
Sketch conj182_sketch4 --> Problem  synth_114
Sketch conj45_sketch0 --> Problem  synth_5
Sketch conj255_term_sketch6 --> Problem  synth_8
Sketch conj247_sketch3 --> Problem  synth_174
Sketch conj97_term_sketch0 --> Problem  synth_38
Sketch conj95_term_sketch3 --> Problem  synth_49
Sketch conj29_term_sketch0 --> Problem  synth_15
Sketch conj161_sketch1 --> Problem  synth_19
Sketch conj31_term_sketch0 --> Problem  synth_18
Sketch conj190_term_sketch3 --> Problem  synth_15
Sketch conj117_sketch3 --> Problem  synth_37
Sketch conj239_term_sketch0 --> Problem  synth_153
Sketch conj237_sketch2 --> Problem  synth_159
Sketch conj234_sketch1 --> Problem  synth_19
Sketch conj172_term_sketch3 --> Problem  synth_7
Sketch conj190_term_sketch4 --> Problem  synth_12
Sketch conj101_sketch2 --> Problem  synth_2
Sketch conj236_sketch3 --> Problem  synth_155
Sketch conj245_sketch1 --> Problem  synth_172
Sketch conj254_term_sketch2 --> Problem  synth_45
Sketch conj127_sketch0 --> Problem  synth_73
Sketch conj247_sketch2 --> Problem  synth_131
Sketch conj165_sketch2 --> Problem  synth_2
Sketch conj240_term_sketch5 --> Problem  synth_8
Sketch conj87_sketch3 --> Problem  synth_39
Sketch conj176_term_sketch4 --> Problem  synth_8
Sketch conj191_sketch1 --> Problem  synth_96
Sketch conj175_sketch1 --> Problem  synth_102
Sketch conj245_term_sketch0 --> Problem  synth_126
Sketch conj230_sketch0 --> Problem  synth_37
Sketch conj189_sketch0 --> Problem  synth_91
Sketch conj103_sketch1 --> Problem  synth_2
Sketch conj254_sketch2 --> Problem  synth_45
Sketch conj125_imp_sketch5 --> Problem  synth_70
Sketch conj61_sketch0 --> Problem  synth_15
Sketch conj111_term_sketch1 --> Problem  synth_7
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj233_sketch3 --> Problem  synth_19
Sketch conj169_term_sketch1 --> Problem  synth_91
Sketch conj181_sketch1 --> Problem  synth_79
Sketch conj47_term_sketch3 --> Problem  synth_9
Sketch conj166_term_sketch0 --> Problem  synth_2
Sketch conj233_term_sketch0 --> Problem  synth_4
Sketch conj255_term_sketch5 --> Problem  synth_97
Sketch conj230_sketch1 --> Problem  synth_135
Sketch conj191_term_sketch5 --> Problem  synth_8
Sketch conj191_sketch2 --> Problem  synth_115
Sketch conj29_term_sketch2 --> Problem  synth_12
Sketch conj232_term_sketch2 --> Problem  synth_85
Sketch conj176_sketch3 --> Problem  synth_109
Sketch conj230_sketch2 --> Problem  synth_137
Sketch conj228_sketch1 --> Problem  synth_132
Sketch conj175_sketch3 --> Problem  synth_107
Sketch conj172_sketch1 --> Problem  synth_19
Sketch conj162_term_sketch1 --> Problem  synth_82
Sketch conj125_sketch0 --> Problem  synth_71
Sketch conj53_term_sketch0 --> Problem  synth_20
Sketch conj31_term_sketch3 --> Problem  synth_8
Sketch conj175_term_sketch3 --> Problem  synth_8
Sketch conj175_sketch4 --> Problem  synth_96
Sketch conj239_term_sketch2 --> Problem  synth_42
Sketch conj247_term_sketch4 --> Problem  synth_131
Sketch conj254_term_sketch4 --> Problem  synth_45
Sketch conj29_sketch0 --> Problem  synth_1
Sketch conj225_sketch1 --> Problem  synth_124
Sketch conj125_term_sketch1 --> Problem  synth_4
Sketch conj247_sketch0 --> Problem  synth_178
Sketch conj182_term_sketch3 --> Problem  synth_12
Sketch conj33_term_sketch0 --> Problem  synth_20
Sketch conj227_term_sketch2 --> Problem  synth_131
Sketch conj247_term_sketch2 --> Problem  synth_41
Sketch conj182_term_sketch1 --> Problem  synth_11
Sketch conj227_sketch0 --> Problem  synth_129
Sketch conj97_sketch0 --> Problem  synth_50
Sketch conj31_sketch3 --> Problem  synth_17
Sketch conj182_term_sketch0 --> Problem  synth_81
Sketch conj93_term_sketch2 --> Problem  synth_45
Sketch conj239_term_sketch5 --> Problem  synth_9
Sketch conj228_term_sketch3 --> Problem  synth_86
Sketch conj225_term_sketch1 --> Problem  synth_78
Sketch conj61_sketch2 --> Problem  synth_31
Sketch conj117_term_sketch2 --> Problem  synth_38
Sketch conj125_imp_term_sketch6 --> Problem  synth_51
Sketch conj182_sketch3 --> Problem  synth_113
Sketch conj231_sketch3 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj164_term_sketch0 --> Problem  synth_11
Sketch conj191_term_sketch2 --> Problem  synth_7
Sketch conj63_sketch2 --> Problem  synth_31
Sketch conj125_sketch1 --> Problem  synth_72
Sketch conj255_term_sketch0 --> Problem  synth_40
Sketch conj181_term_sketch2 --> Problem  synth_79
Sketch conj170_term_sketch2 --> Problem  synth_15
Sketch conj99_sketch2 --> Problem  synth_52
Sketch conj176_term_sketch1 --> Problem  synth_18
Sketch conj176_sketch5 --> Problem  synth_18
Sketch conj172_term_sketch2 --> Problem  synth_85
Sketch conj47_term_sketch0 --> Problem  synth_20
Sketch conj255_sketch6 --> Problem  synth_193
Sketch conj231_term_sketch3 --> Problem  synth_131
Sketch conj226_sketch0 --> Problem  synth_124
Sketch conj239_sketch5 --> Problem  synth_153
Sketch conj182_sketch0 --> Problem  synth_11
Sketch conj172_sketch0 --> Problem  synth_77
Sketch conj21_term_sketch0 --> Problem  synth_11
Sketch conj253_sketch0 --> Problem  synth_181
Sketch conj168_sketch1 --> Problem  synth_2
Sketch conj191_sketch5 --> Problem  synth_123
Sketch conj231_term_sketch4 --> Problem  synth_8
Sketch conj231_sketch2 --> Problem  synth_136
Sketch conj101_term_sketch0 --> Problem  synth_2
Sketch conj189_term_sketch0 --> Problem  synth_15
Sketch conj170_sketch0 --> Problem  synth_77
Sketch conj171_term_sketch1 --> Problem  synth_7
Sketch conj232_sketch4 --> Problem  synth_139
Sketch conj109_sketch0 --> Problem  synth_56
Sketch conj232_sketch3 --> Problem  synth_142
Sketch conj111_term_sketch2 --> Problem  synth_42
Sketch conj176_sketch2 --> Problem  synth_108
Sketch conj240_sketch5 --> Problem  synth_171
Sketch conj162_term_sketch2 --> Problem  synth_83
Sketch conj101_sketch1 --> Problem  synth_54
Sketch conj164_term_sketch2 --> Problem  synth_86
Sketch conj245_sketch3 --> Problem  synth_173
Sketch conj174_term_sketch0 --> Problem  synth_29
Sketch conj53_sketch1 --> Problem  synth_20
Sketch conj127_sketch5 --> Problem  synth_76
Sketch conj254_term_sketch0 --> Problem  synth_29
Sketch conj125_imp_sketch4 --> Problem  synth_69
Sketch conj175_sketch2 --> Problem  synth_106
Sketch conj103_term_sketch2 --> Problem  synth_42
Sketch conj174_term_sketch4 --> Problem  synth_83
Sketch conj247_sketch1 --> Problem  synth_179
Sketch conj176_sketch0 --> Problem  synth_106
Sketch conj237_sketch4 --> Problem  synth_5
Sketch conj119_sketch0 --> Problem  synth_63
Sketch conj61_sketch1 --> Problem  synth_20
Sketch conj253_term_sketch3 --> Problem  synth_38
Sketch conj236_sketch1 --> Problem  synth_19
Sketch conj254_term_sketch3 --> Problem  synth_4
Sketch conj189_term_sketch2 --> Problem  synth_91
Sketch conj109_term_sketch2 --> Problem  synth_38
Sketch conj111_sketch3 --> Problem  synth_60
Sketch conj247_term_sketch5 --> Problem  synth_8
Sketch conj181_term_sketch0 --> Problem  synth_78
Sketch conj235_term_sketch1 --> Problem  synth_7
Sketch conj232_term_sketch1 --> Problem  synth_41
Sketch conj225_sketch0 --> Problem  synth_19
Sketch conj125_term_sketch2 --> Problem  synth_45
Sketch conj103_term_sketch1 --> Problem  synth_53
Sketch conj240_term_sketch3 --> Problem  synth_85
Sketch conj109_sketch1 --> Problem  synth_51
Sketch conj125_imp_sketch2 --> Problem  synth_67
Sketch conj237_term_sketch0 --> Problem  synth_4
Sketch conj127_term_sketch5 --> Problem  synth_8
Sketch conj93_sketch3 --> Problem  synth_44
Sketch conj232_sketch0 --> Problem  synth_41
Sketch conj255_term_sketch3 --> Problem  synth_42
Sketch conj239_sketch0 --> Problem  synth_9
Sketch conj171_sketch1 --> Problem  synth_90
Sketch conj63_term_sketch1 --> Problem  synth_18
Sketch conj103_sketch3 --> Problem  synth_55
Sketch conj127_term_sketch4 --> Problem  synth_49
Sketch conj236_term_sketch2 --> Problem  synth_85
Sketch conj61_imp_term_sketch3 --> Problem  synth_4
Sketch conj109_sketch2 --> Problem  synth_57
Sketch conj15_term_sketch1 --> Problem  synth_8
Sketch conj238_term_sketch1 --> Problem  synth_45
Sketch conj228_sketch0 --> Problem  synth_19
Sketch conj226_term_sketch1 --> Problem  synth_38
Sketch conj236_term_sketch5 --> Problem  synth_8
Sketch conj95_term_sketch4 --> Problem  synth_8
Sketch conj253_sketch4 --> Problem  synth_184
Sketch conj169_term_sketch2 --> Problem  synth_92
Sketch conj127_term_sketch3 --> Problem  synth_42
Sketch conj255_sketch4 --> Problem  synth_153
Sketch conj255_sketch2 --> Problem  synth_190
Sketch conj166_sketch2 --> Problem  synth_87
Sketch conj125_imp_sketch3 --> Problem  synth_68
Sketch conj119_term_sketch0 --> Problem  synth_40
Sketch conj237_term_sketch3 --> Problem  synth_92
Sketch conj168_term_sketch3 --> Problem  synth_86
Sketch conj87_term_sketch0 --> Problem  synth_40
Sketch conj61_imp_sketch1 --> Problem  synth_24
Sketch conj231_sketch0 --> Problem  synth_131
Sketch conj171_term_sketch3 --> Problem  synth_8
Sketch conj109_sketch3 --> Problem  synth_5
Sketch conj172_term_sketch4 --> Problem  synth_8
Sketch conj228_term_sketch2 --> Problem  synth_42
Sketch conj173_sketch1 --> Problem  synth_5
Sketch conj125_imp_term_sketch3 --> Problem  synth_45
Sketch conj246_term_sketch0 --> Problem  synth_36
Sketch conj255_term_sketch2 --> Problem  synth_7
Sketch conj166_term_sketch1 --> Problem  synth_81
Sketch conj165_term_sketch1 --> Problem  synth_78
Sketch conj13_sketch1 --> Problem  synth_1
Sketch conj127_term_sketch2 --> Problem  synth_7
Sketch conj233_sketch2 --> Problem  synth_124
Sketch conj111_sketch1 --> Problem  synth_58
Sketch conj236_sketch4 --> Problem  synth_156
Sketch conj229_term_sketch3 --> Problem  synth_38
Sketch conj238_sketch5 --> Problem  synth_163
Sketch conj234_term_sketch3 --> Problem  synth_38
Sketch conj63_term_sketch2 --> Problem  synth_7
Sketch conj253_sketch1 --> Problem  synth_182
Sketch conj245_sketch0 --> Problem  synth_37
Sketch conj235_sketch0 --> Problem  synth_19
Sketch conj254_sketch3 --> Problem  synth_186
Sketch conj171_term_sketch0 --> Problem  synth_96
Sketch conj168_sketch2 --> Problem  synth_88
Sketch conj189_sketch3 --> Problem  synth_116
Sketch conj246_sketch1 --> Problem  synth_37
Sketch conj111_term_sketch3 --> Problem  synth_8
Sketch conj245_term_sketch1 --> Problem  synth_36
Sketch conj111_term_sketch0 --> Problem  synth_53
Sketch conj236_term_sketch3 --> Problem  synth_7
Sketch conj191_sketch0 --> Problem  synth_18
Sketch conj127_sketch2 --> Problem  synth_74
Sketch conj111_sketch2 --> Problem  synth_59
Sketch conj189_term_sketch1 --> Problem  synth_4
Sketch conj119_sketch4 --> Problem  synth_64
Sketch conj93_term_sketch3 --> Problem  synth_38
Sketch conj233_term_sketch2 --> Problem  synth_92
Sketch conj125_term_sketch0 --> Problem  synth_36
Sketch conj168_sketch4 --> Problem  synth_89
Sketch conj240_sketch4 --> Problem  synth_170
Sketch conj103_sketch2 --> Problem  synth_54
Sketch conj174_sketch3 --> Problem  synth_15
Sketch conj61_imp_sketch2 --> Problem  synth_25
Sketch conj95_sketch3 --> Problem  synth_1
Sketch conj238_term_sketch5 --> Problem  synth_83
Sketch conj119_term_sketch2 --> Problem  synth_53
Sketch conj53_sketch0 --> Problem  synth_11
Sketch conj190_term_sketch5 --> Problem  synth_83
Sketch conj247_term_sketch3 --> Problem  synth_42
Sketch conj226_term_sketch2 --> Problem  synth_37
Sketch conj161_sketch0 --> Problem  synth_77
Sketch conj45_sketch2 --> Problem  synth_20
Sketch conj164_sketch0 --> Problem  synth_19
Sketch conj165_term_sketch0 --> Problem  synth_2
Sketch conj61_sketch3 --> Problem  synth_32
Sketch conj191_term_sketch3 --> Problem  synth_12
Sketch conj234_sketch2 --> Problem  synth_147
Sketch conj189_sketch1 --> Problem  synth_115
Sketch conj176_sketch4 --> Problem  synth_110
Sketch conj225_term_sketch0 --> Problem  synth_126
Sketch conj95_term_sketch1 --> Problem  synth_7
Sketch conj95_term_sketch0 --> Problem  synth_40
Sketch conj168_term_sketch2 --> Problem  synth_85
Sketch conj63_term_sketch3 --> Problem  synth_12
Sketch conj63_sketch0 --> Problem  synth_18
Sketch conj232_term_sketch0 --> Problem  synth_2
Sketch conj119_term_sketch4 --> Problem  synth_8
Sketch conj111_sketch4 --> Problem  synth_53
Sketch conj164_term_sketch1 --> Problem  synth_85
Sketch conj117_sketch1 --> Problem  synth_51
Sketch conj127_sketch1 --> Problem  synth_49
Sketch conj87_sketch0 --> Problem  synth_10
Sketch conj245_sketch2 --> Problem  synth_126
Sketch conj93_term_sketch1 --> Problem  synth_4
Sketch conj111_sketch0 --> Problem  synth_9
Sketch conj15_sketch0 --> Problem  synth_3
Sketch conj233_sketch0 --> Problem  synth_144
Sketch conj61_term_sketch1 --> Problem  synth_15
Sketch conj230_term_sketch0 --> Problem  synth_2
Sketch conj37_term_sketch1 --> Problem  synth_2
Sketch conj45_term_sketch1 --> Problem  synth_4
Sketch conj127_term_sketch1 --> Problem  synth_53
Sketch conj247_term_sketch1 --> Problem  synth_40
Sketch conj31_sketch1 --> Problem  synth_13
Sketch conj231_term_sketch0 --> Problem  synth_2
Sketch conj245_term_sketch4 --> Problem  synth_38
Sketch conj254_sketch5 --> Problem  synth_187
Sketch conj254_term_sketch5 --> Problem  synth_38
Sketch conj238_sketch4 --> Problem  synth_162
Sketch conj61_imp_sketch0 --> Problem  synth_24
Sketch conj170_sketch1 --> Problem  synth_93
Sketch conj253_term_sketch5 --> Problem  synth_146
Sketch conj15_term_sketch2 --> Problem  synth_9
Sketch conj238_sketch0 --> Problem  synth_160
Sketch conj240_sketch6 --> Problem  synth_49
Sketch conj171_sketch0 --> Problem  synth_19
Sketch conj125_term_sketch3 --> Problem  synth_38
Sketch conj13_term_sketch1 --> Problem  synth_5
Sketch conj127_sketch3 --> Problem  synth_75
Sketch conj87_term_sketch1 --> Problem  synth_41
Sketch conj21_term_sketch1 --> Problem  synth_12
Sketch conj182_term_sketch4 --> Problem  synth_83
Sketch conj31_sketch0 --> Problem  synth_1
Sketch conj190_term_sketch0 --> Problem  synth_29
Sketch conj127_term_sketch0 --> Problem  synth_40
Sketch conj61_term_sketch2 --> Problem  synth_4
Sketch conj234_term_sketch2 --> Problem  synth_4
Sketch conj175_term_sketch0 --> Problem  synth_96
Sketch conj93_sketch2 --> Problem  synth_1
Sketch conj238_term_sketch0 --> Problem  synth_29
Sketch conj226_term_sketch3 --> Problem  synth_83
Sketch conj47_sketch2 --> Problem  synth_22
Sketch conj21_sketch0 --> Problem  synth_1
Sketch conj253_sketch5 --> Problem  synth_45
Sketch conj228_sketch2 --> Problem  synth_133
Sketch conj61_imp_term_sketch5 --> Problem  synth_30
Sketch conj237_sketch0 --> Problem  synth_158
Sketch conj176_term_sketch0 --> Problem  synth_101
Sketch conj164_sketch1 --> Problem  synth_80
Sketch conj237_sketch1 --> Problem  synth_146
Sketch conj238_sketch2 --> Problem  synth_161
Sketch conj125_term_sketch4 --> Problem  synth_51
Sketch conj97_term_sketch1 --> Problem  synth_51
Sketch conj235_term_sketch2 --> Problem  synth_42
Sketch conj162_sketch0 --> Problem  synth_19
Sketch conj125_sketch2 --> Problem  synth_51
Sketch conj239_term_sketch3 --> Problem  synth_97
Sketch conj99_sketch0 --> Problem  synth_19
Sketch conj171_sketch2 --> Problem  synth_77
Sketch conj125_sketch3 --> Problem  synth_69
Sketch conj230_term_sketch3 --> Problem  synth_37
Sketch conj232_sketch5 --> Problem  synth_143
Sketch conj47_term_sketch1 --> Problem  synth_7
Sketch conj87_term_sketch3 --> Problem  synth_8
Sketch conj254_sketch0 --> Problem  synth_184
Sketch conj227_term_sketch0 --> Problem  synth_78
Sketch conj232_term_sketch5 --> Problem  synth_8
Sketch conj125_imp_term_sketch0 --> Problem  synth_36
Sketch conj226_sketch1 --> Problem  synth_127
Sketch conj237_term_sketch1 --> Problem  synth_5
Sketch conj53_term_sketch1 --> Problem  synth_11
Sketch conj119_sketch1 --> Problem  synth_53
Sketch conj63_sketch1 --> Problem  synth_20
Sketch conj190_sketch2 --> Problem  synth_118
Sketch conj189_sketch2 --> Problem  synth_15
Sketch conj85_term_sketch2 --> Problem  synth_38
Sketch conj182_term_sketch2 --> Problem  synth_82
Sketch conj229_sketch0 --> Problem  synth_2
Sketch conj173_term_sketch3 --> Problem  synth_92
Sketch conj93_sketch1 --> Problem  synth_43
Sketch conj236_sketch0 --> Problem  synth_129
Sketch conj181_sketch0 --> Problem  synth_111
Sketch conj235_term_sketch0 --> Problem  synth_153
Sketch conj87_sketch1 --> Problem  synth_1
Sketch conj85_term_sketch1 --> Problem  synth_37
Sketch conj240_term_sketch0 --> Problem  synth_101
Sketch conj170_sketch2 --> Problem  synth_19
Sketch conj61_term_sketch0 --> Problem  synth_20
Sketch conj29_sketch2 --> Problem  synth_14
Sketch conj253_term_sketch1 --> Problem  synth_4
Sketch conj119_sketch3 --> Problem  synth_62
Sketch conj61_imp_term_sketch1 --> Problem  synth_15
Sketch conj165_sketch1 --> Problem  synth_87
Sketch conj255_term_sketch4 --> Problem  synth_49
Sketch conj33_sketch0 --> Problem  synth_19
Sketch conj246_term_sketch1 --> Problem  synth_37
Sketch conj239_sketch4 --> Problem  synth_167
Sketch conj61_imp_sketch4 --> Problem  synth_27
Sketch conj239_term_sketch1 --> Problem  synth_7
Sketch conj182_sketch1 --> Problem  synth_81
Sketch conj234_term_sketch4 --> Problem  synth_83
Sketch conj232_term_sketch3 --> Problem  synth_42
Sketch conj190_sketch3 --> Problem  synth_15
Sketch conj95_sketch4 --> Problem  synth_48
Sketch conj168_term_sketch0 --> Problem  synth_2
Sketch conj87_sketch2 --> Problem  synth_35
Sketch conj190_term_sketch1 --> Problem  synth_15
Sketch conj254_sketch6 --> Problem  synth_188
Sketch conj234_sketch0 --> Problem  synth_124
Sketch conj45_sketch1 --> Problem  synth_21
Sketch conj230_term_sketch4 --> Problem  synth_83
Sketch conj172_sketch4 --> Problem  synth_100
Sketch conj101_term_sketch1 --> Problem  synth_38
Sketch conj254_sketch4 --> Problem  synth_45
Sketch conj109_term_sketch3 --> Problem  synth_51
Sketch conj239_sketch1 --> Problem  synth_164
Sketch conj125_imp_term_sketch5 --> Problem  synth_30
Sketch conj172_term_sketch0 --> Problem  synth_101
Sketch conj125_imp_term_sketch2 --> Problem  synth_4
Sketch conj45_term_sketch0 --> Problem  synth_20
Sketch conj245_term_sketch3 --> Problem  synth_78
Sketch conj233_sketch1 --> Problem  synth_145
Sketch conj85_sketch2 --> Problem  synth_35
Sketch conj31_sketch2 --> Problem  synth_16
Sketch conj85_sketch1 --> Problem  synth_1
Sketch conj235_sketch3 --> Problem  synth_129
Sketch conj191_term_sketch4 --> Problem  synth_97
Sketch conj238_term_sketch3 --> Problem  synth_5
Sketch conj87_term_sketch2 --> Problem  synth_42
Sketch conj103_sketch0 --> Problem  synth_53
Sketch conj228_sketch4 --> Problem  synth_134
Sketch conj240_term_sketch4 --> Problem  synth_42
Sketch conj161_term_sketch0 --> Problem  synth_78
Sketch conj229_sketch1 --> Problem  synth_126
Sketch conj235_sketch2 --> Problem  synth_151
Sketch conj254_term_sketch6 --> Problem  synth_83
Sketch conj99_term_sketch2 --> Problem  synth_8
Sketch conj61_imp_term_sketch0 --> Problem  synth_20
Sketch conj253_term_sketch4 --> Problem  synth_92
Sketch conj117_sketch2 --> Problem  synth_62
Sketch conj61_term_sketch3 --> Problem  synth_12
Sketch conj171_sketch3 --> Problem  synth_95
Sketch conj99_term_sketch0 --> Problem  synth_53
Sketch conj103_term_sketch3 --> Problem  synth_8
Sketch conj247_sketch5 --> Problem  synth_180
Sketch conj231_term_sketch2 --> Problem  synth_42
Sketch conj228_term_sketch1 --> Problem  synth_85
Sketch conj161_term_sketch1 --> Problem  synth_79
Sketch conj176_sketch1 --> Problem  synth_9
Sketch conj111_term_sketch4 --> Problem  synth_9
Sketch conj97_sketch1 --> Problem  synth_19
Sketch conj169_sketch0 --> Problem  synth_90
Sketch conj237_sketch3 --> Problem  synth_160
Sketch conj21_sketch1 --> Problem  synth_10
Sketch conj175_term_sketch2 --> Problem  synth_97
Sketch conj225_sketch2 --> Problem  synth_125
Sketch conj47_term_sketch2 --> Problem  synth_8
Sketch conj168_term_sketch1 --> Problem  synth_11
Sketch conj236_sketch5 --> Problem  synth_157
Sketch conj232_sketch2 --> Problem  synth_141
Sketch conj166_term_sketch3 --> Problem  synth_83
Sketch conj189_term_sketch3 --> Problem  synth_92
Sketch conj119_sketch2 --> Problem  synth_41
Sketch conj247_term_sketch0 --> Problem  synth_78
Sketch conj238_sketch3 --> Problem  synth_45
Sketch conj162_sketch2 --> Problem  synth_80
Sketch conj125_imp_sketch1 --> Problem  synth_66
Sketch conj37_sketch1 --> Problem  synth_20
Sketch conj176_term_sketch3 --> Problem  synth_85
Sketch conj117_term_sketch1 --> Problem  synth_37
Sketch conj228_term_sketch0 --> Problem  synth_41
Sketch conj238_sketch1 --> Problem  synth_5
Sketch conj240_sketch0 --> Problem  synth_166
Sketch conj173_term_sketch2 --> Problem  synth_5
Sketch conj228_sketch3 --> Problem  synth_129
Sketch conj172_term_sketch1 --> Problem  synth_18
Sketch conj240_term_sketch6 --> Problem  synth_9
Sketch conj93_sketch0 --> Problem  synth_14
Sketch conj61_imp_sketch5 --> Problem  synth_28
Sketch conj166_term_sketch2 --> Problem  synth_82
Sketch conj238_term_sketch2 --> Problem  synth_4
Sketch conj173_sketch2 --> Problem  synth_91
Sketch conj171_term_sketch2 --> Problem  synth_97
Sketch conj169_sketch2 --> Problem  synth_77
Sketch conj240_sketch3 --> Problem  synth_169
Sketch conj174_sketch4 --> Problem  synth_105
Sketch conj127_sketch4 --> Problem  synth_53
Sketch conj63_term_sketch4 --> Problem  synth_8
Sketch conj227_sketch3 --> Problem  synth_130
Sketch conj233_term_sketch1 --> Problem  synth_38
Sketch conj166_sketch0 --> Problem  synth_81
Sketch conj238_term_sketch4 --> Problem  synth_38
Sketch conj190_sketch0 --> Problem  synth_116
Sketch conj254_term_sketch1 --> Problem  synth_36
Sketch conj47_sketch3 --> Problem  synth_20
Sketch conj93_term_sketch0 --> Problem  synth_36
Sketch conj245_sketch4 --> Problem  synth_174
Sketch conj125_imp_sketch0 --> Problem  synth_65
Sketch conj229_sketch2 --> Problem  synth_135
Sketch conj125_imp_term_sketch4 --> Problem  synth_38
Sketch conj117_term_sketch3 --> Problem  synth_51
Sketch conj236_term_sketch0 --> Problem  synth_101
Sketch conj230_sketch4 --> Problem  synth_138
Sketch conj226_term_sketch0 --> Problem  synth_82
Sketch conj119_term_sketch1 --> Problem  synth_41
Sketch conj95_sketch1 --> Problem  synth_46
Sketch conj237_term_sketch2 --> Problem  synth_38
Sketch conj37_sketch0 --> Problem  synth_2
Sketch conj109_term_sketch0 --> Problem  synth_4
Sketch conj239_term_sketch4 --> Problem  synth_8
Sketch conj234_sketch4 --> Problem  synth_149
Sketch conj47_sketch1 --> Problem  synth_21
Sketch conj227_sketch1 --> Problem  synth_125
Sketch conj236_sketch2 --> Problem  synth_154
Sketch conj99_term_sketch1 --> Problem  synth_42
Sketch conj53_sketch2 --> Problem  synth_23
Sketch conj190_sketch1 --> Problem  synth_15
Sketch conj227_term_sketch1 --> Problem  synth_42
Sketch conj15_sketch2 --> Problem  synth_1
Sketch conj176_term_sketch2 --> Problem  synth_7
Sketch conj253_term_sketch2 --> Problem  synth_45
Sketch conj246_term_sketch2 --> Problem  synth_82
Sketch conj174_term_sketch3 --> Problem  synth_5
Sketch conj174_term_sketch2 --> Problem  synth_15
Sketch conj174_term_sketch1 --> Problem  synth_4
Sketch conj231_sketch4 --> Problem  synth_140
Sketch conj255_sketch5 --> Problem  synth_192
Sketch conj99_sketch1 --> Problem  synth_50
Sketch conj239_sketch2 --> Problem  synth_165
Sketch conj226_sketch3 --> Problem  synth_128
Sketch conj190_sketch5 --> Problem  synth_120
Sketch conj173_term_sketch1 --> Problem  synth_91
Sketch conj45_term_sketch2 --> Problem  synth_5
Sketch conj117_sketch0 --> Problem  synth_61
Sketch conj232_sketch1 --> Problem  synth_2
Sketch conj172_sketch2 --> Problem  synth_98
Sketch conj191_sketch4 --> Problem  synth_122
Sketch conj189_term_sketch4 --> Problem  synth_12
Sketch conj240_term_sketch2 --> Problem  synth_7
Sketch conj173_term_sketch0 --> Problem  synth_4
Sketch conj229_sketch3 --> Problem  synth_136
Sketch conj233_term_sketch3 --> Problem  synth_146
Sketch conj31_term_sketch1 --> Problem  synth_7
Sketch conj234_term_sketch0 --> Problem  synth_29
Sketch conj103_term_sketch0 --> Problem  synth_2
Sketch conj240_sketch1 --> Problem  synth_9
Sketch conj235_sketch1 --> Problem  synth_150
Sketch conj168_term_sketch4 --> Problem  synth_8
Sketch conj166_sketch1 --> Problem  synth_2
Sketch conj165_sketch0 --> Problem  synth_79
Sketch conj168_sketch0 --> Problem  synth_11
Sketch conj227_term_sketch3 --> Problem  synth_8
Sketch conj162_sketch1 --> Problem  synth_77
Sketch conj255_term_sketch1 --> Problem  synth_153
Sketch conj232_term_sketch4 --> Problem  synth_86
Sketch conj176_term_sketch5 --> Problem  synth_9
Sketch conj170_term_sketch1 --> Problem  synth_4
Sketch conj231_sketch1 --> Problem  synth_139
Sketch conj229_term_sketch0 --> Problem  synth_126
Sketch conj230_term_sketch2 --> Problem  synth_38
Sketch conj29_sketch1 --> Problem  synth_13
Sketch conj181_sketch3 --> Problem  synth_112
Sketch conj234_sketch3 --> Problem  synth_148
Sketch conj175_term_sketch4 --> Problem  synth_9
Sketch conj235_sketch4 --> Problem  synth_152
Sketch conj166_sketch3 --> Problem  synth_88
Sketch conj230_term_sketch1 --> Problem  synth_82
Sketch conj191_term_sketch0 --> Problem  synth_96
Sketch conj125_sketch4 --> Problem  synth_45
Sketch conj37_term_sketch0 --> Problem  synth_20
Sketch conj240_sketch2 --> Problem  synth_168
Sketch conj253_sketch2 --> Problem  synth_146
Sketch conj229_term_sketch2 --> Problem  synth_78
Sketch conj164_sketch3 --> Problem  synth_84
Sketch conj63_sketch3 --> Problem  synth_33
Sketch conj169_sketch1 --> Problem  synth_19
Sketch conj117_term_sketch0 --> Problem  synth_36
Sketch conj253_sketch3 --> Problem  synth_183
Sketch conj255_sketch0 --> Problem  synth_189
Sketch conj255_sketch1 --> Problem  synth_49
Sketch conj229_term_sketch1 --> Problem  synth_2
Sketch conj247_sketch4 --> Problem  synth_41
Sketch conj190_sketch4 --> Problem  synth_119
Sketch conj175_term_sketch1 --> Problem  synth_7
Sketch conj95_sketch2 --> Problem  synth_47
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj125_imp_term_sketch1 --> Problem  synth_29
Sketch conj172_sketch3 --> Problem  synth_99
Sketch conj165_term_sketch2 --> Problem  synth_79
Sketch conj119_term_sketch3 --> Problem  synth_42
Sketch conj255_sketch3 --> Problem  synth_191
Sketch conj246_term_sketch4 --> Problem  synth_37
Sketch conj31_term_sketch2 --> Problem  synth_12
Sketch conj191_term_sketch1 --> Problem  synth_18
Sketch conj181_term_sketch1 --> Problem  synth_11
Sketch conj95_term_sketch2 --> Problem  synth_42
Sketch conj95_sketch0 --> Problem  synth_16
Sketch conj169_term_sketch0 --> Problem  synth_4
Sketch conj174_sketch0 --> Problem  synth_103
Sketch conj162_term_sketch0 --> Problem  synth_81
Sketch conj61_imp_term_sketch2 --> Problem  synth_29
Sketch conj174_sketch1 --> Problem  synth_104
Sketch conj173_sketch3 --> Problem  synth_103
Sketch conj190_term_sketch2 --> Problem  synth_4
Sketch conj47_sketch0 --> Problem  synth_9


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 4855 seconds

Problem: synth_63

Problem: synth_182

Problem: synth_106

Problem: synth_91
 qreva (qreva lf6 y) lf7
 lfappend (qreva y lf6) lf7
 lfappend (rev y) (lfappend lf6 (rev lf7))
 lfappend (rev y) (lfappend lf6 lf7)
 qreva y (lfappend lf6 (rev lf7))
 qreva y (lfappend lf6 lf7)

Problem: synth_67
 lfappend lf8 (rev y)
 qreva lf8 (rev y)
 qreva y (rev lf8)
 qreva y lf8
 qreva y Nil
 rev y

Problem: synth_184
 qreva y (qreva x (rev lf8))
 qreva y (qreva x lf8)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_77

Problem: synth_64
 Nil

Problem: synth_167
 Nil

Problem: synth_11
 lfappend (lfappend lf5 (rev x)) lf7
 qreva (lfappend x (rev lf5)) lf7
 qreva (rev lf5) (qreva x (rev lf7))
 qreva (rev lf5) (qreva x lf7)
 lfappend lf5 (qreva x (rev lf7))
 lfappend lf5 (qreva x lf7)

Problem: synth_129

Problem: synth_46

Problem: synth_101
 qreva (lfappend x y) Nil
 lfappend (rev y) (qreva x Nil)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_151

Problem: synth_100
 Nil

Problem: synth_59

Problem: synth_139

Problem: synth_116
 qreva y (qreva x (rev lf8))
 qreva y (qreva x lf8)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_31

Problem: synth_8
 Nil

Problem: synth_34
 Nil

Problem: synth_179
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 qreva (qreva lf6 Nil) (Cons n Nil)
 lfappend (rev (qreva lf6 Nil)) (Cons n Nil)
 qreva (rev lf6) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_58

Problem: synth_53
 lfappend (lfappend lf3 Nil) (Cons n Nil)
 qreva (qreva lf3 Nil) (Cons n Nil)
 lfappend (rev (qreva lf3 Nil)) (Cons n Nil)
 qreva (rev lf3) (Cons n Nil)
 lfappend lf3 (Cons n Nil)
 lfappend (rev (rev lf3)) (Cons n Nil)

Problem: synth_188
 lfappend lf8 (rev x)
 qreva lf8 (rev x)
 qreva x (rev lf8)
 qreva x lf8
 qreva x Nil
 rev x

Problem: synth_123
 Nil

Problem: synth_125

Problem: synth_2
 qreva (rev lf5) (lfappend lf4 Nil)
 lfappend lf5 (rev (rev lf4))
 lfappend lf5 (lfappend lf4 Nil)
 rev (qreva lf4 (rev lf5))
 qreva (rev lf5) lf4
 lfappend lf5 lf4

Problem: synth_166

Problem: synth_95
 Nil

Problem: synth_130
 Nil

Problem: synth_127

Problem: synth_72

Problem: synth_152
 Nil

Problem: synth_111
 qreva (lfappend x (rev lf5)) Nil
 qreva (rev lf5) (qreva x Nil)
 lfappend lf5 (qreva x Nil)
 qreva (rev lf5) (rev x)
 rev (lfappend x (rev lf5))
 lfappend lf5 (rev x)

Problem: synth_56

Problem: synth_135

Problem: synth_105

Problem: synth_65
 lfappend (rev x) (Cons n (rev lf8))
 lfappend (rev x) (Cons n lf8)
 qreva x (Cons n (rev lf8))
 qreva x (Cons n lf8)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_23

Problem: synth_140
 Nil

Problem: synth_168

Problem: synth_88

Problem: synth_19
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_131
 qreva (qreva lf6 (rev lf5)) (Cons n Nil)
 lfappend (lfappend lf5 lf6) (Cons n Nil)
 lfappend lf5 (qreva (rev lf6) (Cons n Nil))
 lfappend lf5 (lfappend lf6 (Cons n Nil))
 lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)

Problem: synth_132

Problem: synth_24
 qreva (rev lf3) (rev lf7)
 rev (lfappend lf7 (rev lf3))
 rev (qreva lf7 (rev lf3))
 qreva (rev lf3) lf7
 lfappend lf3 (rev lf7)
 lfappend lf3 lf7

Problem: synth_97
 lfappend (rev y) (lfappend lf6 Nil)
 qreva y (rev (rev lf6))
 qreva y (lfappend lf6 Nil)
 rev (qreva lf6 y)
 lfappend (rev y) lf6
 qreva y lf6

Problem: synth_48
 Nil

Problem: synth_175
 lfappend (rev x) (Cons n (rev lf8))
 lfappend (rev x) (Cons n lf8)
 qreva x (Cons n (rev lf8))
 qreva x (Cons n lf8)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_144

Problem: synth_28
 qreva lf8 (rev lf3)
 qreva lf3 (rev lf8)
 lfappend x y
 qreva lf3 lf8
 qreva lf3 Nil
 rev lf3

Problem: synth_174

Problem: synth_45
 qreva y (lfappend (rev x) (Cons n lf8))
 qreva y (qreva x (Cons n (rev lf8)))
 qreva y (qreva x (Cons n lf8))
 qreva y (qreva x (Cons n Nil))
 qreva y (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_26
 lfappend lf8 (rev y)
 qreva lf8 (rev y)
 qreva y (rev lf8)
 qreva y lf8
 qreva y Nil
 rev y

Problem: synth_70
 qreva lf8 (rev lf3)
 qreva lf3 (rev lf8)
 lfappend x y
 qreva lf3 lf8
 qreva lf3 Nil
 rev lf3

Problem: synth_122
 qreva (lfappend x y) Nil
 lfappend (rev y) (qreva x Nil)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_190

Problem: synth_177
 lfappend lf8 (rev x)
 qreva lf8 (rev x)
 qreva x (rev lf8)
 qreva x lf8
 qreva x Nil
 rev x

Problem: synth_15
 lfappend (qreva y (rev x)) lf7
 qreva (lfappend x y) lf7
 lfappend (rev y) (qreva x (rev lf7))
 lfappend (rev y) (qreva x lf7)
 qreva y (qreva x (rev lf7))
 qreva y (qreva x lf7)

Problem: synth_14

Problem: synth_83
 lfappend lf8 (rev x)
 qreva lf8 (rev x)
 qreva x (rev lf8)
 qreva x lf8
 qreva x Nil
 rev x

Problem: synth_12
 lfappend (rev x) (rev lf7)
 rev (lfappend lf7 x)
 rev (qreva lf7 x)
 lfappend (rev x) lf7
 qreva x (rev lf7)
 qreva x lf7

Problem: synth_183

Problem: synth_85
 lfappend (qreva x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_62

Problem: synth_50

Problem: synth_171
 Nil

Problem: synth_146
 qreva y (qreva (rev lf6) (Cons n Nil))
 qreva y (lfappend lf6 (Cons n (rev lf8)))
 qreva y (lfappend lf6 (Cons n lf8))
 qreva y (lfappend lf6 (Cons n Nil))
 qreva y (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (rev (qreva lf6 y)) (Cons n Nil)

Problem: synth_119
 lfappend (rev x) (rev lf7)
 rev (lfappend lf7 x)
 rev (qreva lf7 x)
 lfappend (rev x) lf7
 qreva x (rev lf7)
 qreva x lf7

Problem: synth_165

Problem: synth_7
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_154

Problem: synth_128

Problem: synth_61

Problem: synth_141

Problem: synth_27
 lfappend (rev x) (rev lf7)
 rev (lfappend lf7 x)
 rev (qreva lf7 x)
 lfappend (rev x) lf7
 qreva x (rev lf7)
 qreva x lf7

Problem: synth_136

Problem: synth_187

Problem: synth_158

Problem: synth_33

Problem: synth_160

Problem: synth_47

Problem: synth_3

Problem: synth_161

Problem: synth_180
 Nil

Problem: synth_121
 qreva (rev lf6) (rev lf7)
 rev (lfappend lf7 (rev lf6))
 rev (qreva lf7 (rev lf6))
 qreva (rev lf6) lf7
 lfappend lf6 (rev lf7)
 lfappend lf6 lf7

Problem: synth_124

Problem: synth_150

Problem: synth_99

Problem: synth_43

Problem: synth_109

Problem: synth_68
 qreva (rev lf3) (Cons n lf8)
 qreva (rev lf3) (Cons n Nil)
 lfappend lf3 (Cons n (rev lf8))
 lfappend lf3 (Cons n lf8)
 lfappend lf3 (Cons n Nil)
 lfappend (rev (rev lf3)) (Cons n Nil)

Problem: synth_96
 qreva (qreva lf6 y) lf7
 lfappend (qreva y lf6) lf7
 lfappend (rev y) (lfappend lf6 (rev lf7))
 lfappend (rev y) (lfappend lf6 lf7)
 qreva y (lfappend lf6 (rev lf7))
 qreva y (lfappend lf6 lf7)

Problem: synth_54

Problem: synth_149

Problem: synth_39
 Nil

Problem: synth_98

Problem: synth_118

Problem: synth_66
 rev (rev lf3)
 lfappend lf8 lf3
 qreva lf8 lf3
 lfappend lf3 lf8
 lfappend lf3 Nil
 lf3

Problem: synth_57

Problem: synth_162

Problem: synth_178
 qreva (lfappend x (rev lf5)) Nil
 qreva (rev lf5) (qreva x Nil)
 lfappend lf5 (qreva x Nil)
 qreva (rev lf5) (rev x)
 rev (lfappend x (rev lf5))
 lfappend lf5 (rev x)

Problem: synth_155

Problem: synth_5
 qreva y (qreva lf8 lf4)
 qreva y (lfappend lf4 lf8)
 qreva y (lfappend lf4 Nil)
 rev (qreva lf4 y)
 lfappend (rev y) lf4
 qreva y lf4

Problem: synth_37
 lfappend lf5 (lfappend (rev x) (Cons n lf8))
 lfappend lf5 (qreva x (Cons n (rev lf8)))
 lfappend lf5 (qreva x (Cons n lf8))
 lfappend lf5 (qreva x (Cons n Nil))
 lfappend lf5 (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)

Problem: synth_191

Problem: synth_148

Problem: synth_159

Problem: synth_22
 Nil

Problem: synth_18
 lfappend (qreva y (rev x)) lf7
 qreva (lfappend x y) lf7
 lfappend (rev y) (qreva x (rev lf7))
 lfappend (rev y) (qreva x lf7)
 qreva y (qreva x (rev lf7))
 qreva y (qreva x lf7)

Problem: synth_114
 lfappend (qreva x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_21

Problem: synth_170

Problem: synth_41
 qreva (rev lf5) (lfappend (rev x) (Cons n Nil))
 lfappend (lfappend lf5 (rev x)) (Cons n Nil)
 qreva (lfappend x (rev lf5)) (Cons n Nil)
 lfappend lf5 (qreva x (Cons n Nil))
 lfappend lf5 (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)

Problem: synth_49
 lfappend (rev y) (lfappend (rev x) (Cons n Nil))
 lfappend (qreva y (rev x)) (Cons n Nil)
 qreva (lfappend x y) (Cons n Nil)
 qreva y (qreva x (Cons n Nil))
 qreva y (lfappend (rev x) (Cons n Nil))
 lfappend (rev (lfappend x y)) (Cons n Nil)

Problem: synth_75

Problem: synth_25
 rev (rev lf3)
 lfappend lf8 lf3
 qreva lf8 lf3
 lfappend lf3 lf8
 lfappend lf3 Nil
 lf3

Problem: synth_13

Problem: synth_6
 Nil

Problem: synth_181
 qreva (rev lf6) (Cons n lf8)
 qreva (rev lf6) (Cons n Nil)
 lfappend lf6 (Cons n (rev lf8))
 lfappend lf6 (Cons n lf8)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_138

Problem: synth_4
 lfappend lf8 (rev y)
 qreva lf8 (rev y)
 qreva y (rev lf8)
 qreva y lf8
 qreva y Nil
 rev y

Problem: synth_38
 qreva lf8 (Cons n Nil)
 lfappend (rev (rev lf8)) (Cons n Nil)
 lfappend (rev lf8) (Cons n Nil)
 Cons n (rev lf8)
 Cons n lf8
 Cons n Nil

Problem: synth_104

Problem: synth_102

Problem: synth_189
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 qreva (qreva lf6 Nil) (Cons n Nil)
 lfappend (rev (qreva lf6 Nil)) (Cons n Nil)
 qreva (rev lf6) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_157
 Nil

Problem: synth_113
 lfappend (rev x) (rev lf7)
 rev (lfappend lf7 x)
 rev (qreva lf7 x)
 lfappend (rev x) lf7
 qreva x (rev lf7)
 qreva x lf7

Problem: synth_10

Problem: synth_192
 qreva (lfappend x y) Nil
 lfappend (rev y) (qreva x Nil)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_92
 qreva y (qreva lf8 lf6)
 qreva y (lfappend lf6 lf8)
 qreva y (lfappend lf6 Nil)
 rev (qreva lf6 y)
 lfappend (rev y) lf6
 qreva y lf6

Problem: synth_32

Problem: synth_51
 qreva (rev lf3) (Cons n lf8)
 qreva (rev lf3) (Cons n Nil)
 lfappend lf3 (Cons n (rev lf8))
 lfappend lf3 (Cons n lf8)
 lfappend lf3 (Cons n Nil)
 lfappend (rev (rev lf3)) (Cons n Nil)

Problem: synth_112
 qreva (rev lf6) (rev lf7)
 rev (lfappend lf7 (rev lf6))
 rev (qreva lf7 (rev lf6))
 qreva (rev lf6) lf7
 lfappend lf6 (rev lf7)
 lfappend lf6 lf7

Problem: synth_35

Problem: synth_173
 lfappend lf5 (qreva x (rev lf8))
 lfappend lf5 (qreva x lf8)
 lfappend lf5 (qreva x Nil)
 qreva (rev lf5) (rev x)
 rev (lfappend x (rev lf5))
 lfappend lf5 (rev x)

Problem: synth_115

Problem: synth_134
 Nil

Problem: synth_110
 Nil

Problem: synth_90

Problem: synth_73

Problem: synth_17
 Nil

Problem: synth_29
 qreva y (qreva x (rev lf8))
 qreva y (qreva x lf8)
 qreva y (qreva x Nil)
 lfappend (rev y) (rev x)
 rev (lfappend x y)
 qreva y (rev x)

Problem: synth_76
 Nil

Problem: synth_117
 qreva (rev lf6) (rev lf7)
 rev (lfappend lf7 (rev lf6))
 rev (qreva lf7 (rev lf6))
 qreva (rev lf6) lf7
 lfappend lf6 (rev lf7)
 lfappend lf6 lf7

Problem: synth_9
 lfappend (rev y) (lfappend lf4 Nil)
 qreva y (rev (rev lf4))
 qreva y (lfappend lf4 Nil)
 rev (qreva lf4 y)
 lfappend (rev y) lf4
 qreva y lf4

Problem: synth_145

Problem: synth_30
 qreva (rev x) (lfappend y Nil)
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 rev (qreva y (rev x))
 qreva (rev x) y
 lfappend x y

Problem: synth_81
 lfappend (lfappend lf5 (rev x)) lf7
 qreva (lfappend x (rev lf5)) lf7
 qreva (rev lf5) (qreva x (rev lf7))
 qreva (rev lf5) (qreva x lf7)
 lfappend lf5 (qreva x (rev lf7))
 lfappend lf5 (qreva x lf7)

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_137

Problem: synth_69

Problem: synth_86
 qreva (lfappend x (rev lf5)) Nil
 qreva (rev lf5) (qreva x Nil)
 lfappend lf5 (qreva x Nil)
 qreva (rev lf5) (rev x)
 rev (lfappend x (rev lf5))
 lfappend lf5 (rev x)

Problem: synth_55
 Nil

Problem: synth_153
 qreva (qreva lf6 y) (Cons n Nil)
 lfappend (qreva y lf6) (Cons n Nil)
 qreva y (qreva (rev lf6) (Cons n Nil))
 qreva y (lfappend lf6 (Cons n Nil))
 qreva y (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (rev (qreva lf6 y)) (Cons n Nil)

Problem: synth_107
 Nil

Problem: synth_163

Problem: synth_71

Problem: synth_120
 lfappend lf8 (rev x)
 qreva lf8 (rev x)
 qreva x (rev lf8)
 qreva x lf8
 qreva x Nil
 rev x

Problem: synth_103

Problem: synth_87

Problem: synth_79
 qreva (qreva lf6 (rev lf5)) lf7
 lfappend (lfappend lf5 lf6) lf7
 qreva (rev lf5) (lfappend lf6 (rev lf7))
 qreva (rev lf5) (lfappend lf6 lf7)
 lfappend lf5 (lfappend lf6 (rev lf7))
 lfappend lf5 (lfappend lf6 lf7)

Problem: synth_126
 lfappend lf5 (qreva (rev lf6) (Cons n Nil))
 lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))
 lfappend lf5 (lfappend lf6 (Cons n lf8))
 lfappend lf5 (lfappend lf6 (Cons n Nil))
 lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))
 lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)

Problem: synth_74

Problem: synth_84
 Nil

Problem: synth_20
 qreva (rev lf3) (rev lf7)
 rev (lfappend lf7 (rev lf3))
 rev (qreva lf7 (rev lf3))
 qreva (rev lf3) lf7
 lfappend lf3 (rev lf7)
 lfappend lf3 lf7

Problem: synth_94

Problem: synth_169

Problem: synth_108

Problem: synth_133

Problem: synth_193
 Nil

Problem: synth_176

Problem: synth_164

Problem: synth_186

Problem: synth_143
 Nil

Problem: synth_42
 Cons n Nil

Problem: synth_16

Problem: synth_93

Problem: synth_40
 qreva (lfappend x Nil) (Cons n Nil)
 lfappend (qreva x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_172
 qreva (rev lf6) (Cons n lf8)
 qreva (rev lf6) (Cons n Nil)
 lfappend lf6 (Cons n (rev lf8))
 lfappend lf6 (Cons n lf8)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_80

Problem: synth_89
 Nil

Problem: synth_52
 Nil

Problem: synth_142

Problem: synth_147

Problem: synth_44

Problem: synth_185
 lfappend (rev x) (Cons n (rev lf8))
 lfappend (rev x) (Cons n lf8)
 qreva x (Cons n (rev lf8))
 qreva x (Cons n lf8)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_60
 Nil

Problem: synth_36
 lfappend (rev x) (Cons n (rev lf8))
 lfappend (rev x) (Cons n lf8)
 qreva x (Cons n (rev lf8))
 qreva x (Cons n lf8)
 qreva x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_82
 lfappend lf5 (qreva x (rev lf8))
 lfappend lf5 (qreva x lf8)
 lfappend lf5 (qreva x Nil)
 qreva (rev lf5) (rev x)
 rev (lfappend x (rev lf5))
 lfappend lf5 (rev x)

Problem: synth_156

Problem: synth_78
 qreva (rev lf5) (lfappend lf6 Nil)
 lfappend lf5 (rev (rev lf6))
 lfappend lf5 (lfappend lf6 Nil)
 rev (qreva lf6 (rev lf5))
 qreva (rev lf5) lf6
 lfappend lf5 lf6

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 4857 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_3: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_4: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_5: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_6: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3, @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_7: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_8: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf8)         (lfappend (qreva y lf8) (qreva x lf8)), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_9: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf8)         (lfappend (qreva y lf8) (qreva x lf8)), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_12: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_13: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_14: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_19: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_20: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_21: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_22: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_23: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_24: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_25: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_26: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_27: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_28: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_29: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_30: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_31: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_32: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_33: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_34: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_35: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_36: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_37: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_38: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_39: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_40: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_41: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_42: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_43: forall (y : lst) (lf1 : lst) (lf4 : lst), @eq lst lf1 (lfappend (qreva y (Nil)) lf4).
Lemma candidate_44: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_45: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_46: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_47: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_48: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_49: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_50: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_51: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_52: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_53: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_54: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_55: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_56: @eq lst Nil (Nil).
Lemma candidate_57: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_58: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_59: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_60: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_61: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_62: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_63: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_64: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_65: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_66: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_67: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_68: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_69: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_70: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_71: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_72: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_73: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_74: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_75: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_76: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_77: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_78: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_79: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_80: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_81: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_82: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_83: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_84: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_85: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_86: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_87: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_88: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_89: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_90: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_91: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_92: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_93: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_94: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_95: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_96: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_97: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_98: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_99: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_100: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_101: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_102: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_103: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_104: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_105: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_106: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_107: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_108: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_109: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_110: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_111: forall (lf7 : lst) (y : lst) (lf1 : lst) (x : lst), @eq lst lf1 (lfappend (qreva y (Nil)) (qreva x lf7)).
Lemma candidate_112: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_113: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_114: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_115: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_116: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_117: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_118: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_119: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_120: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_121: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_122: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_123: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_124: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_125: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_126: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_127: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_128: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_129: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_130: @eq lst Nil (Nil).
Lemma candidate_131: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_132: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_133: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_134: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_135: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_136: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_137: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_138: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_139: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_140: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_141: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_142: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_143: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_144: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_145: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_146: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_147: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_148: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_149: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_150: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_151: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_152: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_153: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_154: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_155: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_156: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_157: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_158: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_159: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_160: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_161: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_162: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_163: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_164: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_165: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_166: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_167: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (qreva lf8 lf4)) (lfappend (qreva y lf8) lf4).
Lemma candidate_168: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 lf8)) (lfappend (qreva y lf8) lf4).
Lemma candidate_169: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y lf8) lf4).
Lemma candidate_170: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y lf8) lf4).
Lemma candidate_171: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_172: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_173: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_174: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_175: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_176: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_177: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_178: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_179: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_180: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_181: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_182: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_183: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_184: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_185: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_186: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_187: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_188: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_189: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_190: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_191: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_192: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_193: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_194: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_195: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_196: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_197: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_198: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_199: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_200: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_201: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_202: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_203: forall (lf3 : lst) (lf7 : lst) (y : lst) (lf4 : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y (Nil)) lf4).
Lemma candidate_204: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_205: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_206: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_207: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_208: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_209: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_210: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_211: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_212: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_213: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_214: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_215: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_216: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_217: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_218: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_219: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_220: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_221: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_222: @eq lst Nil (Nil).
Lemma candidate_223: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_224: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_225: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_226: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_227: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_228: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_229: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_230: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_231: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x (rev lf7))) (lfappend lf5 (qreva x lf7)).
Lemma candidate_232: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_233: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (rev lf7))) (lfappend lf5 (qreva x lf7)).
Lemma candidate_234: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_235: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_236: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_237: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_238: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_239: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_240: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_241: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_242: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_243: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_244: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_245: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_246: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_247: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_248: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_249: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_250: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_251: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_252: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_253: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_254: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_255: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_256: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_257: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_258: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_259: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) (rev lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_260: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (rev (lfappend lf7 (rev lf3))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_261: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (rev (qreva lf7 (rev lf3))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_262: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_263: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (rev lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_264: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_265: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_266: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_267: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_268: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_269: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_270: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_271: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (rev lf3)) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_272: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lfappend lf8 lf3) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_273: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva lf8 lf3) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_274: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lfappend lf3 lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_275: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lfappend lf3 Nil) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_276: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lf3) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_277: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (lfappend lf8 (rev y)) (qreva x lf7)).
Lemma candidate_278: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva lf8 (rev y)) (qreva x lf7)).
Lemma candidate_279: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y (rev lf8)) (qreva x lf7)).
Lemma candidate_280: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_281: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_282: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (rev y) (qreva x lf7)).
Lemma candidate_283: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7)   (lfappend (qreva y lf8) (lfappend (rev x) (rev lf7))).
Lemma candidate_284: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (rev (lfappend lf7 x))).
Lemma candidate_285: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (rev (qreva lf7 x))).
Lemma candidate_286: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (lfappend (rev x) lf7)).
Lemma candidate_287: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x (rev lf7))).
Lemma candidate_288: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_289: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf8 (rev lf3)) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_290: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf3 (rev lf8)) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_291: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_292: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf3 lf8) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_293: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf3 Nil) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_294: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (rev lf3) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_295: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_296: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_297: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_298: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_299: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_300: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_301: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_302: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_303: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_304: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_305: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_306: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_307: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x (rev lf8))).
Lemma candidate_308: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x lf8)).
Lemma candidate_309: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x Nil)).
Lemma candidate_310: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (lfappend (rev y) (rev x)).
Lemma candidate_311: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (rev (lfappend x y)).
Lemma candidate_312: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (rev x)).
Lemma candidate_313: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_314: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_315: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_316: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_317: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_318: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_319: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_320: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_321: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_322: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_323: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_324: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_325: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_326: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_327: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_328: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_329: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_330: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_331: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_332: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_333: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (qreva x (rev lf7)))   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_334: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_335: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (rev lf7))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_336: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_337: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_338: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_339: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_340: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_341: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_342: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_343: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_344: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_345: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_346: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_347: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_348: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_349: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_350: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_351: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_352: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_353: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_354: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_355: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_356: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_357: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_358: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_359: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_360: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_361: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_362: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_363: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_364: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_365: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_366: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_367: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_368: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_369: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev y) (qreva x (rev lf7)))   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_370: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_371: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (rev lf7))) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_372: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_373: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_374: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_375: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_376: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_377: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_378: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_379: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend lf3 lf7) (lfappend (qreva y (Nil)) (qreva x lf7)).
Lemma candidate_380: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) (rev lf7)).
Lemma candidate_381: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_382: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_383: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_384: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 (rev lf7)).
Lemma candidate_385: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (lfappend lf3 lf7).
Lemma candidate_386: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_387: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_388: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_389: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_390: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_391: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_392: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_393: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_394: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_395: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_396: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_397: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_398: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_399: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_400: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_401: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_402: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_403: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_404: @eq lst Nil (Nil).
Lemma candidate_405: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_406: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_407: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_408: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_409: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_410: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_411: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_412: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_413: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_414: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_415: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_416: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_417: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_418: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_419: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_420: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_421: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_422: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_423: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_424: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_425: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_426: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_427: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_428: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_429: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_430: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_431: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_432: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_433: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_434: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_435: forall (n : natural) (lf1 : lst) (x : lst) (lf5 : lst), @eq lst lf1 (lfappend lf5 (qreva x (Cons n (Nil)))).
Lemma candidate_436: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_437: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_438: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_439: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_440: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_441: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_442: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_443: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_444: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_445: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_446: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_447: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_448: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_449: @eq lst Nil (Nil).
Lemma candidate_450: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_451: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_452: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_453: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_454: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_455: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_456: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_457: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_458: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_459: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_460: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_461: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_462: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_463: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_464: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_465: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_466: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_467: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_468: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_469: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_470: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_471: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_472: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_473: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_474: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_475: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_476: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_477: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_478: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_479: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_480: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_481: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_482: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_483: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_484: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_485: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_486: forall (n : natural) (y : lst) (lf1 : lst) (x : lst), @eq lst lf1 (lfappend (qreva y (Nil)) (qreva x (Cons n (Nil)))).
Lemma candidate_487: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_488: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_489: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_490: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_491: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_492: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_493: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_494: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_495: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_496: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_497: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_498: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_499: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_500: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_501: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_502: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_503: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_504: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_505: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_506: @eq lst Nil (Nil).
Lemma candidate_507: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_508: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_509: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_510: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_511: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_512: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_513: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_514: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_515: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_516: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_517: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_518: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_519: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_520: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_521: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_522: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_523: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_524: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_525: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_526: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_527: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_528: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_529: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_530: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_531: forall (lf3 : lst) (n : natural) (lf2 : lst), @eq lst (lfappend lf3 (Cons n (Nil))) lf2.
Lemma candidate_532: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_533: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_534: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_535: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_536: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_537: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_538: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_539: @eq lst Nil (Nil).
Lemma candidate_540: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_541: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_542: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_543: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_544: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_545: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_546: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_547: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_548: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_549: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_550: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_551: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_552: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_553: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_554: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_555: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_556: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_557: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_558: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_559: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_560: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_561: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_562: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_563: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_564: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_565: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_566: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_567: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_568: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_569: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_570: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_571: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_572: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_573: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_574: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_575: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_576: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_577: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_578: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_579: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_580: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_581: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_582: forall (lf3 : lst) (n : natural) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf3 (Cons n (Nil))) (lfappend lf5 lf4).
Lemma candidate_583: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_584: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_585: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_586: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_587: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_588: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_589: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_590: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_591: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_592: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_593: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_594: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_595: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_596: @eq lst Nil (Nil).
Lemma candidate_597: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_598: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_599: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_600: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_601: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_602: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_603: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (qreva lf8 lf4)) (lfappend (qreva y lf8) lf4).
Lemma candidate_604: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 lf8)) (lfappend (qreva y lf8) lf4).
Lemma candidate_605: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y lf8) lf4).
Lemma candidate_606: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y lf8) lf4).
Lemma candidate_607: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_608: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_609: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_610: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_611: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_612: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_613: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_614: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_615: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_616: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_617: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_618: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_619: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_620: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_621: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_622: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_623: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_624: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_625: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_626: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_627: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_628: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_629: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_630: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_631: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_632: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_633: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_634: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_635: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_636: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_637: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_638: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_639: forall (lf3 : lst) (n : natural) (y : lst) (lf4 : lst), @eq lst (lfappend lf3 (Cons n (Nil))) (lfappend (qreva y (Nil)) lf4).
Lemma candidate_640: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_641: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_642: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_643: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_644: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_645: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_646: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_647: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_648: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_649: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_650: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_651: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_652: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_653: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_654: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_655: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_656: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_657: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_658: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_659: @eq lst Nil (Nil).
Lemma candidate_660: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_661: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_662: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_663: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_664: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_665: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_666: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_667: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_668: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_669: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_670: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_671: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_672: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_673: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n (rev lf8))))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_674: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_675: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_676: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_677: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_678: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_679: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_680: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_681: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_682: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_683: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_684: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_685: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_686: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_687: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_688: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_689: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_690: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_691: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_692: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_693: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_694: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_695: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_696: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_697: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_698: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_699: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_700: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_701: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_702: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_703: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_704: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_705: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_706: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_707: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_708: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_709: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_710: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_711: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_712: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_713: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_714: forall (lf3 : lst) (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf3 (Cons n (Nil))) (lfappend lf5 (qreva x (Cons n (Nil)))).
Lemma candidate_715: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_716: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_717: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_718: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_719: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_720: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_721: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_722: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_723: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_724: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_725: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_726: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_727: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_728: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_729: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_730: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_731: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_732: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_733: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_734: @eq lst Nil (Nil).
Lemma candidate_735: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_736: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_737: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n (rev lf8)))).
Lemma candidate_738: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_739: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n Nil))).
Lemma candidate_740: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_741: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (rev lf3)) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_742: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lfappend lf8 lf3) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_743: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva lf8 lf3) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_744: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lfappend lf3 lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_745: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lfappend lf3 Nil) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_746: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (lf3) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_747: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (qreva x (Cons n lf8))).
Lemma candidate_748: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva lf8 (rev y)) (qreva x (Cons n lf8))).
Lemma candidate_749: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y (rev lf8)) (qreva x (Cons n lf8))).
Lemma candidate_750: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_751: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y Nil) (qreva x (Cons n lf8))).
Lemma candidate_752: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev y) (qreva x (Cons n lf8))).
Lemma candidate_753: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_754: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_755: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_756: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_757: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_758: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_759: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf8 (rev lf3)) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_760: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf3 (rev lf8)) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_761: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_762: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf3 lf8) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_763: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (qreva lf3 Nil) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_764: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (rev lf3) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_765: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_766: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_767: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n (rev lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_768: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_769: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_770: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend (rev (rev lf3)) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_771: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_772: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_773: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_774: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_775: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_776: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_777: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x (rev lf8))).
Lemma candidate_778: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x lf8)).
Lemma candidate_779: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x Nil)).
Lemma candidate_780: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (lfappend (rev y) (rev x)).
Lemma candidate_781: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (rev (lfappend x y)).
Lemma candidate_782: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (rev x)).
Lemma candidate_783: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_784: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_785: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_786: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_787: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_788: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_789: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_790: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_791: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_792: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_793: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_794: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_795: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_796: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_797: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_798: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_799: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_800: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_801: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_802: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_803: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_804: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_805: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_806: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_807: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_808: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_809: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_810: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_811: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_812: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_813: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_814: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_815: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_816: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_817: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_818: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_819: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (lfappend (rev x) (Cons n lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_820: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n (rev lf8))))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_821: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_822: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_823: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_824: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_825: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_826: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_827: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_828: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_829: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_830: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_831: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_832: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_833: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_834: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_835: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_836: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_837: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_838: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_839: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_840: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_841: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_842: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_843: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_844: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_845: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_846: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_847: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_848: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_849: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_850: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_851: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_852: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n lf8)).
Lemma candidate_853: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_854: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_855: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_856: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_857: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_858: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_859: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_860: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_861: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_862: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_863: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_864: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_865: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_866: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_867: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), @eq lst (lfappend lf3 (Cons n (Nil)))   (lfappend (qreva y (Nil)) (qreva x (Cons n (Nil)))).
Lemma candidate_868: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_869: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_870: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_871: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_872: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_873: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_874: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_875: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_876: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_877: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_878: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_879: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_880: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_881: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_882: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_883: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_884: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_885: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_886: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_887: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_888: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_889: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_890: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_891: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_892: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_893: @eq lst Nil (Nil).
Lemma candidate_894: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_895: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_896: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_897: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_898: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_899: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_900: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_901: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_902: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_903: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_904: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_905: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_906: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_907: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend (lfappend lf5 lf6) lf7).
Lemma candidate_908: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 (rev lf7))).
Lemma candidate_909: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_910: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (lfappend lf6 (rev lf7))).
Lemma candidate_911: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_912: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_913: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_914: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_915: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_916: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_917: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_918: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_919: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_920: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_921: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_922: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_923: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_924: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x (rev lf8))).
Lemma candidate_925: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x lf8)).
Lemma candidate_926: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_927: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (qreva (rev lf5) (rev x)).
Lemma candidate_928: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (rev (lfappend x (rev lf5))).
Lemma candidate_929: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (rev x)).
Lemma candidate_930: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_931: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_932: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_933: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_934: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_935: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_936: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_937: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_938: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_939: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_940: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_941: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_942: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (Nil))) lf7) lf2.
Lemma candidate_943: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_944: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_945: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_946: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_947: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_948: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_949: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_950: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_951: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_952: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_953: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_954: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_955: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (lfappend x (rev lf5)) Nil).
Lemma candidate_956: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (qreva x Nil)).
Lemma candidate_957: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_958: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (rev x)).
Lemma candidate_959: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (rev (lfappend x (rev lf5))).
Lemma candidate_960: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (rev x)).
Lemma candidate_961: @eq lst Nil (Nil).
Lemma candidate_962: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_963: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend (lfappend lf5 lf6) lf7).
Lemma candidate_964: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 (rev lf7))).
Lemma candidate_965: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_966: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (lfappend lf6 (rev lf7))).
Lemma candidate_967: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_968: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_969: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_970: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_971: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_972: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_973: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_974: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_975: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_976: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_977: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_978: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_979: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_980: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_981: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_982: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_983: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_984: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_985: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_986: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_987: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend (lfappend lf5 lf6) lf7).
Lemma candidate_988: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 (rev lf7))).
Lemma candidate_989: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_990: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (lfappend lf6 (rev lf7))).
Lemma candidate_991: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_992: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_993: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_994: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_995: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_996: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_997: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_998: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_999: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_1000: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1001: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_1002: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_1003: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1004: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1005: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_1006: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1007: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_1008: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_1009: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1010: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1011: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1012: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1013: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1014: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1015: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1016: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x (rev lf8))).
Lemma candidate_1017: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x lf8)).
Lemma candidate_1018: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1019: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (qreva (rev lf5) (rev x)).
Lemma candidate_1020: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (rev (lfappend x (rev lf5))).
Lemma candidate_1021: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (rev x)).
Lemma candidate_1022: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1023: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1024: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1025: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1026: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1027: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1028: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1029: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1030: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1031: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1032: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1033: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1034: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1035: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_1036: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1037: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_1038: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_1039: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1040: forall (lf7 : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (Nil))) lf7) (lfappend lf5 lf4).
Lemma candidate_1041: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1042: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_1043: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1044: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_1045: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_1046: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1047: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1048: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1049: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1050: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1051: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1052: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1053: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_1054: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_1055: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_1056: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_1057: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_1058: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_1059: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (lfappend x (rev lf5)) Nil).
Lemma candidate_1060: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (qreva x Nil)).
Lemma candidate_1061: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1062: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (rev x)).
Lemma candidate_1063: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (rev (lfappend x (rev lf5))).
Lemma candidate_1064: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (rev x)).
Lemma candidate_1065: @eq lst Nil (Nil).
Lemma candidate_1066: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1067: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1068: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1069: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1070: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1071: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1072: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1073: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1074: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1075: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1076: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1077: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1078: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1079: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1080: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1081: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1082: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1083: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1084: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (qreva lf8 lf6)).
Lemma candidate_1085: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 lf8)).
Lemma candidate_1086: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1087: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (rev (qreva lf6 y)).
Lemma candidate_1088: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (lfappend (rev y) lf6).
Lemma candidate_1089: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y lf6).
Lemma candidate_1090: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1091: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1092: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1093: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1094: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1095: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1096: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x (rev lf8))).
Lemma candidate_1097: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x lf8)).
Lemma candidate_1098: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x Nil)).
Lemma candidate_1099: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (lfappend (rev y) (rev x)).
Lemma candidate_1100: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (rev (lfappend x y)).
Lemma candidate_1101: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (rev x)).
Lemma candidate_1102: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1103: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1104: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1105: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1106: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1107: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1108: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1109: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1110: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1111: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1112: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1113: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1114: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1115: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1116: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1117: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1118: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1119: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1120: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1121: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1122: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1123: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1124: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1125: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1126: forall (lf7 : lst) (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) lf6) lf7) lf2.
Lemma candidate_1127: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1128: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1129: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1130: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1131: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1132: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1133: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1134: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1135: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1136: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1137: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1138: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1139: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_1140: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_1141: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1142: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_1143: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_1144: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_1145: @eq lst Nil (Nil).
Lemma candidate_1146: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1147: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1148: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1149: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1150: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1151: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1152: forall (lf7 : lst) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) (qreva x (Nil))) lf7) lf2.
Lemma candidate_1153: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva (lfappend x y) Nil).
Lemma candidate_1154: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil))   (lfappend (rev y) (qreva x Nil)).
Lemma candidate_1155: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (qreva x Nil)).
Lemma candidate_1156: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (lfappend (rev y) (rev x)).
Lemma candidate_1157: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (rev (lfappend x y)).
Lemma candidate_1158: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (rev x)).
Lemma candidate_1159: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1160: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1161: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1162: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1163: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1164: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1165: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_1166: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_1167: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_1168: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_1169: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_1170: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_1171: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1172: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1173: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1174: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1175: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1176: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1177: @eq lst Nil (Nil).
Lemma candidate_1178: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (qreva lf8 lf4)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1179: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 lf8)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1180: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1181: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1182: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_1183: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_1184: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1185: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1186: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1187: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1188: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1189: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1190: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1191: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1192: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1193: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1194: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1195: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1196: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1197: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1198: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1199: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1200: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1201: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1202: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_1203: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_1204: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_1205: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_1206: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_1207: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_1208: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (qreva lf8 lf6)).
Lemma candidate_1209: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 lf8)).
Lemma candidate_1210: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1211: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (rev (qreva lf6 y)).
Lemma candidate_1212: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (lfappend (rev y) lf6).
Lemma candidate_1213: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y lf6).
Lemma candidate_1214: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (qreva lf8 lf4)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1215: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 lf8)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1216: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1217: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y lf8) lf4).
Lemma candidate_1218: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_1219: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_1220: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1221: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1222: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1223: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1224: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1225: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1226: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x (rev lf8))).
Lemma candidate_1227: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x lf8)).
Lemma candidate_1228: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x Nil)).
Lemma candidate_1229: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (lfappend (rev y) (rev x)).
Lemma candidate_1230: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (rev (lfappend x y)).
Lemma candidate_1231: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (rev x)).
Lemma candidate_1232: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1233: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1234: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1235: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1236: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1237: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1238: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1239: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1240: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1241: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1242: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1243: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1244: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_1245: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_1246: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_1247: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_1248: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_1249: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_1250: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1251: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1252: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1253: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1254: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1255: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1256: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_1257: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_1258: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_1259: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_1260: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_1261: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_1262: forall (lf7 : lst) (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) lf6) lf7)   (lfappend (qreva y (Nil)) lf4).
Lemma candidate_1263: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1264: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1265: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1266: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1267: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1268: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1269: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1270: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1271: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1272: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1273: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1274: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1275: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1276: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1277: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1278: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1279: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1280: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1281: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_1282: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_1283: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1284: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_1285: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_1286: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_1287: @eq lst Nil (Nil).
Lemma candidate_1288: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_1289: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_1290: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_1291: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_1292: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_1293: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_1294: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_1295: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_1296: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_1297: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_1298: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_1299: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_1300: forall (lf7 : lst) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) (qreva x (Nil))) lf7)   (lfappend (qreva y (Nil)) lf4).
Lemma candidate_1301: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1302: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1303: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1304: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1305: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1306: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1307: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva (lfappend x y) Nil).
Lemma candidate_1308: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil))   (lfappend (rev y) (qreva x Nil)).
Lemma candidate_1309: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (qreva x Nil)).
Lemma candidate_1310: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (lfappend (rev y) (rev x)).
Lemma candidate_1311: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (rev (lfappend x y)).
Lemma candidate_1312: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (rev x)).
Lemma candidate_1313: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1314: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1315: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1316: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1317: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1318: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1319: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1320: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1321: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1322: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1323: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1324: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1325: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_1326: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_1327: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_1328: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_1329: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_1330: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_1331: @eq lst Nil (Nil).
Lemma candidate_1332: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_1333: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_1334: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_1335: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_1336: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_1337: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_1338: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1339: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1340: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1341: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1342: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1343: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1344: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_1345: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend (lfappend lf5 lf6) lf7).
Lemma candidate_1346: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 (rev lf7))).
Lemma candidate_1347: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_1348: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (lfappend lf6 (rev lf7))).
Lemma candidate_1349: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_1350: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1351: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1352: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x (rev lf7))) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1353: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1354: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (rev lf7))) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1355: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1356: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (qreva (rev lf6) (rev lf7))).
Lemma candidate_1357: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (rev (lfappend lf7 (rev lf6)))).
Lemma candidate_1358: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1359: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (qreva (rev lf6) lf7)).
Lemma candidate_1360: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (lfappend lf6 (rev lf7))).
Lemma candidate_1361: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_1362: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_1363: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_1364: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_1365: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_1366: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_1367: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_1368: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1369: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1370: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1371: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1372: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1373: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1374: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_1375: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend (lfappend lf5 lf6) lf7).
Lemma candidate_1376: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 (rev lf7))).
Lemma candidate_1377: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_1378: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (lfappend lf6 (rev lf7))).
Lemma candidate_1379: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_1380: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_1381: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_1382: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_1383: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_1384: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_1385: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_1386: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1387: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1388: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x (rev lf7))) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1389: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1390: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (rev lf7))) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1391: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1392: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1393: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1394: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1395: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1396: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1397: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1398: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1399: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1400: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1401: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1402: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1403: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1404: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (lfappend (rev x) (rev lf7))).
Lemma candidate_1405: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (rev (lfappend lf7 x))).
Lemma candidate_1406: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (rev (qreva lf7 x))).
Lemma candidate_1407: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (lfappend (rev x) lf7)).
Lemma candidate_1408: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1409: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1410: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (lfappend (qreva x Nil) Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1411: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev (rev (rev x)))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1412: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev (lfappend x Nil))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1413: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (lfappend (rev x) Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1414: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1415: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1416: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1417: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1418: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1419: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1420: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1421: forall (lf7 : lst) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1422: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_1423: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1424: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x (rev lf7))).
Lemma candidate_1425: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1426: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x (rev lf7))).
Lemma candidate_1427: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1428: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x (rev lf8))).
Lemma candidate_1429: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x lf8)).
Lemma candidate_1430: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1431: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (qreva (rev lf5) (rev x)).
Lemma candidate_1432: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (rev (lfappend x (rev lf5))).
Lemma candidate_1433: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (rev x)).
Lemma candidate_1434: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_1435: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_1436: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_1437: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_1438: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_1439: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_1440: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1441: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1442: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1443: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1444: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1445: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1446: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1447: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1448: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1449: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1450: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1451: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1452: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1453: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1454: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (qreva x (rev lf7)))   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1455: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1456: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (rev lf7))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1457: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1458: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x (rev lf8))) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1459: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1460: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x Nil)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1461: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1462: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1463: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1464: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva (rev lf6) (rev lf7))).
Lemma candidate_1465: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (rev (lfappend lf7 (rev lf6)))).
Lemma candidate_1466: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1467: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva (rev lf6) lf7)).
Lemma candidate_1468: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (lfappend lf6 (rev lf7))).
Lemma candidate_1469: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (lfappend lf6 lf7)).
Lemma candidate_1470: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1471: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_1472: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1473: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1474: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_1475: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_1476: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1477: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1478: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1479: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1480: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1481: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1482: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1483: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1484: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1485: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1486: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1487: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1488: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (qreva lf8 lf6)).
Lemma candidate_1489: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 lf8)).
Lemma candidate_1490: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1491: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (rev (qreva lf6 y)).
Lemma candidate_1492: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (lfappend (rev y) lf6).
Lemma candidate_1493: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y lf6).
Lemma candidate_1494: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_1495: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_1496: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_1497: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_1498: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_1499: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_1500: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x (rev lf8))) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1501: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1502: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x Nil)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1503: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1504: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1505: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1506: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1507: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1508: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1509: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1510: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1511: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1512: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1513: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1514: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (qreva x (rev lf7)))   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1515: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1516: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (rev lf7))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1517: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1518: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (lfappend (rev x) (rev lf7))).
Lemma candidate_1519: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (rev (lfappend lf7 x))).
Lemma candidate_1520: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (rev (qreva lf7 x))).
Lemma candidate_1521: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (lfappend (rev x) lf7)).
Lemma candidate_1522: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x (rev lf7))).
Lemma candidate_1523: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1524: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (lfappend lf8 (rev x))) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1525: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva lf8 (rev x))) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1526: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x (rev lf8))) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1527: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1528: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x Nil)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1529: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1530: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x (rev lf8))).
Lemma candidate_1531: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x lf8)).
Lemma candidate_1532: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x Nil)).
Lemma candidate_1533: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (lfappend (rev y) (rev x)).
Lemma candidate_1534: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (rev (lfappend x y)).
Lemma candidate_1535: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (rev x)).
Lemma candidate_1536: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1537: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_1538: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1539: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1540: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_1541: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_1542: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1543: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1544: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1545: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1546: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1547: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1548: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1549: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_1550: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1551: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1552: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x (rev lf7))).
Lemma candidate_1553: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1554: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_1555: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_1556: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_1557: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_1558: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_1559: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_1560: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1561: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1562: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1563: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1564: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1565: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1566: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1567: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1568: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev y) (qreva x (rev lf7)))   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1569: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1570: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x (rev lf7))) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1571: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1572: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1573: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1574: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1575: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1576: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1577: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1578: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva (rev lf6) (rev lf7))).
Lemma candidate_1579: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (rev (lfappend lf7 (rev lf6)))).
Lemma candidate_1580: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1581: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva (rev lf6) lf7)).
Lemma candidate_1582: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (lfappend lf6 (rev lf7))).
Lemma candidate_1583: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (lfappend lf6 lf7)).
Lemma candidate_1584: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva (lfappend x y) Nil) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1585: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1586: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1587: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1588: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1589: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1590: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) lf6) lf7)   (lfappend (qreva y (Nil)) (qreva x lf7)).
Lemma candidate_1591: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_1592: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_1593: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 (rev lf7))).
Lemma candidate_1594: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_1595: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 (rev lf7))).
Lemma candidate_1596: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1597: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1598: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_1599: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x (rev lf7))).
Lemma candidate_1600: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1601: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x (rev lf7))).
Lemma candidate_1602: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_1603: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1604: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1605: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1606: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1607: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1608: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1609: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) (rev lf7)).
Lemma candidate_1610: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (lfappend lf7 x)).
Lemma candidate_1611: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_1612: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_1613: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x (rev lf7)).
Lemma candidate_1614: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (qreva x lf7).
Lemma candidate_1615: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_1616: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_1617: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1618: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_1619: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_1620: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_1621: @eq lst Nil (Nil).
Lemma candidate_1622: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1623: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1624: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1625: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1626: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1627: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1628: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1629: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1630: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1631: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1632: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1633: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_1634: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_1635: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_1636: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_1637: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_1638: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_1639: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_1640: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1641: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1642: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1643: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1644: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1645: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1646: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1647: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1648: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1649: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1650: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1651: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1652: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x (rev lf8))).
Lemma candidate_1653: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x lf8)).
Lemma candidate_1654: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1655: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (qreva (rev lf5) (rev x)).
Lemma candidate_1656: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (rev (lfappend x (rev lf5))).
Lemma candidate_1657: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (rev x)).
Lemma candidate_1658: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1659: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1660: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1661: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1662: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1663: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1664: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1665: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_1666: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1667: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1668: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1669: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1670: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1671: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1672: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1673: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1674: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1675: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1676: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1677: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1678: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1679: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1680: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1681: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1682: forall (n : natural) (lf5 : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n (Nil))) lf2.
Lemma candidate_1683: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_1684: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_1685: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_1686: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_1687: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_1688: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_1689: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1690: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_1691: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (lfappend lf5 lf6) (Cons n Nil)).
Lemma candidate_1692: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1693: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1694: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1695: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_1696: @eq lst Nil (Nil).
Lemma candidate_1697: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1698: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1699: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1700: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1701: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1702: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1703: forall (n : natural) (x : lst) (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (Nil))) (Cons n (Nil))) lf2.
Lemma candidate_1704: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1705: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1706: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1707: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1708: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1709: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1710: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_1711: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_1712: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_1713: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_1714: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_1715: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_1716: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1717: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (lfappend x (rev lf5)) Nil).
Lemma candidate_1718: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (qreva x Nil)).
Lemma candidate_1719: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1720: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (rev x)).
Lemma candidate_1721: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (rev (lfappend x (rev lf5))).
Lemma candidate_1722: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (rev x)).
Lemma candidate_1723: @eq lst Nil (Nil).
Lemma candidate_1724: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1725: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_1726: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1727: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_1728: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_1729: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1730: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1731: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1732: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1733: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1734: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1735: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_1736: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1737: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1738: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1739: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1740: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1741: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_1742: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1743: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_1744: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1745: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_1746: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_1747: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1748: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_1749: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_1750: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_1751: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_1752: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_1753: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_1754: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1755: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1756: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1757: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1758: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1759: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1760: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1761: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_1762: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1763: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1764: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1765: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1766: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1767: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_1768: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1769: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_1770: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_1771: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1772: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1773: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_1774: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1775: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_1776: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_1777: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1778: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x (rev lf8))).
Lemma candidate_1779: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x lf8)).
Lemma candidate_1780: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1781: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (qreva (rev lf5) (rev x)).
Lemma candidate_1782: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (rev (lfappend x (rev lf5))).
Lemma candidate_1783: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (rev x)).
Lemma candidate_1784: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1785: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1786: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1787: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1788: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1789: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1790: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1791: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_1792: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1793: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1794: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1795: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1796: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1797: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1798: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1799: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1800: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1801: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1802: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_1803: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (lfappend lf5 lf6) (Cons n Nil)).
Lemma candidate_1804: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1805: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1806: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1807: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_1808: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1809: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_1810: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1811: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_1812: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_1813: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1814: forall (n : natural) (lf4 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n (Nil))) (lfappend lf5 lf4).
Lemma candidate_1815: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1816: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_1817: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1818: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_1819: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_1820: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1821: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_1822: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_1823: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_1824: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_1825: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_1826: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_1827: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1828: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_1829: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (lfappend lf5 lf6) (Cons n Nil)).
Lemma candidate_1830: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1831: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1832: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1833: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_1834: @eq lst Nil (Nil).
Lemma candidate_1835: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1836: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1837: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1838: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1839: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1840: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1841: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1842: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_1843: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_1844: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_1845: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_1846: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1847: forall (n : natural) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (Nil))) (Cons n (Nil)))   (lfappend lf5 lf4).
Lemma candidate_1848: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1849: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_1850: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1851: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_1852: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_1853: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 lf4).
Lemma candidate_1854: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1855: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_1856: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1857: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1858: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1859: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_1860: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_1861: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_1862: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_1863: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_1864: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_1865: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_1866: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1867: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (lfappend x (rev lf5)) Nil).
Lemma candidate_1868: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (qreva x Nil)).
Lemma candidate_1869: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_1870: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (rev x)).
Lemma candidate_1871: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (rev (lfappend x (rev lf5))).
Lemma candidate_1872: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (rev x)).
Lemma candidate_1873: @eq lst Nil (Nil).
Lemma candidate_1874: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1875: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1876: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1877: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1878: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1879: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1880: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1881: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1882: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1883: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1884: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1885: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1886: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1887: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1888: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1889: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1890: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1891: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1892: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (qreva lf8 lf6)).
Lemma candidate_1893: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 lf8)).
Lemma candidate_1894: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1895: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (rev (qreva lf6 y)).
Lemma candidate_1896: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (lfappend (rev y) lf6).
Lemma candidate_1897: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y lf6).
Lemma candidate_1898: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1899: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_1900: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n lf8))).
Lemma candidate_1901: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_1902: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1903: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_1904: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1905: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1906: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1907: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1908: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1909: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1910: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x (rev lf8))).
Lemma candidate_1911: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x lf8)).
Lemma candidate_1912: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x Nil)).
Lemma candidate_1913: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (lfappend (rev y) (rev x)).
Lemma candidate_1914: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (rev (lfappend x y)).
Lemma candidate_1915: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (rev x)).
Lemma candidate_1916: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1917: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_1918: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_1919: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1920: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1921: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1922: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_1923: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_1924: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_1925: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_1926: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_1927: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_1928: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_1929: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1930: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_1931: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1932: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1933: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1934: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_1935: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_1936: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_1937: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_1938: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_1939: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_1940: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1941: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1942: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1943: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1944: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1945: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1946: forall (n : natural) (y : lst) (lf2 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) lf6) (Cons n (Nil))) lf2.
Lemma candidate_1947: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_1948: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_1949: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_1950: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_1951: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1952: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_1953: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1954: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1955: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1956: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1957: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1958: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1959: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1960: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_1961: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_1962: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_1963: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_1964: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_1965: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_1966: @eq lst Nil (Nil).
Lemma candidate_1967: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_1968: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_1969: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_1970: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1971: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1972: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1973: forall (n : natural) (y : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) (qreva x (Nil))) (Cons n (Nil)))   lf2.
Lemma candidate_1974: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva (lfappend x y) Nil).
Lemma candidate_1975: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil))   (lfappend (rev y) (qreva x Nil)).
Lemma candidate_1976: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (qreva x Nil)).
Lemma candidate_1977: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (lfappend (rev y) (rev x)).
Lemma candidate_1978: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (rev (lfappend x y)).
Lemma candidate_1979: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (rev x)).
Lemma candidate_1980: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1981: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_1982: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_1983: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1984: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1985: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_1986: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_1987: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_1988: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_1989: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_1990: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_1991: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_1992: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_1993: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_1994: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_1995: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_1996: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_1997: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_1998: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1999: @eq lst Nil (Nil).
Lemma candidate_2000: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2001: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2002: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n lf8))).
Lemma candidate_2003: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2004: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2005: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2006: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (qreva lf8 lf4)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2007: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 lf8)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2008: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2009: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2010: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_2011: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_2012: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_2013: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_2014: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_2015: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_2016: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_2017: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_2018: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_2019: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_2020: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_2021: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_2022: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_2023: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_2024: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_2025: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_2026: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_2027: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_2028: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_2029: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_2030: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (qreva lf8 lf6)).
Lemma candidate_2031: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 lf8)).
Lemma candidate_2032: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_2033: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (rev (qreva lf6 y)).
Lemma candidate_2034: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (lfappend (rev y) lf6).
Lemma candidate_2035: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y lf6).
Lemma candidate_2036: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2037: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2038: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n lf8))).
Lemma candidate_2039: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2040: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2041: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2042: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (qreva lf8 lf4)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2043: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 lf8)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2044: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2045: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y lf8) lf4).
Lemma candidate_2046: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_2047: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (qreva y lf4) (lfappend (qreva y lf8) lf4).
Lemma candidate_2048: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2049: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_2050: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_2051: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2052: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2053: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2054: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x (rev lf8))).
Lemma candidate_2055: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x lf8)).
Lemma candidate_2056: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x Nil)).
Lemma candidate_2057: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (lfappend (rev y) (rev x)).
Lemma candidate_2058: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (rev (lfappend x y)).
Lemma candidate_2059: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (rev x)).
Lemma candidate_2060: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2061: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_2062: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_2063: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2064: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2065: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2066: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_2067: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_2068: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_2069: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_2070: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_2071: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_2072: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (qreva lf8 lf4)).
Lemma candidate_2073: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 lf8)).
Lemma candidate_2074: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_2075: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (rev (qreva lf4 y)).
Lemma candidate_2076: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (lfappend (rev y) lf4).
Lemma candidate_2077: forall (y : lst) (lf4 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf4) (qreva y lf4).
Lemma candidate_2078: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_2079: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_2080: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_2081: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_2082: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_2083: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_2084: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_2085: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_2086: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_2087: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_2088: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_2089: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_2090: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_2091: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_2092: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_2093: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_2094: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_2095: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_2096: forall (n : natural) (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) lf6) (Cons n (Nil)))   (lfappend (qreva y (Nil)) lf4).
Lemma candidate_2097: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_2098: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_2099: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2100: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2101: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2102: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2103: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_2104: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_2105: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2106: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2107: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2108: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2109: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_2110: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_2111: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_2112: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_2113: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_2114: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_2115: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2116: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_2117: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_2118: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_2119: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_2120: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_2121: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_2122: @eq lst Nil (Nil).
Lemma candidate_2123: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_2124: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_2125: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_2126: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_2127: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_2128: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_2129: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_2130: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_2131: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_2132: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_2133: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_2134: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_2135: forall (n : natural) (y : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) (qreva x (Nil))) (Cons n (Nil)))   (lfappend (qreva y (Nil)) lf4).
Lemma candidate_2136: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2137: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_2138: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_2139: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2140: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2141: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2142: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva (lfappend x y) Nil).
Lemma candidate_2143: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil))   (lfappend (rev y) (qreva x Nil)).
Lemma candidate_2144: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (qreva x Nil)).
Lemma candidate_2145: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (lfappend (rev y) (rev x)).
Lemma candidate_2146: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (rev (lfappend x y)).
Lemma candidate_2147: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (rev x)).
Lemma candidate_2148: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2149: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_2150: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_2151: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2152: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2153: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2154: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_2155: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_2156: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_2157: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_2158: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_2159: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_2160: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_2161: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_2162: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_2163: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_2164: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_2165: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_2166: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2167: @eq lst Nil (Nil).
Lemma candidate_2168: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_2169: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_2170: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_2171: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_2172: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_2173: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_2174: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2175: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n (rev lf8))))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2176: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2177: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2178: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2179: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2180: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n lf8))).
Lemma candidate_2181: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2182: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2183: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_2184: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_2185: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2186: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2187: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2188: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_2189: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_2190: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2191: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_2192: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (rev lf8))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2193: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2194: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2195: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2196: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2197: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2198: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2199: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2200: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_2201: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_2202: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2203: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_2204: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_2205: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_2206: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_2207: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_2208: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_2209: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_2210: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2211: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_2212: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2213: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2214: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2215: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_2216: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_2217: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_2218: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_2219: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_2220: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_2221: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_2222: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_2223: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_2224: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_2225: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_2226: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_2227: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_2228: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_2229: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2230: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_2231: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2232: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2233: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2234: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2235: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_2236: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2237: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2238: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2239: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_2240: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (rev lf8))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2241: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2242: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2243: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2244: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2245: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2246: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2247: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n (rev lf8))))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2248: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2249: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2250: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2251: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2252: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (lfappend lf8 (rev x))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2253: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva lf8 (rev x))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2254: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x (rev lf8))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2255: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2256: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2257: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2258: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_2259: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_2260: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_2261: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_2262: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_2263: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_2264: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2265: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_2266: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2267: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2268: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2269: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_2270: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x (rev lf8))).
Lemma candidate_2271: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x lf8)).
Lemma candidate_2272: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (qreva x Nil)).
Lemma candidate_2273: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (qreva (rev lf5) (rev x)).
Lemma candidate_2274: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (rev (lfappend x (rev lf5))).
Lemma candidate_2275: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x lf8)) (lfappend lf5 (rev x)).
Lemma candidate_2276: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_2277: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_2278: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_2279: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_2280: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_2281: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_2282: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2283: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n (rev lf8)))).
Lemma candidate_2284: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2285: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2286: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2287: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_2288: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_2289: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_2290: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_2291: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_2292: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_2293: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_2294: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2295: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2296: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2297: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2298: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2299: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2300: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (lfappend lf6 Nil) (Cons n Nil))).
Lemma candidate_2301: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (qreva lf6 Nil) (Cons n Nil))).
Lemma candidate_2302: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (qreva lf6 Nil)) (Cons n Nil))).
Lemma candidate_2303: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2304: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_2305: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2306: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_2307: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (lfappend lf5 lf6) (Cons n Nil)).
Lemma candidate_2308: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2309: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_2310: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2311: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_2312: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2313: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2314: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2315: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2316: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2317: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2318: forall (n : natural) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n (Nil)))   (lfappend lf5 (qreva x (Cons n (Nil)))).
Lemma candidate_2319: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_2320: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_2321: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_2322: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_2323: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_2324: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_2325: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_2326: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_2327: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_2328: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_2329: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_2330: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_2331: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2332: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_2333: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_2334: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2335: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2336: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_2337: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2338: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_2339: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (lfappend lf5 lf6) (Cons n Nil)).
Lemma candidate_2340: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2341: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_2342: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2343: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_2344: @eq lst Nil (Nil).
Lemma candidate_2345: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva (rev lf6) (Cons n lf8))).
Lemma candidate_2346: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2347: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2348: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend lf6 (Cons n lf8))).
Lemma candidate_2349: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend lf6 (Cons n Nil))).
Lemma candidate_2350: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2351: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2352: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2353: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n lf8))).
Lemma candidate_2354: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2355: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2356: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2357: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x (rev lf8))) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2358: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2359: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x Nil)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2360: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2361: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2362: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2363: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (lfappend (rev x) (Cons n lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2364: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n (rev lf8))))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2365: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2366: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2367: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2368: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2369: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_2370: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_2371: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_2372: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_2373: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_2374: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_2375: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_2376: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_2377: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_2378: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_2379: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_2380: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_2381: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2382: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_2383: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_2384: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2385: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2386: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2387: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_2388: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_2389: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_2390: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_2391: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_2392: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_2393: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (qreva lf8 lf6)).
Lemma candidate_2394: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 lf8)).
Lemma candidate_2395: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_2396: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (rev (qreva lf6 y)).
Lemma candidate_2397: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (lfappend (rev y) lf6).
Lemma candidate_2398: forall (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) lf6) (qreva y lf6).
Lemma candidate_2399: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2400: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n (rev lf8)))).
Lemma candidate_2401: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n lf8))).
Lemma candidate_2402: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2403: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2404: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2405: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x (rev lf8))) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2406: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2407: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (qreva x Nil)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2408: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2409: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2410: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2411: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_2412: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2413: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n (rev lf8)))).
Lemma candidate_2414: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2415: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n Nil))).
Lemma candidate_2416: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2417: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (lfappend (rev x) (Cons n lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2418: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n (rev lf8))))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2419: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2420: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2421: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2422: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2423: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2424: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_2425: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_2426: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2427: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2428: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2429: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst   (lfappend (lfappend (qreva y lf8) (lfappend lf8 (rev x))) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2430: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva lf8 (rev x))) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2431: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x (rev lf8))) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2432: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2433: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x Nil)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2434: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_2435: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x (rev lf8))).
Lemma candidate_2436: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x lf8)).
Lemma candidate_2437: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (qreva x Nil)).
Lemma candidate_2438: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (lfappend (rev y) (rev x)).
Lemma candidate_2439: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (rev (lfappend x y)).
Lemma candidate_2440: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x lf8)) (qreva y (rev x)).
Lemma candidate_2441: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n (rev lf8))).
Lemma candidate_2442: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_2443: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n (rev lf8))).
Lemma candidate_2444: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n lf8)).
Lemma candidate_2445: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (qreva x (Cons n Nil)).
Lemma candidate_2446: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_2447: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2448: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_2449: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_2450: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2451: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2452: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2453: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (lfappend lf8 (rev y)).
Lemma candidate_2454: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva lf8 (rev y)).
Lemma candidate_2455: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y (rev lf8)).
Lemma candidate_2456: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y lf8).
Lemma candidate_2457: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (qreva y Nil).
Lemma candidate_2458: forall (y : lst) (lf8 : lst), @eq lst (qreva y lf8) (rev y).
Lemma candidate_2459: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n lf8))).
Lemma candidate_2460: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n (rev lf8)))).
Lemma candidate_2461: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n lf8))).
Lemma candidate_2462: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2463: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2464: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (qreva y lf8) (qreva x (Cons n lf8)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2465: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (qreva lf8 (Cons n Nil)).
Lemma candidate_2466: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_2467: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (lfappend (rev lf8) (Cons n Nil)).
Lemma candidate_2468: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_2469: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_2470: forall (n : natural) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_2471: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (lfappend lf8 (rev x)).
Lemma candidate_2472: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva lf8 (rev x)).
Lemma candidate_2473: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x (rev lf8)).
Lemma candidate_2474: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x lf8).
Lemma candidate_2475: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (qreva x Nil).
Lemma candidate_2476: forall (x : lst) (lf8 : lst), @eq lst (qreva x lf8) (rev x).
Lemma candidate_2477: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (lfappend lf6 Nil) (Cons n Nil))).
Lemma candidate_2478: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva (qreva lf6 Nil) (Cons n Nil))).
Lemma candidate_2479: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (rev (qreva lf6 Nil)) (Cons n Nil))).
Lemma candidate_2480: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2481: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_2482: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2483: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2484: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2485: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2486: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2487: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2488: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2489: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_2490: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_2491: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2492: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2493: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2494: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2495: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva (lfappend x y) Nil) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2496: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2497: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2498: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2499: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2500: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2501: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y (Nil)) lf6) (Cons n (Nil)))   (lfappend (qreva y (Nil)) (qreva x (Cons n (Nil)))).
Lemma candidate_2502: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_2503: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_2504: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_2505: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_2506: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva x (Cons n Nil)).
Lemma candidate_2507: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_2508: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_2509: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_2510: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2511: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_2512: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2513: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_2514: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_2515: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_2516: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_2517: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_2518: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_2519: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_2520: forall (n : natural), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2521: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2522: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_2523: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_2524: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_2525: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2526: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_2527: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_2528: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_2529: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_2530: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_2531: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_2532: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_2533: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 6049 seconds
Duplicates removed: 1993
Filtered by Quickchick: 261
Filtered by script: 28
Remaining: 251

Lemmas: 
Lemma candidate_134: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_954: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_55: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_135: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_133: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_132: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_14: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_131: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_13: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_329: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) y).
Lemma candidate_950: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_77: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (rev (qreva lf7 x)).
Lemma candidate_51: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_952: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_951: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_78: forall (lf7 : lst) (x : lst), @eq lst (qreva x lf7) (lfappend (rev x) lf7).
Lemma candidate_53: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_52: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_328: forall (y : lst) (x : lst), @eq lst (lfappend x y) (rev (qreva y (rev x))).
Lemma candidate_904: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) lf6).
Lemma candidate_147: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) lf4) (lfappend lf5 lf4).
Lemma candidate_140: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_23: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) lf4).
Lemma candidate_326: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_1144: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y lf6).
Lemma candidate_949: forall (x : lst), @eq lst (qreva x Nil) (lfappend (qreva x Nil) Nil).
Lemma candidate_202: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_62: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y lf4).
Lemma candidate_50: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_327: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_903: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (qreva lf6 (rev lf5))).
Lemma candidate_146: forall (lf4 : lst) (lf5 : lst), @eq lst (rev (qreva lf4 (rev lf5))) (lfappend lf5 lf4).
Lemma candidate_139: forall (lf3 : lst) (lf7 : lst), @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_22: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (rev (qreva lf4 (rev lf5))).
Lemma candidate_325: forall (y : lst) (x : lst), @eq lst (lfappend x y) (qreva (rev x) (lfappend y Nil)).
Lemma candidate_1142: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (rev (qreva lf6 y)).
Lemma candidate_200: forall (y : lst) (lf4 : lst), @eq lst (rev (qreva lf4 y)) (lfappend (qreva y Nil) lf4).
Lemma candidate_60: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (rev (qreva lf4 y)).
Lemma candidate_901: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_144: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev lf4))) (lfappend lf5 lf4).
Lemma candidate_20: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (rev (rev lf4))).
Lemma candidate_308: forall (y : lst) (x : lst) (lf8 : lst), @eq lst (qreva (lfappend x y) lf8) (qreva y (qreva x lf8)).
Lemma candidate_1143: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) lf6).
Lemma candidate_960: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (lfappend lf5 (rev x)).
Lemma candidate_201: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend (qreva y Nil) lf4).
Lemma candidate_61: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) lf4).
Lemma candidate_902: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_145: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_21: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (lfappend lf5 (lfappend lf4 Nil)).
Lemma candidate_1140: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (rev (rev lf6))).
Lemma candidate_958: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (rev x)).
Lemma candidate_441: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_412: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (Cons n lf8)) (lfappend (rev x) (Cons n lf8)).
Lemma candidate_198: forall (y : lst) (lf4 : lst), @eq lst (qreva y (rev (rev lf4))) (lfappend (qreva y Nil) lf4).
Lemma candidate_58: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (rev (rev lf4))).
Lemma candidate_900: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (qreva (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_143: forall (lf4 : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend lf4 Nil)) (lfappend lf5 lf4).
Lemma candidate_19: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf5 lf4) (qreva (rev lf5) (lfappend lf4 Nil)).
Lemma candidate_1158: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (rev x)).
Lemma candidate_1141: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (qreva y (lfappend lf6 Nil)).
Lemma candidate_959: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (rev (lfappend x (rev lf5))).
Lemma candidate_199: forall (y : lst) (lf4 : lst), @eq lst (qreva y (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_59: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (qreva y (lfappend lf4 Nil)).
Lemma candidate_535: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_519: forall (lf3 : lst) (n : natural) (lf8 : lst), @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_1157: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (rev (lfappend x y)).
Lemma candidate_956: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (rev lf5) (qreva x Nil)).
Lemma candidate_437: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (qreva x Nil) (Cons n Nil)).
Lemma candidate_436: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (qreva (lfappend x Nil) (Cons n Nil)).
Lemma candidate_232: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (qreva x lf7)) (lfappend lf5 (qreva x lf7)).
Lemma candidate_72: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1155: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (qreva y (qreva x Nil)).
Lemma candidate_372: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva y (qreva x lf7)) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_117: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva y (qreva x lf7)).
Lemma candidate_955: forall (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x Nil)) (qreva (lfappend x (rev lf5)) Nil).
Lemma candidate_230: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_70: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_533: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (qreva (qreva lf3 Nil) (Cons n Nil)).
Lemma candidate_1156: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil)) (lfappend (rev y) (rev x)).
Lemma candidate_368: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_113: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7)) (qreva (lfappend x y) lf7).
Lemma candidate_1139: forall (y : lst) (lf6 : lst), @eq lst (lfappend (qreva y Nil) lf6) (lfappend (rev y) (lfappend lf6 Nil)).
Lemma candidate_438: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_229: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_197: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) (lfappend lf4 Nil)) (lfappend (qreva y Nil) lf4).
Lemma candidate_69: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x lf7)) (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_57: forall (y : lst) (lf4 : lst), @eq lst (lfappend (qreva y Nil) lf4) (lfappend (rev y) (lfappend lf4 Nil)).
Lemma candidate_911: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (lfappend lf5 (lfappend lf6 lf7)).
Lemma candidate_906: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7) (qreva (qreva lf6 (rev lf5)) lf7).
Lemma candidate_537: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil)) (lfappend (rev (rev lf3)) (Cons n Nil)).
Lemma candidate_1341: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) lf7) (lfappend lf5 (qreva x lf7)).
Lemma candidate_1127: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7) (qreva (qreva lf6 y) lf7).
Lemma candidate_439: forall (n : natural) (x : lst), @eq lst (qreva x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1359: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (qreva (rev lf6) lf7)).
Lemma candidate_909: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (qreva (rev lf5) (lfappend lf6 lf7)).
Lemma candidate_532: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (lfappend lf3 Nil) (Cons n Nil)).
Lemma candidate_1154: forall (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x Nil))   (lfappend (rev y) (qreva x Nil)).
Lemma candidate_370: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev y) (qreva x lf7))   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_367: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_115: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_112: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x lf7))   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_1342: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1132: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (qreva y (lfappend lf6 lf7)).
Lemma candidate_1128: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y lf6) lf7).
Lemma candidate_4: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_534: forall (lf3 : lst) (n : natural), @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (rev (qreva lf3 Nil)) (Cons n Nil)).
Lemma candidate_1588: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1339: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_946: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (rev lf5) (qreva x lf7)).
Lemma candidate_1358: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) lf7)   (lfappend lf5 (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1586: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva y (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1164: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva y (qreva x lf7)).
Lemma candidate_1411: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev (rev (rev x)))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1338: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_944: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (qreva (lfappend x (rev lf5)) lf7).
Lemma candidate_1587: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1584: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (qreva (lfappend x y) Nil) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1160: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (qreva (lfappend x y) lf7).
Lemma candidate_858: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (qreva x (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_503: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_1413: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (lfappend (rev x) Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1412: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev (lfappend x Nil))) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_1130: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (rev y) (lfappend lf6 lf7)).
Lemma candidate_943: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) lf7)   (lfappend (lfappend lf5 (rev x)) lf7).
Lemma candidate_710: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (lfappend x (rev lf5)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_444: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_857: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (lfappend x y) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_502: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_2197: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_712: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_709: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_672: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (lfappend (rev x) (Cons n lf8)))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_446: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_443: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_417: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 (qreva x (Cons n lf8)))   (lfappend lf5 (lfappend (rev x) (Cons n lf8))).
Lemma candidate_1693: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend lf6 (Cons n Nil))).
Lemma candidate_1690: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (qreva (qreva lf6 (rev lf5)) (Cons n Nil)).
Lemma candidate_1630: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (lfappend lf6 (Cons n lf8))).
Lemma candidate_1585: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1529: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (rev x)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1162: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (rev y) (qreva x lf7)).
Lemma candidate_1159: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y (rev x)) lf7).
Lemma candidate_2297: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_2195: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (qreva (rev lf5) (rev x)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1947: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva (qreva lf6 y) (Cons n Nil)).
Lemma candidate_1583: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (lfappend lf6 lf7)).
Lemma candidate_1469: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (lfappend lf6 lf7)).
Lemma candidate_1410: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (lfappend (qreva x Nil) Nil)) lf7)   (lfappend lf5 (qreva x lf7)).
Lemma candidate_708: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (qreva (rev lf5) (lfappend (rev x) (Cons n Nil)))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_442: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2180: forall (n : natural) (lf5 : lst) (lf8 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n lf8))   (lfappend lf5 (qreva (rev lf6) (Cons n lf8))).
Lemma candidate_1692: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_859: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva y (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_856: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_504: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_501: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_268: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (qreva (rev lf3) lf7).
Lemma candidate_2196: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_2194: forall (n : natural) (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n lf8))   (lfappend lf5 (qreva x (Cons n lf8))).
Lemma candidate_1950: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend lf6 (Cons n Nil))).
Lemma candidate_1948: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y lf6) (Cons n Nil)).
Lemma candidate_1581: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva (rev lf6) lf7)).
Lemma candidate_1467: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva (rev lf6) lf7)).
Lemma candidate_713: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_447: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_2: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1528: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x Nil)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_860: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev (lfappend x y)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_505: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_3: forall (lf7 : lst) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_2295: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (rev lf5) (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1949: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2301: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (qreva (qreva lf6 Nil) (Cons n Nil))).
Lemma candidate_1695: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 (rev lf5))) (Cons n Nil)).
Lemma candidate_2497: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1983: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (qreva x (Cons n Nil))).
Lemma candidate_267: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (rev (qreva lf7 (rev lf3))).
Lemma candidate_2294: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (qreva (lfappend x (rev lf5)) Nil) (Cons n Nil))   (lfappend lf5 (qreva x (Cons n Nil))).
Lemma candidate_1952: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (rev (qreva lf6 y)) (Cons n Nil)).
Lemma candidate_1706: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x (rev lf5)) (Cons n Nil)).
Lemma candidate_1580: forall (lf7 : lst) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1466: forall (lf7 : lst) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (rev (qreva lf7 (rev lf6)))).
Lemma candidate_1694: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_2498: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (rev x)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2495: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva (lfappend x y) Nil) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_1982: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva (lfappend x y) (Cons n Nil)).
Lemma candidate_855: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (rev y) (lfappend (rev x) (Cons n Nil)))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_500: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (qreva y Nil) (qreva x (Cons n Nil)))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_266: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (rev (lfappend lf7 (rev lf3))).
Lemma candidate_1708: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend lf5 (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1705: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (lfappend lf5 (rev x)) (Cons n Nil)).
Lemma candidate_2300: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (lfappend lf6 Nil) (Cons n Nil))).
Lemma candidate_1951: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (qreva y (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1704: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (qreva (rev lf5) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2302: forall (n : natural) (lf5 : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf5 lf6) (Cons n Nil))   (lfappend lf5 (lfappend (rev (qreva lf6 Nil)) (Cons n Nil))).
Lemma candidate_2496: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (rev y) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_2434: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (rev x)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_1984: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (qreva y (lfappend (rev x) (Cons n Nil))).
Lemma candidate_1981: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (qreva y (rev x)) (Cons n Nil)).
Lemma candidate_757: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n Nil)).
Lemma candidate_2481: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend lf6 (Cons n Nil))).
Lemma candidate_2348: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (lfappend lf6 (Cons n lf8))).
Lemma candidate_1709: forall (n : natural) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x (rev lf5))) (Cons n Nil)).
Lemma candidate_281: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_264: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_5: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_1985: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev (lfappend x y)) (Cons n Nil)).
Lemma candidate_754: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n Nil)).
Lemma candidate_753: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (qreva (rev lf3) (Cons n lf8)).
Lemma candidate_2480: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva (rev lf6) (Cons n Nil))).
Lemma candidate_2345: forall (n : natural) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva (rev lf6) (Cons n lf8))).
Lemma candidate_262: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) lf7) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_2433: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x Nil)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_755: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend lf3 (Cons n (rev lf8))).
Lemma candidate_287: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (qreva x (rev lf7))).
Lemma candidate_285: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (rev (qreva lf7 x))).
Lemma candidate_279: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y (rev lf8)) (qreva x lf7)).
Lemma candidate_278: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva lf8 (rev y)) (qreva x lf7)).
Lemma candidate_263: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (rev lf7)) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_1980: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend (lfappend (qreva y Nil) (qreva x Nil)) (Cons n Nil))   (lfappend (rev y) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_2478: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva (qreva lf6 Nil) (Cons n Nil))).
Lemma candidate_286: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (qreva y lf8) (lfappend (rev x) lf7)).
Lemma candidate_277: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7) (lfappend (lfappend lf8 (rev y)) (qreva x lf7)).
Lemma candidate_261: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (rev (qreva lf7 (rev lf3))) (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_2482: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_752: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8)) (lfappend (rev y) (qreva x (Cons n lf8))).
Lemma candidate_2477: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (lfappend lf6 Nil) (Cons n Nil))).
Lemma candidate_2479: forall (n : natural) (y : lst) (lf6 : lst), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (lfappend (rev (qreva lf6 Nil)) (Cons n Nil))).
Lemma candidate_283: forall (lf3 : lst) (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 lf7)   (lfappend (qreva y lf8) (lfappend (rev x) (rev lf7))).
Lemma candidate_751: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y Nil) (qreva x (Cons n lf8))).
Lemma candidate_738: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_6: forall (lf3 : lst) (n : natural) (y : lst) (x : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) lf3, @eq lst (lfappend lf3 (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_765: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (qreva (rev lf3) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_767: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n (rev lf8)))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_749: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y (rev lf8)) (qreva x (Cons n lf8))).
Lemma candidate_748: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva lf8 (rev y)) (qreva x (Cons n lf8))).
Lemma candidate_737: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n (rev lf8)))).
Lemma candidate_747: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (lfappend lf8 (rev y)) (qreva x (Cons n lf8))).
Lemma candidate_740: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n Nil))).
Lemma candidate_736: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n lf8))).
Lemma candidate_770: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend (rev (rev lf3)) (Cons n Nil))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_735: forall (lf3 : lst) (n : natural) (y : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) lf3, @eq lst (lfappend lf3 (Cons n lf8))   (lfappend (qreva y lf8) (lfappend (rev x) (Cons n (rev lf8)))).
Lemma candidate_9: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6), @eq lst (lfappend (lfappend (qreva y Nil) lf6) lf7)   (lfappend (qreva y Nil) (qreva x lf7)).
Lemma candidate_7: forall (lf7 : lst) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6), @eq lst (lfappend (lfappend (qreva y lf8) lf6) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_12: forall (n : natural) (y : lst) (x : lst) (lf6 : lst), forall _ : @eq lst (qreva (lfappend x y) Nil) (lfappend (qreva y Nil) lf6), @eq lst (lfappend (lfappend (qreva y Nil) lf6) (Cons n Nil))   (lfappend (qreva y Nil) (qreva x (Cons n Nil))).
Lemma candidate_10: forall (n : natural) (y : lst) (x : lst) (lf6 : lst) (lf8 : lst), forall _ : @eq lst (qreva (lfappend x y) lf8) (lfappend (qreva y lf8) lf6), @eq lst (lfappend (lfappend (qreva y lf8) lf6) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
Lemma candidate_8: forall (lf7 : lst) (y : lst) (x : lst) (lf8 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf8)         (lfappend (qreva y lf8) (qreva x lf8)), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) lf7)   (lfappend (qreva y lf8) (qreva x lf7)).
Lemma candidate_11: forall (n : natural) (y : lst) (x : lst) (lf8 : lst), forall   _ : @eq lst (qreva (lfappend x y) lf8)         (lfappend (qreva y lf8) (qreva x lf8)), @eq lst (lfappend (lfappend (qreva y lf8) (qreva x lf8)) (Cons n lf8))   (lfappend (qreva y lf8) (qreva x (Cons n lf8))).
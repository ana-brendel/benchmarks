File Information
- File name: goal9
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal9_theorem0_53_drop_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal9_theorem0_53_drop_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 w0 : natural) (z0 : lst),
@eq lst (drop w0 (drop x0 (drop y0 z0))) (drop y0 (drop x0 (drop w0 z0))).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z)))

* Hypothesis:
x : natural
w : natural
y : natural
z : lst

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : natural
w : natural
y : natural
z : lst

* Terms:
@eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))) : Prop
drop w (drop y z) : lst
drop y (drop x (drop w z)) : lst
x : natural
drop w z : lst
w : natural
drop x (drop w z) : lst
lst : Set
y : natural
drop y z : lst
z : lst
natural : Set
drop x (drop w (drop y z)) : lst

* Functions:
drop  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = drop w (drop y z)
lf1 : lst = drop y (drop x (drop w z))
lf4 : lst = drop x (drop w z)
lf5 : lst = drop w z
lf2 : lst = drop x (drop w (drop y z))
lf6 : lst = drop y z

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (x : natural) (lf1 : lst) (lf3 : lst), @eq lst (drop x lf3) lf1.
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (y : natural), @eq lst lf2 (drop y lf4).
Lemma conj19: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst lf2 (drop y (drop x lf5)).
Lemma conj27: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj29: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst lf2 (drop y (drop x (drop w z))).
Lemma conj31: forall (x : natural) (w : natural) (y : natural) (z : lst) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x (drop w z))).
Lemma conj35: forall (lf6 : lst) (x : natural) (w : natural) (lf1 : lst), @eq lst (drop x (drop w lf6)) lf1.
Lemma conj36: forall (x : natural) (w : natural) (lf1 : lst) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) lf1.
Lemma conj51: forall (lf6 : lst) (x : natural) (lf4 : lst) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y lf4).
Lemma conj52: forall (x : natural) (lf4 : lst) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y lf4).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : natural) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y (drop x lf5)).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y (drop x lf5)).
Lemma conj63: forall (lf6 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w lf6)) (drop y (drop x (drop w z))).
Lemma conj64: forall (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).


<---VALIDITY CHECKS--->
Time elapsed: 41 seconds
Valid:
Lemma conj64: forall (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).

Invalid:
Lemma conj63: forall (lf6 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w lf6)) (drop y (drop x (drop w z))).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y (drop x lf5)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : natural) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y (drop x lf5)).
Lemma conj52: forall (x : natural) (lf4 : lst) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y lf4).
Lemma conj51: forall (lf6 : lst) (x : natural) (lf4 : lst) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y lf4).
Lemma conj36: forall (x : natural) (w : natural) (lf1 : lst) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) lf1.
Lemma conj35: forall (lf6 : lst) (x : natural) (w : natural) (lf1 : lst), @eq lst (drop x (drop w lf6)) lf1.
Lemma conj31: forall (x : natural) (w : natural) (y : natural) (z : lst) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x (drop w z))).
Lemma conj29: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst lf2 (drop y (drop x (drop w z))).
Lemma conj27: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst lf2 (drop y (drop x lf5)).
Lemma conj19: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (y : natural), @eq lst lf2 (drop y lf4).
Lemma conj3: forall (x : natural) (lf1 : lst) (lf3 : lst), @eq lst (drop x lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 41 seconds
Generalizations:
Lemma conj63: forall (lf6 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w lf6)) (drop y (drop x (drop w z))).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y (drop x lf5)).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : natural) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y (drop x lf5)).
Lemma conj52: forall (x : natural) (lf4 : lst) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y lf4).
Lemma conj51: forall (lf6 : lst) (x : natural) (lf4 : lst) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y lf4).
Lemma conj36: forall (x : natural) (w : natural) (lf1 : lst) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) lf1.
Lemma conj35: forall (lf6 : lst) (x : natural) (w : natural) (lf1 : lst), @eq lst (drop x (drop w lf6)) lf1.
Lemma conj31: forall (x : natural) (w : natural) (y : natural) (z : lst) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x (drop w z))).
Lemma conj29: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst lf2 (drop y (drop x (drop w z))).
Lemma conj27: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst lf2 (drop y (drop x lf5)).
Lemma conj19: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (y : natural), @eq lst lf2 (drop y lf4).
Lemma conj3: forall (x : natural) (lf1 : lst) (lf3 : lst), @eq lst (drop x lf3) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 66 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (x : natural) (lf1 : lst) (lf3 : lst), @eq lst (drop x lf3) lf1.
Lemma conj17: forall (lf2 : lst) (lf4 : lst) (y : natural), @eq lst lf2 (drop y lf4).
Lemma conj19: forall (x : natural) (lf4 : lst) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y lf4).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (x : natural) (y : natural), @eq lst lf2 (drop y (drop x lf5)).
Lemma conj27: forall (lf5 : lst) (x : natural) (y : natural) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x lf5)).
Lemma conj29: forall (lf2 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst lf2 (drop y (drop x (drop w z))).
Lemma conj31: forall (x : natural) (w : natural) (y : natural) (z : lst) (lf3 : lst), @eq lst (drop x lf3) (drop y (drop x (drop w z))).
Lemma conj35: forall (lf6 : lst) (x : natural) (w : natural) (lf1 : lst), @eq lst (drop x (drop w lf6)) lf1.
Lemma conj36: forall (x : natural) (w : natural) (lf1 : lst) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) lf1.
Lemma conj51: forall (lf6 : lst) (x : natural) (lf4 : lst) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y lf4).
Lemma conj52: forall (x : natural) (lf4 : lst) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y lf4).
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : natural) (w : natural) (y : natural), @eq lst (drop x (drop w lf6)) (drop y (drop x lf5)).
Lemma conj60: forall (lf5 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w (drop y z))) (drop y (drop x lf5)).
Lemma conj63: forall (lf6 : lst) (x : natural) (w : natural) (y : natural) (z : lst), @eq lst (drop x (drop w lf6)) (drop y (drop x (drop w z))).


<---CREATE SKETCHES--->
Time elapsed: 66 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst (##hole##) lf1
Sketch conj3_term_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj17_sketch0 : @eq lst lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj19_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj19_sketch1 : @eq lst (##hole##) (drop y lf4)
Sketch conj19_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (drop x lf3) (##hole##)
Sketch conj25_sketch0 : @eq lst lf2 (##hole##)
Sketch conj25_sketch1 : @eq lst lf2 (drop y (##hole##))
Sketch conj25_term_sketch0 : @eq lst (drop y (drop x lf5)) (##hole##)
Sketch conj25_term_sketch1 : @eq lst (drop x lf5) (##hole##)
Sketch conj27_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj27_sketch1 : @eq lst (drop x lf3) (drop y (##hole##))
Sketch conj27_sketch2 : @eq lst (##hole##) (drop y (drop x lf5))
Sketch conj27_term_sketch0 : @eq lst (drop y (drop x lf5)) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (drop x lf5) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (drop x lf3) (##hole##)
Sketch conj29_sketch0 : @eq lst lf2 (##hole##)
Sketch conj29_sketch1 : @eq lst lf2 (drop y (drop x (##hole##)))
Sketch conj29_sketch2 : @eq lst lf2 (drop y (##hole##))
Sketch conj29_term_sketch0 : @eq lst (drop y (drop x (drop w z))) (##hole##)
Sketch conj29_term_sketch1 : @eq lst (drop w z) (##hole##)
Sketch conj29_term_sketch2 : @eq lst (drop x (drop w z)) (##hole##)
Sketch conj31_sketch0 : @eq lst (drop x lf3) (##hole##)
Sketch conj31_sketch1 : @eq lst (drop x lf3) (drop y (drop x (##hole##)))
Sketch conj31_sketch2 : @eq lst (drop x lf3) (drop y (##hole##))
Sketch conj31_sketch3 : @eq lst (##hole##) (drop y (drop x (drop w z)))
Sketch conj31_term_sketch0 : @eq lst (drop y (drop x (drop w z))) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (drop w z) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (drop x (drop w z)) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (drop x lf3) (##hole##)
Sketch conj35_sketch0 : @eq lst (drop x (##hole##)) lf1
Sketch conj35_sketch1 : @eq lst (##hole##) lf1
Sketch conj35_term_sketch0 : @eq lst (drop w lf6) (##hole##)
Sketch conj35_term_sketch1 : @eq lst (drop x (drop w lf6)) (##hole##)
Sketch conj36_sketch0 : @eq lst (drop x (##hole##)) lf1
Sketch conj36_sketch1 : @eq lst (drop x (drop w (##hole##))) lf1
Sketch conj36_sketch2 : @eq lst (##hole##) lf1
Sketch conj36_term_sketch0 : @eq lst (drop w (drop y z)) (##hole##)
Sketch conj36_term_sketch1 : @eq lst (drop y z) (##hole##)
Sketch conj36_term_sketch2 : @eq lst (drop x (drop w (drop y z))) (##hole##)
Sketch conj51_sketch0 : @eq lst (drop x (drop w lf6)) (##hole##)
Sketch conj51_sketch1 : @eq lst (drop x (##hole##)) (drop y lf4)
Sketch conj51_sketch2 : @eq lst (##hole##) (drop y lf4)
Sketch conj51_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj51_term_sketch1 : @eq lst (drop w lf6) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (drop x (drop w lf6)) (##hole##)
Sketch conj52_sketch0 : @eq lst (drop x (drop w (drop y z))) (##hole##)
Sketch conj52_sketch1 : @eq lst (drop x (##hole##)) (drop y lf4)
Sketch conj52_sketch2 : @eq lst (drop x (drop w (##hole##))) (drop y lf4)
Sketch conj52_sketch3 : @eq lst (##hole##) (drop y lf4)
Sketch conj52_term_sketch0 : @eq lst (drop y lf4) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (drop w (drop y z)) (##hole##)
Sketch conj52_term_sketch2 : @eq lst (drop y z) (##hole##)
Sketch conj52_term_sketch3 : @eq lst (drop x (drop w (drop y z))) (##hole##)
Sketch conj59_sketch0 : @eq lst (drop x (drop w lf6)) (##hole##)
Sketch conj59_sketch1 : @eq lst (drop x (drop w lf6)) (drop y (##hole##))
Sketch conj59_sketch2 : @eq lst (drop x (##hole##)) (drop y (drop x lf5))
Sketch conj59_sketch3 : @eq lst (##hole##) (drop y (drop x lf5))
Sketch conj59_term_sketch0 : @eq lst (drop y (drop x lf5)) (##hole##)
Sketch conj59_term_sketch1 : @eq lst (drop x lf5) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (drop w lf6) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (drop x (drop w lf6)) (##hole##)
Sketch conj60_sketch0 : @eq lst (drop x (drop w (drop y z))) (##hole##)
Sketch conj60_sketch1 : @eq lst (drop x (drop w (drop y z))) (drop y (##hole##))
Sketch conj60_sketch2 : @eq lst (drop x (##hole##)) (drop y (drop x lf5))
Sketch conj60_sketch3 : @eq lst (drop x (drop w (##hole##))) (drop y (drop x lf5))
Sketch conj60_sketch4 : @eq lst (##hole##) (drop y (drop x lf5))
Sketch conj60_term_sketch0 : @eq lst (drop y (drop x lf5)) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (drop x lf5) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (drop w (drop y z)) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (drop y z) (##hole##)
Sketch conj60_term_sketch4 : @eq lst (drop x (drop w (drop y z))) (##hole##)
Sketch conj63_sketch0 : @eq lst (drop x (drop w lf6)) (##hole##)
Sketch conj63_sketch1 : @eq lst (drop x (drop w lf6)) (drop y (drop x (##hole##)))
Sketch conj63_sketch2 : @eq lst (drop x (drop w lf6)) (drop y (##hole##))
Sketch conj63_sketch3 : @eq lst (drop x (##hole##)) (drop y (drop x (drop w z)))
Sketch conj63_sketch4 : @eq lst (##hole##) (drop y (drop x (drop w z)))
Sketch conj63_term_sketch0 : @eq lst (drop y (drop x (drop w z))) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (drop w z) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (drop x (drop w z)) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (drop w lf6) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (drop x (drop w lf6)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 292 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_21
Sketch conj35_term_sketch1 --> Problem  synth_16
Sketch conj52_sketch1 --> Problem  synth_20
Sketch conj60_term_sketch1 --> Problem  synth_7
Sketch conj59_term_sketch2 --> Problem  synth_15
Sketch conj25_sketch1 --> Problem  synth_5
Sketch conj63_sketch4 --> Problem  synth_10
Sketch conj60_term_sketch4 --> Problem  synth_10
Sketch conj59_term_sketch1 --> Problem  synth_7
Sketch conj29_term_sketch2 --> Problem  synth_12
Sketch conj59_sketch1 --> Problem  synth_22
Sketch conj60_sketch0 --> Problem  synth_10
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj63_term_sketch0 --> Problem  synth_10
Sketch conj31_sketch0 --> Problem  synth_2
Sketch conj31_term_sketch3 --> Problem  synth_2
Sketch conj31_term_sketch1 --> Problem  synth_11
Sketch conj60_term_sketch3 --> Problem  synth_19
Sketch conj36_sketch0 --> Problem  synth_14
Sketch conj60_term_sketch2 --> Problem  synth_18
Sketch conj60_sketch1 --> Problem  synth_24
Sketch conj60_sketch2 --> Problem  synth_23
Sketch conj59_sketch3 --> Problem  synth_6
Sketch conj27_term_sketch2 --> Problem  synth_2
Sketch conj63_term_sketch4 --> Problem  synth_16
Sketch conj36_sketch2 --> Problem  synth_1
Sketch conj35_sketch0 --> Problem  synth_14
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_23
Sketch conj29_sketch0 --> Problem  synth_3
Sketch conj52_term_sketch1 --> Problem  synth_18
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch2 --> Problem  synth_16
Sketch conj27_sketch2 --> Problem  synth_6
Sketch conj60_term_sketch0 --> Problem  synth_6
Sketch conj52_term_sketch2 --> Problem  synth_19
Sketch conj31_sketch2 --> Problem  synth_8
Sketch conj27_sketch1 --> Problem  synth_8
Sketch conj60_sketch3 --> Problem  synth_25
Sketch conj51_sketch0 --> Problem  synth_16
Sketch conj29_term_sketch1 --> Problem  synth_11
Sketch conj31_sketch3 --> Problem  synth_10
Sketch conj19_term_sketch0 --> Problem  synth_4
Sketch conj29_sketch1 --> Problem  synth_9
Sketch conj52_term_sketch3 --> Problem  synth_10
Sketch conj63_term_sketch1 --> Problem  synth_11
Sketch conj51_term_sketch1 --> Problem  synth_15
Sketch conj51_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch0 --> Problem  synth_4
Sketch conj27_term_sketch1 --> Problem  synth_7
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj63_sketch2 --> Problem  synth_22
Sketch conj25_term_sketch1 --> Problem  synth_7
Sketch conj36_term_sketch0 --> Problem  synth_18
Sketch conj52_sketch0 --> Problem  synth_10
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_16
Sketch conj36_term_sketch2 --> Problem  synth_10
Sketch conj36_sketch1 --> Problem  synth_17
Sketch conj63_term_sketch3 --> Problem  synth_15
Sketch conj63_sketch0 --> Problem  synth_16
Sketch conj63_sketch3 --> Problem  synth_27
Sketch conj29_term_sketch0 --> Problem  synth_10
Sketch conj59_term_sketch0 --> Problem  synth_6
Sketch conj52_sketch3 --> Problem  synth_4
Sketch conj31_term_sketch0 --> Problem  synth_10
Sketch conj59_term_sketch3 --> Problem  synth_16
Sketch conj51_sketch1 --> Problem  synth_20
Sketch conj63_sketch1 --> Problem  synth_26
Sketch conj27_sketch0 --> Problem  synth_2
Sketch conj19_sketch1 --> Problem  synth_4
Sketch conj25_sketch0 --> Problem  synth_3
Sketch conj35_term_sketch0 --> Problem  synth_15
Sketch conj35_sketch1 --> Problem  synth_1
Sketch conj60_sketch4 --> Problem  synth_6
Sketch conj31_sketch1 --> Problem  synth_13
Sketch conj31_term_sketch2 --> Problem  synth_12
Sketch conj36_term_sketch1 --> Problem  synth_19
Sketch conj27_term_sketch0 --> Problem  synth_6
Sketch conj51_sketch2 --> Problem  synth_4
Sketch conj29_sketch2 --> Problem  synth_5
Sketch conj25_term_sketch0 --> Problem  synth_6
Sketch conj63_term_sketch2 --> Problem  synth_12


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 462 seconds

Problem: synth_22

Problem: synth_20

Problem: synth_18
 match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end
 drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end
 drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)
 drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)
 drop w (drop y z)
 drop y (drop w z)

Problem: synth_17

Problem: synth_21

Problem: synth_26

Problem: synth_9

Problem: synth_25

Problem: synth_13

Problem: synth_6
 match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end
 drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end
 drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end)
 drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end)
 drop x (drop y lf5)
 drop y (drop x lf5)

Problem: synth_11
 match match drop w z with | Cons _ _ => drop w z | Nil => Nil end with | Cons _ _ => match drop w z with | Cons _ _ => drop w z | Nil => Nil end | Nil => Nil end
 match drop w match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop w match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 drop w match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 match drop w z with | Cons _ _ => drop w z | Nil => Nil end
 drop w match z with | Cons _ _ => z | Nil => Nil end
 drop w z

Problem: synth_7
 match match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end with | Cons _ _ => match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end | Nil => Nil end
 match drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end
 drop x match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end
 match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end
 drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end
 drop x lf5

Problem: synth_4
 match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end
 drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end
 drop y (drop y lf4)
 match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end
 drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end
 drop y lf4

Problem: synth_1
 match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end
 match lf1 with | Cons _ _ => lf1 | Nil => Nil end
 lf1

Problem: synth_23
 match drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end
 drop y match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end
 drop y (drop y lf5)
 match drop y lf5 with | Cons _ _ => drop y lf5 | Nil => Nil end
 drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end
 drop y lf5

Problem: synth_27
 match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end
 drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end
 drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)
 drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)
 drop w (drop y z)
 drop y (drop w z)

Problem: synth_16
 match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end
 drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end
 drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)
 drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)
 drop x (drop w lf6)
 drop w (drop x lf6)

Problem: synth_19
 match drop y match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop y match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 drop y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end
 drop y (drop y z)
 match drop y z with | Cons _ _ => drop y z | Nil => Nil end
 drop y match z with | Cons _ _ => z | Nil => Nil end
 drop y z

Problem: synth_15
 match match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end with | Cons _ _ => match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end | Nil => Nil end
 match drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end
 drop w match match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end
 match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end
 drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end
 drop w lf6

Problem: synth_14

Problem: synth_10
 drop x (drop w (drop y z))
 drop w (drop x (drop y z))
 drop x (drop y (drop w z))
 drop y (drop x (drop w z))
 drop w (drop y (drop x z))
 drop y (drop w (drop x z))

Problem: synth_8

Problem: synth_24
 match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end
 drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end
 drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)
 drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)
 drop x (drop w z)
 drop w (drop x z)

Problem: synth_3
 match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end
 match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end
 match lf2 with | Cons _ _ => lf2 | Nil => Nil end
 lf2

Problem: synth_12
 match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end
 drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end
 drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)
 drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)
 drop x (drop w z)
 drop w (drop x z)

Problem: synth_5

Problem: synth_2
 match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end
 match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end
 drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end
 match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end
 drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end
 drop x lf3

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 463 seconds
Lemmas:
Lemma candidate_1: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_2: forall (lf1 : lst), @eq lst   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_9: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_10: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_11: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_12: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_13: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_14: forall (lf2 : lst), @eq lst lf2   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_19: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_20: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_21: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_22: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y (drop y lf4)).
Lemma candidate_23: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end).
Lemma candidate_24: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_25: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_26: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_27: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_28: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_29: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_30: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_31: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_32: forall (y : natural) (lf4 : lst), @eq lst   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_33: forall (y : natural) (lf4 : lst), @eq lst   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_34: forall (y : natural) (lf4 : lst), @eq lst (drop y (drop y lf4)) (drop y lf4).
Lemma candidate_35: forall (y : natural) (lf4 : lst), @eq lst (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_36: forall (y : natural) (lf4 : lst), @eq lst (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_37: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_38: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_39: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_40: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y (drop y lf4)).
Lemma candidate_41: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end).
Lemma candidate_42: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_43: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_44: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_45: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_46: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_47: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_48: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_49: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_50: forall (lf2 : lst), @eq lst lf2   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_51: forall (lf2 : lst), @eq lst lf2   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_52: forall (lf2 : lst), @eq lst lf2   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_53: forall (lf2 : lst), @eq lst lf2   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end).
Lemma candidate_54: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_55: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_56: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end).
Lemma candidate_57: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_58: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_59: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_60: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x (drop y lf5)).
Lemma candidate_61: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_62: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end with | Cons _ _ => match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_63: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_64: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_65: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_66: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_67: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x lf5).
Lemma candidate_68: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_69: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_70: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_71: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_72: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_73: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_74: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_75: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_76: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_77: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_78: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_79: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_80: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end).
Lemma candidate_81: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_82: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_83: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_84: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x (drop y lf5)).
Lemma candidate_85: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_86: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end with | Cons _ _ => match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_87: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_88: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_89: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_90: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_91: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x lf5).
Lemma candidate_92: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_93: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_94: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_95: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_96: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_97: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_98: forall (lf2 : lst), @eq lst lf2   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_99: forall (lf2 : lst), @eq lst lf2   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_100: forall (lf2 : lst), @eq lst lf2   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_101: forall (lf2 : lst), @eq lst lf2   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end).
Lemma candidate_102: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_103: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_104: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop w (drop y z))).
Lemma candidate_105: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop x (drop y z))).
Lemma candidate_106: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop y (drop w z))).
Lemma candidate_107: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_108: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop y (drop x z))).
Lemma candidate_109: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop w (drop x z))).
Lemma candidate_110: forall (z : lst) (w : natural), @eq lst (drop w z)   (match match drop w z with | Cons _ _ => drop w z | Nil => Nil end with | Cons _ _ => match drop w z with | Cons _ _ => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_111: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop w match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_112: forall (z : lst) (w : natural), @eq lst (drop w z)   (drop w match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_113: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_114: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_115: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w z).
Lemma candidate_116: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_117: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_118: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_119: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_120: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop x (drop w z)).
Lemma candidate_121: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_122: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_123: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_124: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_125: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_126: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_127: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_128: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_129: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop w (drop x (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_130: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop y (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_131: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_132: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop w (drop y (drop x z))) (drop y (drop x (drop w z))).
Lemma candidate_133: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop w (drop x z))) (drop y (drop x (drop w z))).
Lemma candidate_134: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop w (drop y z))).
Lemma candidate_135: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop x (drop y z))).
Lemma candidate_136: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop y (drop w z))).
Lemma candidate_137: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_138: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop y (drop x z))).
Lemma candidate_139: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop w (drop x z))).
Lemma candidate_140: forall (z : lst) (w : natural), @eq lst (drop w z)   (match match drop w z with | Cons _ _ => drop w z | Nil => Nil end with | Cons _ _ => match drop w z with | Cons _ _ => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_141: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop w match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_142: forall (z : lst) (w : natural), @eq lst (drop w z)   (drop w match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_143: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_144: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_145: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w z).
Lemma candidate_146: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_147: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_148: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_149: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_150: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop x (drop w z)).
Lemma candidate_151: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_152: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_153: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_154: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_155: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_156: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_157: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3) (drop x lf3).
Lemma candidate_158: forall (lf1 : lst), @eq lst   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_159: forall (lf1 : lst), @eq lst   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_160: forall (lf1 : lst), @eq lst   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_161: forall (lf1 : lst), @eq lst   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_162: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_163: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_164: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end with | Cons _ _ => match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_165: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_166: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_167: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end).
Lemma candidate_168: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end).
Lemma candidate_169: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6) (drop w lf6).
Lemma candidate_170: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_171: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_172: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_173: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_174: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_175: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_176: forall (lf1 : lst), @eq lst   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_177: forall (lf1 : lst), @eq lst   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_178: forall (lf1 : lst), @eq lst   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_179: forall (lf1 : lst), @eq lst   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_180: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_181: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_182: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end).
Lemma candidate_183: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_184: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_185: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_186: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop w (drop y z)).
Lemma candidate_187: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop y (drop w z)).
Lemma candidate_188: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop y match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_189: forall (z : lst) (y : natural), @eq lst (drop y z)   (drop y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_190: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y (drop y z)).
Lemma candidate_191: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y z with | Cons _ _ => drop y z | Nil => Nil end).
Lemma candidate_192: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_193: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y z).
Lemma candidate_194: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop w (drop y z))).
Lemma candidate_195: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop x (drop y z))).
Lemma candidate_196: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop y (drop w z))).
Lemma candidate_197: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_198: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop y (drop x z))).
Lemma candidate_199: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop w (drop x z))).
Lemma candidate_200: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_201: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_202: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_203: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_204: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_205: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_206: forall (y : natural) (lf4 : lst), @eq lst   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_207: forall (y : natural) (lf4 : lst), @eq lst   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_208: forall (y : natural) (lf4 : lst), @eq lst (drop y (drop y lf4)) (drop y lf4).
Lemma candidate_209: forall (y : natural) (lf4 : lst), @eq lst (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_210: forall (y : natural) (lf4 : lst), @eq lst (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_211: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_212: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_213: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_214: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y (drop y lf4)).
Lemma candidate_215: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end).
Lemma candidate_216: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_217: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_218: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end with | Cons _ _ => match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_219: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_220: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_221: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end).
Lemma candidate_222: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end).
Lemma candidate_223: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6) (drop w lf6).
Lemma candidate_224: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_225: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_226: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_227: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_228: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_229: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_230: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop w (drop y z))).
Lemma candidate_231: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop x (drop y z))).
Lemma candidate_232: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop y (drop w z))).
Lemma candidate_233: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_234: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop y (drop x z))).
Lemma candidate_235: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop w (drop x z))).
Lemma candidate_236: forall (y : natural) (lf4 : lst), @eq lst   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_237: forall (y : natural) (lf4 : lst), @eq lst   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_238: forall (y : natural) (lf4 : lst), @eq lst (drop y (drop y lf4)) (drop y lf4).
Lemma candidate_239: forall (y : natural) (lf4 : lst), @eq lst (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_240: forall (y : natural) (lf4 : lst), @eq lst (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_241: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_242: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_243: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_244: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y (drop y lf4)).
Lemma candidate_245: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end).
Lemma candidate_246: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_247: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4) (drop y lf4).
Lemma candidate_248: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end).
Lemma candidate_249: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_250: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_251: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_252: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop w (drop y z)).
Lemma candidate_253: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop y (drop w z)).
Lemma candidate_254: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop y match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_255: forall (z : lst) (y : natural), @eq lst (drop y z)   (drop y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_256: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y (drop y z)).
Lemma candidate_257: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y z with | Cons _ _ => drop y z | Nil => Nil end).
Lemma candidate_258: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_259: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y z).
Lemma candidate_260: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop w (drop y z))).
Lemma candidate_261: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop x (drop y z))).
Lemma candidate_262: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop y (drop w z))).
Lemma candidate_263: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_264: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop y (drop x z))).
Lemma candidate_265: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop w (drop x z))).
Lemma candidate_266: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_267: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_268: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_269: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_270: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_271: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_272: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x      (match drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_273: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x      (drop y match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_274: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y (drop y lf5))) (drop y (drop x lf5)).
Lemma candidate_275: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x (match drop y lf5 with | Cons _ _ => drop y lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_276: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_277: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_278: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_279: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_280: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_281: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_282: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_283: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_284: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end).
Lemma candidate_285: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_286: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_287: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_288: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x (drop y lf5)).
Lemma candidate_289: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_290: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end with | Cons _ _ => match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_291: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_292: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_293: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_294: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_295: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x lf5).
Lemma candidate_296: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end with | Cons _ _ => match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_297: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_298: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_299: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end).
Lemma candidate_300: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end).
Lemma candidate_301: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6) (drop w lf6).
Lemma candidate_302: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_303: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_304: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_305: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_306: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_307: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_308: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop w (drop y z))).
Lemma candidate_309: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop x (drop y z))).
Lemma candidate_310: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop y (drop w z))).
Lemma candidate_311: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_312: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop y (drop x z))).
Lemma candidate_313: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop w (drop x z))).
Lemma candidate_314: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y      (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)).
Lemma candidate_315: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y      (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)).
Lemma candidate_316: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))).
Lemma candidate_317: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))).
Lemma candidate_318: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_319: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop w (drop x z))).
Lemma candidate_320: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x      (match drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_321: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x      (drop y match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_322: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y (drop y lf5))) (drop y (drop x lf5)).
Lemma candidate_323: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x (match drop y lf5 with | Cons _ _ => drop y lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_324: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_325: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_326: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_327: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_328: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_329: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_330: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_331: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_332: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end).
Lemma candidate_333: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_334: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_335: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_336: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x (drop y lf5)).
Lemma candidate_337: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop y (drop x lf5)).
Lemma candidate_338: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end with | Cons _ _ => match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_339: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_340: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_341: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_342: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_343: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5) (drop x lf5).
Lemma candidate_344: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end).
Lemma candidate_345: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_346: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_347: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_348: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop w (drop y z)).
Lemma candidate_349: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop y (drop w z)).
Lemma candidate_350: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop y match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_351: forall (z : lst) (y : natural), @eq lst (drop y z)   (drop y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_352: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y (drop y z)).
Lemma candidate_353: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y z with | Cons _ _ => drop y z | Nil => Nil end).
Lemma candidate_354: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_355: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y z).
Lemma candidate_356: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop w (drop y z))).
Lemma candidate_357: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop x (drop y z))).
Lemma candidate_358: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop y (drop w z))).
Lemma candidate_359: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_360: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop y (drop x z))).
Lemma candidate_361: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop w (drop x z))).
Lemma candidate_362: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_363: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_364: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_365: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_366: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_367: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_368: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x      (match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end))   (drop y (drop x (drop w z))).
Lemma candidate_369: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x      (drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end))   (drop y (drop x (drop w z))).
Lemma candidate_370: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x (drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)))   (drop y (drop x (drop w z))).
Lemma candidate_371: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x (drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)))   (drop y (drop x (drop w z))).
Lemma candidate_372: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_373: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop y (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_374: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_375: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop w (drop x (drop y z))) (drop y (drop x (drop w z))).
Lemma candidate_376: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop y (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_377: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_378: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop w (drop y (drop x z))) (drop y (drop x (drop w z))).
Lemma candidate_379: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop w (drop x z))) (drop y (drop x (drop w z))).
Lemma candidate_380: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop w (drop y z))).
Lemma candidate_381: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop x (drop y z))).
Lemma candidate_382: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop y (drop w z))).
Lemma candidate_383: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_384: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop y (drop x z))).
Lemma candidate_385: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop w (drop x z))).
Lemma candidate_386: forall (z : lst) (w : natural), @eq lst (drop w z)   (match match drop w z with | Cons _ _ => drop w z | Nil => Nil end with | Cons _ _ => match drop w z with | Cons _ _ => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_387: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop w match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_388: forall (z : lst) (w : natural), @eq lst (drop w z)   (drop w match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_389: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_390: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_391: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w z).
Lemma candidate_392: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_393: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_394: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_395: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_396: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop x (drop w z)).
Lemma candidate_397: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_398: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end with | Cons _ _ => match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_399: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_400: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_401: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end).
Lemma candidate_402: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end).
Lemma candidate_403: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6) (drop w lf6).
Lemma candidate_404: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_405: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_406: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_407: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_408: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop x (drop w lf6)).
Lemma candidate_409: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 796 seconds
Duplicates removed: 300
Filtered by Quickchick: 4
Filtered by script: 17
Remaining: 88

Lemmas: 
Lemma candidate_187: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z)) (drop y (drop w z)).
Lemma candidate_121: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z)) (drop w (drop x z)).
Lemma candidate_175: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6)) (drop w (drop x lf6)).
Lemma candidate_78: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y lf5)) (drop y (drop x lf5)).
Lemma candidate_60: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5)) (drop x (drop y lf5)).
Lemma candidate_18: forall (lf2 : lst), @eq lst lf2 (match lf2 with | Cons _ _ => lf2 | Nil => Nil end).
Lemma candidate_6: forall (lf1 : lst), @eq lst (match lf1 with | Cons _ _ => lf1 | Nil => Nil end) lf1.
Lemma candidate_198: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop y (drop x z))).
Lemma candidate_196: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop x (drop y (drop w z))).
Lemma candidate_195: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z))) (drop w (drop x (drop y z))).
Lemma candidate_133: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop w (drop x z))) (drop y (drop x (drop w z))).
Lemma candidate_132: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop w (drop y (drop x z))) (drop y (drop x (drop w z))).
Lemma candidate_130: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop y (drop w z))) (drop y (drop x (drop w z))).
Lemma candidate_109: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop y (drop w (drop x z))).
Lemma candidate_108: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop w (drop y (drop x z))).
Lemma candidate_106: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop y (drop w z))).
Lemma candidate_104: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop y (drop x (drop w z))) (drop x (drop w (drop y z))).
Lemma candidate_192: forall (z : lst) (y : natural), @eq lst (drop y z) (drop y match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_114: forall (z : lst) (w : natural), @eq lst (drop w z) (drop w match z with | Cons _ _ => z | Nil => Nil end).
Lemma candidate_168: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end).
Lemma candidate_66: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end).
Lemma candidate_36: forall (y : natural) (lf4 : lst), @eq lst (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_24: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end).
Lemma candidate_12: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end).
Lemma candidate_191: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y z with | Cons _ _ => drop y z | Nil => Nil end).
Lemma candidate_113: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_167: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end).
Lemma candidate_65: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_35: forall (y : natural) (lf4 : lst), @eq lst (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end)   (drop y lf4).
Lemma candidate_23: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y lf4 with | Cons _ _ => drop y lf4 | Nil => Nil end).
Lemma candidate_11: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end).
Lemma candidate_185: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_184: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_119: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_118: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end)).
Lemma candidate_183: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end).
Lemma candidate_117: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end).
Lemma candidate_173: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w (drop x match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_172: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop x (drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end)).
Lemma candidate_77: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_76: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_59: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y (drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_58: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop x (drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end)).
Lemma candidate_171: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (drop w match drop x lf6 with | Cons _ _ => drop x lf6 | Nil => Nil end).
Lemma candidate_57: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end).
Lemma candidate_75: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop y match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_275: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x (match drop y lf5 with | Cons _ _ => drop y lf5 | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_182: forall (z : lst) (y : natural) (w : natural), @eq lst (drop w (drop y z))   (match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end).
Lemma candidate_116: forall (z : lst) (w : natural) (x : natural), @eq lst (drop x (drop w z))   (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end).
Lemma candidate_317: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y (drop w (drop x match z with | Cons _ _ => z | Nil => Nil end))).
Lemma candidate_316: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y (drop x (drop w match z with | Cons _ _ => z | Nil => Nil end))).
Lemma candidate_371: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x (drop y (drop w match z with | Cons _ _ => z | Nil => Nil end)))   (drop y (drop x (drop w z))).
Lemma candidate_370: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x (drop w (drop y match z with | Cons _ _ => z | Nil => Nil end)))   (drop y (drop x (drop w z))).
Lemma candidate_170: forall (w : natural) (x : natural) (lf6 : lst), @eq lst (drop x (drop w lf6))   (match drop w (drop x lf6) with | Cons _ _ => drop w (drop x lf6) | Nil => Nil end).
Lemma candidate_56: forall (y : natural) (x : natural) (lf5 : lst), @eq lst (drop y (drop x lf5))   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end).
Lemma candidate_74: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (match drop y (drop x lf5) with | Cons _ _ => drop y (drop x lf5) | Nil => Nil end)   (drop y (drop x lf5)).
Lemma candidate_315: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y      (drop w match drop x z with | Cons _ _ => drop x z | Nil => Nil end)).
Lemma candidate_369: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x      (drop y match drop w z with | Cons _ _ => drop w z | Nil => Nil end))   (drop y (drop x (drop w z))).
Lemma candidate_314: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst (drop x (drop w (drop y z)))   (drop y      (match drop w (drop x z) with | Cons _ _ => drop w (drop x z) | Nil => Nil end)).
Lemma candidate_368: forall (z : lst) (y : natural) (w : natural) (x : natural), @eq lst   (drop x      (match drop y (drop w z) with | Cons _ _ => drop y (drop w z) | Nil => Nil end))   (drop y (drop x (drop w z))).
Lemma candidate_17: forall (lf2 : lst), @eq lst lf2   (match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end).
Lemma candidate_5: forall (lf1 : lst), @eq lst   (match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_189: forall (z : lst) (y : natural), @eq lst (drop y z)   (drop y match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_112: forall (z : lst) (w : natural), @eq lst (drop w z)   (drop w match match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_188: forall (z : lst) (y : natural), @eq lst (drop y z)   (match drop y match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop y match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_111: forall (z : lst) (w : natural), @eq lst (drop w z)   (match drop w match z with | Cons _ _ => z | Nil => Nil end with | Cons _ _ => drop w match z with | Cons _ _ => z | Nil => Nil end | Nil => Nil end).
Lemma candidate_166: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (drop w match match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_64: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (drop x match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_21: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_10: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (drop x match match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_33: forall (y : natural) (lf4 : lst), @eq lst   (drop y match match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_165: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end with | Cons _ _ => drop w match lf6 with | Cons _ _ => lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_63: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop x match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_20: forall (y : natural) (lf4 : lst), @eq lst (drop y lf4)   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end).
Lemma candidate_9: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end with | Cons _ _ => drop x match lf3 with | Cons _ _ => lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_32: forall (y : natural) (lf4 : lst), @eq lst   (match drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end with | Cons _ _ => drop y match lf4 with | Cons _ _ => lf4 | Nil => Nil end | Nil => Nil end)   (drop y lf4).
Lemma candidate_110: forall (z : lst) (w : natural), @eq lst (drop w z)   (match match drop w z with | Cons _ _ => drop w z | Nil => Nil end with | Cons _ _ => match drop w z with | Cons _ _ => drop w z | Nil => Nil end | Nil => Nil end).
Lemma candidate_164: forall (w : natural) (lf6 : lst), @eq lst (drop w lf6)   (match match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end with | Cons _ _ => match drop w lf6 with | Cons _ _ => drop w lf6 | Nil => Nil end | Nil => Nil end).
Lemma candidate_62: forall (x : natural) (lf5 : lst), @eq lst (drop x lf5)   (match match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end with | Cons _ _ => match drop x lf5 with | Cons _ _ => drop x lf5 | Nil => Nil end | Nil => Nil end).
Lemma candidate_8: forall (lf3 : lst) (x : natural), @eq lst (drop x lf3)   (match match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end with | Cons _ _ => match drop x lf3 with | Cons _ _ => drop x lf3 | Nil => Nil end | Nil => Nil end).
Lemma candidate_273: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x      (drop y match match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_272: forall (y : natural) (x : natural) (lf5 : lst), @eq lst   (drop x      (match drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end with | Cons _ _ => drop y match lf5 with | Cons _ _ => lf5 | Nil => Nil end | Nil => Nil end))   (drop y (drop x lf5)).
Lemma candidate_16: forall (lf2 : lst), @eq lst lf2   (match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_4: forall (lf1 : lst), @eq lst   (match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_15: forall (lf2 : lst), @eq lst lf2   (match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_3: forall (lf1 : lst), @eq lst   (match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
Lemma candidate_14: forall (lf2 : lst), @eq lst lf2   (match match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf2 with | Cons _ _ => lf2 | Nil => Nil end with | Cons _ _ => match lf2 with | Cons _ _ => lf2 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end).
Lemma candidate_2: forall (lf1 : lst), @eq lst   (match match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end with | Cons _ _ => match match lf1 with | Cons _ _ => lf1 | Nil => Nil end with | Cons _ _ => match lf1 with | Cons _ _ => lf1 | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end | Nil => Nil end)   lf1.
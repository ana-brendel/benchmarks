File Information
- File name: goal41
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal41_theorem0_103_append_single
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal41_theorem0_103_append_single
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : lst) (_ : @eq bool (lst_subset x0 y0) true),
@eq bool (lst_eq (lst_intersection x0 y0) x0) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_subset x (Cons n (lst_intersection x y))) true

* Hypothesis:
IHx : forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true
H0 : @eq bool (lst_mem n y) true
H1 : @eq bool (lst_subset x (lst_intersection x y)) true
x : lst
H : @eq bool (lst_subset (lst_intersection x y) x) true
y : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lst_eq (lst_intersection x y) x : bool
x : lst
forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
y : lst
@eq bool (lst_subset x (Cons n (lst_intersection x y))) true : Prop
true : bool
@eq bool (lst_mem n y) true : Prop
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
Cons n (lst_intersection x y) : lst
@eq bool (lst_subset x y) true : Prop
@eq bool (lst_subset (lst_intersection x y) x) true : Prop
lst_subset x (Cons n (lst_intersection x y)) : bool
bool : Set
lst_subset (lst_intersection x y) x : bool
lst : Set
lst_mem n y : bool
lst_subset x (lst_intersection x y) : bool
@eq bool (lst_subset x (lst_intersection x y)) true : Prop
lst_subset x y : bool
natural : Set
lst_intersection x y : lst
n : natural

* Functions:
lst_subset  : forall (_ : lst) (_ : lst), bool
lst_eq  : forall (_ : lst) (_ : lst), bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_intersection  : forall (_ : lst) (_ : lst), lst
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lst_intersection x y
lf1 : bool = lst_subset x (Cons n (lst_intersection x y))
lf4 : bool = true
lf2 : lst = Cons n (lst_intersection x y)

Generalizations:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj8: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.


<---VALIDITY CHECKS--->
Time elapsed: 32 seconds
Valid:

Invalid:
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma conj8: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) true.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj6: forall (x : lst) (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 90 seconds
Generalizations:
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma conj16_imp: forall (x : lst) (y : lst) (n : natural), forall
  _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
      @eq bool (lst_mem n y) true,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), forall
  _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,
      @eq bool (lst_subset x (lst_intersection x y)) lf4,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma conj8: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) true.
Lemma conj8_imp: forall (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (Cons n lf3)) true.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj6: forall (x : lst) (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma conj6_imp: forall (x : lst) (lf4 : bool) (n : natural) (lf3 : lst), forall
  _ : forall _ : @eq bool (lst_subset lf3 x) lf4,
      @eq bool (lst_subset x lf3) lf4,
@eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 118 seconds
Valid:
Lemma conj8_imp: forall (x : lst) (n : natural) (lf3 : lst), forall _ : @eq bool (lst_subset x lf3) true,
@eq bool (lst_subset x (Cons n lf3)) true.

Invalid:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (x : lst) (lf4 : bool), @eq bool (lst_subset x lf2) lf4.
Lemma conj6_imp: forall (x : lst) (lf4 : bool) (n : natural) (lf3 : lst), forall
  _ : forall _ : @eq bool (lst_subset lf3 x) lf4,
      @eq bool (lst_subset x lf3) lf4,
@eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma conj7: forall (lf2 : lst) (x : lst), @eq bool (lst_subset x lf2) true.
Lemma conj8: forall (x : lst) (n : natural) (lf3 : lst), @eq bool (lst_subset x (Cons n lf3)) true.
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), forall
  _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,
      @eq bool (lst_subset x (lst_intersection x y)) lf4,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma conj16_imp: forall (x : lst) (y : lst) (n : natural), forall
  _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
      @eq bool (lst_mem n y) true,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.


<---CREATE SKETCHES--->
Time elapsed: 119 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq bool true (##hole##)
Sketch conj5_sketch0 : @eq bool (##hole##) lf4
Sketch conj5_term_sketch0 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj6_imp_sketch0 : forall
  _ : forall _ : @eq bool (##hole##) lf4, @eq bool (lst_subset x lf3) lf4,
@eq bool (lst_subset x (Cons n lf3)) lf4
Sketch conj6_imp_sketch1 : forall
  _ : forall _ : @eq bool (lst_subset lf3 x) lf4,
      @eq bool (lst_subset x lf3) lf4, @eq bool (##hole##) lf4
Sketch conj6_imp_sketch2 : forall
  _ : forall _ : @eq bool (lst_subset lf3 x) lf4, @eq bool (##hole##) lf4,
@eq bool (lst_subset x (Cons n lf3)) lf4
Sketch conj6_imp_sketch3 : forall
  _ : forall _ : @eq bool (lst_subset lf3 x) lf4,
      @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (##hole##)) lf4
Sketch conj6_imp_term_sketch0 : @eq bool (lst_subset lf3 x) (##hole##)
Sketch conj6_imp_term_sketch1 : @eq bool (lst_subset x (Cons n lf3)) (##hole##)
Sketch conj6_imp_term_sketch2 : @eq bool (lst_subset x lf3) (##hole##)
Sketch conj6_imp_term_sketch3 : @eq lst (Cons n lf3) (##hole##)
Sketch conj6_sketch0 : @eq bool (##hole##) lf4
Sketch conj6_sketch1 : @eq bool (lst_subset x (##hole##)) lf4
Sketch conj6_term_sketch0 : @eq bool (lst_subset x (Cons n lf3)) (##hole##)
Sketch conj6_term_sketch1 : @eq lst (Cons n lf3) (##hole##)
Sketch conj7_sketch0 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj7_sketch1 : @eq bool (##hole##) true
Sketch conj7_term_sketch0 : @eq bool true (##hole##)
Sketch conj7_term_sketch1 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj8_sketch0 : @eq bool (##hole##) true
Sketch conj8_sketch1 : @eq bool (lst_subset x (##hole##)) true
Sketch conj8_sketch2 : @eq bool (lst_subset x (Cons n lf3)) (##hole##)
Sketch conj8_term_sketch0 : @eq bool (lst_subset x (Cons n lf3)) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (Cons n lf3) (##hole##)
Sketch conj8_term_sketch2 : @eq bool true (##hole##)
Sketch conj14_imp_sketch0 : forall
  _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,
      @eq bool (lst_subset x (lst_intersection x y)) lf4,
@eq bool (lst_subset x (##hole##)) lf4
Sketch conj14_imp_sketch1 : forall
  _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,
      @eq bool (lst_subset x (lst_intersection x y)) lf4,
@eq bool (##hole##) lf4
Sketch conj14_imp_sketch2 : forall
  _ : forall _ : @eq bool (##hole##) lf4,
      @eq bool (lst_subset x (lst_intersection x y)) lf4,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4
Sketch conj14_imp_sketch3 : forall
  _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,
      @eq bool (##hole##) lf4,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4
Sketch conj14_imp_sketch4 : forall
  _ : forall _ : @eq bool (lst_subset (##hole##) x) lf4,
      @eq bool (lst_subset x (##hole##)) lf4,
@eq bool (lst_subset x (Cons n (##hole##))) lf4
Sketch conj14_imp_term_sketch0 : @eq lst (Cons n (lst_intersection x y)) (##hole##)
Sketch conj14_imp_term_sketch1 : @eq bool (lst_subset x (Cons n (lst_intersection x y))) (##hole##)
Sketch conj14_imp_term_sketch2 : @eq bool (lst_subset (lst_intersection x y) x) (##hole##)
Sketch conj14_imp_term_sketch3 : @eq bool (lst_subset x (lst_intersection x y)) (##hole##)
Sketch conj14_imp_term_sketch4 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj14_sketch0 : @eq bool (lst_subset x (##hole##)) lf4
Sketch conj14_sketch1 : @eq bool (##hole##) lf4
Sketch conj14_sketch2 : @eq bool (lst_subset x (Cons n (##hole##))) lf4
Sketch conj14_term_sketch0 : @eq lst (Cons n (lst_intersection x y)) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (lst_subset x (Cons n (lst_intersection x y))) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj16_imp_sketch0 : forall
  _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
      @eq bool (lst_mem n y) true, @eq bool (lst_subset x (##hole##)) true
Sketch conj16_imp_sketch1 : forall
  _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
      @eq bool (lst_mem n y) true, @eq bool (##hole##) true
Sketch conj16_imp_sketch2 : forall
  _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,
      @eq bool (##hole##) true,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) true
Sketch conj16_imp_sketch3 : forall _ : forall _ : @eq bool (##hole##) true, @eq bool (lst_mem n y) true,
@eq bool (lst_subset x (Cons n (lst_intersection x y))) true
Sketch conj16_imp_sketch4 : forall
  _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) (##hole##),
      @eq bool (lst_mem n y) (##hole##),
@eq bool (lst_subset x (Cons n (lst_intersection x y))) (##hole##)
Sketch conj16_imp_sketch5 : forall
  _ : forall _ : @eq bool (lst_subset x (##hole##)) true,
      @eq bool (lst_mem n y) true,
@eq bool (lst_subset x (Cons n (##hole##))) true
Sketch conj16_imp_term_sketch0 : @eq lst (Cons n (lst_intersection x y)) (##hole##)
Sketch conj16_imp_term_sketch1 : @eq bool (lst_subset x (Cons n (lst_intersection x y))) (##hole##)
Sketch conj16_imp_term_sketch2 : @eq bool (lst_mem n y) (##hole##)
Sketch conj16_imp_term_sketch3 : @eq bool (lst_subset x (lst_intersection x y)) (##hole##)
Sketch conj16_imp_term_sketch4 : @eq bool true (##hole##)
Sketch conj16_imp_term_sketch5 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj16_sketch0 : @eq bool (lst_subset x (##hole##)) true
Sketch conj16_sketch1 : @eq bool (##hole##) true
Sketch conj16_sketch2 : @eq bool (lst_subset x (Cons n (lst_intersection x y))) (##hole##)
Sketch conj16_sketch3 : @eq bool (lst_subset x (Cons n (##hole##))) true
Sketch conj16_term_sketch0 : @eq lst (Cons n (lst_intersection x y)) (##hole##)
Sketch conj16_term_sketch1 : @eq bool (lst_subset x (Cons n (lst_intersection x y))) (##hole##)
Sketch conj16_term_sketch2 : @eq bool true (##hole##)
Sketch conj16_term_sketch3 : @eq lst (lst_intersection x y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 292 seconds
Problems per Sketch:
Sketch conj6_imp_sketch3 --> Problem  synth_8
Sketch conj16_imp_sketch3 --> Problem  synth_29
Sketch conj7_sketch1 --> Problem  synth_15
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj16_sketch3 --> Problem  synth_33
Sketch conj14_sketch2 --> Problem  synth_22
Sketch conj14_imp_term_sketch4 --> Problem  synth_27
Sketch conj6_imp_term_sketch3 --> Problem  synth_12
Sketch conj16_sketch2 --> Problem  synth_30
Sketch conj14_imp_term_sketch1 --> Problem  synth_24
Sketch conj16_term_sketch1 --> Problem  synth_24
Sketch conj6_imp_sketch2 --> Problem  synth_7
Sketch conj14_term_sketch2 --> Problem  synth_27
Sketch conj6_imp_term_sketch1 --> Problem  synth_10
Sketch conj14_imp_sketch2 --> Problem  synth_20
Sketch conj8_sketch1 --> Problem  synth_16
Sketch conj7_sketch0 --> Problem  synth_14
Sketch conj6_imp_sketch1 --> Problem  synth_6
Sketch conj6_term_sketch0 --> Problem  synth_10
Sketch conj16_imp_term_sketch5 --> Problem  synth_27
Sketch conj6_imp_sketch0 --> Problem  synth_5
Sketch conj16_imp_sketch0 --> Problem  synth_23
Sketch conj8_term_sketch0 --> Problem  synth_10
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj14_imp_term_sketch2 --> Problem  synth_25
Sketch conj8_sketch2 --> Problem  synth_17
Sketch conj6_imp_term_sketch0 --> Problem  synth_9
Sketch conj16_imp_term_sketch0 --> Problem  synth_23
Sketch conj14_term_sketch1 --> Problem  synth_24
Sketch conj7_term_sketch1 --> Problem  synth_4
Sketch conj8_term_sketch1 --> Problem  synth_12
Sketch conj6_imp_term_sketch2 --> Problem  synth_11
Sketch conj16_imp_term_sketch1 --> Problem  synth_24
Sketch conj14_imp_sketch0 --> Problem  synth_18
Sketch conj14_imp_sketch1 --> Problem  synth_19
Sketch conj5_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_3
Sketch conj16_imp_sketch1 --> Problem  synth_24
Sketch conj14_imp_sketch4 --> Problem  synth_22
Sketch conj16_sketch1 --> Problem  synth_15
Sketch conj14_imp_term_sketch0 --> Problem  synth_23
Sketch conj6_sketch1 --> Problem  synth_13
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj16_imp_sketch2 --> Problem  synth_28
Sketch conj16_imp_term_sketch4 --> Problem  synth_2
Sketch conj16_term_sketch2 --> Problem  synth_2
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj16_imp_term_sketch3 --> Problem  synth_26
Sketch conj16_imp_term_sketch2 --> Problem  synth_32
Sketch conj6_term_sketch1 --> Problem  synth_12
Sketch conj16_sketch0 --> Problem  synth_16
Sketch conj14_sketch0 --> Problem  synth_13
Sketch conj14_imp_sketch3 --> Problem  synth_21
Sketch conj16_imp_sketch5 --> Problem  synth_31
Sketch conj14_term_sketch0 --> Problem  synth_23
Sketch conj16_term_sketch0 --> Problem  synth_23
Sketch conj8_sketch0 --> Problem  synth_15
Sketch conj16_term_sketch3 --> Problem  synth_27
Sketch conj14_imp_term_sketch3 --> Problem  synth_26
Sketch conj8_term_sketch2 --> Problem  synth_2
Sketch conj16_imp_sketch4 --> Problem  synth_30
Sketch conj14_sketch1 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 437 seconds

Problem: synth_28
 lst_eq y (Cons n Nil)
 lst_eq y (Cons Zero Nil)
 lst_mem n y
 lst_mem Zero y
 mem y n
 mem y Zero

Problem: synth_17
 lst_subset x x
 lst_eq x x
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 true

Problem: synth_29
 lst_eq y (lfappend x y)
 lst_subset x (lst_intersection y x)
 lst_eq x (lst_intersection y x)
 lst_eq y (lfappend y x)
 lst_subset x (lfappend y Nil)
 lst_subset x y

Problem: synth_26
 lst_eq y (lfappend x y)
 lst_subset x (lst_intersection y x)
 lst_eq x (lst_intersection y x)
 lst_eq y (lfappend y x)
 lst_subset x (lfappend y Nil)
 lst_subset x y

Problem: synth_9
 lst_subset lf3 lf3
 lst_eq lf3 lf3
 lst_subset lf3 x
 lst_subset x x
 lst_eq x x
 true

Problem: synth_30
 lst_subset x x
 lst_eq x x
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 true

Problem: synth_11
 lst_subset x (lfappend lf3 Nil)
 lst_eq x (lfappend lf3 Nil)
 lst_eq lf3 (lfappend x Nil)
 lst_subset x lf3
 lst_eq x lf3
 lst_eq lf3 x

Problem: synth_1
 true

Problem: synth_15

Problem: synth_31
 lst_intersection y (lst_intersection x x)
 lst_intersection y (lfappend x x)
 lst_intersection x (lfappend y Nil)
 lst_intersection y (lfappend x Nil)
 lst_intersection x y
 lst_intersection y x

Problem: synth_14
 lst_eq x x
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 lst_mem Zero lf2
 mem lf2 Zero
 true

Problem: synth_8
 Cons Zero (lst_intersection lf3 lf3)
 Cons Zero (lst_intersection x lf3)
 Cons Zero (lst_intersection lf3 x)
 Cons Zero (lfappend lf3 Nil)
 lfappend lf3 (Cons Zero Nil)
 Cons Zero lf3

Problem: synth_12
 Cons n (lfappend lf3 Nil)
 Cons Zero (lfappend lf3 Nil)
 lfappend lf3 (Cons n Nil)
 lfappend lf3 (Cons Zero Nil)
 Cons n lf3
 Cons Zero lf3

Problem: synth_5
 lst_eq x x
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 lf4
 true

Problem: synth_2
 true

Problem: synth_22

Problem: synth_20
 lst_eq x x
 lfeqb n n
 match n with | Succ _ => false | Zero => true end
 lfeqb n Zero
 lf4
 true

Problem: synth_18
 Cons Zero (lst_intersection y (lst_intersection x x))
 Cons Zero (lst_intersection y (lfappend x x))
 Cons Zero (lst_intersection x (lfappend y Nil))
 Cons Zero (lst_intersection y (lfappend x Nil))
 Cons Zero (lst_intersection x y)
 Cons Zero (lst_intersection y x)

Problem: synth_21
 lst_eq y (lfappend x y)
 lst_subset x (lst_intersection y x)
 lst_eq x (lst_intersection y x)
 lst_eq y (lfappend y x)
 lst_subset x (lfappend y Nil)
 lst_subset x y

Problem: synth_25
 lst_subset y (Cons Zero Nil)
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 true

Problem: synth_13

Problem: synth_6
 lst_subset x (lfappend lf3 (Cons Zero Nil))
 lst_subset x (lst_intersection x (Cons Zero Nil))
 lst_eq x (lst_intersection x (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons Zero lf3)
 lst_subset x (Cons Zero Nil)

Problem: synth_7
 lst_subset x (lfappend lf3 Nil)
 lst_eq x (lfappend lf3 Nil)
 lst_eq lf3 (lfappend x Nil)
 lst_subset x lf3
 lst_eq x lf3
 lst_eq lf3 x

Problem: synth_4
 lst_subset x (lst_intersection lf2 lf2)
 lst_subset x (lfappend lf2 lf2)
 lst_subset x (Cons Zero lf2)
 lst_subset x (lfappend lf2 Nil)
 lst_subset x (Cons Zero Nil)
 lst_subset x lf2

Problem: synth_23
 Cons n (lst_intersection y (lfappend x Nil))
 Cons Zero (lst_intersection y (lfappend x Nil))
 Cons n (lst_intersection x y)
 Cons Zero (lst_intersection x y)
 Cons n (lst_intersection y x)
 Cons Zero (lst_intersection y x)

Problem: synth_27
 lst_intersection y (lst_intersection x x)
 lst_intersection y (lfappend x x)
 lst_intersection x (lfappend y Nil)
 lst_intersection y (lfappend x Nil)
 lst_intersection x y
 lst_intersection y x

Problem: synth_16

Problem: synth_19
 lst_subset x (lfappend y (Cons Zero Nil))
 lst_subset x (lst_intersection x (Cons Zero Nil))
 lst_eq x (lst_intersection x (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons Zero y)
 lst_subset x (Cons Zero Nil)

Problem: synth_10
 lst_subset x (Cons n (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons n lf3)
 lst_subset x (Cons Zero lf3)
 lst_subset x (Cons n Nil)
 lst_subset x (Cons Zero Nil)

Problem: synth_33

Problem: synth_24
 lst_subset x (Cons n (Cons Zero Nil))
 lst_subset x (Cons Zero (Cons Zero Nil))
 lst_subset x (Cons n y)
 lst_subset x (Cons Zero y)
 lst_subset x (Cons n Nil)
 lst_subset x (Cons Zero Nil)

Problem: synth_3

Problem: synth_32
 lst_eq y (Cons n Nil)
 lst_eq y (Cons Zero Nil)
 lst_mem n y
 lst_mem Zero y
 mem y n
 mem y Zero

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 438 seconds
Lemmas:
Lemma candidate_1: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (Cons n lf3)) true.
Lemma candidate_2: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_3: @eq bool true (true).
Lemma candidate_4: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lst_intersection lf2 lf2)).
Lemma candidate_5: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 lf2)).
Lemma candidate_6: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero lf2)).
Lemma candidate_7: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_8: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero Nil)).
Lemma candidate_9: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x lf2).
Lemma candidate_10: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_eq x x) lf4, @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_11: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lfeqb n n) lf4, @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_12: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall         _ : @eq bool (match n with | Succ _ => false | Zero => true end) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_13: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lfeqb n Zero) lf4, @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_14: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall _ : forall _ : @eq bool (lf4) lf4, @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_15: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall _ : forall _ : @eq bool (true) lf4, @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_16: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (lfappend lf3 (Cons Zero Nil))) lf4.
Lemma candidate_17: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (lst_intersection x (Cons Zero Nil))) lf4.
Lemma candidate_18: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_eq x (lst_intersection x (Cons Zero Nil))) lf4.
Lemma candidate_19: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero (Cons Zero Nil))) lf4.
Lemma candidate_20: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero lf3)) lf4.
Lemma candidate_21: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero Nil)) lf4.
Lemma candidate_22: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x (lfappend lf3 Nil)) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_23: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_eq x (lfappend lf3 Nil)) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_24: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_eq lf3 (lfappend x Nil)) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_25: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_26: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4, @eq bool (lst_eq x lf3) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_27: forall (lf3 : lst) (n : natural) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4, @eq bool (lst_eq lf3 x) lf4, @eq bool (lst_subset x (Cons n lf3)) lf4.
Lemma candidate_28: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection lf3 lf3))) lf4.
Lemma candidate_29: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection x lf3))) lf4.
Lemma candidate_30: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection lf3 x))) lf4.
Lemma candidate_31: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero (lfappend lf3 Nil))) lf4.
Lemma candidate_32: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (lfappend lf3 (Cons Zero Nil))) lf4.
Lemma candidate_33: forall (lf3 : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset lf3 x) lf4,       @eq bool (lst_subset x lf3) lf4, @eq bool (lst_subset x (Cons Zero lf3)) lf4.
Lemma candidate_34: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 lf3).
Lemma candidate_35: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq lf3 lf3).
Lemma candidate_36: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset lf3 x).
Lemma candidate_37: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_subset x x).
Lemma candidate_38: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (lst_eq x x).
Lemma candidate_39: forall (lf3 : lst) (x : lst), @eq bool (lst_subset lf3 x) (true).
Lemma candidate_40: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_41: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_42: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n lf3)).
Lemma candidate_43: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons Zero lf3)).
Lemma candidate_44: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n Nil)).
Lemma candidate_45: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons Zero Nil)).
Lemma candidate_46: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x (lfappend lf3 Nil)).
Lemma candidate_47: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x (lfappend lf3 Nil)).
Lemma candidate_48: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq lf3 (lfappend x Nil)).
Lemma candidate_49: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x lf3).
Lemma candidate_50: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq x lf3).
Lemma candidate_51: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_eq lf3 x).
Lemma candidate_52: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend lf3 Nil)).
Lemma candidate_53: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons Zero (lfappend lf3 Nil)).
Lemma candidate_54: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (lfappend lf3 (Cons n Nil)).
Lemma candidate_55: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (lfappend lf3 (Cons Zero Nil)).
Lemma candidate_56: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n lf3).
Lemma candidate_57: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons Zero lf3).
Lemma candidate_58: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_59: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_60: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n lf3)).
Lemma candidate_61: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons Zero lf3)).
Lemma candidate_62: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n Nil)).
Lemma candidate_63: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons Zero Nil)).
Lemma candidate_64: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend lf3 Nil)).
Lemma candidate_65: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons Zero (lfappend lf3 Nil)).
Lemma candidate_66: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (lfappend lf3 (Cons n Nil)).
Lemma candidate_67: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (lfappend lf3 (Cons Zero Nil)).
Lemma candidate_68: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n lf3).
Lemma candidate_69: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons Zero lf3).
Lemma candidate_70: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq x x).
Lemma candidate_71: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset lf2 lf2).
Lemma candidate_72: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq lf2 lf2).
Lemma candidate_73: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_mem Zero lf2).
Lemma candidate_74: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (mem lf2 Zero).
Lemma candidate_75: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (true).
Lemma candidate_76: @eq bool true (true).
Lemma candidate_77: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lst_intersection lf2 lf2)).
Lemma candidate_78: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 lf2)).
Lemma candidate_79: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero lf2)).
Lemma candidate_80: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_81: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (Cons Zero Nil)).
Lemma candidate_82: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x lf2).
Lemma candidate_83: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x x).
Lemma candidate_84: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_eq x x).
Lemma candidate_85: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lfeqb n n).
Lemma candidate_86: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_87: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lfeqb n Zero).
Lemma candidate_88: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (true).
Lemma candidate_89: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_90: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_91: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n lf3)).
Lemma candidate_92: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons Zero lf3)).
Lemma candidate_93: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons n Nil)).
Lemma candidate_94: forall (lf3 : lst) (n : natural) (x : lst), @eq bool (lst_subset x (Cons n lf3)) (lst_subset x (Cons Zero Nil)).
Lemma candidate_95: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend lf3 Nil)).
Lemma candidate_96: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons Zero (lfappend lf3 Nil)).
Lemma candidate_97: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (lfappend lf3 (Cons n Nil)).
Lemma candidate_98: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (lfappend lf3 (Cons Zero Nil)).
Lemma candidate_99: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n lf3).
Lemma candidate_100: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons Zero lf3).
Lemma candidate_101: @eq bool true (true).
Lemma candidate_102: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool   (lst_subset x (Cons Zero (lst_intersection y (lst_intersection x x)))) lf4.
Lemma candidate_103: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection y (lfappend x x)))) lf4.
Lemma candidate_104: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection x (lfappend y Nil)))) lf4.
Lemma candidate_105: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection y (lfappend x Nil)))) lf4.
Lemma candidate_106: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection x y))) lf4.
Lemma candidate_107: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero (lst_intersection y x))) lf4.
Lemma candidate_108: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (lfappend y (Cons Zero Nil))) lf4.
Lemma candidate_109: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (lst_intersection x (Cons Zero Nil))) lf4.
Lemma candidate_110: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_eq x (lst_intersection x (Cons Zero Nil))) lf4.
Lemma candidate_111: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero (Cons Zero Nil))) lf4.
Lemma candidate_112: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero y)) lf4.
Lemma candidate_113: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons Zero Nil)) lf4.
Lemma candidate_114: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_eq x x) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_115: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lfeqb n n) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_116: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall         _ : @eq bool (match n with | Succ _ => false | Zero => true end) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_117: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lfeqb n Zero) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_118: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lf4) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_119: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (true) lf4,       @eq bool (lst_subset x (lst_intersection x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_120: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_eq y (lfappend x y)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_121: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lst_intersection y x)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_122: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_eq x (lst_intersection y x)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_123: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_eq y (lfappend y x)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_124: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x (lfappend y Nil)) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_125: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : forall _ : @eq bool (lst_subset (lst_intersection x y) x) lf4,       @eq bool (lst_subset x y) lf4, @eq bool (lst_subset x (Cons n (lst_intersection x y))) lf4.
Lemma candidate_126: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons n (lst_intersection y (lfappend x Nil))).
Lemma candidate_127: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons Zero (lst_intersection y (lfappend x Nil))).
Lemma candidate_128: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection x y)).
Lemma candidate_129: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection x y)).
Lemma candidate_130: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection y x)).
Lemma candidate_131: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection y x)).
Lemma candidate_132: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_133: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_134: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_135: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_136: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_137: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_138: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset y (Cons Zero Nil)).
Lemma candidate_139: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset y y).
Lemma candidate_140: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq y y).
Lemma candidate_141: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset x x).
Lemma candidate_142: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq x x).
Lemma candidate_143: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (true).
Lemma candidate_144: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend x y)).
Lemma candidate_145: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lst_intersection y x)).
Lemma candidate_146: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_eq x (lst_intersection y x)).
Lemma candidate_147: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend y x)).
Lemma candidate_148: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lfappend y Nil)).
Lemma candidate_149: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_subset x y).
Lemma candidate_150: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_151: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_152: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_153: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_154: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_155: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_156: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons n (lst_intersection y (lfappend x Nil))).
Lemma candidate_157: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons Zero (lst_intersection y (lfappend x Nil))).
Lemma candidate_158: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection x y)).
Lemma candidate_159: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection x y)).
Lemma candidate_160: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection y x)).
Lemma candidate_161: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection y x)).
Lemma candidate_162: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_163: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_164: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_165: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_166: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_167: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_168: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_169: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_170: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_171: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_172: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_173: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_174: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection y (lfappend x Nil)))) true.
Lemma candidate_175: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons Zero (lst_intersection y (lfappend x Nil))))   true.
Lemma candidate_176: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_177: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons Zero (lst_intersection x y))) true.
Lemma candidate_178: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection y x))) true.
Lemma candidate_179: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons Zero (lst_intersection y x))) true.
Lemma candidate_180: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (Cons Zero Nil))) true.
Lemma candidate_181: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons Zero (Cons Zero Nil))) true.
Lemma candidate_182: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n y)) true.
Lemma candidate_183: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons Zero y)) true.
Lemma candidate_184: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n Nil)) true.
Lemma candidate_185: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons Zero Nil)) true.
Lemma candidate_186: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_eq y (Cons n Nil)) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_187: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_eq y (Cons Zero Nil)) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_188: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_189: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem Zero y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_190: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (mem y n) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_191: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (mem y Zero) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_192: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_eq y (lfappend x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_193: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection y x)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_194: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_eq x (lst_intersection y x)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_195: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_eq y (lfappend y x)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_196: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lfappend y Nil)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_197: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x y) true, @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_198: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool (lst_subset x (lst_intersection x y)) (lst_subset x x),       @eq bool (lst_mem n y) (lst_subset x x), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lst_subset x x).
Lemma candidate_199: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) (lst_eq x x),       @eq bool (lst_mem n y) (lst_eq x x), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lst_eq x x).
Lemma candidate_200: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) (lfeqb n n),       @eq bool (lst_mem n y) (lfeqb n n), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lfeqb n n).
Lemma candidate_201: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool (lst_subset x (lst_intersection x y))               (match n with | Succ _ => false | Zero => true end),       @eq bool (lst_mem n y)         (match n with | Succ _ => false | Zero => true end), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_202: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool (lst_subset x (lst_intersection x y)) (lfeqb n Zero),       @eq bool (lst_mem n y) (lfeqb n Zero), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lfeqb n Zero).
Lemma candidate_203: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) (true),       @eq bool (lst_mem n y) (true), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (true).
Lemma candidate_204: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool               (lst_subset x (lst_intersection y (lst_intersection x x))) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection y (lst_intersection x x))))   true.
Lemma candidate_205: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool (lst_subset x (lst_intersection y (lfappend x x))) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection y (lfappend x x)))) true.
Lemma candidate_206: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool (lst_subset x (lst_intersection x (lfappend y Nil)))               true, @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x (lfappend y Nil)))) true.
Lemma candidate_207: forall (n : natural) (y : lst) (x : lst), forall   _ : forall         _ : @eq bool (lst_subset x (lst_intersection y (lfappend x Nil)))               true, @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection y (lfappend x Nil)))) true.
Lemma candidate_208: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection x y)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection x y))) true.
Lemma candidate_209: forall (n : natural) (y : lst) (x : lst), forall   _ : forall _ : @eq bool (lst_subset x (lst_intersection y x)) true,       @eq bool (lst_mem n y) true, @eq bool (lst_subset x (Cons n (lst_intersection y x))) true.
Lemma candidate_210: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons n (lst_intersection y (lfappend x Nil))).
Lemma candidate_211: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons Zero (lst_intersection y (lfappend x Nil))).
Lemma candidate_212: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection x y)).
Lemma candidate_213: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection x y)).
Lemma candidate_214: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection y x)).
Lemma candidate_215: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection y x)).
Lemma candidate_216: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_217: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_218: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_219: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_220: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_221: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_222: forall (n : natural) (y : lst), @eq bool (lst_mem n y) (lst_eq y (Cons n Nil)).
Lemma candidate_223: forall (n : natural) (y : lst), @eq bool (lst_mem n y) (lst_eq y (Cons Zero Nil)).
Lemma candidate_224: forall (n : natural) (y : lst), @eq bool (lst_mem n y) (lst_mem n y).
Lemma candidate_225: forall (n : natural) (y : lst), @eq bool (lst_mem n y) (lst_mem Zero y).
Lemma candidate_226: forall (n : natural) (y : lst), @eq bool (lst_mem n y) (mem y n).
Lemma candidate_227: forall (n : natural) (y : lst), @eq bool (lst_mem n y) (mem y Zero).
Lemma candidate_228: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend x y)).
Lemma candidate_229: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lst_intersection y x)).
Lemma candidate_230: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_eq x (lst_intersection y x)).
Lemma candidate_231: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend y x)).
Lemma candidate_232: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lfappend y Nil)).
Lemma candidate_233: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_subset x y).
Lemma candidate_234: @eq bool true (true).
Lemma candidate_235: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_236: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_237: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_238: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_239: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_240: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_241: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lst_subset x x).
Lemma candidate_242: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lst_eq x x).
Lemma candidate_243: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lfeqb n n).
Lemma candidate_244: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (match n with | Succ _ => false | Zero => true end).
Lemma candidate_245: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (lfeqb n Zero).
Lemma candidate_246: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y))) (true).
Lemma candidate_247: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons n (lst_intersection y (lfappend x Nil))).
Lemma candidate_248: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y))   (Cons Zero (lst_intersection y (lfappend x Nil))).
Lemma candidate_249: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection x y)).
Lemma candidate_250: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection x y)).
Lemma candidate_251: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons n (lst_intersection y x)).
Lemma candidate_252: forall (n : natural) (y : lst) (x : lst), @eq lst (Cons n (lst_intersection x y)) (Cons Zero (lst_intersection y x)).
Lemma candidate_253: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n (Cons Zero Nil))).
Lemma candidate_254: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero (Cons Zero Nil))).
Lemma candidate_255: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_256: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero y)).
Lemma candidate_257: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n Nil)).
Lemma candidate_258: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons Zero Nil)).
Lemma candidate_259: @eq bool true (true).
Lemma candidate_260: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_261: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_262: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_263: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_264: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_265: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 950 seconds
Duplicates removed: 98
Filtered by Quickchick: 138
Filtered by script: 10
Remaining: 19

Lemmas: 
Lemma candidate_52: forall (lf3 : lst) (n : natural), @eq lst (Cons n lf3) (Cons n (lfappend lf3 Nil)).
Lemma candidate_143: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (true).
Lemma candidate_142: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq x x).
Lemma candidate_140: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq y y).
Lemma candidate_46: forall (lf3 : lst) (x : lst), @eq bool (lst_subset x lf3) (lst_subset x (lfappend lf3 Nil)).
Lemma candidate_7: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_5: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 lf2)).
Lemma candidate_149: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_subset x y).
Lemma candidate_141: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset x x).
Lemma candidate_139: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset y y).
Lemma candidate_152: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_4: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lst_intersection lf2 lf2)).
Lemma candidate_147: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend y x)).
Lemma candidate_144: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend x y)).
Lemma candidate_148: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lfappend y Nil)).
Lemma candidate_146: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_eq x (lst_intersection y x)).
Lemma candidate_134: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset x (Cons n (lst_intersection x y)))   (lst_subset x (Cons n y)).
Lemma candidate_145: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lst_intersection y x)).
Lemma candidate_1: forall (lf3 : lst) (n : natural) (x : lst), forall _ : @eq bool (lst_subset x lf3) true, @eq bool (lst_subset x (Cons n lf3)) true.
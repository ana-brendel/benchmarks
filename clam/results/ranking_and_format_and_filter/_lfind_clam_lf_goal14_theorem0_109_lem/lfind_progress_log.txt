File Information
- File name: goal14
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal14_theorem0_109_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal14_theorem0_109_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : lst, @eq bool (sorted (sort x0)) true.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq bool (sorted (insort n (sort x))) true

* Hypothesis:
IHx : @eq bool (sorted (sort x)) true
x : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
sort x : lst
@eq bool (sorted (insort n (sort x))) true : Prop
sorted (sort x) : bool
bool : Set
x : lst
@eq bool (sorted (sort x)) true : Prop
sorted (insort n (sort x)) : bool
lst : Set
insort n (sort x) : lst
natural : Set
true : bool
n : natural

* Functions:
sort  : forall _ : lst, lst
sorted  : forall _ : lst, bool
insort  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = sort x
lf1 : bool = sorted (insort n (sort x))
lf4 : bool = true
lf2 : lst = insort n (sort x)

Generalizations:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (lf4 : bool), @eq bool (sorted lf2) lf4.
Lemma conj6: forall (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) lf4.
Lemma conj7: forall (lf2 : lst), @eq bool (sorted lf2) true.
Lemma conj8: forall (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (n : natural), @eq bool (sorted (insort n (sort x))) lf4.
Lemma conj16: forall (x : lst) (n : natural), @eq bool (sorted (insort n (sort x))) true.


<---VALIDITY CHECKS--->
Time elapsed: 18 seconds
Valid:
Lemma conj16: forall (x : lst) (n : natural), @eq bool (sorted (insort n (sort x))) true.

Invalid:
Lemma conj14: forall (x : lst) (lf4 : bool) (n : natural), @eq bool (sorted (insort n (sort x))) lf4.
Lemma conj8: forall (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) true.
Lemma conj7: forall (lf2 : lst), @eq bool (sorted lf2) true.
Lemma conj6: forall (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) lf4.
Lemma conj5: forall (lf2 : lst) (lf4 : bool), @eq bool (sorted lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 28 seconds
Generalizations:
Lemma conj14: forall (x : lst) (lf4 : bool) (n : natural), @eq bool (sorted (insort n (sort x))) lf4.
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (n : natural), forall _ : @eq bool (sorted (sort x)) lf4,
@eq bool (sorted (insort n (sort x))) lf4.
Lemma conj8: forall (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) true.
Lemma conj8_imp: forall (n : natural) (lf3 : lst), forall _ : @eq bool (sorted lf3) true, @eq bool (sorted (insort n lf3)) true.
Lemma conj7: forall (lf2 : lst), @eq bool (sorted lf2) true.
Lemma conj6: forall (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) lf4.
Lemma conj6_imp: forall (lf4 : bool) (n : natural) (lf3 : lst), forall _ : @eq bool (sorted lf3) lf4, @eq bool (sorted (insort n lf3)) lf4.
Lemma conj5: forall (lf2 : lst) (lf4 : bool), @eq bool (sorted lf2) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 42 seconds
Valid:
Lemma conj6_imp: forall (lf4 : bool) (n : natural) (lf3 : lst), forall _ : @eq bool (sorted lf3) lf4, @eq bool (sorted (insort n lf3)) lf4.
Lemma conj8_imp: forall (n : natural) (lf3 : lst), forall _ : @eq bool (sorted lf3) true, @eq bool (sorted (insort n lf3)) true.
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (n : natural), forall _ : @eq bool (sorted (sort x)) lf4,
@eq bool (sorted (insort n (sort x))) lf4.

Invalid:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (lf4 : bool), @eq bool (sorted lf2) lf4.
Lemma conj6: forall (lf4 : bool) (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) lf4.
Lemma conj7: forall (lf2 : lst), @eq bool (sorted lf2) true.
Lemma conj8: forall (n : natural) (lf3 : lst), @eq bool (sorted (insort n lf3)) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (n : natural), @eq bool (sorted (insort n (sort x))) lf4.


<---CREATE SKETCHES--->
Time elapsed: 42 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq bool true (##hole##)
Sketch conj5_sketch0 : @eq bool (##hole##) lf4
Sketch conj5_term_sketch0 : @eq bool (sorted lf2) (##hole##)
Sketch conj6_sketch0 : @eq bool (sorted (##hole##)) lf4
Sketch conj6_sketch1 : @eq bool (##hole##) lf4
Sketch conj6_term_sketch0 : @eq lst (insort n lf3) (##hole##)
Sketch conj6_term_sketch1 : @eq bool (sorted (insort n lf3)) (##hole##)
Sketch conj7_sketch0 : @eq bool (##hole##) true
Sketch conj7_sketch1 : @eq bool (sorted lf2) (##hole##)
Sketch conj7_term_sketch0 : @eq bool (sorted lf2) (##hole##)
Sketch conj7_term_sketch1 : @eq bool true (##hole##)
Sketch conj8_sketch0 : @eq bool (sorted (##hole##)) true
Sketch conj8_sketch1 : @eq bool (##hole##) true
Sketch conj8_sketch2 : @eq bool (sorted (insort n lf3)) (##hole##)
Sketch conj8_term_sketch0 : @eq lst (insort n lf3) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (sorted (insort n lf3)) (##hole##)
Sketch conj8_term_sketch2 : @eq bool true (##hole##)
Sketch conj14_sketch0 : @eq bool (sorted (insort n (##hole##))) lf4
Sketch conj14_sketch1 : @eq bool (##hole##) lf4
Sketch conj14_sketch2 : @eq bool (sorted (##hole##)) lf4
Sketch conj14_term_sketch0 : @eq lst (sort x) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (sorted (insort n (sort x))) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (insort n (sort x)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 71 seconds
Problems per Sketch:
Sketch conj7_sketch1 --> Problem  synth_4
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj14_sketch2 --> Problem  synth_5
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj7_term_sketch0 --> Problem  synth_4
Sketch conj14_term_sketch2 --> Problem  synth_12
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj8_sketch1 --> Problem  synth_2
Sketch conj7_sketch0 --> Problem  synth_2
Sketch conj6_term_sketch0 --> Problem  synth_6
Sketch conj14_sketch0 --> Problem  synth_9
Sketch conj8_term_sketch0 --> Problem  synth_6
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj14_term_sketch0 --> Problem  synth_10
Sketch conj8_sketch2 --> Problem  synth_7
Sketch conj8_sketch0 --> Problem  synth_8
Sketch conj14_term_sketch1 --> Problem  synth_11
Sketch conj7_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch1 --> Problem  synth_7
Sketch conj8_term_sketch2 --> Problem  synth_2
Sketch conj5_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_5
Sketch conj14_sketch1 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 162 seconds

Problem: synth_10
 sort (sort (sort (sort (sort (sort x)))))
 sort (sort (sort (sort (sort x))))
 sort (sort (sort (sort x)))
 sort (sort (sort x))
 sort (sort x)
 sort x

Problem: synth_8

Problem: synth_3
 lf4
 true

Problem: synth_9

Problem: synth_12
 sort (insort n (sort (sort x)))
 sort (sort (insort n x))
 sort (insort n (sort x))
 insort n (sort (sort x))
 sort (insort n x)
 insort n (sort x)

Problem: synth_6
 sort (sort (insort n lf3))
 sort (insort n (sort lf3))
 insort n (sort (sort lf3))
 sort (insort n lf3)
 insort n (sort lf3)
 insort n lf3

Problem: synth_11
 match sort x with | Cons y _ => andb (sorted (sort x)) (leq Zero y) | Nil => true end
 sorted (sort (sort x))
 less n (Succ n)
 sorted (sort x)
 eqn n n
 true

Problem: synth_7
 match lf3 with | Cons y _ => andb (sorted lf3) (leq Zero y) | Nil => true end
 less n (Succ n)
 sorted (sort lf3)
 eqn n n
 sorted lf3
 true

Problem: synth_5

Problem: synth_4
 sorted (sort (sort lf2))
 sorted (insort Zero lf2)
 match lf2 with | Cons y _ => andb (sorted lf2) (leq Zero y) | Nil => true end
 sorted (sort lf2)
 sorted lf2
 true

Problem: synth_1
 lf1
 true

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 162 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) true.
Lemma candidate_2: forall (lf3 : lst) (n : natural) (lf4 : bool), forall _ : @eq bool (sorted lf3) lf4, @eq bool (sorted (insort n lf3)) lf4.
Lemma candidate_3: forall (lf3 : lst) (n : natural), forall _ : @eq bool (sorted lf3) true, @eq bool (sorted (insort n lf3)) true.
Lemma candidate_4: forall (n : natural) (lf4 : bool) (x : lst), forall _ : @eq bool (sorted (sort x)) lf4, @eq bool (sorted (insort n (sort x))) lf4.
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_7: @eq bool true (true).
Lemma candidate_8: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_9: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_10: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (sort (sort lf2))).
Lemma candidate_11: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (insort Zero lf2)).
Lemma candidate_12: forall (lf2 : lst), @eq bool (sorted lf2)   (match lf2 with | Cons y _ => andb (sorted lf2) (leq Zero y) | Nil => true end).
Lemma candidate_13: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (sort lf2)).
Lemma candidate_14: forall (lf2 : lst), @eq bool (sorted lf2) (sorted lf2).
Lemma candidate_15: forall (lf2 : lst), @eq bool (sorted lf2) (true).
Lemma candidate_16: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_17: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_18: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (sort (sort (insort n lf3))).
Lemma candidate_19: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (sort (insort n (sort lf3))).
Lemma candidate_20: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (insort n (sort (sort lf3))).
Lemma candidate_21: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (sort (insort n lf3)).
Lemma candidate_22: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (insort n (sort lf3)).
Lemma candidate_23: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (insort n lf3).
Lemma candidate_24: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3))   (match lf3 with | Cons y _ => andb (sorted lf3) (leq Zero y) | Nil => true end).
Lemma candidate_25: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (less n (Succ n)).
Lemma candidate_26: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted (sort lf3)).
Lemma candidate_27: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (eqn n n).
Lemma candidate_28: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted lf3).
Lemma candidate_29: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (true).
Lemma candidate_30: @eq bool (true) true.
Lemma candidate_31: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (sort (sort lf2))).
Lemma candidate_32: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (insort Zero lf2)).
Lemma candidate_33: forall (lf2 : lst), @eq bool (sorted lf2)   (match lf2 with | Cons y _ => andb (sorted lf2) (leq Zero y) | Nil => true end).
Lemma candidate_34: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (sort lf2)).
Lemma candidate_35: forall (lf2 : lst), @eq bool (sorted lf2) (sorted lf2).
Lemma candidate_36: forall (lf2 : lst), @eq bool (sorted lf2) (true).
Lemma candidate_37: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (sort (sort lf2))).
Lemma candidate_38: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (insort Zero lf2)).
Lemma candidate_39: forall (lf2 : lst), @eq bool (sorted lf2)   (match lf2 with | Cons y _ => andb (sorted lf2) (leq Zero y) | Nil => true end).
Lemma candidate_40: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (sort lf2)).
Lemma candidate_41: forall (lf2 : lst), @eq bool (sorted lf2) (sorted lf2).
Lemma candidate_42: forall (lf2 : lst), @eq bool (sorted lf2) (true).
Lemma candidate_43: @eq bool true (true).
Lemma candidate_44: @eq bool (true) true.
Lemma candidate_45: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3))   (match lf3 with | Cons y _ => andb (sorted lf3) (leq Zero y) | Nil => true end).
Lemma candidate_46: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (less n (Succ n)).
Lemma candidate_47: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted (sort lf3)).
Lemma candidate_48: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (eqn n n).
Lemma candidate_49: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted lf3).
Lemma candidate_50: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (true).
Lemma candidate_51: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (sort (sort (insort n lf3))).
Lemma candidate_52: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (sort (insort n (sort lf3))).
Lemma candidate_53: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (insort n (sort (sort lf3))).
Lemma candidate_54: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (sort (insort n lf3)).
Lemma candidate_55: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (insort n (sort lf3)).
Lemma candidate_56: forall (lf3 : lst) (n : natural), @eq lst (insort n lf3) (insort n lf3).
Lemma candidate_57: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3))   (match lf3 with | Cons y _ => andb (sorted lf3) (leq Zero y) | Nil => true end).
Lemma candidate_58: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (less n (Succ n)).
Lemma candidate_59: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted (sort lf3)).
Lemma candidate_60: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (eqn n n).
Lemma candidate_61: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted lf3).
Lemma candidate_62: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (true).
Lemma candidate_63: @eq bool true (true).
Lemma candidate_64: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_65: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_66: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort (sort x)))))).
Lemma candidate_67: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort x))))).
Lemma candidate_68: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort x)))).
Lemma candidate_69: forall (x : lst), @eq lst (sort x) (sort (sort (sort x))).
Lemma candidate_70: forall (x : lst), @eq lst (sort x) (sort (sort x)).
Lemma candidate_71: forall (x : lst), @eq lst (sort x) (sort x).
Lemma candidate_72: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x)))   (match sort x with | Cons y _ => andb (sorted (sort x)) (leq Zero y) | Nil => true end).
Lemma candidate_73: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (sorted (sort (sort x))).
Lemma candidate_74: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (less n (Succ n)).
Lemma candidate_75: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (sorted (sort x)).
Lemma candidate_76: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (eqn n n).
Lemma candidate_77: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (true).
Lemma candidate_78: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (insort n (sort (sort x)))).
Lemma candidate_79: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (sort (insort n x))).
Lemma candidate_80: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (insort n (sort x))).
Lemma candidate_81: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (insort n (sort (sort x))).
Lemma candidate_82: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (insort n x)).
Lemma candidate_83: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (insort n (sort x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 233 seconds
Duplicates removed: 38
Filtered by Quickchick: 14
Filtered by script: 8
Remaining: 23

Lemmas: 
Lemma candidate_70: forall (x : lst), @eq lst (sort x) (sort (sort x)).
Lemma candidate_69: forall (x : lst), @eq lst (sort x) (sort (sort (sort x))).
Lemma candidate_77: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (true).
Lemma candidate_28: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3)) (sorted lf3).
Lemma candidate_68: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort x)))).
Lemma candidate_82: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (insort n x)).
Lemma candidate_76: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (eqn n n).
Lemma candidate_11: forall (lf2 : lst), @eq bool (sorted lf2) (sorted (insort Zero lf2)).
Lemma candidate_67: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort x))))).
Lemma candidate_81: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (insort n (sort (sort x))).
Lemma candidate_80: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (insort n (sort x))).
Lemma candidate_79: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (sort (insort n x))).
Lemma candidate_75: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (sorted (sort x)).
Lemma candidate_74: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (less n (Succ n)).
Lemma candidate_66: forall (x : lst), @eq lst (sort x) (sort (sort (sort (sort (sort (sort x)))))).
Lemma candidate_78: forall (n : natural) (x : lst), @eq lst (insort n (sort x)) (sort (insort n (sort (sort x)))).
Lemma candidate_73: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x))) (sorted (sort (sort x))).
Lemma candidate_2: forall (lf3 : lst) (n : natural) (lf4 : bool), forall _ : @eq bool (sorted lf3) lf4, @eq bool (sorted (insort n lf3)) lf4.
Lemma candidate_3: forall (lf3 : lst) (n : natural), forall _ : @eq bool (sorted lf3) true, @eq bool (sorted (insort n lf3)) true.
Lemma candidate_4: forall (n : natural) (lf4 : bool) (x : lst), forall _ : @eq bool (sorted (sort x)) lf4, @eq bool (sorted (insort n (sort x))) lf4.
Lemma candidate_12: forall (lf2 : lst), @eq bool (sorted lf2)   (match lf2 with | Cons y _ => andb (sorted lf2) (leq Zero y) | Nil => true end).
Lemma candidate_24: forall (lf3 : lst) (n : natural), @eq bool (sorted (insort n lf3))   (match lf3 with | Cons y _ => andb (sorted lf3) (leq Zero y) | Nil => true end).
Lemma candidate_72: forall (n : natural) (x : lst), @eq bool (sorted (insort n (sort x)))   (match sort x with | Cons y _ => andb (sorted (sort x)) (leq Zero y) | Nil => true end).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal6_theorem0_63_len_rev

Number of Lemmas: 515
Number of Lemmas (after duplicates removed): 116
Number of Lemmas (after QuickChick used to filter): 104
* Number of Candidate Lemmas: 91

Time until ranking: 987
Time to complete: 4604

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 0


Category 3 (provable):
Count = 14

Lemma candidate_68: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_35: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_209: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_34: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_73: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_67: forall (lf2 : natural), @eq natural (plus (plus lf2 Zero) Zero) lf2.
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_72: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_379: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_66: forall (lf2 : natural), @eq natural (plus (plus (plus lf2 Zero) Zero) Zero) lf2.
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_102: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) (plus lf5 Zero)) (plus (len x) lf5).
Lemma candidate_24: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) (plus lf5 Zero)).

Category 3 (not provable):
Count = 77

Lemma candidate_36: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_20: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_205: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_74: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_208: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_33: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_19: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_17: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_81: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 lf6) (plus lf6 lf5).
Lemma candidate_11: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 lf6).
Lemma candidate_210: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_18: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_71: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_32: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_16: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_381: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_378: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_203: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_201: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_134: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) lf6) (plus lf6 (len y)).
Lemma candidate_105: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len x)) (plus (len x) lf5).
Lemma candidate_70: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_42: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) lf6).
Lemma candidate_27: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len x)).
Lemma candidate_382: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_380: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_202: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_79: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 (plus lf6 Zero)) (plus lf6 lf5).
Lemma candidate_78: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 (plus lf5 Zero)) (plus lf6 lf5).
Lemma candidate_77: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf5 lf6) Zero) (plus lf6 lf5).
Lemma candidate_76: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf6 lf5) Zero) (plus lf6 lf5).
Lemma candidate_9: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 (plus lf6 Zero)).
Lemma candidate_8: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 (plus lf5 Zero)).
Lemma candidate_7: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf5 lf6) Zero).
Lemma candidate_6: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf6 lf5) Zero).
Lemma candidate_376: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_200: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (plus (len x) (len y)).
Lemma candidate_164: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_133: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len (rev y))) (plus lf6 (len y)).
Lemma candidate_130: forall (y : lst) (lf6 : natural), @eq natural (plus (len (rev y)) lf6) (plus lf6 (len y)).
Lemma candidate_103: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev x))) (plus (len x) lf5).
Lemma candidate_100: forall (x : lst) (lf5 : natural), @eq natural (plus (len (rev x)) lf5) (plus (len x) lf5).
Lemma candidate_65: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_64: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_41: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len (rev y))).
Lemma candidate_38: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len (rev y)) lf6).
Lemma candidate_25: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len (rev x))).
Lemma candidate_22: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len (rev x)) lf5).
Lemma candidate_207: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_206: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (plus (len y) (len x)) (plus (len x) (len y)).
Lemma candidate_61: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_371: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_370: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_374: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_367: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend y (rev x))) (plus (len x) (len y)).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x (rev y))) (plus (len x) (len y)).
Lemma candidate_132: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) (plus lf6 Zero)) (plus lf6 (len y)).
Lemma candidate_131: forall (y : lst) (lf6 : natural), @eq natural (plus (plus lf6 (len y)) Zero) (plus lf6 (len y)).
Lemma candidate_101: forall (x : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len x)) Zero) (plus (len x) lf5).
Lemma candidate_63: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_62: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_40: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) (plus lf6 Zero)).
Lemma candidate_39: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (plus lf6 (len y)) Zero).
Lemma candidate_23: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (plus lf5 (len x)) Zero).
Lemma candidate_375: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_369: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_368: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_324: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (rev x))) (plus (len x) (len y)).
Lemma candidate_373: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_372: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_322: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x (rev (rev y))))) (plus (len x) (len y)).
Lemma candidate_323: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x (lfappend y Nil)))) (plus (len x) (len y)).
Lemma candidate_321: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (lfappend (rev x) Nil)))   (plus (len x) (len y)).
Lemma candidate_320: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (rev (lfappend x Nil))))   (plus (len x) (len y)).
File Information
- File name: goal6
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal6_theorem0_63_len_rev
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal6_theorem0_63_len_rev
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq natural (len (rev (lfappend x0 y0))) (plus (len x0) (len y0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (len (rev (lfappend x y))) (plus (len x) (len y))

* Hypothesis:
x : lst
y : lst

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst

* Terms:
len (rev (lfappend x y)) : natural
len y : natural
x : lst
len x : natural
@eq natural (len (rev (lfappend x y))) (plus (len x) (len y)) : Prop
rev (lfappend x y) : lst
lst : Set
y : lst
lfappend x y : lst
natural : Set
plus (len x) (len y) : natural

* Functions:
len  : forall _ : lst, natural
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev (lfappend x y)
lf1 : natural = len (rev (lfappend x y))
lf4 : lst = lfappend x y
lf5 : natural = len y
lf2 : natural = plus (len x) (len y)
lf6 : natural = len x

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj3: forall (lf6 : natural) (lf5 : natural) (lf1 : natural), @eq natural lf1 (plus lf6 lf5).
Lemma conj4: forall (lf5 : natural) (x : lst) (lf1 : natural), @eq natural lf1 (plus (len x) lf5).
Lemma conj7: forall (lf6 : natural) (lf1 : natural) (y : lst), @eq natural lf1 (plus lf6 (len y)).
Lemma conj8: forall (x : lst) (lf1 : natural) (y : lst), @eq natural lf1 (plus (len x) (len y)).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural (len lf3) lf2.
Lemma conj19: forall (lf6 : natural) (lf5 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf6 lf5).
Lemma conj20: forall (lf5 : natural) (x : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf5).
Lemma conj23: forall (lf6 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf6 (len y)).
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj49: forall (lf2 : natural) (lf4 : lst), @eq natural (len (rev lf4)) lf2.
Lemma conj51: forall (lf6 : natural) (lf5 : natural) (lf4 : lst), @eq natural (len (rev lf4)) (plus lf6 lf5).
Lemma conj52: forall (lf5 : natural) (x : lst) (lf4 : lst), @eq natural (len (rev lf4)) (plus (len x) lf5).
Lemma conj55: forall (lf6 : natural) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus lf6 (len y)).
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus (len x) (len y)).
Lemma conj57: forall (lf2 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) lf2.
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 lf5).
Lemma conj60: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) lf5).
Lemma conj63: forall (lf6 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 (len y)).
Lemma conj64: forall (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).


<---VALIDITY CHECKS--->
Time elapsed: 44 seconds
Valid:
Lemma conj64: forall (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).

Invalid:
Lemma conj63: forall (lf6 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 (len y)).
Lemma conj60: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 lf5).
Lemma conj57: forall (lf2 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) lf2.
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus (len x) (len y)).
Lemma conj55: forall (lf6 : natural) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus lf6 (len y)).
Lemma conj52: forall (lf5 : natural) (x : lst) (lf4 : lst), @eq natural (len (rev lf4)) (plus (len x) lf5).
Lemma conj51: forall (lf6 : natural) (lf5 : natural) (lf4 : lst), @eq natural (len (rev lf4)) (plus lf6 lf5).
Lemma conj49: forall (lf2 : natural) (lf4 : lst), @eq natural (len (rev lf4)) lf2.
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj23: forall (lf6 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf6 (len y)).
Lemma conj20: forall (lf5 : natural) (x : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf5).
Lemma conj19: forall (lf6 : natural) (lf5 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf6 lf5).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural (len lf3) lf2.
Lemma conj8: forall (x : lst) (lf1 : natural) (y : lst), @eq natural lf1 (plus (len x) (len y)).
Lemma conj7: forall (lf6 : natural) (lf1 : natural) (y : lst), @eq natural lf1 (plus lf6 (len y)).
Lemma conj4: forall (lf5 : natural) (x : lst) (lf1 : natural), @eq natural lf1 (plus (len x) lf5).
Lemma conj3: forall (lf6 : natural) (lf5 : natural) (lf1 : natural), @eq natural lf1 (plus lf6 lf5).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 44 seconds
Generalizations:
Lemma conj63: forall (lf6 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 (len y)).
Lemma conj60: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) lf5).
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 lf5).
Lemma conj57: forall (lf2 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) lf2.
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus (len x) (len y)).
Lemma conj55: forall (lf6 : natural) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus lf6 (len y)).
Lemma conj52: forall (lf5 : natural) (x : lst) (lf4 : lst), @eq natural (len (rev lf4)) (plus (len x) lf5).
Lemma conj51: forall (lf6 : natural) (lf5 : natural) (lf4 : lst), @eq natural (len (rev lf4)) (plus lf6 lf5).
Lemma conj49: forall (lf2 : natural) (lf4 : lst), @eq natural (len (rev lf4)) lf2.
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj23: forall (lf6 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf6 (len y)).
Lemma conj20: forall (lf5 : natural) (x : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf5).
Lemma conj19: forall (lf6 : natural) (lf5 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf6 lf5).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural (len lf3) lf2.
Lemma conj8: forall (x : lst) (lf1 : natural) (y : lst), @eq natural lf1 (plus (len x) (len y)).
Lemma conj7: forall (lf6 : natural) (lf1 : natural) (y : lst), @eq natural lf1 (plus lf6 (len y)).
Lemma conj4: forall (lf5 : natural) (x : lst) (lf1 : natural), @eq natural lf1 (plus (len x) lf5).
Lemma conj3: forall (lf6 : natural) (lf5 : natural) (lf1 : natural), @eq natural lf1 (plus lf6 lf5).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 76 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj3: forall (lf6 : natural) (lf5 : natural) (lf1 : natural), @eq natural lf1 (plus lf6 lf5).
Lemma conj4: forall (lf5 : natural) (x : lst) (lf1 : natural), @eq natural lf1 (plus (len x) lf5).
Lemma conj7: forall (lf6 : natural) (lf1 : natural) (y : lst), @eq natural lf1 (plus lf6 (len y)).
Lemma conj8: forall (x : lst) (lf1 : natural) (y : lst), @eq natural lf1 (plus (len x) (len y)).
Lemma conj17: forall (lf2 : natural) (lf3 : lst), @eq natural (len lf3) lf2.
Lemma conj19: forall (lf6 : natural) (lf5 : natural) (lf3 : lst), @eq natural (len lf3) (plus lf6 lf5).
Lemma conj20: forall (lf5 : natural) (x : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) lf5).
Lemma conj23: forall (lf6 : natural) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus lf6 (len y)).
Lemma conj24: forall (x : lst) (y : lst) (lf3 : lst), @eq natural (len lf3) (plus (len x) (len y)).
Lemma conj49: forall (lf2 : natural) (lf4 : lst), @eq natural (len (rev lf4)) lf2.
Lemma conj51: forall (lf6 : natural) (lf5 : natural) (lf4 : lst), @eq natural (len (rev lf4)) (plus lf6 lf5).
Lemma conj52: forall (lf5 : natural) (x : lst) (lf4 : lst), @eq natural (len (rev lf4)) (plus (len x) lf5).
Lemma conj55: forall (lf6 : natural) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus lf6 (len y)).
Lemma conj56: forall (x : lst) (lf4 : lst) (y : lst), @eq natural (len (rev lf4)) (plus (len x) (len y)).
Lemma conj57: forall (lf2 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) lf2.
Lemma conj59: forall (lf6 : natural) (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 lf5).
Lemma conj60: forall (lf5 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) lf5).
Lemma conj63: forall (lf6 : natural) (x : lst) (y : lst), @eq natural (len (rev (lfappend x y))) (plus lf6 (len y)).


<---CREATE SKETCHES--->
Time elapsed: 76 seconds
Sketches:
Sketch conj3_sketch0 : @eq natural lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq natural (plus lf6 lf5) (##hole##)
Sketch conj4_sketch0 : @eq natural lf1 (plus (##hole##) lf5)
Sketch conj4_sketch1 : @eq natural lf1 (##hole##)
Sketch conj4_term_sketch0 : @eq natural (len x) (##hole##)
Sketch conj4_term_sketch1 : @eq natural (plus (len x) lf5) (##hole##)
Sketch conj7_sketch0 : @eq natural lf1 (plus lf6 (##hole##))
Sketch conj7_sketch1 : @eq natural lf1 (##hole##)
Sketch conj7_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj7_term_sketch1 : @eq natural (plus lf6 (len y)) (##hole##)
Sketch conj8_sketch0 : @eq natural lf1 (plus (len x) (##hole##))
Sketch conj8_sketch1 : @eq natural lf1 (plus (##hole##) (len y))
Sketch conj8_sketch2 : @eq natural lf1 (##hole##)
Sketch conj8_term_sketch0 : @eq natural (len y) (##hole##)
Sketch conj8_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj8_term_sketch2 : @eq natural (plus (len x) (len y)) (##hole##)
Sketch conj17_sketch0 : @eq natural (##hole##) lf2
Sketch conj17_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_sketch0 : @eq natural (##hole##) (plus lf6 lf5)
Sketch conj19_sketch1 : @eq natural (len lf3) (##hole##)
Sketch conj19_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq natural (plus lf6 lf5) (##hole##)
Sketch conj20_sketch0 : @eq natural (##hole##) (plus (len x) lf5)
Sketch conj20_sketch1 : @eq natural (len lf3) (plus (##hole##) lf5)
Sketch conj20_sketch2 : @eq natural (len lf3) (##hole##)
Sketch conj20_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj20_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj20_term_sketch2 : @eq natural (plus (len x) lf5) (##hole##)
Sketch conj23_sketch0 : @eq natural (##hole##) (plus lf6 (len y))
Sketch conj23_sketch1 : @eq natural (len lf3) (plus lf6 (##hole##))
Sketch conj23_sketch2 : @eq natural (len lf3) (##hole##)
Sketch conj23_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj23_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj23_term_sketch2 : @eq natural (plus lf6 (len y)) (##hole##)
Sketch conj24_sketch0 : @eq natural (##hole##) (plus (len x) (len y))
Sketch conj24_sketch1 : @eq natural (len lf3) (plus (len x) (##hole##))
Sketch conj24_sketch2 : @eq natural (len lf3) (plus (##hole##) (len y))
Sketch conj24_sketch3 : @eq natural (len lf3) (##hole##)
Sketch conj24_term_sketch0 : @eq natural (len lf3) (##hole##)
Sketch conj24_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj24_term_sketch2 : @eq natural (len x) (##hole##)
Sketch conj24_term_sketch3 : @eq natural (plus (len x) (len y)) (##hole##)
Sketch conj49_sketch0 : @eq natural (##hole##) lf2
Sketch conj49_sketch1 : @eq natural (len (##hole##)) lf2
Sketch conj49_term_sketch0 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj49_term_sketch1 : @eq lst (rev lf4) (##hole##)
Sketch conj51_sketch0 : @eq natural (##hole##) (plus lf6 lf5)
Sketch conj51_sketch1 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj51_sketch2 : @eq natural (len (##hole##)) (plus lf6 lf5)
Sketch conj51_term_sketch0 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj51_term_sketch1 : @eq natural (plus lf6 lf5) (##hole##)
Sketch conj51_term_sketch2 : @eq lst (rev lf4) (##hole##)
Sketch conj52_sketch0 : @eq natural (##hole##) (plus (len x) lf5)
Sketch conj52_sketch1 : @eq natural (len (rev lf4)) (plus (##hole##) lf5)
Sketch conj52_sketch2 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj52_sketch3 : @eq natural (len (##hole##)) (plus (len x) lf5)
Sketch conj52_term_sketch0 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj52_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj52_term_sketch2 : @eq natural (plus (len x) lf5) (##hole##)
Sketch conj52_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj55_sketch0 : @eq natural (##hole##) (plus lf6 (len y))
Sketch conj55_sketch1 : @eq natural (len (rev lf4)) (plus lf6 (##hole##))
Sketch conj55_sketch2 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj55_sketch3 : @eq natural (len (##hole##)) (plus lf6 (len y))
Sketch conj55_term_sketch0 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj55_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj55_term_sketch2 : @eq natural (plus lf6 (len y)) (##hole##)
Sketch conj55_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj56_sketch0 : @eq natural (##hole##) (plus (len x) (len y))
Sketch conj56_sketch1 : @eq natural (len (rev lf4)) (plus (len x) (##hole##))
Sketch conj56_sketch2 : @eq natural (len (rev lf4)) (plus (##hole##) (len y))
Sketch conj56_sketch3 : @eq natural (len (##hole##)) (plus (len x) (len y))
Sketch conj56_sketch4 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj56_term_sketch0 : @eq natural (len (rev lf4)) (##hole##)
Sketch conj56_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj56_term_sketch2 : @eq natural (len x) (##hole##)
Sketch conj56_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj56_term_sketch4 : @eq natural (plus (len x) (len y)) (##hole##)
Sketch conj57_sketch0 : @eq natural (##hole##) lf2
Sketch conj57_sketch1 : @eq natural (len (##hole##)) lf2
Sketch conj57_sketch2 : @eq natural (len (rev (##hole##))) lf2
Sketch conj57_term_sketch0 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj57_term_sketch1 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj57_term_sketch2 : @eq lst (lfappend x y) (##hole##)
Sketch conj59_sketch0 : @eq natural (##hole##) (plus lf6 lf5)
Sketch conj59_sketch1 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj59_sketch2 : @eq natural (len (##hole##)) (plus lf6 lf5)
Sketch conj59_sketch3 : @eq natural (len (rev (##hole##))) (plus lf6 lf5)
Sketch conj59_term_sketch0 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (plus lf6 lf5) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj59_term_sketch3 : @eq lst (lfappend x y) (##hole##)
Sketch conj60_sketch0 : @eq natural (##hole##) (plus (len x) lf5)
Sketch conj60_sketch1 : @eq natural (len (rev (lfappend x y))) (plus (##hole##) lf5)
Sketch conj60_sketch2 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj60_sketch3 : @eq natural (len (##hole##)) (plus (len x) lf5)
Sketch conj60_sketch4 : @eq natural (len (rev (##hole##))) (plus (len x) lf5)
Sketch conj60_term_sketch0 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (len x) (##hole##)
Sketch conj60_term_sketch2 : @eq natural (plus (len x) lf5) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj60_term_sketch4 : @eq lst (lfappend x y) (##hole##)
Sketch conj63_sketch0 : @eq natural (##hole##) (plus lf6 (len y))
Sketch conj63_sketch1 : @eq natural (len (rev (lfappend x y))) (plus lf6 (##hole##))
Sketch conj63_sketch2 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj63_sketch3 : @eq natural (len (##hole##)) (plus lf6 (len y))
Sketch conj63_sketch4 : @eq natural (len (rev (##hole##))) (plus lf6 (len y))
Sketch conj63_term_sketch0 : @eq natural (len (rev (lfappend x y))) (##hole##)
Sketch conj63_term_sketch1 : @eq natural (len y) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (plus lf6 (len y)) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (rev (lfappend x y)) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend x y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 297 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_19
Sketch conj7_sketch1 --> Problem  synth_1
Sketch conj52_sketch1 --> Problem  synth_22
Sketch conj60_term_sketch1 --> Problem  synth_4
Sketch conj59_term_sketch2 --> Problem  synth_28
Sketch conj63_sketch4 --> Problem  synth_35
Sketch conj23_sketch0 --> Problem  synth_8
Sketch conj57_term_sketch2 --> Problem  synth_30
Sketch conj60_term_sketch4 --> Problem  synth_30
Sketch conj59_term_sketch1 --> Problem  synth_2
Sketch conj8_sketch1 --> Problem  synth_10
Sketch conj59_sketch1 --> Problem  synth_11
Sketch conj7_sketch0 --> Problem  synth_6
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj60_sketch0 --> Problem  synth_5
Sketch conj20_term_sketch2 --> Problem  synth_5
Sketch conj56_sketch4 --> Problem  synth_19
Sketch conj24_sketch2 --> Problem  synth_17
Sketch conj24_sketch1 --> Problem  synth_16
Sketch conj17_term_sketch0 --> Problem  synth_13
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj63_term_sketch0 --> Problem  synth_11
Sketch conj56_term_sketch0 --> Problem  synth_19
Sketch conj55_sketch3 --> Problem  synth_25
Sketch conj24_sketch0 --> Problem  synth_11
Sketch conj7_term_sketch1 --> Problem  synth_8
Sketch conj8_term_sketch1 --> Problem  synth_4
Sketch conj60_term_sketch3 --> Problem  synth_28
Sketch conj23_sketch1 --> Problem  synth_15
Sketch conj60_term_sketch2 --> Problem  synth_5
Sketch conj60_sketch1 --> Problem  synth_32
Sketch conj55_sketch1 --> Problem  synth_24
Sketch conj60_sketch2 --> Problem  synth_11
Sketch conj59_sketch3 --> Problem  synth_31
Sketch conj63_term_sketch4 --> Problem  synth_30
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj59_sketch2 --> Problem  synth_21
Sketch conj52_term_sketch1 --> Problem  synth_4
Sketch conj23_term_sketch2 --> Problem  synth_8
Sketch conj20_sketch0 --> Problem  synth_5
Sketch conj24_term_sketch0 --> Problem  synth_13
Sketch conj7_term_sketch0 --> Problem  synth_7
Sketch conj20_term_sketch0 --> Problem  synth_13
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj57_term_sketch0 --> Problem  synth_11
Sketch conj51_term_sketch2 --> Problem  synth_20
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj60_term_sketch0 --> Problem  synth_11
Sketch conj52_term_sketch2 --> Problem  synth_5
Sketch conj8_sketch0 --> Problem  synth_9
Sketch conj60_sketch3 --> Problem  synth_23
Sketch conj51_sketch0 --> Problem  synth_2
Sketch conj23_term_sketch0 --> Problem  synth_13
Sketch conj56_term_sketch3 --> Problem  synth_20
Sketch conj19_term_sketch0 --> Problem  synth_13
Sketch conj8_term_sketch2 --> Problem  synth_11
Sketch conj24_term_sketch1 --> Problem  synth_7
Sketch conj52_term_sketch3 --> Problem  synth_20
Sketch conj63_term_sketch1 --> Problem  synth_7
Sketch conj24_sketch3 --> Problem  synth_13
Sketch conj57_sketch2 --> Problem  synth_29
Sketch conj51_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch0 --> Problem  synth_19
Sketch conj56_sketch3 --> Problem  synth_28
Sketch conj55_term_sketch0 --> Problem  synth_19
Sketch conj52_term_sketch0 --> Problem  synth_19
Sketch conj23_sketch2 --> Problem  synth_13
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_12
Sketch conj49_sketch0 --> Problem  synth_12
Sketch conj63_sketch2 --> Problem  synth_11
Sketch conj20_sketch2 --> Problem  synth_13
Sketch conj55_term_sketch1 --> Problem  synth_7
Sketch conj52_sketch0 --> Problem  synth_5
Sketch conj56_term_sketch4 --> Problem  synth_11
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj59_sketch0 --> Problem  synth_2
Sketch conj49_term_sketch1 --> Problem  synth_20
Sketch conj8_sketch2 --> Problem  synth_1
Sketch conj23_term_sketch1 --> Problem  synth_7
Sketch conj20_sketch1 --> Problem  synth_14
Sketch conj63_term_sketch3 --> Problem  synth_28
Sketch conj63_sketch0 --> Problem  synth_8
Sketch conj55_term_sketch3 --> Problem  synth_20
Sketch conj63_sketch3 --> Problem  synth_25
Sketch conj59_term_sketch0 --> Problem  synth_11
Sketch conj52_sketch3 --> Problem  synth_23
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj59_term_sketch3 --> Problem  synth_30
Sketch conj51_sketch1 --> Problem  synth_19
Sketch conj55_sketch0 --> Problem  synth_8
Sketch conj63_sketch1 --> Problem  synth_34
Sketch conj56_term_sketch2 --> Problem  synth_4
Sketch conj57_sketch1 --> Problem  synth_18
Sketch conj20_term_sketch1 --> Problem  synth_4
Sketch conj56_term_sketch1 --> Problem  synth_7
Sketch conj56_sketch2 --> Problem  synth_27
Sketch conj19_sketch1 --> Problem  synth_13
Sketch conj57_term_sketch1 --> Problem  synth_28
Sketch conj24_term_sketch2 --> Problem  synth_4
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj60_sketch4 --> Problem  synth_33
Sketch conj56_sketch0 --> Problem  synth_11
Sketch conj57_sketch0 --> Problem  synth_12
Sketch conj56_sketch1 --> Problem  synth_26
Sketch conj24_term_sketch3 --> Problem  synth_11
Sketch conj55_term_sketch2 --> Problem  synth_8
Sketch conj51_sketch2 --> Problem  synth_21
Sketch conj63_term_sketch2 --> Problem  synth_8
Sketch conj55_sketch2 --> Problem  synth_19
Sketch conj49_sketch1 --> Problem  synth_18
Sketch conj49_term_sketch0 --> Problem  synth_19


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 633 seconds

Problem: synth_28
 lfappend (rev y) (rev (lfappend x Nil))
 lfappend (rev y) (lfappend (rev x) Nil)
 rev (lfappend x (rev (rev y)))
 rev (lfappend x (lfappend y Nil))
 lfappend (rev y) (rev x)
 rev (lfappend x y)

Problem: synth_17

Problem: synth_29

Problem: synth_26

Problem: synth_9

Problem: synth_30
 lfappend (rev (rev x)) y
 lfappend (lfappend x Nil) y
 lfappend (lfappend x y) Nil
 lfappend x (rev (rev y))
 lfappend x (lfappend y Nil)
 lfappend x y

Problem: synth_11
 plus (len x) (len y)
 plus (len y) (len x)
 len (lfappend x (rev y))
 len (lfappend y (rev x))
 len (lfappend x y)
 len (lfappend y x)

Problem: synth_1
 plus (plus (plus lf1 Zero) Zero) Zero
 plus (plus lf1 Zero) Zero
 plus lf1 Zero
 lf1

Problem: synth_15

Problem: synth_31

Problem: synth_14

Problem: synth_8
 plus (len (rev y)) lf6
 plus (plus lf6 (len y)) Zero
 plus (len y) (plus lf6 Zero)
 plus lf6 (len (rev y))
 plus (len y) lf6
 plus lf6 (len y)

Problem: synth_34
 plus (len (rev y)) Zero
 len (rev (rev y))
 len (lfappend y Nil)
 plus (len y) Zero
 len (rev y)
 len y

Problem: synth_12
 plus (plus (plus lf2 Zero) Zero) Zero
 plus (plus lf2 Zero) Zero
 plus lf2 Zero
 lf2

Problem: synth_5
 plus (len (rev x)) lf5
 plus (plus lf5 (len x)) Zero
 plus (len x) (plus lf5 Zero)
 plus lf5 (len (rev x))
 plus (len x) lf5
 plus lf5 (len x)

Problem: synth_2
 plus (plus lf6 lf5) Zero
 plus (plus lf5 lf6) Zero
 plus lf6 (plus lf5 Zero)
 plus lf5 (plus lf6 Zero)
 plus lf6 lf5
 plus lf5 lf6

Problem: synth_22

Problem: synth_20
 lfappend (rev (lfappend lf4 Nil)) Nil
 lfappend (lfappend (rev lf4) Nil) Nil
 rev (rev (rev lf4))
 rev (lfappend lf4 Nil)
 lfappend (rev lf4) Nil
 rev lf4

Problem: synth_18

Problem: synth_21

Problem: synth_25

Problem: synth_13
 plus (len (rev lf3)) Zero
 len (rev (rev lf3))
 len (lfappend lf3 Nil)
 plus (len lf3) Zero
 len (rev lf3)
 len lf3

Problem: synth_6

Problem: synth_7
 plus (len (rev y)) Zero
 len (rev (rev y))
 len (lfappend y Nil)
 plus (len y) Zero
 len (rev y)
 len y

Problem: synth_4
 plus (len (rev x)) Zero
 len (rev (rev x))
 len (lfappend x Nil)
 plus (len x) Zero
 len (rev x)
 len x

Problem: synth_23

Problem: synth_27

Problem: synth_16

Problem: synth_19
 plus (len (rev lf4)) Zero
 len (rev (rev lf4))
 len (lfappend lf4 Nil)
 plus (len lf4) Zero
 len (rev lf4)
 len lf4

Problem: synth_10

Problem: synth_33

Problem: synth_24

Problem: synth_3

Problem: synth_32
 plus (len (rev x)) Zero
 len (rev (rev x))
 len (lfappend x Nil)
 plus (len x) Zero
 len (rev x)
 len x

Problem: synth_35

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 634 seconds
Lemmas:
Lemma candidate_1: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_5: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_6: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf6 lf5) Zero).
Lemma candidate_7: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf5 lf6) Zero).
Lemma candidate_8: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 (plus lf5 Zero)).
Lemma candidate_9: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 (plus lf6 Zero)).
Lemma candidate_10: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_11: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 lf6).
Lemma candidate_12: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_13: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_14: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_15: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_16: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_17: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_18: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_19: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_20: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_21: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_22: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len (rev x)) lf5).
Lemma candidate_23: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (plus lf5 (len x)) Zero).
Lemma candidate_24: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) (plus lf5 Zero)).
Lemma candidate_25: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len (rev x))).
Lemma candidate_26: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_27: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len x)).
Lemma candidate_28: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_29: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_30: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_31: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_32: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_33: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_34: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_35: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_36: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_37: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_38: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len (rev y)) lf6).
Lemma candidate_39: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (plus lf6 (len y)) Zero).
Lemma candidate_40: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) (plus lf6 Zero)).
Lemma candidate_41: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len (rev y))).
Lemma candidate_42: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) lf6).
Lemma candidate_43: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_44: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_45: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_46: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_47: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_48: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_49: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_50: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_51: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_52: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_53: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_54: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_55: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_56: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_57: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_58: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_59: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_60: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_61: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_62: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_63: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_64: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_65: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_66: forall (lf2 : natural), @eq natural (plus (plus (plus lf2 Zero) Zero) Zero) lf2.
Lemma candidate_67: forall (lf2 : natural), @eq natural (plus (plus lf2 Zero) Zero) lf2.
Lemma candidate_68: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_69: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_70: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_71: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_72: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_73: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_74: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_75: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_76: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf6 lf5) Zero) (plus lf6 lf5).
Lemma candidate_77: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf5 lf6) Zero) (plus lf6 lf5).
Lemma candidate_78: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 (plus lf5 Zero)) (plus lf6 lf5).
Lemma candidate_79: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 (plus lf6 Zero)) (plus lf6 lf5).
Lemma candidate_80: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_81: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 lf6) (plus lf6 lf5).
Lemma candidate_82: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_83: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_84: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_85: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_86: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_87: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_88: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_89: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_90: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_91: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_92: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_93: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_94: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf6 lf5) Zero).
Lemma candidate_95: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf5 lf6) Zero).
Lemma candidate_96: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 (plus lf5 Zero)).
Lemma candidate_97: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 (plus lf6 Zero)).
Lemma candidate_98: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_99: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 lf6).
Lemma candidate_100: forall (x : lst) (lf5 : natural), @eq natural (plus (len (rev x)) lf5) (plus (len x) lf5).
Lemma candidate_101: forall (x : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len x)) Zero) (plus (len x) lf5).
Lemma candidate_102: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) (plus lf5 Zero)) (plus (len x) lf5).
Lemma candidate_103: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev x))) (plus (len x) lf5).
Lemma candidate_104: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_105: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len x)) (plus (len x) lf5).
Lemma candidate_106: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_107: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_108: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_109: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_110: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_111: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_112: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_113: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_114: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_115: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_116: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_117: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_118: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_119: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_120: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_121: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_122: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_123: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_124: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len (rev x)) lf5).
Lemma candidate_125: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (plus lf5 (len x)) Zero).
Lemma candidate_126: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) (plus lf5 Zero)).
Lemma candidate_127: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len (rev x))).
Lemma candidate_128: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_129: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len x)).
Lemma candidate_130: forall (y : lst) (lf6 : natural), @eq natural (plus (len (rev y)) lf6) (plus lf6 (len y)).
Lemma candidate_131: forall (y : lst) (lf6 : natural), @eq natural (plus (plus lf6 (len y)) Zero) (plus lf6 (len y)).
Lemma candidate_132: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) (plus lf6 Zero)) (plus lf6 (len y)).
Lemma candidate_133: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len (rev y))) (plus lf6 (len y)).
Lemma candidate_134: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) lf6) (plus lf6 (len y)).
Lemma candidate_135: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_136: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_137: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_138: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_139: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_140: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_141: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_142: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_143: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_144: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_145: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_146: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_147: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_148: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_149: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_150: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_151: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_152: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_153: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_154: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len (rev y)) lf6).
Lemma candidate_155: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (plus lf6 (len y)) Zero).
Lemma candidate_156: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) (plus lf6 Zero)).
Lemma candidate_157: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len (rev y))).
Lemma candidate_158: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) lf6).
Lemma candidate_159: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_160: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (plus (len y) (len x)) (plus (len x) (len y)).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x (rev y))) (plus (len x) (len y)).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend y (rev x))) (plus (len x) (len y)).
Lemma candidate_164: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (plus (len x) (len y)).
Lemma candidate_166: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_167: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_168: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_169: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_170: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_171: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_172: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_173: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_174: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_175: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_176: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_177: forall (lf3 : lst), @eq natural (len lf3) (len lf3).
Lemma candidate_178: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_179: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_180: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_181: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_182: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_183: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_184: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_185: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_186: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_187: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_188: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_189: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_190: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_191: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_192: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_193: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_194: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_195: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_196: forall (lf2 : natural), @eq natural (plus (plus (plus lf2 Zero) Zero) Zero) lf2.
Lemma candidate_197: forall (lf2 : natural), @eq natural (plus (plus lf2 Zero) Zero) lf2.
Lemma candidate_198: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_199: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_200: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_201: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_202: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_203: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_204: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_205: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_206: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_207: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_208: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_209: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_210: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_211: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_212: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf6 lf5) Zero) (plus lf6 lf5).
Lemma candidate_213: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf5 lf6) Zero) (plus lf6 lf5).
Lemma candidate_214: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 (plus lf5 Zero)) (plus lf6 lf5).
Lemma candidate_215: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 (plus lf6 Zero)) (plus lf6 lf5).
Lemma candidate_216: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_217: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 lf6) (plus lf6 lf5).
Lemma candidate_218: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_219: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_220: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_221: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_222: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_223: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_224: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_225: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_226: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_227: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_228: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_229: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_230: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf6 lf5) Zero).
Lemma candidate_231: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf5 lf6) Zero).
Lemma candidate_232: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 (plus lf5 Zero)).
Lemma candidate_233: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 (plus lf6 Zero)).
Lemma candidate_234: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_235: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 lf6).
Lemma candidate_236: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_237: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_238: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_239: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_240: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_241: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_242: forall (x : lst) (lf5 : natural), @eq natural (plus (len (rev x)) lf5) (plus (len x) lf5).
Lemma candidate_243: forall (x : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len x)) Zero) (plus (len x) lf5).
Lemma candidate_244: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) (plus lf5 Zero)) (plus (len x) lf5).
Lemma candidate_245: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev x))) (plus (len x) lf5).
Lemma candidate_246: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_247: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len x)) (plus (len x) lf5).
Lemma candidate_248: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_249: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_250: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_251: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_252: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_253: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_254: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_255: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_256: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_257: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_258: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_259: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_260: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_261: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_262: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_263: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_264: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_265: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_266: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len (rev x)) lf5).
Lemma candidate_267: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (plus lf5 (len x)) Zero).
Lemma candidate_268: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) (plus lf5 Zero)).
Lemma candidate_269: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len (rev x))).
Lemma candidate_270: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_271: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len x)).
Lemma candidate_272: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_273: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_274: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_275: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_276: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_277: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_278: forall (y : lst) (lf6 : natural), @eq natural (plus (len (rev y)) lf6) (plus lf6 (len y)).
Lemma candidate_279: forall (y : lst) (lf6 : natural), @eq natural (plus (plus lf6 (len y)) Zero) (plus lf6 (len y)).
Lemma candidate_280: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) (plus lf6 Zero)) (plus lf6 (len y)).
Lemma candidate_281: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len (rev y))) (plus lf6 (len y)).
Lemma candidate_282: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) lf6) (plus lf6 (len y)).
Lemma candidate_283: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_284: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_285: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_286: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_287: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_288: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_289: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_290: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_291: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_292: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_293: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_294: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_295: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_296: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_297: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_298: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_299: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_300: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_301: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_302: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len (rev y)) lf6).
Lemma candidate_303: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (plus lf6 (len y)) Zero).
Lemma candidate_304: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) (plus lf6 Zero)).
Lemma candidate_305: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len (rev y))).
Lemma candidate_306: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) lf6).
Lemma candidate_307: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_308: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_309: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_310: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_311: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_312: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_313: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_314: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_315: forall (y : lst) (x : lst), @eq natural (plus (len y) (len x)) (plus (len x) (len y)).
Lemma candidate_316: forall (y : lst) (x : lst), @eq natural (len (lfappend x (rev y))) (plus (len x) (len y)).
Lemma candidate_317: forall (y : lst) (x : lst), @eq natural (len (lfappend y (rev x))) (plus (len x) (len y)).
Lemma candidate_318: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_319: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (plus (len x) (len y)).
Lemma candidate_320: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (rev (lfappend x Nil))))   (plus (len x) (len y)).
Lemma candidate_321: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (lfappend (rev x) Nil)))   (plus (len x) (len y)).
Lemma candidate_322: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x (rev (rev y))))) (plus (len x) (len y)).
Lemma candidate_323: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x (lfappend y Nil)))) (plus (len x) (len y)).
Lemma candidate_324: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (rev x))) (plus (len x) (len y)).
Lemma candidate_325: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_326: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_327: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_328: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_329: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_330: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_331: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_332: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_333: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_334: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_335: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_336: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev lf4)).
Lemma candidate_337: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_338: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_339: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_340: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_341: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_342: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_343: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_344: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_345: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_346: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_347: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_348: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_349: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_350: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_351: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_352: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_353: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_354: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_355: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_356: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len x) (len y)).
Lemma candidate_357: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_358: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_359: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_360: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_361: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_362: forall (lf2 : natural), @eq natural (plus (plus (plus lf2 Zero) Zero) Zero) lf2.
Lemma candidate_363: forall (lf2 : natural), @eq natural (plus (plus lf2 Zero) Zero) lf2.
Lemma candidate_364: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_365: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_366: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_367: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_368: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_369: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_370: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_371: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_372: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_373: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_374: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_375: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_376: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_377: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_378: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_379: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_380: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_381: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_382: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_383: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_384: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf6 lf5) Zero) (plus lf6 lf5).
Lemma candidate_385: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf5 lf6) Zero) (plus lf6 lf5).
Lemma candidate_386: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 (plus lf5 Zero)) (plus lf6 lf5).
Lemma candidate_387: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 (plus lf6 Zero)) (plus lf6 lf5).
Lemma candidate_388: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_389: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 lf6) (plus lf6 lf5).
Lemma candidate_390: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_391: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_392: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_393: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_394: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_395: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_396: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_397: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_398: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_399: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_400: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_401: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_402: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf6 lf5) Zero).
Lemma candidate_403: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf5 lf6) Zero).
Lemma candidate_404: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 (plus lf5 Zero)).
Lemma candidate_405: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 (plus lf6 Zero)).
Lemma candidate_406: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 lf5).
Lemma candidate_407: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 lf6).
Lemma candidate_408: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_409: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_410: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_411: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_412: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_413: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_414: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_415: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_416: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_417: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_418: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_419: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_420: forall (x : lst) (lf5 : natural), @eq natural (plus (len (rev x)) lf5) (plus (len x) lf5).
Lemma candidate_421: forall (x : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len x)) Zero) (plus (len x) lf5).
Lemma candidate_422: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) (plus lf5 Zero)) (plus (len x) lf5).
Lemma candidate_423: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev x))) (plus (len x) lf5).
Lemma candidate_424: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_425: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len x)) (plus (len x) lf5).
Lemma candidate_426: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (rev (lfappend x y))) (plus (plus (len (rev x)) Zero) lf5).
Lemma candidate_427: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (rev (lfappend x y))) (plus (len (rev (rev x))) lf5).
Lemma candidate_428: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (rev (lfappend x y))) (plus (len (lfappend x Nil)) lf5).
Lemma candidate_429: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (rev (lfappend x y))) (plus (plus (len x) Zero) lf5).
Lemma candidate_430: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (rev (lfappend x y))) (plus (len (rev x)) lf5).
Lemma candidate_431: forall (y : lst) (x : lst) (lf5 : natural), @eq natural (len (rev (lfappend x y))) (plus (len x) lf5).
Lemma candidate_432: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_433: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_434: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_435: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_436: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_437: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_438: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_439: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_440: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_441: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_442: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_443: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_444: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_445: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_446: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_447: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_448: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_449: forall (x : lst), @eq natural (len x) (len x).
Lemma candidate_450: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len (rev x)) lf5).
Lemma candidate_451: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (plus lf5 (len x)) Zero).
Lemma candidate_452: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) (plus lf5 Zero)).
Lemma candidate_453: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len (rev x))).
Lemma candidate_454: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) lf5).
Lemma candidate_455: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len x)).
Lemma candidate_456: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_457: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_458: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_459: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_460: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_461: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_462: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_463: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_464: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_465: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_466: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_467: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).
Lemma candidate_468: forall (y : lst) (lf6 : natural), @eq natural (plus (len (rev y)) lf6) (plus lf6 (len y)).
Lemma candidate_469: forall (y : lst) (lf6 : natural), @eq natural (plus (plus lf6 (len y)) Zero) (plus lf6 (len y)).
Lemma candidate_470: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) (plus lf6 Zero)) (plus lf6 (len y)).
Lemma candidate_471: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len (rev y))) (plus lf6 (len y)).
Lemma candidate_472: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) lf6) (plus lf6 (len y)).
Lemma candidate_473: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_474: forall (y : lst) (x : lst) (lf6 : natural), @eq natural (len (rev (lfappend x y))) (plus lf6 (plus (len (rev y)) Zero)).
Lemma candidate_475: forall (y : lst) (x : lst) (lf6 : natural), @eq natural (len (rev (lfappend x y))) (plus lf6 (len (rev (rev y)))).
Lemma candidate_476: forall (y : lst) (x : lst) (lf6 : natural), @eq natural (len (rev (lfappend x y))) (plus lf6 (len (lfappend y Nil))).
Lemma candidate_477: forall (y : lst) (x : lst) (lf6 : natural), @eq natural (len (rev (lfappend x y))) (plus lf6 (plus (len y) Zero)).
Lemma candidate_478: forall (y : lst) (x : lst) (lf6 : natural), @eq natural (len (rev (lfappend x y))) (plus lf6 (len (rev y))).
Lemma candidate_479: forall (y : lst) (x : lst) (lf6 : natural), @eq natural (len (rev (lfappend x y))) (plus lf6 (len y)).
Lemma candidate_480: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_481: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_482: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_483: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_484: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_485: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_486: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len x) (len y)).
Lemma candidate_487: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_488: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_489: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_490: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_491: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_492: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_493: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_494: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_495: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_496: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_497: forall (y : lst), @eq natural (len y) (len y).
Lemma candidate_498: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len (rev y)) lf6).
Lemma candidate_499: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (plus lf6 (len y)) Zero).
Lemma candidate_500: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) (plus lf6 Zero)).
Lemma candidate_501: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len (rev y))).
Lemma candidate_502: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) lf6).
Lemma candidate_503: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len y)).
Lemma candidate_504: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_505: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_506: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_507: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_508: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_509: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x y)).
Lemma candidate_510: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_511: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_512: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_513: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_514: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_515: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 985 seconds
Duplicates removed: 399
Filtered by Quickchick: 12
Filtered by script: 13
Remaining: 91

Lemmas: 
Lemma candidate_68: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_36: forall (y : lst), @eq natural (len y) (len (rev y)).
Lemma candidate_20: forall (x : lst), @eq natural (len x) (len (rev x)).
Lemma candidate_205: forall (lf4 : lst), @eq natural (len (rev lf4)) (len lf4).
Lemma candidate_74: forall (lf3 : lst), @eq natural (len lf3) (len (rev lf3)).
Lemma candidate_208: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_35: forall (y : lst), @eq natural (len y) (plus (len y) Zero).
Lemma candidate_33: forall (y : lst), @eq natural (len y) (len (rev (rev y))).
Lemma candidate_19: forall (x : lst), @eq natural (len x) (plus (len x) Zero).
Lemma candidate_17: forall (x : lst), @eq natural (len x) (len (rev (rev x))).
Lemma candidate_81: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 lf6) (plus lf6 lf5).
Lemma candidate_11: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 lf6).
Lemma candidate_210: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_209: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_34: forall (y : lst), @eq natural (len y) (len (lfappend y Nil)).
Lemma candidate_18: forall (x : lst), @eq natural (len x) (len (lfappend x Nil)).
Lemma candidate_73: forall (lf3 : lst), @eq natural (len lf3) (plus (len lf3) Zero).
Lemma candidate_71: forall (lf3 : lst), @eq natural (len lf3) (len (rev (rev lf3))).
Lemma candidate_67: forall (lf2 : natural), @eq natural (plus (plus lf2 Zero) Zero) lf2.
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus (plus lf1 Zero) Zero).
Lemma candidate_32: forall (y : lst), @eq natural (len y) (plus (len (rev y)) Zero).
Lemma candidate_16: forall (x : lst), @eq natural (len x) (plus (len (rev x)) Zero).
Lemma candidate_72: forall (lf3 : lst), @eq natural (len lf3) (len (lfappend lf3 Nil)).
Lemma candidate_381: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (rev (rev y))).
Lemma candidate_378: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (rev (rev x)) y).
Lemma candidate_203: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len lf4) Zero).
Lemma candidate_201: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (rev (rev lf4))).
Lemma candidate_134: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) lf6) (plus lf6 (len y)).
Lemma candidate_105: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len x)) (plus (len x) lf5).
Lemma candidate_70: forall (lf3 : lst), @eq natural (len lf3) (plus (len (rev lf3)) Zero).
Lemma candidate_42: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) lf6).
Lemma candidate_27: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len x)).
Lemma candidate_382: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend x (lfappend y Nil)).
Lemma candidate_380: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x y) Nil).
Lemma candidate_379: forall (y : lst) (x : lst), @eq lst (lfappend x y) (lfappend (lfappend x Nil) y).
Lemma candidate_202: forall (lf4 : lst), @eq natural (len (rev lf4)) (len (lfappend lf4 Nil)).
Lemma candidate_79: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf5 (plus lf6 Zero)) (plus lf6 lf5).
Lemma candidate_78: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 (plus lf5 Zero)) (plus lf6 lf5).
Lemma candidate_77: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf5 lf6) Zero) (plus lf6 lf5).
Lemma candidate_76: forall (lf5 : natural) (lf6 : natural), @eq natural (plus (plus lf6 lf5) Zero) (plus lf6 lf5).
Lemma candidate_9: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf5 (plus lf6 Zero)).
Lemma candidate_8: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus lf6 (plus lf5 Zero)).
Lemma candidate_7: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf5 lf6) Zero).
Lemma candidate_6: forall (lf5 : natural) (lf6 : natural), @eq natural (plus lf6 lf5) (plus (plus lf6 lf5) Zero).
Lemma candidate_376: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev x)).
Lemma candidate_200: forall (lf4 : lst), @eq natural (len (rev lf4)) (plus (len (rev lf4)) Zero).
Lemma candidate_165: forall (y : lst) (x : lst), @eq natural (len (lfappend y x)) (plus (len x) (len y)).
Lemma candidate_164: forall (y : lst) (x : lst), @eq natural (len (lfappend x y)) (plus (len x) (len y)).
Lemma candidate_133: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len (rev y))) (plus lf6 (len y)).
Lemma candidate_130: forall (y : lst) (lf6 : natural), @eq natural (plus (len (rev y)) lf6) (plus lf6 (len y)).
Lemma candidate_103: forall (x : lst) (lf5 : natural), @eq natural (plus lf5 (len (rev x))) (plus (len x) lf5).
Lemma candidate_100: forall (x : lst) (lf5 : natural), @eq natural (plus (len (rev x)) lf5) (plus (len x) lf5).
Lemma candidate_66: forall (lf2 : natural), @eq natural (plus (plus (plus lf2 Zero) Zero) Zero) lf2.
Lemma candidate_65: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y x)).
Lemma candidate_64: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x y)).
Lemma candidate_41: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus lf6 (len (rev y))).
Lemma candidate_38: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len (rev y)) lf6).
Lemma candidate_25: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus lf5 (len (rev x))).
Lemma candidate_22: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len (rev x)) lf5).
Lemma candidate_2: forall (lf1 : natural), @eq natural lf1 (plus (plus (plus lf1 Zero) Zero) Zero).
Lemma candidate_207: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (lfappend (rev lf4) Nil) Nil).
Lemma candidate_206: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev (lfappend lf4 Nil)) Nil).
Lemma candidate_161: forall (y : lst) (x : lst), @eq natural (plus (len y) (len x)) (plus (len x) (len y)).
Lemma candidate_61: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (plus (len y) (len x)).
Lemma candidate_371: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y x)).
Lemma candidate_370: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x y)).
Lemma candidate_374: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (rev (rev y)))).
Lemma candidate_367: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (plus (len y) (len x)).
Lemma candidate_163: forall (y : lst) (x : lst), @eq natural (len (lfappend y (rev x))) (plus (len x) (len y)).
Lemma candidate_162: forall (y : lst) (x : lst), @eq natural (len (lfappend x (rev y))) (plus (len x) (len y)).
Lemma candidate_132: forall (y : lst) (lf6 : natural), @eq natural (plus (len y) (plus lf6 Zero)) (plus lf6 (len y)).
Lemma candidate_131: forall (y : lst) (lf6 : natural), @eq natural (plus (plus lf6 (len y)) Zero) (plus lf6 (len y)).
Lemma candidate_102: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) (plus lf5 Zero)) (plus (len x) lf5).
Lemma candidate_101: forall (x : lst) (lf5 : natural), @eq natural (plus (plus lf5 (len x)) Zero) (plus (len x) lf5).
Lemma candidate_63: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend y (rev x))).
Lemma candidate_62: forall (y : lst) (x : lst), @eq natural (plus (len x) (len y)) (len (lfappend x (rev y))).
Lemma candidate_40: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (len y) (plus lf6 Zero)).
Lemma candidate_39: forall (y : lst) (lf6 : natural), @eq natural (plus lf6 (len y)) (plus (plus lf6 (len y)) Zero).
Lemma candidate_24: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (len x) (plus lf5 Zero)).
Lemma candidate_23: forall (x : lst) (lf5 : natural), @eq natural (plus (len x) lf5) (plus (plus lf5 (len x)) Zero).
Lemma candidate_375: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (rev (lfappend x (lfappend y Nil))).
Lemma candidate_369: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend y (rev x))).
Lemma candidate_368: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x y))) (len (lfappend x (rev y))).
Lemma candidate_324: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (rev x))) (plus (len x) (len y)).
Lemma candidate_373: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (lfappend (rev x) Nil)).
Lemma candidate_372: forall (y : lst) (x : lst), @eq lst (rev (lfappend x y)) (lfappend (rev y) (rev (lfappend x Nil))).
Lemma candidate_322: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x (rev (rev y))))) (plus (len x) (len y)).
Lemma candidate_323: forall (y : lst) (x : lst), @eq natural (len (rev (lfappend x (lfappend y Nil)))) (plus (len x) (len y)).
Lemma candidate_321: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (lfappend (rev x) Nil)))   (plus (len x) (len y)).
Lemma candidate_320: forall (y : lst) (x : lst), @eq natural (len (lfappend (rev y) (rev (lfappend x Nil))))   (plus (len x) (len y)).
File Information
- File name: goal11
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal11_theorem0_56_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal11_theorem0_56_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 : lst,
@eq lst (rev (lfappend (rev x0) (rev y0))) (lfappend y0 x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x))

* Hypothesis:
IHx : forall y0 : lst, @eq lst (rev (lfappend (rev x) (rev y0))) (lfappend y0 x)
x : lst
y : lst
n : natural

* Types:
Set
natural
Prop
lst

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
x : lst
lfappend (rev x) (rev _UNBOUND_REL_1) : lst
Cons n (rev y) : lst
lfappend (rev x) (Cons n (rev y)) : lst
y : lst
rev (lfappend (rev x) (rev _UNBOUND_REL_1)) : lst
rev y : lst
@eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)) : Prop
lfappend _UNBOUND_REL_1 x : lst
rev (lfappend (rev x) (Cons n (rev y))) : lst
lfappend y (Cons n x) : lst
rev _UNBOUND_REL_1 : lst
Cons n x : lst
lst : Set
@eq lst (rev (lfappend (rev x) (rev _UNBOUND_REL_1)))
  (lfappend _UNBOUND_REL_1 x) : Prop
natural : Set
forall y0 : lst, @eq lst (rev (lfappend (rev x) (rev y0))) (lfappend y0 x) : Prop
n : natural
rev x : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = lfappend y (Cons n x)
lf7 : lst = rev x
lf1 : lst = rev (lfappend (rev x) (Cons n (rev y)))
lf4 : lst = Cons n (rev y)
lf5 : lst = Cons n x
lf2 : lst = lfappend (rev x) (Cons n (rev y))
lf6 : lst = rev y

Generalizations:
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj19: forall (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 lf4)) lf3.
Lemma conj27: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) lf3.
Lemma conj28: forall (y : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) lf3.
Lemma conj51: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend (rev x) lf4)) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev x) (Cons n lf6))) lf3.
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) lf3.
Lemma conj65: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj69: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj81: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (rev lf2) (lfappend y lf5).
Lemma conj83: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend lf7 lf4)) (lfappend y lf5).
Lemma conj85: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev lf2) (lfappend y (Cons n x)).
Lemma conj87: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 lf4)) (lfappend y (Cons n x)).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y lf5).
Lemma conj92: forall (lf5 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma conj115: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend y lf5).
Lemma conj119: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) lf4)) (lfappend y (Cons n x)).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n lf6))) (lfappend y lf5).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y lf5).
Lemma conj127: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).


<---VALIDITY CHECKS--->
Time elapsed: 185 seconds
Valid:
Lemma conj128: forall (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).

Invalid:
Lemma conj127: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n lf6))) (lfappend y lf5).
Lemma conj119: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) lf4)) (lfappend y (Cons n x)).
Lemma conj115: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend y lf5).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj92: forall (lf5 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y lf5).
Lemma conj87: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 lf4)) (lfappend y (Cons n x)).
Lemma conj85: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev lf2) (lfappend y (Cons n x)).
Lemma conj83: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend lf7 lf4)) (lfappend y lf5).
Lemma conj81: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (rev lf2) (lfappend y lf5).
Lemma conj69: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj65: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev x) (Cons n lf6))) lf3.
Lemma conj51: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend (rev x) lf4)) lf3.
Lemma conj28: forall (y : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) lf3.
Lemma conj27: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) lf3.
Lemma conj19: forall (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 lf4)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 229 seconds
Generalizations:
Lemma conj127: forall (lf6 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj124: forall (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) (Cons n lf6))) (lfappend y lf5).
Lemma conj119: forall (x : lst) (lf4 : lst) (y : lst) (n : natural), @eq lst (rev (lfappend (rev x) lf4)) (lfappend y (Cons n x)).
Lemma conj115: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (rev (lfappend (rev x) lf4)) (lfappend y lf5).
Lemma conj96_imp: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), forall
  _ : forall y0 : lst, @eq lst (rev (lfappend lf7 (rev y0))) (lfappend y0 x),
@eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma conj96: forall (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma conj95_imp: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), forall
  _ : forall y0 : lst, @eq lst (rev (lfappend lf7 (rev y0))) (lfappend y0 x),
@eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y (Cons n x)).
Lemma conj92: forall (lf5 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) (lfappend y lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) (lfappend y lf5).
Lemma conj87: forall (x : lst) (lf4 : lst) (y : lst) (n : natural) (lf7 : lst), @eq lst (rev (lfappend lf7 lf4)) (lfappend y (Cons n x)).
Lemma conj85: forall (lf2 : lst) (x : lst) (y : lst) (n : natural), @eq lst (rev lf2) (lfappend y (Cons n x)).
Lemma conj83: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf7 : lst), @eq lst (rev (lfappend lf7 lf4)) (lfappend y lf5).
Lemma conj81: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (rev lf2) (lfappend y lf5).
Lemma conj69: forall (x : lst) (lf1 : lst) (y : lst) (n : natural), @eq lst lf1 (lfappend y (Cons n x)).
Lemma conj65: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj60: forall (x : lst) (y : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) lf3.
Lemma conj59: forall (lf6 : lst) (x : lst) (n : natural) (lf3 : lst), @eq lst (rev (lfappend (rev x) (Cons n lf6))) lf3.
Lemma conj51: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (lfappend (rev x) lf4)) lf3.
Lemma conj28: forall (y : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 (Cons n (rev y)))) lf3.
Lemma conj27: forall (lf6 : lst) (n : natural) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 (Cons n lf6))) lf3.
Lemma conj19: forall (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (rev (lfappend lf7 lf4)) lf3.
Lemma conj17: forall (lf2 : lst) (lf3 : lst), @eq lst (rev lf2) lf3.
Lemma conj1: forall (lf1 : lst) (lf3 : lst), @eq lst lf1 lf3.
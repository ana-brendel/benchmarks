File Information
- File name: goal41
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal41_theorem0_98_append_single
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal41_theorem0_98_append_single
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : lst) (_ : @eq bool (lst_subset x0 y0) true),
@eq bool (lst_eq (lst_intersection x0 y0) x0) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_subset (lst_intersection x y) (Cons n x)) true

* Hypothesis:
IHx : forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true
H0 : @eq bool (lst_mem n y) true
H1 : @eq bool (lst_subset x (lst_intersection x y)) true
x : lst
H : @eq bool (lst_subset (lst_intersection x y) x) true
y : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : natural

* Terms:
lst_eq (lst_intersection x y) x : bool
x : lst
lst_subset (lst_intersection x y) (Cons n x) : bool
forall _ : @eq bool (lst_subset x y) true,
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
y : lst
true : bool
@eq bool (lst_mem n y) true : Prop
@eq bool (lst_eq (lst_intersection x y) x) true : Prop
@eq bool (lst_subset (lst_intersection x y) (Cons n x)) true : Prop
@eq bool (lst_subset x y) true : Prop
@eq bool (lst_subset (lst_intersection x y) x) true : Prop
bool : Set
lst_subset (lst_intersection x y) x : bool
Cons n x : lst
lst : Set
lst_mem n y : bool
lst_subset x (lst_intersection x y) : bool
@eq bool (lst_subset x (lst_intersection x y)) true : Prop
lst_subset x y : bool
natural : Set
lst_intersection x y : lst
n : natural

* Functions:
lst_subset  : forall (_ : lst) (_ : lst), bool
lst_eq  : forall (_ : lst) (_ : lst), bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_intersection  : forall (_ : lst) (_ : lst), lst
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons n x
lf1 : bool = lst_subset (lst_intersection x y) (Cons n x)
lf4 : bool = true
lf2 : lst = lst_intersection x y

Generalizations:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (lf4 : bool) (lf3 : lst), @eq bool (lst_subset lf2 lf3) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf2 lf3) true.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) true.
Lemma conj13: forall (lf2 : lst) (x : lst) (lf4 : bool) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma conj15: forall (lf2 : lst) (x : lst) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) true.
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) true.


<---VALIDITY CHECKS--->
Time elapsed: 84 seconds
Valid:
Lemma conj16: forall (x : lst) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) true.

Invalid:
Lemma conj15: forall (lf2 : lst) (x : lst) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) true.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma conj13: forall (lf2 : lst) (x : lst) (lf4 : bool) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) true.
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf2 lf3) true.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma conj5: forall (lf2 : lst) (lf4 : bool) (lf3 : lst), @eq bool (lst_subset lf2 lf3) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 117 seconds
Generalizations:
Lemma conj15_imp: forall (lf2 : lst) (x : lst) (n : natural), forall _ : @eq bool (lst_subset lf2 x) true,
@eq bool (lst_subset lf2 (Cons n x)) true.
Lemma conj15: forall (lf2 : lst) (x : lst) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) true.
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)
        (@eq bool (lst_subset (lst_intersection x y) x) lf4),
@eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma conj13_imp: forall (lf2 : lst) (x : lst) (lf4 : bool) (n : natural), forall _ : @eq bool (lst_subset x lf2) lf4,
@eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma conj13: forall (lf2 : lst) (x : lst) (lf4 : bool) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) true.
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf2 lf3) true.
Lemma conj6_imp: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)
        (@eq bool (lst_subset (lst_intersection x y) x) lf4),
@eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma conj5: forall (lf2 : lst) (lf4 : bool) (lf3 : lst), @eq bool (lst_subset lf2 lf3) lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 137 seconds
Valid:
Lemma conj14_imp: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)
        (@eq bool (lst_subset (lst_intersection x y) x) lf4),
@eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma conj15_imp: forall (lf2 : lst) (x : lst) (n : natural), forall _ : @eq bool (lst_subset lf2 x) true,
@eq bool (lst_subset lf2 (Cons n x)) true.

Invalid:
Lemma conj1: forall (lf4 : bool) (lf1 : bool), @eq bool lf1 lf4.
Lemma conj3: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj5: forall (lf2 : lst) (lf4 : bool) (lf3 : lst), @eq bool (lst_subset lf2 lf3) lf4.
Lemma conj6: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma conj6_imp: forall (x : lst) (lf4 : bool) (y : lst) (lf3 : lst), forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)
        (@eq bool (lst_subset (lst_intersection x y) x) lf4),
@eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq bool (lst_subset lf2 lf3) true.
Lemma conj8: forall (x : lst) (y : lst) (lf3 : lst), @eq bool (lst_subset (lst_intersection x y) lf3) true.
Lemma conj13: forall (lf2 : lst) (x : lst) (lf4 : bool) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma conj13_imp: forall (lf2 : lst) (x : lst) (lf4 : bool) (n : natural), forall _ : @eq bool (lst_subset x lf2) lf4,
@eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma conj14: forall (x : lst) (lf4 : bool) (y : lst) (n : natural), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma conj15: forall (lf2 : lst) (x : lst) (n : natural), @eq bool (lst_subset lf2 (Cons n x)) true.


<---CREATE SKETCHES--->
Time elapsed: 138 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq bool true (##hole##)
Sketch conj5_sketch0 : @eq bool (##hole##) lf4
Sketch conj5_term_sketch0 : @eq bool (lst_subset lf2 lf3) (##hole##)
Sketch conj6_sketch0 : @eq bool (##hole##) lf4
Sketch conj6_sketch1 : @eq bool (lst_subset (##hole##) lf3) lf4
Sketch conj6_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) lf3) (##hole##)
Sketch conj6_term_sketch1 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj6_imp_sketch0 : forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)
        (@eq bool (lst_subset (lst_intersection x y) x) lf4),
@eq bool (##hole##) lf4
Sketch conj6_imp_sketch1 : forall
  _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)
        (@eq bool (##hole##) lf4),
@eq bool (lst_subset (lst_intersection x y) lf3) lf4
Sketch conj6_imp_sketch2 : forall
  _ : and (@eq bool (##hole##) lf4)
        (@eq bool (lst_subset (lst_intersection x y) x) lf4),
@eq bool (lst_subset (lst_intersection x y) lf3) lf4
Sketch conj6_imp_sketch3 : forall
  _ : and (@eq bool (lst_subset x (##hole##)) lf4)
        (@eq bool (lst_subset (##hole##) x) lf4),
@eq bool (lst_subset (##hole##) lf3) lf4
Sketch conj6_imp_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) lf3) (##hole##)
Sketch conj6_imp_term_sketch1 : @eq bool (lst_subset (lst_intersection x y) x) (##hole##)
Sketch conj6_imp_term_sketch2 : @eq bool (lst_subset x (lst_intersection x y)) (##hole##)
Sketch conj6_imp_term_sketch3 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj7_sketch0 : @eq bool (lst_subset lf2 lf3) (##hole##)
Sketch conj7_sketch1 : @eq bool (##hole##) true
Sketch conj7_term_sketch0 : @eq bool true (##hole##)
Sketch conj7_term_sketch1 : @eq bool (lst_subset lf2 lf3) (##hole##)
Sketch conj8_sketch0 : @eq bool (##hole##) true
Sketch conj8_sketch1 : @eq bool (lst_subset (lst_intersection x y) lf3) (##hole##)
Sketch conj8_sketch2 : @eq bool (lst_subset (##hole##) lf3) true
Sketch conj8_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) lf3) (##hole##)
Sketch conj8_term_sketch1 : @eq bool true (##hole##)
Sketch conj8_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj13_sketch0 : @eq bool (lst_subset lf2 (##hole##)) lf4
Sketch conj13_sketch1 : @eq bool (##hole##) lf4
Sketch conj13_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj13_term_sketch1 : @eq bool (lst_subset lf2 (Cons n x)) (##hole##)
Sketch conj13_imp_sketch0 : forall _ : @eq bool (lst_subset x lf2) lf4,
@eq bool (lst_subset lf2 (##hole##)) lf4
Sketch conj13_imp_sketch1 : forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (##hole##) lf4
Sketch conj13_imp_sketch2 : forall _ : @eq bool (##hole##) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4
Sketch conj13_imp_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj13_imp_term_sketch1 : @eq bool (lst_subset lf2 (Cons n x)) (##hole##)
Sketch conj13_imp_term_sketch2 : @eq bool (lst_subset x lf2) (##hole##)
Sketch conj14_sketch0 : @eq bool (##hole##) lf4
Sketch conj14_sketch1 : @eq bool (lst_subset (lst_intersection x y) (##hole##)) lf4
Sketch conj14_sketch2 : @eq bool (lst_subset (##hole##) (Cons n x)) lf4
Sketch conj14_term_sketch0 : @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (lst_intersection x y) (##hole##)
Sketch conj15_sketch0 : @eq bool (lst_subset lf2 (##hole##)) true
Sketch conj15_sketch1 : @eq bool (##hole##) true
Sketch conj15_sketch2 : @eq bool (lst_subset lf2 (Cons n x)) (##hole##)
Sketch conj15_term_sketch0 : @eq lst (Cons n x) (##hole##)
Sketch conj15_term_sketch1 : @eq bool (lst_subset lf2 (Cons n x)) (##hole##)
Sketch conj15_term_sketch2 : @eq bool true (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 936 seconds
Problems per Sketch:
Sketch conj15_sketch1 --> Problem  synth_2
Sketch conj6_imp_sketch3 --> Problem  synth_11
Sketch conj7_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj14_sketch2 --> Problem  synth_23
Sketch conj15_term_sketch1 --> Problem  synth_17
Sketch conj6_imp_term_sketch3 --> Problem  synth_7
Sketch conj15_term_sketch2 --> Problem  synth_2
Sketch conj6_imp_sketch2 --> Problem  synth_10
Sketch conj14_term_sketch2 --> Problem  synth_7
Sketch conj6_imp_term_sketch1 --> Problem  synth_12
Sketch conj8_sketch1 --> Problem  synth_6
Sketch conj13_imp_term_sketch0 --> Problem  synth_16
Sketch conj7_sketch0 --> Problem  synth_4
Sketch conj6_imp_sketch1 --> Problem  synth_9
Sketch conj6_term_sketch0 --> Problem  synth_6
Sketch conj6_imp_sketch0 --> Problem  synth_8
Sketch conj13_term_sketch1 --> Problem  synth_17
Sketch conj8_term_sketch0 --> Problem  synth_6
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj8_sketch2 --> Problem  synth_14
Sketch conj6_imp_term_sketch0 --> Problem  synth_6
Sketch conj14_term_sketch1 --> Problem  synth_16
Sketch conj7_term_sketch1 --> Problem  synth_4
Sketch conj8_term_sketch1 --> Problem  synth_2
Sketch conj6_imp_term_sketch2 --> Problem  synth_13
Sketch conj13_imp_sketch2 --> Problem  synth_20
Sketch conj5_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_3
Sketch conj13_imp_sketch1 --> Problem  synth_19
Sketch conj6_sketch1 --> Problem  synth_5
Sketch conj15_sketch2 --> Problem  synth_17
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj13_imp_term_sketch2 --> Problem  synth_21
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj13_term_sketch0 --> Problem  synth_16
Sketch conj15_sketch0 --> Problem  synth_25
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj13_imp_term_sketch1 --> Problem  synth_17
Sketch conj13_sketch1 --> Problem  synth_3
Sketch conj14_sketch0 --> Problem  synth_3
Sketch conj14_term_sketch0 --> Problem  synth_24
Sketch conj13_sketch0 --> Problem  synth_15
Sketch conj8_sketch0 --> Problem  synth_2
Sketch conj13_imp_sketch0 --> Problem  synth_18
Sketch conj8_term_sketch2 --> Problem  synth_7
Sketch conj15_term_sketch0 --> Problem  synth_16
Sketch conj14_sketch1 --> Problem  synth_22


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1117 seconds

Problem: synth_22

Problem: synth_20
 lst_eq lf2 (lfappend x Nil)
 lst_subset x (lfappend lf2 Nil)
 lst_eq x (lfappend lf2 Nil)
 lst_eq lf2 x
 lst_subset x lf2
 lst_eq x lf2

Problem: synth_18

Problem: synth_17
 lst_eq x x
 lst_subset lf2 x
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 lfeqb n n
 true

Problem: synth_21
 lst_eq lf2 (lfappend x Nil)
 lst_subset x (lfappend lf2 Nil)
 lst_eq x (lfappend lf2 Nil)
 lst_eq lf2 x
 lst_subset x lf2
 lst_eq x lf2

Problem: synth_9
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 lf4
 true

Problem: synth_25

Problem: synth_13
 lst_eq y (lfappend x y)
 lst_subset x (lst_intersection y x)
 lst_eq x (lst_intersection y x)
 lst_eq y (lfappend y x)
 lst_subset x (lfappend y Nil)
 lst_subset x y

Problem: synth_6
 lst_subset x lf3
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 true

Problem: synth_11

Problem: synth_7
 lst_intersection y (lst_intersection x x)
 lst_intersection y (lfappend x x)
 lst_intersection x (lfappend y Nil)
 lst_intersection y (lfappend x Nil)
 lst_intersection x y
 lst_intersection y x

Problem: synth_4
 lst_subset lf3 lf3
 lst_eq lf3 lf3
 lst_subset lf2 lf3
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 true

Problem: synth_1
 lf1
 true

Problem: synth_23

Problem: synth_16
 Cons n (lst_intersection x (Cons Zero x))
 Cons n (lfappend x (lst_intersection x Nil))
 Cons n (lst_intersection x (lfappend x Nil))
 Cons n (lst_intersection x x)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_19
 lst_eq x x
 lst_subset lf2 x
 lst_subset lf2 lf2
 lst_eq lf2 lf2
 lf4
 true

Problem: synth_15

Problem: synth_14

Problem: synth_10
 lst_eq y (lfappend x y)
 lst_subset x (lst_intersection y x)
 lst_eq x (lst_intersection y x)
 lst_eq y (lfappend y x)
 lst_subset x (lfappend y Nil)
 lst_subset x y

Problem: synth_8
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 lf4
 true

Problem: synth_24
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 lfeqb n n
 true

Problem: synth_3
 lf4
 true

Problem: synth_12
 lst_eq x (lfappend x Nil)
 lst_subset y y
 lst_eq y y
 lst_subset x x
 lst_eq x x
 true

Problem: synth_5

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1117 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) true.
Lemma candidate_2: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
Lemma candidate_3: forall (n : natural) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset lf2 x) true, @eq bool (lst_subset lf2 (Cons n x)) true.
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_6: @eq bool true (true).
Lemma candidate_7: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_8: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_9: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf3 lf3).
Lemma candidate_10: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_eq lf3 lf3).
Lemma candidate_11: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf2 lf3).
Lemma candidate_12: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf2 lf2).
Lemma candidate_13: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_eq lf2 lf2).
Lemma candidate_14: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (true).
Lemma candidate_15: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_16: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_17: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x lf3).
Lemma candidate_18: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset y y).
Lemma candidate_19: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq y y).
Lemma candidate_20: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x x).
Lemma candidate_21: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq x x).
Lemma candidate_22: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (true).
Lemma candidate_23: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_24: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_25: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_26: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_27: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_28: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_29: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset y y) lf4.
Lemma candidate_30: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_eq y y) lf4.
Lemma candidate_31: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset x x) lf4.
Lemma candidate_32: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_eq x x) lf4.
Lemma candidate_33: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lf4) lf4.
Lemma candidate_34: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (true) lf4.
Lemma candidate_35: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset y y) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_36: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_eq y y) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_37: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset x x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_38: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_eq x x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_39: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lf4) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_40: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (true) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_41: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_eq y (lfappend x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_42: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection y x)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_43: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_eq x (lst_intersection y x)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_44: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_eq y (lfappend y x)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_45: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lfappend y Nil)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_46: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x y) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_47: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x lf3).
Lemma candidate_48: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset y y).
Lemma candidate_49: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq y y).
Lemma candidate_50: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x x).
Lemma candidate_51: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq x x).
Lemma candidate_52: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (true).
Lemma candidate_53: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq x (lfappend x Nil)).
Lemma candidate_54: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset y y).
Lemma candidate_55: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq y y).
Lemma candidate_56: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset x x).
Lemma candidate_57: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq x x).
Lemma candidate_58: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (true).
Lemma candidate_59: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend x y)).
Lemma candidate_60: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lst_intersection y x)).
Lemma candidate_61: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_eq x (lst_intersection y x)).
Lemma candidate_62: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend y x)).
Lemma candidate_63: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lfappend y Nil)).
Lemma candidate_64: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_subset x y).
Lemma candidate_65: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_66: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_67: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_68: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_69: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_70: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_71: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf3 lf3).
Lemma candidate_72: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_eq lf3 lf3).
Lemma candidate_73: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf2 lf3).
Lemma candidate_74: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf2 lf2).
Lemma candidate_75: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_eq lf2 lf2).
Lemma candidate_76: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (true).
Lemma candidate_77: @eq bool (true) true.
Lemma candidate_78: @eq bool true (true).
Lemma candidate_79: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf3 lf3).
Lemma candidate_80: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_eq lf3 lf3).
Lemma candidate_81: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf2 lf3).
Lemma candidate_82: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_subset lf2 lf2).
Lemma candidate_83: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (lst_eq lf2 lf2).
Lemma candidate_84: forall (lf3 : lst) (lf2 : lst), @eq bool (lst_subset lf2 lf3) (true).
Lemma candidate_85: @eq bool (true) true.
Lemma candidate_86: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x lf3).
Lemma candidate_87: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset y y).
Lemma candidate_88: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq y y).
Lemma candidate_89: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x x).
Lemma candidate_90: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq x x).
Lemma candidate_91: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (true).
Lemma candidate_92: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x lf3).
Lemma candidate_93: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset y y).
Lemma candidate_94: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq y y).
Lemma candidate_95: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_subset x x).
Lemma candidate_96: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (lst_eq x x).
Lemma candidate_97: forall (lf3 : lst) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) lf3) (true).
Lemma candidate_98: @eq bool true (true).
Lemma candidate_99: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_100: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_101: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_102: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_103: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_104: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_105: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_106: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_107: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_108: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_109: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_110: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x x)).
Lemma candidate_111: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_112: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_113: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq x x).
Lemma candidate_114: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 x).
Lemma candidate_115: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 lf2).
Lemma candidate_116: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq lf2 lf2).
Lemma candidate_117: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lfeqb n n).
Lemma candidate_118: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (true).
Lemma candidate_119: forall (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (lst_eq x x) lf4.
Lemma candidate_120: forall (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (lst_subset lf2 x) lf4.
Lemma candidate_121: forall (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (lst_subset lf2 lf2) lf4.
Lemma candidate_122: forall (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (lst_eq lf2 lf2) lf4.
Lemma candidate_123: forall (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (lf4) lf4.
Lemma candidate_124: forall (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (true) lf4.
Lemma candidate_125: forall (n : natural) (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_eq lf2 (lfappend x Nil)) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma candidate_126: forall (n : natural) (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x (lfappend lf2 Nil)) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma candidate_127: forall (n : natural) (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_eq x (lfappend lf2 Nil)) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma candidate_128: forall (n : natural) (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_eq lf2 x) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma candidate_129: forall (n : natural) (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset x lf2) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma candidate_130: forall (n : natural) (lf4 : bool) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_eq x lf2) lf4, @eq bool (lst_subset lf2 (Cons n x)) lf4.
Lemma candidate_131: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_132: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_133: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_134: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x x)).
Lemma candidate_135: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_136: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_137: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq x x).
Lemma candidate_138: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 x).
Lemma candidate_139: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 lf2).
Lemma candidate_140: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq lf2 lf2).
Lemma candidate_141: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lfeqb n n).
Lemma candidate_142: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (true).
Lemma candidate_143: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq lf2 (lfappend x Nil)).
Lemma candidate_144: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_145: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq x (lfappend lf2 Nil)).
Lemma candidate_146: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq lf2 x).
Lemma candidate_147: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x lf2).
Lemma candidate_148: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_eq x lf2).
Lemma candidate_149: forall (lf4 : bool), @eq bool (lf4) lf4.
Lemma candidate_150: forall (lf4 : bool), @eq bool (true) lf4.
Lemma candidate_151: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_subset y y).
Lemma candidate_152: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_eq y y).
Lemma candidate_153: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_subset x x).
Lemma candidate_154: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_eq x x).
Lemma candidate_155: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lfeqb n n).
Lemma candidate_156: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (true).
Lemma candidate_157: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_158: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_159: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_160: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x x)).
Lemma candidate_161: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_162: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_163: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lst_intersection x x)).
Lemma candidate_164: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x x)).
Lemma candidate_165: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_166: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y (lfappend x Nil)).
Lemma candidate_167: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x y).
Lemma candidate_168: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection y x).
Lemma candidate_169: @eq bool (true) true.
Lemma candidate_170: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq x x).
Lemma candidate_171: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 x).
Lemma candidate_172: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 lf2).
Lemma candidate_173: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq lf2 lf2).
Lemma candidate_174: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lfeqb n n).
Lemma candidate_175: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (true).
Lemma candidate_176: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_177: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_178: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_179: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x x)).
Lemma candidate_180: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_181: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_182: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq x x).
Lemma candidate_183: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 x).
Lemma candidate_184: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_subset lf2 lf2).
Lemma candidate_185: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lst_eq lf2 lf2).
Lemma candidate_186: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (lfeqb n n).
Lemma candidate_187: forall (n : natural) (x : lst) (lf2 : lst), @eq bool (lst_subset lf2 (Cons n x)) (true).
Lemma candidate_188: @eq bool true (true).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1379 seconds
Duplicates removed: 96
Filtered by Quickchick: 47
Filtered by script: 10
Remaining: 35

Lemmas: 
Lemma candidate_111: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_110: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x x)).
Lemma candidate_58: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (true).
Lemma candidate_57: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq x x).
Lemma candidate_55: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq y y).
Lemma candidate_144: forall (x : lst) (lf2 : lst), @eq bool (lst_subset x lf2) (lst_subset x (lfappend lf2 Nil)).
Lemma candidate_156: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (true).
Lemma candidate_107: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (Cons Zero x))).
Lemma candidate_64: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_subset x y).
Lemma candidate_56: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset x x).
Lemma candidate_54: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_subset y y).
Lemma candidate_109: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lst_intersection x (lfappend x Nil))).
Lemma candidate_108: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x (lst_intersection x Nil))).
Lemma candidate_155: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lfeqb n n).
Lemma candidate_154: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_eq x x).
Lemma candidate_152: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_eq y y).
Lemma candidate_25: forall (y : lst) (x : lst), @eq lst (lst_intersection x y) (lst_intersection x (lfappend y Nil)).
Lemma candidate_153: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_subset x x).
Lemma candidate_151: forall (n : natural) (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) (lst_subset y y).
Lemma candidate_62: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend y x)).
Lemma candidate_59: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y)) (lst_eq y (lfappend x y)).
Lemma candidate_53: forall (y : lst) (x : lst), @eq bool (lst_subset (lst_intersection x y) x) (lst_eq x (lfappend x Nil)).
Lemma candidate_63: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lfappend y Nil)).
Lemma candidate_61: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_eq x (lst_intersection y x)).
Lemma candidate_60: forall (y : lst) (x : lst), @eq bool (lst_subset x (lst_intersection x y))   (lst_subset x (lst_intersection y x)).
Lemma candidate_3: forall (n : natural) (x : lst) (lf2 : lst), forall _ : @eq bool (lst_subset lf2 x) true, @eq bool (lst_subset lf2 (Cons n x)) true.
Lemma candidate_34: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (true) lf4.
Lemma candidate_32: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_eq x x) lf4.
Lemma candidate_30: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_eq y y) lf4.
Lemma candidate_31: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset x x) lf4.
Lemma candidate_29: forall (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset y y) lf4.
Lemma candidate_37: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset x x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_45: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lfappend y Nil)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_43: forall (lf3 : lst) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_eq x (lst_intersection y x)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) lf3) lf4.
Lemma candidate_2: forall (n : natural) (y : lst) (lf4 : bool) (x : lst), forall   _ : and (@eq bool (lst_subset x (lst_intersection x y)) lf4)         (@eq bool (lst_subset (lst_intersection x y) x) lf4), @eq bool (lst_subset (lst_intersection x y) (Cons n x)) lf4.
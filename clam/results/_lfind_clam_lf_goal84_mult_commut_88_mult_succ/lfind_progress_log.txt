File Information
- File name: goal84
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal84_mult_commut_88_mult_succ
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal84_mult_commut_88_mult_succ
- Namespace: adtind
- Proof name: mult_commut
- Theorem: Theorem mult_commut: forall x0 y0 : natural, @eq natural (mult x0 y0) (mult y0 x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (plus (mult y x) y) (mult y (Succ x))

* Hypothesis:
IHx : @eq natural (mult x y) (mult y x)
x : natural
y : natural

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
@eq natural (mult x y) (mult y x) : Prop
Succ x : natural
mult x y : natural
x : natural
plus (mult y x) y : natural
y : natural
mult y x : natural
natural : Set
mult y (Succ x) : natural
@eq natural (plus (mult y x) y) (mult y (Succ x)) : Prop

* Functions:
Succ  : forall _ : natural, natural
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
plus  : forall (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = mult y x
lf1 : natural = plus (mult y x) y
lf4 : natural = Succ x
lf2 : natural = mult y (Succ x)

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj2: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y lf4).
Lemma conj4: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y (Succ x)).
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) lf2.
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y lf4).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y (Succ x)).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus (mult y x) y) lf2.
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (mult y x) y) (mult y lf4).
Lemma conj16: forall (x : natural) (y : natural), @eq natural (plus (mult y x) y) (mult y (Succ x)).


<---VALIDITY CHECKS--->
Time elapsed: 18 seconds
Valid:
Lemma conj16: forall (x : natural) (y : natural), @eq natural (plus (mult y x) y) (mult y (Succ x)).

Invalid:
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (mult y x) y) (mult y lf4).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus (mult y x) y) lf2.
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y (Succ x)).
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y lf4).
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) lf2.
Lemma conj4: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y (Succ x)).
Lemma conj2: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y lf4).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 25 seconds
Generalizations:
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (mult y x) y) (mult y lf4).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus (mult y x) y) lf2.
Lemma conj8_imp: forall (x : natural) (y : natural) (lf3 : natural), forall _ : @eq natural (mult x y) lf3,
@eq natural (plus lf3 y) (mult y (Succ x)).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y (Succ x)).
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y lf4).
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) lf2.
Lemma conj4: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y (Succ x)).
Lemma conj2: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y lf4).
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 39 seconds
Valid:
Lemma conj8_imp: forall (x : natural) (y : natural) (lf3 : natural), forall _ : @eq natural (mult x y) lf3,
@eq natural (plus lf3 y) (mult y (Succ x)).

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf1 lf2.
Lemma conj2: forall (lf4 : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y lf4).
Lemma conj4: forall (x : natural) (lf1 : natural) (y : natural), @eq natural lf1 (mult y (Succ x)).
Lemma conj5: forall (lf2 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) lf2.
Lemma conj6: forall (lf4 : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y lf4).
Lemma conj8: forall (x : natural) (y : natural) (lf3 : natural), @eq natural (plus lf3 y) (mult y (Succ x)).
Lemma conj13: forall (lf2 : natural) (x : natural) (y : natural), @eq natural (plus (mult y x) y) lf2.
Lemma conj14: forall (x : natural) (lf4 : natural) (y : natural), @eq natural (plus (mult y x) y) (mult y lf4).


<---CREATE SKETCHES--->
Time elapsed: 39 seconds
Sketches:
Sketch conj2_sketch0 : @eq natural lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq natural (mult y lf4) (##hole##)
Sketch conj4_sketch0 : @eq natural lf1 (mult y (##hole##))
Sketch conj4_sketch1 : @eq natural lf1 (##hole##)
Sketch conj4_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj4_term_sketch1 : @eq natural (mult y (Succ x)) (##hole##)
Sketch conj5_sketch0 : @eq natural (##hole##) lf2
Sketch conj5_term_sketch0 : @eq natural (plus lf3 y) (##hole##)
Sketch conj6_sketch0 : @eq natural (plus lf3 y) (##hole##)
Sketch conj6_sketch1 : @eq natural (##hole##) (mult y lf4)
Sketch conj6_term_sketch0 : @eq natural (mult y lf4) (##hole##)
Sketch conj6_term_sketch1 : @eq natural (plus lf3 y) (##hole##)
Sketch conj8_sketch0 : @eq natural (plus lf3 y) (mult y (##hole##))
Sketch conj8_sketch1 : @eq natural (##hole##) (mult y (Succ x))
Sketch conj8_sketch2 : @eq natural (plus lf3 y) (##hole##)
Sketch conj8_term_sketch0 : @eq natural (Succ x) (##hole##)
Sketch conj8_term_sketch1 : @eq natural (plus lf3 y) (##hole##)
Sketch conj8_term_sketch2 : @eq natural (mult y (Succ x)) (##hole##)
Sketch conj13_sketch0 : @eq natural (##hole##) lf2
Sketch conj13_sketch1 : @eq natural (plus (##hole##) y) lf2
Sketch conj13_term_sketch0 : @eq natural (plus (mult y x) y) (##hole##)
Sketch conj13_term_sketch1 : @eq natural (mult y x) (##hole##)
Sketch conj14_sketch0 : @eq natural (##hole##) (mult y lf4)
Sketch conj14_sketch1 : @eq natural (plus (mult y x) y) (##hole##)
Sketch conj14_sketch2 : @eq natural (plus (##hole##) y) (mult y lf4)
Sketch conj14_term_sketch0 : @eq natural (plus (mult y x) y) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (mult y lf4) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (mult y x) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 58 seconds
Problems per Sketch:
Sketch conj6_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_6
Sketch conj14_sketch2 --> Problem  synth_11
Sketch conj13_term_sketch0 --> Problem  synth_5
Sketch conj14_term_sketch2 --> Problem  synth_10
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj8_sketch1 --> Problem  synth_5
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj6_term_sketch0 --> Problem  synth_2
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj13_sketch1 --> Problem  synth_9
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj14_sketch0 --> Problem  synth_2
Sketch conj13_term_sketch1 --> Problem  synth_10
Sketch conj8_term_sketch0 --> Problem  synth_4
Sketch conj14_term_sketch0 --> Problem  synth_5
Sketch conj13_sketch0 --> Problem  synth_6
Sketch conj8_sketch2 --> Problem  synth_7
Sketch conj8_sketch0 --> Problem  synth_8
Sketch conj14_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch1 --> Problem  synth_7
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch2 --> Problem  synth_5
Sketch conj5_term_sketch0 --> Problem  synth_7
Sketch conj6_sketch0 --> Problem  synth_7
Sketch conj14_sketch1 --> Problem  synth_5
Sketch conj2_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 122 seconds

Problem: synth_10
 mult x (mult y (Succ Zero))
 mult y (mult x (Succ Zero))
 mult x (plus y Zero)
 mult y (plus x Zero)
 mult x y
 mult y x

Problem: synth_8

Problem: synth_3

Problem: synth_9

Problem: synth_6
 plus lf2 (mult lf2 Zero)
 plus lf2 (qfac lf2 Zero)
 qfac (fac lf2) lf2
 mult lf2 (Succ Zero)
 plus lf2 Zero
 lf2

Problem: synth_11

Problem: synth_7
 plus y (mult lf3 (Succ Zero))
 plus lf3 (mult y (Succ Zero))
 plus y (plus lf3 Zero)
 plus lf3 (plus y Zero)
 plus y lf3
 plus lf3 y

Problem: synth_5
 plus (mult x (plus y Zero)) (plus y Zero)
 mult y (plus x (Succ Zero))
 plus y (mult x y)
 plus y (mult y x)
 plus (mult x y) y
 mult y (Succ x)

Problem: synth_4
 Succ (plus x (qfac x Zero))
 plus (mult x (Succ Zero)) (Succ Zero)
 Succ (mult x (Succ Zero))
 Succ (plus x Zero)
 plus x (Succ Zero)
 Succ x

Problem: synth_1
 plus lf1 (mult lf1 Zero)
 plus lf1 (qfac lf1 Zero)
 qfac (fac lf1) lf1
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_2
 mult lf4 (mult y (Succ Zero))
 mult y (mult lf4 (Succ Zero))
 mult lf4 (plus y Zero)
 mult y (plus lf4 Zero)
 mult lf4 y
 mult y lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 122 seconds
Lemmas:
Lemma candidate_1: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (Succ x)).
Lemma candidate_2: forall (lf3 : natural) (y : natural) (x : natural), forall _ : @eq natural (mult x y) lf3, @eq natural (plus lf3 y) (mult y (Succ x)).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus lf1 (mult lf1 Zero)).
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (plus lf1 (qfac lf1 Zero)).
Lemma candidate_5: forall (lf1 : natural), @eq natural lf1 (qfac (fac lf1) lf1).
Lemma candidate_6: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_7: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_8: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_9: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (mult y (Succ Zero))).
Lemma candidate_10: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (mult lf4 (Succ Zero))).
Lemma candidate_11: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (plus y Zero)).
Lemma candidate_12: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (plus lf4 Zero)).
Lemma candidate_13: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 y).
Lemma candidate_14: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y lf4).
Lemma candidate_15: forall (lf1 : natural), @eq natural lf1 (plus lf1 (mult lf1 Zero)).
Lemma candidate_16: forall (lf1 : natural), @eq natural lf1 (plus lf1 (qfac lf1 Zero)).
Lemma candidate_17: forall (lf1 : natural), @eq natural lf1 (qfac (fac lf1) lf1).
Lemma candidate_18: forall (lf1 : natural), @eq natural lf1 (mult lf1 (Succ Zero)).
Lemma candidate_19: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_20: forall (lf1 : natural), @eq natural lf1 (lf1).
Lemma candidate_21: forall (x : natural), @eq natural (Succ x) (Succ (plus x (qfac x Zero))).
Lemma candidate_22: forall (x : natural), @eq natural (Succ x) (plus (mult x (Succ Zero)) (Succ Zero)).
Lemma candidate_23: forall (x : natural), @eq natural (Succ x) (Succ (mult x (Succ Zero))).
Lemma candidate_24: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_25: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_26: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_27: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_28: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (mult y (plus x (Succ Zero))).
Lemma candidate_29: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus y (mult x y)).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus y (mult y x)).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus (mult x y) y).
Lemma candidate_32: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (mult y (Succ x)).
Lemma candidate_33: forall (lf2 : natural), @eq natural (plus lf2 (mult lf2 Zero)) lf2.
Lemma candidate_34: forall (lf2 : natural), @eq natural (plus lf2 (qfac lf2 Zero)) lf2.
Lemma candidate_35: forall (lf2 : natural), @eq natural (qfac (fac lf2) lf2) lf2.
Lemma candidate_36: forall (lf2 : natural), @eq natural (mult lf2 (Succ Zero)) lf2.
Lemma candidate_37: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_38: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_39: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (mult lf3 (Succ Zero))).
Lemma candidate_40: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (mult y (Succ Zero))).
Lemma candidate_41: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (plus lf3 Zero)).
Lemma candidate_42: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (plus y Zero)).
Lemma candidate_43: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y lf3).
Lemma candidate_44: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 y).
Lemma candidate_45: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (mult lf3 (Succ Zero))).
Lemma candidate_46: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (mult y (Succ Zero))).
Lemma candidate_47: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (plus lf3 Zero)).
Lemma candidate_48: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (plus y Zero)).
Lemma candidate_49: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y lf3).
Lemma candidate_50: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 y).
Lemma candidate_51: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 (mult y (Succ Zero))) (mult y lf4).
Lemma candidate_52: forall (y : natural) (lf4 : natural), @eq natural (mult y (mult lf4 (Succ Zero))) (mult y lf4).
Lemma candidate_53: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 (plus y Zero)) (mult y lf4).
Lemma candidate_54: forall (y : natural) (lf4 : natural), @eq natural (mult y (plus lf4 Zero)) (mult y lf4).
Lemma candidate_55: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 y) (mult y lf4).
Lemma candidate_56: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y lf4).
Lemma candidate_57: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (mult y (Succ Zero))).
Lemma candidate_58: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (mult lf4 (Succ Zero))).
Lemma candidate_59: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (plus y Zero)).
Lemma candidate_60: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (plus lf4 Zero)).
Lemma candidate_61: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 y).
Lemma candidate_62: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y lf4).
Lemma candidate_63: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (mult lf3 (Succ Zero))).
Lemma candidate_64: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (mult y (Succ Zero))).
Lemma candidate_65: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (plus lf3 Zero)).
Lemma candidate_66: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (plus y Zero)).
Lemma candidate_67: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y lf3).
Lemma candidate_68: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 y).
Lemma candidate_69: forall (y : natural) (x : natural), @eq natural (plus (mult x (plus y Zero)) (plus y Zero)) (mult y (Succ x)).
Lemma candidate_70: forall (y : natural) (x : natural), @eq natural (mult y (plus x (Succ Zero))) (mult y (Succ x)).
Lemma candidate_71: forall (y : natural) (x : natural), @eq natural (plus y (mult x y)) (mult y (Succ x)).
Lemma candidate_72: forall (y : natural) (x : natural), @eq natural (plus y (mult y x)) (mult y (Succ x)).
Lemma candidate_73: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_74: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (mult y (Succ x)).
Lemma candidate_75: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (mult lf3 (Succ Zero))).
Lemma candidate_76: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (mult y (Succ Zero))).
Lemma candidate_77: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (plus lf3 Zero)).
Lemma candidate_78: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (plus y Zero)).
Lemma candidate_79: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y lf3).
Lemma candidate_80: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 y).
Lemma candidate_81: forall (x : natural), @eq natural (Succ x) (Succ (plus x (qfac x Zero))).
Lemma candidate_82: forall (x : natural), @eq natural (Succ x) (plus (mult x (Succ Zero)) (Succ Zero)).
Lemma candidate_83: forall (x : natural), @eq natural (Succ x) (Succ (mult x (Succ Zero))).
Lemma candidate_84: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_85: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_86: forall (x : natural), @eq natural (Succ x) (Succ x).
Lemma candidate_87: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (mult lf3 (Succ Zero))).
Lemma candidate_88: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (mult y (Succ Zero))).
Lemma candidate_89: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (plus lf3 Zero)).
Lemma candidate_90: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (plus y Zero)).
Lemma candidate_91: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y lf3).
Lemma candidate_92: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 y).
Lemma candidate_93: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_94: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (mult y (plus x (Succ Zero))).
Lemma candidate_95: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus y (mult x y)).
Lemma candidate_96: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus y (mult y x)).
Lemma candidate_97: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus (mult x y) y).
Lemma candidate_98: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (mult y (Succ x)).
Lemma candidate_99: forall (lf2 : natural), @eq natural (plus lf2 (mult lf2 Zero)) lf2.
Lemma candidate_100: forall (lf2 : natural), @eq natural (plus lf2 (qfac lf2 Zero)) lf2.
Lemma candidate_101: forall (lf2 : natural), @eq natural (qfac (fac lf2) lf2) lf2.
Lemma candidate_102: forall (lf2 : natural), @eq natural (mult lf2 (Succ Zero)) lf2.
Lemma candidate_103: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_104: forall (lf2 : natural), @eq natural (lf2) lf2.
Lemma candidate_105: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_106: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (plus x (Succ Zero))).
Lemma candidate_107: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult x y)).
Lemma candidate_108: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult y x)).
Lemma candidate_109: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x y) y).
Lemma candidate_110: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (Succ x)).
Lemma candidate_111: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x (mult y (Succ Zero))).
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y (mult x (Succ Zero))).
Lemma candidate_113: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x (plus y Zero)).
Lemma candidate_114: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y (plus x Zero)).
Lemma candidate_115: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x y).
Lemma candidate_116: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y x).
Lemma candidate_117: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 (mult y (Succ Zero))) (mult y lf4).
Lemma candidate_118: forall (y : natural) (lf4 : natural), @eq natural (mult y (mult lf4 (Succ Zero))) (mult y lf4).
Lemma candidate_119: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 (plus y Zero)) (mult y lf4).
Lemma candidate_120: forall (y : natural) (lf4 : natural), @eq natural (mult y (plus lf4 Zero)) (mult y lf4).
Lemma candidate_121: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 y) (mult y lf4).
Lemma candidate_122: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y lf4).
Lemma candidate_123: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_124: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (plus x (Succ Zero))).
Lemma candidate_125: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult x y)).
Lemma candidate_126: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult y x)).
Lemma candidate_127: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x y) y).
Lemma candidate_128: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (Succ x)).
Lemma candidate_129: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_130: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (plus x (Succ Zero))).
Lemma candidate_131: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult x y)).
Lemma candidate_132: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult y x)).
Lemma candidate_133: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x y) y).
Lemma candidate_134: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (Succ x)).
Lemma candidate_135: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (mult y (Succ Zero))).
Lemma candidate_136: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (mult lf4 (Succ Zero))).
Lemma candidate_137: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (plus y Zero)).
Lemma candidate_138: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (plus lf4 Zero)).
Lemma candidate_139: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 y).
Lemma candidate_140: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y lf4).
Lemma candidate_141: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x (mult y (Succ Zero))).
Lemma candidate_142: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y (mult x (Succ Zero))).
Lemma candidate_143: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x (plus y Zero)).
Lemma candidate_144: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y (plus x Zero)).
Lemma candidate_145: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x y).
Lemma candidate_146: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y x).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 231 seconds
Duplicates removed: 88
Filtered by Quickchick: 0
Filtered by script: 16
Remaining: 42

Lemmas: 
Lemma candidate_37: forall (lf2 : natural), @eq natural (plus lf2 Zero) lf2.
Lemma candidate_7: forall (lf1 : natural), @eq natural lf1 (plus lf1 Zero).
Lemma candidate_35: forall (lf2 : natural), @eq natural (qfac (fac lf2) lf2) lf2.
Lemma candidate_5: forall (lf1 : natural), @eq natural lf1 (qfac (fac lf1) lf1).
Lemma candidate_43: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y lf3).
Lemma candidate_25: forall (x : natural), @eq natural (Succ x) (plus x (Succ Zero)).
Lemma candidate_24: forall (x : natural), @eq natural (Succ x) (Succ (plus x Zero)).
Lemma candidate_34: forall (lf2 : natural), @eq natural (plus lf2 (qfac lf2 Zero)) lf2.
Lemma candidate_33: forall (lf2 : natural), @eq natural (plus lf2 (mult lf2 Zero)) lf2.
Lemma candidate_4: forall (lf1 : natural), @eq natural lf1 (plus lf1 (qfac lf1 Zero)).
Lemma candidate_3: forall (lf1 : natural), @eq natural lf1 (plus lf1 (mult lf1 Zero)).
Lemma candidate_114: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y (plus x Zero)).
Lemma candidate_113: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x (plus y Zero)).
Lemma candidate_73: forall (y : natural) (x : natural), @eq natural (plus (mult x y) y) (mult y (Succ x)).
Lemma candidate_72: forall (y : natural) (x : natural), @eq natural (plus y (mult y x)) (mult y (Succ x)).
Lemma candidate_71: forall (y : natural) (x : natural), @eq natural (plus y (mult x y)) (mult y (Succ x)).
Lemma candidate_54: forall (y : natural) (lf4 : natural), @eq natural (mult y (plus lf4 Zero)) (mult y lf4).
Lemma candidate_53: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 (plus y Zero)) (mult y lf4).
Lemma candidate_42: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus lf3 (plus y Zero)).
Lemma candidate_41: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (plus lf3 Zero)).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus y (mult y x)).
Lemma candidate_29: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus y (mult x y)).
Lemma candidate_12: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (plus lf4 Zero)).
Lemma candidate_11: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (plus y Zero)).
Lemma candidate_21: forall (x : natural), @eq natural (Succ x) (Succ (plus x (qfac x Zero))).
Lemma candidate_108: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult y x)).
Lemma candidate_107: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus y (mult x y)).
Lemma candidate_112: forall (y : natural) (x : natural), @eq natural (mult y x) (mult y (mult x (Succ Zero))).
Lemma candidate_111: forall (y : natural) (x : natural), @eq natural (mult y x) (mult x (mult y (Succ Zero))).
Lemma candidate_52: forall (y : natural) (lf4 : natural), @eq natural (mult y (mult lf4 (Succ Zero))) (mult y lf4).
Lemma candidate_51: forall (y : natural) (lf4 : natural), @eq natural (mult lf4 (mult y (Succ Zero))) (mult y lf4).
Lemma candidate_39: forall (lf3 : natural) (y : natural), @eq natural (plus lf3 y) (plus y (mult lf3 (Succ Zero))).
Lemma candidate_10: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult y (mult lf4 (Succ Zero))).
Lemma candidate_9: forall (y : natural) (lf4 : natural), @eq natural (mult y lf4) (mult lf4 (mult y (Succ Zero))).
Lemma candidate_70: forall (y : natural) (x : natural), @eq natural (mult y (plus x (Succ Zero))) (mult y (Succ x)).
Lemma candidate_28: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (mult y (plus x (Succ Zero))).
Lemma candidate_22: forall (x : natural), @eq natural (Succ x) (plus (mult x (Succ Zero)) (Succ Zero)).
Lemma candidate_106: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (mult y (plus x (Succ Zero))).
Lemma candidate_69: forall (y : natural) (x : natural), @eq natural (plus (mult x (plus y Zero)) (plus y Zero)) (mult y (Succ x)).
Lemma candidate_27: forall (y : natural) (x : natural), @eq natural (mult y (Succ x)) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_105: forall (y : natural) (x : natural), @eq natural (plus (mult y x) y) (plus (mult x (plus y Zero)) (plus y Zero)).
Lemma candidate_2: forall (lf3 : natural) (y : natural) (x : natural), forall _ : @eq natural (mult x y) lf3, @eq natural (plus lf3 y) (mult y (Succ x)).
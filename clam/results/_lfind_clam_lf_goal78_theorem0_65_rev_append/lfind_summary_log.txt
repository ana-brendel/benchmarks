LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal78_theorem0_65_rev_append

Number of Lemmas: 1439
Number of Lemmas (after duplicates removed): 328
Number of Lemmas (after QuickChick used to filter): 167
* Number of Candidate Lemmas: 133

Time until ranking: 7957
Time to complete: 15422

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 8

Lemma candidate_253: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (qreva x (lfappend lf5 (rev y)))) (lfappend y (qreva lf5 x)).
Lemma candidate_1209: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (lfappend (Cons n Nil) (rev y))))   (lfappend y (Cons n x)).
Lemma candidate_1003: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (qreva x (lfappend lf5 (rev y))))   (lfappend y (rev (qreva x lf5))).
Lemma candidate_1004: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (qreva x (lfappend lf5 (rev y))))   (lfappend y (lfappend (rev lf5) x)).
Lemma candidate_384: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) (rev y))))   (lfappend y (lfappend lf6 x)).
Lemma candidate_1231: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) (rev y))))   (lfappend y (qreva (rev lf6) x)).
Lemma candidate_1228: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) (rev y))))   (lfappend y (rev (qreva x (rev lf6)))).
Lemma candidate_1302: forall (n : natural) (y : lst) (x : lst) (lf9 : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n lf9)) (rev y))))   (lfappend y (Cons n (lfappend lf9 x))).

Category 3 (provable):
Count = 5

Lemma candidate_18: forall (lf4 : lst), @eq lst (lfappend lf4 Nil) lf4.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_256: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_22: forall (lf2 : lst), @eq lst (rev lf2) (rev (lfappend lf2 Nil)).
Lemma candidate_483: forall (n : natural) (y : lst), @eq lst (lfappend (rev (Cons n Nil)) (rev y)) (rev (lfappend y (Cons n Nil))).

Category 3 (not provable):
Count = 120

Lemma candidate_17: forall (lf4 : lst), @eq lst (rev (rev lf4)) lf4.
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_258: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_281: forall (lf6 : lst), @eq lst (rev lf6) (qreva lf6 Nil).
Lemma candidate_24: forall (lf2 : lst), @eq lst (rev lf2) (qreva lf2 Nil).
Lemma candidate_16: forall (lf4 : lst), @eq lst (qreva (rev lf4) Nil) lf4.
Lemma candidate_15: forall (lf4 : lst), @eq lst (rev (qreva lf4 Nil)) lf4.
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_255: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_257: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_27: forall (lf4 : lst), @eq lst (rev (rev (rev (rev lf4)))) lf4.
Lemma candidate_21: forall (lf2 : lst), @eq lst (rev lf2) (rev (rev (rev lf2))).
Lemma candidate_14: forall (lf4 : lst), @eq lst (qreva (qreva lf4 Nil) Nil) lf4.
Lemma candidate_2: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_125: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (rev (rev x))).
Lemma candidate_49: forall (lf3 : lst) (x : lst), @eq lst (rev (qreva x lf3)) (qreva lf3 x).
Lemma candidate_41: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (rev (qreva lf3 x)).
Lemma candidate_29: forall (lf4 : lst), @eq lst (rev (lfappend (rev lf4) Nil)) lf4.
Lemma candidate_28: forall (lf4 : lst), @eq lst (rev (rev (lfappend lf4 Nil))) lf4.
Lemma candidate_23: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (rev lf2) Nil).
Lemma candidate_254: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_126: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_60: forall (lf7 : lst) (y : lst), @eq lst (qreva (rev y) lf7) (lfappend y lf7).
Lemma candidate_42: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) lf3).
Lemma candidate_12: forall (lf7 : lst) (y : lst), @eq lst (lfappend y lf7) (qreva (rev y) lf7).
Lemma candidate_123: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (qreva x (Cons n Nil))).
Lemma candidate_122: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (qreva (rev x) Nil)).
Lemma candidate_39: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (rev (rev lf3))).
Lemma candidate_301: forall (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf8) (qreva lf6 lf8).
Lemma candidate_215: forall (lf5 : lst) (lf8 : lst), @eq lst (lfappend lf5 lf8) (qreva (rev lf5) lf8).
Lemma candidate_26: forall (lf4 : lst), @eq lst (rev (lfappend (qreva lf4 Nil) Nil)) lf4.
Lemma candidate_20: forall (lf2 : lst), @eq lst (rev lf2) (lfappend (qreva lf2 Nil) Nil).
Lemma candidate_48: forall (lf3 : lst) (x : lst), @eq lst (rev (qreva x lf3)) (lfappend (rev lf3) x).
Lemma candidate_40: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (lfappend lf3 Nil)).
Lemma candidate_78: forall (lf7 : lst) (y : lst), @eq lst (rev (rev (lfappend y lf7))) (lfappend y lf7).
Lemma candidate_57: forall (lf7 : lst) (y : lst), @eq lst (lfappend y (rev (rev lf7))) (lfappend y lf7).
Lemma candidate_45: forall (lf3 : lst) (x : lst), @eq lst (rev (qreva x lf3)) (qreva lf3 (rev (rev x))).
Lemma candidate_9: forall (lf7 : lst) (y : lst), @eq lst (lfappend y lf7) (lfappend y (rev (rev lf7))).
Lemma candidate_297: forall (lf8 : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) lf8) (rev (qreva lf8 lf6)).
Lemma candidate_367: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev y)) (qreva lf6 (rev y)).
Lemma candidate_243: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev y)) (qreva (rev lf5) (rev y)).
Lemma candidate_124: forall (n : natural) (x : lst), @eq lst (Cons n x) (rev (lfappend (rev x) (Cons n Nil))).
Lemma candidate_76: forall (lf7 : lst) (y : lst), @eq lst (rev (qreva lf7 (qreva y Nil))) (lfappend y lf7).
Lemma candidate_58: forall (lf7 : lst) (y : lst), @eq lst (lfappend y (lfappend lf7 Nil)) (lfappend y lf7).
Lemma candidate_46: forall (lf3 : lst) (x : lst), @eq lst (rev (qreva x lf3)) (qreva lf3 (lfappend x Nil)).
Lemma candidate_10: forall (lf7 : lst) (y : lst), @eq lst (lfappend y lf7) (lfappend y (lfappend lf7 Nil)).
Lemma candidate_138: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva (rev y) (Cons n x)) (lfappend y (Cons n x)).
Lemma candidate_120: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (qreva (rev y) (Cons n x)).
Lemma candidate_365: forall (y : lst) (lf6 : lst), @eq lst (lfappend (rev lf6) (rev y)) (rev (lfappend y lf6)).
Lemma candidate_244: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev y)) (rev (lfappend y (rev lf5))).
Lemma candidate_77: forall (lf7 : lst) (y : lst), @eq lst (rev (lfappend (rev lf7) (rev y))) (lfappend y lf7).
Lemma candidate_74: forall (lf7 : lst) (y : lst), @eq lst (rev (qreva (lfappend y lf7) Nil)) (lfappend y lf7).
Lemma candidate_56: forall (lf7 : lst) (y : lst), @eq lst (qreva (rev y) (lfappend lf7 Nil)) (lfappend y lf7).
Lemma candidate_38: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_8: forall (lf7 : lst) (y : lst), @eq lst (lfappend y lf7) (qreva (rev y) (lfappend lf7 Nil)).
Lemma candidate_218: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (qreva x (lfappend lf5 lf8)) (qreva (qreva lf5 x) lf8).
Lemma candidate_219: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (qreva x (lfappend lf5 lf8)) (lfappend (qreva x lf5) lf8).
Lemma candidate_75: forall (lf7 : lst) (y : lst), @eq lst (rev (lfappend (rev lf7) (qreva y Nil))) (lfappend y lf7).
Lemma candidate_44: forall (lf3 : lst) (x : lst), @eq lst (rev (qreva x lf3)) (lfappend (rev lf3) (lfappend x Nil)).
Lemma candidate_450: forall (n : natural) (lf8 : lst), @eq lst (lfappend (rev (Cons n Nil)) lf8) (Cons n (rev (rev lf8))).
Lemma candidate_327: forall (n : natural) (lf9 : lst) (lf8 : lst), @eq lst (lfappend (rev (Cons n lf9)) lf8) (qreva lf9 (Cons n lf8)).
Lemma candidate_161: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (rev (lfappend y (Cons n x)))) (lfappend y (Cons n x)).
Lemma candidate_134: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (rev (rev x)))) (lfappend y (Cons n x)).
Lemma candidate_116: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_486: forall (n : natural) (y : lst), @eq lst (lfappend (rev (Cons n Nil)) (rev y)) (Cons n (qreva y Nil)).
Lemma candidate_295: forall (x : lst) (lf8 : lst) (lf6 : lst), @eq lst (qreva x (lfappend (rev lf6) lf8)) (qreva x (qreva lf6 lf8)).
Lemma candidate_229: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend lf5 lf8))) (qreva lf8 (qreva lf5 x)).
Lemma candidate_451: forall (n : natural) (lf8 : lst), @eq lst (lfappend (rev (Cons n Nil)) lf8) (Cons n (lfappend lf8 Nil)).
Lemma candidate_160: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (rev (qreva (rev y) (Cons n x)))) (lfappend y (Cons n x)).
Lemma candidate_159: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (Cons n (qreva y Nil)))) (lfappend y (Cons n x)).
Lemma candidate_135: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n (lfappend x Nil))) (lfappend y (Cons n x)).
Lemma candidate_117: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_224: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend lf5 lf8))) (qreva (lfappend lf5 lf8) x).
Lemma candidate_447: forall (n : natural) (lf8 : lst), @eq lst (lfappend (rev (Cons n Nil)) lf8) (Cons n (qreva (rev lf8) Nil)).
Lemma candidate_261: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend lf5 (rev y))) (rev (lfappend y (qreva lf5 x))).
Lemma candidate_136: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (rev x) (Cons n (rev y)))) (lfappend y (Cons n x)).
Lemma candidate_118: forall (n : natural) (y : lst) (x : lst), @eq lst (lfappend y (Cons n x)) (rev (lfappend (rev x) (Cons n (rev y)))).
Lemma candidate_284: forall (x : lst) (lf8 : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) lf8))) (qreva (qreva lf6 lf8) x).
Lemma candidate_220: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (qreva x (lfappend lf5 lf8)) (lfappend (rev x) (lfappend lf5 lf8)).
Lemma candidate_373: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva x (lfappend (rev lf6) (rev y))) (qreva x (qreva lf6 (rev y))).
Lemma candidate_251: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (qreva x (lfappend lf5 (rev y)))) (qreva (rev y) (qreva lf5 x)).
Lemma candidate_485: forall (n : natural) (y : lst), @eq lst (lfappend (rev (Cons n Nil)) (rev y)) (Cons n (lfappend (rev y) Nil)).
Lemma candidate_293: forall (x : lst) (lf8 : lst) (lf6 : lst), @eq lst (qreva x (lfappend (rev lf6) lf8)) (lfappend (rev x) (qreva lf6 lf8)).
Lemma candidate_288: forall (x : lst) (lf8 : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) lf8))) (qreva lf8 (lfappend lf6 x)).
Lemma candidate_285: forall (x : lst) (lf8 : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) lf8))) (lfappend (qreva lf8 lf6) x).
Lemma candidate_227: forall (x : lst) (lf5 : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend lf5 lf8))) (lfappend (rev lf8) (qreva lf5 x)).
Lemma candidate_951: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (Cons n (lfappend (rev y) Nil))))   (lfappend y (Cons n x)).
Lemma candidate_949: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (rev (lfappend y (Cons n Nil)))))   (lfappend y (Cons n x)).
Lemma candidate_158: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (lfappend (qreva x Nil) (Cons n (rev y))))   (lfappend y (Cons n x)).
Lemma candidate_467: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) lf8)))   (qreva lf8 (Cons n x)).
Lemma candidate_457: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) lf8))   (rev (qreva lf8 (Cons n x))).
Lemma candidate_449: forall (n : natural) (lf8 : lst), @eq lst (lfappend (rev (Cons n Nil)) lf8)   (rev (lfappend (rev lf8) (Cons n Nil))).
Lemma candidate_948: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (rev (qreva (rev y) (Cons n Nil)))))   (lfappend y (Cons n x)).
Lemma candidate_381: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) (rev y))))   (lfappend (lfappend y lf6) x).
Lemma candidate_368: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva x (lfappend (rev lf6) (rev y)))   (rev (lfappend y (lfappend lf6 x))).
Lemma candidate_262: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (qreva x (lfappend lf5 (rev y)))   (lfappend (rev x) (lfappend lf5 (rev y))).
Lemma candidate_248: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (qreva x (lfappend lf5 (rev y))))   (lfappend (lfappend y (rev lf5)) x).
Lemma candidate_458: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) lf8))   (lfappend (rev x) (Cons n lf8)).
Lemma candidate_497: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) (rev y)))   (rev (lfappend y (Cons n x))).
Lemma candidate_382: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) (rev y))))   (qreva (rev y) (lfappend lf6 x)).
Lemma candidate_371: forall (y : lst) (x : lst) (lf6 : lst), @eq lst (qreva x (lfappend (rev lf6) (rev y)))   (lfappend (rev x) (qreva lf6 (rev y))).
Lemma candidate_454: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) lf8))   (qreva x (Cons n (rev (rev lf8)))).
Lemma candidate_286: forall (x : lst) (lf8 : lst) (lf6 : lst), @eq lst (rev (qreva x (lfappend (rev lf6) lf8)))   (lfappend (rev lf8) (lfappend lf6 x)).
Lemma candidate_496: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) (rev y)))   (rev (qreva (rev y) (Cons n x))).
Lemma candidate_495: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) (rev y)))   (qreva x (Cons n (qreva y Nil))).
Lemma candidate_492: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) (rev y))))   (qreva (rev y) (Cons n x)).
Lemma candidate_484: forall (n : natural) (y : lst), @eq lst (lfappend (rev (Cons n Nil)) (rev y))   (rev (lfappend (rev (rev y)) (Cons n Nil))).
Lemma candidate_466: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) lf8)))   (lfappend (rev lf8) (Cons n x)).
Lemma candidate_456: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) lf8))   (rev (lfappend (rev lf8) (Cons n x))).
Lemma candidate_455: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) lf8))   (qreva x (Cons n (lfappend lf8 Nil))).
Lemma candidate_950: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (rev (lfappend (rev (rev y)) (Cons n Nil)))))   (lfappend y (Cons n x)).
Lemma candidate_498: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) (rev y)))   (lfappend (rev x) (Cons n (rev y))).
Lemma candidate_462: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) lf8)))   (qreva lf8 (Cons n (rev (rev x)))).
Lemma candidate_464: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) lf8)))   (rev (lfappend (rev x) (Cons n lf8))).
Lemma candidate_463: forall (n : natural) (x : lst) (lf8 : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) lf8)))   (qreva lf8 (Cons n (lfappend x Nil))).
Lemma candidate_494: forall (n : natural) (y : lst) (x : lst), @eq lst (qreva x (lfappend (rev (Cons n Nil)) (rev y)))   (lfappend (qreva x Nil) (Cons n (rev y))).
Lemma candidate_488: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) (rev y))))   (lfappend y (Cons n (rev (rev x)))).
Lemma candidate_489: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) (rev y))))   (lfappend y (Cons n (lfappend x Nil))).
Lemma candidate_490: forall (n : natural) (y : lst) (x : lst), @eq lst (rev (qreva x (lfappend (rev (Cons n Nil)) (rev y))))   (rev (lfappend (rev x) (Cons n (rev y)))).
File Information
- File name: goal82
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal82_theorem0_71_rev_rev
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal82_theorem0_71_rev_rev
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x y0 : lst, @eq lst (qreva (qreva x (rev y0)) Nil) (lfappend y0 x).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith. 

Proof Context
* Goal State: @eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil)

* Hypothesis:
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
y : lst

* Terms:
@eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil) : Prop
lfappend y Nil : lst
lfappend (rev (rev y)) Nil : lst
rev (rev y) : lst
lst : Set
y : lst
Nil : lst
rev y : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev (rev y)
lf1 : lst = lfappend (rev (rev y)) Nil
lf4 : lst = rev y
lf5 : lst = Nil
lf2 : lst = lfappend y Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj2: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y Nil).
Lemma conj9: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) lf2.
Lemma conj10: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) (lfappend y lf5).
Lemma conj11: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) lf2.
Lemma conj12: forall (y : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend y Nil).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) lf5) lf2.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend y lf5).
Lemma conj27: forall (lf2 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) lf2.
Lemma conj28: forall (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend y Nil).
Lemma conj29: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf5) lf2.
Lemma conj30: forall (lf5 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y lf5).
Lemma conj31: forall (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) Nil) lf2.
Lemma conj32: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil).


<---VALIDITY CHECKS--->
Time elapsed: 58 seconds
Valid:
Lemma conj32: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil).
Lemma conj30: forall (lf5 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y lf5).

Invalid:
Lemma conj31: forall (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) Nil) lf2.
Lemma conj29: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf5) lf2.
Lemma conj28: forall (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend y Nil).
Lemma conj27: forall (lf2 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) lf2.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend y lf5).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) lf5) lf2.
Lemma conj12: forall (y : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend y Nil).
Lemma conj11: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) lf2.
Lemma conj10: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) (lfappend y lf5).
Lemma conj9: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) lf2.
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y Nil).
Lemma conj2: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 59 seconds
Generalizations:
Lemma conj31: forall (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) Nil) lf2.
Lemma conj29: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf5) lf2.
Lemma conj28: forall (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend y Nil).
Lemma conj27: forall (lf2 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) lf2.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend y lf5).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) lf5) lf2.
Lemma conj12: forall (y : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend y Nil).
Lemma conj11: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) lf2.
Lemma conj10: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) (lfappend y lf5).
Lemma conj9: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) lf2.
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y Nil).
Lemma conj2: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 79 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj2: forall (lf5 : lst) (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y lf5).
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst lf1 (lfappend y Nil).
Lemma conj9: forall (lf2 : lst) (lf5 : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) lf2.
Lemma conj10: forall (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (lfappend lf3 lf5) (lfappend y lf5).
Lemma conj11: forall (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) lf2.
Lemma conj12: forall (y : lst) (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend y Nil).
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) lf5) lf2.
Lemma conj26: forall (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend y lf5).
Lemma conj27: forall (lf2 : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) lf2.
Lemma conj28: forall (lf4 : lst) (y : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend y Nil).
Lemma conj29: forall (lf2 : lst) (lf5 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) lf5) lf2.
Lemma conj31: forall (lf2 : lst) (y : lst), @eq lst (lfappend (rev (rev y)) Nil) lf2.


<---CREATE SKETCHES--->
Time elapsed: 79 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq lst (lfappend y lf5) (##hole##)
Sketch conj4_sketch0 : @eq lst lf1 (##hole##)
Sketch conj4_sketch1 : @eq lst lf1 (lfappend y (##hole##))
Sketch conj4_term_sketch0 : @eq lst (lfappend y Nil) (##hole##)
Sketch conj4_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj9_sketch0 : @eq lst (##hole##) lf2
Sketch conj9_term_sketch0 : @eq lst (lfappend lf3 lf5) (##hole##)
Sketch conj10_sketch0 : @eq lst (##hole##) (lfappend y lf5)
Sketch conj10_sketch1 : @eq lst (lfappend lf3 lf5) (##hole##)
Sketch conj10_term_sketch0 : @eq lst (lfappend lf3 lf5) (##hole##)
Sketch conj10_term_sketch1 : @eq lst (lfappend y lf5) (##hole##)
Sketch conj11_sketch0 : @eq lst (##hole##) lf2
Sketch conj11_sketch1 : @eq lst (lfappend lf3 (##hole##)) lf2
Sketch conj11_term_sketch0 : @eq lst (lfappend lf3 Nil) (##hole##)
Sketch conj11_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj12_sketch0 : @eq lst (##hole##) (lfappend y Nil)
Sketch conj12_sketch1 : @eq lst (lfappend lf3 Nil) (##hole##)
Sketch conj12_sketch2 : @eq lst (lfappend lf3 (##hole##)) (lfappend y (##hole##))
Sketch conj12_term_sketch0 : @eq lst (lfappend lf3 Nil) (##hole##)
Sketch conj12_term_sketch1 : @eq lst (lfappend y Nil) (##hole##)
Sketch conj12_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj25_sketch0 : @eq lst (##hole##) lf2
Sketch conj25_sketch1 : @eq lst (lfappend (##hole##) lf5) lf2
Sketch conj25_term_sketch0 : @eq lst (lfappend (rev lf4) lf5) (##hole##)
Sketch conj25_term_sketch1 : @eq lst (rev lf4) (##hole##)
Sketch conj26_sketch0 : @eq lst (##hole##) (lfappend y lf5)
Sketch conj26_sketch1 : @eq lst (lfappend (rev lf4) lf5) (##hole##)
Sketch conj26_sketch2 : @eq lst (lfappend (##hole##) lf5) (lfappend y lf5)
Sketch conj26_term_sketch0 : @eq lst (lfappend (rev lf4) lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq lst (lfappend y lf5) (##hole##)
Sketch conj26_term_sketch2 : @eq lst (rev lf4) (##hole##)
Sketch conj27_sketch0 : @eq lst (##hole##) lf2
Sketch conj27_sketch1 : @eq lst (lfappend (rev lf4) (##hole##)) lf2
Sketch conj27_sketch2 : @eq lst (lfappend (##hole##) Nil) lf2
Sketch conj27_term_sketch0 : @eq lst (lfappend (rev lf4) Nil) (##hole##)
Sketch conj27_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj27_term_sketch2 : @eq lst (rev lf4) (##hole##)
Sketch conj28_sketch0 : @eq lst (##hole##) (lfappend y Nil)
Sketch conj28_sketch1 : @eq lst (lfappend (rev lf4) Nil) (##hole##)
Sketch conj28_sketch2 : @eq lst (lfappend (rev lf4) (##hole##)) (lfappend y (##hole##))
Sketch conj28_sketch3 : @eq lst (lfappend (##hole##) Nil) (lfappend y Nil)
Sketch conj28_term_sketch0 : @eq lst (lfappend (rev lf4) Nil) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (lfappend y Nil) (##hole##)
Sketch conj28_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj28_term_sketch3 : @eq lst (rev lf4) (##hole##)
Sketch conj29_sketch0 : @eq lst (##hole##) lf2
Sketch conj29_sketch1 : @eq lst (lfappend (##hole##) lf5) lf2
Sketch conj29_sketch2 : @eq lst (lfappend (rev (##hole##)) lf5) lf2
Sketch conj29_term_sketch0 : @eq lst (lfappend (rev (rev y)) lf5) (##hole##)
Sketch conj29_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj29_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj31_sketch0 : @eq lst (##hole##) lf2
Sketch conj31_sketch1 : @eq lst (lfappend (##hole##) Nil) lf2
Sketch conj31_sketch2 : @eq lst (lfappend (rev (rev y)) (##hole##)) lf2
Sketch conj31_sketch3 : @eq lst (lfappend (rev (##hole##)) Nil) lf2
Sketch conj31_term_sketch0 : @eq lst (lfappend (rev (rev y)) Nil) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (rev (rev y)) (##hole##)
Sketch conj31_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj31_term_sketch3 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 475 seconds
Problems per Sketch:
Sketch conj12_sketch0 --> Problem  synth_4
Sketch conj28_sketch0 --> Problem  synth_4
Sketch conj26_term_sketch1 --> Problem  synth_2
Sketch conj27_term_sketch1 --> Problem  synth_5
Sketch conj26_sketch2 --> Problem  synth_2
Sketch conj25_sketch1 --> Problem  synth_11
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj10_term_sketch1 --> Problem  synth_2
Sketch conj29_term_sketch2 --> Problem  synth_17
Sketch conj25_term_sketch1 --> Problem  synth_13
Sketch conj26_sketch0 --> Problem  synth_2
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj11_sketch1 --> Problem  synth_8
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj28_term_sketch1 --> Problem  synth_4
Sketch conj31_sketch0 --> Problem  synth_6
Sketch conj12_term_sketch1 --> Problem  synth_4
Sketch conj9_sketch0 --> Problem  synth_6
Sketch conj31_term_sketch3 --> Problem  synth_17
Sketch conj26_term_sketch2 --> Problem  synth_13
Sketch conj31_term_sketch1 --> Problem  synth_4
Sketch conj12_term_sketch0 --> Problem  synth_9
Sketch conj26_sketch1 --> Problem  synth_12
Sketch conj29_term_sketch0 --> Problem  synth_2
Sketch conj31_term_sketch0 --> Problem  synth_4
Sketch conj28_term_sketch0 --> Problem  synth_13
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj10_sketch1 --> Problem  synth_7
Sketch conj9_term_sketch0 --> Problem  synth_7
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_13
Sketch conj27_sketch0 --> Problem  synth_6
Sketch conj12_sketch1 --> Problem  synth_9
Sketch conj27_term_sketch2 --> Problem  synth_13
Sketch conj12_sketch2 --> Problem  synth_10
Sketch conj10_term_sketch0 --> Problem  synth_7
Sketch conj29_sketch0 --> Problem  synth_6
Sketch conj28_sketch2 --> Problem  synth_15
Sketch conj11_term_sketch0 --> Problem  synth_9
Sketch conj28_sketch3 --> Problem  synth_4
Sketch conj25_sketch0 --> Problem  synth_6
Sketch conj26_term_sketch0 --> Problem  synth_12
Sketch conj28_sketch1 --> Problem  synth_13
Sketch conj27_sketch2 --> Problem  synth_6
Sketch conj4_sketch1 --> Problem  synth_3
Sketch conj28_term_sketch2 --> Problem  synth_5
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj31_sketch2 --> Problem  synth_18
Sketch conj27_sketch1 --> Problem  synth_14
Sketch conj31_sketch1 --> Problem  synth_6
Sketch conj31_term_sketch2 --> Problem  synth_5
Sketch conj29_term_sketch1 --> Problem  synth_4
Sketch conj11_sketch0 --> Problem  synth_6
Sketch conj31_sketch3 --> Problem  synth_19
Sketch conj27_term_sketch0 --> Problem  synth_13
Sketch conj12_term_sketch2 --> Problem  synth_5
Sketch conj29_sketch2 --> Problem  synth_16
Sketch conj25_term_sketch0 --> Problem  synth_12
Sketch conj10_sketch0 --> Problem  synth_2
Sketch conj29_sketch1 --> Problem  synth_11


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 593 seconds

Problem: synth_18
 Nil

Problem: synth_17
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_9
 qreva (qreva lf3 Nil) Nil
 rev (qreva lf3 Nil)
 qreva (rev lf3) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_13
 lfappend (qreva lf4 Nil) Nil
 rev (rev (rev lf4))
 rev (lfappend lf4 Nil)
 lfappend (rev lf4) Nil
 qreva lf4 Nil
 rev lf4

Problem: synth_6
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_11
 rev (rev lf2)
 lfappend lf2 lf5
 lfappend lf5 lf2
 qreva lf5 lf2
 lfappend lf2 Nil
 lf2

Problem: synth_7
 rev (rev lf3)
 lfappend lf5 lf3
 qreva lf5 lf3
 lfappend lf3 lf5
 lfappend lf3 Nil
 lf3

Problem: synth_4
 qreva (qreva y Nil) Nil
 rev (qreva y Nil)
 qreva (rev y) Nil
 rev (rev y)
 lfappend y Nil
 y

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_16
 qreva lf2 (rev lf5)
 lfappend lf5 (rev lf2)
 qreva lf5 (rev lf2)
 qreva lf2 lf5
 qreva lf2 Nil
 rev lf2

Problem: synth_19
 lfappend (qreva lf2 Nil) Nil
 rev (rev (rev lf2))
 rev (lfappend lf2 Nil)
 lfappend (rev lf2) Nil
 qreva lf2 Nil
 rev lf2

Problem: synth_15
 Nil

Problem: synth_14
 Nil

Problem: synth_10
 Nil

Problem: synth_8
 Nil

Problem: synth_3
 Nil

Problem: synth_12
 lfappend lf5 (rev lf4)
 qreva lf5 (rev lf4)
 qreva lf4 (rev lf5)
 qreva lf4 lf5
 qreva lf4 Nil
 rev lf4

Problem: synth_5
 Nil

Problem: synth_2
 rev (rev y)
 lfappend lf5 y
 qreva lf5 y
 lfappend y lf5
 lfappend y Nil
 y

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 593 seconds
Lemmas:
Lemma candidate_1: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil).
Lemma candidate_2: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y lf5).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_9: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (rev (rev y)).
Lemma candidate_10: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend lf5 y).
Lemma candidate_11: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (qreva lf5 y).
Lemma candidate_12: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y lf5).
Lemma candidate_13: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y Nil).
Lemma candidate_14: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (y).
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_20: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_21: forall (y : lst) (lf1 : lst), @eq lst lf1 (lfappend y (Nil)).
Lemma candidate_22: forall (y : lst), @eq lst (lfappend y Nil) (qreva (qreva y Nil) Nil).
Lemma candidate_23: forall (y : lst), @eq lst (lfappend y Nil) (rev (qreva y Nil)).
Lemma candidate_24: forall (y : lst), @eq lst (lfappend y Nil) (qreva (rev y) Nil).
Lemma candidate_25: forall (y : lst), @eq lst (lfappend y Nil) (rev (rev y)).
Lemma candidate_26: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_27: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_28: @eq lst Nil (Nil).
Lemma candidate_29: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_30: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_31: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_32: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_33: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_34: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_35: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (rev (rev lf3)).
Lemma candidate_36: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf5 lf3).
Lemma candidate_37: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (qreva lf5 lf3).
Lemma candidate_38: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf3 lf5).
Lemma candidate_39: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf3 Nil).
Lemma candidate_40: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lf3).
Lemma candidate_41: forall (y : lst) (lf5 : lst), @eq lst (rev (rev y)) (lfappend y lf5).
Lemma candidate_42: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend y lf5).
Lemma candidate_43: forall (y : lst) (lf5 : lst), @eq lst (qreva lf5 y) (lfappend y lf5).
Lemma candidate_44: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y lf5).
Lemma candidate_45: forall (y : lst) (lf5 : lst), @eq lst (lfappend y Nil) (lfappend y lf5).
Lemma candidate_46: forall (y : lst) (lf5 : lst), @eq lst (y) (lfappend y lf5).
Lemma candidate_47: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (rev (rev lf3)).
Lemma candidate_48: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf5 lf3).
Lemma candidate_49: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (qreva lf5 lf3).
Lemma candidate_50: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf3 lf5).
Lemma candidate_51: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf3 Nil).
Lemma candidate_52: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lf3).
Lemma candidate_53: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (rev (rev lf3)).
Lemma candidate_54: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf5 lf3).
Lemma candidate_55: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (qreva lf5 lf3).
Lemma candidate_56: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf3 lf5).
Lemma candidate_57: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lfappend lf3 Nil).
Lemma candidate_58: forall (lf3 : lst) (lf5 : lst), @eq lst (lfappend lf3 lf5) (lf3).
Lemma candidate_59: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (rev (rev y)).
Lemma candidate_60: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend lf5 y).
Lemma candidate_61: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (qreva lf5 y).
Lemma candidate_62: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y lf5).
Lemma candidate_63: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y Nil).
Lemma candidate_64: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (y).
Lemma candidate_65: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_66: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_67: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_68: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_69: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_70: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_71: forall (lf3 : lst) (lf2 : lst), @eq lst (lfappend lf3 (Nil)) lf2.
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_73: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_74: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (rev lf3) Nil).
Lemma candidate_75: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_76: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_77: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_78: @eq lst Nil (Nil).
Lemma candidate_79: forall (y : lst), @eq lst (qreva (qreva y Nil) Nil) (lfappend y Nil).
Lemma candidate_80: forall (y : lst), @eq lst (rev (qreva y Nil)) (lfappend y Nil).
Lemma candidate_81: forall (y : lst), @eq lst (qreva (rev y) Nil) (lfappend y Nil).
Lemma candidate_82: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_83: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_84: forall (y : lst), @eq lst (y) (lfappend y Nil).
Lemma candidate_85: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_86: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_87: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (rev lf3) Nil).
Lemma candidate_88: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_89: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_90: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_91: forall (lf3 : lst) (y : lst), @eq lst (lfappend lf3 (Nil)) (lfappend y (Nil)).
Lemma candidate_92: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_93: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_94: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (rev lf3) Nil).
Lemma candidate_95: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_96: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_97: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_98: forall (y : lst), @eq lst (lfappend y Nil) (qreva (qreva y Nil) Nil).
Lemma candidate_99: forall (y : lst), @eq lst (lfappend y Nil) (rev (qreva y Nil)).
Lemma candidate_100: forall (y : lst), @eq lst (lfappend y Nil) (qreva (rev y) Nil).
Lemma candidate_101: forall (y : lst), @eq lst (lfappend y Nil) (rev (rev y)).
Lemma candidate_102: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_103: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_104: @eq lst Nil (Nil).
Lemma candidate_105: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_106: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_107: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_108: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_109: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_110: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_111: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) lf5) lf2.
Lemma candidate_112: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf2 lf5) lf5) lf2.
Lemma candidate_113: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf5 lf2) lf5) lf2.
Lemma candidate_114: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (qreva lf5 lf2) lf5) lf2.
Lemma candidate_115: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) lf5) lf2.
Lemma candidate_116: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lf2) lf5) lf2.
Lemma candidate_117: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend lf5 (rev lf4)).
Lemma candidate_118: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf5 (rev lf4)).
Lemma candidate_119: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 (rev lf5)).
Lemma candidate_120: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 lf5).
Lemma candidate_121: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 Nil).
Lemma candidate_122: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (rev lf4).
Lemma candidate_123: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_124: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_125: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_126: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_127: forall (lf4 : lst), @eq lst (rev lf4) (qreva lf4 Nil).
Lemma candidate_128: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_129: forall (y : lst) (lf5 : lst), @eq lst (rev (rev y)) (lfappend y lf5).
Lemma candidate_130: forall (y : lst) (lf5 : lst), @eq lst (lfappend lf5 y) (lfappend y lf5).
Lemma candidate_131: forall (y : lst) (lf5 : lst), @eq lst (qreva lf5 y) (lfappend y lf5).
Lemma candidate_132: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y lf5).
Lemma candidate_133: forall (y : lst) (lf5 : lst), @eq lst (lfappend y Nil) (lfappend y lf5).
Lemma candidate_134: forall (y : lst) (lf5 : lst), @eq lst (y) (lfappend y lf5).
Lemma candidate_135: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend lf5 (rev lf4)).
Lemma candidate_136: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf5 (rev lf4)).
Lemma candidate_137: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 (rev lf5)).
Lemma candidate_138: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 lf5).
Lemma candidate_139: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 Nil).
Lemma candidate_140: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (rev lf4).
Lemma candidate_141: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y lf5).
Lemma candidate_142: forall (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend lf5 y) lf5) (lfappend y lf5).
Lemma candidate_143: forall (y : lst) (lf5 : lst), @eq lst (lfappend (qreva lf5 y) lf5) (lfappend y lf5).
Lemma candidate_144: forall (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend y lf5) lf5) (lfappend y lf5).
Lemma candidate_145: forall (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend y Nil) lf5) (lfappend y lf5).
Lemma candidate_146: forall (y : lst) (lf5 : lst), @eq lst (lfappend (y) lf5) (lfappend y lf5).
Lemma candidate_147: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (lfappend lf5 (rev lf4)).
Lemma candidate_148: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf5 (rev lf4)).
Lemma candidate_149: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 (rev lf5)).
Lemma candidate_150: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 lf5).
Lemma candidate_151: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 Nil).
Lemma candidate_152: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (rev lf4).
Lemma candidate_153: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (rev (rev y)).
Lemma candidate_154: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend lf5 y).
Lemma candidate_155: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (qreva lf5 y).
Lemma candidate_156: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y lf5).
Lemma candidate_157: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (lfappend y Nil).
Lemma candidate_158: forall (y : lst) (lf5 : lst), @eq lst (lfappend y lf5) (y).
Lemma candidate_159: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_160: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_161: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_162: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_163: forall (lf4 : lst), @eq lst (rev lf4) (qreva lf4 Nil).
Lemma candidate_164: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_165: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_166: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_167: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_168: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_169: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_170: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_171: forall (lf4 : lst) (lf2 : lst), @eq lst (lfappend (rev lf4) (Nil)) lf2.
Lemma candidate_172: forall (lf2 : lst), @eq lst (lfappend (qreva (qreva lf2 Nil) Nil) Nil) lf2.
Lemma candidate_173: forall (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 Nil)) Nil) lf2.
Lemma candidate_174: forall (lf2 : lst), @eq lst (lfappend (qreva (rev lf2) Nil) Nil) lf2.
Lemma candidate_175: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_176: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_177: forall (lf2 : lst), @eq lst (lfappend (lf2) Nil) lf2.
Lemma candidate_178: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_179: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (rev (rev lf4))).
Lemma candidate_180: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (lfappend lf4 Nil)).
Lemma candidate_181: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (rev lf4) Nil).
Lemma candidate_182: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (qreva lf4 Nil).
Lemma candidate_183: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev lf4).
Lemma candidate_184: @eq lst Nil (Nil).
Lemma candidate_185: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_186: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_187: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_188: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_189: forall (lf4 : lst), @eq lst (rev lf4) (qreva lf4 Nil).
Lemma candidate_190: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_191: forall (y : lst), @eq lst (qreva (qreva y Nil) Nil) (lfappend y Nil).
Lemma candidate_192: forall (y : lst), @eq lst (rev (qreva y Nil)) (lfappend y Nil).
Lemma candidate_193: forall (y : lst), @eq lst (qreva (rev y) Nil) (lfappend y Nil).
Lemma candidate_194: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_195: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_196: forall (y : lst), @eq lst (y) (lfappend y Nil).
Lemma candidate_197: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_198: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (rev (rev lf4))).
Lemma candidate_199: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (lfappend lf4 Nil)).
Lemma candidate_200: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (rev lf4) Nil).
Lemma candidate_201: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (qreva lf4 Nil).
Lemma candidate_202: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev lf4).
Lemma candidate_203: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev lf4) (Nil)) (lfappend y (Nil)).
Lemma candidate_204: forall (y : lst), @eq lst (lfappend (qreva (qreva y Nil) Nil) Nil) (lfappend y Nil).
Lemma candidate_205: forall (y : lst), @eq lst (lfappend (rev (qreva y Nil)) Nil) (lfappend y Nil).
Lemma candidate_206: forall (y : lst), @eq lst (lfappend (qreva (rev y) Nil) Nil) (lfappend y Nil).
Lemma candidate_207: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil).
Lemma candidate_208: forall (y : lst), @eq lst (lfappend (lfappend y Nil) Nil) (lfappend y Nil).
Lemma candidate_209: forall (y : lst), @eq lst (lfappend (y) Nil) (lfappend y Nil).
Lemma candidate_210: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_211: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (rev (rev lf4))).
Lemma candidate_212: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (lfappend lf4 Nil)).
Lemma candidate_213: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (rev lf4) Nil).
Lemma candidate_214: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (qreva lf4 Nil).
Lemma candidate_215: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev lf4).
Lemma candidate_216: forall (y : lst), @eq lst (lfappend y Nil) (qreva (qreva y Nil) Nil).
Lemma candidate_217: forall (y : lst), @eq lst (lfappend y Nil) (rev (qreva y Nil)).
Lemma candidate_218: forall (y : lst), @eq lst (lfappend y Nil) (qreva (rev y) Nil).
Lemma candidate_219: forall (y : lst), @eq lst (lfappend y Nil) (rev (rev y)).
Lemma candidate_220: forall (y : lst), @eq lst (lfappend y Nil) (lfappend y Nil).
Lemma candidate_221: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_222: @eq lst Nil (Nil).
Lemma candidate_223: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_224: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_225: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_226: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_227: forall (lf4 : lst), @eq lst (rev lf4) (qreva lf4 Nil).
Lemma candidate_228: forall (lf4 : lst), @eq lst (rev lf4) (rev lf4).
Lemma candidate_229: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_230: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_231: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_232: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_233: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_234: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_235: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) lf5) lf2.
Lemma candidate_236: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf2 lf5) lf5) lf2.
Lemma candidate_237: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf5 lf2) lf5) lf2.
Lemma candidate_238: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (qreva lf5 lf2) lf5) lf2.
Lemma candidate_239: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) lf5) lf2.
Lemma candidate_240: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (lf2) lf5) lf2.
Lemma candidate_241: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 (rev lf5))) lf5) lf2.
Lemma candidate_242: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (lfappend lf5 (rev lf2))) lf5) lf2.
Lemma candidate_243: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (qreva lf5 (rev lf2))) lf5) lf2.
Lemma candidate_244: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 lf5)) lf5) lf2.
Lemma candidate_245: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 Nil)) lf5) lf2.
Lemma candidate_246: forall (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) lf5) lf2.
Lemma candidate_247: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (rev (rev y)).
Lemma candidate_248: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend lf5 y).
Lemma candidate_249: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (qreva lf5 y).
Lemma candidate_250: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y lf5).
Lemma candidate_251: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y Nil).
Lemma candidate_252: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (y).
Lemma candidate_253: forall (y : lst), @eq lst (rev (rev y)) (qreva (qreva y Nil) Nil).
Lemma candidate_254: forall (y : lst), @eq lst (rev (rev y)) (rev (qreva y Nil)).
Lemma candidate_255: forall (y : lst), @eq lst (rev (rev y)) (qreva (rev y) Nil).
Lemma candidate_256: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_257: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_258: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_259: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_260: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_261: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_262: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_263: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_264: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_265: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_266: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_267: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_268: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_269: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_270: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_271: forall (lf2 : lst), @eq lst (lfappend (qreva (qreva lf2 Nil) Nil) Nil) lf2.
Lemma candidate_272: forall (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 Nil)) Nil) lf2.
Lemma candidate_273: forall (lf2 : lst), @eq lst (lfappend (qreva (rev lf2) Nil) Nil) lf2.
Lemma candidate_274: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_275: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_276: forall (lf2 : lst), @eq lst (lfappend (lf2) Nil) lf2.
Lemma candidate_277: forall (y : lst) (lf2 : lst), @eq lst (lfappend (rev (rev y)) (Nil)) lf2.
Lemma candidate_278: forall (lf2 : lst), @eq lst (lfappend (rev (lfappend (qreva lf2 Nil) Nil)) Nil) lf2.
Lemma candidate_279: forall (lf2 : lst), @eq lst (lfappend (rev (rev (rev (rev lf2)))) Nil) lf2.
Lemma candidate_280: forall (lf2 : lst), @eq lst (lfappend (rev (rev (lfappend lf2 Nil))) Nil) lf2.
Lemma candidate_281: forall (lf2 : lst), @eq lst (lfappend (rev (lfappend (rev lf2) Nil)) Nil) lf2.
Lemma candidate_282: forall (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 Nil)) Nil) lf2.
Lemma candidate_283: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_284: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (qreva (qreva y Nil) Nil).
Lemma candidate_285: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (rev (qreva y Nil)).
Lemma candidate_286: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (qreva (rev y) Nil).
Lemma candidate_287: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (rev (rev y)).
Lemma candidate_288: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (lfappend y Nil).
Lemma candidate_289: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (y).
Lemma candidate_290: forall (y : lst), @eq lst (rev (rev y)) (qreva (qreva y Nil) Nil).
Lemma candidate_291: forall (y : lst), @eq lst (rev (rev y)) (rev (qreva y Nil)).
Lemma candidate_292: forall (y : lst), @eq lst (rev (rev y)) (qreva (rev y) Nil).
Lemma candidate_293: forall (y : lst), @eq lst (rev (rev y)) (rev (rev y)).
Lemma candidate_294: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_295: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_296: @eq lst Nil (Nil).
Lemma candidate_297: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_298: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_299: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_300: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_301: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_302: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 988 seconds
Duplicates removed: 178
Filtered by Quickchick: 45
Filtered by script: 16
Remaining: 63

Lemmas: 
Lemma candidate_258: forall (y : lst), @eq lst (rev (rev y)) (y).
Lemma candidate_32: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_84: forall (y : lst), @eq lst (y) (lfappend y Nil).
Lemma candidate_27: forall (y : lst), @eq lst (lfappend y Nil) (y).
Lemma candidate_263: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_33: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_177: forall (lf2 : lst), @eq lst (lfappend (lf2) Nil) lf2.
Lemma candidate_77: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_127: forall (lf4 : lst), @eq lst (rev lf4) (qreva lf4 Nil).
Lemma candidate_31: forall (lf2 : lst), @eq lst (qreva (rev lf2) Nil) lf2.
Lemma candidate_30: forall (lf2 : lst), @eq lst (rev (qreva lf2 Nil)) lf2.
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (qreva (rev lf1) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (rev (qreva lf1 Nil)).
Lemma candidate_260: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_262: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_261: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_82: forall (y : lst), @eq lst (rev (rev y)) (lfappend y Nil).
Lemma candidate_25: forall (y : lst), @eq lst (lfappend y Nil) (rev (rev y)).
Lemma candidate_124: forall (lf4 : lst), @eq lst (rev lf4) (rev (rev (rev lf4))).
Lemma candidate_29: forall (lf2 : lst), @eq lst (qreva (qreva lf2 Nil) Nil) lf2.
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (qreva (qreva lf1 Nil) Nil).
Lemma candidate_289: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (y).
Lemma candidate_255: forall (y : lst), @eq lst (rev (rev y)) (qreva (rev y) Nil).
Lemma candidate_254: forall (y : lst), @eq lst (rev (rev y)) (rev (qreva y Nil)).
Lemma candidate_183: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev lf4).
Lemma candidate_175: forall (lf2 : lst), @eq lst (lfappend (rev (rev lf2)) Nil) lf2.
Lemma candidate_126: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (rev lf4) Nil).
Lemma candidate_125: forall (lf4 : lst), @eq lst (rev lf4) (rev (lfappend lf4 Nil)).
Lemma candidate_75: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_259: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_80: forall (y : lst), @eq lst (rev (qreva y Nil)) (lfappend y Nil).
Lemma candidate_23: forall (y : lst), @eq lst (lfappend y Nil) (rev (qreva y Nil)).
Lemma candidate_176: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_253: forall (y : lst), @eq lst (rev (rev y)) (qreva (qreva y Nil) Nil).
Lemma candidate_182: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (qreva lf4 Nil).
Lemma candidate_174: forall (lf2 : lst), @eq lst (lfappend (qreva (rev lf2) Nil) Nil) lf2.
Lemma candidate_173: forall (lf2 : lst), @eq lst (lfappend (rev (qreva lf2 Nil)) Nil) lf2.
Lemma candidate_123: forall (lf4 : lst), @eq lst (rev lf4) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_120: forall (lf4 : lst) (lf5 : lst), @eq lst (lfappend (rev lf4) lf5) (qreva lf4 lf5).
Lemma candidate_73: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_287: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (rev (rev y)).
Lemma candidate_79: forall (y : lst), @eq lst (qreva (qreva y Nil) Nil) (lfappend y Nil).
Lemma candidate_22: forall (y : lst), @eq lst (lfappend y Nil) (qreva (qreva y Nil) Nil).
Lemma candidate_2: forall (y : lst) (lf5 : lst), @eq lst (lfappend (rev (rev y)) lf5) (lfappend y lf5).
Lemma candidate_279: forall (lf2 : lst), @eq lst (lfappend (rev (rev (rev (rev lf2)))) Nil) lf2.
Lemma candidate_179: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (rev (rev lf4))).
Lemma candidate_172: forall (lf2 : lst), @eq lst (lfappend (qreva (qreva lf2 Nil) Nil) Nil) lf2.
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_286: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (qreva (rev y) Nil).
Lemma candidate_285: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (rev (qreva y Nil)).
Lemma candidate_208: forall (y : lst), @eq lst (lfappend (lfappend y Nil) Nil) (lfappend y Nil).
Lemma candidate_145: forall (y : lst) (lf5 : lst), @eq lst (lfappend (lfappend y Nil) lf5) (lfappend y lf5).
Lemma candidate_281: forall (lf2 : lst), @eq lst (lfappend (rev (lfappend (rev lf2) Nil)) Nil) lf2.
Lemma candidate_280: forall (lf2 : lst), @eq lst (lfappend (rev (rev (lfappend lf2 Nil))) Nil) lf2.
Lemma candidate_180: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (rev (lfappend lf4 Nil)).
Lemma candidate_206: forall (y : lst), @eq lst (lfappend (qreva (rev y) Nil) Nil) (lfappend y Nil).
Lemma candidate_205: forall (y : lst), @eq lst (lfappend (rev (qreva y Nil)) Nil) (lfappend y Nil).
Lemma candidate_284: forall (y : lst), @eq lst (lfappend (rev (rev y)) Nil) (qreva (qreva y Nil) Nil).
Lemma candidate_278: forall (lf2 : lst), @eq lst (lfappend (rev (lfappend (qreva lf2 Nil) Nil)) Nil) lf2.
Lemma candidate_178: forall (lf4 : lst), @eq lst (lfappend (rev lf4) Nil) (lfappend (qreva lf4 Nil) Nil).
Lemma candidate_204: forall (y : lst), @eq lst (lfappend (qreva (qreva y Nil) Nil) Nil) (lfappend y Nil).
File Information
- File name: goal86
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal86_theorem0_113_mult_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal86_theorem0_113_mult_assoc
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 y0 z0 : natural, @eq natural (mult (exp x0 y0) z0) (qexp x0 y0 z0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) (mult z x))

* Hypothesis:
x : natural
y : natural
z : natural
IHy : forall z0 : natural, @eq natural (mult (exp x y) z0) (qexp x y z0)

* Types:
Set
natural
Prop

* Polymorphic Types:


* Variables:
x : natural
y : natural
z : natural

* Terms:
mult z x : natural
mult (exp x y) _UNBOUND_REL_1 : natural
@eq natural (mult (exp x y) _UNBOUND_REL_1) (qexp x y _UNBOUND_REL_1) : Prop
mult (exp x y) x : natural
qexp x y _UNBOUND_REL_1 : natural
x : natural
y : natural
exp x y : natural
mult (exp x y) (mult z x) : natural
mult (mult (exp x y) x) z : natural
z : natural
@eq natural (mult (mult (exp x y) x) z) (mult (exp x y) (mult z x)) : Prop
natural : Set
forall z0 : natural, @eq natural (mult (exp x y) z0) (qexp x y z0) : Prop

* Functions:
exp  : forall (_ : natural) (_ : natural), natural
mult  : forall (_ : natural) (_ : natural), natural
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
qexp  : forall (_ : natural) (_ : natural) (_ : natural), natural

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : natural = mult (exp x y) x
lf1 : natural = mult (exp x y) (mult z x)
lf4 : natural = mult z x
lf5 : natural = exp x y
lf2 : natural = mult (mult (exp x y) x) z

Generalizations:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj2: forall (lf1 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) lf1.
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (mult lf5 lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 lf4).
Lemma conj11: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural lf2 (mult (exp x y) lf4).
Lemma conj12: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) lf4).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (x : natural) (z : natural), @eq natural lf2 (mult lf5 (mult z x)).
Lemma conj14: forall (lf5 : natural) (x : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 (mult z x)).
Lemma conj15: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (mult (exp x y) (mult z x)).
Lemma conj16: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) (mult z x)).
Lemma conj18: forall (lf5 : natural) (x : natural) (lf1 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) lf1.
Lemma conj20: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) lf1.
Lemma conj26: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 lf4).
Lemma conj28: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) lf4).
Lemma conj30: forall (lf5 : natural) (x : natural) (z : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 (mult z x)).
Lemma conj32: forall (x : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) (mult z x)).


<---VALIDITY CHECKS--->
Time elapsed: 30 seconds
Valid:
Lemma conj32: forall (x : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) (mult z x)).
Lemma conj30: forall (lf5 : natural) (x : natural) (z : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 (mult z x)).

Invalid:
Lemma conj28: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) lf4).
Lemma conj26: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 lf4).
Lemma conj20: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) lf1.
Lemma conj18: forall (lf5 : natural) (x : natural) (lf1 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) lf1.
Lemma conj16: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) (mult z x)).
Lemma conj15: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (mult (exp x y) (mult z x)).
Lemma conj14: forall (lf5 : natural) (x : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 (mult z x)).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (x : natural) (z : natural), @eq natural lf2 (mult lf5 (mult z x)).
Lemma conj12: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) lf4).
Lemma conj11: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural lf2 (mult (exp x y) lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 lf4).
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (mult lf5 lf4).
Lemma conj2: forall (lf1 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 43 seconds
Generalizations:
Lemma conj28: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) lf4).
Lemma conj26: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 lf4).
Lemma conj20: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) lf1.
Lemma conj18: forall (lf5 : natural) (x : natural) (lf1 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) lf1.
Lemma conj16: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) (mult z x)).
Lemma conj15: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (mult (exp x y) (mult z x)).
Lemma conj14: forall (lf5 : natural) (x : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 (mult z x)).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (x : natural) (z : natural), @eq natural lf2 (mult lf5 (mult z x)).
Lemma conj12: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) lf4).
Lemma conj11: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural lf2 (mult (exp x y) lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 lf4).
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (mult lf5 lf4).
Lemma conj2: forall (lf1 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) lf1.
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 62 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : natural) (lf1 : natural), @eq natural lf2 lf1.
Lemma conj2: forall (lf1 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) lf1.
Lemma conj9: forall (lf2 : natural) (lf5 : natural) (lf4 : natural), @eq natural lf2 (mult lf5 lf4).
Lemma conj10: forall (lf5 : natural) (lf4 : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 lf4).
Lemma conj11: forall (lf2 : natural) (x : natural) (lf4 : natural) (y : natural), @eq natural lf2 (mult (exp x y) lf4).
Lemma conj12: forall (x : natural) (lf4 : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) lf4).
Lemma conj13: forall (lf2 : natural) (lf5 : natural) (x : natural) (z : natural), @eq natural lf2 (mult lf5 (mult z x)).
Lemma conj14: forall (lf5 : natural) (x : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult lf5 (mult z x)).
Lemma conj15: forall (lf2 : natural) (x : natural) (y : natural) (z : natural), @eq natural lf2 (mult (exp x y) (mult z x)).
Lemma conj16: forall (x : natural) (y : natural) (z : natural) (lf3 : natural), @eq natural (mult lf3 z) (mult (exp x y) (mult z x)).
Lemma conj18: forall (lf5 : natural) (x : natural) (lf1 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) lf1.
Lemma conj20: forall (x : natural) (lf1 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) lf1.
Lemma conj26: forall (lf5 : natural) (x : natural) (lf4 : natural) (z : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 lf4).
Lemma conj28: forall (x : natural) (lf4 : natural) (y : natural) (z : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) lf4).


<---CREATE SKETCHES--->
Time elapsed: 63 seconds
Sketches:
Sketch conj2_sketch0 : @eq natural (##hole##) lf1
Sketch conj2_term_sketch0 : @eq natural (mult lf3 z) (##hole##)
Sketch conj9_sketch0 : @eq natural lf2 (##hole##)
Sketch conj9_term_sketch0 : @eq natural (mult lf5 lf4) (##hole##)
Sketch conj10_sketch0 : @eq natural (##hole##) (mult lf5 lf4)
Sketch conj10_sketch1 : @eq natural (mult lf3 z) (##hole##)
Sketch conj10_term_sketch0 : @eq natural (mult lf3 z) (##hole##)
Sketch conj10_term_sketch1 : @eq natural (mult lf5 lf4) (##hole##)
Sketch conj11_sketch0 : @eq natural lf2 (mult (##hole##) lf4)
Sketch conj11_sketch1 : @eq natural lf2 (##hole##)
Sketch conj11_term_sketch0 : @eq natural (exp x y) (##hole##)
Sketch conj11_term_sketch1 : @eq natural (mult (exp x y) lf4) (##hole##)
Sketch conj12_sketch0 : @eq natural (##hole##) (mult (exp x y) lf4)
Sketch conj12_sketch1 : @eq natural (mult lf3 z) (mult (##hole##) lf4)
Sketch conj12_sketch2 : @eq natural (mult lf3 z) (##hole##)
Sketch conj12_term_sketch0 : @eq natural (mult lf3 z) (##hole##)
Sketch conj12_term_sketch1 : @eq natural (exp x y) (##hole##)
Sketch conj12_term_sketch2 : @eq natural (mult (exp x y) lf4) (##hole##)
Sketch conj13_sketch0 : @eq natural lf2 (mult lf5 (##hole##))
Sketch conj13_sketch1 : @eq natural lf2 (##hole##)
Sketch conj13_term_sketch0 : @eq natural (mult z x) (##hole##)
Sketch conj13_term_sketch1 : @eq natural (mult lf5 (mult z x)) (##hole##)
Sketch conj14_sketch0 : @eq natural (##hole##) (mult lf5 (mult z x))
Sketch conj14_sketch1 : @eq natural (mult lf3 z) (mult lf5 (##hole##))
Sketch conj14_sketch2 : @eq natural (mult lf3 z) (##hole##)
Sketch conj14_term_sketch0 : @eq natural (mult lf3 z) (##hole##)
Sketch conj14_term_sketch1 : @eq natural (mult z x) (##hole##)
Sketch conj14_term_sketch2 : @eq natural (mult lf5 (mult z x)) (##hole##)
Sketch conj15_sketch0 : @eq natural lf2 (mult (exp x y) (##hole##))
Sketch conj15_sketch1 : @eq natural lf2 (mult (##hole##) (mult z x))
Sketch conj15_sketch2 : @eq natural lf2 (##hole##)
Sketch conj15_term_sketch0 : @eq natural (mult z x) (##hole##)
Sketch conj15_term_sketch1 : @eq natural (exp x y) (##hole##)
Sketch conj15_term_sketch2 : @eq natural (mult (exp x y) (mult z x)) (##hole##)
Sketch conj16_sketch0 : @eq natural (##hole##) (mult (exp x y) (mult z x))
Sketch conj16_sketch1 : @eq natural (mult lf3 z) (mult (exp x y) (##hole##))
Sketch conj16_sketch2 : @eq natural (mult lf3 z) (mult (##hole##) (mult z x))
Sketch conj16_sketch3 : @eq natural (mult lf3 z) (##hole##)
Sketch conj16_term_sketch0 : @eq natural (mult lf3 z) (##hole##)
Sketch conj16_term_sketch1 : @eq natural (mult z x) (##hole##)
Sketch conj16_term_sketch2 : @eq natural (exp x y) (##hole##)
Sketch conj16_term_sketch3 : @eq natural (mult (exp x y) (mult z x)) (##hole##)
Sketch conj18_sketch0 : @eq natural (##hole##) lf1
Sketch conj18_sketch1 : @eq natural (mult (##hole##) z) lf1
Sketch conj18_term_sketch0 : @eq natural (mult (mult lf5 x) z) (##hole##)
Sketch conj18_term_sketch1 : @eq natural (mult lf5 x) (##hole##)
Sketch conj20_sketch0 : @eq natural (mult (##hole##) z) lf1
Sketch conj20_sketch1 : @eq natural (mult (mult (##hole##) x) z) lf1
Sketch conj20_sketch2 : @eq natural (##hole##) lf1
Sketch conj20_term_sketch0 : @eq natural (mult (exp x y) x) (##hole##)
Sketch conj20_term_sketch1 : @eq natural (exp x y) (##hole##)
Sketch conj20_term_sketch2 : @eq natural (mult (mult (exp x y) x) z) (##hole##)
Sketch conj26_sketch0 : @eq natural (mult (mult lf5 x) z) (##hole##)
Sketch conj26_sketch1 : @eq natural (##hole##) (mult lf5 lf4)
Sketch conj26_sketch2 : @eq natural (mult (##hole##) z) (mult lf5 lf4)
Sketch conj26_term_sketch0 : @eq natural (mult lf5 lf4) (##hole##)
Sketch conj26_term_sketch1 : @eq natural (mult (mult lf5 x) z) (##hole##)
Sketch conj26_term_sketch2 : @eq natural (mult lf5 x) (##hole##)
Sketch conj28_sketch0 : @eq natural (mult (##hole##) z) (mult (exp x y) lf4)
Sketch conj28_sketch1 : @eq natural (mult (mult (##hole##) x) z) (mult (##hole##) lf4)
Sketch conj28_sketch2 : @eq natural (##hole##) (mult (exp x y) lf4)
Sketch conj28_sketch3 : @eq natural (mult (mult (exp x y) x) z) (##hole##)
Sketch conj28_term_sketch0 : @eq natural (mult (exp x y) x) (##hole##)
Sketch conj28_term_sketch1 : @eq natural (exp x y) (##hole##)
Sketch conj28_term_sketch2 : @eq natural (mult (mult (exp x y) x) z) (##hole##)
Sketch conj28_term_sketch3 : @eq natural (mult (exp x y) lf4) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 147 seconds
Problems per Sketch:
Sketch conj12_sketch0 --> Problem  synth_7
Sketch conj28_sketch0 --> Problem  synth_23
Sketch conj16_sketch3 --> Problem  synth_2
Sketch conj26_sketch2 --> Problem  synth_22
Sketch conj11_term_sketch1 --> Problem  synth_7
Sketch conj15_term_sketch2 --> Problem  synth_15
Sketch conj16_term_sketch1 --> Problem  synth_10
Sketch conj14_term_sketch2 --> Problem  synth_11
Sketch conj20_term_sketch2 --> Problem  synth_15
Sketch conj11_sketch1 --> Problem  synth_3
Sketch conj13_term_sketch1 --> Problem  synth_11
Sketch conj28_term_sketch1 --> Problem  synth_6
Sketch conj26_term_sketch2 --> Problem  synth_19
Sketch conj14_term_sketch1 --> Problem  synth_10
Sketch conj12_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch1 --> Problem  synth_2
Sketch conj9_term_sketch0 --> Problem  synth_4
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_7
Sketch conj16_sketch1 --> Problem  synth_16
Sketch conj12_sketch1 --> Problem  synth_8
Sketch conj12_sketch2 --> Problem  synth_2
Sketch conj28_sketch2 --> Problem  synth_7
Sketch conj11_term_sketch0 --> Problem  synth_6
Sketch conj20_sketch0 --> Problem  synth_18
Sketch conj26_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch2 --> Problem  synth_6
Sketch conj20_term_sketch0 --> Problem  synth_21
Sketch conj13_term_sketch0 --> Problem  synth_10
Sketch conj18_term_sketch1 --> Problem  synth_19
Sketch conj28_term_sketch2 --> Problem  synth_15
Sketch conj12_term_sketch2 --> Problem  synth_7
Sketch conj10_sketch0 --> Problem  synth_4
Sketch conj14_sketch1 --> Problem  synth_12
Sketch conj18_sketch1 --> Problem  synth_18
Sketch conj15_sketch1 --> Problem  synth_14
Sketch conj26_term_sketch1 --> Problem  synth_11
Sketch conj14_sketch2 --> Problem  synth_2
Sketch conj15_term_sketch1 --> Problem  synth_6
Sketch conj16_sketch2 --> Problem  synth_17
Sketch conj10_term_sketch1 --> Problem  synth_4
Sketch conj20_sketch2 --> Problem  synth_1
Sketch conj26_sketch0 --> Problem  synth_11
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj12_term_sketch1 --> Problem  synth_6
Sketch conj9_sketch0 --> Problem  synth_3
Sketch conj20_sketch1 --> Problem  synth_20
Sketch conj26_sketch1 --> Problem  synth_4
Sketch conj28_term_sketch0 --> Problem  synth_21
Sketch conj18_sketch0 --> Problem  synth_1
Sketch conj20_term_sketch1 --> Problem  synth_6
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj15_sketch2 --> Problem  synth_3
Sketch conj28_sketch3 --> Problem  synth_15
Sketch conj18_term_sketch0 --> Problem  synth_11
Sketch conj28_sketch1 --> Problem  synth_24
Sketch conj15_sketch0 --> Problem  synth_13
Sketch conj16_sketch0 --> Problem  synth_15
Sketch conj13_sketch1 --> Problem  synth_3
Sketch conj14_sketch0 --> Problem  synth_11
Sketch conj14_term_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch0 --> Problem  synth_2
Sketch conj13_sketch0 --> Problem  synth_9
Sketch conj16_term_sketch3 --> Problem  synth_15
Sketch conj11_sketch0 --> Problem  synth_5
Sketch conj15_term_sketch0 --> Problem  synth_10


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 508 seconds

Problem: synth_22

Problem: synth_20

Problem: synth_18

Problem: synth_17

Problem: synth_21
 qexp x y x
 mult (exp x y) x

Problem: synth_9

Problem: synth_13

Problem: synth_6
 exp x (plus y Zero)
 qexp x y (Succ Zero)
 exp x y

Problem: synth_11
 mult z (mult lf5 x)
 mult x (mult z lf5)
 mult z (mult x lf5)

Problem: synth_7

Problem: synth_4
 mult lf5 lf4
 mult lf4 lf5

Problem: synth_1
 mult lf1 (Succ Zero)
 plus lf1 Zero
 lf1

Problem: synth_23

Problem: synth_16
 qexp z y (mult x z)
 mult x z
 mult z x

Problem: synth_19
 mult lf5 (plus x Zero)
 mult x (plus lf5 Zero)
 mult lf5 x
 mult x lf5

Problem: synth_15
 qexp x y (mult z x)

Problem: synth_14

Problem: synth_10
 mult x (plus z Zero)
 mult z (plus x Zero)
 mult x z
 mult z x

Problem: synth_8

Problem: synth_24

Problem: synth_3
 mult lf2 (Succ Zero)
 plus lf2 Zero
 lf2

Problem: synth_12

Problem: synth_5

Problem: synth_2
 mult z (plus lf3 Zero)
 mult lf3 (plus z Zero)
 mult z lf3
 mult lf3 z

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 508 seconds
Lemmas:
Lemma candidate_1: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult (exp x y) x) z) (mult (exp x y) (mult z x)).
Lemma candidate_2: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 (mult z x)).
Lemma candidate_3: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_4: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_5: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_6: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_7: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_8: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_9: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_10: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_11: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_12: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_13: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf5 lf4).
Lemma candidate_14: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf4 lf5).
Lemma candidate_15: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf5 lf4).
Lemma candidate_16: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf4 lf5) (mult lf5 lf4).
Lemma candidate_17: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_18: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_19: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_20: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_21: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_22: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_23: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_24: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_25: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf5 lf4).
Lemma candidate_26: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf4 lf5).
Lemma candidate_27: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_28: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_29: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_32: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_33: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_34: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_35: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_36: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_37: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_38: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_39: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_40: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_41: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_42: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_43: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_44: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_45: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_46: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_47: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x (plus z Zero)).
Lemma candidate_48: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z (plus x Zero)).
Lemma candidate_49: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x z).
Lemma candidate_50: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z x).
Lemma candidate_51: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult z (mult lf5 x)).
Lemma candidate_52: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult x (mult z lf5)).
Lemma candidate_53: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult z (mult x lf5)).
Lemma candidate_54: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult z (mult lf5 x)) (mult lf5 (mult z x)).
Lemma candidate_55: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult x (mult z lf5)) (mult lf5 (mult z x)).
Lemma candidate_56: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult z (mult x lf5)) (mult lf5 (mult z x)).
Lemma candidate_57: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_58: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_59: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_60: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_61: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_62: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_63: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_64: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_65: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x (plus z Zero)).
Lemma candidate_66: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z (plus x Zero)).
Lemma candidate_67: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x z).
Lemma candidate_68: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z x).
Lemma candidate_69: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult z (mult lf5 x)).
Lemma candidate_70: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult x (mult z lf5)).
Lemma candidate_71: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult z (mult x lf5)).
Lemma candidate_72: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_73: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_74: forall (lf2 : natural), @eq natural lf2 (lf2).
Lemma candidate_75: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x (plus z Zero)).
Lemma candidate_76: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z (plus x Zero)).
Lemma candidate_77: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x z).
Lemma candidate_78: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z x).
Lemma candidate_79: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_80: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_81: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_82: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (exp x y) (mult z x)) (qexp x y (mult z x)).
Lemma candidate_83: forall (z : natural) (y : natural) (x : natural), @eq natural (qexp x y (mult z x)) (mult (exp x y) (mult z x)).
Lemma candidate_84: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult lf3 z) (mult (exp x y) (qexp z y (mult x z))).
Lemma candidate_85: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult lf3 z) (mult (exp x y) (mult x z)).
Lemma candidate_86: forall (lf3 : natural) (z : natural) (y : natural) (x : natural), @eq natural (mult lf3 z) (mult (exp x y) (mult z x)).
Lemma candidate_87: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_88: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_89: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_90: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_91: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_92: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_93: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_94: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 z).
Lemma candidate_95: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x (plus z Zero)).
Lemma candidate_96: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z (plus x Zero)).
Lemma candidate_97: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x z).
Lemma candidate_98: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z x).
Lemma candidate_99: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_100: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_101: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_102: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (exp x y) (mult z x)) (qexp x y (mult z x)).
Lemma candidate_103: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_104: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_105: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_106: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult lf5 x)).
Lemma candidate_107: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult x (mult z lf5)).
Lemma candidate_108: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult x lf5)).
Lemma candidate_109: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 (plus x Zero)).
Lemma candidate_110: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x (plus lf5 Zero)).
Lemma candidate_111: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 x).
Lemma candidate_112: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_113: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_114: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_115: forall (lf1 : natural), @eq natural (lf1) lf1.
Lemma candidate_116: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_117: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (mult (exp x y) x).
Lemma candidate_118: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_119: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_120: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_121: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult (exp x y) x) z) (qexp x y (mult z x)).
Lemma candidate_122: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult lf5 x)).
Lemma candidate_123: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult x (mult z lf5)).
Lemma candidate_124: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult x lf5)).
Lemma candidate_125: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf5 lf4).
Lemma candidate_126: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf4 lf5) (mult lf5 lf4).
Lemma candidate_127: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf5 lf4).
Lemma candidate_128: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf4 lf5).
Lemma candidate_129: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult lf5 x)).
Lemma candidate_130: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult x (mult z lf5)).
Lemma candidate_131: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult x lf5)).
Lemma candidate_132: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 (plus x Zero)).
Lemma candidate_133: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x (plus lf5 Zero)).
Lemma candidate_134: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 x).
Lemma candidate_135: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_136: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult (exp x y) x) z) (qexp x y (mult z x)).
Lemma candidate_137: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (qexp x y x).
Lemma candidate_138: forall (y : natural) (x : natural), @eq natural (mult (exp x y) x) (mult (exp x y) x).
Lemma candidate_139: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_140: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_141: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x y).
Lemma candidate_142: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult (exp x y) x) z) (qexp x y (mult z x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 577 seconds
Duplicates removed: 100
Filtered by Quickchick: 3
Filtered by script: 11
Remaining: 28

Lemmas: 
Lemma candidate_11: forall (lf2 : natural), @eq natural lf2 (plus lf2 Zero).
Lemma candidate_4: forall (lf1 : natural), @eq natural (plus lf1 Zero) lf1.
Lemma candidate_49: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x z).
Lemma candidate_112: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x lf5).
Lemma candidate_8: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z lf3).
Lemma candidate_10: forall (lf2 : natural), @eq natural lf2 (mult lf2 (Succ Zero)).
Lemma candidate_3: forall (lf1 : natural), @eq natural (mult lf1 (Succ Zero)) lf1.
Lemma candidate_16: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf4 lf5) (mult lf5 lf4).
Lemma candidate_14: forall (lf4 : natural) (lf5 : natural), @eq natural (mult lf5 lf4) (mult lf4 lf5).
Lemma candidate_30: forall (y : natural) (x : natural), @eq natural (exp x y) (exp x (plus y Zero)).
Lemma candidate_31: forall (y : natural) (x : natural), @eq natural (exp x y) (qexp x y (Succ Zero)).
Lemma candidate_48: forall (z : natural) (x : natural), @eq natural (mult z x) (mult z (plus x Zero)).
Lemma candidate_47: forall (z : natural) (x : natural), @eq natural (mult z x) (mult x (plus z Zero)).
Lemma candidate_110: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult x (plus lf5 Zero)).
Lemma candidate_109: forall (x : natural) (lf5 : natural), @eq natural (mult lf5 x) (mult lf5 (plus x Zero)).
Lemma candidate_7: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult lf3 (plus z Zero)).
Lemma candidate_6: forall (lf3 : natural) (z : natural), @eq natural (mult lf3 z) (mult z (plus lf3 Zero)).
Lemma candidate_108: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult x lf5)).
Lemma candidate_107: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult x (mult z lf5)).
Lemma candidate_106: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult z (mult lf5 x)).
Lemma candidate_56: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult z (mult x lf5)) (mult lf5 (mult z x)).
Lemma candidate_55: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult x (mult z lf5)) (mult lf5 (mult z x)).
Lemma candidate_54: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult z (mult lf5 x)) (mult lf5 (mult z x)).
Lemma candidate_53: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult z (mult x lf5)).
Lemma candidate_52: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult x (mult z lf5)).
Lemma candidate_51: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult lf5 (mult z x)) (mult z (mult lf5 x)).
Lemma candidate_2: forall (z : natural) (x : natural) (lf5 : natural), @eq natural (mult (mult lf5 x) z) (mult lf5 (mult z x)).
Lemma candidate_121: forall (z : natural) (y : natural) (x : natural), @eq natural (mult (mult (exp x y) x) z) (qexp x y (mult z x)).
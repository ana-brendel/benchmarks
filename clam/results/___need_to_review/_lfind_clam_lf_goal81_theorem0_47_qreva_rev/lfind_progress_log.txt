File Information
- File name: goal81
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal81_theorem0_47_qreva_rev
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal81_theorem0_47_qreva_rev
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x y0 : lst, @eq lst (qreva (qreva x y0) Nil) (lfappend (rev y0) x).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (qreva y Nil) (lfappend (rev y) Nil)

* Hypothesis:
y : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
y : lst

* Terms:
@eq lst (qreva y Nil) (lfappend (rev y) Nil) : Prop
lfappend (rev y) Nil : lst
qreva y Nil : lst
lst : Set
y : lst
Nil : lst
rev y : lst

* Functions:
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
qreva  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = rev y
lf1 : lst = lfappend (rev y) Nil
lf4 : lst = Nil
lf2 : lst = qreva y Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst (qreva y lf4) lf1.
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj5: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf4).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf4) (lfappend lf3 lf4).
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 Nil).
Lemma conj8: forall (y : lst) (lf3 : lst), @eq lst (qreva y Nil) (lfappend lf3 Nil).
Lemma conj13: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) lf4).
Lemma conj14: forall (lf4 : lst) (y : lst), @eq lst (qreva y lf4) (lfappend (rev y) lf4).
Lemma conj15: forall (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) Nil).
Lemma conj16: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).


<---VALIDITY CHECKS--->
Time elapsed: 34 seconds
Valid:
Lemma conj16: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma conj14: forall (lf4 : lst) (y : lst), @eq lst (qreva y lf4) (lfappend (rev y) lf4).

Invalid:
Lemma conj15: forall (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) Nil).
Lemma conj13: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) lf4).
Lemma conj8: forall (y : lst) (lf3 : lst), @eq lst (qreva y Nil) (lfappend lf3 Nil).
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 Nil).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf4) (lfappend lf3 lf4).
Lemma conj5: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf4).
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst (qreva y lf4) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 34 seconds
Generalizations:
Lemma conj15: forall (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) Nil).
Lemma conj13: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) lf4).
Lemma conj8: forall (y : lst) (lf3 : lst), @eq lst (qreva y Nil) (lfappend lf3 Nil).
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 Nil).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf4) (lfappend lf3 lf4).
Lemma conj5: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf4).
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst (qreva y lf4) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 47 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (lf4 : lst) (lf1 : lst) (y : lst), @eq lst (qreva y lf4) lf1.
Lemma conj4: forall (lf1 : lst) (y : lst), @eq lst (qreva y Nil) lf1.
Lemma conj5: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 lf4).
Lemma conj6: forall (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (qreva y lf4) (lfappend lf3 lf4).
Lemma conj7: forall (lf2 : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 Nil).
Lemma conj8: forall (y : lst) (lf3 : lst), @eq lst (qreva y Nil) (lfappend lf3 Nil).
Lemma conj13: forall (lf2 : lst) (lf4 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) lf4).
Lemma conj15: forall (lf2 : lst) (y : lst), @eq lst lf2 (lfappend (rev y) Nil).


<---CREATE SKETCHES--->
Time elapsed: 47 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst (##hole##) lf1
Sketch conj2_term_sketch0 : @eq lst (qreva y lf4) (##hole##)
Sketch conj4_sketch0 : @eq lst (##hole##) lf1
Sketch conj4_sketch1 : @eq lst (qreva y (##hole##)) lf1
Sketch conj4_term_sketch0 : @eq lst (qreva y Nil) (##hole##)
Sketch conj4_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj5_sketch0 : @eq lst lf2 (##hole##)
Sketch conj5_term_sketch0 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj6_sketch0 : @eq lst (##hole##) (lfappend lf3 lf4)
Sketch conj6_sketch1 : @eq lst (qreva y lf4) (##hole##)
Sketch conj6_term_sketch0 : @eq lst (qreva y lf4) (##hole##)
Sketch conj6_term_sketch1 : @eq lst (lfappend lf3 lf4) (##hole##)
Sketch conj7_sketch0 : @eq lst lf2 (##hole##)
Sketch conj7_sketch1 : @eq lst lf2 (lfappend lf3 (##hole##))
Sketch conj7_term_sketch0 : @eq lst (lfappend lf3 Nil) (##hole##)
Sketch conj7_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj8_sketch0 : @eq lst (qreva y Nil) (##hole##)
Sketch conj8_sketch1 : @eq lst (##hole##) (lfappend lf3 Nil)
Sketch conj8_sketch2 : @eq lst (qreva y (##hole##)) (lfappend lf3 (##hole##))
Sketch conj8_term_sketch0 : @eq lst (lfappend lf3 Nil) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (qreva y Nil) (##hole##)
Sketch conj8_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj13_sketch0 : @eq lst lf2 (##hole##)
Sketch conj13_sketch1 : @eq lst lf2 (lfappend (##hole##) lf4)
Sketch conj13_term_sketch0 : @eq lst (lfappend (rev y) lf4) (##hole##)
Sketch conj13_term_sketch1 : @eq lst (rev y) (##hole##)
Sketch conj15_sketch0 : @eq lst lf2 (##hole##)
Sketch conj15_sketch1 : @eq lst lf2 (lfappend (rev y) (##hole##))
Sketch conj15_sketch2 : @eq lst lf2 (lfappend (##hole##) Nil)
Sketch conj15_term_sketch0 : @eq lst (lfappend (rev y) Nil) (##hole##)
Sketch conj15_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj15_term_sketch2 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 179 seconds
Problems per Sketch:
Sketch conj15_sketch1 --> Problem  synth_12
Sketch conj7_sketch1 --> Problem  synth_8
Sketch conj6_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_6
Sketch conj15_sketch2 --> Problem  synth_6
Sketch conj15_term_sketch1 --> Problem  synth_5
Sketch conj15_term_sketch2 --> Problem  synth_4
Sketch conj7_term_sketch0 --> Problem  synth_9
Sketch conj13_term_sketch0 --> Problem  synth_2
Sketch conj15_sketch0 --> Problem  synth_6
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj8_sketch1 --> Problem  synth_9
Sketch conj7_sketch0 --> Problem  synth_6
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj6_term_sketch0 --> Problem  synth_2
Sketch conj4_sketch1 --> Problem  synth_3
Sketch conj13_sketch1 --> Problem  synth_11
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj13_term_sketch1 --> Problem  synth_4
Sketch conj8_term_sketch0 --> Problem  synth_9
Sketch conj13_sketch0 --> Problem  synth_6
Sketch conj8_sketch2 --> Problem  synth_10
Sketch conj8_sketch0 --> Problem  synth_4
Sketch conj7_term_sketch1 --> Problem  synth_5
Sketch conj8_term_sketch1 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch2 --> Problem  synth_5
Sketch conj15_term_sketch0 --> Problem  synth_4
Sketch conj5_term_sketch0 --> Problem  synth_7
Sketch conj6_sketch0 --> Problem  synth_7
Sketch conj2_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 261 seconds

Problem: synth_10
 Nil

Problem: synth_8
 Nil

Problem: synth_3
 Nil

Problem: synth_9
 qreva (qreva lf3 Nil) Nil
 rev (qreva lf3 Nil)
 qreva (rev lf3) Nil
 rev (rev lf3)
 lfappend lf3 Nil
 lf3

Problem: synth_12
 Nil

Problem: synth_6
 qreva (qreva lf2 Nil) Nil
 rev (qreva lf2 Nil)
 qreva (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_11
 rev (rev lf2)
 lfappend lf2 lf4
 lfappend lf4 lf2
 qreva lf4 lf2
 lfappend lf2 Nil
 lf2

Problem: synth_7
 rev (rev lf3)
 lfappend lf4 lf3
 qreva lf4 lf3
 lfappend lf3 lf4
 lfappend lf3 Nil
 lf3

Problem: synth_5
 Nil

Problem: synth_4
 lfappend (qreva y Nil) Nil
 rev (rev (rev y))
 rev (lfappend y Nil)
 lfappend (rev y) Nil
 qreva y Nil
 rev y

Problem: synth_1
 qreva (qreva lf1 Nil) Nil
 rev (qreva lf1 Nil)
 qreva (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_2
 lfappend lf4 (rev y)
 qreva lf4 (rev y)
 qreva y (rev lf4)
 qreva y lf4
 qreva y Nil
 rev y

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 261 seconds
Lemmas:
Lemma candidate_1: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_2: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (rev y) lf4).
Lemma candidate_3: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_8: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_9: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend lf4 (rev y)).
Lemma candidate_10: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva lf4 (rev y)).
Lemma candidate_11: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y (rev lf4)).
Lemma candidate_12: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y lf4).
Lemma candidate_13: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y Nil).
Lemma candidate_14: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (rev y).
Lemma candidate_15: forall (lf1 : lst), @eq lst (qreva (qreva lf1 Nil) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_17: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_20: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_21: forall (y : lst) (lf1 : lst), @eq lst (qreva y (Nil)) lf1.
Lemma candidate_22: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_23: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_24: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_25: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_26: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_27: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_28: @eq lst Nil (Nil).
Lemma candidate_29: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_30: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_31: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_32: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_33: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_34: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_35: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (rev lf3)).
Lemma candidate_36: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf4 lf3).
Lemma candidate_37: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva lf4 lf3).
Lemma candidate_38: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_39: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 Nil).
Lemma candidate_40: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lf3).
Lemma candidate_41: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (rev lf3)) (lfappend lf3 lf4).
Lemma candidate_42: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (lfappend lf3 lf4).
Lemma candidate_43: forall (lf3 : lst) (lf4 : lst), @eq lst (qreva lf4 lf3) (lfappend lf3 lf4).
Lemma candidate_44: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_45: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 lf4).
Lemma candidate_46: forall (lf3 : lst) (lf4 : lst), @eq lst (lf3) (lfappend lf3 lf4).
Lemma candidate_47: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend lf4 (rev y)).
Lemma candidate_48: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva lf4 (rev y)).
Lemma candidate_49: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y (rev lf4)).
Lemma candidate_50: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y lf4).
Lemma candidate_51: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y Nil).
Lemma candidate_52: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (rev y).
Lemma candidate_53: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend lf4 (rev y)).
Lemma candidate_54: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva lf4 (rev y)).
Lemma candidate_55: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y (rev lf4)).
Lemma candidate_56: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y lf4).
Lemma candidate_57: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (qreva y Nil).
Lemma candidate_58: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (rev y).
Lemma candidate_59: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (rev (rev lf3)).
Lemma candidate_60: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf4 lf3).
Lemma candidate_61: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (qreva lf4 lf3).
Lemma candidate_62: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 lf4).
Lemma candidate_63: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lfappend lf3 Nil).
Lemma candidate_64: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf3 lf4) (lf3).
Lemma candidate_65: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_66: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_67: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_68: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_69: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_70: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_71: forall (lf3 : lst) (lf2 : lst), @eq lst lf2 (lfappend lf3 (Nil)).
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_73: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_74: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (rev lf3) Nil).
Lemma candidate_75: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_76: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_77: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_78: @eq lst Nil (Nil).
Lemma candidate_79: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_80: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_81: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_82: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_83: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_84: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_85: forall (lf3 : lst), @eq lst (qreva (qreva lf3 Nil) Nil) (lfappend lf3 Nil).
Lemma candidate_86: forall (lf3 : lst), @eq lst (rev (qreva lf3 Nil)) (lfappend lf3 Nil).
Lemma candidate_87: forall (lf3 : lst), @eq lst (qreva (rev lf3) Nil) (lfappend lf3 Nil).
Lemma candidate_88: forall (lf3 : lst), @eq lst (rev (rev lf3)) (lfappend lf3 Nil).
Lemma candidate_89: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_90: forall (lf3 : lst), @eq lst (lf3) (lfappend lf3 Nil).
Lemma candidate_91: forall (lf3 : lst) (y : lst), @eq lst (qreva y (Nil)) (lfappend lf3 (Nil)).
Lemma candidate_92: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_93: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_94: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (rev lf3) Nil).
Lemma candidate_95: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_96: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lfappend lf3 Nil).
Lemma candidate_97: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_98: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_99: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_100: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_101: forall (y : lst), @eq lst (qreva y Nil) (lfappend (rev y) Nil).
Lemma candidate_102: forall (y : lst), @eq lst (qreva y Nil) (qreva y Nil).
Lemma candidate_103: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_104: @eq lst Nil (Nil).
Lemma candidate_105: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_106: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_107: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_108: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_109: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_110: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_111: forall (lf4 : lst) (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) lf4).
Lemma candidate_112: forall (lf4 : lst) (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 lf4) lf4).
Lemma candidate_113: forall (lf4 : lst) (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf4 lf2) lf4).
Lemma candidate_114: forall (lf4 : lst) (lf2 : lst), @eq lst lf2 (lfappend (qreva lf4 lf2) lf4).
Lemma candidate_115: forall (lf4 : lst) (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) lf4).
Lemma candidate_116: forall (lf4 : lst) (lf2 : lst), @eq lst lf2 (lfappend (lf2) lf4).
Lemma candidate_117: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (lfappend lf4 (rev y)).
Lemma candidate_118: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (qreva lf4 (rev y)).
Lemma candidate_119: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (qreva y (rev lf4)).
Lemma candidate_120: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (qreva y lf4).
Lemma candidate_121: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (qreva y Nil).
Lemma candidate_122: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (rev y).
Lemma candidate_123: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_124: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_125: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_126: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_127: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_128: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_129: forall (lf2 : lst), @eq lst lf2 (qreva (qreva lf2 Nil) Nil).
Lemma candidate_130: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_131: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_132: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_133: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_134: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_135: forall (y : lst) (lf2 : lst), @eq lst lf2 (lfappend (rev y) (Nil)).
Lemma candidate_136: forall (lf2 : lst), @eq lst lf2 (lfappend (qreva (qreva lf2 Nil) Nil) Nil).
Lemma candidate_137: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (qreva lf2 Nil)) Nil).
Lemma candidate_138: forall (lf2 : lst), @eq lst lf2 (lfappend (qreva (rev lf2) Nil) Nil).
Lemma candidate_139: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_140: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_141: forall (lf2 : lst), @eq lst lf2 (lfappend (lf2) Nil).
Lemma candidate_142: forall (y : lst), @eq lst (lfappend (rev y) Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_143: forall (y : lst), @eq lst (lfappend (rev y) Nil) (rev (rev (rev y))).
Lemma candidate_144: forall (y : lst), @eq lst (lfappend (rev y) Nil) (rev (lfappend y Nil)).
Lemma candidate_145: forall (y : lst), @eq lst (lfappend (rev y) Nil) (lfappend (rev y) Nil).
Lemma candidate_146: forall (y : lst), @eq lst (lfappend (rev y) Nil) (qreva y Nil).
Lemma candidate_147: forall (y : lst), @eq lst (lfappend (rev y) Nil) (rev y).
Lemma candidate_148: @eq lst Nil (Nil).
Lemma candidate_149: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_150: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_151: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_152: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_153: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_154: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 488 seconds
Duplicates removed: 73
Filtered by Quickchick: 30
Filtered by script: 12
Remaining: 39

Lemmas: 
Lemma candidate_32: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_6: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_127: forall (y : lst), @eq lst (rev y) (qreva y Nil).
Lemma candidate_27: forall (y : lst), @eq lst (qreva y Nil) (rev y).
Lemma candidate_33: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_7: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_141: forall (lf2 : lst), @eq lst lf2 (lfappend (lf2) Nil).
Lemma candidate_90: forall (lf3 : lst), @eq lst (lf3) (lfappend lf3 Nil).
Lemma candidate_77: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (lf3).
Lemma candidate_31: forall (lf2 : lst), @eq lst lf2 (qreva (rev lf2) Nil).
Lemma candidate_30: forall (lf2 : lst), @eq lst lf2 (rev (qreva lf2 Nil)).
Lemma candidate_5: forall (lf1 : lst), @eq lst (qreva (rev lf1) Nil) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev (qreva lf1 Nil)) lf1.
Lemma candidate_124: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_147: forall (y : lst), @eq lst (lfappend (rev y) Nil) (rev y).
Lemma candidate_126: forall (y : lst), @eq lst (rev y) (lfappend (rev y) Nil).
Lemma candidate_125: forall (y : lst), @eq lst (rev y) (rev (lfappend y Nil)).
Lemma candidate_23: forall (y : lst), @eq lst (qreva y Nil) (rev (rev (rev y))).
Lemma candidate_139: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (rev lf2)) Nil).
Lemma candidate_88: forall (lf3 : lst), @eq lst (rev (rev lf3)) (lfappend lf3 Nil).
Lemma candidate_75: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (rev lf3)).
Lemma candidate_123: forall (y : lst), @eq lst (rev y) (lfappend (qreva y Nil) Nil).
Lemma candidate_120: forall (y : lst) (lf4 : lst), @eq lst (lfappend (rev y) lf4) (qreva y lf4).
Lemma candidate_24: forall (y : lst), @eq lst (qreva y Nil) (rev (lfappend y Nil)).
Lemma candidate_2: forall (y : lst) (lf4 : lst), @eq lst (qreva y lf4) (lfappend (rev y) lf4).
Lemma candidate_140: forall (lf2 : lst), @eq lst lf2 (lfappend (lfappend lf2 Nil) Nil).
Lemma candidate_138: forall (lf2 : lst), @eq lst lf2 (lfappend (qreva (rev lf2) Nil) Nil).
Lemma candidate_137: forall (lf2 : lst), @eq lst lf2 (lfappend (rev (qreva lf2 Nil)) Nil).
Lemma candidate_87: forall (lf3 : lst), @eq lst (qreva (rev lf3) Nil) (lfappend lf3 Nil).
Lemma candidate_86: forall (lf3 : lst), @eq lst (rev (qreva lf3 Nil)) (lfappend lf3 Nil).
Lemma candidate_74: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (rev lf3) Nil).
Lemma candidate_73: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (rev (qreva lf3 Nil)).
Lemma candidate_143: forall (y : lst), @eq lst (lfappend (rev y) Nil) (rev (rev (rev y))).
Lemma candidate_22: forall (y : lst), @eq lst (qreva y Nil) (lfappend (qreva y Nil) Nil).
Lemma candidate_144: forall (y : lst), @eq lst (lfappend (rev y) Nil) (rev (lfappend y Nil)).
Lemma candidate_136: forall (lf2 : lst), @eq lst lf2 (lfappend (qreva (qreva lf2 Nil) Nil) Nil).
Lemma candidate_85: forall (lf3 : lst), @eq lst (qreva (qreva lf3 Nil) Nil) (lfappend lf3 Nil).
Lemma candidate_72: forall (lf3 : lst), @eq lst (lfappend lf3 Nil) (qreva (qreva lf3 Nil) Nil).
Lemma candidate_142: forall (y : lst), @eq lst (lfappend (rev y) Nil) (lfappend (qreva y Nil) Nil).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal50_theorem0_194_count_insort

Number of Lemmas: 262
Number of Lemmas (after duplicates removed): 92
Number of Lemmas (after QuickChick used to filter): 62
* Number of Candidate Lemmas: 47

Time until ranking: 927
Time to complete: 3564

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 6

Lemma candidate_189: forall (n : natural) (y : lst), @eq natural (count (insort y n) n) (Succ (count y n)).
Lemma candidate_93: forall (n : natural) (y : lst), @eq natural (Succ (count y n)) (count (insort y n) n).
Lemma candidate_34: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n) (Succ (count lf5 n)).
Lemma candidate_89: forall (n : natural) (y : lst), @eq natural (Succ (count y n)) (count (insort (sort y) n) n).
Lemma candidate_42: forall (n : natural) (y : lst), @eq natural (count (insort (sort y) n) n) (Succ (count (sort y) n)).
Lemma candidate_3: forall (n : natural) (y : lst) (lf4 : natural), forall _ : @eq natural (count (sort y) n) lf4, @eq natural (count (insort (sort y) n) n) (Succ lf4).

Category 3 (provable):
Count = 0


Category 3 (not provable):
Count = 41

Lemma candidate_51: forall (y : lst), @eq lst (sort y) (sort (sort y)).
Lemma candidate_50: forall (y : lst), @eq lst (sort y) (sort (sort (sort y))).
Lemma candidate_49: forall (y : lst), @eq lst (sort y) (sort (sort (sort (sort y)))).
Lemma candidate_57: forall (n : natural) (y : lst), @eq lst (insort (sort y) n) (sort (insort y n)).
Lemma candidate_86: forall (n : natural) (y : lst), @eq natural (count y n) (count (sort (sort y)) n).
Lemma candidate_85: forall (n : natural) (y : lst), @eq natural (count y n) (count (insort y (Succ n)) n).
Lemma candidate_48: forall (y : lst), @eq lst (sort y) (sort (sort (sort (sort (sort y))))).
Lemma candidate_14: forall (n : natural) (lf2 : lst), @eq natural (count lf2 n) (count (sort (sort lf2)) n).
Lemma candidate_56: forall (n : natural) (y : lst), @eq lst (insort (sort y) n) (insort (sort (sort y)) n).
Lemma candidate_55: forall (n : natural) (y : lst), @eq lst (insort (sort y) n) (sort (insort (sort y) n)).
Lemma candidate_54: forall (n : natural) (y : lst), @eq lst (insort (sort y) n) (sort (sort (insort y n))).
Lemma candidate_83: forall (n : natural) (y : lst), @eq natural (count y n) (count (sort (sort (sort y))) n).
Lemma candidate_13: forall (n : natural) (lf2 : lst), @eq natural (count lf2 n) (count (insort lf2 (Succ n)) n).
Lemma candidate_231: forall (n : natural) (y : lst), @eq natural (count (sort (insort y n)) n) (Succ (count y n)).
Lemma candidate_47: forall (y : lst), @eq lst (sort y) (sort (sort (sort (sort (sort (sort y)))))).
Lemma candidate_11: forall (n : natural) (lf2 : lst), @eq natural (count lf2 n) (count (sort (sort (sort lf2))) n).
Lemma candidate_53: forall (n : natural) (y : lst), @eq lst (insort (sort y) n) (sort (insort (sort (sort y)) n)).
Lemma candidate_45: forall (n : natural) (y : lst), @eq natural (count (insort (sort y) n) n) (count (insort y n) n).
Lemma candidate_30: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n) (Succ (count (sort lf5) n)).
Lemma candidate_230: forall (n : natural) (y : lst), @eq natural (count (insort (sort (sort y)) n) n) (Succ (count y n)).
Lemma candidate_229: forall (n : natural) (y : lst), @eq natural (count (sort (insort (sort y) n)) n) (Succ (count y n)).
Lemma candidate_228: forall (n : natural) (y : lst), @eq natural (count (sort (sort (insort y n))) n) (Succ (count y n)).
Lemma candidate_29: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n) (count (insort (sort lf5) n) n).
Lemma candidate_218: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n) (Succ (count (sort (sort lf5)) n)).
Lemma candidate_227: forall (n : natural) (y : lst), @eq natural (count (sort (insort (sort (sort y)) n)) n) (Succ (count y n)).
Lemma candidate_217: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n) (Succ (count (insort lf5 (Succ n)) n)).
Lemma candidate_215: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n)   (Succ (count (sort (sort (sort lf5))) n)).
Lemma candidate_188: forall (n : natural) (y : lst), @eq natural (if lfeqb n n then Succ (count y n) else count y n)   (Succ (count y n)).
Lemma candidate_92: forall (n : natural) (y : lst), @eq natural (Succ (count y n))   (if lfeqb n n then Succ (count y n) else count y n).
Lemma candidate_84: forall (n : natural) (y : lst), @eq natural (count y n)   (if lfeqb n (Succ n) then Succ (count y n) else count y n).
Lemma candidate_2: forall (n : natural) (lf4 : natural) (lf5 : lst), forall _ : @eq natural (count lf5 n) lf4, @eq natural (count (insort lf5 n) n) (Succ lf4).
Lemma candidate_12: forall (n : natural) (lf2 : lst), @eq natural (count lf2 n)   (if lfeqb n (Succ n) then Succ (count lf2 n) else count lf2 n).
Lemma candidate_32: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n)   (if lfeqb n n then Succ (count lf5 n) else count lf5 n).
Lemma candidate_44: forall (n : natural) (y : lst), @eq natural (count (insort (sort y) n) n)   (if lfeqb n n then Succ (count y n) else count y n).
Lemma candidate_187: forall (n : natural) (y : lst), @eq natural (if lfeqb n n then Succ (count (sort y) n) else count (sort y) n)   (Succ (count y n)).
Lemma candidate_91: forall (n : natural) (y : lst), @eq natural (Succ (count y n))   (if lfeqb n n then Succ (count (sort y) n) else count (sort y) n).
Lemma candidate_4: forall (n : natural) (y : lst) (lf5 : lst), forall _ : @eq natural (count lf5 n) (count y n), @eq natural (count (insort lf5 n) n) (Succ (count y n)).
Lemma candidate_216: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n)   (Succ (if lfeqb n (Succ n) then Succ (count lf5 n) else count lf5 n)).
Lemma candidate_31: forall (n : natural) (lf5 : lst), @eq natural (count (insort lf5 n) n)   (if lfeqb n n then Succ (count (sort lf5) n) else count (sort lf5) n).
Lemma candidate_43: forall (n : natural) (y : lst), @eq natural (count (insort (sort y) n) n)   (if lfeqb n n then Succ (count (sort y) n) else count (sort y) n).
Lemma candidate_69: forall (lf4 : natural), @eq natural (Succ lf4)   (if lfeqb lf4 (Succ (Succ Zero)) then Succ (if lfeqb lf4 (Succ (Succ Zero)) then Succ (if lfeqb lf4 lf4 then Succ (if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 lf4 then Succ (if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 (Succ (Succ Zero)) then Succ (if lfeqb lf4 lf4 then Succ (if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 lf4 then Succ (if lfeqb lf4 (Succ Zero) then Succ Zero else Zero) else if lfeqb lf4 (Succ Zero) then Succ Zero else Zero).
File Information
- File name: goal69
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal69_theorem0_68_Nat_beq_eq
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal69_theorem0_68_Nat_beq_eq
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 y0 : natural) (z : lst) (_ : not (@eq natural x0 y0))
  (_ : @eq bool (mem x0 (insort y0 z)) true), @eq bool (mem x0 z) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (mem x Nil) true

* Hypothesis:
H0 : @eq bool (lfeqb x y) true
x : natural
H : not (@eq natural x y)
y : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : natural

* Terms:
lfeqb x y : bool
@eq natural x y : Prop
not (@eq natural x y) : Prop
bool : Set
x : natural
@eq bool (lfeqb x y) true : Prop
@eq bool (mem x Nil) true : Prop
y : natural
natural : Set
true : bool
mem x Nil : bool
Nil : lst

* Functions:
mem  : forall (_ : natural) (_ : lst), bool
lfeqb  : forall (_ : natural) (_ : natural), bool
not  : forall _ : Prop, Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 28 seconds
Generalized Variables:
lf3 : lst = Nil
lf1 : bool = mem x Nil
lf2 : bool = true

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj3: forall (lf2 : bool) (x : natural) (lf3 : lst), @eq bool (mem x lf3) lf2.
Lemma conj4: forall (x : natural) (lf3 : lst), @eq bool (mem x lf3) true.
Lemma conj7: forall (lf2 : bool) (x : natural), @eq bool (mem x Nil) lf2.
Lemma conj8: forall (x : natural), @eq bool (mem x Nil) true.


<---VALIDITY CHECKS--->
Time elapsed: 37 seconds
Valid:

Invalid:
Lemma conj8: forall (x : natural), @eq bool (mem x Nil) true.
Lemma conj7: forall (lf2 : bool) (x : natural), @eq bool (mem x Nil) lf2.
Lemma conj4: forall (x : natural) (lf3 : lst), @eq bool (mem x lf3) true.
Lemma conj3: forall (lf2 : bool) (x : natural) (lf3 : lst), @eq bool (mem x lf3) lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 44 seconds
Generalizations:
Lemma conj8: forall (x : natural), @eq bool (mem x Nil) true.
Lemma conj7: forall (lf2 : bool) (x : natural), @eq bool (mem x Nil) lf2.
Lemma conj4: forall (x : natural) (lf3 : lst), @eq bool (mem x lf3) true.
Lemma conj3: forall (lf2 : bool) (x : natural) (lf3 : lst), @eq bool (mem x lf3) lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 53 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj3: forall (lf2 : bool) (x : natural) (lf3 : lst), @eq bool (mem x lf3) lf2.
Lemma conj4: forall (x : natural) (lf3 : lst), @eq bool (mem x lf3) true.
Lemma conj7: forall (lf2 : bool) (x : natural), @eq bool (mem x Nil) lf2.
Lemma conj8: forall (x : natural), @eq bool (mem x Nil) true.


<---CREATE SKETCHES--->
Time elapsed: 53 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool true (##hole##)
Sketch conj3_sketch0 : @eq bool (##hole##) lf2
Sketch conj3_term_sketch0 : @eq bool (mem x lf3) (##hole##)
Sketch conj4_sketch0 : @eq bool (##hole##) true
Sketch conj4_sketch1 : @eq bool (mem x lf3) (##hole##)
Sketch conj4_term_sketch0 : @eq bool (mem x lf3) (##hole##)
Sketch conj4_term_sketch1 : @eq bool true (##hole##)
Sketch conj7_sketch0 : @eq bool (##hole##) lf2
Sketch conj7_sketch1 : @eq bool (mem x (##hole##)) lf2
Sketch conj7_term_sketch0 : @eq bool (mem x Nil) (##hole##)
Sketch conj7_term_sketch1 : @eq lst Nil (##hole##)
Sketch conj8_sketch0 : @eq bool (mem x Nil) (##hole##)
Sketch conj8_sketch1 : @eq bool (##hole##) true
Sketch conj8_sketch2 : @eq bool (mem x (##hole##)) true
Sketch conj8_term_sketch0 : @eq bool true (##hole##)
Sketch conj8_term_sketch1 : @eq bool (mem x Nil) (##hole##)
Sketch conj8_term_sketch2 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 53 seconds
Problems per Sketch:
Sketch conj7_sketch1 --> Problem  synth_5
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj7_term_sketch0 --> Problem  synth_6
Sketch conj8_sketch1 --> Problem  synth_2
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj4_sketch0 --> Problem  synth_2
Sketch conj4_sketch1 --> Problem  synth_4
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj8_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj8_sketch2 --> Problem  synth_8
Sketch conj8_sketch0 --> Problem  synth_6
Sketch conj7_term_sketch1 --> Problem  synth_7
Sketch conj8_term_sketch1 --> Problem  synth_6
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj8_term_sketch2 --> Problem  synth_7
Sketch conj2_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 100 seconds

Problem: synth_8
 Cons Zero (Cons Zero Nil)
 Cons (Succ x) Nil
 Cons (Succ Zero) Nil
 Cons x Nil
 Cons Zero Nil
 Nil

Problem: synth_3
 lf2
 true
 false

Problem: synth_6
 match x with | Succ _ => false | Zero => true end
 match x with | Succ _ => true | Zero => false end
 lfeqb x Zero
 less x Zero
 true
 false

Problem: synth_7
 Cons Zero (Cons (Succ Zero) Nil)
 Cons (Succ Zero) (Cons Zero Nil)
 Cons Zero (Cons Zero Nil)
 Cons (Succ Zero) Nil
 Cons Zero Nil
 Nil

Problem: synth_5
 Cons Zero (Cons Zero Nil)
 Cons (Succ x) Nil
 Cons (Succ Zero) Nil
 Cons x Nil
 Cons Zero Nil
 Nil

Problem: synth_4
 match x with | Succ _ => false | Zero => true end
 match x with | Succ _ => true | Zero => false end
 lfeqb x Zero
 less x Zero
 true
 false

Problem: synth_1
 lf1
 true
 false

Problem: synth_2
 true
 false

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 100 seconds
Lemmas:
Lemma candidate_1: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_2: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (false).
Lemma candidate_4: @eq bool true (true).
Lemma candidate_5: @eq bool true (false).
Lemma candidate_6: forall (lf2 : bool), @eq bool (lf2) lf2.
Lemma candidate_7: forall (lf2 : bool), @eq bool (true) lf2.
Lemma candidate_8: forall (lf2 : bool), @eq bool (false) lf2.
Lemma candidate_9: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_10: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (match x with | Succ _ => true | Zero => false end).
Lemma candidate_11: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (lfeqb x Zero).
Lemma candidate_12: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (less x Zero).
Lemma candidate_13: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (true).
Lemma candidate_14: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (false).
Lemma candidate_15: @eq bool (true) true.
Lemma candidate_16: @eq bool (false) true.
Lemma candidate_17: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_18: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (match x with | Succ _ => true | Zero => false end).
Lemma candidate_19: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (lfeqb x Zero).
Lemma candidate_20: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (less x Zero).
Lemma candidate_21: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (true).
Lemma candidate_22: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (false).
Lemma candidate_23: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_24: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (match x with | Succ _ => true | Zero => false end).
Lemma candidate_25: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (lfeqb x Zero).
Lemma candidate_26: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (less x Zero).
Lemma candidate_27: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (true).
Lemma candidate_28: forall (lf3 : lst) (x : natural), @eq bool (mem x lf3) (false).
Lemma candidate_29: @eq bool true (true).
Lemma candidate_30: @eq bool true (false).
Lemma candidate_31: forall (lf2 : bool), @eq bool (lf2) lf2.
Lemma candidate_32: forall (lf2 : bool), @eq bool (true) lf2.
Lemma candidate_33: forall (lf2 : bool), @eq bool (false) lf2.
Lemma candidate_34: forall (x : natural) (lf2 : bool), @eq bool (mem x (Cons Zero (Cons Zero Nil))) lf2.
Lemma candidate_35: forall (x : natural) (lf2 : bool), @eq bool (mem x (Cons (Succ x) Nil)) lf2.
Lemma candidate_36: forall (x : natural) (lf2 : bool), @eq bool (mem x (Cons (Succ Zero) Nil)) lf2.
Lemma candidate_37: forall (x : natural) (lf2 : bool), @eq bool (mem x (Cons x Nil)) lf2.
Lemma candidate_38: forall (x : natural) (lf2 : bool), @eq bool (mem x (Cons Zero Nil)) lf2.
Lemma candidate_39: forall (x : natural) (lf2 : bool), @eq bool (mem x (Nil)) lf2.
Lemma candidate_40: forall (x : natural), @eq bool (mem x Nil) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_41: forall (x : natural), @eq bool (mem x Nil) (match x with | Succ _ => true | Zero => false end).
Lemma candidate_42: forall (x : natural), @eq bool (mem x Nil) (lfeqb x Zero).
Lemma candidate_43: forall (x : natural), @eq bool (mem x Nil) (less x Zero).
Lemma candidate_44: forall (x : natural), @eq bool (mem x Nil) (true).
Lemma candidate_45: forall (x : natural), @eq bool (mem x Nil) (false).
Lemma candidate_46: @eq lst Nil (Cons Zero (Cons (Succ Zero) Nil)).
Lemma candidate_47: @eq lst Nil (Cons (Succ Zero) (Cons Zero Nil)).
Lemma candidate_48: @eq lst Nil (Cons Zero (Cons Zero Nil)).
Lemma candidate_49: @eq lst Nil (Cons (Succ Zero) Nil).
Lemma candidate_50: @eq lst Nil (Cons Zero Nil).
Lemma candidate_51: @eq lst Nil (Nil).
Lemma candidate_52: forall (x : natural), @eq bool (mem x Nil) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_53: forall (x : natural), @eq bool (mem x Nil) (match x with | Succ _ => true | Zero => false end).
Lemma candidate_54: forall (x : natural), @eq bool (mem x Nil) (lfeqb x Zero).
Lemma candidate_55: forall (x : natural), @eq bool (mem x Nil) (less x Zero).
Lemma candidate_56: forall (x : natural), @eq bool (mem x Nil) (true).
Lemma candidate_57: forall (x : natural), @eq bool (mem x Nil) (false).
Lemma candidate_58: @eq bool (true) true.
Lemma candidate_59: @eq bool (false) true.
Lemma candidate_60: forall (x : natural), @eq bool (mem x (Cons Zero (Cons Zero Nil))) true.
Lemma candidate_61: forall (x : natural), @eq bool (mem x (Cons (Succ x) Nil)) true.
Lemma candidate_62: forall (x : natural), @eq bool (mem x (Cons (Succ Zero) Nil)) true.
Lemma candidate_63: forall (x : natural), @eq bool (mem x (Cons x Nil)) true.
Lemma candidate_64: forall (x : natural), @eq bool (mem x (Cons Zero Nil)) true.
Lemma candidate_65: forall (x : natural), @eq bool (mem x (Nil)) true.
Lemma candidate_66: @eq bool true (true).
Lemma candidate_67: @eq bool true (false).
Lemma candidate_68: forall (x : natural), @eq bool (mem x Nil) (match x with | Succ _ => false | Zero => true end).
Lemma candidate_69: forall (x : natural), @eq bool (mem x Nil) (match x with | Succ _ => true | Zero => false end).
Lemma candidate_70: forall (x : natural), @eq bool (mem x Nil) (lfeqb x Zero).
Lemma candidate_71: forall (x : natural), @eq bool (mem x Nil) (less x Zero).
Lemma candidate_72: forall (x : natural), @eq bool (mem x Nil) (true).
Lemma candidate_73: forall (x : natural), @eq bool (mem x Nil) (false).
Lemma candidate_74: @eq lst Nil (Cons Zero (Cons (Succ Zero) Nil)).
Lemma candidate_75: @eq lst Nil (Cons (Succ Zero) (Cons Zero Nil)).
Lemma candidate_76: @eq lst Nil (Cons Zero (Cons Zero Nil)).
Lemma candidate_77: @eq lst Nil (Cons (Succ Zero) Nil).
Lemma candidate_78: @eq lst Nil (Cons Zero Nil).
Lemma candidate_79: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 161 seconds
Duplicates removed: 39
Filtered by Quickchick: 32
Filtered by script: 6
Remaining: 2

Lemmas: 
Lemma candidate_63: forall (x : natural), @eq bool (mem x (Cons x Nil)) true.
Lemma candidate_43: forall (x : natural), @eq bool (mem x Nil) (less x Zero).
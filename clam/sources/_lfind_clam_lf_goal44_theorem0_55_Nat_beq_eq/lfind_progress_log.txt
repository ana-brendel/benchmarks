File Information
- File name: goal44
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal44_theorem0_55_Nat_beq_eq
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal44_theorem0_55_Nat_beq_eq
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall (x0 : natural) (y0 z0 : lst)
  (_ : and (@eq bool (lst_mem x0 y0) true) (@eq bool (lst_mem x0 z0) true)),
@eq bool (lst_mem x0 (lst_intersection y0 z0)) true.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: @eq bool (lst_mem x (lst_intersection y z)) true

* Hypothesis:
H0 : @eq bool (lst_mem x z) true
Heqb : @eq bool (lst_mem n z) false
x : natural
H : @eq bool (lfeqb x n) true
y : lst
z : lst
n : natural
IHy : forall _ : @eq bool (lst_mem x y) true,
@eq bool (lst_mem x (lst_intersection y z)) true

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
y : lst
z : lst
n : natural

* Terms:
lst_mem n z : bool
x : natural
@eq bool (lst_mem x z) true : Prop
y : lst
lst_mem x (lst_intersection y z) : bool
@eq bool (lfeqb x n) true : Prop
true : bool
lst_mem x y : bool
false : bool
lst_mem x z : bool
@eq bool (lst_mem x (lst_intersection y z)) true : Prop
bool : Set
lst_intersection y z : lst
lst : Set
forall _ : @eq bool (lst_mem x y) true,
@eq bool (lst_mem x (lst_intersection y z)) true : Prop
lfeqb x n : bool
z : lst
@eq bool (lst_mem x y) true : Prop
natural : Set
n : natural
@eq bool (lst_mem n z) false : Prop

* Functions:
lfeqb  : forall (_ : natural) (_ : natural), bool
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
lst_intersection  : forall (_ : lst) (_ : lst), lst
lst_mem  : forall (_ : natural) (_ : lst), bool

<---GENERALIZATION--->
Time elapsed: 143 seconds
Generalized Variables:
lf3 : bool = true
lf1 : bool = lst_mem x (lst_intersection y z)
lf2 : lst = lst_intersection y z

Generalizations:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_intersection y z)) true.


<---VALIDITY CHECKS--->
Time elapsed: 161 seconds
Valid:

Invalid:
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 186 seconds
Generalizations:
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma conj8_imp: forall (x : natural) (y : lst) (z : lst), forall _ : @eq bool (lst_mem x z) true,
@eq bool (lst_mem x (lst_intersection y z)) true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma conj4_imp: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), forall
  _ : forall (_ : @eq bool (lst_mem x z) lf3)
        (_ : @eq bool (lst_mem x y) lf3),
      @eq bool (lst_mem x (lst_intersection y z)) lf3,
@eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 199 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : bool) (lf3 : bool), @eq bool lf1 lf3.
Lemma conj3: forall (lf2 : lst) (x : natural) (lf3 : bool), @eq bool (lst_mem x lf2) lf3.
Lemma conj4_imp: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), forall
  _ : forall (_ : @eq bool (lst_mem x z) lf3)
        (_ : @eq bool (lst_mem x y) lf3),
      @eq bool (lst_mem x (lst_intersection y z)) lf3,
@eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma conj4: forall (x : natural) (y : lst) (z : lst) (lf3 : bool), @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma conj5: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj7: forall (lf2 : lst) (x : natural), @eq bool (lst_mem x lf2) true.
Lemma conj8_imp: forall (x : natural) (y : lst) (z : lst), forall _ : @eq bool (lst_mem x z) true,
@eq bool (lst_mem x (lst_intersection y z)) true.
Lemma conj8: forall (x : natural) (y : lst) (z : lst), @eq bool (lst_mem x (lst_intersection y z)) true.


<---CREATE SKETCHES--->
Time elapsed: 199 seconds
Sketches:
Sketch conj3_sketch0 : @eq bool (##hole##) lf3
Sketch conj3_term_sketch0 : @eq bool (lst_mem x lf2) (##hole##)
Sketch conj4_imp_sketch0 : forall
  _ : forall (_ : @eq bool (lst_mem x z) lf3) (_ : @eq bool (##hole##) lf3),
      @eq bool (lst_mem x (lst_intersection y z)) lf3,
@eq bool (lst_mem x (lst_intersection y z)) lf3
Sketch conj4_imp_sketch1 : forall
  _ : forall (_ : @eq bool (##hole##) lf3) (_ : @eq bool (lst_mem x y) lf3),
      @eq bool (lst_mem x (lst_intersection y z)) lf3,
@eq bool (lst_mem x (lst_intersection y z)) lf3
Sketch conj4_imp_sketch2 : forall
  _ : forall (_ : @eq bool (lst_mem x z) lf3)
        (_ : @eq bool (lst_mem x y) lf3), @eq bool (lst_mem x (##hole##)) lf3,
@eq bool (lst_mem x (##hole##)) lf3
Sketch conj4_imp_sketch3 : forall
  _ : forall (_ : @eq bool (lst_mem x z) lf3)
        (_ : @eq bool (lst_mem x y) lf3), @eq bool (##hole##) lf3,
@eq bool (##hole##) lf3
Sketch conj4_imp_term_sketch0 : @eq bool (lst_mem x y) (##hole##)
Sketch conj4_imp_term_sketch1 : @eq bool (lst_mem x z) (##hole##)
Sketch conj4_imp_term_sketch2 : @eq lst (lst_intersection y z) (##hole##)
Sketch conj4_imp_term_sketch3 : @eq bool (lst_mem x (lst_intersection y z)) (##hole##)
Sketch conj4_sketch0 : @eq bool (lst_mem x (##hole##)) lf3
Sketch conj4_sketch1 : @eq bool (##hole##) lf3
Sketch conj4_term_sketch0 : @eq lst (lst_intersection y z) (##hole##)
Sketch conj4_term_sketch1 : @eq bool (lst_mem x (lst_intersection y z)) (##hole##)
Sketch conj5_sketch0 : @eq bool lf1 (##hole##)
Sketch conj5_term_sketch0 : @eq bool true (##hole##)
Sketch conj7_sketch0 : @eq bool (##hole##) true
Sketch conj7_sketch1 : @eq bool (lst_mem x lf2) (##hole##)
Sketch conj7_term_sketch0 : @eq bool (lst_mem x lf2) (##hole##)
Sketch conj7_term_sketch1 : @eq bool true (##hole##)
Sketch conj8_imp_sketch0 : forall _ : @eq bool (##hole##) true,
@eq bool (lst_mem x (lst_intersection y z)) true
Sketch conj8_imp_sketch1 : forall _ : @eq bool (lst_mem x z) true, @eq bool (lst_mem x (##hole##)) true
Sketch conj8_imp_sketch2 : forall _ : @eq bool (lst_mem x z) true, @eq bool (##hole##) true
Sketch conj8_imp_sketch3 : forall _ : @eq bool (lst_mem x z) (##hole##),
@eq bool (lst_mem x (lst_intersection y z)) (##hole##)
Sketch conj8_imp_term_sketch0 : @eq bool (lst_mem x z) (##hole##)
Sketch conj8_imp_term_sketch1 : @eq lst (lst_intersection y z) (##hole##)
Sketch conj8_imp_term_sketch2 : @eq bool (lst_mem x (lst_intersection y z)) (##hole##)
Sketch conj8_imp_term_sketch3 : @eq bool true (##hole##)
Sketch conj8_sketch0 : @eq bool (lst_mem x (##hole##)) true
Sketch conj8_sketch1 : @eq bool (##hole##) true
Sketch conj8_sketch2 : @eq bool (lst_mem x (lst_intersection y z)) (##hole##)
Sketch conj8_term_sketch0 : @eq lst (lst_intersection y z) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (lst_mem x (lst_intersection y z)) (##hole##)
Sketch conj8_term_sketch2 : @eq bool true (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 299 seconds
Problems per Sketch:
Sketch conj4_imp_sketch2 --> Problem  synth_4
Sketch conj7_sketch1 --> Problem  synth_2
Sketch conj5_sketch0 --> Problem  synth_10
Sketch conj4_imp_term_sketch0 --> Problem  synth_5
Sketch conj8_sketch1 --> Problem  synth_11
Sketch conj7_sketch0 --> Problem  synth_11
Sketch conj4_sketch0 --> Problem  synth_9
Sketch conj8_imp_sketch0 --> Problem  synth_8
Sketch conj4_imp_sketch1 --> Problem  synth_3
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj4_imp_term_sketch1 --> Problem  synth_6
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj8_sketch2 --> Problem  synth_8
Sketch conj8_imp_term_sketch2 --> Problem  synth_8
Sketch conj7_term_sketch1 --> Problem  synth_11
Sketch conj8_term_sketch1 --> Problem  synth_8
Sketch conj8_imp_term_sketch3 --> Problem  synth_11
Sketch conj4_term_sketch0 --> Problem  synth_7
Sketch conj8_imp_sketch1 --> Problem  synth_12
Sketch conj5_term_sketch0 --> Problem  synth_11
Sketch conj8_imp_term_sketch1 --> Problem  synth_7
Sketch conj4_imp_sketch3 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj4_imp_term_sketch2 --> Problem  synth_7
Sketch conj8_imp_sketch3 --> Problem  synth_8
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj4_imp_term_sketch3 --> Problem  synth_8
Sketch conj8_imp_term_sketch0 --> Problem  synth_6
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj4_term_sketch1 --> Problem  synth_8
Sketch conj8_sketch0 --> Problem  synth_13
Sketch conj8_imp_sketch2 --> Problem  synth_6
Sketch conj8_term_sketch2 --> Problem  synth_11
Sketch conj4_imp_sketch0 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 392 seconds

Problem: synth_10
 lf1
 true

Problem: synth_8
 lst_mem x z
 mem x z
 lst_mem x y
 mem x y
 lfeqb x x
 true

Problem: synth_3
 mem x z
 lst_mem x y
 mem x y
 lfeqb x x
 lf3
 true

Problem: synth_9

Problem: synth_13

Problem: synth_12

Problem: synth_6
 orb (lfeqb x Zero) (mem x z)
 orb (lfeqb x x) false
 lst_mem x z
 mem x z
 lfeqb x x
 true

Problem: synth_11
 true

Problem: synth_7
 lst_intersection (lst_intersection y z) y
 lst_intersection y (lst_intersection z z)
 lst_intersection y (lst_intersection y z)
 lst_intersection y (Cons Zero z)
 lst_intersection y (lst_intersection z y)
 lst_intersection y z

Problem: synth_5
 orb (lfeqb x Zero) (mem x y)
 orb (lfeqb x x) false
 lst_mem x y
 mem x y
 lfeqb x x
 true

Problem: synth_4
 lst_intersection y (lst_intersection z z)
 lst_intersection y (lst_intersection y z)
 lst_intersection y (Cons x z)
 lst_intersection y (Cons Zero z)
 lst_intersection y (lst_intersection z y)
 lst_intersection y z

Problem: synth_1
 lf3
 true

Problem: synth_2
 orb (lfeqb x Zero) (mem x lf2)
 orb (lfeqb x x) false
 lst_mem x lf2
 mem x lf2
 lfeqb x x
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 392 seconds
Lemmas:
Lemma candidate_1: forall (lf3 : bool), @eq bool (lf3) lf3.
Lemma candidate_2: forall (lf3 : bool), @eq bool (true) lf3.
Lemma candidate_3: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x Zero) (mem x lf2)).
Lemma candidate_4: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x x) false).
Lemma candidate_5: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem x lf2).
Lemma candidate_6: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem x lf2).
Lemma candidate_7: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x x).
Lemma candidate_8: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (true).
Lemma candidate_9: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3) (_ : @eq bool (mem x z) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_10: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_11: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3) (_ : @eq bool (mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_12: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3) (_ : @eq bool (lfeqb x x) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_13: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3) (_ : @eq bool (lf3) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_14: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3) (_ : @eq bool (true) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_15: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (mem x z) lf3) (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_16: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x y) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_17: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (mem x y) lf3) (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_18: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lfeqb x x) lf3) (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_19: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lf3) lf3) (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_20: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (true) lf3) (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_21: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y (lst_intersection z z))) lf3, @eq bool (lst_mem x (lst_intersection y (lst_intersection z z))) lf3.
Lemma candidate_22: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y (lst_intersection y z))) lf3, @eq bool (lst_mem x (lst_intersection y (lst_intersection y z))) lf3.
Lemma candidate_23: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y (Cons x z))) lf3, @eq bool (lst_mem x (lst_intersection y (Cons x z))) lf3.
Lemma candidate_24: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y (Cons Zero z))) lf3, @eq bool (lst_mem x (lst_intersection y (Cons Zero z))) lf3.
Lemma candidate_25: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y (lst_intersection z y))) lf3, @eq bool (lst_mem x (lst_intersection y (lst_intersection z y))) lf3.
Lemma candidate_26: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3),       @eq bool (lst_mem x (lst_intersection y z)) lf3, @eq bool (lst_mem x (lst_intersection y z)) lf3.
Lemma candidate_27: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3), @eq bool (mem x z) lf3, @eq bool (mem x z) lf3.
Lemma candidate_28: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3), @eq bool (lst_mem x y) lf3, @eq bool (lst_mem x y) lf3.
Lemma candidate_29: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3), @eq bool (mem x y) lf3, @eq bool (mem x y) lf3.
Lemma candidate_30: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3), @eq bool (lfeqb x x) lf3, @eq bool (lfeqb x x) lf3.
Lemma candidate_31: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3), @eq bool (lf3) lf3, @eq bool (lf3) lf3.
Lemma candidate_32: forall (lf3 : bool) (z : lst) (y : lst) (x : natural), forall   _ : forall (_ : @eq bool (lst_mem x z) lf3)         (_ : @eq bool (lst_mem x y) lf3), @eq bool (true) lf3, @eq bool (true) lf3.
Lemma candidate_33: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (orb (lfeqb x Zero) (mem x y)).
Lemma candidate_34: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (orb (lfeqb x x) false).
Lemma candidate_35: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (lst_mem x y).
Lemma candidate_36: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (mem x y).
Lemma candidate_37: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (lfeqb x x).
Lemma candidate_38: forall (y : lst) (x : natural), @eq bool (lst_mem x y) (true).
Lemma candidate_39: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (orb (lfeqb x Zero) (mem x z)).
Lemma candidate_40: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (orb (lfeqb x x) false).
Lemma candidate_41: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lst_mem x z).
Lemma candidate_42: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (mem x z).
Lemma candidate_43: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lfeqb x x).
Lemma candidate_44: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (true).
Lemma candidate_45: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection (lst_intersection y z) y).
Lemma candidate_46: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z z)).
Lemma candidate_47: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection y z)).
Lemma candidate_48: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (Cons Zero z)).
Lemma candidate_49: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z y)).
Lemma candidate_50: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y z).
Lemma candidate_51: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x z).
Lemma candidate_52: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x z).
Lemma candidate_53: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
Lemma candidate_54: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_55: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lfeqb x x).
Lemma candidate_56: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (true).
Lemma candidate_57: forall (lf3 : bool), @eq bool (lf3) lf3.
Lemma candidate_58: forall (lf3 : bool), @eq bool (true) lf3.
Lemma candidate_59: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection (lst_intersection y z) y).
Lemma candidate_60: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z z)).
Lemma candidate_61: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection y z)).
Lemma candidate_62: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (Cons Zero z)).
Lemma candidate_63: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z y)).
Lemma candidate_64: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y z).
Lemma candidate_65: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x z).
Lemma candidate_66: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x z).
Lemma candidate_67: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
Lemma candidate_68: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_69: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lfeqb x x).
Lemma candidate_70: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (true).
Lemma candidate_71: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_72: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_73: @eq bool true (true).
Lemma candidate_74: @eq bool (true) true.
Lemma candidate_75: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x Zero) (mem x lf2)).
Lemma candidate_76: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x x) false).
Lemma candidate_77: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem x lf2).
Lemma candidate_78: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem x lf2).
Lemma candidate_79: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x x).
Lemma candidate_80: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (true).
Lemma candidate_81: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x Zero) (mem x lf2)).
Lemma candidate_82: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (orb (lfeqb x x) false).
Lemma candidate_83: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lst_mem x lf2).
Lemma candidate_84: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (mem x lf2).
Lemma candidate_85: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (lfeqb x x).
Lemma candidate_86: forall (x : natural) (lf2 : lst), @eq bool (lst_mem x lf2) (true).
Lemma candidate_87: @eq bool true (true).
Lemma candidate_88: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma candidate_89: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem x z) true, @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma candidate_90: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x y) true, @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma candidate_91: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (mem x y) true, @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma candidate_92: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lfeqb x x) true, @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma candidate_93: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (true) true, @eq bool (lst_mem x (lst_intersection y z)) true.
Lemma candidate_94: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (orb (lfeqb x Zero) (mem x z)) true.
Lemma candidate_95: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (orb (lfeqb x x) false) true.
Lemma candidate_96: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (lst_mem x z) true.
Lemma candidate_97: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (mem x z) true.
Lemma candidate_98: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (lfeqb x x) true.
Lemma candidate_99: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (true) true.
Lemma candidate_100: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (lst_mem x z), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x z).
Lemma candidate_101: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (mem x z), @eq bool (lst_mem x (lst_intersection y z)) (mem x z).
Lemma candidate_102: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (lst_mem x y), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
Lemma candidate_103: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (mem x y), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_104: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (lfeqb x x), @eq bool (lst_mem x (lst_intersection y z)) (lfeqb x x).
Lemma candidate_105: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (true), @eq bool (lst_mem x (lst_intersection y z)) (true).
Lemma candidate_106: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (orb (lfeqb x Zero) (mem x z)).
Lemma candidate_107: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (orb (lfeqb x x) false).
Lemma candidate_108: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lst_mem x z).
Lemma candidate_109: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (mem x z).
Lemma candidate_110: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (lfeqb x x).
Lemma candidate_111: forall (z : lst) (x : natural), @eq bool (lst_mem x z) (true).
Lemma candidate_112: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection (lst_intersection y z) y).
Lemma candidate_113: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z z)).
Lemma candidate_114: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection y z)).
Lemma candidate_115: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (Cons Zero z)).
Lemma candidate_116: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z y)).
Lemma candidate_117: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y z).
Lemma candidate_118: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x z).
Lemma candidate_119: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x z).
Lemma candidate_120: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
Lemma candidate_121: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_122: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lfeqb x x).
Lemma candidate_123: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (true).
Lemma candidate_124: @eq bool true (true).
Lemma candidate_125: @eq bool (true) true.
Lemma candidate_126: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x z).
Lemma candidate_127: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x z).
Lemma candidate_128: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
Lemma candidate_129: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_130: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lfeqb x x).
Lemma candidate_131: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (true).
Lemma candidate_132: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection (lst_intersection y z) y).
Lemma candidate_133: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z z)).
Lemma candidate_134: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection y z)).
Lemma candidate_135: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (Cons Zero z)).
Lemma candidate_136: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z y)).
Lemma candidate_137: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y z).
Lemma candidate_138: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x z).
Lemma candidate_139: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x z).
Lemma candidate_140: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
Lemma candidate_141: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_142: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (lfeqb x x).
Lemma candidate_143: forall (z : lst) (y : lst) (x : natural), @eq bool (lst_mem x (lst_intersection y z)) (true).
Lemma candidate_144: @eq bool true (true).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 545 seconds
Duplicates removed: 67
Filtered by Quickchick: 53
Filtered by script: 15
Remaining: 9

Lemmas: 
Lemma candidate_98: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (lfeqb x x) true.
Lemma candidate_49: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z y)).
Lemma candidate_47: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection y z)).
Lemma candidate_46: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection y (lst_intersection z z)).
Lemma candidate_45: forall (z : lst) (y : lst), @eq lst (lst_intersection y z) (lst_intersection (lst_intersection y z) y).
Lemma candidate_95: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (orb (lfeqb x x) false) true.
Lemma candidate_94: forall (z : lst) (x : natural), forall _ : @eq bool (lst_mem x z) true, @eq bool (orb (lfeqb x Zero) (mem x z)) true.
Lemma candidate_103: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (mem x y), @eq bool (lst_mem x (lst_intersection y z)) (mem x y).
Lemma candidate_102: forall (z : lst) (y : lst) (x : natural), forall _ : @eq bool (lst_mem x z) (lst_mem x y), @eq bool (lst_mem x (lst_intersection y z)) (lst_mem x y).
File Information
- File name: goal49
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal49_mem_cons_81_eqb_elim
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal49_mem_cons_81_eqb_elim
- Namespace: adtind
- Proof name: mem_cons
- Theorem: Theorem mem_cons: forall (x0 n1 : natural) (l0 : lst) (_ : @eq bool (mem x0 (Cons n1 l0)) true),
or (@eq natural x0 n1) (@eq bool (mem x0 l0) true).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.

Proof Context
* Goal State: or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true)

* Hypothesis:
x : natural
H : Bool.Is_true (lfeqb x n)
IHl : forall _ : @eq bool (orb (lfeqb x n) (mem x l)) true,
or (@eq natural x n) (@eq bool (mem x l) true)
l : lst
n : natural
n0 : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : natural
l : lst
n : natural
n0 : natural

* Terms:
x : natural
@eq bool (mem x l) true : Prop
@eq natural x n : Prop
forall _ : @eq bool (orb (lfeqb x n) (mem x l)) true,
or (@eq natural x n) (@eq bool (mem x l) true) : Prop
mem x l : bool
true : bool
l : lst
@eq bool (orb (lfeqb x n) (mem x l)) true : Prop
Bool.Is_true (lfeqb x n) : Prop
lfeqb x n0 : bool
orb (lfeqb x n0) (mem x l) : bool
@eq bool (orb (lfeqb x n0) (mem x l)) true : Prop
bool : Set
or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true) : Prop
lst : Set
orb (lfeqb x n) (mem x l) : bool
lfeqb x n : bool
natural : Set
n : natural
or (@eq natural x n) (@eq bool (mem x l) true) : Prop
n0 : natural

* Functions:
mem  : forall (_ : natural) (_ : lst), bool
lfeqb  : forall (_ : natural) (_ : natural), bool
Bool.Is_true  : forall _ : bool, Prop
orb  : forall (_ : bool) (_ : bool), bool
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
or  : forall (_ : Prop) (_ : Prop), Prop

<---GENERALIZATION--->
Time elapsed: 147 seconds
Generalized Variables:
lf3 : bool = mem x l
lf1 : bool = orb (lfeqb x n0) (mem x l)
lf4 : bool = true
lf2 : bool = lfeqb x n0

Generalizations:
Lemma conj1: forall (x : natural) (lf4 : bool) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 lf4).
Lemma conj3: forall (x : natural) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 true).
Lemma conj5: forall (lf2 : bool) (x : natural) (lf4 : bool) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) lf4).
Lemma conj6: forall (x : natural) (lf4 : bool) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) lf4).
Lemma conj7: forall (lf2 : bool) (x : natural) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) true).
Lemma conj8: forall (x : natural) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) true).
Lemma conj13: forall (lf2 : bool) (x : natural) (lf4 : bool) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) lf4).
Lemma conj14: forall (x : natural) (lf4 : bool) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) lf4).
Lemma conj15: forall (lf2 : bool) (x : natural) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) true).
Lemma conj16: forall (x : natural) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true).


<---VALIDITY CHECKS--->
Time elapsed: 214 seconds
Valid:

Invalid:
Lemma conj16: forall (x : natural) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true).
Lemma conj15: forall (lf2 : bool) (x : natural) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) true).
Lemma conj14: forall (x : natural) (lf4 : bool) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) lf4).
Lemma conj13: forall (lf2 : bool) (x : natural) (lf4 : bool) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) lf4).
Lemma conj8: forall (x : natural) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) true).
Lemma conj7: forall (lf2 : bool) (x : natural) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) true).
Lemma conj6: forall (x : natural) (lf4 : bool) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) lf4).
Lemma conj5: forall (lf2 : bool) (x : natural) (lf4 : bool) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) lf4).
Lemma conj3: forall (x : natural) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 true).
Lemma conj1: forall (x : natural) (lf4 : bool) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 lf4).

<---ADD IMPLICATIONS--->
Time elapsed: 233 seconds
Generalizations:
Lemma conj16: forall (x : natural) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true).
Lemma conj15: forall (lf2 : bool) (x : natural) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) true).
Lemma conj14: forall (x : natural) (lf4 : bool) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) lf4).
Lemma conj13: forall (lf2 : bool) (x : natural) (lf4 : bool) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) lf4).
Lemma conj8: forall (x : natural) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) true).
Lemma conj7: forall (lf2 : bool) (x : natural) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) true).
Lemma conj6: forall (x : natural) (lf4 : bool) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) lf4).
Lemma conj5: forall (lf2 : bool) (x : natural) (lf4 : bool) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) lf4).
Lemma conj3: forall (x : natural) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 true).
Lemma conj1: forall (x : natural) (lf4 : bool) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 lf4).


<---VALIDITY CHECKS--->
Time elapsed: 251 seconds
Valid:

Invalid:
Lemma conj1: forall (x : natural) (lf4 : bool) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 lf4).
Lemma conj3: forall (x : natural) (lf1 : bool) (n : natural), or (@eq natural x n) (@eq bool lf1 true).
Lemma conj5: forall (lf2 : bool) (x : natural) (lf4 : bool) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) lf4).
Lemma conj6: forall (x : natural) (lf4 : bool) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) lf4).
Lemma conj7: forall (lf2 : bool) (x : natural) (n : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) true).
Lemma conj8: forall (x : natural) (n : natural) (n0 : natural) (lf3 : bool), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) true).
Lemma conj13: forall (lf2 : bool) (x : natural) (lf4 : bool) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) lf4).
Lemma conj14: forall (x : natural) (lf4 : bool) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) lf4).
Lemma conj15: forall (lf2 : bool) (x : natural) (l : lst) (n : natural), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) true).
Lemma conj16: forall (x : natural) (l : lst) (n : natural) (n0 : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) true).


<---CREATE SKETCHES--->
Time elapsed: 251 seconds
Sketches:
Sketch conj3_sketch0 : or (@eq natural x n) (@eq bool lf1 (##hole##))
Sketch conj3_term_sketch0 : @eq bool true (##hole##)
Sketch conj5_sketch0 : or (@eq natural x n) (@eq bool (##hole##) lf4)
Sketch conj5_term_sketch0 : @eq bool (orb lf2 lf3) (##hole##)
Sketch conj6_sketch0 : or (@eq natural x n) (@eq bool (orb (##hole##) lf3) lf4)
Sketch conj6_sketch1 : or (@eq natural x n) (@eq bool (##hole##) lf4)
Sketch conj6_term_sketch0 : @eq bool (lfeqb x n0) (##hole##)
Sketch conj6_term_sketch1 : @eq bool (orb (lfeqb x n0) lf3) (##hole##)
Sketch conj7_sketch0 : or (@eq natural x n) (@eq bool (##hole##) true)
Sketch conj7_sketch1 : or (@eq natural x n) (@eq bool (orb lf2 lf3) (##hole##))
Sketch conj7_term_sketch0 : @eq bool (orb lf2 lf3) (##hole##)
Sketch conj7_term_sketch1 : @eq bool true (##hole##)
Sketch conj8_sketch0 : or (@eq natural x n) (@eq bool (orb (##hole##) lf3) true)
Sketch conj8_sketch1 : or (@eq natural x n) (@eq bool (##hole##) true)
Sketch conj8_sketch2 : or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (##hole##))
Sketch conj8_term_sketch0 : @eq bool (lfeqb x n0) (##hole##)
Sketch conj8_term_sketch1 : @eq bool (orb (lfeqb x n0) lf3) (##hole##)
Sketch conj8_term_sketch2 : @eq bool true (##hole##)
Sketch conj13_sketch0 : or (@eq natural x n) (@eq bool (##hole##) lf4)
Sketch conj13_sketch1 : or (@eq natural x n) (@eq bool (orb lf2 (##hole##)) lf4)
Sketch conj13_term_sketch0 : @eq bool (orb lf2 (mem x l)) (##hole##)
Sketch conj13_term_sketch1 : @eq bool (mem x l) (##hole##)
Sketch conj14_sketch0 : or (@eq natural x n) (@eq bool (orb (##hole##) (mem x l)) lf4)
Sketch conj14_sketch1 : or (@eq natural x n) (@eq bool (##hole##) lf4)
Sketch conj14_sketch2 : or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (##hole##)) lf4)
Sketch conj14_term_sketch0 : @eq bool (lfeqb x n0) (##hole##)
Sketch conj14_term_sketch1 : @eq bool (orb (lfeqb x n0) (mem x l)) (##hole##)
Sketch conj14_term_sketch2 : @eq bool (mem x l) (##hole##)
Sketch conj15_sketch0 : or (@eq natural x n) (@eq bool (##hole##) true)
Sketch conj15_sketch1 : or (@eq natural x n) (@eq bool (orb lf2 (##hole##)) true)
Sketch conj15_sketch2 : or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (##hole##))
Sketch conj15_term_sketch0 : @eq bool (orb lf2 (mem x l)) (##hole##)
Sketch conj15_term_sketch1 : @eq bool (mem x l) (##hole##)
Sketch conj15_term_sketch2 : @eq bool true (##hole##)
Sketch conj16_sketch0 : or (@eq natural x n) (@eq bool (orb (##hole##) (mem x l)) true)
Sketch conj16_sketch1 : or (@eq natural x n) (@eq bool (##hole##) true)
Sketch conj16_sketch2 : or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (##hole##)) true)
Sketch conj16_sketch3 : or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) (##hole##))
Sketch conj16_term_sketch0 : @eq bool (lfeqb x n0) (##hole##)
Sketch conj16_term_sketch1 : @eq bool (orb (lfeqb x n0) (mem x l)) (##hole##)
Sketch conj16_term_sketch2 : @eq bool (mem x l) (##hole##)
Sketch conj16_term_sketch3 : @eq bool true (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 798 seconds
Problems per Sketch:
Sketch conj15_sketch1 --> Problem  synth_18
Sketch conj7_sketch1 --> Problem  synth_9
Sketch conj5_sketch0 --> Problem  synth_3
Sketch conj16_sketch3 --> Problem  synth_22
Sketch conj14_sketch2 --> Problem  synth_16
Sketch conj15_term_sketch1 --> Problem  synth_14
Sketch conj16_sketch2 --> Problem  synth_21
Sketch conj15_term_sketch2 --> Problem  synth_2
Sketch conj16_term_sketch1 --> Problem  synth_17
Sketch conj14_term_sketch2 --> Problem  synth_14
Sketch conj8_sketch1 --> Problem  synth_8
Sketch conj7_sketch0 --> Problem  synth_8
Sketch conj6_term_sketch0 --> Problem  synth_6
Sketch conj13_term_sketch1 --> Problem  synth_14
Sketch conj8_term_sketch0 --> Problem  synth_6
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj8_sketch2 --> Problem  synth_11
Sketch conj14_term_sketch1 --> Problem  synth_17
Sketch conj7_term_sketch1 --> Problem  synth_2
Sketch conj8_term_sketch1 --> Problem  synth_7
Sketch conj5_term_sketch0 --> Problem  synth_4
Sketch conj6_sketch0 --> Problem  synth_5
Sketch conj16_sketch1 --> Problem  synth_8
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj15_sketch2 --> Problem  synth_19
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch2 --> Problem  synth_14
Sketch conj7_term_sketch0 --> Problem  synth_4
Sketch conj13_term_sketch0 --> Problem  synth_13
Sketch conj15_sketch0 --> Problem  synth_8
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj16_sketch0 --> Problem  synth_20
Sketch conj13_sketch1 --> Problem  synth_12
Sketch conj14_sketch0 --> Problem  synth_15
Sketch conj14_term_sketch0 --> Problem  synth_6
Sketch conj16_term_sketch0 --> Problem  synth_6
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj8_sketch0 --> Problem  synth_10
Sketch conj16_term_sketch3 --> Problem  synth_2
Sketch conj8_term_sketch2 --> Problem  synth_2
Sketch conj15_term_sketch0 --> Problem  synth_13
Sketch conj14_sketch1 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 971 seconds

Problem: synth_22
 less n (Succ n)
 less x (Succ x)
 lfeqb n0 n0
 lfeqb n n
 lfeqb x x
 true

Problem: synth_20

Problem: synth_18

Problem: synth_17
 mem x (insort n0 (sort (sort l)))
 mem x (sort (insort n0 l))
 mem x (insort n0 (sort l))
 orb (lfeqb x n0) (mem x (sort l))
 mem x (insort n0 l)
 orb (lfeqb x n0) (mem x l)

Problem: synth_21

Problem: synth_9
 less x (Succ x)
 lfeqb n n
 lfeqb x x
 orb lf3 true
 orb lf2 true
 true

Problem: synth_13
 orb lf2 (orb lf2 (mem x l))
 orb lf2 (mem x (sort (sort l)))
 orb (mem x (sort l)) lf2
 orb (mem x l) lf2
 orb lf2 (mem x (sort l))
 orb lf2 (mem x l)

Problem: synth_6
 mem n0 (if less x x then Cons x (Cons x Nil) else Cons x (Cons x Nil))
 orb (lfeqb n0 x) (orb (lfeqb n0 x) false)
 orb (lfeqb x n0) false
 orb (lfeqb n0 x) false
 lfeqb x n0
 lfeqb n0 x

Problem: synth_11
 less x (Succ x)
 lfeqb n0 n0
 lfeqb n n
 lfeqb x x
 orb lf3 true
 true

Problem: synth_7
 orb lf3 (orb (lfeqb x n0) false)
 orb lf3 (orb (lfeqb n0 x) false)
 orb (lfeqb x n0) lf3
 orb (lfeqb n0 x) lf3
 orb lf3 (lfeqb x n0)
 orb lf3 (lfeqb n0 x)

Problem: synth_4
 orb lf2 (orb lf3 lf2)
 orb lf3 (orb lf2 lf2)
 orb lf2 (orb lf3 false)
 orb lf3 (orb lf2 false)
 orb lf2 lf3
 orb lf3 lf2

Problem: synth_1
 less n (Succ n)
 less x (Succ x)
 lfeqb n n
 lfeqb x x
 orb lf1 true
 true

Problem: synth_16

Problem: synth_19
 less n (Succ n)
 less x (Succ x)
 lfeqb n n
 lfeqb x x
 orb lf2 true
 true

Problem: synth_15

Problem: synth_14
 orb (lfeqb x (Succ x)) (mem x l)
 orb (mem x (sort l)) false
 orb (mem x l) false
 mem x (sort (sort l))
 mem x (sort l)
 mem x l

Problem: synth_10

Problem: synth_8

Problem: synth_3

Problem: synth_12

Problem: synth_5

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 971 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (lf1 : bool) (x : natural), or (@eq natural x n) (@eq bool lf1 (less n (Succ n))).
Lemma candidate_2: forall (n : natural) (lf1 : bool) (x : natural), or (@eq natural x n) (@eq bool lf1 (less x (Succ x))).
Lemma candidate_3: forall (n : natural) (lf1 : bool) (x : natural), or (@eq natural x n) (@eq bool lf1 (lfeqb n n)).
Lemma candidate_4: forall (n : natural) (lf1 : bool) (x : natural), or (@eq natural x n) (@eq bool lf1 (lfeqb x x)).
Lemma candidate_5: forall (n : natural) (lf1 : bool) (x : natural), or (@eq natural x n) (@eq bool lf1 (orb lf1 true)).
Lemma candidate_6: forall (n : natural) (lf1 : bool) (x : natural), or (@eq natural x n) (@eq bool lf1 (true)).
Lemma candidate_7: @eq bool true (true).
Lemma candidate_8: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 (orb lf3 lf2)).
Lemma candidate_9: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 (orb lf2 lf2)).
Lemma candidate_10: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 (orb lf3 false)).
Lemma candidate_11: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 (orb lf2 false)).
Lemma candidate_12: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 lf3).
Lemma candidate_13: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 lf2).
Lemma candidate_14: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0)   (mem n0 (if less x x then Cons x (Cons x Nil) else Cons x (Cons x Nil))).
Lemma candidate_15: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) (orb (lfeqb n0 x) false)).
Lemma candidate_16: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb x n0) false).
Lemma candidate_17: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) false).
Lemma candidate_18: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb x n0).
Lemma candidate_19: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb n0 x).
Lemma candidate_20: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (orb (lfeqb x n0) false)).
Lemma candidate_21: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (orb (lfeqb n0 x) false)).
Lemma candidate_22: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb (lfeqb x n0) lf3).
Lemma candidate_23: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb (lfeqb n0 x) lf3).
Lemma candidate_24: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (lfeqb x n0)).
Lemma candidate_25: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (lfeqb n0 x)).
Lemma candidate_26: forall (lf3 : bool) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) (less x (Succ x))).
Lemma candidate_27: forall (lf3 : bool) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) (lfeqb n n)).
Lemma candidate_28: forall (lf3 : bool) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) (lfeqb x x)).
Lemma candidate_29: forall (lf3 : bool) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) (orb lf3 true)).
Lemma candidate_30: forall (lf3 : bool) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) (orb lf2 true)).
Lemma candidate_31: forall (lf3 : bool) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 lf3) (true)).
Lemma candidate_32: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 (orb lf3 lf2)).
Lemma candidate_33: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 (orb lf2 lf2)).
Lemma candidate_34: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 (orb lf3 false)).
Lemma candidate_35: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 (orb lf2 false)).
Lemma candidate_36: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 lf3).
Lemma candidate_37: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 lf2).
Lemma candidate_38: @eq bool true (true).
Lemma candidate_39: forall (lf3 : bool) (n0 : natural) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (less x (Succ x))).
Lemma candidate_40: forall (lf3 : bool) (n0 : natural) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (lfeqb n0 n0)).
Lemma candidate_41: forall (lf3 : bool) (n0 : natural) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (lfeqb n n)).
Lemma candidate_42: forall (lf3 : bool) (n0 : natural) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (lfeqb x x)).
Lemma candidate_43: forall (lf3 : bool) (n0 : natural) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (orb lf3 true)).
Lemma candidate_44: forall (lf3 : bool) (n0 : natural) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) lf3) (true)).
Lemma candidate_45: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0)   (mem n0 (if less x x then Cons x (Cons x Nil) else Cons x (Cons x Nil))).
Lemma candidate_46: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) (orb (lfeqb n0 x) false)).
Lemma candidate_47: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb x n0) false).
Lemma candidate_48: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) false).
Lemma candidate_49: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb x n0).
Lemma candidate_50: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb n0 x).
Lemma candidate_51: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (orb (lfeqb x n0) false)).
Lemma candidate_52: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (orb (lfeqb n0 x) false)).
Lemma candidate_53: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb (lfeqb x n0) lf3).
Lemma candidate_54: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb (lfeqb n0 x) lf3).
Lemma candidate_55: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (lfeqb x n0)).
Lemma candidate_56: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (lfeqb n0 x)).
Lemma candidate_57: @eq bool true (true).
Lemma candidate_58: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (orb lf2 (mem x l))).
Lemma candidate_59: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x (sort (sort l)))).
Lemma candidate_60: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb (mem x (sort l)) lf2).
Lemma candidate_61: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb (mem x l) lf2).
Lemma candidate_62: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x (sort l))).
Lemma candidate_63: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x l)).
Lemma candidate_64: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (lfeqb x (Succ x)) (mem x l)).
Lemma candidate_65: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x (sort l)) false).
Lemma candidate_66: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x l) false).
Lemma candidate_67: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort (sort l))).
Lemma candidate_68: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort l)).
Lemma candidate_69: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x l).
Lemma candidate_70: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0)   (mem n0 (if less x x then Cons x (Cons x Nil) else Cons x (Cons x Nil))).
Lemma candidate_71: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) (orb (lfeqb n0 x) false)).
Lemma candidate_72: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb x n0) false).
Lemma candidate_73: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) false).
Lemma candidate_74: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb x n0).
Lemma candidate_75: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb n0 x).
Lemma candidate_76: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 (sort (sort l)))).
Lemma candidate_77: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (sort (insort n0 l))).
Lemma candidate_78: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 (sort l))).
Lemma candidate_79: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (orb (lfeqb x n0) (mem x (sort l))).
Lemma candidate_80: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 l)).
Lemma candidate_81: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (orb (lfeqb x n0) (mem x l)).
Lemma candidate_82: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (lfeqb x (Succ x)) (mem x l)).
Lemma candidate_83: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x (sort l)) false).
Lemma candidate_84: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x l) false).
Lemma candidate_85: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort (sort l))).
Lemma candidate_86: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort l)).
Lemma candidate_87: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x l).
Lemma candidate_88: forall (l : lst) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (less n (Succ n))).
Lemma candidate_89: forall (l : lst) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (less x (Succ x))).
Lemma candidate_90: forall (l : lst) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (lfeqb n n)).
Lemma candidate_91: forall (l : lst) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (lfeqb x x)).
Lemma candidate_92: forall (l : lst) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (orb lf2 true)).
Lemma candidate_93: forall (l : lst) (n : natural) (x : natural) (lf2 : bool), or (@eq natural x n) (@eq bool (orb lf2 (mem x l)) (true)).
Lemma candidate_94: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (orb lf2 (mem x l))).
Lemma candidate_95: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x (sort (sort l)))).
Lemma candidate_96: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb (mem x (sort l)) lf2).
Lemma candidate_97: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb (mem x l) lf2).
Lemma candidate_98: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x (sort l))).
Lemma candidate_99: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x l)).
Lemma candidate_100: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (lfeqb x (Succ x)) (mem x l)).
Lemma candidate_101: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x (sort l)) false).
Lemma candidate_102: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x l) false).
Lemma candidate_103: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort (sort l))).
Lemma candidate_104: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort l)).
Lemma candidate_105: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x l).
Lemma candidate_106: @eq bool true (true).
Lemma candidate_107: forall (n0 : natural) (l : lst) (n : natural) (x : natural), or (@eq natural x n)   (@eq bool (orb (lfeqb x n0) (mem x l)) (less n (Succ n))).
Lemma candidate_108: forall (n0 : natural) (l : lst) (n : natural) (x : natural), or (@eq natural x n)   (@eq bool (orb (lfeqb x n0) (mem x l)) (less x (Succ x))).
Lemma candidate_109: forall (n0 : natural) (l : lst) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) (lfeqb n0 n0)).
Lemma candidate_110: forall (n0 : natural) (l : lst) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) (lfeqb n n)).
Lemma candidate_111: forall (n0 : natural) (l : lst) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) (lfeqb x x)).
Lemma candidate_112: forall (n0 : natural) (l : lst) (n : natural) (x : natural), or (@eq natural x n) (@eq bool (orb (lfeqb x n0) (mem x l)) (true)).
Lemma candidate_113: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0)   (mem n0 (if less x x then Cons x (Cons x Nil) else Cons x (Cons x Nil))).
Lemma candidate_114: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) (orb (lfeqb n0 x) false)).
Lemma candidate_115: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb x n0) false).
Lemma candidate_116: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) false).
Lemma candidate_117: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb x n0).
Lemma candidate_118: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb n0 x).
Lemma candidate_119: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 (sort (sort l)))).
Lemma candidate_120: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (sort (insort n0 l))).
Lemma candidate_121: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 (sort l))).
Lemma candidate_122: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (orb (lfeqb x n0) (mem x (sort l))).
Lemma candidate_123: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 l)).
Lemma candidate_124: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (orb (lfeqb x n0) (mem x l)).
Lemma candidate_125: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (lfeqb x (Succ x)) (mem x l)).
Lemma candidate_126: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x (sort l)) false).
Lemma candidate_127: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x l) false).
Lemma candidate_128: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort (sort l))).
Lemma candidate_129: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort l)).
Lemma candidate_130: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x l).
Lemma candidate_131: @eq bool true (true).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1190 seconds
Duplicates removed: 64
Filtered by Quickchick: 30
Filtered by script: 7
Remaining: 30

Lemmas: 
Lemma candidate_19: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (lfeqb n0 x).
Lemma candidate_68: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort l)).
Lemma candidate_13: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 lf2).
Lemma candidate_66: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x l) false).
Lemma candidate_67: forall (l : lst) (x : natural), @eq bool (mem x l) (mem x (sort (sort l))).
Lemma candidate_17: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) false).
Lemma candidate_16: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb x n0) false).
Lemma candidate_9: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 (orb lf2 lf2)).
Lemma candidate_8: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 (orb lf3 lf2)).
Lemma candidate_65: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (mem x (sort l)) false).
Lemma candidate_61: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb (mem x l) lf2).
Lemma candidate_11: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf3 (orb lf2 false)).
Lemma candidate_10: forall (lf3 : bool) (lf2 : bool), @eq bool (orb lf2 lf3) (orb lf2 (orb lf3 false)).
Lemma candidate_64: forall (l : lst) (x : natural), @eq bool (mem x l) (orb (lfeqb x (Succ x)) (mem x l)).
Lemma candidate_25: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (lfeqb n0 x)).
Lemma candidate_24: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (lfeqb x n0)).
Lemma candidate_23: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb (lfeqb n0 x) lf3).
Lemma candidate_62: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x (sort l))).
Lemma candidate_60: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb (mem x (sort l)) lf2).
Lemma candidate_58: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (orb lf2 (mem x l))).
Lemma candidate_80: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 l)).
Lemma candidate_59: forall (l : lst) (x : natural) (lf2 : bool), @eq bool (orb lf2 (mem x l)) (orb lf2 (mem x (sort (sort l)))).
Lemma candidate_15: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0) (orb (lfeqb n0 x) (orb (lfeqb n0 x) false)).
Lemma candidate_78: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 (sort l))).
Lemma candidate_77: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (sort (insort n0 l))).
Lemma candidate_21: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (orb (lfeqb n0 x) false)).
Lemma candidate_20: forall (lf3 : bool) (n0 : natural) (x : natural), @eq bool (orb (lfeqb x n0) lf3) (orb lf3 (orb (lfeqb x n0) false)).
Lemma candidate_79: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (orb (lfeqb x n0) (mem x (sort l))).
Lemma candidate_76: forall (n0 : natural) (l : lst) (x : natural), @eq bool (orb (lfeqb x n0) (mem x l)) (mem x (insort n0 (sort (sort l)))).
Lemma candidate_14: forall (n0 : natural) (x : natural), @eq bool (lfeqb x n0)   (mem n0 (if less x x then Cons x (Cons x Nil) else Cons x (Cons x Nil))).
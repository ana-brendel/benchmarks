File Information
- File name: goal20
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal20_theorem0_40_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal20_theorem0_40_lem
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : lst, @eq bool (even (len (lfappend x0 x0))) true.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq bool (negb (even (len (lfappend x (Cons n x))))) true

* Hypothesis:
IHx : @eq bool (even (len (lfappend x x))) true
x : lst
n : natural

* Types:
Set
natural
Prop
lst
bool

* Polymorphic Types:


* Variables:
x : lst
n : natural

* Terms:
even (len (lfappend x x)) : bool
bool : Set
even (len (lfappend x (Cons n x))) : bool
x : lst
Cons n x : lst
lst : Set
lfappend x x : lst
len (lfappend x x) : natural
len (lfappend x (Cons n x)) : natural
@eq bool (negb (even (len (lfappend x (Cons n x))))) true : Prop
natural : Set
true : bool
n : natural
negb (even (len (lfappend x (Cons n x)))) : bool
@eq bool (even (len (lfappend x x))) true : Prop
lfappend x (Cons n x) : lst

* Functions:
len  : forall _ : lst, natural
lfappend  : forall (_ : lst) (_ : lst), lst
even  : forall _ : natural, bool
negb  : forall _ : bool, bool
Cons  : forall (_ : natural) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : natural = len (lfappend x (Cons n x))
lf1 : bool = negb (even (len (lfappend x (Cons n x))))
lf4 : lst = lfappend x (Cons n x)
lf5 : lst = Cons n x
lf2 : bool = even (len (lfappend x (Cons n x)))
lf6 : bool = true

Generalizations:
Lemma conj1: forall (lf6 : bool) (lf1 : bool), @eq bool lf1 lf6.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj17: forall (lf6 : bool) (lf2 : bool), @eq bool (negb lf2) lf6.
Lemma conj18: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj19: forall (lf6 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf6.
Lemma conj20: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj51: forall (lf6 : bool) (lf4 : lst), @eq bool (negb (even (len lf4))) lf6.
Lemma conj52: forall (lf4 : lst), @eq bool (negb (even (len lf4))) true.
Lemma conj59: forall (lf6 : bool) (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) lf6.
Lemma conj60: forall (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) true.
Lemma conj63: forall (lf6 : bool) (x : lst) (n : natural), @eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.
Lemma conj64: forall (x : lst) (n : natural), @eq bool (negb (even (len (lfappend x (Cons n x))))) true.


<---VALIDITY CHECKS--->
Time elapsed: 25 seconds
Valid:
Lemma conj64: forall (x : lst) (n : natural), @eq bool (negb (even (len (lfappend x (Cons n x))))) true.

Invalid:
Lemma conj63: forall (lf6 : bool) (x : lst) (n : natural), @eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.
Lemma conj60: forall (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) true.
Lemma conj59: forall (lf6 : bool) (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) lf6.
Lemma conj52: forall (lf4 : lst), @eq bool (negb (even (len lf4))) true.
Lemma conj51: forall (lf6 : bool) (lf4 : lst), @eq bool (negb (even (len lf4))) lf6.
Lemma conj20: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj19: forall (lf6 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf6.
Lemma conj18: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj17: forall (lf6 : bool) (lf2 : bool), @eq bool (negb lf2) lf6.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf6 : bool) (lf1 : bool), @eq bool lf1 lf6.

<---ADD IMPLICATIONS--->
Time elapsed: 35 seconds
Generalizations:
Lemma conj63: forall (lf6 : bool) (x : lst) (n : natural), @eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.
Lemma conj63_imp: forall (lf6 : bool) (x : lst) (n : natural), forall _ : @eq bool (even (len (lfappend x x))) lf6,
@eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.
Lemma conj60: forall (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) true.
Lemma conj59: forall (lf6 : bool) (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) lf6.
Lemma conj52: forall (lf4 : lst), @eq bool (negb (even (len lf4))) true.
Lemma conj51: forall (lf6 : bool) (lf4 : lst), @eq bool (negb (even (len lf4))) lf6.
Lemma conj20: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj19: forall (lf6 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf6.
Lemma conj18: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj17: forall (lf6 : bool) (lf2 : bool), @eq bool (negb lf2) lf6.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj1: forall (lf6 : bool) (lf1 : bool), @eq bool lf1 lf6.


<---VALIDITY CHECKS--->
Time elapsed: 52 seconds
Valid:
Lemma conj63_imp: forall (lf6 : bool) (x : lst) (n : natural), forall _ : @eq bool (even (len (lfappend x x))) lf6,
@eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.

Invalid:
Lemma conj1: forall (lf6 : bool) (lf1 : bool), @eq bool lf1 lf6.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 true.
Lemma conj17: forall (lf6 : bool) (lf2 : bool), @eq bool (negb lf2) lf6.
Lemma conj18: forall (lf2 : bool), @eq bool (negb lf2) true.
Lemma conj19: forall (lf6 : bool) (lf3 : natural), @eq bool (negb (even lf3)) lf6.
Lemma conj20: forall (lf3 : natural), @eq bool (negb (even lf3)) true.
Lemma conj51: forall (lf6 : bool) (lf4 : lst), @eq bool (negb (even (len lf4))) lf6.
Lemma conj52: forall (lf4 : lst), @eq bool (negb (even (len lf4))) true.
Lemma conj59: forall (lf6 : bool) (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) lf6.
Lemma conj60: forall (lf5 : lst) (x : lst), @eq bool (negb (even (len (lfappend x lf5)))) true.
Lemma conj63: forall (lf6 : bool) (x : lst) (n : natural), @eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.


<---CREATE SKETCHES--->
Time elapsed: 52 seconds
Sketches:
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool true (##hole##)
Sketch conj17_sketch0 : @eq bool (##hole##) lf6
Sketch conj17_term_sketch0 : @eq bool (negb lf2) (##hole##)
Sketch conj18_sketch0 : @eq bool (##hole##) true
Sketch conj18_sketch1 : @eq bool (negb lf2) (##hole##)
Sketch conj18_term_sketch0 : @eq bool (negb lf2) (##hole##)
Sketch conj18_term_sketch1 : @eq bool true (##hole##)
Sketch conj19_sketch0 : @eq bool (negb (##hole##)) lf6
Sketch conj19_sketch1 : @eq bool (##hole##) lf6
Sketch conj19_term_sketch0 : @eq bool (even lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq bool (negb (even lf3)) (##hole##)
Sketch conj20_sketch0 : @eq bool (negb (##hole##)) true
Sketch conj20_sketch1 : @eq bool (negb (even lf3)) (##hole##)
Sketch conj20_sketch2 : @eq bool (##hole##) true
Sketch conj20_term_sketch0 : @eq bool (even lf3) (##hole##)
Sketch conj20_term_sketch1 : @eq bool true (##hole##)
Sketch conj20_term_sketch2 : @eq bool (negb (even lf3)) (##hole##)
Sketch conj51_sketch0 : @eq bool (##hole##) lf6
Sketch conj51_sketch1 : @eq bool (negb (##hole##)) lf6
Sketch conj51_sketch2 : @eq bool (negb (even (##hole##))) lf6
Sketch conj51_term_sketch0 : @eq bool (negb (even (len lf4))) (##hole##)
Sketch conj51_term_sketch1 : @eq bool (even (len lf4)) (##hole##)
Sketch conj51_term_sketch2 : @eq natural (len lf4) (##hole##)
Sketch conj52_sketch0 : @eq bool (##hole##) true
Sketch conj52_sketch1 : @eq bool (negb (##hole##)) true
Sketch conj52_sketch2 : @eq bool (negb (even (len lf4))) (##hole##)
Sketch conj52_sketch3 : @eq bool (negb (even (##hole##))) true
Sketch conj52_term_sketch0 : @eq bool (negb (even (len lf4))) (##hole##)
Sketch conj52_term_sketch1 : @eq bool (even (len lf4)) (##hole##)
Sketch conj52_term_sketch2 : @eq bool true (##hole##)
Sketch conj52_term_sketch3 : @eq natural (len lf4) (##hole##)
Sketch conj59_sketch0 : @eq bool (##hole##) lf6
Sketch conj59_sketch1 : @eq bool (negb (even (##hole##))) lf6
Sketch conj59_sketch2 : @eq bool (negb (even (len (##hole##)))) lf6
Sketch conj59_sketch3 : @eq bool (negb (##hole##)) lf6
Sketch conj59_term_sketch0 : @eq bool (negb (even (len (lfappend x lf5)))) (##hole##)
Sketch conj59_term_sketch1 : @eq natural (len (lfappend x lf5)) (##hole##)
Sketch conj59_term_sketch2 : @eq lst (lfappend x lf5) (##hole##)
Sketch conj59_term_sketch3 : @eq bool (even (len (lfappend x lf5))) (##hole##)
Sketch conj60_sketch0 : @eq bool (##hole##) true
Sketch conj60_sketch1 : @eq bool (negb (even (##hole##))) true
Sketch conj60_sketch2 : @eq bool (negb (even (len (##hole##)))) true
Sketch conj60_sketch3 : @eq bool (negb (even (len (lfappend x lf5)))) (##hole##)
Sketch conj60_sketch4 : @eq bool (negb (##hole##)) true
Sketch conj60_term_sketch0 : @eq bool (negb (even (len (lfappend x lf5)))) (##hole##)
Sketch conj60_term_sketch1 : @eq natural (len (lfappend x lf5)) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (lfappend x lf5) (##hole##)
Sketch conj60_term_sketch3 : @eq bool true (##hole##)
Sketch conj60_term_sketch4 : @eq bool (even (len (lfappend x lf5))) (##hole##)
Sketch conj63_sketch0 : @eq bool (negb (##hole##)) lf6
Sketch conj63_sketch1 : @eq bool (negb (even (len (lfappend x (##hole##))))) lf6
Sketch conj63_sketch2 : @eq bool (negb (even (##hole##))) lf6
Sketch conj63_sketch3 : @eq bool (##hole##) lf6
Sketch conj63_sketch4 : @eq bool (negb (even (len (##hole##)))) lf6
Sketch conj63_term_sketch0 : @eq bool (even (len (lfappend x (Cons n x)))) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (Cons n x) (##hole##)
Sketch conj63_term_sketch2 : @eq natural (len (lfappend x (Cons n x))) (##hole##)
Sketch conj63_term_sketch3 : @eq bool (negb (even (len (lfappend x (Cons n x))))) (##hole##)
Sketch conj63_term_sketch4 : @eq lst (lfappend x (Cons n x)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 120 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_10
Sketch conj51_term_sketch1 --> Problem  synth_11
Sketch conj52_sketch1 --> Problem  synth_8
Sketch conj51_term_sketch0 --> Problem  synth_10
Sketch conj60_term_sketch1 --> Problem  synth_16
Sketch conj59_term_sketch2 --> Problem  synth_17
Sketch conj52_term_sketch0 --> Problem  synth_10
Sketch conj19_sketch0 --> Problem  synth_5
Sketch conj17_sketch0 --> Problem  synth_3
Sketch conj63_sketch4 --> Problem  synth_14
Sketch conj63_sketch2 --> Problem  synth_9
Sketch conj20_sketch2 --> Problem  synth_2
Sketch conj60_term_sketch4 --> Problem  synth_18
Sketch conj59_term_sketch1 --> Problem  synth_16
Sketch conj59_sketch1 --> Problem  synth_9
Sketch conj52_sketch0 --> Problem  synth_2
Sketch conj60_sketch0 --> Problem  synth_2
Sketch conj20_term_sketch2 --> Problem  synth_7
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj17_term_sketch0 --> Problem  synth_4
Sketch conj63_term_sketch0 --> Problem  synth_21
Sketch conj59_sketch0 --> Problem  synth_3
Sketch conj20_sketch1 --> Problem  synth_7
Sketch conj63_term_sketch3 --> Problem  synth_24
Sketch conj63_sketch0 --> Problem  synth_5
Sketch conj63_sketch3 --> Problem  synth_3
Sketch conj60_term_sketch3 --> Problem  synth_2
Sketch conj59_term_sketch0 --> Problem  synth_15
Sketch conj52_sketch3 --> Problem  synth_13
Sketch conj59_term_sketch3 --> Problem  synth_18
Sketch conj51_sketch1 --> Problem  synth_5
Sketch conj60_term_sketch2 --> Problem  synth_17
Sketch conj60_sketch1 --> Problem  synth_13
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj63_sketch1 --> Problem  synth_20
Sketch conj60_sketch2 --> Problem  synth_19
Sketch conj59_sketch3 --> Problem  synth_5
Sketch conj18_sketch0 --> Problem  synth_2
Sketch conj20_term_sketch1 --> Problem  synth_2
Sketch conj19_sketch1 --> Problem  synth_3
Sketch conj63_term_sketch4 --> Problem  synth_25
Sketch conj59_sketch2 --> Problem  synth_14
Sketch conj52_term_sketch1 --> Problem  synth_11
Sketch conj20_sketch0 --> Problem  synth_8
Sketch conj18_term_sketch0 --> Problem  synth_4
Sketch conj20_term_sketch0 --> Problem  synth_6
Sketch conj18_term_sketch1 --> Problem  synth_2
Sketch conj19_term_sketch1 --> Problem  synth_7
Sketch conj51_term_sketch2 --> Problem  synth_12
Sketch conj60_sketch4 --> Problem  synth_8
Sketch conj60_term_sketch0 --> Problem  synth_15
Sketch conj52_term_sketch2 --> Problem  synth_2
Sketch conj60_sketch3 --> Problem  synth_15
Sketch conj51_sketch0 --> Problem  synth_3
Sketch conj51_sketch2 --> Problem  synth_9
Sketch conj19_term_sketch0 --> Problem  synth_6
Sketch conj63_term_sketch2 --> Problem  synth_23
Sketch conj52_term_sketch3 --> Problem  synth_12
Sketch conj63_term_sketch1 --> Problem  synth_22
Sketch conj18_sketch1 --> Problem  synth_4


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 283 seconds

Problem: synth_22
 Cons n (lfappend (lfappend x Nil) Nil)
 Cons n (lfappend x Nil)
 Cons n x

Problem: synth_20

Problem: synth_18
 even (len (lfappend x (lfappend lf5 Nil)))
 negb (even (len (lfappend x x)))
 negb (even (len (lfappend lf5 lf5)))
 even (len (lfappend lf5 x))
 even (len (lfappend x lf5))
 false

Problem: synth_17
 lfappend (lfappend x (lfappend lf5 Nil)) Nil
 lfappend (lfappend x Nil) (lfappend lf5 Nil)
 lfappend (lfappend x Nil) lf5
 lfappend (lfappend x lf5) Nil
 lfappend x (lfappend lf5 Nil)
 lfappend x lf5

Problem: synth_21
 even (len (lfappend x (Cons (Succ Zero) x)))
 negb (even (len (lfappend x (lfappend x Nil))))
 even (len (lfappend x (Cons n x)))
 even (len (lfappend x (Cons Zero x)))
 negb (even (len (lfappend x x)))
 false

Problem: synth_9

Problem: synth_25
 lfappend (lfappend x (Cons n Nil)) x
 lfappend (lfappend x (Cons n x)) Nil
 lfappend (lfappend x Nil) (Cons n (lfappend x Nil))
 lfappend (lfappend x Nil) (Cons n x)
 lfappend x (Cons n (lfappend x Nil))
 lfappend x (Cons n x)

Problem: synth_13

Problem: synth_6
 negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))
 negb (negb (negb (negb (negb (negb (even lf3))))))
 negb (negb (negb (negb (even lf3))))
 negb (negb (even lf3))
 even lf3
 false

Problem: synth_11
 even (len (lfappend lf4 (Cons Zero lf4)))
 negb (even (len (lfappend lf4 lf4)))
 even (len (lfappend lf4 Nil))
 negb (negb (even (len lf4)))
 even (len lf4)
 false

Problem: synth_7
 negb (negb (negb (negb (negb (negb (negb (even lf3)))))))
 negb (negb (negb (negb (negb (even lf3)))))
 negb (negb (negb (even lf3)))
 negb (even lf3)
 true

Problem: synth_4
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))
 negb (negb (negb (negb (negb (negb (negb lf2))))))
 negb (negb (negb (negb (negb lf2))))
 negb (negb (negb lf2))
 negb lf2
 true

Problem: synth_1
 negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))
 negb (negb (negb (negb (negb (negb lf1)))))
 negb (negb (negb (negb lf1)))
 negb (negb lf1)
 lf1
 true

Problem: synth_23
 len (lfappend x (Cons (Succ n) x))
 len (lfappend x (Cons (Succ Zero) x))
 Succ (len (lfappend x (lfappend x Nil)))
 len (lfappend x (Cons n x))
 len (lfappend x (Cons Zero x))
 Succ (len (lfappend x x))

Problem: synth_16
 len (lfappend x (Cons Zero x))
 len (lfappend lf5 (lfappend x Nil))
 len (lfappend x (lfappend lf5 Nil))
 Succ (len (lfappend x x))
 len (lfappend lf5 x)
 len (lfappend x lf5)

Problem: synth_19

Problem: synth_15
 even (len (lfappend lf5 (lfappend lf5 Nil)))
 negb (even (len (lfappend lf5 x)))
 negb (even (len (lfappend x lf5)))
 even (len (lfappend x x))
 even (len (lfappend lf5 lf5))
 true

Problem: synth_14

Problem: synth_10
 even (len (lfappend lf4 (Cons Zero Nil)))
 negb (even (len (lfappend lf4 Nil)))
 negb (negb (negb (even (len lf4))))
 even (len (lfappend lf4 lf4))
 negb (even (len lf4))
 true

Problem: synth_8
 false

Problem: synth_24
 negb (even (len (lfappend x (Cons n x))))
 negb (even (len (lfappend x (Cons Zero x))))
 negb (negb (even (len (lfappend x x))))
 even (len (lfappend x (lfappend x Nil)))
 even (len (lfappend x x))
 true

Problem: synth_3
 negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))
 negb (negb (negb (negb (negb (negb lf6)))))
 negb (negb (negb (negb lf6)))
 negb (negb lf6)
 lf6
 true

Problem: synth_12
 len (lfappend (lfappend (lfappend lf4 Nil) Nil) Nil)
 len (lfappend (lfappend lf4 Nil) Nil)
 len (lfappend lf4 Nil)
 len lf4

Problem: synth_5
 negb (negb (negb (negb (negb (negb (negb (negb (negb lf6))))))))
 negb (negb (negb (negb (negb (negb (negb lf6))))))
 negb (negb (negb (negb (negb lf6))))
 negb (negb (negb lf6))
 negb lf6
 false

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 283 seconds
Lemmas:
Lemma candidate_1: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x))))) true.
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : bool), forall _ : @eq bool (even (len (lfappend x x))) lf6, @eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))).
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb lf1)))))).
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb lf1)))).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (negb (negb lf1)).
Lemma candidate_7: forall (lf1 : bool), @eq bool lf1 (lf1).
Lemma candidate_8: forall (lf1 : bool), @eq bool lf1 (true).
Lemma candidate_9: @eq bool true (true).
Lemma candidate_10: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_11: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_12: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_13: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_14: forall (lf6 : bool), @eq bool (lf6) lf6.
Lemma candidate_15: forall (lf6 : bool), @eq bool (true) lf6.
Lemma candidate_16: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_17: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_18: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_19: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_20: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_21: forall (lf2 : bool), @eq bool (negb lf2) (true).
Lemma candidate_22: @eq bool (true) true.
Lemma candidate_23: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_24: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_25: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_26: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_27: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_28: forall (lf2 : bool), @eq bool (negb lf2) (true).
Lemma candidate_29: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_30: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_31: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_32: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_33: forall (lf2 : bool), @eq bool (negb lf2) (negb lf2).
Lemma candidate_34: forall (lf2 : bool), @eq bool (negb lf2) (true).
Lemma candidate_35: @eq bool true (true).
Lemma candidate_36: forall (lf6 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf6))))))))))   lf6.
Lemma candidate_37: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_38: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_39: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_40: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_41: forall (lf6 : bool), @eq bool (negb (false)) lf6.
Lemma candidate_42: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_43: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_44: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_45: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_46: forall (lf6 : bool), @eq bool (lf6) lf6.
Lemma candidate_47: forall (lf6 : bool), @eq bool (true) lf6.
Lemma candidate_48: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_49: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_50: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_51: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_52: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_53: forall (lf3 : natural), @eq bool (even lf3) (false).
Lemma candidate_54: forall (lf3 : natural), @eq bool (negb (even lf3))   (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))).
Lemma candidate_55: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (negb (negb (even lf3)))))).
Lemma candidate_56: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_57: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even lf3)).
Lemma candidate_58: forall (lf3 : natural), @eq bool (negb (even lf3)) (true).
Lemma candidate_59: @eq bool (negb (false)) true.
Lemma candidate_60: forall (lf3 : natural), @eq bool (negb (even lf3))   (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))).
Lemma candidate_61: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (negb (negb (even lf3)))))).
Lemma candidate_62: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_63: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even lf3)).
Lemma candidate_64: forall (lf3 : natural), @eq bool (negb (even lf3)) (true).
Lemma candidate_65: @eq bool (true) true.
Lemma candidate_66: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_67: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_68: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_69: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_70: forall (lf3 : natural), @eq bool (even lf3) (even lf3).
Lemma candidate_71: forall (lf3 : natural), @eq bool (even lf3) (false).
Lemma candidate_72: @eq bool true (true).
Lemma candidate_73: forall (lf3 : natural), @eq bool (negb (even lf3))   (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))).
Lemma candidate_74: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (negb (negb (even lf3)))))).
Lemma candidate_75: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_76: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (even lf3)).
Lemma candidate_77: forall (lf3 : natural), @eq bool (negb (even lf3)) (true).
Lemma candidate_78: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_79: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_80: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_81: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_82: forall (lf6 : bool), @eq bool (lf6) lf6.
Lemma candidate_83: forall (lf6 : bool), @eq bool (true) lf6.
Lemma candidate_84: forall (lf6 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf6))))))))))   lf6.
Lemma candidate_85: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_86: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_87: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_88: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_89: forall (lf6 : bool), @eq bool (negb (false)) lf6.
Lemma candidate_90: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 (Cons Zero Nil)))).
Lemma candidate_91: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len (lfappend lf4 Nil)))).
Lemma candidate_92: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (negb (negb (even (len lf4))))).
Lemma candidate_93: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 lf4))).
Lemma candidate_94: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len lf4))).
Lemma candidate_95: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (true).
Lemma candidate_96: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len (lfappend lf4 (Cons Zero lf4)))).
Lemma candidate_97: forall (lf4 : lst), @eq bool (even (len lf4)) (negb (even (len (lfappend lf4 lf4)))).
Lemma candidate_98: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len (lfappend lf4 Nil))).
Lemma candidate_99: forall (lf4 : lst), @eq bool (even (len lf4)) (negb (negb (even (len lf4)))).
Lemma candidate_100: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len lf4)).
Lemma candidate_101: forall (lf4 : lst), @eq bool (even (len lf4)) (false).
Lemma candidate_102: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend (lfappend (lfappend lf4 Nil) Nil) Nil)).
Lemma candidate_103: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_104: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_105: forall (lf4 : lst), @eq natural (len lf4) (len lf4).
Lemma candidate_106: @eq bool (true) true.
Lemma candidate_107: @eq bool (negb (false)) true.
Lemma candidate_108: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 (Cons Zero Nil)))).
Lemma candidate_109: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len (lfappend lf4 Nil)))).
Lemma candidate_110: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (negb (negb (even (len lf4))))).
Lemma candidate_111: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 lf4))).
Lemma candidate_112: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len lf4))).
Lemma candidate_113: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (true).
Lemma candidate_114: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 (Cons Zero Nil)))).
Lemma candidate_115: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len (lfappend lf4 Nil)))).
Lemma candidate_116: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (negb (negb (even (len lf4))))).
Lemma candidate_117: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 lf4))).
Lemma candidate_118: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len lf4))).
Lemma candidate_119: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (true).
Lemma candidate_120: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len (lfappend lf4 (Cons Zero lf4)))).
Lemma candidate_121: forall (lf4 : lst), @eq bool (even (len lf4)) (negb (even (len (lfappend lf4 lf4)))).
Lemma candidate_122: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len (lfappend lf4 Nil))).
Lemma candidate_123: forall (lf4 : lst), @eq bool (even (len lf4)) (negb (negb (even (len lf4)))).
Lemma candidate_124: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len lf4)).
Lemma candidate_125: forall (lf4 : lst), @eq bool (even (len lf4)) (false).
Lemma candidate_126: @eq bool true (true).
Lemma candidate_127: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend (lfappend (lfappend lf4 Nil) Nil) Nil)).
Lemma candidate_128: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_129: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_130: forall (lf4 : lst), @eq natural (len lf4) (len lf4).
Lemma candidate_131: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_132: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_133: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_134: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_135: forall (lf6 : bool), @eq bool (lf6) lf6.
Lemma candidate_136: forall (lf6 : bool), @eq bool (true) lf6.
Lemma candidate_137: forall (lf6 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf6))))))))))   lf6.
Lemma candidate_138: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_139: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_140: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_141: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_142: forall (lf6 : bool), @eq bool (negb (false)) lf6.
Lemma candidate_143: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (even (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_144: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend lf5 x)))).
Lemma candidate_145: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend x lf5)))).
Lemma candidate_146: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (even (len (lfappend x x))).
Lemma candidate_147: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (even (len (lfappend lf5 lf5))).
Lemma candidate_148: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (true).
Lemma candidate_149: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x (Cons Zero x))).
Lemma candidate_150: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend lf5 (lfappend x Nil))).
Lemma candidate_151: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x (lfappend lf5 Nil))).
Lemma candidate_152: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (Succ (len (lfappend x x))).
Lemma candidate_153: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend lf5 x)).
Lemma candidate_154: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x lf5)).
Lemma candidate_155: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x (lfappend lf5 Nil)) Nil).
Lemma candidate_156: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x Nil) (lfappend lf5 Nil)).
Lemma candidate_157: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_158: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_159: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_160: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend x lf5).
Lemma candidate_161: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5)))   (even (len (lfappend x (lfappend lf5 Nil)))).
Lemma candidate_162: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (negb (even (len (lfappend x x)))).
Lemma candidate_163: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (negb (even (len (lfappend lf5 lf5)))).
Lemma candidate_164: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (even (len (lfappend lf5 x))).
Lemma candidate_165: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (even (len (lfappend x lf5))).
Lemma candidate_166: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (false).
Lemma candidate_167: @eq bool (true) true.
Lemma candidate_168: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (even (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_169: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend lf5 x)))).
Lemma candidate_170: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend x lf5)))).
Lemma candidate_171: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (even (len (lfappend x x))).
Lemma candidate_172: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (even (len (lfappend lf5 lf5))).
Lemma candidate_173: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (true).
Lemma candidate_174: @eq bool (negb (false)) true.
Lemma candidate_175: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (even (len (lfappend lf5 (lfappend lf5 Nil)))).
Lemma candidate_176: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend lf5 x)))).
Lemma candidate_177: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend x lf5)))).
Lemma candidate_178: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (even (len (lfappend x x))).
Lemma candidate_179: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (even (len (lfappend lf5 lf5))).
Lemma candidate_180: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5)))) (true).
Lemma candidate_181: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x (Cons Zero x))).
Lemma candidate_182: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend lf5 (lfappend x Nil))).
Lemma candidate_183: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x (lfappend lf5 Nil))).
Lemma candidate_184: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (Succ (len (lfappend x x))).
Lemma candidate_185: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend lf5 x)).
Lemma candidate_186: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x lf5)).
Lemma candidate_187: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x (lfappend lf5 Nil)) Nil).
Lemma candidate_188: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x Nil) (lfappend lf5 Nil)).
Lemma candidate_189: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_190: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_191: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_192: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend x lf5).
Lemma candidate_193: @eq bool true (true).
Lemma candidate_194: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5)))   (even (len (lfappend x (lfappend lf5 Nil)))).
Lemma candidate_195: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (negb (even (len (lfappend x x)))).
Lemma candidate_196: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (negb (even (len (lfappend lf5 lf5)))).
Lemma candidate_197: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (even (len (lfappend lf5 x))).
Lemma candidate_198: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (even (len (lfappend x lf5))).
Lemma candidate_199: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (false).
Lemma candidate_200: forall (lf6 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf6))))))))))   lf6.
Lemma candidate_201: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_202: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_203: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_204: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_205: forall (lf6 : bool), @eq bool (negb (false)) lf6.
Lemma candidate_206: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_207: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_208: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_209: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_210: forall (lf6 : bool), @eq bool (lf6) lf6.
Lemma candidate_211: forall (lf6 : bool), @eq bool (true) lf6.
Lemma candidate_212: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (even (len (lfappend x (Cons (Succ Zero) x)))).
Lemma candidate_213: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (negb (even (len (lfappend x (lfappend x Nil))))).
Lemma candidate_214: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (even (len (lfappend x (Cons n x)))).
Lemma candidate_215: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (even (len (lfappend x (Cons Zero x)))).
Lemma candidate_216: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (negb (even (len (lfappend x x)))).
Lemma candidate_217: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x)))) (false).
Lemma candidate_218: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_219: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_220: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n x).
Lemma candidate_221: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (len (lfappend x (Cons (Succ n) x))).
Lemma candidate_222: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (len (lfappend x (Cons (Succ Zero) x))).
Lemma candidate_223: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (Succ (len (lfappend x (lfappend x Nil)))).
Lemma candidate_224: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (len (lfappend x (Cons n x))).
Lemma candidate_225: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (len (lfappend x (Cons Zero x))).
Lemma candidate_226: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (Succ (len (lfappend x x))).
Lemma candidate_227: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (negb (even (len (lfappend x (Cons n x))))).
Lemma candidate_228: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (negb (even (len (lfappend x (Cons Zero x))))).
Lemma candidate_229: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (negb (negb (even (len (lfappend x x))))).
Lemma candidate_230: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (even (len (lfappend x (lfappend x Nil)))).
Lemma candidate_231: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (even (len (lfappend x x))).
Lemma candidate_232: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x))))) (true).
Lemma candidate_233: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x (Cons n Nil)) x).
Lemma candidate_234: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x (Cons n x)) Nil).
Lemma candidate_235: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x))   (lfappend (lfappend x Nil) (Cons n (lfappend x Nil))).
Lemma candidate_236: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x Nil) (Cons n x)).
Lemma candidate_237: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend x (Cons n (lfappend x Nil))).
Lemma candidate_238: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend x (Cons n x)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 474 seconds
Duplicates removed: 136
Filtered by Quickchick: 20
Filtered by script: 20
Remaining: 62

Lemmas: 
Lemma candidate_13: forall (lf6 : bool), @eq bool (negb (negb lf6)) lf6.
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (negb (negb lf1)).
Lemma candidate_219: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend x Nil)).
Lemma candidate_51: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (even lf3))).
Lemma candidate_19: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb lf2))).
Lemma candidate_12: forall (lf6 : bool), @eq bool (negb (negb (negb (negb lf6)))) lf6.
Lemma candidate_5: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb lf1)))).
Lemma candidate_104: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend lf4 Nil)).
Lemma candidate_217: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x)))) (false).
Lemma candidate_159: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend x (lfappend lf5 Nil)).
Lemma candidate_158: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x lf5) Nil).
Lemma candidate_157: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x Nil) lf5).
Lemma candidate_99: forall (lf4 : lst), @eq bool (even (len lf4)) (negb (negb (even (len lf4)))).
Lemma candidate_153: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend lf5 x)).
Lemma candidate_98: forall (lf4 : lst), @eq bool (even (len lf4)) (even (len (lfappend lf4 Nil))).
Lemma candidate_56: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (even lf3)))).
Lemma candidate_50: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (even lf3))))).
Lemma candidate_18: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb lf2))))).
Lemma candidate_11: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb lf6)))))) lf6.
Lemma candidate_4: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb lf1)))))).
Lemma candidate_232: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x))))) (true).
Lemma candidate_218: forall (n : natural) (x : lst), @eq lst (Cons n x) (Cons n (lfappend (lfappend x Nil) Nil)).
Lemma candidate_103: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend (lfappend lf4 Nil) Nil)).
Lemma candidate_164: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5))) (even (len (lfappend lf5 x))).
Lemma candidate_226: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (Succ (len (lfappend x x))).
Lemma candidate_237: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend x (Cons n (lfappend x Nil))).
Lemma candidate_236: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x Nil) (Cons n x)).
Lemma candidate_234: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x (Cons n x)) Nil).
Lemma candidate_233: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x)) (lfappend (lfappend x (Cons n Nil)) x).
Lemma candidate_92: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (negb (negb (even (len lf4))))).
Lemma candidate_156: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x Nil) (lfappend lf5 Nil)).
Lemma candidate_155: forall (x : lst) (lf5 : lst), @eq lst (lfappend x lf5) (lfappend (lfappend x (lfappend lf5 Nil)) Nil).
Lemma candidate_91: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (negb (even (len (lfappend lf4 Nil)))).
Lemma candidate_151: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend x (lfappend lf5 Nil))).
Lemma candidate_150: forall (x : lst) (lf5 : lst), @eq natural (len (lfappend x lf5)) (len (lfappend lf5 (lfappend x Nil))).
Lemma candidate_55: forall (lf3 : natural), @eq bool (negb (even lf3)) (negb (negb (negb (negb (negb (even lf3)))))).
Lemma candidate_49: forall (lf3 : natural), @eq bool (even lf3) (negb (negb (negb (negb (negb (negb (even lf3))))))).
Lemma candidate_17: forall (lf2 : bool), @eq bool (negb lf2) (negb (negb (negb (negb (negb (negb (negb lf2))))))).
Lemma candidate_10: forall (lf6 : bool), @eq bool (negb (negb (negb (negb (negb (negb (negb (negb lf6)))))))) lf6.
Lemma candidate_3: forall (lf1 : bool), @eq bool lf1 (negb (negb (negb (negb (negb (negb (negb (negb lf1)))))))).
Lemma candidate_225: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x))) (len (lfappend x (Cons Zero x))).
Lemma candidate_102: forall (lf4 : lst), @eq natural (len lf4) (len (lfappend (lfappend (lfappend lf4 Nil) Nil) Nil)).
Lemma candidate_90: forall (lf4 : lst), @eq bool (negb (even (len lf4))) (even (len (lfappend lf4 (Cons Zero Nil)))).
Lemma candidate_221: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (len (lfappend x (Cons (Succ n) x))).
Lemma candidate_231: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (even (len (lfappend x x))).
Lemma candidate_216: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (negb (even (len (lfappend x x)))).
Lemma candidate_222: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (len (lfappend x (Cons (Succ Zero) x))).
Lemma candidate_144: forall (x : lst) (lf5 : lst), @eq bool (negb (even (len (lfappend x lf5))))   (negb (even (len (lfappend lf5 x)))).
Lemma candidate_161: forall (x : lst) (lf5 : lst), @eq bool (even (len (lfappend x lf5)))   (even (len (lfappend x (lfappend lf5 Nil)))).
Lemma candidate_223: forall (n : natural) (x : lst), @eq natural (len (lfappend x (Cons n x)))   (Succ (len (lfappend x (lfappend x Nil)))).
Lemma candidate_235: forall (n : natural) (x : lst), @eq lst (lfappend x (Cons n x))   (lfappend (lfappend x Nil) (Cons n (lfappend x Nil))).
Lemma candidate_215: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (even (len (lfappend x (Cons Zero x)))).
Lemma candidate_54: forall (lf3 : natural), @eq bool (negb (even lf3))   (negb (negb (negb (negb (negb (negb (negb (even lf3)))))))).
Lemma candidate_48: forall (lf3 : natural), @eq bool (even lf3)   (negb (negb (negb (negb (negb (negb (negb (negb (even lf3))))))))).
Lemma candidate_16: forall (lf2 : bool), @eq bool (negb lf2)   (negb (negb (negb (negb (negb (negb (negb (negb (negb lf2))))))))).
Lemma candidate_36: forall (lf6 : bool), @eq bool   (negb (negb (negb (negb (negb (negb (negb (negb (negb (negb lf6))))))))))   lf6.
Lemma candidate_212: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (even (len (lfappend x (Cons (Succ Zero) x)))).
Lemma candidate_229: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (negb (negb (even (len (lfappend x x))))).
Lemma candidate_230: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (even (len (lfappend x (lfappend x Nil)))).
Lemma candidate_213: forall (n : natural) (x : lst), @eq bool (even (len (lfappend x (Cons n x))))   (negb (even (len (lfappend x (lfappend x Nil))))).
Lemma candidate_228: forall (n : natural) (x : lst), @eq bool (negb (even (len (lfappend x (Cons n x)))))   (negb (even (len (lfappend x (Cons Zero x))))).
Lemma candidate_2: forall (n : natural) (x : lst) (lf6 : bool), forall _ : @eq bool (even (len (lfappend x x))) lf6, @eq bool (negb (even (len (lfappend x (Cons n x))))) lf6.
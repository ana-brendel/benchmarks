File Information
- File name: goal27
- Original Directory: /home/anabrendel/lfind/benchmarks/clam/sources/clam_lf_goal27_theorem0_60_qreva_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/clam/sources/_lfind_clam_lf_goal27_theorem0_60_qreva_append
- Namespace: adtind
- Proof name: theorem0
- Theorem: Theorem theorem0: forall x0 : lst, @eq lst (rev x0) (qreva x0 Nil).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev x) (qreva x Nil)

* Hypothesis:
x : lst

* Types:
Set
Prop
lst

* Polymorphic Types:


* Variables:
x : lst

* Terms:
x : lst
qreva x Nil : lst
lst : Set
Nil : lst
rev x : lst
@eq lst (rev x) (qreva x Nil) : Prop

* Functions:
rev  : forall _ : lst, lst
qreva  : forall (_ : lst) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 0 seconds
Generalized Variables:
lf3 : lst = Nil
lf1 : lst = qreva x Nil
lf2 : lst = rev x

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (x : lst) (lf1 : lst), @eq lst (rev x) lf1.
Lemma conj3: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (qreva x lf3).
Lemma conj4: forall (x : lst) (lf3 : lst), @eq lst (rev x) (qreva x lf3).
Lemma conj7: forall (lf2 : lst) (x : lst), @eq lst lf2 (qreva x Nil).
Lemma conj8: forall (x : lst), @eq lst (rev x) (qreva x Nil).


<---VALIDITY CHECKS--->
Time elapsed: 11 seconds
Valid:
Lemma conj8: forall (x : lst), @eq lst (rev x) (qreva x Nil).

Invalid:
Lemma conj7: forall (lf2 : lst) (x : lst), @eq lst lf2 (qreva x Nil).
Lemma conj4: forall (x : lst) (lf3 : lst), @eq lst (rev x) (qreva x lf3).
Lemma conj3: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (qreva x lf3).
Lemma conj2: forall (x : lst) (lf1 : lst), @eq lst (rev x) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 11 seconds
Generalizations:
Lemma conj7: forall (lf2 : lst) (x : lst), @eq lst lf2 (qreva x Nil).
Lemma conj4: forall (x : lst) (lf3 : lst), @eq lst (rev x) (qreva x lf3).
Lemma conj3: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (qreva x lf3).
Lemma conj2: forall (x : lst) (lf1 : lst), @eq lst (rev x) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 18 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (x : lst) (lf1 : lst), @eq lst (rev x) lf1.
Lemma conj3: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (qreva x lf3).
Lemma conj4: forall (x : lst) (lf3 : lst), @eq lst (rev x) (qreva x lf3).
Lemma conj7: forall (lf2 : lst) (x : lst), @eq lst lf2 (qreva x Nil).


<---CREATE SKETCHES--->
Time elapsed: 19 seconds
Sketches:
Sketch conj2_sketch0 : @eq lst (##hole##) lf1
Sketch conj2_term_sketch0 : @eq lst (rev x) (##hole##)
Sketch conj3_sketch0 : @eq lst lf2 (##hole##)
Sketch conj3_term_sketch0 : @eq lst (qreva x lf3) (##hole##)
Sketch conj4_sketch0 : @eq lst (rev x) (##hole##)
Sketch conj4_sketch1 : @eq lst (##hole##) (qreva x lf3)
Sketch conj4_term_sketch0 : @eq lst (qreva x lf3) (##hole##)
Sketch conj4_term_sketch1 : @eq lst (rev x) (##hole##)
Sketch conj7_sketch0 : @eq lst lf2 (##hole##)
Sketch conj7_sketch1 : @eq lst lf2 (qreva x (##hole##))
Sketch conj7_term_sketch0 : @eq lst (qreva x Nil) (##hole##)
Sketch conj7_term_sketch1 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 315 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj7_sketch1 --> Problem  synth_6
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj7_term_sketch1 --> Problem  synth_7
Sketch conj7_term_sketch0 --> Problem  synth_2
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj4_sketch0 --> Problem  synth_2
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_5


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 378 seconds

Problem: synth_3

Problem: synth_6
 Nil

Problem: synth_7
 Nil

Problem: synth_5
 qreva (lfappend x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

Problem: synth_4
 lfappend (rev x) (lfappend lf3 Nil)
 qreva x (rev (rev lf3))
 qreva x (lfappend lf3 Nil)
 rev (qreva lf3 x)
 lfappend (rev x) lf3
 qreva x lf3

Problem: synth_1

Problem: synth_2
 qreva (lfappend x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 qreva x Nil
 rev x

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 379 seconds
Lemmas:
Lemma candidate_1: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_2: forall (x : lst), @eq lst (rev x) (qreva (lfappend x Nil) Nil).
Lemma candidate_3: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_4: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_5: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_6: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_7: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_8: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_9: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (rev (rev lf3))).
Lemma candidate_10: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (lfappend lf3 Nil)).
Lemma candidate_11: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (rev (qreva lf3 x)).
Lemma candidate_12: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) lf3).
Lemma candidate_13: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x lf3).
Lemma candidate_14: forall (x : lst), @eq lst (rev x) (qreva (lfappend x Nil) Nil).
Lemma candidate_15: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_16: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_17: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_18: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_19: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_20: forall (lf3 : lst) (x : lst), @eq lst (qreva (lfappend x Nil) Nil) (qreva x lf3).
Lemma candidate_21: forall (lf3 : lst) (x : lst), @eq lst (rev (rev (rev x))) (qreva x lf3).
Lemma candidate_22: forall (lf3 : lst) (x : lst), @eq lst (rev (lfappend x Nil)) (qreva x lf3).
Lemma candidate_23: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) Nil) (qreva x lf3).
Lemma candidate_24: forall (lf3 : lst) (x : lst), @eq lst (qreva x Nil) (qreva x lf3).
Lemma candidate_25: forall (lf3 : lst) (x : lst), @eq lst (rev x) (qreva x lf3).
Lemma candidate_26: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_27: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (rev (rev lf3))).
Lemma candidate_28: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (lfappend lf3 Nil)).
Lemma candidate_29: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (rev (qreva lf3 x)).
Lemma candidate_30: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) lf3).
Lemma candidate_31: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x lf3).
Lemma candidate_32: forall (x : lst), @eq lst (rev x) (qreva (lfappend x Nil) Nil).
Lemma candidate_33: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_34: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_35: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_36: forall (x : lst), @eq lst (rev x) (qreva x Nil).
Lemma candidate_37: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_38: forall (x : lst) (lf2 : lst), @eq lst lf2 (qreva x (Nil)).
Lemma candidate_39: forall (x : lst), @eq lst (qreva x Nil) (qreva (lfappend x Nil) Nil).
Lemma candidate_40: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_41: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_42: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_43: forall (x : lst), @eq lst (qreva x Nil) (qreva x Nil).
Lemma candidate_44: forall (x : lst), @eq lst (qreva x Nil) (rev x).
Lemma candidate_45: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 447 seconds
Duplicates removed: 20
Filtered by Quickchick: 7
Filtered by script: 5
Remaining: 13

Lemmas: 
Lemma candidate_3: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_5: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_4: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_40: forall (x : lst), @eq lst (qreva x Nil) (rev (rev (rev x))).
Lemma candidate_11: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (rev (qreva lf3 x)).
Lemma candidate_42: forall (x : lst), @eq lst (qreva x Nil) (lfappend (rev x) Nil).
Lemma candidate_41: forall (x : lst), @eq lst (qreva x Nil) (rev (lfappend x Nil)).
Lemma candidate_12: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) lf3).
Lemma candidate_2: forall (x : lst), @eq lst (rev x) (qreva (lfappend x Nil) Nil).
Lemma candidate_9: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (rev (rev lf3))).
Lemma candidate_39: forall (x : lst), @eq lst (qreva x Nil) (qreva (lfappend x Nil) Nil).
Lemma candidate_10: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (qreva x (lfappend lf3 Nil)).
Lemma candidate_8: forall (lf3 : lst) (x : lst), @eq lst (qreva x lf3) (lfappend (rev x) (lfappend lf3 Nil)).
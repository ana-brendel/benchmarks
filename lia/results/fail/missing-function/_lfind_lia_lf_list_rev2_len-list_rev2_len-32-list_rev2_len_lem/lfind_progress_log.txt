File Information
- File name: list_rev2_len
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev2_len-list_rev2_len-32-list_rev2_len_lem
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2_len-list_rev2_len-32-list_rev2_len_lem
- Namespace: adtind
- Proof name: list_rev2_len
- Theorem: Theorem list_rev2_len: forall l0 : lst, @eq nat (len (rev l0 Nil)) (len l0).
- Declarations: 
From lfind Require Import LFind.
Require Import Nat.

Proof Context
* Goal State: @eq nat (len (rev (Cons n l) Nil)) (len (Cons n l))

* Hypothesis:
IHl : @eq nat (len (rev l Nil)) (len l)
l : lst
n : nat

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
l : lst
n : nat

* Terms:
nat : Set
rev (Cons n l) Nil : lst
@eq nat (len (rev (Cons n l) Nil)) (len (Cons n l)) : Prop
len l : nat
len (Cons n l) : nat
rev l Nil : lst
@eq nat (len (rev l Nil)) (len l) : Prop
lst : Set
Cons n l : lst
len (rev l Nil) : nat
l : lst
n : nat
len (rev (Cons n l) Nil) : nat
Nil : lst

* Functions:
len  : forall _ : lst, nat
rev  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : nat = len (Cons n l)
lf1 : nat = len (rev (Cons n l) Nil)
lf4 : lst = Cons n l
lf5 : lst = Nil
lf2 : lst = rev (Cons n l) Nil

Generalizations:
Lemma conj1: forall (lf1 : nat) (lf3 : nat), @eq nat lf1 lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : nat), @eq nat (len lf2) lf3.
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 lf5)) lf3.
Lemma conj12: forall (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 Nil)) lf3.
Lemma conj14: forall (lf5 : lst) (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) lf5)) lf3.
Lemma conj16: forall (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) Nil)) lf3.
Lemma conj17: forall (lf4 : lst) (lf1 : nat), @eq nat lf1 (len lf4).
Lemma conj21: forall (lf1 : nat) (l : lst) (n : nat), @eq nat lf1 (len (Cons n l)).
Lemma conj25: forall (lf2 : lst) (lf4 : lst), @eq nat (len lf2) (len lf4).
Lemma conj26: forall (lf5 : lst) (lf4 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma conj28: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).
Lemma conj29: forall (lf2 : lst) (l : lst) (n : nat), @eq nat (len lf2) (len (Cons n l)).
Lemma conj30: forall (lf5 : lst) (l : lst) (n : nat), @eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).
Lemma conj32: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (Cons n l)).


<---VALIDITY CHECKS--->
Time elapsed: 34 seconds
Valid:
Lemma conj32: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (Cons n l)).
Lemma conj28: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).

Invalid:
Lemma conj30: forall (lf5 : lst) (l : lst) (n : nat), @eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).
Lemma conj29: forall (lf2 : lst) (l : lst) (n : nat), @eq nat (len lf2) (len (Cons n l)).
Lemma conj26: forall (lf5 : lst) (lf4 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma conj25: forall (lf2 : lst) (lf4 : lst), @eq nat (len lf2) (len lf4).
Lemma conj21: forall (lf1 : nat) (l : lst) (n : nat), @eq nat lf1 (len (Cons n l)).
Lemma conj17: forall (lf4 : lst) (lf1 : nat), @eq nat lf1 (len lf4).
Lemma conj16: forall (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) Nil)) lf3.
Lemma conj14: forall (lf5 : lst) (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) lf5)) lf3.
Lemma conj12: forall (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 Nil)) lf3.
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 lf5)) lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : nat), @eq nat (len lf2) lf3.
Lemma conj1: forall (lf1 : nat) (lf3 : nat), @eq nat lf1 lf3.

<---ADD IMPLICATIONS--->
Time elapsed: 46 seconds
Generalizations:
Lemma conj30: forall (lf5 : lst) (l : lst) (n : nat), @eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).
Lemma conj30_imp: forall (lf5 : lst) (l : lst) (n : nat), forall _ : @eq nat (len (rev l lf5)) (len l),
@eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).
Lemma conj29: forall (lf2 : lst) (l : lst) (n : nat), @eq nat (len lf2) (len (Cons n l)).
Lemma conj26: forall (lf5 : lst) (lf4 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma conj25: forall (lf2 : lst) (lf4 : lst), @eq nat (len lf2) (len lf4).
Lemma conj21: forall (lf1 : nat) (l : lst) (n : nat), @eq nat lf1 (len (Cons n l)).
Lemma conj17: forall (lf4 : lst) (lf1 : nat), @eq nat lf1 (len lf4).
Lemma conj16: forall (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) Nil)) lf3.
Lemma conj14: forall (lf5 : lst) (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) lf5)) lf3.
Lemma conj12: forall (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 Nil)) lf3.
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 lf5)) lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : nat), @eq nat (len lf2) lf3.
Lemma conj1: forall (lf1 : nat) (lf3 : nat), @eq nat lf1 lf3.


<---VALIDITY CHECKS--->
Time elapsed: 66 seconds
Valid:
Lemma conj30_imp: forall (lf5 : lst) (l : lst) (n : nat), forall _ : @eq nat (len (rev l lf5)) (len l),
@eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).

Invalid:
Lemma conj1: forall (lf1 : nat) (lf3 : nat), @eq nat lf1 lf3.
Lemma conj9: forall (lf2 : lst) (lf3 : nat), @eq nat (len lf2) lf3.
Lemma conj10: forall (lf5 : lst) (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 lf5)) lf3.
Lemma conj12: forall (lf4 : lst) (lf3 : nat), @eq nat (len (rev lf4 Nil)) lf3.
Lemma conj14: forall (lf5 : lst) (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) lf5)) lf3.
Lemma conj16: forall (l : lst) (n : nat) (lf3 : nat), @eq nat (len (rev (Cons n l) Nil)) lf3.
Lemma conj17: forall (lf4 : lst) (lf1 : nat), @eq nat lf1 (len lf4).
Lemma conj21: forall (lf1 : nat) (l : lst) (n : nat), @eq nat lf1 (len (Cons n l)).
Lemma conj25: forall (lf2 : lst) (lf4 : lst), @eq nat (len lf2) (len lf4).
Lemma conj26: forall (lf5 : lst) (lf4 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma conj29: forall (lf2 : lst) (l : lst) (n : nat), @eq nat (len lf2) (len (Cons n l)).
Lemma conj30: forall (lf5 : lst) (l : lst) (n : nat), @eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).


<---CREATE SKETCHES--->
Time elapsed: 67 seconds
Sketches:
Sketch conj9_sketch0 : @eq nat (##hole##) lf3
Sketch conj9_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj10_sketch0 : @eq nat (len (##hole##)) lf3
Sketch conj10_sketch1 : @eq nat (##hole##) lf3
Sketch conj10_term_sketch0 : @eq lst (rev lf4 lf5) (##hole##)
Sketch conj10_term_sketch1 : @eq nat (len (rev lf4 lf5)) (##hole##)
Sketch conj12_sketch0 : @eq nat (##hole##) lf3
Sketch conj12_sketch1 : @eq nat (len (##hole##)) lf3
Sketch conj12_sketch2 : @eq nat (len (rev lf4 (##hole##))) lf3
Sketch conj12_term_sketch0 : @eq nat (len (rev lf4 Nil)) (##hole##)
Sketch conj12_term_sketch1 : @eq lst (rev lf4 Nil) (##hole##)
Sketch conj12_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj14_sketch0 : @eq nat (##hole##) lf3
Sketch conj14_sketch1 : @eq nat (len (rev (##hole##) lf5)) lf3
Sketch conj14_sketch2 : @eq nat (len (##hole##)) lf3
Sketch conj14_term_sketch0 : @eq nat (len (rev (Cons n l) lf5)) (##hole##)
Sketch conj14_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj14_term_sketch2 : @eq lst (rev (Cons n l) lf5) (##hole##)
Sketch conj16_sketch0 : @eq nat (len (##hole##)) lf3
Sketch conj16_sketch1 : @eq nat (len (rev (##hole##) Nil)) lf3
Sketch conj16_sketch2 : @eq nat (##hole##) lf3
Sketch conj16_sketch3 : @eq nat (len (rev (Cons n l) (##hole##))) lf3
Sketch conj16_term_sketch0 : @eq lst (rev (Cons n l) Nil) (##hole##)
Sketch conj16_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj16_term_sketch2 : @eq nat (len (rev (Cons n l) Nil)) (##hole##)
Sketch conj16_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj17_sketch0 : @eq nat lf1 (##hole##)
Sketch conj17_term_sketch0 : @eq nat (len lf4) (##hole##)
Sketch conj21_sketch0 : @eq nat lf1 (##hole##)
Sketch conj21_sketch1 : @eq nat lf1 (len (##hole##))
Sketch conj21_term_sketch0 : @eq nat (len (Cons n l)) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (Cons n l) (##hole##)
Sketch conj25_sketch0 : @eq nat (##hole##) (len lf4)
Sketch conj25_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj25_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq nat (len lf4) (##hole##)
Sketch conj26_sketch0 : @eq nat (len (##hole##)) (len lf4)
Sketch conj26_sketch1 : @eq nat (len (rev lf4 lf5)) (##hole##)
Sketch conj26_sketch2 : @eq nat (##hole##) (len lf4)
Sketch conj26_term_sketch0 : @eq lst (rev lf4 lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq nat (len lf4) (##hole##)
Sketch conj26_term_sketch2 : @eq nat (len (rev lf4 lf5)) (##hole##)
Sketch conj29_sketch0 : @eq nat (##hole##) (len (Cons n l))
Sketch conj29_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj29_sketch2 : @eq nat (len lf2) (len (##hole##))
Sketch conj29_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj29_term_sketch1 : @eq nat (len (Cons n l)) (##hole##)
Sketch conj29_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj30_sketch0 : @eq nat (len (rev (Cons n l) lf5)) (##hole##)
Sketch conj30_sketch1 : @eq nat (##hole##) (len (Cons n l))
Sketch conj30_sketch2 : @eq nat (len (rev (##hole##) lf5)) (len (##hole##))
Sketch conj30_sketch3 : @eq nat (len (##hole##)) (len (Cons n l))
Sketch conj30_term_sketch0 : @eq nat (len (Cons n l)) (##hole##)
Sketch conj30_term_sketch1 : @eq nat (len (rev (Cons n l) lf5)) (##hole##)
Sketch conj30_term_sketch2 : @eq lst (Cons n l) (##hole##)
Sketch conj30_term_sketch3 : @eq lst (rev (Cons n l) lf5) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 207 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_11
Sketch conj12_sketch0 --> Problem  synth_1
Sketch conj26_term_sketch1 --> Problem  synth_7
Sketch conj16_sketch3 --> Problem  synth_15
Sketch conj14_sketch2 --> Problem  synth_3
Sketch conj26_sketch2 --> Problem  synth_7
Sketch conj25_sketch1 --> Problem  synth_2
Sketch conj17_sketch0 --> Problem  synth_18
Sketch conj16_sketch2 --> Problem  synth_1
Sketch conj10_term_sketch1 --> Problem  synth_5
Sketch conj30_sketch3 --> Problem  synth_16
Sketch conj16_term_sketch1 --> Problem  synth_12
Sketch conj14_term_sketch2 --> Problem  synth_13
Sketch conj29_term_sketch2 --> Problem  synth_12
Sketch conj25_term_sketch1 --> Problem  synth_7
Sketch conj30_sketch1 --> Problem  synth_17
Sketch conj26_sketch0 --> Problem  synth_8
Sketch conj30_term_sketch3 --> Problem  synth_13
Sketch conj17_term_sketch0 --> Problem  synth_7
Sketch conj21_term_sketch1 --> Problem  synth_12
Sketch conj12_term_sketch1 --> Problem  synth_8
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj26_term_sketch2 --> Problem  synth_5
Sketch conj14_term_sketch1 --> Problem  synth_12
Sketch conj12_term_sketch0 --> Problem  synth_7
Sketch conj26_sketch1 --> Problem  synth_5
Sketch conj30_sketch2 --> Problem  synth_21
Sketch conj29_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch1 --> Problem  synth_1
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj16_sketch1 --> Problem  synth_14
Sketch conj12_sketch1 --> Problem  synth_3
Sketch conj21_term_sketch0 --> Problem  synth_17
Sketch conj30_term_sketch2 --> Problem  synth_12
Sketch conj12_sketch2 --> Problem  synth_6
Sketch conj10_term_sketch0 --> Problem  synth_4
Sketch conj29_sketch0 --> Problem  synth_17
Sketch conj25_sketch0 --> Problem  synth_7
Sketch conj21_sketch0 --> Problem  synth_18
Sketch conj26_term_sketch0 --> Problem  synth_4
Sketch conj16_term_sketch2 --> Problem  synth_17
Sketch conj30_term_sketch1 --> Problem  synth_11
Sketch conj21_sketch1 --> Problem  synth_19
Sketch conj16_sketch0 --> Problem  synth_3
Sketch conj14_sketch0 --> Problem  synth_1
Sketch conj14_term_sketch0 --> Problem  synth_11
Sketch conj30_term_sketch0 --> Problem  synth_17
Sketch conj16_term_sketch0 --> Problem  synth_16
Sketch conj16_term_sketch3 --> Problem  synth_9
Sketch conj29_term_sketch1 --> Problem  synth_17
Sketch conj12_term_sketch2 --> Problem  synth_9
Sketch conj29_sketch2 --> Problem  synth_20
Sketch conj25_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch0 --> Problem  synth_3
Sketch conj29_sketch1 --> Problem  synth_2
Sketch conj14_sketch1 --> Problem  synth_10


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 450 seconds

Problem: synth_20
 rev (rev (rev lf2 Nil) Nil) Nil
 rev lf2 Nil

Problem: synth_18
 lf1

Problem: synth_17
 len (rev l (Cons (S n) Nil))
 len (rev l (Cons (S O) Nil))
 len (rev l (Cons n Nil))
 len (rev l (Cons O Nil))
 S (len (rev l Nil))
 S (len l)

Problem: synth_21

Problem: synth_9
 Nil

Problem: synth_13
 rev l (rev lf5 (Cons n lf5))
 rev l (Cons n (rev lf5 Nil))
 rev lf5 (rev l (Cons n Nil))
 rev l (rev lf5 (Cons n Nil))
 rev l (Cons n lf5)
 rev l (Cons n Nil)

Problem: synth_6
 Nil

Problem: synth_11
 len (rev l (Cons n Nil))
 len (rev l (Cons O Nil))
 S (len (rev lf5 l))
 S (len (rev l lf5))
 S (len (rev l Nil))
 S (len l)

Problem: synth_7
 len (rev (rev (rev lf4 Nil) Nil) Nil)
 len (rev (rev lf4 Nil) Nil)
 len (rev lf4 Nil)
 len lf4

Problem: synth_4
 rev lf5 (rev lf4 lf5)
 rev lf4 (rev lf5 lf5)
 rev lf5 (rev lf4 Nil)
 rev lf4 (rev lf5 Nil)
 rev lf4 lf5
 rev lf4 Nil

Problem: synth_1
 lf3

Problem: synth_16
 rev (rev (rev l Nil) Nil) (Cons n Nil)
 rev l (Cons n Nil)

Problem: synth_19

Problem: synth_15
 Nil

Problem: synth_14

Problem: synth_10

Problem: synth_8
 rev (rev (rev lf4 Nil) Nil) Nil
 rev lf4 Nil

Problem: synth_3

Problem: synth_12
 Cons n (rev (rev l Nil) Nil)
 rev (rev l (Cons n Nil)) Nil
 Cons n l

Problem: synth_5
 len (rev lf5 (rev lf4 Nil))
 len (rev lf4 (rev lf5 Nil))
 len (rev lf5 lf4)
 len (rev lf4 lf5)
 len (rev lf4 Nil)
 len lf4

Problem: synth_2
 len (rev (rev (rev lf2 Nil) Nil) Nil)
 len (rev (rev lf2 Nil) Nil)
 len (rev lf2 Nil)
 len lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 450 seconds
Lemmas:
Lemma candidate_1: forall (n : nat) (l : lst), @eq nat (len (rev (Cons n l) Nil)) (len (Cons n l)).
Lemma candidate_2: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).
Lemma candidate_3: forall (n : nat) (l : lst) (lf5 : lst), forall _ : @eq nat (len (rev l lf5)) (len l), @eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).
Lemma candidate_4: forall (lf3 : nat), @eq nat (lf3) lf3.
Lemma candidate_5: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_6: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2 Nil) Nil)).
Lemma candidate_7: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2 Nil)).
Lemma candidate_8: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_9: forall (lf3 : nat), @eq nat (lf3) lf3.
Lemma candidate_10: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf5 (rev lf4 lf5)).
Lemma candidate_11: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 (rev lf5 lf5)).
Lemma candidate_12: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf5 (rev lf4 Nil)).
Lemma candidate_13: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 (rev lf5 Nil)).
Lemma candidate_14: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 lf5).
Lemma candidate_15: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 Nil).
Lemma candidate_16: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 (rev lf4 Nil))).
Lemma candidate_17: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 (rev lf5 Nil))).
Lemma candidate_18: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 lf4)).
Lemma candidate_19: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 lf5)).
Lemma candidate_20: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 Nil)).
Lemma candidate_21: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma candidate_22: forall (lf3 : nat), @eq nat (lf3) lf3.
Lemma candidate_23: forall (lf3 : nat) (lf4 : lst), @eq nat (len (rev lf4 (Nil))) lf3.
Lemma candidate_24: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len (rev (rev (rev lf4 Nil) Nil) Nil)).
Lemma candidate_25: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len (rev (rev lf4 Nil) Nil)).
Lemma candidate_26: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len (rev lf4 Nil)).
Lemma candidate_27: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).
Lemma candidate_28: forall (lf4 : lst), @eq lst (rev lf4 Nil) (rev (rev (rev lf4 Nil) Nil) Nil).
Lemma candidate_29: forall (lf4 : lst), @eq lst (rev lf4 Nil) (rev lf4 Nil).
Lemma candidate_30: @eq lst Nil (Nil).
Lemma candidate_31: forall (lf3 : nat), @eq nat (lf3) lf3.
Lemma candidate_32: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (len (rev l (Cons n Nil))).
Lemma candidate_33: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (len (rev l (Cons O Nil))).
Lemma candidate_34: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev lf5 l))).
Lemma candidate_35: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l lf5))).
Lemma candidate_36: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l Nil))).
Lemma candidate_37: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len l)).
Lemma candidate_38: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n (rev (rev l Nil) Nil)).
Lemma candidate_39: forall (l : lst) (n : nat), @eq lst (Cons n l) (rev (rev l (Cons n Nil)) Nil).
Lemma candidate_40: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n l).
Lemma candidate_41: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (rev lf5 (Cons n lf5))).
Lemma candidate_42: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (Cons n (rev lf5 Nil))).
Lemma candidate_43: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev lf5 (rev l (Cons n Nil))).
Lemma candidate_44: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (rev lf5 (Cons n Nil))).
Lemma candidate_45: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (Cons n lf5)).
Lemma candidate_46: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (Cons n Nil)).
Lemma candidate_47: forall (lf3 : nat), @eq nat (lf3) lf3.
Lemma candidate_48: forall (lf3 : nat) (l : lst) (n : nat), @eq nat (len (rev (Cons n l) (Nil))) lf3.
Lemma candidate_49: forall (l : lst) (n : nat), @eq lst (rev (Cons n l) Nil) (rev (rev (rev l Nil) Nil) (Cons n Nil)).
Lemma candidate_50: forall (l : lst) (n : nat), @eq lst (rev (Cons n l) Nil) (rev l (Cons n Nil)).
Lemma candidate_51: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n (rev (rev l Nil) Nil)).
Lemma candidate_52: forall (l : lst) (n : nat), @eq lst (Cons n l) (rev (rev l (Cons n Nil)) Nil).
Lemma candidate_53: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n l).
Lemma candidate_54: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons (S n) Nil))).
Lemma candidate_55: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons (S O) Nil))).
Lemma candidate_56: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons n Nil))).
Lemma candidate_57: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons O Nil))).
Lemma candidate_58: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (S (len (rev l Nil))).
Lemma candidate_59: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (S (len l)).
Lemma candidate_60: @eq lst Nil (Nil).
Lemma candidate_61: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_62: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev (rev lf4 Nil) Nil) Nil)).
Lemma candidate_63: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev lf4 Nil) Nil)).
Lemma candidate_64: forall (lf4 : lst), @eq nat (len lf4) (len (rev lf4 Nil)).
Lemma candidate_65: forall (lf4 : lst), @eq nat (len lf4) (len lf4).
Lemma candidate_66: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_67: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S n) Nil))).
Lemma candidate_68: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S O) Nil))).
Lemma candidate_69: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons n Nil))).
Lemma candidate_70: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons O Nil))).
Lemma candidate_71: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (S (len (rev l Nil))).
Lemma candidate_72: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (S (len l)).
Lemma candidate_73: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n (rev (rev l Nil) Nil)).
Lemma candidate_74: forall (l : lst) (n : nat), @eq lst (Cons n l) (rev (rev l (Cons n Nil)) Nil).
Lemma candidate_75: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n l).
Lemma candidate_76: forall (lf4 : lst), @eq nat (len (rev (rev (rev lf4 Nil) Nil) Nil)) (len lf4).
Lemma candidate_77: forall (lf4 : lst), @eq nat (len (rev (rev lf4 Nil) Nil)) (len lf4).
Lemma candidate_78: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).
Lemma candidate_79: forall (lf4 : lst), @eq nat (len lf4) (len lf4).
Lemma candidate_80: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_81: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2 Nil) Nil)).
Lemma candidate_82: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2 Nil)).
Lemma candidate_83: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_84: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_85: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2 Nil) Nil)).
Lemma candidate_86: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2 Nil)).
Lemma candidate_87: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_88: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev (rev lf4 Nil) Nil) Nil)).
Lemma candidate_89: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev lf4 Nil) Nil)).
Lemma candidate_90: forall (lf4 : lst), @eq nat (len lf4) (len (rev lf4 Nil)).
Lemma candidate_91: forall (lf4 : lst), @eq nat (len lf4) (len lf4).
Lemma candidate_92: forall (lf4 : lst), @eq nat (len (rev (rev (rev lf4 Nil) Nil) Nil)) (len lf4).
Lemma candidate_93: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).
Lemma candidate_94: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 (rev lf4 Nil))).
Lemma candidate_95: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 (rev lf5 Nil))).
Lemma candidate_96: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 lf4)).
Lemma candidate_97: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 lf5)).
Lemma candidate_98: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 Nil)).
Lemma candidate_99: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma candidate_100: forall (lf4 : lst), @eq nat (len (rev (rev (rev lf4 Nil) Nil) Nil)) (len lf4).
Lemma candidate_101: forall (lf4 : lst), @eq nat (len (rev (rev lf4 Nil) Nil)) (len lf4).
Lemma candidate_102: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len lf4).
Lemma candidate_103: forall (lf4 : lst), @eq nat (len lf4) (len lf4).
Lemma candidate_104: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf5 (rev lf4 lf5)).
Lemma candidate_105: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 (rev lf5 lf5)).
Lemma candidate_106: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf5 (rev lf4 Nil)).
Lemma candidate_107: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 (rev lf5 Nil)).
Lemma candidate_108: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 lf5).
Lemma candidate_109: forall (lf4 : lst) (lf5 : lst), @eq lst (rev lf4 lf5) (rev lf4 Nil).
Lemma candidate_110: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev (rev lf4 Nil) Nil) Nil)).
Lemma candidate_111: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev lf4 Nil) Nil)).
Lemma candidate_112: forall (lf4 : lst), @eq nat (len lf4) (len (rev lf4 Nil)).
Lemma candidate_113: forall (lf4 : lst), @eq nat (len lf4) (len lf4).
Lemma candidate_114: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 (rev lf4 Nil))).
Lemma candidate_115: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 (rev lf5 Nil))).
Lemma candidate_116: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 lf4)).
Lemma candidate_117: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 lf5)).
Lemma candidate_118: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 Nil)).
Lemma candidate_119: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len lf4).
Lemma candidate_120: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons (S n) Nil))) (len (Cons n l)).
Lemma candidate_121: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons (S O) Nil))) (len (Cons n l)).
Lemma candidate_122: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons n Nil))) (len (Cons n l)).
Lemma candidate_123: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons O Nil))) (len (Cons n l)).
Lemma candidate_124: forall (l : lst) (n : nat), @eq nat (S (len (rev l Nil))) (len (Cons n l)).
Lemma candidate_125: forall (l : lst) (n : nat), @eq nat (S (len l)) (len (Cons n l)).
Lemma candidate_126: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_127: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2 Nil) Nil)).
Lemma candidate_128: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2 Nil)).
Lemma candidate_129: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_130: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_131: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2 Nil)).
Lemma candidate_132: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_133: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2 Nil) Nil)).
Lemma candidate_134: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2 Nil)).
Lemma candidate_135: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_136: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S n) Nil))).
Lemma candidate_137: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S O) Nil))).
Lemma candidate_138: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons n Nil))).
Lemma candidate_139: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons O Nil))).
Lemma candidate_140: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (S (len (rev l Nil))).
Lemma candidate_141: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (S (len l)).
Lemma candidate_142: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n (rev (rev l Nil) Nil)).
Lemma candidate_143: forall (l : lst) (n : nat), @eq lst (Cons n l) (rev (rev l (Cons n Nil)) Nil).
Lemma candidate_144: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n l).
Lemma candidate_145: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (len (rev l (Cons n Nil))).
Lemma candidate_146: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (len (rev l (Cons O Nil))).
Lemma candidate_147: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev lf5 l))).
Lemma candidate_148: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l lf5))).
Lemma candidate_149: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l Nil))).
Lemma candidate_150: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len l)).
Lemma candidate_151: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons (S n) Nil))) (len (Cons n l)).
Lemma candidate_152: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons (S O) Nil))) (len (Cons n l)).
Lemma candidate_153: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons n Nil))) (len (Cons n l)).
Lemma candidate_154: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons O Nil))) (len (Cons n l)).
Lemma candidate_155: forall (l : lst) (n : nat), @eq nat (S (len (rev l Nil))) (len (Cons n l)).
Lemma candidate_156: forall (l : lst) (n : nat), @eq nat (S (len l)) (len (Cons n l)).
Lemma candidate_157: forall (l : lst) (n : nat), @eq nat (len (rev (rev (rev l Nil) Nil) (Cons n Nil))) (len (Cons n l)).
Lemma candidate_158: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons n Nil))) (len (Cons n l)).
Lemma candidate_159: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S n) Nil))).
Lemma candidate_160: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S O) Nil))).
Lemma candidate_161: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons n Nil))).
Lemma candidate_162: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons O Nil))).
Lemma candidate_163: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (S (len (rev l Nil))).
Lemma candidate_164: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (S (len l)).
Lemma candidate_165: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (len (rev l (Cons n Nil))).
Lemma candidate_166: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (len (rev l (Cons O Nil))).
Lemma candidate_167: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev lf5 l))).
Lemma candidate_168: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l lf5))).
Lemma candidate_169: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l Nil))).
Lemma candidate_170: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len l)).
Lemma candidate_171: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n (rev (rev l Nil) Nil)).
Lemma candidate_172: forall (l : lst) (n : nat), @eq lst (Cons n l) (rev (rev l (Cons n Nil)) Nil).
Lemma candidate_173: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n l).
Lemma candidate_174: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (rev lf5 (Cons n lf5))).
Lemma candidate_175: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (Cons n (rev lf5 Nil))).
Lemma candidate_176: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev lf5 (rev l (Cons n Nil))).
Lemma candidate_177: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (rev lf5 (Cons n Nil))).
Lemma candidate_178: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (Cons n lf5)).
Lemma candidate_179: forall (l : lst) (n : nat) (lf5 : lst), @eq lst (rev (Cons n l) lf5) (rev l (Cons n Nil)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 602 seconds
Duplicates removed: 109
Filtered by Quickchick: 18
Filtered by script: 23
Remaining: 29

Lemmas: 
Lemma candidate_77: forall (lf4 : lst), @eq nat (len (rev (rev lf4 Nil) Nil)) (len lf4).
Lemma candidate_63: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev lf4 Nil) Nil)).
Lemma candidate_18: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 lf4)).
Lemma candidate_6: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2 Nil) Nil)).
Lemma candidate_39: forall (l : lst) (n : nat), @eq lst (Cons n l) (rev (rev l (Cons n Nil)) Nil).
Lemma candidate_38: forall (l : lst) (n : nat), @eq lst (Cons n l) (Cons n (rev (rev l Nil) Nil)).
Lemma candidate_123: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons O Nil))) (len (Cons n l)).
Lemma candidate_122: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons n Nil))) (len (Cons n l)).
Lemma candidate_70: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons O Nil))).
Lemma candidate_121: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons (S O) Nil))) (len (Cons n l)).
Lemma candidate_120: forall (l : lst) (n : nat), @eq nat (len (rev l (Cons (S n) Nil))) (len (Cons n l)).
Lemma candidate_68: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S O) Nil))).
Lemma candidate_67: forall (l : lst) (n : nat), @eq nat (len (Cons n l)) (len (rev l (Cons (S n) Nil))).
Lemma candidate_28: forall (lf4 : lst), @eq lst (rev lf4 Nil) (rev (rev (rev lf4 Nil) Nil) Nil).
Lemma candidate_58: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (S (len (rev l Nil))).
Lemma candidate_35: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev l lf5))).
Lemma candidate_34: forall (l : lst) (n : nat) (lf5 : lst), @eq nat (len (rev (Cons n l) lf5)) (S (len (rev lf5 l))).
Lemma candidate_76: forall (lf4 : lst), @eq nat (len (rev (rev (rev lf4 Nil) Nil) Nil)) (len lf4).
Lemma candidate_62: forall (lf4 : lst), @eq nat (len lf4) (len (rev (rev (rev lf4 Nil) Nil) Nil)).
Lemma candidate_17: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf4 (rev lf5 Nil))).
Lemma candidate_16: forall (lf4 : lst) (lf5 : lst), @eq nat (len (rev lf4 lf5)) (len (rev lf5 (rev lf4 Nil))).
Lemma candidate_5: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev (rev lf2 Nil) Nil) Nil)).
Lemma candidate_57: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons O Nil))).
Lemma candidate_55: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons (S O) Nil))).
Lemma candidate_54: forall (l : lst) (n : nat), @eq nat (len (rev (Cons n l) Nil)) (len (rev l (Cons (S n) Nil))).
Lemma candidate_24: forall (lf4 : lst), @eq nat (len (rev lf4 Nil)) (len (rev (rev (rev lf4 Nil) Nil) Nil)).
Lemma candidate_49: forall (l : lst) (n : nat), @eq lst (rev (Cons n l) Nil) (rev (rev (rev l Nil) Nil) (Cons n Nil)).
Lemma candidate_157: forall (l : lst) (n : nat), @eq nat (len (rev (rev (rev l Nil) Nil) (Cons n Nil))) (len (Cons n l)).
Lemma candidate_3: forall (n : nat) (l : lst) (lf5 : lst), forall _ : @eq nat (len (rev l lf5)) (len l), @eq nat (len (rev (Cons n l) lf5)) (len (Cons n l)).
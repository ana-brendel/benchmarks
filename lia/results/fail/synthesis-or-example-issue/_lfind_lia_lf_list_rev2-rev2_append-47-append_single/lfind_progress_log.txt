File Information
- File name: list_rev2
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev2-rev2_append-47-append_single
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2-rev2_append-47-append_single
- Namespace: adtind
- Proof name: rev2_lfappend
- Theorem: Theorem rev2_lfappend: forall x0 a0 : lst, @eq lst (rev2 x0 a0) (lfappend (rev2 x0 Nil) a0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a)

* Hypothesis:
IHx : forall a0 : lst, @eq lst (rev2 x a0) (lfappend (rev2 x Nil) a0)
x : lst
n : nat
a : lst

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat
a : lst

* Terms:
rev2 x (Cons n Nil) : lst
Cons n a : lst
x : lst
rev2 x Nil : lst
rev2 x _UNBOUND_REL_1 : lst
lfappend (rev2 x Nil) _UNBOUND_REL_1 : lst
@eq lst (rev2 x _UNBOUND_REL_1) (lfappend (rev2 x Nil) _UNBOUND_REL_1) : Prop
forall a0 : lst, @eq lst (rev2 x a0) (lfappend (rev2 x Nil) a0) : Prop
nat : Set
lfappend (rev2 x (Cons n Nil)) a : lst
lfappend (rev2 x Nil) (Cons n a) : lst
lst : Set
Cons n Nil : lst
@eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a) : Prop
n : nat
Nil : lst
a : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
rev2  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev2 x (Cons n Nil)
lf7 : lst = Nil
lf1 : lst = lfappend (rev2 x (Cons n Nil)) a
lf4 : lst = Cons n Nil
lf5 : lst = rev2 x Nil
lf2 : lst = lfappend (rev2 x Nil) (Cons n a)
lf6 : lst = Cons n a

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst (lfappend lf5 lf6) lf1.
Lemma conj4: forall (lf5 : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) lf1.
Lemma conj7: forall (lf6 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend (rev2 x lf7) lf6) lf1.
Lemma conj8: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) lf1.
Lemma conj17: forall (lf2 : lst) (a : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 a).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf3 a).
Lemma conj20: forall (lf5 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf3 a).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf3 a).
Lemma conj24: forall (x : lst) (n : nat) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend lf3 a).
Lemma conj39: forall (lf6 : lst) (x : lst) (lf1 : lst), @eq lst (lfappend (rev2 x Nil) lf6) lf1.
Lemma conj40: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) lf1.
Lemma conj55: forall (lf6 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend lf3 a).
Lemma conj56: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend lf3 a).
Lemma conj81: forall (lf2 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst lf2 (lfappend (rev2 x lf4) a).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x lf4) a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x lf4) a).
Lemma conj88: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj89: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj121: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj124: forall (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj128: forall (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).


<---VALIDITY CHECKS--->
Time elapsed: 64 seconds
Valid:
Lemma conj128: forall (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).

Invalid:
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj124: forall (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj121: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj89: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj88: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x lf4) a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x lf4) a).
Lemma conj81: forall (lf2 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst lf2 (lfappend (rev2 x lf4) a).
Lemma conj56: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend lf3 a).
Lemma conj55: forall (lf6 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend lf3 a).
Lemma conj40: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) lf1.
Lemma conj39: forall (lf6 : lst) (x : lst) (lf1 : lst), @eq lst (lfappend (rev2 x Nil) lf6) lf1.
Lemma conj24: forall (x : lst) (n : nat) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend lf3 a).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf3 a).
Lemma conj20: forall (lf5 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf3 a).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf3 a).
Lemma conj17: forall (lf2 : lst) (a : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 a).
Lemma conj8: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) lf1.
Lemma conj7: forall (lf6 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend (rev2 x lf7) lf6) lf1.
Lemma conj4: forall (lf5 : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) lf1.
Lemma conj3: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst (lfappend lf5 lf6) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 64 seconds
Generalizations:
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj124: forall (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj121: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj89: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj88: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x lf4) a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x lf4) a).
Lemma conj81: forall (lf2 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst lf2 (lfappend (rev2 x lf4) a).
Lemma conj56: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend lf3 a).
Lemma conj55: forall (lf6 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend lf3 a).
Lemma conj40: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) lf1.
Lemma conj39: forall (lf6 : lst) (x : lst) (lf1 : lst), @eq lst (lfappend (rev2 x Nil) lf6) lf1.
Lemma conj24: forall (x : lst) (n : nat) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend lf3 a).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf3 a).
Lemma conj20: forall (lf5 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf3 a).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf3 a).
Lemma conj17: forall (lf2 : lst) (a : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 a).
Lemma conj8: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) lf1.
Lemma conj7: forall (lf6 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend (rev2 x lf7) lf6) lf1.
Lemma conj4: forall (lf5 : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) lf1.
Lemma conj3: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst (lfappend lf5 lf6) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 109 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj3: forall (lf6 : lst) (lf5 : lst) (lf1 : lst), @eq lst (lfappend lf5 lf6) lf1.
Lemma conj4: forall (lf5 : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) lf1.
Lemma conj7: forall (lf6 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (lfappend (rev2 x lf7) lf6) lf1.
Lemma conj8: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) lf1.
Lemma conj17: forall (lf2 : lst) (a : lst) (lf3 : lst), @eq lst lf2 (lfappend lf3 a).
Lemma conj19: forall (lf6 : lst) (lf5 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf3 a).
Lemma conj20: forall (lf5 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf3 a).
Lemma conj23: forall (lf6 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf3 a).
Lemma conj24: forall (x : lst) (n : nat) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend lf3 a).
Lemma conj39: forall (lf6 : lst) (x : lst) (lf1 : lst), @eq lst (lfappend (rev2 x Nil) lf6) lf1.
Lemma conj40: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) lf1.
Lemma conj55: forall (lf6 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend lf3 a).
Lemma conj56: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend lf3 a).
Lemma conj81: forall (lf2 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst lf2 (lfappend (rev2 x lf4) a).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x lf4) a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj87: forall (lf6 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x lf4) a).
Lemma conj88: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj89: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj119: forall (lf6 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma conj121: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst lf2 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj123: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj124: forall (lf5 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (Cons n Nil)) a).


<---CREATE SKETCHES--->
Time elapsed: 109 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst (##hole##) lf1
Sketch conj3_term_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj4_sketch0 : @eq lst (lfappend lf5 (##hole##)) lf1
Sketch conj4_sketch1 : @eq lst (##hole##) lf1
Sketch conj4_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj4_term_sketch1 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj7_sketch0 : @eq lst (lfappend (##hole##) lf6) lf1
Sketch conj7_sketch1 : @eq lst (##hole##) lf1
Sketch conj7_term_sketch0 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj7_term_sketch1 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj8_sketch0 : @eq lst (lfappend (rev2 x lf7) (##hole##)) lf1
Sketch conj8_sketch1 : @eq lst (lfappend (##hole##) (Cons n a)) lf1
Sketch conj8_sketch2 : @eq lst (##hole##) lf1
Sketch conj8_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj8_term_sketch1 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj8_term_sketch2 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj17_sketch0 : @eq lst lf2 (##hole##)
Sketch conj17_term_sketch0 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj19_sketch0 : @eq lst (##hole##) (lfappend lf3 a)
Sketch conj19_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj19_term_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj20_sketch0 : @eq lst (lfappend lf5 (##hole##)) (lfappend lf3 a)
Sketch conj20_sketch1 : @eq lst (##hole##) (lfappend lf3 a)
Sketch conj20_sketch2 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj20_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj23_sketch0 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj23_sketch1 : @eq lst (lfappend (##hole##) lf6) (lfappend lf3 a)
Sketch conj23_sketch2 : @eq lst (##hole##) (lfappend lf3 a)
Sketch conj23_term_sketch0 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj23_term_sketch1 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj23_term_sketch2 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj24_sketch0 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend lf3 a)
Sketch conj24_sketch1 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj24_sketch2 : @eq lst (lfappend (##hole##) (Cons n a)) (lfappend lf3 a)
Sketch conj24_sketch3 : @eq lst (##hole##) (lfappend lf3 a)
Sketch conj24_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj24_term_sketch1 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj24_term_sketch2 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj24_term_sketch3 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj39_sketch0 : @eq lst (##hole##) lf1
Sketch conj39_sketch1 : @eq lst (lfappend (##hole##) lf6) lf1
Sketch conj39_sketch2 : @eq lst (lfappend (rev2 x (##hole##)) lf6) lf1
Sketch conj39_term_sketch0 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj39_term_sketch1 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj39_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj40_sketch0 : @eq lst (lfappend (rev2 x Nil) (##hole##)) lf1
Sketch conj40_sketch1 : @eq lst (##hole##) lf1
Sketch conj40_sketch2 : @eq lst (lfappend (##hole##) (Cons n a)) lf1
Sketch conj40_sketch3 : @eq lst (lfappend (rev2 x (##hole##)) (Cons n a)) lf1
Sketch conj40_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj40_term_sketch1 : @eq lst (lfappend (rev2 x Nil) (Cons n a)) (##hole##)
Sketch conj40_term_sketch2 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj40_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj55_sketch0 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj55_sketch1 : @eq lst (##hole##) (lfappend lf3 a)
Sketch conj55_sketch2 : @eq lst (lfappend (##hole##) lf6) (lfappend lf3 a)
Sketch conj55_sketch3 : @eq lst (lfappend (rev2 x (##hole##)) lf6) (lfappend lf3 a)
Sketch conj55_term_sketch0 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj55_term_sketch1 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj55_term_sketch2 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj55_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj56_sketch0 : @eq lst (lfappend (rev2 x Nil) (##hole##)) (lfappend lf3 a)
Sketch conj56_sketch1 : @eq lst (lfappend (rev2 x Nil) (Cons n a)) (##hole##)
Sketch conj56_sketch2 : @eq lst (##hole##) (lfappend lf3 a)
Sketch conj56_sketch3 : @eq lst (lfappend (##hole##) (Cons n a)) (lfappend lf3 a)
Sketch conj56_sketch4 : @eq lst (lfappend (rev2 x (##hole##)) (Cons n a)) (lfappend lf3 a)
Sketch conj56_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj56_term_sketch1 : @eq lst (lfappend lf3 a) (##hole##)
Sketch conj56_term_sketch2 : @eq lst (lfappend (rev2 x Nil) (Cons n a)) (##hole##)
Sketch conj56_term_sketch3 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj56_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj81_sketch0 : @eq lst lf2 (lfappend (##hole##) a)
Sketch conj81_sketch1 : @eq lst lf2 (##hole##)
Sketch conj81_term_sketch0 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj81_term_sketch1 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj83_sketch0 : @eq lst (lfappend lf5 lf6) (lfappend (##hole##) a)
Sketch conj83_sketch1 : @eq lst (##hole##) (lfappend (rev2 x lf4) a)
Sketch conj83_sketch2 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj83_term_sketch0 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj83_term_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj83_term_sketch2 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj84_sketch0 : @eq lst (lfappend lf5 (##hole##)) (lfappend (rev2 x lf4) a)
Sketch conj84_sketch1 : @eq lst (lfappend lf5 (Cons n a)) (lfappend (##hole##) a)
Sketch conj84_sketch2 : @eq lst (##hole##) (lfappend (rev2 x lf4) a)
Sketch conj84_sketch3 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj84_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj84_term_sketch1 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj87_sketch0 : @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (##hole##) a)
Sketch conj87_sketch1 : @eq lst (lfappend (##hole##) lf6) (lfappend (rev2 x lf4) a)
Sketch conj87_sketch2 : @eq lst (##hole##) (lfappend (rev2 x lf4) a)
Sketch conj87_sketch3 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj87_term_sketch0 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj87_term_sketch1 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj87_term_sketch3 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj88_sketch0 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend (rev2 x lf4) a)
Sketch conj88_sketch1 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (##hole##) a)
Sketch conj88_sketch2 : @eq lst (lfappend (##hole##) (Cons n a)) (lfappend (rev2 x lf4) a)
Sketch conj88_sketch3 : @eq lst (##hole##) (lfappend (rev2 x lf4) a)
Sketch conj88_sketch4 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj88_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj88_term_sketch1 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj88_term_sketch2 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj88_term_sketch4 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj89_sketch0 : @eq lst lf2 (##hole##)
Sketch conj89_sketch1 : @eq lst lf2 (lfappend (##hole##) a)
Sketch conj89_sketch2 : @eq lst lf2 (lfappend (rev2 x (##hole##)) a)
Sketch conj89_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj89_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj89_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj91_sketch0 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj91_sketch1 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj91_sketch2 : @eq lst (lfappend lf5 lf6) (lfappend (##hole##) a)
Sketch conj91_sketch3 : @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (##hole##)) a)
Sketch conj91_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj91_term_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj92_sketch0 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj92_sketch1 : @eq lst (lfappend lf5 (##hole##)) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj92_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj92_sketch3 : @eq lst (lfappend lf5 (Cons n a)) (lfappend (##hole##) a)
Sketch conj92_sketch4 : @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (##hole##)) a)
Sketch conj92_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj92_term_sketch1 : @eq lst (Cons n a) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_sketch0 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj95_sketch1 : @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (##hole##) a)
Sketch conj95_sketch2 : @eq lst (lfappend (##hole##) lf6) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj95_sketch3 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj95_sketch4 : @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x (##hole##)) a)
Sketch conj95_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (lfappend (rev2 x lf7) lf6) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj96_sketch0 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj96_sketch1 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj96_sketch2 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (##hole##) a)
Sketch conj96_sketch3 : @eq lst (lfappend (##hole##) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj96_sketch4 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj96_sketch5 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (##hole##)) a)
Sketch conj96_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj96_term_sketch1 : @eq lst (Cons n a) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (lfappend (rev2 x lf7) (Cons n a)) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (Cons n lf7) (##hole##)
Sketch conj119_sketch0 : @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (##hole##) a)
Sketch conj119_sketch1 : @eq lst (##hole##) (lfappend (rev2 x lf4) a)
Sketch conj119_sketch2 : @eq lst (lfappend (##hole##) lf6) (lfappend (rev2 x lf4) a)
Sketch conj119_sketch3 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj119_sketch4 : @eq lst (lfappend (rev2 x (##hole##)) lf6) (lfappend (rev2 x lf4) a)
Sketch conj119_term_sketch0 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj119_term_sketch1 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj119_term_sketch2 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj119_term_sketch3 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj119_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj120_sketch0 : @eq lst (lfappend (rev2 x Nil) (##hole##)) (lfappend (rev2 x lf4) a)
Sketch conj120_sketch1 : @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (##hole##) a)
Sketch conj120_sketch2 : @eq lst (##hole##) (lfappend (rev2 x lf4) a)
Sketch conj120_sketch3 : @eq lst (lfappend (##hole##) (Cons n a)) (lfappend (rev2 x lf4) a)
Sketch conj120_sketch4 : @eq lst (lfappend (rev2 x Nil) (Cons n a)) (##hole##)
Sketch conj120_sketch5 : @eq lst (lfappend (rev2 x (##hole##)) (Cons n a)) (lfappend (rev2 x lf4) a)
Sketch conj120_term_sketch0 : @eq lst (Cons n a) (##hole##)
Sketch conj120_term_sketch1 : @eq lst (rev2 x lf4) (##hole##)
Sketch conj120_term_sketch2 : @eq lst (lfappend (rev2 x Nil) (Cons n a)) (##hole##)
Sketch conj120_term_sketch3 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj120_term_sketch4 : @eq lst (lfappend (rev2 x lf4) a) (##hole##)
Sketch conj120_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj121_sketch0 : @eq lst lf2 (lfappend (##hole##) a)
Sketch conj121_sketch1 : @eq lst lf2 (##hole##)
Sketch conj121_sketch2 : @eq lst lf2 (lfappend (rev2 x (##hole##)) a)
Sketch conj121_sketch3 : @eq lst lf2 (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj121_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj121_term_sketch1 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj121_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj121_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj123_sketch0 : @eq lst (lfappend lf5 lf6) (lfappend (##hole##) a)
Sketch conj123_sketch1 : @eq lst (##hole##) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj123_sketch2 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj123_sketch3 : @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (##hole##)) a)
Sketch conj123_sketch4 : @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj123_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj123_term_sketch1 : @eq lst (lfappend lf5 lf6) (##hole##)
Sketch conj123_term_sketch2 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj123_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj123_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj124_sketch0 : @eq lst (lfappend lf5 (Cons n a)) (lfappend (##hole##) a)
Sketch conj124_sketch1 : @eq lst (lfappend lf5 (##hole##)) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj124_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj124_sketch3 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj124_sketch4 : @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (##hole##)) a)
Sketch conj124_sketch5 : @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj124_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj124_term_sketch1 : @eq lst (Cons n a) (##hole##)
Sketch conj124_term_sketch2 : @eq lst (lfappend lf5 (Cons n a)) (##hole##)
Sketch conj124_term_sketch3 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj124_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj124_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj127_sketch0 : @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (##hole##) a)
Sketch conj127_sketch1 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj127_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj127_sketch3 : @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (##hole##)) a)
Sketch conj127_sketch4 : @eq lst (lfappend (##hole##) lf6) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj127_sketch5 : @eq lst (lfappend (rev2 x (##hole##)) lf6)
  (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj127_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (lfappend (rev2 x Nil) lf6) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj127_term_sketch5 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1230 seconds
Problems per Sketch:
Sketch conj88_term_sketch4 --> Problem  synth_30
Sketch conj124_term_sketch0 --> Problem  synth_57
Sketch conj83_sketch1 --> Problem  synth_30
Sketch conj84_sketch1 --> Problem  synth_33
Sketch conj127_sketch5 --> Problem  synth_64
Sketch conj23_sketch0 --> Problem  synth_8
Sketch conj120_term_sketch3 --> Problem  synth_20
Sketch conj96_sketch4 --> Problem  synth_40
Sketch conj4_sketch0 --> Problem  synth_3
Sketch conj20_term_sketch2 --> Problem  synth_13
Sketch conj124_term_sketch1 --> Problem  synth_4
Sketch conj56_sketch4 --> Problem  synth_27
Sketch conj40_term_sketch0 --> Problem  synth_4
Sketch conj24_sketch2 --> Problem  synth_17
Sketch conj24_sketch1 --> Problem  synth_11
Sketch conj17_term_sketch0 --> Problem  synth_13
Sketch conj8_term_sketch0 --> Problem  synth_4
Sketch conj127_sketch3 --> Problem  synth_62
Sketch conj121_term_sketch1 --> Problem  synth_24
Sketch conj87_term_sketch1 --> Problem  synth_7
Sketch conj56_term_sketch0 --> Problem  synth_4
Sketch conj127_term_sketch0 --> Problem  synth_57
Sketch conj55_sketch3 --> Problem  synth_25
Sketch conj39_sketch0 --> Problem  synth_1
Sketch conj119_sketch0 --> Problem  synth_51
Sketch conj7_term_sketch1 --> Problem  synth_8
Sketch conj124_term_sketch2 --> Problem  synth_5
Sketch conj88_sketch0 --> Problem  synth_36
Sketch conj124_sketch5 --> Problem  synth_61
Sketch conj123_sketch4 --> Problem  synth_59
Sketch conj89_sketch0 --> Problem  synth_12
Sketch conj81_term_sketch1 --> Problem  synth_30
Sketch conj120_term_sketch0 --> Problem  synth_4
Sketch conj84_sketch2 --> Problem  synth_30
Sketch conj127_sketch4 --> Problem  synth_63
Sketch conj124_sketch1 --> Problem  synth_60
Sketch conj92_term_sketch2 --> Problem  synth_5
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj89_term_sketch1 --> Problem  synth_41
Sketch conj40_sketch3 --> Problem  synth_23
Sketch conj23_term_sketch2 --> Problem  synth_8
Sketch conj123_sketch3 --> Problem  synth_43
Sketch conj92_term_sketch3 --> Problem  synth_41
Sketch conj24_term_sketch0 --> Problem  synth_4
Sketch conj83_term_sketch1 --> Problem  synth_2
Sketch conj40_sketch1 --> Problem  synth_1
Sketch conj19_term_sketch1 --> Problem  synth_13
Sketch conj127_term_sketch5 --> Problem  synth_21
Sketch conj96_term_sketch2 --> Problem  synth_41
Sketch conj91_sketch3 --> Problem  synth_43
Sketch conj120_sketch1 --> Problem  synth_54
Sketch conj88_term_sketch2 --> Problem  synth_7
Sketch conj120_term_sketch1 --> Problem  synth_29
Sketch conj23_term_sketch0 --> Problem  synth_13
Sketch conj8_term_sketch2 --> Problem  synth_11
Sketch conj84_term_sketch3 --> Problem  synth_30
Sketch conj123_term_sketch1 --> Problem  synth_2
Sketch conj127_term_sketch4 --> Problem  synth_20
Sketch conj120_term_sketch2 --> Problem  synth_24
Sketch conj91_term_sketch3 --> Problem  synth_42
Sketch conj119_term_sketch1 --> Problem  synth_19
Sketch conj95_sketch1 --> Problem  synth_34
Sketch conj40_sketch0 --> Problem  synth_22
Sketch conj23_sketch2 --> Problem  synth_13
Sketch conj121_sketch1 --> Problem  synth_12
Sketch conj120_sketch2 --> Problem  synth_30
Sketch conj96_sketch1 --> Problem  synth_48
Sketch conj20_sketch2 --> Problem  synth_5
Sketch conj92_sketch4 --> Problem  synth_45
Sketch conj88_term_sketch3 --> Problem  synth_11
Sketch conj96_term_sketch1 --> Problem  synth_4
Sketch conj55_term_sketch1 --> Problem  synth_19
Sketch conj124_sketch4 --> Problem  synth_45
Sketch conj121_sketch2 --> Problem  synth_39
Sketch conj87_term_sketch3 --> Problem  synth_30
Sketch conj84_term_sketch1 --> Problem  synth_29
Sketch conj89_term_sketch2 --> Problem  synth_42
Sketch conj56_term_sketch4 --> Problem  synth_21
Sketch conj95_term_sketch4 --> Problem  synth_42
Sketch conj8_sketch2 --> Problem  synth_1
Sketch conj127_term_sketch3 --> Problem  synth_58
Sketch conj91_sketch2 --> Problem  synth_31
Sketch conj92_sketch2 --> Problem  synth_40
Sketch conj95_term_sketch3 --> Problem  synth_8
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj96_term_sketch4 --> Problem  synth_11
Sketch conj89_sketch2 --> Problem  synth_39
Sketch conj96_term_sketch5 --> Problem  synth_42
Sketch conj55_sketch0 --> Problem  synth_19
Sketch conj119_term_sketch0 --> Problem  synth_29
Sketch conj119_sketch1 --> Problem  synth_30
Sketch conj87_term_sketch0 --> Problem  synth_29
Sketch conj83_sketch0 --> Problem  synth_31
Sketch conj56_term_sketch1 --> Problem  synth_13
Sketch conj56_sketch2 --> Problem  synth_13
Sketch conj96_term_sketch3 --> Problem  synth_7
Sketch conj127_sketch0 --> Problem  synth_51
Sketch conj87_sketch1 --> Problem  synth_35
Sketch conj92_sketch1 --> Problem  synth_44
Sketch conj4_sketch1 --> Problem  synth_1
Sketch conj81_sketch1 --> Problem  synth_12
Sketch conj87_sketch3 --> Problem  synth_8
Sketch conj127_term_sketch2 --> Problem  synth_19
Sketch conj123_sketch2 --> Problem  synth_2
Sketch conj56_sketch1 --> Problem  synth_24
Sketch conj24_term_sketch3 --> Problem  synth_11
Sketch conj120_term_sketch5 --> Problem  synth_21
Sketch conj92_term_sketch4 --> Problem  synth_42
Sketch conj84_sketch3 --> Problem  synth_5
Sketch conj81_sketch0 --> Problem  synth_28
Sketch conj119_sketch3 --> Problem  synth_19
Sketch conj84_term_sketch2 --> Problem  synth_5
Sketch conj39_sketch1 --> Problem  synth_6
Sketch conj120_sketch3 --> Problem  synth_38
Sketch conj84_sketch0 --> Problem  synth_32
Sketch conj7_sketch1 --> Problem  synth_1
Sketch conj40_term_sketch1 --> Problem  synth_24
Sketch conj124_term_sketch4 --> Problem  synth_58
Sketch conj92_term_sketch1 --> Problem  synth_4
Sketch conj8_sketch1 --> Problem  synth_10
Sketch conj95_sketch4 --> Problem  synth_47
Sketch conj7_sketch0 --> Problem  synth_6
Sketch conj96_term_sketch0 --> Problem  synth_40
Sketch conj39_term_sketch2 --> Problem  synth_21
Sketch conj83_term_sketch2 --> Problem  synth_30
Sketch conj123_sketch1 --> Problem  synth_24
Sketch conj40_term_sketch3 --> Problem  synth_21
Sketch conj87_sketch2 --> Problem  synth_30
Sketch conj24_sketch0 --> Problem  synth_16
Sketch conj8_term_sketch1 --> Problem  synth_7
Sketch conj127_sketch2 --> Problem  synth_24
Sketch conj23_sketch1 --> Problem  synth_15
Sketch conj123_term_sketch4 --> Problem  synth_21
Sketch conj120_term_sketch4 --> Problem  synth_30
Sketch conj121_sketch0 --> Problem  synth_28
Sketch conj119_sketch4 --> Problem  synth_52
Sketch conj55_sketch1 --> Problem  synth_13
Sketch conj123_term_sketch3 --> Problem  synth_58
Sketch conj84_term_sketch0 --> Problem  synth_4
Sketch conj20_sketch0 --> Problem  synth_14
Sketch conj121_term_sketch2 --> Problem  synth_58
Sketch conj91_sketch0 --> Problem  synth_2
Sketch conj7_term_sketch0 --> Problem  synth_7
Sketch conj121_term_sketch3 --> Problem  synth_21
Sketch conj20_term_sketch0 --> Problem  synth_4
Sketch conj39_sketch2 --> Problem  synth_18
Sketch conj91_term_sketch0 --> Problem  synth_40
Sketch conj95_sketch3 --> Problem  synth_40
Sketch conj91_term_sketch2 --> Problem  synth_41
Sketch conj119_term_sketch2 --> Problem  synth_20
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj8_sketch0 --> Problem  synth_9
Sketch conj96_sketch2 --> Problem  synth_37
Sketch conj123_term_sketch2 --> Problem  synth_24
Sketch conj88_sketch1 --> Problem  synth_37
Sketch conj56_term_sketch3 --> Problem  synth_20
Sketch conj19_term_sketch0 --> Problem  synth_2
Sketch conj24_term_sketch1 --> Problem  synth_13
Sketch conj87_term_sketch2 --> Problem  synth_8
Sketch conj39_term_sketch0 --> Problem  synth_19
Sketch conj24_sketch3 --> Problem  synth_13
Sketch conj92_sketch3 --> Problem  synth_33
Sketch conj88_sketch2 --> Problem  synth_38
Sketch conj56_sketch3 --> Problem  synth_17
Sketch conj89_sketch1 --> Problem  synth_28
Sketch conj55_term_sketch0 --> Problem  synth_13
Sketch conj40_term_sketch2 --> Problem  synth_20
Sketch conj19_sketch0 --> Problem  synth_13
Sketch conj17_sketch0 --> Problem  synth_12
Sketch conj124_sketch2 --> Problem  synth_24
Sketch conj96_sketch3 --> Problem  synth_49
Sketch conj83_term_sketch0 --> Problem  synth_29
Sketch conj124_term_sketch5 --> Problem  synth_21
Sketch conj124_sketch3 --> Problem  synth_5
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj96_sketch0 --> Problem  synth_11
Sketch conj120_sketch4 --> Problem  synth_24
Sketch conj96_sketch5 --> Problem  synth_50
Sketch conj23_term_sketch1 --> Problem  synth_7
Sketch conj95_term_sketch1 --> Problem  synth_41
Sketch conj95_term_sketch0 --> Problem  synth_40
Sketch conj20_sketch1 --> Problem  synth_13
Sketch conj55_term_sketch3 --> Problem  synth_21
Sketch conj121_term_sketch0 --> Problem  synth_57
Sketch conj39_term_sketch1 --> Problem  synth_20
Sketch conj88_term_sketch0 --> Problem  synth_4
Sketch conj120_sketch0 --> Problem  synth_53
Sketch conj119_term_sketch4 --> Problem  synth_21
Sketch conj123_sketch0 --> Problem  synth_31
Sketch conj127_sketch1 --> Problem  synth_19
Sketch conj56_term_sketch2 --> Problem  synth_24
Sketch conj87_sketch0 --> Problem  synth_34
Sketch conj88_term_sketch1 --> Problem  synth_29
Sketch conj20_term_sketch1 --> Problem  synth_5
Sketch conj89_term_sketch0 --> Problem  synth_40
Sketch conj124_sketch0 --> Problem  synth_33
Sketch conj92_sketch0 --> Problem  synth_5
Sketch conj88_sketch3 --> Problem  synth_30
Sketch conj19_sketch1 --> Problem  synth_2
Sketch conj88_sketch4 --> Problem  synth_11
Sketch conj91_sketch1 --> Problem  synth_40
Sketch conj24_term_sketch2 --> Problem  synth_7
Sketch conj95_sketch2 --> Problem  synth_46
Sketch conj120_sketch5 --> Problem  synth_55
Sketch conj83_sketch2 --> Problem  synth_2
Sketch conj123_term_sketch0 --> Problem  synth_57
Sketch conj91_term_sketch1 --> Problem  synth_2
Sketch conj56_sketch0 --> Problem  synth_26
Sketch conj127_term_sketch1 --> Problem  synth_24
Sketch conj121_sketch3 --> Problem  synth_56
Sketch conj119_sketch2 --> Problem  synth_35
Sketch conj92_term_sketch0 --> Problem  synth_40
Sketch conj119_term_sketch3 --> Problem  synth_30
Sketch conj95_term_sketch2 --> Problem  synth_7
Sketch conj95_sketch0 --> Problem  synth_8
Sketch conj81_term_sketch0 --> Problem  synth_29
Sketch conj55_term_sketch2 --> Problem  synth_20
Sketch conj55_sketch2 --> Problem  synth_15
Sketch conj124_term_sketch3 --> Problem  synth_24
Sketch conj40_sketch2 --> Problem  synth_10


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 1710 seconds

Problem: synth_28

Problem: synth_63
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_17

Problem: synth_29
 lfappend (rev x) (rev lf4)
 rev (lfappend lf4 x)
 rev (rev2 lf4 x)
 lfappend (rev x) lf4
 rev2 x (rev lf4)
 rev2 x lf4

Problem: synth_45
 Cons n Nil

Problem: synth_26

Problem: synth_64
 Nil

Problem: synth_9

Problem: synth_30
 rev2 (lfappend lf4 x) a
 rev2 (rev2 lf4 x) a
 lfappend (rev x) (lfappend lf4 a)
 lfappend (rev x) (rev2 lf4 a)
 rev2 x (lfappend lf4 a)
 rev2 x (rev2 lf4 a)

Problem: synth_11
 rev2 x (Cons n (lfappend a lf7))
 rev2 x (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n x))
 rev (rev2 a (Cons n x))
 lfappend (rev x) (Cons n a)
 rev2 x (Cons n a)

Problem: synth_54
 rev2 (lfappend x Nil) (Cons n Nil)
 lfappend (rev2 x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_39

Problem: synth_1
 rev2 (rev2 lf1 Nil) Nil
 rev (rev2 lf1 Nil)
 rev2 (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_46
 rev2 x (rev lf7)
 lfappend lf7 (rev x)
 rev2 lf7 (rev x)
 rev2 x lf7
 rev2 x Nil
 rev x

Problem: synth_55
 Nil

Problem: synth_57
 rev2 (lfappend x Nil) (Cons n Nil)
 lfappend (rev2 x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_59
 Nil

Problem: synth_15

Problem: synth_31

Problem: synth_14

Problem: synth_8
 lfappend lf7 (rev2 x lf6)
 rev2 lf7 (rev2 x lf6)
 rev2 x (lfappend lf6 Nil)
 rev (rev2 lf6 x)
 lfappend (rev x) lf6
 rev2 x lf6

Problem: synth_34

Problem: synth_12
 rev2 (rev2 lf2 Nil) Nil
 rev (rev2 lf2 Nil)
 rev2 (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_62

Problem: synth_5
 lfappend lf5 (Cons n (rev (rev a)))
 lfappend lf5 (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n (rev lf5)))
 rev (rev2 a (Cons n (rev lf5)))
 rev2 (rev lf5) (Cons n a)
 lfappend lf5 (Cons n a)

Problem: synth_37
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 rev2 x (Cons n (rev lf7))
 rev2 x (Cons n lf7)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_58
 Cons n Nil

Problem: synth_53
 rev (rev2 a (rev lf4))
 rev (rev2 a lf4)
 lfappend (rev lf4) a
 rev2 (rev lf4) a
 lfappend lf4 a
 rev2 lf4 a

Problem: synth_50
 rev2 lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_2
 rev2 (rev lf5) (lfappend lf6 Nil)
 lfappend lf5 (rev (rev lf6))
 lfappend lf5 (lfappend lf6 Nil)
 rev (rev2 lf6 (rev lf5))
 rev2 (rev lf5) lf6
 lfappend lf5 lf6

Problem: synth_22

Problem: synth_20
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_18
 Nil

Problem: synth_21
 Nil

Problem: synth_56
 Nil

Problem: synth_41
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 rev2 x (Cons n (rev lf7))
 rev2 x (Cons n lf7)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_49
 rev2 x (rev lf7)
 lfappend lf7 (rev x)
 rev2 lf7 (rev x)
 rev2 x lf7
 rev2 x Nil
 rev x

Problem: synth_25
 Nil

Problem: synth_13
 rev2 (rev lf3) (lfappend a Nil)
 lfappend lf3 (rev (rev a))
 lfappend lf3 (lfappend a Nil)
 rev (rev2 a (rev lf3))
 rev2 (rev lf3) a
 lfappend lf3 a

Problem: synth_6

Problem: synth_7
 rev2 x (rev lf7)
 lfappend lf7 (rev x)
 rev2 lf7 (rev x)
 rev2 x lf7
 rev2 x Nil
 rev x

Problem: synth_4
 Cons n (rev2 (rev a) Nil)
 rev (rev2 a (Cons n Nil))
 rev (lfappend (rev a) (Cons n Nil))
 Cons n (rev (rev a))
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_61
 Nil

Problem: synth_38
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_23
 Nil

Problem: synth_27
 Nil

Problem: synth_42
 rev2 lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_16

Problem: synth_19
 lfappend (rev x) (lfappend lf6 Nil)
 rev2 x (rev (rev lf6))
 rev2 x (lfappend lf6 Nil)
 rev (rev2 lf6 x)
 lfappend (rev x) lf6
 rev2 x lf6

Problem: synth_40
 rev2 x (Cons n (lfappend a lf7))
 rev2 x (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n x))
 rev (rev2 a (Cons n x))
 lfappend (rev x) (Cons n a)
 rev2 x (Cons n a)

Problem: synth_10

Problem: synth_33
 lfappend (lfappend lf5 Nil) (Cons n Nil)
 rev2 (rev2 lf5 Nil) (Cons n Nil)
 lfappend (rev (rev2 lf5 Nil)) (Cons n Nil)
 rev2 (rev lf5) (Cons n Nil)
 lfappend lf5 (Cons n Nil)
 lfappend (rev (rev lf5)) (Cons n Nil)

Problem: synth_47

Problem: synth_24
 rev2 x (Cons n (rev (rev a)))
 rev2 x (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n x))
 rev (rev2 a (Cons n x))
 lfappend (rev x) (Cons n a)
 rev2 x (Cons n a)

Problem: synth_3

Problem: synth_52
 Nil

Problem: synth_32
 rev (rev2 a (rev lf4))
 rev (rev2 a lf4)
 lfappend (rev lf4) a
 rev2 (rev lf4) a
 lfappend lf4 a
 rev2 lf4 a

Problem: synth_48
 Cons n (rev2 lf7 a)
 lfappend lf7 (Cons n a)
 rev2 lf7 (Cons n a)
 Cons n (lfappend a lf7)
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_44
 Cons n (rev2 lf7 a)
 lfappend lf7 (Cons n a)
 rev2 lf7 (Cons n a)
 Cons n (lfappend a lf7)
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_60
 Cons n (rev2 (rev a) Nil)
 rev (rev2 a (Cons n Nil))
 rev (lfappend (rev a) (Cons n Nil))
 Cons n (rev (rev a))
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_36
 rev (rev2 a (rev lf4))
 rev (rev2 a lf4)
 lfappend (rev lf4) a
 rev2 (rev lf4) a
 lfappend lf4 a
 rev2 lf4 a

Problem: synth_51

Problem: synth_35
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 1711 seconds
Lemmas:
Lemma candidate_1: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_7: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_8: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_9: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_10: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_11: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_12: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_13: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_14: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_15: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_17: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_20: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_21: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_22: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_23: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_24: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_25: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_26: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_27: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_28: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_29: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_30: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_31: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_32: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_33: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_34: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_35: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_36: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_37: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_38: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_39: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_40: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_41: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_42: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_43: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_44: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_45: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_46: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_47: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_48: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_49: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_50: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_51: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_52: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_53: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_54: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_55: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_56: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_57: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_58: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_59: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_60: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_61: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_62: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_63: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_64: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_65: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_66: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_67: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_68: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_69: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_70: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_71: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_72: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_73: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_74: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_75: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_76: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_77: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_78: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_79: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_80: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_81: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_82: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_83: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_84: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_85: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_86: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_87: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_88: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_89: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_90: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_91: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_92: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_93: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_94: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_95: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_96: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_97: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_98: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_99: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_100: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_101: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_102: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_103: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_104: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_105: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_106: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_107: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_108: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_109: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_110: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_111: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_112: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_113: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_114: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_115: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_116: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_117: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_118: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_119: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_120: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_121: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_122: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_123: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_124: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_125: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_126: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_127: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_128: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_129: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_130: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_131: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_132: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_133: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_134: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_135: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_136: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_137: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_138: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_139: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_140: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_141: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_142: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_143: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_144: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_145: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_146: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_147: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_148: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_149: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_150: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_151: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_152: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_153: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_154: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_155: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_156: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_157: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_158: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_159: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_160: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_161: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_162: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_163: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_164: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_165: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_166: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_167: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_168: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_169: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_170: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_171: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_172: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_173: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_174: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_175: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_176: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_177: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_178: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_179: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_180: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_181: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_182: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_183: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_184: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_185: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_186: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_187: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_188: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_189: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_190: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_191: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_192: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_193: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_194: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_195: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_196: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_197: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_198: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_199: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_200: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_201: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_202: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_203: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_204: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_205: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_206: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_207: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_208: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_209: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_210: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_211: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_212: forall (lf1 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x (Nil)) lf6) lf1.
Lemma candidate_213: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_214: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_215: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_216: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_217: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_218: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_219: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_220: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_221: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_222: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_223: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_224: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_225: @eq lst Nil (Nil).
Lemma candidate_226: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_227: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_228: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_229: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_230: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_231: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_232: forall (a : lst) (n : nat) (lf1 : lst) (x : lst), @eq lst (lfappend (rev2 x (Nil)) (Cons n a)) lf1.
Lemma candidate_233: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_234: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_235: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_236: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_237: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_238: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_239: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_240: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_241: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_242: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_243: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_244: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_245: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_246: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_247: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_248: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_249: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_250: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_251: @eq lst Nil (Nil).
Lemma candidate_252: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_253: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_254: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_255: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_256: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_257: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_258: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_259: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_260: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_261: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_262: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_263: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_264: forall (lf3 : lst) (a : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x (Nil)) lf6) (lfappend lf3 a).
Lemma candidate_265: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_266: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_267: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_268: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_269: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_270: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_271: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_272: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_273: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_274: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_275: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_276: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_277: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_278: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_279: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_280: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_281: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_282: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_283: @eq lst Nil (Nil).
Lemma candidate_284: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_285: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_286: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_287: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_288: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_289: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_290: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_291: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_292: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_293: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_294: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_295: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_296: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Nil)) (Cons n a)) (lfappend lf3 a).
Lemma candidate_297: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_298: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_299: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_300: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_301: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_302: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_303: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_304: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_305: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_306: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_307: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_308: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 a).
Lemma candidate_309: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_310: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_311: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_312: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_313: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_314: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_315: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_316: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_317: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_318: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_319: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_320: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_321: @eq lst Nil (Nil).
Lemma candidate_322: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_323: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_324: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_325: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_326: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_327: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_328: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_329: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_330: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_331: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_332: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_333: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_334: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_335: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_336: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_337: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_338: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_339: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_340: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (lfappend lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_341: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_342: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_343: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_344: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_345: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_346: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_347: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_348: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_349: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_350: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_351: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_352: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_353: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_354: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_355: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_356: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_357: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_358: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_359: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_360: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_361: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_362: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_363: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_364: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_365: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_366: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_367: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_368: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_369: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_370: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev2 a (rev lf4)))) (lfappend (rev2 x lf4) a).
Lemma candidate_371: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev2 a lf4))) (lfappend (rev2 x lf4) a).
Lemma candidate_372: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend (rev lf4) a)) (lfappend (rev2 x lf4) a).
Lemma candidate_373: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev2 (rev lf4) a)) (lfappend (rev2 x lf4) a).
Lemma candidate_374: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_375: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_376: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (lfappend lf5 Nil) (Cons n Nil)) a).
Lemma candidate_377: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (rev2 (rev2 lf5 Nil) (Cons n Nil)) a).
Lemma candidate_378: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev2 lf5 Nil)) (Cons n Nil)) a).
Lemma candidate_379: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 (rev lf5) (Cons n Nil)) a).
Lemma candidate_380: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (lfappend lf5 (Cons n Nil)) a).
Lemma candidate_381: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) a).
Lemma candidate_382: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (lfappend lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_383: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_384: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_385: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_386: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_387: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_388: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_389: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_390: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_391: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_392: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_393: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_394: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_395: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_396: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_397: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_398: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_399: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_400: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_401: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_402: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_403: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_404: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_405: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_406: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_407: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_408: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_409: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_410: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_411: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_412: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_413: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_414: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_415: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_416: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_417: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_418: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_419: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (rev x))) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_420: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend x Nil)) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_421: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_422: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_423: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_424: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (lfappend lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_425: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_426: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_427: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_428: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_429: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_430: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_431: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_432: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_433: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_434: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_435: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_436: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_437: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_438: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_439: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_440: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_441: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_442: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_443: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_444: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_445: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_446: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_447: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_448: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_449: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_450: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_451: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_452: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_453: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_454: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_455: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_456: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_457: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_458: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_459: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_460: forall (a : lst) (lf7 : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (rev (rev2 a (rev lf4))))   (lfappend (rev2 x lf4) a).
Lemma candidate_461: forall (a : lst) (lf7 : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (rev (rev2 a lf4))) (lfappend (rev2 x lf4) a).
Lemma candidate_462: forall (a : lst) (lf7 : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (rev lf4) a))   (lfappend (rev2 x lf4) a).
Lemma candidate_463: forall (a : lst) (lf7 : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (rev2 (rev lf4) a)) (lfappend (rev2 x lf4) a).
Lemma candidate_464: forall (a : lst) (lf7 : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_465: forall (a : lst) (lf7 : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_466: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (lfappend (rev x) (Cons n (rev lf7))) a).
Lemma candidate_467: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (lfappend (rev x) (Cons n lf7)) a).
Lemma candidate_468: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (Cons n (rev lf7))) a).
Lemma candidate_469: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_470: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_471: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (lfappend (rev x) (Cons n Nil)) a).
Lemma candidate_472: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) (Cons n a))   (lfappend (rev2 x lf4) a).
Lemma candidate_473: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev (rev (rev x))) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_474: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev (lfappend x Nil)) (Cons n a))   (lfappend (rev2 x lf4) a).
Lemma candidate_475: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) Nil) (Cons n a))   (lfappend (rev2 x lf4) a).
Lemma candidate_476: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_477: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_478: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (lfappend lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_479: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_480: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_481: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_482: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_483: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_484: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_485: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_486: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_487: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_488: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_489: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_490: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_491: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_492: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_493: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_494: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_495: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_496: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_497: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_498: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_499: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_500: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_501: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_502: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_503: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_504: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_505: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_506: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_507: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_508: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_509: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_510: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_511: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_512: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_513: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_514: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_515: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_516: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_517: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_518: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_519: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_520: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_521: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_522: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_523: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_524: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_525: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_526: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_527: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_528: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_529: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_530: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_531: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_532: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_533: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_534: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_535: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_536: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_537: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_538: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_539: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_540: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_541: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_542: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_543: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_544: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_545: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_546: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_547: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_548: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_549: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_550: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_551: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_552: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_553: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_554: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_555: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_556: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_557: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_558: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_559: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_560: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_561: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_562: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_563: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_564: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_565: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_566: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_567: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_568: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_569: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_570: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_571: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_572: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_573: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_574: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_575: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_576: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_577: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_578: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_579: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_580: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_581: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_582: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_583: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_584: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_585: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_586: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n (rev2 lf7 a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_587: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (lfappend lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_588: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev2 lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_589: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n (lfappend a lf7)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_590: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_591: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_592: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_593: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_594: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_595: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_596: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_597: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_598: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (lfappend lf5 Nil) (Cons n Nil)) a).
Lemma candidate_599: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (rev2 (rev2 lf5 Nil) (Cons n Nil)) a).
Lemma candidate_600: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev2 lf5 Nil)) (Cons n Nil)) a).
Lemma candidate_601: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 (rev lf5) (Cons n Nil)) a).
Lemma candidate_602: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (lfappend lf5 (Cons n Nil)) a).
Lemma candidate_603: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) a).
Lemma candidate_604: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_605: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_606: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_607: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_608: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_609: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_610: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_611: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_612: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_613: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_614: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_615: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_616: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_617: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_618: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_619: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_620: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_621: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_622: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_623: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_624: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_625: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_626: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_627: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_628: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_629: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_630: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_631: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_632: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_633: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_634: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_635: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_636: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_637: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_638: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_639: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_640: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_641: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x (rev lf7)) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_642: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf6)   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_643: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 lf7 (rev x)) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_644: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_645: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_646: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) lf6) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_647: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_648: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_649: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_650: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_651: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_652: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_653: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_654: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_655: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_656: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_657: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_658: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_659: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_660: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_661: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_662: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_663: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_664: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_665: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_666: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_667: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_668: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_669: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_670: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_671: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend lf7 (rev2 x lf6)).
Lemma candidate_672: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 lf7 (rev2 x lf6)).
Lemma candidate_673: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_674: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev (rev2 lf6 x)).
Lemma candidate_675: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (lfappend (rev x) lf6).
Lemma candidate_676: forall (lf7 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x lf7) lf6) (rev2 x lf6).
Lemma candidate_677: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_678: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_679: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_680: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_681: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_682: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_683: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_684: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_685: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_686: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_687: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_688: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_689: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n (rev2 lf7 a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_690: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_691: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (rev2 lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_692: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n (lfappend a lf7)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_693: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_694: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_695: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (lfappend (rev x) (Cons n (rev lf7))) a).
Lemma candidate_696: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (lfappend (rev x) (Cons n lf7)) a).
Lemma candidate_697: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (Cons n (rev lf7))) a).
Lemma candidate_698: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_699: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_700: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (lfappend (rev x) (Cons n Nil)) a).
Lemma candidate_701: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (rev lf7)) (Cons n a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_702: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (Cons n a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_703: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 lf7 (rev x)) (Cons n a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_704: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_705: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_706: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_707: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_708: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_709: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_710: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_711: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_712: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_713: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (rev2 lf7 (Cons n Nil))) a).
Lemma candidate_714: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (lfappend (rev (rev lf7)) (Cons n Nil))) a).
Lemma candidate_715: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (lfappend (rev lf7) (Cons n Nil))) a).
Lemma candidate_716: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (Cons n (rev lf7))) a).
Lemma candidate_717: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_718: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_719: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_720: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_721: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_722: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_723: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_724: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_725: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_726: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_727: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_728: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_729: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_730: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_731: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_732: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_733: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_734: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_735: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_736: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_737: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_738: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_739: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_740: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_741: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_742: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_743: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_744: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_745: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_746: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_747: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_748: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_749: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_750: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_751: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_752: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_753: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_754: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_755: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (lfappend lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_756: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_757: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_758: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_759: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_760: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_761: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_762: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (rev x))) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_763: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend x Nil)) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_764: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_765: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_766: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_767: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_768: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_769: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_770: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_771: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_772: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_773: forall (a : lst) (lf4 : lst) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x (Nil)) lf6) (lfappend (rev2 x lf4) a).
Lemma candidate_774: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_775: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_776: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_777: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_778: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_779: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_780: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_781: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_782: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_783: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_784: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_785: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_786: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_787: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_788: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_789: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_790: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_791: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_792: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_793: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_794: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_795: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_796: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_797: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_798: @eq lst Nil (Nil).
Lemma candidate_799: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev (rev2 a (rev lf4))))   (lfappend (rev2 x lf4) a).
Lemma candidate_800: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev (rev2 a lf4))) (lfappend (rev2 x lf4) a).
Lemma candidate_801: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (rev lf4) a))   (lfappend (rev2 x lf4) a).
Lemma candidate_802: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev2 (rev lf4) a)) (lfappend (rev2 x lf4) a).
Lemma candidate_803: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_804: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_805: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (rev2 (lfappend x Nil) (Cons n Nil)) a).
Lemma candidate_806: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev2 x Nil) (Cons n Nil)) a).
Lemma candidate_807: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) a).
Lemma candidate_808: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) a).
Lemma candidate_809: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_810: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev x) (Cons n Nil)) a).
Lemma candidate_811: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (lfappend lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_812: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_813: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_814: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_815: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_816: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (rev2 lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_817: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) (Cons n a))   (lfappend (rev2 x lf4) a).
Lemma candidate_818: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev (rev (rev x))) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_819: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev (lfappend x Nil)) (Cons n a))   (lfappend (rev2 x lf4) a).
Lemma candidate_820: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (lfappend (rev x) Nil) (Cons n a))   (lfappend (rev2 x lf4) a).
Lemma candidate_821: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_822: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_823: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_824: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_825: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_826: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_827: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_828: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_829: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x (Nil)) (Cons n a)) (lfappend (rev2 x lf4) a).
Lemma candidate_830: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_831: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_832: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_833: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_834: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_835: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_836: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) (rev lf4)).
Lemma candidate_837: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (lfappend lf4 x)).
Lemma candidate_838: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_839: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_840: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x (rev lf4)).
Lemma candidate_841: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev2 x lf4).
Lemma candidate_842: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_843: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_844: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_845: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_846: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_847: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n a)).
Lemma candidate_848: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_849: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_850: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_851: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_852: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_853: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_854: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (lfappend lf4 x) a).
Lemma candidate_855: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_856: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_857: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (rev2 lf4 a)).
Lemma candidate_858: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_859: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (rev2 lf4 a)).
Lemma candidate_860: @eq lst Nil (Nil).
Lemma candidate_861: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_862: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_863: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_864: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_865: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_866: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_867: forall (a : lst) (n : nat) (x : lst) (lf2 : lst), @eq lst lf2 (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_868: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_869: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_870: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_871: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_872: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_873: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_874: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_875: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_876: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_877: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_878: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_879: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_880: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_881: @eq lst Nil (Nil).
Lemma candidate_882: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_883: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_884: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_885: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_886: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_887: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_888: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_889: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_890: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_891: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_892: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_893: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_894: forall (a : lst) (n : nat) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_895: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_896: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_897: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_898: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_899: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_900: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_901: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_902: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_903: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_904: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_905: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_906: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 lf6).
Lemma candidate_907: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_908: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_909: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_910: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_911: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_912: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_913: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_914: @eq lst Nil (Nil).
Lemma candidate_915: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (lfappend lf5 Nil) (Cons n Nil)) a).
Lemma candidate_916: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (rev2 (rev2 lf5 Nil) (Cons n Nil)) a).
Lemma candidate_917: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev2 lf5 Nil)) (Cons n Nil)) a).
Lemma candidate_918: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 (rev lf5) (Cons n Nil)) a).
Lemma candidate_919: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (lfappend lf5 (Cons n Nil)) a).
Lemma candidate_920: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) a).
Lemma candidate_921: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n (rev2 (rev a) Nil)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_922: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (rev2 a (Cons n Nil))))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_923: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (rev (lfappend (rev a) (Cons n Nil))))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_924: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n (rev (rev a))))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_925: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_926: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_927: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_928: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_929: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_930: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_931: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_932: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_933: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_934: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_935: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_936: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_937: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_938: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_939: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_940: forall (a : lst) (n : nat) (x : lst) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_941: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_942: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_943: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_944: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_945: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_946: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_947: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_948: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_949: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_950: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_951: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_952: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n a).
Lemma candidate_953: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_954: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_955: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_956: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_957: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_958: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n a)).
Lemma candidate_959: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_960: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_961: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_962: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_963: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_964: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_965: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_966: @eq lst Nil (Nil).
Lemma candidate_967: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_968: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_969: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_970: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_971: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_972: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_973: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_974: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_975: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_976: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_977: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_978: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_979: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) lf6)   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_980: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (rev (rev x))) lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_981: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev (lfappend x Nil)) lf6)   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_982: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (lfappend (rev x) Nil) lf6)   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_983: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_984: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev x) lf6) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_985: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x (Nil)) lf6) (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_986: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_987: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_988: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_989: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_990: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_991: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_992: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_993: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_994: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_995: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_996: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_997: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_998: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_999: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_1000: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_1001: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_1002: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_1003: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x lf6).
Lemma candidate_1004: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1005: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_1006: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_1007: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_1008: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_1009: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_1010: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_1011: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 2711 seconds
Duplicates removed: 779
Filtered by Quickchick: 125
Filtered by script: 18
Remaining: 89

Lemmas: 
Lemma candidate_77: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_224: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_78: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_76: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_75: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_74: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_330: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_220: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_23: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_331: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_222: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_221: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_90: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_84: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_24: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_21: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_20: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_12: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_89: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_83: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_87: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_81: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_11: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_216: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_341: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_335: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_88: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_82: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_22: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_9: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_217: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_86: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_80: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_344: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_338: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_214: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_10: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).
Lemma candidate_873: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_533: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_30: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_887: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_879: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_8: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_215: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_868: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_29: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_885: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_877: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_242: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_342: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_336: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_26: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_886: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_878: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_243: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_870: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_213: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_882: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_874: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_803: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_380: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (lfappend lf5 (Cons n Nil)) a).
Lemma candidate_239: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_27: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_871: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_802: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev2 (rev lf4) a)) (lfappend (rev2 x lf4) a).
Lemma candidate_379: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 (rev lf5) (Cons n Nil)) a).
Lemma candidate_883: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_875: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_240: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_28: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_884: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_876: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_241: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_377: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (rev2 (rev2 lf5 Nil) (Cons n Nil)) a).
Lemma candidate_799: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev (rev2 a (rev lf4))))   (lfappend (rev2 x lf4) a).
Lemma candidate_381: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) a).
Lemma candidate_810: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev x) (Cons n Nil)) a).
Lemma candidate_376: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (lfappend lf5 Nil) (Cons n Nil)) a).
Lemma candidate_378: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev2 lf5 Nil)) (Cons n Nil)) a).
Lemma candidate_806: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev2 x Nil) (Cons n Nil)) a).
Lemma candidate_805: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (rev2 (lfappend x Nil) (Cons n Nil)) a).
Lemma candidate_807: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) a).
Lemma candidate_808: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) a).
Lemma candidate_714: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (lfappend (rev (rev lf7)) (Cons n Nil))) a).
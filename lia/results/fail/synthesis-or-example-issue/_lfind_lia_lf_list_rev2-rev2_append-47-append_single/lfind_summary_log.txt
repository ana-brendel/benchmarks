LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2-rev2_append-47-append_single

Number of Lemmas: 1011
Number of Lemmas (after duplicates removed): 232
Number of Lemmas (after QuickChick used to filter): 107
* Number of Candidate Lemmas: 89

Time until ranking: 2714
Time to complete: 8874

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 7

Lemma candidate_335: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 (rev2 lf4 x) a).
Lemma candidate_338: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (rev2 x (lfappend lf4 a)).
Lemma candidate_879: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_336: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x lf4) a) (lfappend (rev x) (lfappend lf4 a)).
Lemma candidate_376: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (lfappend lf5 Nil) (Cons n Nil)) a).
Lemma candidate_806: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev2 x Nil) (Cons n Nil)) a).
Lemma candidate_714: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a))   (lfappend (rev2 x (lfappend (rev (rev lf7)) (Cons n Nil))) a).

Category 3 (provable):
Count = 5

Lemma candidate_78: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_24: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (lfappend a Nil)).
Lemma candidate_82: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (lfappend a Nil)).
Lemma candidate_10: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (lfappend lf6 Nil)).

Category 3 (not provable):
Count = 77

Lemma candidate_77: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_5: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_224: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_76: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_75: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_4: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_3: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_74: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_2: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_330: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (rev (rev2 lf4 x)).
Lemma candidate_220: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_23: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev (rev a))).
Lemma candidate_331: forall (lf4 : lst) (x : lst), @eq lst (rev2 x lf4) (lfappend (rev x) lf4).
Lemma candidate_222: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_221: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_90: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) a) (lfappend lf3 a).
Lemma candidate_84: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) a).
Lemma candidate_21: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_20: forall (a : lst) (n : nat), @eq lst (Cons n a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_12: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) lf6).
Lemma candidate_89: forall (lf3 : lst) (a : lst), @eq lst (rev (rev2 a (rev lf3))) (lfappend lf3 a).
Lemma candidate_83: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev (rev2 a (rev lf3))).
Lemma candidate_87: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (rev (rev a))) (lfappend lf3 a).
Lemma candidate_81: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (lfappend lf3 (rev (rev a))).
Lemma candidate_11: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev (rev2 lf6 (rev lf5))).
Lemma candidate_216: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev (rev2 lf6 x)).
Lemma candidate_341: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 (rev2 lf4 x) a) (lfappend (rev2 x lf4) a).
Lemma candidate_88: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_22: forall (a : lst) (n : nat), @eq lst (Cons n a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_9: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (lfappend lf5 (rev (rev lf6))).
Lemma candidate_217: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) lf6).
Lemma candidate_86: forall (lf3 : lst) (a : lst), @eq lst (rev2 (rev lf3) (lfappend a Nil)) (lfappend lf3 a).
Lemma candidate_80: forall (lf3 : lst) (a : lst), @eq lst (lfappend lf3 a) (rev2 (rev lf3) (lfappend a Nil)).
Lemma candidate_344: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (rev2 x (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_214: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (rev (rev lf6))).
Lemma candidate_873: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_533: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_30: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev2 (rev lf5) (Cons n a)).
Lemma candidate_887: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_8: forall (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf5 lf6) (rev2 (rev lf5) (lfappend lf6 Nil)).
Lemma candidate_215: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (rev2 x (lfappend lf6 Nil)).
Lemma candidate_868: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_29: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (rev2 a (Cons n (rev lf5)))).
Lemma candidate_885: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_877: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_242: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev (rev2 a (Cons n x))).
Lemma candidate_342: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev x) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_26: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (rev (rev a)))).
Lemma candidate_886: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_878: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_243: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev x) (Cons n a)).
Lemma candidate_870: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_213: forall (x : lst) (lf6 : lst), @eq lst (lfappend (rev2 x Nil) lf6) (lfappend (rev x) (lfappend lf6 Nil)).
Lemma candidate_882: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_874: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_803: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf4 a)) (lfappend (rev2 x lf4) a).
Lemma candidate_380: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (lfappend lf5 (Cons n Nil)) a).
Lemma candidate_239: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_27: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend lf5 (Cons n (lfappend a Nil))).
Lemma candidate_871: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_802: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev2 (rev lf4) a)) (lfappend (rev2 x lf4) a).
Lemma candidate_379: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (lfappend (rev2 (rev lf5) (Cons n Nil)) a).
Lemma candidate_883: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_875: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_240: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_28: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a)) (rev (lfappend (rev a) (Cons n (rev lf5)))).
Lemma candidate_884: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_876: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_241: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_377: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (rev2 (rev2 lf5 Nil) (Cons n Nil)) a).
Lemma candidate_799: forall (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) (rev (rev2 a (rev lf4))))   (lfappend (rev2 x lf4) a).
Lemma candidate_381: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev lf5)) (Cons n Nil)) a).
Lemma candidate_810: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev x) (Cons n Nil)) a).
Lemma candidate_378: forall (a : lst) (n : nat) (lf5 : lst), @eq lst (lfappend lf5 (Cons n a))   (lfappend (lfappend (rev (rev2 lf5 Nil)) (Cons n Nil)) a).
Lemma candidate_805: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (rev2 (lfappend x Nil) (Cons n Nil)) a).
Lemma candidate_807: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev (rev (rev x))) (Cons n Nil)) a).
Lemma candidate_808: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a))   (lfappend (lfappend (rev (lfappend x Nil)) (Cons n Nil)) a).
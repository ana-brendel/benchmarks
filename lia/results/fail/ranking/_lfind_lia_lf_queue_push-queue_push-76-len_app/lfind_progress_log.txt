File Information
- File name: queue_push
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_queue_push-queue_push-76-len_app
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_queue_push-queue_push-76-len_app
- Namespace: adtind
- Proof name: queue_push
- Theorem: Theorem queue_push: forall (q : queue) (n0 : nat),
@eq nat (qlen (qpush q n0)) (add (S O) (qlen q)).
- Declarations: 
From lfind Require Import LFind.
Require Import Nat.

Proof Context
* Goal State: @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) (len l0)))

* Hypothesis:
l0 : lst
n : nat
l : lst

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
l0 : lst
l : lst
n : nat

* Terms:
S (add (len l) (len l0)) : nat
@eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) (len l0))) : Prop
app (rev l0) (Cons n Nil) : lst
len (app l (app (rev l0) (Cons n Nil))) : nat
nat : Set
app l (app (rev l0) (Cons n Nil)) : lst
l0 : lst
len l : nat
lst : Set
Cons n Nil : lst
rev l0 : lst
len l0 : nat
l : lst
n : nat
Nil : lst
add (len l) (len l0) : nat

* Functions:
app  : forall (_ : lst) (_ : lst), lst
len  : forall _ : lst, nat
rev  : forall _ : lst, lst
add  : forall (_ : nat) (_ : nat), nat
S  : forall _ : nat, nat
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = app (rev l0) (Cons n Nil)
lf7 : lst = rev l0
lf1 : nat = len (app l (app (rev l0) (Cons n Nil)))
lf4 : nat = S (add (len l) (len l0))
lf5 : nat = add (len l) (len l0)
lf9 : nat = len l
lf2 : lst = app l (app (rev l0) (Cons n Nil))
lf10 : lst = Nil
lf8 : nat = len l0
lf6 : lst = Cons n Nil

Generalizations:
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.
Lemma conj65: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj97: forall (lf8 : nat) (lf9 : nat) (lf1 : nat), @eq nat lf1 (S (add lf9 lf8)).
Lemma conj99: forall (lf9 : nat) (l0 : lst) (lf1 : nat), @eq nat lf1 (S (add lf9 (len l0))).
Lemma conj113: forall (lf8 : nat) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) lf8)).
Lemma conj115: forall (l0 : lst) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) (len l0))).
Lemma conj129: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj137: forall (lf4 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) lf4.
Lemma conj193: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj201: forall (lf5 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S lf5).
Lemma conj225: forall (lf8 : nat) (lf9 : nat) (lf2 : lst), @eq nat (len lf2) (S (add lf9 lf8)).
Lemma conj227: forall (lf9 : nat) (lf2 : lst) (l0 : lst), @eq nat (len lf2) (S (add lf9 (len l0))).
Lemma conj233: forall (lf8 : nat) (lf9 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 lf8)).
Lemma conj235: forall (lf9 : nat) (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 (len l0))).
Lemma conj241: forall (lf8 : nat) (lf2 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) lf8)).
Lemma conj243: forall (lf2 : lst) (l0 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) (len l0))).
Lemma conj249: forall (lf8 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) lf8)).
Lemma conj251: forall (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) (len l0))).
Lemma conj649: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) lf4.
Lemma conj650: forall (lf10 : lst) (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) lf4.
Lemma conj654: forall (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) lf4.
Lemma conj713: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S lf5).
Lemma conj714: forall (lf10 : lst) (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S lf5).
Lemma conj718: forall (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S lf5).
Lemma conj745: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 lf8)).
Lemma conj746: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj747: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len l0))).
Lemma conj748: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj750: forall (lf8 : nat) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj752: forall (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj761: forall (lf8 : nat) (lf6 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) lf8)).
Lemma conj762: forall (lf8 : nat) (lf10 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj763: forall (lf6 : lst) (l0 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len l0))).
Lemma conj764: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj766: forall (lf8 : nat) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj768: forall (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len l0))).
Lemma conj905: forall (lf6 : lst) (l0 : lst) (lf4 : nat) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) lf4.
Lemma conj906: forall (lf10 : lst) (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) lf4.
Lemma conj910: forall (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) lf4.
Lemma conj969: forall (lf6 : lst) (lf5 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S lf5).
Lemma conj970: forall (lf10 : lst) (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S lf5).
Lemma conj974: forall (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S lf5).
Lemma conj1001: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 lf8)).
Lemma conj1002: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj1003: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len l0))).
Lemma conj1004: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj1006: forall (lf8 : nat) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj1008: forall (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj1017: forall (lf8 : nat) (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) lf8)).
Lemma conj1018: forall (lf8 : nat) (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj1019: forall (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma conj1020: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj1022: forall (lf8 : nat) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj1024: forall (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) (len l0))).


<---VALIDITY CHECKS--->
Time elapsed: 111 seconds
Valid:
Lemma conj1024: forall (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) (len l0))).

Invalid:
Lemma conj1022: forall (lf8 : nat) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj1020: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj1019: forall (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma conj1018: forall (lf8 : nat) (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj1017: forall (lf8 : nat) (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) lf8)).
Lemma conj1008: forall (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj1006: forall (lf8 : nat) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj1004: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj1003: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len l0))).
Lemma conj1002: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj1001: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 lf8)).
Lemma conj974: forall (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S lf5).
Lemma conj970: forall (lf10 : lst) (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S lf5).
Lemma conj969: forall (lf6 : lst) (lf5 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S lf5).
Lemma conj910: forall (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) lf4.
Lemma conj906: forall (lf10 : lst) (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) lf4.
Lemma conj905: forall (lf6 : lst) (l0 : lst) (lf4 : nat) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) lf4.
Lemma conj768: forall (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len l0))).
Lemma conj766: forall (lf8 : nat) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj764: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj763: forall (lf6 : lst) (l0 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len l0))).
Lemma conj762: forall (lf8 : nat) (lf10 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj761: forall (lf8 : nat) (lf6 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) lf8)).
Lemma conj752: forall (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj750: forall (lf8 : nat) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj748: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj747: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len l0))).
Lemma conj746: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj745: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 lf8)).
Lemma conj718: forall (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S lf5).
Lemma conj714: forall (lf10 : lst) (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S lf5).
Lemma conj713: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S lf5).
Lemma conj654: forall (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) lf4.
Lemma conj650: forall (lf10 : lst) (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) lf4.
Lemma conj649: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) lf4.
Lemma conj251: forall (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) (len l0))).
Lemma conj249: forall (lf8 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) lf8)).
Lemma conj243: forall (lf2 : lst) (l0 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) (len l0))).
Lemma conj241: forall (lf8 : nat) (lf2 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) lf8)).
Lemma conj235: forall (lf9 : nat) (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 (len l0))).
Lemma conj233: forall (lf8 : nat) (lf9 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 lf8)).
Lemma conj227: forall (lf9 : nat) (lf2 : lst) (l0 : lst), @eq nat (len lf2) (S (add lf9 (len l0))).
Lemma conj225: forall (lf8 : nat) (lf9 : nat) (lf2 : lst), @eq nat (len lf2) (S (add lf9 lf8)).
Lemma conj201: forall (lf5 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S lf5).
Lemma conj193: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj137: forall (lf4 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) lf4.
Lemma conj129: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj115: forall (l0 : lst) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) (len l0))).
Lemma conj113: forall (lf8 : nat) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) lf8)).
Lemma conj99: forall (lf9 : nat) (l0 : lst) (lf1 : nat), @eq nat lf1 (S (add lf9 (len l0))).
Lemma conj97: forall (lf8 : nat) (lf9 : nat) (lf1 : nat), @eq nat lf1 (S (add lf9 lf8)).
Lemma conj65: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 112 seconds
Generalizations:
Lemma conj1022: forall (lf8 : nat) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj1020: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj1019: forall (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma conj1018: forall (lf8 : nat) (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj1017: forall (lf8 : nat) (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) lf8)).
Lemma conj1008: forall (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj1006: forall (lf8 : nat) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj1004: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj1003: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len l0))).
Lemma conj1002: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj1001: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 lf8)).
Lemma conj974: forall (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S lf5).
Lemma conj970: forall (lf10 : lst) (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S lf5).
Lemma conj969: forall (lf6 : lst) (lf5 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S lf5).
Lemma conj910: forall (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) lf4.
Lemma conj906: forall (lf10 : lst) (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) lf4.
Lemma conj905: forall (lf6 : lst) (l0 : lst) (lf4 : nat) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) lf4.
Lemma conj768: forall (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len l0))).
Lemma conj766: forall (lf8 : nat) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj764: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj763: forall (lf6 : lst) (l0 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len l0))).
Lemma conj762: forall (lf8 : nat) (lf10 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj761: forall (lf8 : nat) (lf6 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) lf8)).
Lemma conj752: forall (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj750: forall (lf8 : nat) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj748: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj747: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len l0))).
Lemma conj746: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj745: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 lf8)).
Lemma conj718: forall (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S lf5).
Lemma conj714: forall (lf10 : lst) (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S lf5).
Lemma conj713: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S lf5).
Lemma conj654: forall (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) lf4.
Lemma conj650: forall (lf10 : lst) (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) lf4.
Lemma conj649: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) lf4.
Lemma conj251: forall (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) (len l0))).
Lemma conj249: forall (lf8 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) lf8)).
Lemma conj243: forall (lf2 : lst) (l0 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) (len l0))).
Lemma conj241: forall (lf8 : nat) (lf2 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) lf8)).
Lemma conj235: forall (lf9 : nat) (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 (len l0))).
Lemma conj233: forall (lf8 : nat) (lf9 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 lf8)).
Lemma conj227: forall (lf9 : nat) (lf2 : lst) (l0 : lst), @eq nat (len lf2) (S (add lf9 (len l0))).
Lemma conj225: forall (lf8 : nat) (lf9 : nat) (lf2 : lst), @eq nat (len lf2) (S (add lf9 lf8)).
Lemma conj201: forall (lf5 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S lf5).
Lemma conj193: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj137: forall (lf4 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) lf4.
Lemma conj129: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj115: forall (l0 : lst) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) (len l0))).
Lemma conj113: forall (lf8 : nat) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) lf8)).
Lemma conj99: forall (lf9 : nat) (l0 : lst) (lf1 : nat), @eq nat lf1 (S (add lf9 (len l0))).
Lemma conj97: forall (lf8 : nat) (lf9 : nat) (lf1 : nat), @eq nat lf1 (S (add lf9 lf8)).
Lemma conj65: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 192 seconds
Valid:

Invalid:
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.
Lemma conj65: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj97: forall (lf8 : nat) (lf9 : nat) (lf1 : nat), @eq nat lf1 (S (add lf9 lf8)).
Lemma conj99: forall (lf9 : nat) (l0 : lst) (lf1 : nat), @eq nat lf1 (S (add lf9 (len l0))).
Lemma conj113: forall (lf8 : nat) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) lf8)).
Lemma conj115: forall (l0 : lst) (lf1 : nat) (l : lst), @eq nat lf1 (S (add (len l) (len l0))).
Lemma conj129: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj137: forall (lf4 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) lf4.
Lemma conj193: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj201: forall (lf5 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S lf5).
Lemma conj225: forall (lf8 : nat) (lf9 : nat) (lf2 : lst), @eq nat (len lf2) (S (add lf9 lf8)).
Lemma conj227: forall (lf9 : nat) (lf2 : lst) (l0 : lst), @eq nat (len lf2) (S (add lf9 (len l0))).
Lemma conj233: forall (lf8 : nat) (lf9 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 lf8)).
Lemma conj235: forall (lf9 : nat) (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add lf9 (len l0))).
Lemma conj241: forall (lf8 : nat) (lf2 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) lf8)).
Lemma conj243: forall (lf2 : lst) (l0 : lst) (l : lst), @eq nat (len lf2) (S (add (len l) (len l0))).
Lemma conj249: forall (lf8 : nat) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) lf8)).
Lemma conj251: forall (l0 : lst) (l : lst) (lf3 : lst), @eq nat (len (app l lf3)) (S (add (len l) (len l0))).
Lemma conj649: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) lf4.
Lemma conj650: forall (lf10 : lst) (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) lf4.
Lemma conj654: forall (lf4 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) lf4.
Lemma conj713: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S lf5).
Lemma conj714: forall (lf10 : lst) (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S lf5).
Lemma conj718: forall (lf5 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S lf5).
Lemma conj745: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 lf8)).
Lemma conj746: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj747: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len l0))).
Lemma conj748: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj750: forall (lf8 : nat) (lf9 : nat) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj752: forall (lf9 : nat) (l0 : lst) (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj761: forall (lf8 : nat) (lf6 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) lf8)).
Lemma conj762: forall (lf8 : nat) (lf10 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj763: forall (lf6 : lst) (l0 : lst) (l : lst) (lf7 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len l0))).
Lemma conj764: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj766: forall (lf8 : nat) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) lf8)).
Lemma conj768: forall (l0 : lst) (l : lst) (n : nat) (lf7 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len l0))).
Lemma conj905: forall (lf6 : lst) (l0 : lst) (lf4 : nat) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) lf4.
Lemma conj906: forall (lf10 : lst) (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) lf4.
Lemma conj910: forall (l0 : lst) (lf4 : nat) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) lf4.
Lemma conj969: forall (lf6 : lst) (lf5 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S lf5).
Lemma conj970: forall (lf10 : lst) (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S lf5).
Lemma conj974: forall (lf5 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S lf5).
Lemma conj1001: forall (lf8 : nat) (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 lf8)).
Lemma conj1002: forall (lf8 : nat) (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 lf8)).
Lemma conj1003: forall (lf6 : lst) (lf9 : nat) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len l0))).
Lemma conj1004: forall (lf10 : lst) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma conj1006: forall (lf8 : nat) (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 lf8)).
Lemma conj1008: forall (lf9 : nat) (l0 : lst) (n : nat) (l : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma conj1017: forall (lf8 : nat) (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) lf8)).
Lemma conj1018: forall (lf8 : nat) (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) lf8)).
Lemma conj1019: forall (lf6 : lst) (l0 : lst) (l : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma conj1020: forall (lf10 : lst) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma conj1022: forall (lf8 : nat) (l0 : lst) (l : lst) (n : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) lf8)).


<---CREATE SKETCHES--->
Time elapsed: 192 seconds
Sketches:
Sketch conj65_sketch0 : @eq nat lf1 (##hole##)
Sketch conj65_term_sketch0 : @eq nat (S lf5) (##hole##)
Sketch conj97_sketch0 : @eq nat lf1 (##hole##)
Sketch conj97_sketch1 : @eq nat lf1 (S (##hole##))
Sketch conj97_term_sketch0 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj97_term_sketch1 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj99_sketch0 : @eq nat lf1 (##hole##)
Sketch conj99_sketch1 : @eq nat lf1 (S (add lf9 (##hole##)))
Sketch conj99_sketch2 : @eq nat lf1 (S (##hole##))
Sketch conj99_term_sketch0 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj99_term_sketch1 : @eq nat (len l0) (##hole##)
Sketch conj99_term_sketch2 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj113_sketch0 : @eq nat lf1 (##hole##)
Sketch conj113_sketch1 : @eq nat lf1 (S (add (##hole##) lf8))
Sketch conj113_sketch2 : @eq nat lf1 (S (##hole##))
Sketch conj113_term_sketch0 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj113_term_sketch1 : @eq nat (len l) (##hole##)
Sketch conj113_term_sketch2 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj115_sketch0 : @eq nat lf1 (##hole##)
Sketch conj115_sketch1 : @eq nat lf1 (S (add (##hole##) (len l0)))
Sketch conj115_sketch2 : @eq nat lf1 (S (add (len l) (##hole##)))
Sketch conj115_sketch3 : @eq nat lf1 (S (##hole##))
Sketch conj115_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj115_term_sketch1 : @eq nat (len l) (##hole##)
Sketch conj115_term_sketch2 : @eq nat (len l0) (##hole##)
Sketch conj115_term_sketch3 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj129_sketch0 : @eq nat (##hole##) lf4
Sketch conj129_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj137_sketch0 : @eq nat (len (##hole##)) lf4
Sketch conj137_sketch1 : @eq nat (##hole##) lf4
Sketch conj137_term_sketch0 : @eq lst (app l lf3) (##hole##)
Sketch conj137_term_sketch1 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj193_sketch0 : @eq nat (##hole##) (S lf5)
Sketch conj193_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj193_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj193_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj201_sketch0 : @eq nat (len (##hole##)) (S lf5)
Sketch conj201_sketch1 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj201_sketch2 : @eq nat (##hole##) (S lf5)
Sketch conj201_term_sketch0 : @eq lst (app l lf3) (##hole##)
Sketch conj201_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj201_term_sketch2 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj225_sketch0 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj225_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj225_sketch2 : @eq nat (len lf2) (S (##hole##))
Sketch conj225_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj225_term_sketch1 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj225_term_sketch2 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj227_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj227_sketch1 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj227_sketch2 : @eq nat (len lf2) (S (add lf9 (##hole##)))
Sketch conj227_sketch3 : @eq nat (len lf2) (S (##hole##))
Sketch conj227_term_sketch0 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj227_term_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj227_term_sketch2 : @eq nat (len l0) (##hole##)
Sketch conj227_term_sketch3 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj233_sketch0 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj233_sketch1 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj233_sketch2 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj233_sketch3 : @eq nat (len (app l lf3)) (S (##hole##))
Sketch conj233_term_sketch0 : @eq lst (app l lf3) (##hole##)
Sketch conj233_term_sketch1 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj233_term_sketch2 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj233_term_sketch3 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj235_sketch0 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj235_sketch1 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj235_sketch2 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj235_sketch3 : @eq nat (len (app l lf3)) (S (add lf9 (##hole##)))
Sketch conj235_sketch4 : @eq nat (len (app l lf3)) (S (##hole##))
Sketch conj235_term_sketch0 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj235_term_sketch1 : @eq lst (app l lf3) (##hole##)
Sketch conj235_term_sketch2 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj235_term_sketch3 : @eq nat (len l0) (##hole##)
Sketch conj235_term_sketch4 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj241_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj241_sketch1 : @eq nat (len lf2) (S (add (##hole##) lf8))
Sketch conj241_sketch2 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj241_sketch3 : @eq nat (len lf2) (S (##hole##))
Sketch conj241_term_sketch0 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj241_term_sketch1 : @eq nat (len l) (##hole##)
Sketch conj241_term_sketch2 : @eq nat (len lf2) (##hole##)
Sketch conj241_term_sketch3 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj243_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj243_sketch1 : @eq nat (len lf2) (S (add (##hole##) (len l0)))
Sketch conj243_sketch2 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj243_sketch3 : @eq nat (len lf2) (S (add (len l) (##hole##)))
Sketch conj243_sketch4 : @eq nat (len lf2) (S (##hole##))
Sketch conj243_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj243_term_sketch1 : @eq nat (len l) (##hole##)
Sketch conj243_term_sketch2 : @eq nat (len lf2) (##hole##)
Sketch conj243_term_sketch3 : @eq nat (len l0) (##hole##)
Sketch conj243_term_sketch4 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj249_sketch0 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj249_sketch1 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj249_sketch2 : @eq nat (len (app l lf3)) (S (add (##hole##) lf8))
Sketch conj249_sketch3 : @eq nat (len (app l lf3)) (S (##hole##))
Sketch conj249_sketch4 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj249_term_sketch0 : @eq lst (app l lf3) (##hole##)
Sketch conj249_term_sketch1 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj249_term_sketch2 : @eq nat (len l) (##hole##)
Sketch conj249_term_sketch3 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj249_term_sketch4 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj251_sketch0 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj251_sketch1 : @eq nat (len (##hole##)) (S (add (len l) (len l0)))
Sketch conj251_sketch2 : @eq nat (len (app l lf3)) (S (add (##hole##) (len l0)))
Sketch conj251_sketch3 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj251_sketch4 : @eq nat (len (app l lf3)) (S (add (len l) (##hole##)))
Sketch conj251_sketch5 : @eq nat (len (app l lf3)) (S (##hole##))
Sketch conj251_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj251_term_sketch1 : @eq lst (app l lf3) (##hole##)
Sketch conj251_term_sketch2 : @eq nat (len l) (##hole##)
Sketch conj251_term_sketch3 : @eq nat (len (app l lf3)) (##hole##)
Sketch conj251_term_sketch4 : @eq nat (len l0) (##hole##)
Sketch conj251_term_sketch5 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj649_sketch0 : @eq nat (len (##hole##)) lf4
Sketch conj649_sketch1 : @eq nat (len (app l (##hole##))) lf4
Sketch conj649_sketch2 : @eq nat (##hole##) lf4
Sketch conj649_term_sketch0 : @eq lst (app l (app lf7 lf6)) (##hole##)
Sketch conj649_term_sketch1 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj649_term_sketch2 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj650_sketch0 : @eq nat (len (app l (app lf7 (##hole##)))) lf4
Sketch conj650_sketch1 : @eq nat (len (##hole##)) lf4
Sketch conj650_sketch2 : @eq nat (len (app l (##hole##))) lf4
Sketch conj650_sketch3 : @eq nat (##hole##) lf4
Sketch conj650_term_sketch0 : @eq lst (Cons n lf10) (##hole##)
Sketch conj650_term_sketch1 : @eq lst (app l (app lf7 (Cons n lf10))) (##hole##)
Sketch conj650_term_sketch2 : @eq lst (app lf7 (Cons n lf10)) (##hole##)
Sketch conj650_term_sketch3 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj654_sketch0 : @eq nat (len (app l (##hole##))) lf4
Sketch conj654_sketch1 : @eq nat (##hole##) lf4
Sketch conj654_sketch2 : @eq nat (len (app l (app lf7 (##hole##)))) lf4
Sketch conj654_sketch3 : @eq nat (len (##hole##)) lf4
Sketch conj654_sketch4 : @eq nat (len (app l (app lf7 (Cons n (##hole##))))) lf4
Sketch conj654_term_sketch0 : @eq lst (app lf7 (Cons n Nil)) (##hole##)
Sketch conj654_term_sketch1 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj654_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj654_term_sketch3 : @eq lst (app l (app lf7 (Cons n Nil))) (##hole##)
Sketch conj654_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj713_sketch0 : @eq nat (len (##hole##)) (S lf5)
Sketch conj713_sketch1 : @eq nat (len (app l (##hole##))) (S lf5)
Sketch conj713_sketch2 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj713_sketch3 : @eq nat (##hole##) (S lf5)
Sketch conj713_term_sketch0 : @eq lst (app l (app lf7 lf6)) (##hole##)
Sketch conj713_term_sketch1 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj713_term_sketch2 : @eq nat (S lf5) (##hole##)
Sketch conj713_term_sketch3 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj714_sketch0 : @eq nat (len (app l (app lf7 (##hole##)))) (S lf5)
Sketch conj714_sketch1 : @eq nat (len (##hole##)) (S lf5)
Sketch conj714_sketch2 : @eq nat (len (app l (##hole##))) (S lf5)
Sketch conj714_sketch3 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj714_sketch4 : @eq nat (##hole##) (S lf5)
Sketch conj714_term_sketch0 : @eq lst (Cons n lf10) (##hole##)
Sketch conj714_term_sketch1 : @eq lst (app l (app lf7 (Cons n lf10))) (##hole##)
Sketch conj714_term_sketch2 : @eq lst (app lf7 (Cons n lf10)) (##hole##)
Sketch conj714_term_sketch3 : @eq nat (S lf5) (##hole##)
Sketch conj714_term_sketch4 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj718_sketch0 : @eq nat (len (app l (##hole##))) (S lf5)
Sketch conj718_sketch1 : @eq nat (##hole##) (S lf5)
Sketch conj718_sketch2 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj718_sketch3 : @eq nat (len (app l (app lf7 (##hole##)))) (S lf5)
Sketch conj718_sketch4 : @eq nat (len (##hole##)) (S lf5)
Sketch conj718_sketch5 : @eq nat (len (app l (app lf7 (Cons n (##hole##))))) (S lf5)
Sketch conj718_term_sketch0 : @eq lst (app lf7 (Cons n Nil)) (##hole##)
Sketch conj718_term_sketch1 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj718_term_sketch2 : @eq nat (S lf5) (##hole##)
Sketch conj718_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj718_term_sketch4 : @eq lst (app l (app lf7 (Cons n Nil))) (##hole##)
Sketch conj718_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj745_sketch0 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj745_sketch1 : @eq nat (len (app l (##hole##))) (S (add lf9 lf8))
Sketch conj745_sketch2 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj745_sketch3 : @eq nat (len (app l (app lf7 lf6))) (S (##hole##))
Sketch conj745_sketch4 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj745_term_sketch0 : @eq lst (app l (app lf7 lf6)) (##hole##)
Sketch conj745_term_sketch1 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj745_term_sketch2 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj745_term_sketch3 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj745_term_sketch4 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj746_sketch0 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add lf9 lf8))
Sketch conj746_sketch1 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj746_sketch2 : @eq nat (len (app l (##hole##))) (S (add lf9 lf8))
Sketch conj746_sketch3 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj746_sketch4 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj746_sketch5 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (##hole##))
Sketch conj746_term_sketch0 : @eq lst (Cons n lf10) (##hole##)
Sketch conj746_term_sketch1 : @eq lst (app l (app lf7 (Cons n lf10))) (##hole##)
Sketch conj746_term_sketch2 : @eq lst (app lf7 (Cons n lf10)) (##hole##)
Sketch conj746_term_sketch3 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj746_term_sketch4 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj746_term_sketch5 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj747_sketch0 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj747_sketch1 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj747_sketch2 : @eq nat (len (app l (##hole##))) (S (add lf9 (len l0)))
Sketch conj747_sketch3 : @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (##hole##)))
Sketch conj747_sketch4 : @eq nat (len (app l (app lf7 lf6))) (S (##hole##))
Sketch conj747_sketch5 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj747_term_sketch0 : @eq lst (app l (app lf7 lf6)) (##hole##)
Sketch conj747_term_sketch1 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj747_term_sketch2 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj747_term_sketch3 : @eq nat (len l0) (##hole##)
Sketch conj747_term_sketch4 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj747_term_sketch5 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj748_sketch0 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj748_sketch1 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add lf9 (len l0)))
Sketch conj748_sketch2 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj748_sketch3 : @eq nat (len (app l (##hole##))) (S (add lf9 (len l0)))
Sketch conj748_sketch4 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj748_sketch5 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (##hole##)))
Sketch conj748_sketch6 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (##hole##))
Sketch conj748_term_sketch0 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj748_term_sketch1 : @eq lst (Cons n lf10) (##hole##)
Sketch conj748_term_sketch2 : @eq lst (app l (app lf7 (Cons n lf10))) (##hole##)
Sketch conj748_term_sketch3 : @eq lst (app lf7 (Cons n lf10)) (##hole##)
Sketch conj748_term_sketch4 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj748_term_sketch5 : @eq nat (len l0) (##hole##)
Sketch conj748_term_sketch6 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj750_sketch0 : @eq nat (len (app l (##hole##))) (S (add lf9 lf8))
Sketch conj750_sketch1 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj750_sketch2 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj750_sketch3 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add lf9 lf8))
Sketch conj750_sketch4 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (##hole##))
Sketch conj750_sketch5 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj750_sketch6 : @eq nat (len (app l (app lf7 (Cons n (##hole##))))) (S (add lf9 lf8))
Sketch conj750_term_sketch0 : @eq lst (app lf7 (Cons n Nil)) (##hole##)
Sketch conj750_term_sketch1 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj750_term_sketch2 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj750_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj750_term_sketch4 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj750_term_sketch5 : @eq lst (app l (app lf7 (Cons n Nil))) (##hole##)
Sketch conj750_term_sketch6 : @eq lst Nil (##hole##)
Sketch conj752_sketch0 : @eq nat (len (app l (##hole##))) (S (add lf9 (len l0)))
Sketch conj752_sketch1 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj752_sketch2 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj752_sketch3 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add lf9 (len l0)))
Sketch conj752_sketch4 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (##hole##)))
Sketch conj752_sketch5 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj752_sketch6 : @eq nat (len (app l (app lf7 (Cons n (##hole##))))) (S (add lf9 (len l0)))
Sketch conj752_sketch7 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (##hole##))
Sketch conj752_term_sketch0 : @eq lst (app lf7 (Cons n Nil)) (##hole##)
Sketch conj752_term_sketch1 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj752_term_sketch2 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj752_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj752_term_sketch4 : @eq nat (len l0) (##hole##)
Sketch conj752_term_sketch5 : @eq lst (app l (app lf7 (Cons n Nil))) (##hole##)
Sketch conj752_term_sketch6 : @eq lst Nil (##hole##)
Sketch conj752_term_sketch7 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj761_sketch0 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj761_sketch1 : @eq nat (len (app l (##hole##))) (S (add (len l) lf8))
Sketch conj761_sketch2 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj761_sketch3 : @eq nat (len (app l (app lf7 lf6))) (S (add (##hole##) lf8))
Sketch conj761_sketch4 : @eq nat (len (app l (app lf7 lf6))) (S (##hole##))
Sketch conj761_sketch5 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj761_term_sketch0 : @eq lst (app l (app lf7 lf6)) (##hole##)
Sketch conj761_term_sketch1 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj761_term_sketch2 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj761_term_sketch3 : @eq nat (len l) (##hole##)
Sketch conj761_term_sketch4 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj761_term_sketch5 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj762_sketch0 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add (len l) lf8))
Sketch conj762_sketch1 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj762_sketch2 : @eq nat (len (app l (##hole##))) (S (add (len l) lf8))
Sketch conj762_sketch3 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj762_sketch4 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (##hole##) lf8))
Sketch conj762_sketch5 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (##hole##))
Sketch conj762_sketch6 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj762_term_sketch0 : @eq lst (Cons n lf10) (##hole##)
Sketch conj762_term_sketch1 : @eq lst (app l (app lf7 (Cons n lf10))) (##hole##)
Sketch conj762_term_sketch2 : @eq lst (app lf7 (Cons n lf10)) (##hole##)
Sketch conj762_term_sketch3 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj762_term_sketch4 : @eq nat (len l) (##hole##)
Sketch conj762_term_sketch5 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj762_term_sketch6 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj763_sketch0 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj763_sketch1 : @eq nat (len (##hole##)) (S (add (len l) (len l0)))
Sketch conj763_sketch2 : @eq nat (len (app l (##hole##))) (S (add (len l) (len l0)))
Sketch conj763_sketch3 : @eq nat (len (app l (app lf7 lf6))) (S (add (##hole##) (len l0)))
Sketch conj763_sketch4 : @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (##hole##)))
Sketch conj763_sketch5 : @eq nat (len (app l (app lf7 lf6))) (S (##hole##))
Sketch conj763_sketch6 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj763_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj763_term_sketch1 : @eq lst (app l (app lf7 lf6)) (##hole##)
Sketch conj763_term_sketch2 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj763_term_sketch3 : @eq nat (len l) (##hole##)
Sketch conj763_term_sketch4 : @eq nat (len l0) (##hole##)
Sketch conj763_term_sketch5 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj763_term_sketch6 : @eq nat (len (app l (app lf7 lf6))) (##hole##)
Sketch conj764_sketch0 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj764_sketch1 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add (len l) (len l0)))
Sketch conj764_sketch2 : @eq nat (len (##hole##)) (S (add (len l) (len l0)))
Sketch conj764_sketch3 : @eq nat (len (app l (##hole##))) (S (add (len l) (len l0)))
Sketch conj764_sketch4 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (##hole##) (len l0)))
Sketch conj764_sketch5 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj764_sketch6 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (##hole##)))
Sketch conj764_sketch7 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (##hole##))
Sketch conj764_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj764_term_sketch1 : @eq lst (Cons n lf10) (##hole##)
Sketch conj764_term_sketch2 : @eq lst (app l (app lf7 (Cons n lf10))) (##hole##)
Sketch conj764_term_sketch3 : @eq lst (app lf7 (Cons n lf10)) (##hole##)
Sketch conj764_term_sketch4 : @eq nat (len l) (##hole##)
Sketch conj764_term_sketch5 : @eq nat (len (app l (app lf7 (Cons n lf10)))) (##hole##)
Sketch conj764_term_sketch6 : @eq nat (len l0) (##hole##)
Sketch conj764_term_sketch7 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj766_sketch0 : @eq nat (len (app l (##hole##))) (S (add (len l) lf8))
Sketch conj766_sketch1 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj766_sketch2 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj766_sketch3 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (##hole##) lf8))
Sketch conj766_sketch4 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (##hole##))
Sketch conj766_sketch5 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add (len l) lf8))
Sketch conj766_sketch6 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj766_sketch7 : @eq nat (len (app l (app lf7 (Cons n (##hole##))))) (S (add (len l) lf8))
Sketch conj766_term_sketch0 : @eq lst (app lf7 (Cons n Nil)) (##hole##)
Sketch conj766_term_sketch1 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj766_term_sketch2 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj766_term_sketch3 : @eq nat (len l) (##hole##)
Sketch conj766_term_sketch4 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj766_term_sketch5 : @eq lst (Cons n Nil) (##hole##)
Sketch conj766_term_sketch6 : @eq lst (app l (app lf7 (Cons n Nil))) (##hole##)
Sketch conj766_term_sketch7 : @eq lst Nil (##hole##)
Sketch conj768_sketch0 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj768_sketch1 : @eq nat (len (app l (##hole##))) (S (add (len l) (len l0)))
Sketch conj768_sketch2 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj768_sketch3 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (##hole##) (len l0)))
Sketch conj768_sketch4 : @eq nat (len (app l (app lf7 (##hole##)))) (S (add (len l) (len l0)))
Sketch conj768_sketch5 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (##hole##)))
Sketch conj768_sketch6 : @eq nat (len (##hole##)) (S (add (len l) (len l0)))
Sketch conj768_sketch7 : @eq nat (len (app l (app lf7 (Cons n (##hole##)))))
  (S (add (len l) (len l0)))
Sketch conj768_sketch8 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (##hole##))
Sketch conj768_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj768_term_sketch1 : @eq lst (app lf7 (Cons n Nil)) (##hole##)
Sketch conj768_term_sketch2 : @eq nat (len (app l (app lf7 (Cons n Nil)))) (##hole##)
Sketch conj768_term_sketch3 : @eq nat (len l) (##hole##)
Sketch conj768_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj768_term_sketch5 : @eq nat (len l0) (##hole##)
Sketch conj768_term_sketch6 : @eq lst (app l (app lf7 (Cons n Nil))) (##hole##)
Sketch conj768_term_sketch7 : @eq lst Nil (##hole##)
Sketch conj768_term_sketch8 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj905_sketch0 : @eq nat (##hole##) lf4
Sketch conj905_sketch1 : @eq nat (len (##hole##)) lf4
Sketch conj905_sketch2 : @eq nat (len (app l (app (##hole##) lf6))) lf4
Sketch conj905_sketch3 : @eq nat (len (app l (##hole##))) lf4
Sketch conj905_term_sketch0 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj905_term_sketch1 : @eq lst (app l (app (rev l0) lf6)) (##hole##)
Sketch conj905_term_sketch2 : @eq lst (rev l0) (##hole##)
Sketch conj905_term_sketch3 : @eq lst (app (rev l0) lf6) (##hole##)
Sketch conj906_sketch0 : @eq nat (len (##hole##)) lf4
Sketch conj906_sketch1 : @eq nat (len (app l (app (rev l0) (##hole##)))) lf4
Sketch conj906_sketch2 : @eq nat (len (app l (##hole##))) lf4
Sketch conj906_sketch3 : @eq nat (##hole##) lf4
Sketch conj906_sketch4 : @eq nat (len (app l (app (##hole##) (Cons n lf10)))) lf4
Sketch conj906_term_sketch0 : @eq lst (app l (app (rev l0) (Cons n lf10))) (##hole##)
Sketch conj906_term_sketch1 : @eq lst (Cons n lf10) (##hole##)
Sketch conj906_term_sketch2 : @eq lst (app (rev l0) (Cons n lf10)) (##hole##)
Sketch conj906_term_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj906_term_sketch4 : @eq lst (rev l0) (##hole##)
Sketch conj910_sketch0 : @eq nat (len (app l (##hole##))) lf4
Sketch conj910_sketch1 : @eq nat (##hole##) lf4
Sketch conj910_sketch2 : @eq nat (len (##hole##)) lf4
Sketch conj910_sketch3 : @eq nat (len (app l (app (rev l0) (##hole##)))) lf4
Sketch conj910_sketch4 : @eq nat (len (app l (app (##hole##) (Cons n Nil)))) lf4
Sketch conj910_sketch5 : @eq nat (len (app l (app (rev l0) (Cons n (##hole##))))) lf4
Sketch conj910_term_sketch0 : @eq lst (app (rev l0) (Cons n Nil)) (##hole##)
Sketch conj910_term_sketch1 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj910_term_sketch2 : @eq lst (app l (app (rev l0) (Cons n Nil))) (##hole##)
Sketch conj910_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj910_term_sketch4 : @eq lst (rev l0) (##hole##)
Sketch conj910_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj969_sketch0 : @eq nat (##hole##) (S lf5)
Sketch conj969_sketch1 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj969_sketch2 : @eq nat (len (##hole##)) (S lf5)
Sketch conj969_sketch3 : @eq nat (len (app l (app (##hole##) lf6))) (S lf5)
Sketch conj969_sketch4 : @eq nat (len (app l (##hole##))) (S lf5)
Sketch conj969_term_sketch0 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj969_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj969_term_sketch2 : @eq lst (app l (app (rev l0) lf6)) (##hole##)
Sketch conj969_term_sketch3 : @eq lst (rev l0) (##hole##)
Sketch conj969_term_sketch4 : @eq lst (app (rev l0) lf6) (##hole##)
Sketch conj970_sketch0 : @eq nat (len (##hole##)) (S lf5)
Sketch conj970_sketch1 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S lf5)
Sketch conj970_sketch2 : @eq nat (len (app l (##hole##))) (S lf5)
Sketch conj970_sketch3 : @eq nat (##hole##) (S lf5)
Sketch conj970_sketch4 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj970_sketch5 : @eq nat (len (app l (app (##hole##) (Cons n lf10)))) (S lf5)
Sketch conj970_term_sketch0 : @eq lst (app l (app (rev l0) (Cons n lf10))) (##hole##)
Sketch conj970_term_sketch1 : @eq lst (Cons n lf10) (##hole##)
Sketch conj970_term_sketch2 : @eq lst (app (rev l0) (Cons n lf10)) (##hole##)
Sketch conj970_term_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj970_term_sketch4 : @eq nat (S lf5) (##hole##)
Sketch conj970_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj974_sketch0 : @eq nat (len (app l (##hole##))) (S lf5)
Sketch conj974_sketch1 : @eq nat (##hole##) (S lf5)
Sketch conj974_sketch2 : @eq nat (len (##hole##)) (S lf5)
Sketch conj974_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj974_sketch4 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S lf5)
Sketch conj974_sketch5 : @eq nat (len (app l (app (##hole##) (Cons n Nil)))) (S lf5)
Sketch conj974_sketch6 : @eq nat (len (app l (app (rev l0) (Cons n (##hole##))))) (S lf5)
Sketch conj974_term_sketch0 : @eq lst (app (rev l0) (Cons n Nil)) (##hole##)
Sketch conj974_term_sketch1 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj974_term_sketch2 : @eq lst (app l (app (rev l0) (Cons n Nil))) (##hole##)
Sketch conj974_term_sketch3 : @eq nat (S lf5) (##hole##)
Sketch conj974_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj974_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj974_term_sketch6 : @eq lst Nil (##hole##)
Sketch conj1001_sketch0 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj1001_sketch1 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1001_sketch2 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj1001_sketch3 : @eq nat (len (app l (app (##hole##) lf6))) (S (add lf9 lf8))
Sketch conj1001_sketch4 : @eq nat (len (app l (##hole##))) (S (add lf9 lf8))
Sketch conj1001_sketch5 : @eq nat (len (app l (app (rev l0) lf6))) (S (##hole##))
Sketch conj1001_term_sketch0 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1001_term_sketch1 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj1001_term_sketch2 : @eq lst (app l (app (rev l0) lf6)) (##hole##)
Sketch conj1001_term_sketch3 : @eq lst (rev l0) (##hole##)
Sketch conj1001_term_sketch4 : @eq lst (app (rev l0) lf6) (##hole##)
Sketch conj1001_term_sketch5 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj1002_sketch0 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj1002_sketch1 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add lf9 lf8))
Sketch conj1002_sketch2 : @eq nat (len (app l (##hole##))) (S (add lf9 lf8))
Sketch conj1002_sketch3 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj1002_sketch4 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1002_sketch5 : @eq nat (len (app l (app (##hole##) (Cons n lf10)))) (S (add lf9 lf8))
Sketch conj1002_sketch6 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (##hole##))
Sketch conj1002_term_sketch0 : @eq lst (app l (app (rev l0) (Cons n lf10))) (##hole##)
Sketch conj1002_term_sketch1 : @eq lst (Cons n lf10) (##hole##)
Sketch conj1002_term_sketch2 : @eq lst (app (rev l0) (Cons n lf10)) (##hole##)
Sketch conj1002_term_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1002_term_sketch4 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj1002_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj1002_term_sketch6 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj1003_sketch0 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1003_sketch1 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj1003_sketch2 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj1003_sketch3 : @eq nat (len (app l (app (##hole##) lf6))) (S (add lf9 (len l0)))
Sketch conj1003_sketch4 : @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (##hole##)))
Sketch conj1003_sketch5 : @eq nat (len (app l (##hole##))) (S (add lf9 (len l0)))
Sketch conj1003_sketch6 : @eq nat (len (app l (app (rev l0) lf6))) (S (##hole##))
Sketch conj1003_term_sketch0 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj1003_term_sketch1 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1003_term_sketch2 : @eq lst (app l (app (rev l0) lf6)) (##hole##)
Sketch conj1003_term_sketch3 : @eq lst (rev l0) (##hole##)
Sketch conj1003_term_sketch4 : @eq nat (len l0) (##hole##)
Sketch conj1003_term_sketch5 : @eq lst (app (rev l0) lf6) (##hole##)
Sketch conj1003_term_sketch6 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj1004_sketch0 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj1004_sketch1 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1004_sketch2 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add lf9 (len l0)))
Sketch conj1004_sketch3 : @eq nat (len (app l (##hole##))) (S (add lf9 (len l0)))
Sketch conj1004_sketch4 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj1004_sketch5 : @eq nat (len (app l (app (##hole##) (Cons n lf10)))) (S (add lf9 (len l0)))
Sketch conj1004_sketch6 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (##hole##)))
Sketch conj1004_sketch7 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (##hole##))
Sketch conj1004_term_sketch0 : @eq lst (app l (app (rev l0) (Cons n lf10))) (##hole##)
Sketch conj1004_term_sketch1 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj1004_term_sketch2 : @eq lst (Cons n lf10) (##hole##)
Sketch conj1004_term_sketch3 : @eq lst (app (rev l0) (Cons n lf10)) (##hole##)
Sketch conj1004_term_sketch4 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1004_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj1004_term_sketch6 : @eq nat (len l0) (##hole##)
Sketch conj1004_term_sketch7 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj1006_sketch0 : @eq nat (len (app l (##hole##))) (S (add lf9 lf8))
Sketch conj1006_sketch1 : @eq nat (##hole##) (S (add lf9 lf8))
Sketch conj1006_sketch2 : @eq nat (len (##hole##)) (S (add lf9 lf8))
Sketch conj1006_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj1006_sketch4 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add lf9 lf8))
Sketch conj1006_sketch5 : @eq nat (len (app l (app (##hole##) (Cons n Nil)))) (S (add lf9 lf8))
Sketch conj1006_sketch6 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (##hole##))
Sketch conj1006_sketch7 : @eq nat (len (app l (app (rev l0) (Cons n (##hole##))))) (S (add lf9 lf8))
Sketch conj1006_term_sketch0 : @eq lst (app (rev l0) (Cons n Nil)) (##hole##)
Sketch conj1006_term_sketch1 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj1006_term_sketch2 : @eq lst (app l (app (rev l0) (Cons n Nil))) (##hole##)
Sketch conj1006_term_sketch3 : @eq nat (S (add lf9 lf8)) (##hole##)
Sketch conj1006_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj1006_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj1006_term_sketch6 : @eq nat (add lf9 lf8) (##hole##)
Sketch conj1006_term_sketch7 : @eq lst Nil (##hole##)
Sketch conj1008_sketch0 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj1008_sketch1 : @eq nat (len (app l (##hole##))) (S (add lf9 (len l0)))
Sketch conj1008_sketch2 : @eq nat (##hole##) (S (add lf9 (len l0)))
Sketch conj1008_sketch3 : @eq nat (len (##hole##)) (S (add lf9 (len l0)))
Sketch conj1008_sketch4 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add lf9 (len l0)))
Sketch conj1008_sketch5 : @eq nat (len (app l (app (##hole##) (Cons n Nil)))) (S (add lf9 (len l0)))
Sketch conj1008_sketch6 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (##hole##)))
Sketch conj1008_sketch7 : @eq nat (len (app l (app (rev l0) (Cons n (##hole##)))))
  (S (add lf9 (len l0)))
Sketch conj1008_sketch8 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (##hole##))
Sketch conj1008_term_sketch0 : @eq nat (S (add lf9 (len l0))) (##hole##)
Sketch conj1008_term_sketch1 : @eq lst (app (rev l0) (Cons n Nil)) (##hole##)
Sketch conj1008_term_sketch2 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj1008_term_sketch3 : @eq lst (app l (app (rev l0) (Cons n Nil))) (##hole##)
Sketch conj1008_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj1008_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj1008_term_sketch6 : @eq nat (len l0) (##hole##)
Sketch conj1008_term_sketch7 : @eq lst Nil (##hole##)
Sketch conj1008_term_sketch8 : @eq nat (add lf9 (len l0)) (##hole##)
Sketch conj1017_sketch0 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj1017_sketch1 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1017_sketch2 : @eq nat (len (app l (app (rev l0) lf6))) (S (add (##hole##) lf8))
Sketch conj1017_sketch3 : @eq nat (len (app l (app (rev l0) lf6))) (S (##hole##))
Sketch conj1017_sketch4 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj1017_sketch5 : @eq nat (len (app l (app (##hole##) lf6))) (S (add (len l) lf8))
Sketch conj1017_sketch6 : @eq nat (len (app l (##hole##))) (S (add (len l) lf8))
Sketch conj1017_term_sketch0 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1017_term_sketch1 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj1017_term_sketch2 : @eq nat (len l) (##hole##)
Sketch conj1017_term_sketch3 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj1017_term_sketch4 : @eq lst (app l (app (rev l0) lf6)) (##hole##)
Sketch conj1017_term_sketch5 : @eq lst (rev l0) (##hole##)
Sketch conj1017_term_sketch6 : @eq lst (app (rev l0) lf6) (##hole##)
Sketch conj1018_sketch0 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj1018_sketch1 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add (len l) lf8))
Sketch conj1018_sketch2 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1018_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (##hole##) lf8))
Sketch conj1018_sketch4 : @eq nat (len (app l (##hole##))) (S (add (len l) lf8))
Sketch conj1018_sketch5 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (##hole##))
Sketch conj1018_sketch6 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj1018_sketch7 : @eq nat (len (app l (app (##hole##) (Cons n lf10)))) (S (add (len l) lf8))
Sketch conj1018_term_sketch0 : @eq lst (app l (app (rev l0) (Cons n lf10))) (##hole##)
Sketch conj1018_term_sketch1 : @eq lst (Cons n lf10) (##hole##)
Sketch conj1018_term_sketch2 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj1018_term_sketch3 : @eq nat (len l) (##hole##)
Sketch conj1018_term_sketch4 : @eq lst (app (rev l0) (Cons n lf10)) (##hole##)
Sketch conj1018_term_sketch5 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj1018_term_sketch6 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1018_term_sketch7 : @eq lst (rev l0) (##hole##)
Sketch conj1019_sketch0 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1019_sketch1 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj1019_sketch2 : @eq nat (len (app l (app (rev l0) lf6))) (S (add (##hole##) (len l0)))
Sketch conj1019_sketch3 : @eq nat (len (##hole##)) (S (add (len l) (len l0)))
Sketch conj1019_sketch4 : @eq nat (len (app l (app (##hole##) lf6))) (S (add (len l) (len l0)))
Sketch conj1019_sketch5 : @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (##hole##)))
Sketch conj1019_sketch6 : @eq nat (len (app l (##hole##))) (S (add (len l) (len l0)))
Sketch conj1019_sketch7 : @eq nat (len (app l (app (rev l0) lf6))) (S (##hole##))
Sketch conj1019_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj1019_term_sketch1 : @eq nat (len (app l (app (rev l0) lf6))) (##hole##)
Sketch conj1019_term_sketch2 : @eq nat (len l) (##hole##)
Sketch conj1019_term_sketch3 : @eq lst (app l (app (rev l0) lf6)) (##hole##)
Sketch conj1019_term_sketch4 : @eq lst (rev l0) (##hole##)
Sketch conj1019_term_sketch5 : @eq nat (len l0) (##hole##)
Sketch conj1019_term_sketch6 : @eq lst (app (rev l0) lf6) (##hole##)
Sketch conj1019_term_sketch7 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj1020_sketch0 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1020_sketch1 : @eq nat (len (##hole##)) (S (add (len l) (len l0)))
Sketch conj1020_sketch2 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add (len l) (len l0)))
Sketch conj1020_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n lf10))))
  (S (add (##hole##) (len l0)))
Sketch conj1020_sketch4 : @eq nat (len (app l (##hole##))) (S (add (len l) (len l0)))
Sketch conj1020_sketch5 : @eq nat (##hole##) (S (add (len l) (len l0)))
Sketch conj1020_sketch6 : @eq nat (len (app l (app (##hole##) (Cons n lf10))))
  (S (add (len l) (len l0)))
Sketch conj1020_sketch7 : @eq nat (len (app l (app (rev l0) (Cons n lf10))))
  (S (add (len l) (##hole##)))
Sketch conj1020_sketch8 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (##hole##))
Sketch conj1020_term_sketch0 : @eq nat (S (add (len l) (len l0))) (##hole##)
Sketch conj1020_term_sketch1 : @eq lst (app l (app (rev l0) (Cons n lf10))) (##hole##)
Sketch conj1020_term_sketch2 : @eq lst (Cons n lf10) (##hole##)
Sketch conj1020_term_sketch3 : @eq nat (len l) (##hole##)
Sketch conj1020_term_sketch4 : @eq lst (app (rev l0) (Cons n lf10)) (##hole##)
Sketch conj1020_term_sketch5 : @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (##hole##)
Sketch conj1020_term_sketch6 : @eq lst (rev l0) (##hole##)
Sketch conj1020_term_sketch7 : @eq nat (len l0) (##hole##)
Sketch conj1020_term_sketch8 : @eq nat (add (len l) (len l0)) (##hole##)
Sketch conj1022_sketch0 : @eq nat (len (app l (##hole##))) (S (add (len l) lf8))
Sketch conj1022_sketch1 : @eq nat (##hole##) (S (add (len l) lf8))
Sketch conj1022_sketch2 : @eq nat (len (##hole##)) (S (add (len l) lf8))
Sketch conj1022_sketch3 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj1022_sketch4 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (##hole##) lf8))
Sketch conj1022_sketch5 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (##hole##))
Sketch conj1022_sketch6 : @eq nat (len (app l (app (rev l0) (##hole##)))) (S (add (len l) lf8))
Sketch conj1022_sketch7 : @eq nat (len (app l (app (##hole##) (Cons n Nil)))) (S (add (len l) lf8))
Sketch conj1022_sketch8 : @eq nat (len (app l (app (rev l0) (Cons n (##hole##)))))
  (S (add (len l) lf8))
Sketch conj1022_term_sketch0 : @eq lst (app (rev l0) (Cons n Nil)) (##hole##)
Sketch conj1022_term_sketch1 : @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (##hole##)
Sketch conj1022_term_sketch2 : @eq lst (app l (app (rev l0) (Cons n Nil))) (##hole##)
Sketch conj1022_term_sketch3 : @eq nat (S (add (len l) lf8)) (##hole##)
Sketch conj1022_term_sketch4 : @eq nat (len l) (##hole##)
Sketch conj1022_term_sketch5 : @eq nat (add (len l) lf8) (##hole##)
Sketch conj1022_term_sketch6 : @eq lst (Cons n Nil) (##hole##)
Sketch conj1022_term_sketch7 : @eq lst (rev l0) (##hole##)
Sketch conj1022_term_sketch8 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 2829 seconds
Problems per Sketch:
Sketch conj1018_term_sketch6 --> Problem  synth_92
Sketch conj763_sketch0 --> Problem  synth_41
Sketch conj1017_sketch1 --> Problem  synth_84
Sketch conj768_sketch8 --> Problem  synth_64
Sketch conj1001_term_sketch5 --> Problem  synth_5
Sketch conj649_term_sketch0 --> Problem  synth_39
Sketch conj969_sketch3 --> Problem  synth_98
Sketch conj750_term_sketch1 --> Problem  synth_49
Sketch conj969_term_sketch3 --> Problem  synth_86
Sketch conj1022_term_sketch2 --> Problem  synth_97
Sketch conj65_term_sketch0 --> Problem  synth_2
Sketch conj1002_sketch2 --> Problem  synth_56
Sketch conj243_term_sketch3 --> Problem  synth_8
Sketch conj1020_sketch2 --> Problem  synth_127
Sketch conj115_sketch2 --> Problem  synth_15
Sketch conj1018_term_sketch2 --> Problem  synth_11
Sketch conj718_sketch5 --> Problem  synth_55
Sketch conj650_term_sketch2 --> Problem  synth_45
Sketch conj235_term_sketch3 --> Problem  synth_8
Sketch conj748_term_sketch1 --> Problem  synth_43
Sketch conj1019_term_sketch2 --> Problem  synth_12
Sketch conj747_term_sketch5 --> Problem  synth_41
Sketch conj745_term_sketch4 --> Problem  synth_41
Sketch conj969_sketch0 --> Problem  synth_2
Sketch conj764_sketch1 --> Problem  synth_75
Sketch conj1002_term_sketch0 --> Problem  synth_90
Sketch conj746_sketch2 --> Problem  synth_56
Sketch conj1008_sketch7 --> Problem  synth_118
Sketch conj763_term_sketch1 --> Problem  synth_39
Sketch conj750_sketch5 --> Problem  synth_26
Sketch conj650_sketch0 --> Problem  synth_42
Sketch conj762_sketch6 --> Problem  synth_11
Sketch conj906_sketch3 --> Problem  synth_18
Sketch conj750_sketch1 --> Problem  synth_4
Sketch conj718_term_sketch3 --> Problem  synth_50
Sketch conj251_term_sketch2 --> Problem  synth_12
Sketch conj748_sketch4 --> Problem  synth_7
Sketch conj910_term_sketch2 --> Problem  synth_97
Sketch conj227_sketch2 --> Problem  synth_25
Sketch conj235_term_sketch4 --> Problem  synth_9
Sketch conj1019_sketch6 --> Problem  synth_72
Sketch conj970_term_sketch4 --> Problem  synth_2
Sketch conj649_sketch1 --> Problem  synth_38
Sketch conj243_term_sketch0 --> Problem  synth_16
Sketch conj225_term_sketch2 --> Problem  synth_5
Sketch conj752_term_sketch0 --> Problem  synth_48
Sketch conj718_term_sketch5 --> Problem  synth_52
Sketch conj1004_sketch3 --> Problem  synth_60
Sketch conj1003_sketch6 --> Problem  synth_104
Sketch conj1006_term_sketch1 --> Problem  synth_96
Sketch conj763_sketch4 --> Problem  synth_74
Sketch conj137_sketch0 --> Problem  synth_20
Sketch conj748_term_sketch4 --> Problem  synth_46
Sketch conj241_term_sketch0 --> Problem  synth_11
Sketch conj97_term_sketch0 --> Problem  synth_4
Sketch conj193_sketch1 --> Problem  synth_19
Sketch conj243_sketch3 --> Problem  synth_32
Sketch conj969_sketch1 --> Problem  synth_84
Sketch conj766_term_sketch0 --> Problem  synth_48
Sketch conj906_term_sketch1 --> Problem  synth_43
Sketch conj251_sketch5 --> Problem  synth_27
Sketch conj768_sketch0 --> Problem  synth_49
Sketch conj718_sketch4 --> Problem  synth_23
Sketch conj969_sketch4 --> Problem  synth_53
Sketch conj718_term_sketch4 --> Problem  synth_51
Sketch conj750_term_sketch2 --> Problem  synth_4
Sketch conj714_term_sketch3 --> Problem  synth_2
Sketch conj970_term_sketch5 --> Problem  synth_86
Sketch conj1004_sketch0 --> Problem  synth_28
Sketch conj129_sketch0 --> Problem  synth_18
Sketch conj233_sketch3 --> Problem  synth_27
Sketch conj714_sketch1 --> Problem  synth_23
Sketch conj241_sketch1 --> Problem  synth_30
Sketch conj1017_term_sketch2 --> Problem  synth_12
Sketch conj1019_term_sketch3 --> Problem  synth_85
Sketch conj746_term_sketch4 --> Problem  synth_46
Sketch conj1006_term_sketch5 --> Problem  synth_86
Sketch conj233_term_sketch0 --> Problem  synth_21
Sketch conj766_term_sketch6 --> Problem  synth_51
Sketch conj763_term_sketch3 --> Problem  synth_12
Sketch conj766_term_sketch4 --> Problem  synth_13
Sketch conj1020_sketch4 --> Problem  synth_72
Sketch conj750_term_sketch0 --> Problem  synth_48
Sketch conj1020_term_sketch8 --> Problem  synth_17
Sketch conj1017_term_sketch6 --> Problem  synth_87
Sketch conj762_term_sketch0 --> Problem  synth_43
Sketch conj65_sketch0 --> Problem  synth_1
Sketch conj1001_term_sketch0 --> Problem  synth_84
Sketch conj969_sketch2 --> Problem  synth_23
Sketch conj745_sketch1 --> Problem  synth_56
Sketch conj748_sketch2 --> Problem  synth_28
Sketch conj761_sketch1 --> Problem  synth_68
Sketch conj764_sketch2 --> Problem  synth_35
Sketch conj1002_sketch0 --> Problem  synth_26
Sketch conj750_sketch4 --> Problem  synth_64
Sketch conj910_term_sketch3 --> Problem  synth_50
Sketch conj764_term_sketch3 --> Problem  synth_45
Sketch conj225_sketch1 --> Problem  synth_19
Sketch conj766_sketch1 --> Problem  synth_49
Sketch conj714_sketch4 --> Problem  synth_2
Sketch conj227_term_sketch2 --> Problem  synth_8
Sketch conj1008_term_sketch7 --> Problem  synth_52
Sketch conj1002_sketch6 --> Problem  synth_107
Sketch conj761_term_sketch4 --> Problem  synth_13
Sketch conj227_sketch0 --> Problem  synth_19
Sketch conj1020_term_sketch7 --> Problem  synth_8
Sketch conj650_sketch3 --> Problem  synth_18
Sketch conj97_sketch0 --> Problem  synth_1
Sketch conj974_sketch3 --> Problem  synth_96
Sketch conj113_sketch0 --> Problem  synth_1
Sketch conj225_term_sketch1 --> Problem  synth_4
Sketch conj1017_term_sketch1 --> Problem  synth_11
Sketch conj906_term_sketch3 --> Problem  synth_92
Sketch conj1001_term_sketch2 --> Problem  synth_85
Sketch conj1020_sketch5 --> Problem  synth_16
Sketch conj115_term_sketch1 --> Problem  synth_12
Sketch conj766_sketch4 --> Problem  synth_64
Sketch conj1004_sketch7 --> Problem  synth_107
Sketch conj1006_sketch2 --> Problem  synth_26
Sketch conj763_sketch3 --> Problem  synth_73
Sketch conj99_sketch2 --> Problem  synth_3
Sketch conj752_term_sketch3 --> Problem  synth_50
Sketch conj1008_sketch0 --> Problem  synth_96
Sketch conj970_sketch1 --> Problem  synth_99
Sketch conj115_sketch1 --> Problem  synth_14
Sketch conj713_term_sketch0 --> Problem  synth_39
Sketch conj1008_term_sketch5 --> Problem  synth_86
Sketch conj1017_sketch2 --> Problem  synth_119
Sketch conj905_term_sketch0 --> Problem  synth_84
Sketch conj768_sketch4 --> Problem  synth_75
Sketch conj714_sketch0 --> Problem  synth_54
Sketch conj1008_sketch3 --> Problem  synth_28
Sketch conj241_sketch2 --> Problem  synth_11
Sketch conj1008_sketch8 --> Problem  synth_114
Sketch conj905_term_sketch1 --> Problem  synth_85
Sketch conj249_sketch1 --> Problem  synth_22
Sketch conj761_term_sketch5 --> Problem  synth_41
Sketch conj649_term_sketch2 --> Problem  synth_41
Sketch conj649_term_sketch1 --> Problem  synth_40
Sketch conj762_sketch5 --> Problem  synth_59
Sketch conj974_term_sketch0 --> Problem  synth_95
Sketch conj115_sketch0 --> Problem  synth_1
Sketch conj113_sketch2 --> Problem  synth_3
Sketch conj763_sketch2 --> Problem  synth_72
Sketch conj752_term_sketch7 --> Problem  synth_9
Sketch conj974_sketch6 --> Problem  synth_102
Sketch conj201_sketch1 --> Problem  synth_22
Sketch conj1022_term_sketch3 --> Problem  synth_11
Sketch conj654_term_sketch0 --> Problem  synth_48
Sketch conj1003_sketch5 --> Problem  synth_60
Sketch conj1022_term_sketch7 --> Problem  synth_86
Sketch conj1004_term_sketch6 --> Problem  synth_8
Sketch conj1022_sketch7 --> Problem  synth_132
Sketch conj764_term_sketch7 --> Problem  synth_17
Sketch conj746_term_sketch5 --> Problem  synth_5
Sketch conj750_sketch0 --> Problem  synth_56
Sketch conj1004_term_sketch2 --> Problem  synth_43
Sketch conj974_term_sketch4 --> Problem  synth_50
Sketch conj1019_sketch7 --> Problem  synth_104
Sketch conj113_term_sketch0 --> Problem  synth_11
Sketch conj906_sketch1 --> Problem  synth_88
Sketch conj650_sketch1 --> Problem  synth_20
Sketch conj251_term_sketch3 --> Problem  synth_22
Sketch conj1006_term_sketch4 --> Problem  synth_50
Sketch conj1002_term_sketch4 --> Problem  synth_4
Sketch conj762_sketch0 --> Problem  synth_70
Sketch conj201_term_sketch1 --> Problem  synth_2
Sketch conj1003_term_sketch4 --> Problem  synth_8
Sketch conj910_sketch5 --> Problem  synth_94
Sketch conj748_term_sketch6 --> Problem  synth_9
Sketch conj1018_term_sketch4 --> Problem  synth_91
Sketch conj1019_term_sketch0 --> Problem  synth_16
Sketch conj766_sketch6 --> Problem  synth_33
Sketch conj1020_sketch8 --> Problem  synth_107
Sketch conj746_term_sketch2 --> Problem  synth_45
Sketch conj1020_sketch3 --> Problem  synth_128
Sketch conj235_term_sketch1 --> Problem  synth_21
Sketch conj225_sketch0 --> Problem  synth_4
Sketch conj746_sketch5 --> Problem  synth_59
Sketch conj752_sketch0 --> Problem  synth_60
Sketch conj750_term_sketch4 --> Problem  synth_5
Sketch conj1017_sketch3 --> Problem  synth_104
Sketch conj1002_sketch5 --> Problem  synth_106
Sketch conj768_sketch5 --> Problem  synth_81
Sketch conj748_sketch3 --> Problem  synth_60
Sketch conj910_sketch4 --> Problem  synth_93
Sketch conj1020_term_sketch2 --> Problem  synth_43
Sketch conj1003_sketch0 --> Problem  synth_84
Sketch conj1019_sketch5 --> Problem  synth_126
Sketch conj747_sketch3 --> Problem  synth_61
Sketch conj243_sketch4 --> Problem  synth_24
Sketch conj762_term_sketch1 --> Problem  synth_44
Sketch conj249_term_sketch0 --> Problem  synth_21
Sketch conj249_term_sketch3 --> Problem  synth_13
Sketch conj766_term_sketch1 --> Problem  synth_11
Sketch conj763_term_sketch4 --> Problem  synth_8
Sketch conj1008_sketch6 --> Problem  synth_117
Sketch conj1018_term_sketch3 --> Problem  synth_12
Sketch conj745_sketch3 --> Problem  synth_57
Sketch conj241_term_sketch1 --> Problem  synth_12
Sketch conj193_sketch0 --> Problem  synth_2
Sketch conj1003_term_sketch6 --> Problem  synth_9
Sketch conj1008_sketch4 --> Problem  synth_110
Sketch conj137_term_sketch0 --> Problem  synth_21
Sketch conj1022_sketch0 --> Problem  synth_68
Sketch conj1017_sketch5 --> Problem  synth_120
Sketch conj762_term_sketch5 --> Problem  synth_13
Sketch conj970_term_sketch0 --> Problem  synth_90
Sketch conj752_term_sketch2 --> Problem  synth_49
Sketch conj974_term_sketch2 --> Problem  synth_97
Sketch conj1017_sketch0 --> Problem  synth_11
Sketch conj233_sketch2 --> Problem  synth_4
Sketch conj251_term_sketch0 --> Problem  synth_16
Sketch conj1008_term_sketch8 --> Problem  synth_9
Sketch conj1020_sketch7 --> Problem  synth_130
Sketch conj1002_term_sketch3 --> Problem  synth_92
Sketch conj235_sketch0 --> Problem  synth_22
Sketch conj752_sketch3 --> Problem  synth_62
Sketch conj764_term_sketch2 --> Problem  synth_44
Sketch conj764_term_sketch6 --> Problem  synth_8
Sketch conj201_term_sketch2 --> Problem  synth_22
Sketch conj761_sketch3 --> Problem  synth_69
Sketch conj718_term_sketch0 --> Problem  synth_48
Sketch conj970_sketch4 --> Problem  synth_92
Sketch conj969_term_sketch0 --> Problem  synth_84
Sketch conj1001_term_sketch3 --> Problem  synth_86
Sketch conj1019_term_sketch5 --> Problem  synth_8
Sketch conj1022_sketch3 --> Problem  synth_96
Sketch conj1006_term_sketch2 --> Problem  synth_97
Sketch conj1006_sketch4 --> Problem  synth_105
Sketch conj714_term_sketch1 --> Problem  synth_44
Sketch conj752_sketch6 --> Problem  synth_67
Sketch conj243_sketch2 --> Problem  synth_16
Sketch conj1019_sketch3 --> Problem  synth_35
Sketch conj974_sketch2 --> Problem  synth_23
Sketch conj233_term_sketch2 --> Problem  synth_22
Sketch conj654_sketch2 --> Problem  synth_42
Sketch conj761_sketch2 --> Problem  synth_41
Sketch conj1008_term_sketch3 --> Problem  synth_97
Sketch conj906_sketch4 --> Problem  synth_89
Sketch conj768_term_sketch8 --> Problem  synth_17
Sketch conj251_sketch0 --> Problem  synth_22
Sketch conj249_sketch0 --> Problem  synth_33
Sketch conj969_term_sketch4 --> Problem  synth_87
Sketch conj974_term_sketch5 --> Problem  synth_86
Sketch conj763_sketch6 --> Problem  synth_16
Sketch conj750_sketch2 --> Problem  synth_49
Sketch conj1022_term_sketch5 --> Problem  synth_13
Sketch conj762_sketch3 --> Problem  synth_46
Sketch conj115_term_sketch0 --> Problem  synth_16
Sketch conj746_term_sketch0 --> Problem  synth_43
Sketch conj745_sketch0 --> Problem  synth_26
Sketch conj1006_term_sketch7 --> Problem  synth_52
Sketch conj762_term_sketch4 --> Problem  synth_12
Sketch conj1020_term_sketch1 --> Problem  synth_90
Sketch conj1017_sketch6 --> Problem  synth_68
Sketch conj1001_sketch4 --> Problem  synth_56
Sketch conj714_term_sketch0 --> Problem  synth_43
Sketch conj766_sketch2 --> Problem  synth_11
Sketch conj241_sketch3 --> Problem  synth_24
Sketch conj1004_sketch1 --> Problem  synth_92
Sketch conj718_sketch0 --> Problem  synth_53
Sketch conj748_sketch5 --> Problem  synth_63
Sketch conj1004_sketch5 --> Problem  synth_111
Sketch conj1006_sketch3 --> Problem  synth_96
Sketch conj764_term_sketch1 --> Problem  synth_43
Sketch conj113_term_sketch1 --> Problem  synth_12
Sketch conj225_term_sketch0 --> Problem  synth_19
Sketch conj747_term_sketch2 --> Problem  synth_40
Sketch conj713_term_sketch1 --> Problem  synth_40
Sketch conj747_sketch4 --> Problem  synth_57
Sketch conj1022_sketch8 --> Problem  synth_133
Sketch conj1020_sketch1 --> Problem  synth_35
Sketch conj906_sketch2 --> Problem  synth_38
Sketch conj763_term_sketch0 --> Problem  synth_16
Sketch conj970_sketch5 --> Problem  synth_100
Sketch conj137_sketch1 --> Problem  synth_18
Sketch conj910_term_sketch0 --> Problem  synth_95
Sketch conj970_term_sketch3 --> Problem  synth_92
Sketch conj748_term_sketch3 --> Problem  synth_45
Sketch conj714_sketch3 --> Problem  synth_46
Sketch conj243_sketch1 --> Problem  synth_31
Sketch conj1006_sketch0 --> Problem  synth_56
Sketch conj768_term_sketch0 --> Problem  synth_16
Sketch conj233_sketch0 --> Problem  synth_26
Sketch conj1018_sketch2 --> Problem  synth_92
Sketch conj1004_term_sketch5 --> Problem  synth_86
Sketch conj746_sketch1 --> Problem  synth_26
Sketch conj750_term_sketch6 --> Problem  synth_52
Sketch conj910_term_sketch4 --> Problem  synth_86
Sketch conj766_sketch7 --> Problem  synth_79
Sketch conj766_sketch0 --> Problem  synth_68
Sketch conj768_sketch2 --> Problem  synth_16
Sketch conj1003_sketch4 --> Problem  synth_109
Sketch conj752_term_sketch5 --> Problem  synth_51
Sketch conj251_sketch2 --> Problem  synth_36
Sketch conj970_sketch3 --> Problem  synth_2
Sketch conj761_term_sketch0 --> Problem  synth_39
Sketch conj1002_term_sketch2 --> Problem  synth_91
Sketch conj910_sketch3 --> Problem  synth_88
Sketch conj243_term_sketch1 --> Problem  synth_12
Sketch conj251_term_sketch1 --> Problem  synth_21
Sketch conj746_sketch4 --> Problem  synth_4
Sketch conj1008_sketch5 --> Problem  synth_116
Sketch conj761_term_sketch2 --> Problem  synth_11
Sketch conj748_term_sketch0 --> Problem  synth_7
Sketch conj713_sketch3 --> Problem  synth_2
Sketch conj650_term_sketch0 --> Problem  synth_43
Sketch conj763_term_sketch5 --> Problem  synth_17
Sketch conj746_sketch3 --> Problem  synth_46
Sketch conj766_term_sketch2 --> Problem  synth_49
Sketch conj1018_term_sketch7 --> Problem  synth_86
Sketch conj1017_term_sketch5 --> Problem  synth_86
Sketch conj761_sketch4 --> Problem  synth_57
Sketch conj974_sketch0 --> Problem  synth_53
Sketch conj1018_term_sketch0 --> Problem  synth_90
Sketch conj1018_sketch6 --> Problem  synth_11
Sketch conj974_sketch4 --> Problem  synth_99
Sketch conj1006_sketch1 --> Problem  synth_4
Sketch conj768_term_sketch3 --> Problem  synth_12
Sketch conj241_term_sketch3 --> Problem  synth_13
Sketch conj249_term_sketch1 --> Problem  synth_11
Sketch conj906_sketch0 --> Problem  synth_20
Sketch conj1006_sketch6 --> Problem  synth_114
Sketch conj1022_sketch5 --> Problem  synth_114
Sketch conj1002_term_sketch5 --> Problem  synth_86
Sketch conj761_sketch5 --> Problem  synth_11
Sketch conj970_sketch0 --> Problem  synth_23
Sketch conj97_term_sketch1 --> Problem  synth_5
Sketch conj235_term_sketch2 --> Problem  synth_22
Sketch conj1008_sketch1 --> Problem  synth_60
Sketch conj764_sketch5 --> Problem  synth_16
Sketch conj1022_term_sketch6 --> Problem  synth_50
Sketch conj745_term_sketch1 --> Problem  synth_40
Sketch conj99_sketch0 --> Problem  synth_1
Sketch conj768_sketch7 --> Problem  synth_82
Sketch conj249_sketch2 --> Problem  synth_34
Sketch conj1004_sketch4 --> Problem  synth_7
Sketch conj905_sketch2 --> Problem  synth_83
Sketch conj1003_sketch3 --> Problem  synth_108
Sketch conj766_sketch3 --> Problem  synth_78
Sketch conj974_sketch5 --> Problem  synth_101
Sketch conj768_sketch1 --> Problem  synth_72
Sketch conj1001_term_sketch4 --> Problem  synth_87
Sketch conj1001_sketch1 --> Problem  synth_84
Sketch conj249_term_sketch2 --> Problem  synth_12
Sketch conj1019_term_sketch7 --> Problem  synth_17
Sketch conj227_term_sketch0 --> Problem  synth_7
Sketch conj1003_term_sketch0 --> Problem  synth_7
Sketch conj768_term_sketch2 --> Problem  synth_49
Sketch conj1018_term_sketch5 --> Problem  synth_13
Sketch conj115_term_sketch3 --> Problem  synth_17
Sketch conj768_term_sketch7 --> Problem  synth_52
Sketch conj1006_sketch7 --> Problem  synth_115
Sketch conj113_sketch1 --> Problem  synth_10
Sketch conj1020_term_sketch4 --> Problem  synth_91
Sketch conj905_sketch0 --> Problem  synth_18
Sketch conj763_sketch1 --> Problem  synth_35
Sketch conj1018_sketch1 --> Problem  synth_121
Sketch conj201_sketch2 --> Problem  synth_2
Sketch conj235_term_sketch0 --> Problem  synth_7
Sketch conj201_term_sketch0 --> Problem  synth_21
Sketch conj1017_term_sketch0 --> Problem  synth_84
Sketch conj1022_sketch4 --> Problem  synth_131
Sketch conj1006_term_sketch6 --> Problem  synth_5
Sketch conj745_sketch2 --> Problem  synth_41
Sketch conj764_term_sketch0 --> Problem  synth_16
Sketch conj910_term_sketch1 --> Problem  synth_96
Sketch conj1001_sketch2 --> Problem  synth_26
Sketch conj910_term_sketch5 --> Problem  synth_52
Sketch conj752_term_sketch6 --> Problem  synth_52
Sketch conj764_sketch7 --> Problem  synth_59
Sketch conj768_term_sketch1 --> Problem  synth_48
Sketch conj1018_sketch7 --> Problem  synth_123
Sketch conj745_term_sketch3 --> Problem  synth_5
Sketch conj905_sketch3 --> Problem  synth_38
Sketch conj1020_term_sketch0 --> Problem  synth_16
Sketch conj750_term_sketch3 --> Problem  synth_50
Sketch conj1002_sketch1 --> Problem  synth_105
Sketch conj1018_term_sketch1 --> Problem  synth_43
Sketch conj747_term_sketch4 --> Problem  synth_9
Sketch conj1019_sketch4 --> Problem  synth_125
Sketch conj714_term_sketch4 --> Problem  synth_46
Sketch conj1017_term_sketch4 --> Problem  synth_85
Sketch conj714_sketch2 --> Problem  synth_53
Sketch conj910_sketch2 --> Problem  synth_20
Sketch conj1022_term_sketch4 --> Problem  synth_12
Sketch conj763_term_sketch6 --> Problem  synth_41
Sketch conj1019_sketch0 --> Problem  synth_84
Sketch conj1002_term_sketch6 --> Problem  synth_5
Sketch conj974_term_sketch1 --> Problem  synth_96
Sketch conj654_term_sketch2 --> Problem  synth_50
Sketch conj251_sketch4 --> Problem  synth_37
Sketch conj748_sketch1 --> Problem  synth_62
Sketch conj654_sketch1 --> Problem  synth_18
Sketch conj713_sketch0 --> Problem  synth_23
Sketch conj233_sketch1 --> Problem  synth_22
Sketch conj1001_sketch0 --> Problem  synth_4
Sketch conj654_term_sketch3 --> Problem  synth_51
Sketch conj974_sketch1 --> Problem  synth_2
Sketch conj235_sketch3 --> Problem  synth_29
Sketch conj970_term_sketch2 --> Problem  synth_91
Sketch conj750_term_sketch5 --> Problem  synth_51
Sketch conj970_sketch2 --> Problem  synth_53
Sketch conj654_sketch3 --> Problem  synth_20
Sketch conj747_term_sketch3 --> Problem  synth_8
Sketch conj649_sketch2 --> Problem  synth_18
Sketch conj1022_sketch2 --> Problem  synth_33
Sketch conj1020_term_sketch3 --> Problem  synth_12
Sketch conj654_sketch0 --> Problem  synth_38
Sketch conj718_sketch1 --> Problem  synth_2
Sketch conj745_sketch4 --> Problem  synth_4
Sketch conj718_sketch3 --> Problem  synth_54
Sketch conj1020_sketch6 --> Problem  synth_129
Sketch conj969_term_sketch1 --> Problem  synth_2
Sketch conj235_sketch2 --> Problem  synth_7
Sketch conj251_term_sketch5 --> Problem  synth_17
Sketch conj99_term_sketch2 --> Problem  synth_9
Sketch conj1003_sketch1 --> Problem  synth_7
Sketch conj650_sketch2 --> Problem  synth_38
Sketch conj99_term_sketch0 --> Problem  synth_7
Sketch conj1019_term_sketch4 --> Problem  synth_86
Sketch conj1001_sketch3 --> Problem  synth_103
Sketch conj251_sketch3 --> Problem  synth_16
Sketch conj714_term_sketch2 --> Problem  synth_45
Sketch conj97_sketch1 --> Problem  synth_3
Sketch conj763_sketch5 --> Problem  synth_57
Sketch conj752_term_sketch4 --> Problem  synth_8
Sketch conj752_sketch2 --> Problem  synth_7
Sketch conj225_sketch2 --> Problem  synth_24
Sketch conj115_term_sketch2 --> Problem  synth_8
Sketch conj748_term_sketch2 --> Problem  synth_44
Sketch conj748_term_sketch5 --> Problem  synth_8
Sketch conj761_term_sketch3 --> Problem  synth_12
Sketch conj1019_term_sketch6 --> Problem  synth_87
Sketch conj974_term_sketch3 --> Problem  synth_2
Sketch conj762_sketch2 --> Problem  synth_68
Sketch conj1002_sketch3 --> Problem  synth_4
Sketch conj1006_sketch5 --> Problem  synth_113
Sketch conj1022_sketch1 --> Problem  synth_11
Sketch conj1003_term_sketch2 --> Problem  synth_85
Sketch conj243_term_sketch4 --> Problem  synth_17
Sketch conj762_sketch4 --> Problem  synth_71
Sketch conj764_sketch4 --> Problem  synth_76
Sketch conj241_term_sketch2 --> Problem  synth_19
Sketch conj251_sketch1 --> Problem  synth_35
Sketch conj654_term_sketch1 --> Problem  synth_49
Sketch conj115_sketch3 --> Problem  synth_3
Sketch conj906_term_sketch0 --> Problem  synth_90
Sketch conj243_term_sketch2 --> Problem  synth_19
Sketch conj1008_sketch2 --> Problem  synth_7
Sketch conj905_sketch1 --> Problem  synth_20
Sketch conj249_sketch4 --> Problem  synth_11
Sketch conj251_term_sketch4 --> Problem  synth_8
Sketch conj768_term_sketch5 --> Problem  synth_8
Sketch conj1004_term_sketch1 --> Problem  synth_7
Sketch conj752_sketch1 --> Problem  synth_49
Sketch conj762_term_sketch6 --> Problem  synth_46
Sketch conj649_sketch0 --> Problem  synth_20
Sketch conj227_sketch3 --> Problem  synth_24
Sketch conj1001_term_sketch1 --> Problem  synth_4
Sketch conj718_sketch2 --> Problem  synth_49
Sketch conj1022_sketch6 --> Problem  synth_121
Sketch conj974_term_sketch6 --> Problem  synth_52
Sketch conj1004_term_sketch0 --> Problem  synth_90
Sketch conj233_term_sketch1 --> Problem  synth_4
Sketch conj1006_term_sketch0 --> Problem  synth_95
Sketch conj747_term_sketch0 --> Problem  synth_39
Sketch conj243_sketch0 --> Problem  synth_19
Sketch conj1003_sketch2 --> Problem  synth_28
Sketch conj764_term_sketch4 --> Problem  synth_12
Sketch conj1003_term_sketch1 --> Problem  synth_84
Sketch conj746_term_sketch1 --> Problem  synth_44
Sketch conj905_term_sketch3 --> Problem  synth_87
Sketch conj654_sketch4 --> Problem  synth_47
Sketch conj764_term_sketch5 --> Problem  synth_46
Sketch conj763_term_sketch2 --> Problem  synth_40
Sketch conj747_sketch1 --> Problem  synth_41
Sketch conj654_term_sketch4 --> Problem  synth_52
Sketch conj227_sketch1 --> Problem  synth_7
Sketch conj906_term_sketch2 --> Problem  synth_91
Sketch conj1008_term_sketch0 --> Problem  synth_7
Sketch conj747_sketch2 --> Problem  synth_60
Sketch conj748_sketch6 --> Problem  synth_59
Sketch conj99_term_sketch1 --> Problem  synth_8
Sketch conj1002_term_sketch1 --> Problem  synth_43
Sketch conj650_term_sketch1 --> Problem  synth_44
Sketch conj1003_term_sketch5 --> Problem  synth_87
Sketch conj1020_term_sketch6 --> Problem  synth_86
Sketch conj1004_sketch6 --> Problem  synth_112
Sketch conj969_term_sketch2 --> Problem  synth_85
Sketch conj1008_term_sketch1 --> Problem  synth_95
Sketch conj1004_term_sketch7 --> Problem  synth_9
Sketch conj752_sketch4 --> Problem  synth_66
Sketch conj227_term_sketch1 --> Problem  synth_19
Sketch conj1008_term_sketch6 --> Problem  synth_8
Sketch conj745_term_sketch2 --> Problem  synth_4
Sketch conj1003_term_sketch3 --> Problem  synth_86
Sketch conj713_term_sketch2 --> Problem  synth_2
Sketch conj1004_term_sketch4 --> Problem  synth_92
Sketch conj1004_term_sketch3 --> Problem  synth_91
Sketch conj752_sketch5 --> Problem  synth_28
Sketch conj713_sketch1 --> Problem  synth_53
Sketch conj761_term_sketch1 --> Problem  synth_40
Sketch conj99_sketch1 --> Problem  synth_6
Sketch conj745_term_sketch0 --> Problem  synth_39
Sketch conj905_term_sketch2 --> Problem  synth_86
Sketch conj764_sketch0 --> Problem  synth_46
Sketch conj1019_sketch1 --> Problem  synth_16
Sketch conj1022_term_sketch0 --> Problem  synth_95
Sketch conj1008_term_sketch2 --> Problem  synth_96
Sketch conj746_sketch0 --> Problem  synth_58
Sketch conj761_sketch0 --> Problem  synth_33
Sketch conj113_term_sketch2 --> Problem  synth_13
Sketch conj764_sketch3 --> Problem  synth_72
Sketch conj762_term_sketch3 --> Problem  synth_11
Sketch conj1018_sketch3 --> Problem  synth_122
Sketch conj1022_term_sketch1 --> Problem  synth_96
Sketch conj764_sketch6 --> Problem  synth_77
Sketch conj748_sketch0 --> Problem  synth_46
Sketch conj233_term_sketch3 --> Problem  synth_5
Sketch conj1002_sketch4 --> Problem  synth_92
Sketch conj762_sketch1 --> Problem  synth_33
Sketch conj1020_term_sketch5 --> Problem  synth_92
Sketch conj768_sketch6 --> Problem  synth_35
Sketch conj910_sketch0 --> Problem  synth_38
Sketch conj1017_sketch4 --> Problem  synth_33
Sketch conj766_sketch5 --> Problem  synth_70
Sketch conj718_term_sketch1 --> Problem  synth_49
Sketch conj1006_term_sketch3 --> Problem  synth_4
Sketch conj235_sketch1 --> Problem  synth_28
Sketch conj713_sketch2 --> Problem  synth_41
Sketch conj747_sketch5 --> Problem  synth_7
Sketch conj227_term_sketch3 --> Problem  synth_9
Sketch conj746_term_sketch3 --> Problem  synth_4
Sketch conj241_sketch0 --> Problem  synth_19
Sketch conj249_sketch3 --> Problem  synth_27
Sketch conj1004_sketch2 --> Problem  synth_110
Sketch conj970_term_sketch1 --> Problem  synth_43
Sketch conj249_term_sketch4 --> Problem  synth_22
Sketch conj768_term_sketch4 --> Problem  synth_50
Sketch conj1018_sketch5 --> Problem  synth_107
Sketch conj129_term_sketch0 --> Problem  synth_19
Sketch conj1020_sketch0 --> Problem  synth_92
Sketch conj1018_sketch0 --> Problem  synth_33
Sketch conj1019_sketch2 --> Problem  synth_124
Sketch conj747_term_sketch1 --> Problem  synth_7
Sketch conj752_sketch7 --> Problem  synth_64
Sketch conj1008_term_sketch4 --> Problem  synth_50
Sketch conj650_term_sketch3 --> Problem  synth_46
Sketch conj747_sketch0 --> Problem  synth_28
Sketch conj235_sketch4 --> Problem  synth_27
Sketch conj713_term_sketch3 --> Problem  synth_41
Sketch conj768_sketch3 --> Problem  synth_80
Sketch conj906_term_sketch4 --> Problem  synth_86
Sketch conj1019_term_sketch1 --> Problem  synth_84
Sketch conj718_term_sketch2 --> Problem  synth_2
Sketch conj201_sketch0 --> Problem  synth_23
Sketch conj193_term_sketch1 --> Problem  synth_2
Sketch conj1017_term_sketch3 --> Problem  synth_13
Sketch conj1001_sketch5 --> Problem  synth_104
Sketch conj762_term_sketch2 --> Problem  synth_45
Sketch conj768_term_sketch6 --> Problem  synth_51
Sketch conj766_term_sketch5 --> Problem  synth_50
Sketch conj1018_sketch4 --> Problem  synth_68
Sketch conj910_sketch1 --> Problem  synth_18
Sketch conj137_term_sketch1 --> Problem  synth_22
Sketch conj193_term_sketch0 --> Problem  synth_19
Sketch conj750_sketch3 --> Problem  synth_58
Sketch conj1022_term_sketch8 --> Problem  synth_52
Sketch conj752_term_sketch1 --> Problem  synth_7
Sketch conj766_term_sketch3 --> Problem  synth_12
Sketch conj766_term_sketch7 --> Problem  synth_52
Sketch conj750_sketch6 --> Problem  synth_65


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 3830 seconds

Problem: synth_63
 len (app lf10 lf7)
 len (app lf7 lf10)
 len (app lf7 Nil)
 Nat.add (len lf7) O
 len (rev lf7)
 len lf7

Problem: synth_106

Problem: synth_91
 rev (app lf10 (Cons n l0))
 app (rev (app l0 lf10)) (Cons n Nil)
 app (rev (app l0 Nil)) (Cons n Nil)
 app (rev l0) (Cons n (rev lf10))
 app (rev l0) (Cons n lf10)
 app (rev l0) (Cons n Nil)

Problem: synth_67
 Nil

Problem: synth_77
 len (app lf10 lf7)
 len (app lf7 lf10)
 len (app lf7 Nil)
 Nat.add (len lf7) O
 len (rev lf7)
 len lf7

Problem: synth_64
 Nat.add (len l) (len lf7)
 Nat.add (len lf7) (len l)
 len (app l (rev lf7))
 len (app lf7 (rev l))
 len (app l lf7)
 len (app lf7 l)

Problem: synth_11
 S (Nat.add (len l) lf8)
 Nat.add (len l) (Nat.add lf8 (S O))
 S (Nat.add lf8 (len (rev l)))
 Nat.add lf8 (S (len l))
 Nat.add (len l) (S lf8)
 S (Nat.add lf8 (len l))

Problem: synth_129
 rev (app l0 lf10)
 rev (app l0 Nil)
 app (rev l0) lf10
 app (rev l0) Nil
 app lf10 (rev l0)
 rev l0

Problem: synth_46
 len (app l (Cons O lf7))
 S (len (app lf7 l))
 len (app lf7 (Cons n l))
 len (app lf7 (Cons O l))
 Nat.add (len l) (S (len lf7))
 Nat.add (len lf7) (S (len l))

Problem: synth_101

Problem: synth_100

Problem: synth_59
 Nat.add (len l) (len lf7)
 Nat.add (len lf7) (len l)
 len (app l (rev lf7))
 len (app lf7 (rev l))
 len (app l lf7)
 len (app lf7 l)

Problem: synth_116
 app (rev (app l0 Nil)) Nil
 app (app (rev l0) Nil) Nil
 rev (rev (rev l0))
 rev (app l0 Nil)
 app (rev l0) Nil
 rev l0

Problem: synth_31

Problem: synth_8
 Nat.add (len (rev l0)) O
 len (rev (rev l0))
 len (app l0 Nil)
 Nat.add (len l0) O
 len (rev l0)
 len l0

Problem: synth_34
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_58

Problem: synth_53

Problem: synth_123

Problem: synth_125
 app (rev (app l0 Nil)) Nil
 app (app (rev l0) Nil) Nil
 rev (rev (rev l0))
 rev (app l0 Nil)
 app (rev l0) Nil
 rev l0

Problem: synth_2
 S (Nat.add (Nat.add lf5 O) O)
 Nat.add (Nat.add lf5 O) (S O)
 Nat.add (Nat.add lf5 (S O)) O
 S (Nat.add lf5 O)
 Nat.add lf5 (S O)
 S lf5

Problem: synth_95
 rev (rev (app (rev l0) (Cons n Nil)))
 app (rev l0) (Cons (Nat.add n O) Nil)
 app (app (rev l0) (Cons n Nil)) Nil
 app (rev (rev (rev l0))) (Cons n Nil)
 app (rev (app l0 Nil)) (Cons n Nil)
 app (rev l0) (Cons n Nil)

Problem: synth_130
 len (app lf10 l0)
 len (app l0 lf10)
 len (app l0 Nil)
 Nat.add (len l0) O
 len (rev l0)
 len l0

Problem: synth_127

Problem: synth_72

Problem: synth_111
 rev (app l0 lf10)
 rev (app l0 Nil)
 app (rev l0) lf10
 app (rev l0) Nil
 app lf10 (rev l0)
 rev l0

Problem: synth_56

Problem: synth_105

Problem: synth_65
 Nil

Problem: synth_23

Problem: synth_88

Problem: synth_19
 Nat.add (len (rev lf2)) O
 len (rev (rev lf2))
 len (app lf2 Nil)
 Nat.add (len lf2) O
 len (rev lf2)
 len lf2

Problem: synth_131
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_132

Problem: synth_24

Problem: synth_97
 app (rev (rev (app l (rev l0)))) (Cons n Nil)
 app (rev (rev l)) (app (rev l0) (Cons n Nil))
 app (app l Nil) (app (rev l0) (Cons n Nil))
 app (app l (rev l0)) (Cons n Nil)
 app l (app (rev l0) (Cons n Nil))
 app (rev (app l0 (rev l))) (Cons n Nil)

Problem: synth_48
 app (rev (app (rev lf7) Nil)) (Cons n Nil)
 app (app lf7 (Cons n Nil)) Nil
 app (app (rev (rev lf7)) (Cons n Nil)) Nil
 app (app lf7 Nil) (Cons n Nil)
 app lf7 (Cons n Nil)
 app (rev (rev lf7)) (Cons n Nil)

Problem: synth_28

Problem: synth_45
 app (rev (app lf10 (rev lf7))) (Cons n Nil)
 rev (app lf10 (Cons n (rev lf7)))
 app lf7 (Cons n (rev lf10))
 app lf7 (Cons n lf10)
 app lf7 (Cons n Nil)
 app (rev (rev lf7)) (Cons n Nil)

Problem: synth_26

Problem: synth_70

Problem: synth_122
 len (app lf10 l)
 len (app l lf10)
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_15

Problem: synth_14

Problem: synth_83

Problem: synth_12
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_85
 app l (rev (app lf6 l0))
 app l (app (rev l0) lf6)
 app (app l (rev l0)) (rev lf6)
 rev (app (rev lf6) (app l0 (rev l)))
 rev (app lf6 (app l0 (rev l)))
 app (app l (rev l0)) lf6

Problem: synth_62

Problem: synth_50
 Cons (Nat.add (Nat.add n O) O) Nil
 Cons (Nat.add n O) Nil
 Cons n Nil

Problem: synth_119
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_7
 S (Nat.add (len l0) lf9)
 Nat.add (len l0) (Nat.add lf9 (S O))
 S (Nat.add lf9 (len (rev l0)))
 Nat.add lf9 (S (len l0))
 Nat.add (len l0) (S lf9)
 S (Nat.add lf9 (len l0))

Problem: synth_128
 len (app lf10 l)
 len (app l lf10)
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_61
 Nat.add (len (rev lf7)) O
 len (rev (rev lf7))
 len (app lf7 Nil)
 Nat.add (len lf7) O
 len (rev lf7)
 len lf7

Problem: synth_27

Problem: synth_33

Problem: synth_47
 Nil

Problem: synth_3

Problem: synth_121

Problem: synth_124
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_99

Problem: synth_43
 app lf10 (Cons n Nil)
 app (rev (rev lf10)) (Cons n Nil)
 app (rev lf10) (Cons n Nil)
 Cons n (rev lf10)
 Cons n lf10
 Cons n Nil

Problem: synth_109
 Nat.add (len (rev l0)) O
 len (rev (rev l0))
 len (app l0 Nil)
 Nat.add (len l0) O
 len (rev l0)
 len l0

Problem: synth_68

Problem: synth_96
 len (app l0 (Cons O l))
 S (len (app l l0))
 len (app l (Cons n l0))
 len (app l (Cons O l0))
 Nat.add (len l0) (S (len l))
 Nat.add (len l) (S (len l0))

Problem: synth_54

Problem: synth_39
 app l (app lf7 (app lf6 Nil))
 app l (rev (app lf6 (rev lf7)))
 app (app l lf7) (rev lf6)
 app (app l lf7) lf6
 app l (app lf7 (rev lf6))
 app l (app lf7 lf6)

Problem: synth_98

Problem: synth_118
 Nil

Problem: synth_66
 Nat.add (len (rev lf7)) O
 len (rev (rev lf7))
 len (app lf7 Nil)
 Nat.add (len lf7) O
 len (rev lf7)
 len lf7

Problem: synth_57
 Nat.add (len l) (len lf7)
 Nat.add (len lf7) (len l)
 len (app l (rev lf7))
 len (app lf7 (rev l))
 len (app l lf7)
 len (app lf7 l)

Problem: synth_5
 Nat.add (Nat.add lf8 lf9) O
 Nat.add (Nat.add lf9 lf8) O
 Nat.add lf8 (Nat.add lf9 O)
 Nat.add lf9 (Nat.add lf8 O)
 Nat.add lf8 lf9
 Nat.add lf9 lf8

Problem: synth_37

Problem: synth_22
 Nat.add (len l) (len lf3)
 Nat.add (len lf3) (len l)
 len (app l (rev lf3))
 len (app lf3 (rev l))
 len (app l lf3)
 len (app lf3 l)

Problem: synth_18
 Nat.add (Nat.add (Nat.add lf4 O) O) O
 Nat.add (Nat.add lf4 O) O
 Nat.add lf4 O
 lf4

Problem: synth_114
 Nat.add (len l0) (len l)
 Nat.add (len l) (len l0)
 len (app l0 (rev l))
 len (app l (rev l0))
 len (app l0 l)
 len (app l l0)

Problem: synth_21
 app (rev (rev l)) lf3
 app (app l Nil) lf3
 app (app l lf3) Nil
 app l (rev (rev lf3))
 app l (app lf3 Nil)
 app l lf3

Problem: synth_41
 len (app lf7 (app lf6 l))
 len (app lf7 (Cons O l))
 len (app l (app lf7 lf6))
 len (app lf7 (app l lf6))
 Nat.add (len l) (S (len lf7))
 Nat.add (len lf7) (S (len l))

Problem: synth_49
 len (app l (Cons O lf7))
 S (len (app lf7 l))
 len (app lf7 (Cons n l))
 len (app lf7 (Cons O l))
 Nat.add (len l) (S (len lf7))
 Nat.add (len lf7) (S (len l))

Problem: synth_75

Problem: synth_25

Problem: synth_13
 Nat.add (len (rev l)) lf8
 Nat.add (Nat.add lf8 (len l)) O
 Nat.add (len l) (Nat.add lf8 O)
 Nat.add lf8 (len (rev l))
 Nat.add (len l) lf8
 Nat.add lf8 (len l)

Problem: synth_6

Problem: synth_4
 Nat.add lf8 (Nat.add lf9 (S O))
 Nat.add lf9 (Nat.add lf8 (S O))
 S (Nat.add lf8 lf9)
 S (Nat.add lf9 lf8)
 Nat.add lf8 (S lf9)
 Nat.add lf9 (S lf8)

Problem: synth_38

Problem: synth_104
 Nat.add (len l0) (len l)
 Nat.add (len l) (len l0)
 len (app l0 (rev l))
 len (app l (rev l0))
 len (app l0 l)
 len (app l l0)

Problem: synth_102
 Nil

Problem: synth_113

Problem: synth_10

Problem: synth_92
 len (app l0 (Cons O l))
 S (len (app l l0))
 len (app l (Cons n l0))
 len (app l (Cons O l0))
 Nat.add (len l0) (S (len l))
 Nat.add (len l) (S (len l0))

Problem: synth_32

Problem: synth_51
 app (app l Nil) (app lf7 (Cons n Nil))
 app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))
 app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))
 app (app l lf7) (Cons n Nil)
 app l (app lf7 (Cons n Nil))
 app l (app (rev (rev lf7)) (Cons n Nil))

Problem: synth_112
 len (app lf10 l0)
 len (app l0 lf10)
 len (app l0 Nil)
 Nat.add (len l0) O
 len (rev l0)
 len l0

Problem: synth_35

Problem: synth_115
 Nil

Problem: synth_110

Problem: synth_90
 app (app l (rev l0)) (Cons n lf10)
 app (app l (rev l0)) (Cons n Nil)
 app l (app (rev l0) (Cons n (rev lf10)))
 app l (app (rev l0) (Cons n lf10))
 app l (app (rev l0) (Cons n Nil))
 app (rev (app l0 (rev l))) (Cons n Nil)

Problem: synth_73
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_17
 Nat.add (len l0) (len l)
 Nat.add (len l) (len l0)
 len (app l0 (rev l))
 len (app l (rev l0))
 len (app l0 l)
 len (app l l0)

Problem: synth_29

Problem: synth_76
 len (app lf10 l)
 len (app l lf10)
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_117
 Nat.add (len (rev l0)) O
 len (rev (rev l0))
 len (app l0 Nil)
 Nat.add (len l0) O
 len (rev l0)
 len l0

Problem: synth_9
 Nat.add (len (rev l0)) lf9
 Nat.add (Nat.add lf9 (len l0)) O
 Nat.add (len l0) (Nat.add lf9 O)
 Nat.add lf9 (len (rev l0))
 Nat.add (len l0) lf9
 Nat.add lf9 (len l0)

Problem: synth_30

Problem: synth_81
 Nat.add (len (rev lf7)) O
 len (rev (rev lf7))
 len (app lf7 Nil)
 Nat.add (len lf7) O
 len (rev lf7)
 len lf7

Problem: synth_1
 Nat.add (Nat.add (Nat.add lf1 O) O) O
 Nat.add (Nat.add lf1 O) O
 Nat.add lf1 O
 lf1

Problem: synth_69
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_86
 app (rev (app l0 Nil)) Nil
 app (app (rev l0) Nil) Nil
 rev (rev (rev l0))
 rev (app l0 Nil)
 app (rev l0) Nil
 rev l0

Problem: synth_55
 Nil

Problem: synth_107
 Nat.add (len l0) (len l)
 Nat.add (len l) (len l0)
 len (app l0 (rev l))
 len (app l (rev l0))
 len (app l0 l)
 len (app l l0)

Problem: synth_71
 len (app lf10 l)
 len (app l lf10)
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_120

Problem: synth_103

Problem: synth_87
 rev (app (rev lf6) l0)
 app (rev l0) (rev (rev lf6))
 app (rev l0) (app lf6 Nil)
 app (rev l0) (rev lf6)
 rev (app lf6 l0)
 app (rev l0) lf6

Problem: synth_79
 Nil

Problem: synth_126
 Nat.add (len (rev l0)) O
 len (rev (rev l0))
 len (app l0 Nil)
 Nat.add (len l0) O
 len (rev l0)
 len l0

Problem: synth_74
 Nat.add (len (rev lf7)) O
 len (rev (rev lf7))
 len (app lf7 Nil)
 Nat.add (len lf7) O
 len (rev lf7)
 len lf7

Problem: synth_84
 len (app l (app lf6 l0))
 len (app l (Cons O l0))
 len (app l0 (app l lf6))
 len (app l (app l0 lf6))
 Nat.add (len l0) (S (len l))
 Nat.add (len l) (S (len l0))

Problem: synth_20

Problem: synth_94
 Nil

Problem: synth_108
 app (rev (app l0 Nil)) Nil
 app (app (rev l0) Nil) Nil
 rev (rev (rev l0))
 rev (app l0 Nil)
 app (rev l0) Nil
 rev l0

Problem: synth_133
 Nil

Problem: synth_42

Problem: synth_16
 S (len (app l0 l))
 len (app l0 (Cons O l))
 S (len (app l l0))
 len (app l (Cons O l0))
 Nat.add (len l0) (S (len l))
 Nat.add (len l) (S (len l0))

Problem: synth_93

Problem: synth_40
 app (app lf7 lf6) Nil
 app lf7 (rev (rev lf6))
 app lf7 (app lf6 Nil)
 rev (app lf6 (rev lf7))
 app lf7 (rev lf6)
 app lf7 lf6

Problem: synth_80
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_89

Problem: synth_52
 Nil

Problem: synth_44
 app (app l lf7) (Cons n lf10)
 app (app l lf7) (Cons n Nil)
 app l (app lf7 (Cons n (rev lf10)))
 app l (app lf7 (Cons n lf10))
 app l (app lf7 (Cons n Nil))
 app l (app (rev (rev lf7)) (Cons n Nil))

Problem: synth_60

Problem: synth_36
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

Problem: synth_82
 Nil

Problem: synth_78
 Nat.add (len (rev l)) O
 len (rev (rev l))
 len (app l Nil)
 Nat.add (len l) O
 len (rev l)
 len l

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 3832 seconds
Lemmas:
Lemma candidate_1: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) (len l0))).
Lemma candidate_2: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_3: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_4: forall (lf1 : nat), @eq nat lf1 (Nat.add lf1 O).
Lemma candidate_5: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_6: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_7: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_8: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_9: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_10: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_11: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_12: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_13: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_14: forall (lf1 : nat), @eq nat lf1 (Nat.add lf1 O).
Lemma candidate_15: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_16: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_17: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_18: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_19: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_20: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_21: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_22: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_23: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_24: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_25: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_26: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_27: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_28: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_29: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_30: forall (lf1 : nat), @eq nat lf1 (Nat.add lf1 O).
Lemma candidate_31: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_32: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_33: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_34: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_35: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_36: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_37: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_38: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_39: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_40: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_41: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_42: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_43: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_44: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_45: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_46: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_47: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_48: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_49: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_50: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_51: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_52: forall (lf1 : nat), @eq nat lf1 (Nat.add lf1 O).
Lemma candidate_53: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_54: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_55: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_56: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_57: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_58: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_59: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_60: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_61: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_62: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_63: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_64: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_65: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_66: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_67: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_68: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_69: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_70: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_71: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_72: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_73: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_74: forall (lf1 : nat), @eq nat lf1 (Nat.add lf1 O).
Lemma candidate_75: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_76: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_77: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_78: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_79: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_80: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_81: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_82: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_83: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_84: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_85: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_86: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_87: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_88: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_89: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_90: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_91: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_92: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_93: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_94: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_95: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_96: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_97: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_98: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_99: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_100: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_101: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_102: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_103: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_104: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_105: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_106: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_107: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_108: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_109: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_110: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_111: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_112: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_113: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_114: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_115: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_116: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_117: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_118: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_119: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l lf3).
Lemma candidate_120: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_121: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_122: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_123: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_124: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_125: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_126: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_127: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_128: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_129: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_130: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_131: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_132: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_133: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_134: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_135: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_136: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_137: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_138: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_139: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_140: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_141: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_142: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_143: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_144: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_145: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_146: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_147: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_148: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_149: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_150: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_151: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_152: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_153: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_154: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_155: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_156: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_157: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_158: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_159: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_160: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_161: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_162: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_163: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_164: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_165: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_166: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_167: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l lf3).
Lemma candidate_168: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_169: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_170: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_171: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_172: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_173: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_174: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_175: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_176: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_177: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_178: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_179: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_180: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_181: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_182: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_183: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_184: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_185: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_186: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_187: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_188: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_189: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_190: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_191: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_192: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_193: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_194: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_195: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_196: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_197: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_198: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_199: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_200: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_201: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_202: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_203: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_204: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_205: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_206: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_207: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_208: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_209: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_210: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_211: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_212: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_213: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_214: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_215: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_216: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_217: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_218: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_219: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_220: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_221: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_222: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_223: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_224: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_225: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_226: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_227: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_228: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_229: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_230: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_231: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_232: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_233: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_234: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_235: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_236: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_237: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_238: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_239: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_240: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_241: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_242: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_243: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_244: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_245: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_246: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_247: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_248: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_249: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_250: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_251: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_252: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_253: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_254: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_255: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_256: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_257: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_258: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_259: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_260: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_261: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_262: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_263: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l lf3).
Lemma candidate_264: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_265: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_266: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_267: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_268: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_269: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_270: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_271: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_272: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_273: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_274: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_275: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_276: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_277: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_278: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_279: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_280: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_281: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_282: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_283: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_284: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_285: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_286: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_287: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_288: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_289: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_290: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_291: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_292: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_293: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_294: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_295: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_296: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_297: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_298: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_299: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_300: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_301: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_302: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_303: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_304: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_305: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l lf3).
Lemma candidate_306: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_307: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_308: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_309: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_310: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_311: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_312: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_313: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_314: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_315: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_316: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_317: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_318: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_319: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_320: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_321: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_322: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_323: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_324: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_325: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_326: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_327: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_328: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_329: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_330: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_331: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_332: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_333: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_334: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_335: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_336: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_337: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_338: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_339: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_340: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_341: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_342: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_343: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_344: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_345: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_346: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_347: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_348: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_349: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_350: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_351: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_352: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_353: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_354: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_355: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_356: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_357: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_358: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_359: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_360: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_361: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_362: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_363: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_364: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_365: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_366: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_367: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_368: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_369: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_370: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_371: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_372: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_373: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_374: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_375: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_376: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_377: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_378: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_379: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_380: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_381: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_382: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_383: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_384: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_385: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_386: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_387: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len lf2) O).
Lemma candidate_388: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_389: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_390: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_391: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_392: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_393: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_394: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_395: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_396: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_397: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_398: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_399: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_400: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_401: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_402: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_403: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_404: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_405: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_406: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_407: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_408: forall (lf3 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l lf3)) (S (add (Nat.add (len (rev l)) O) lf8)).
Lemma candidate_409: forall (lf3 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l lf3)) (S (add (len (rev (rev l))) lf8)).
Lemma candidate_410: forall (lf3 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l lf3)) (S (add (len (app l Nil)) lf8)).
Lemma candidate_411: forall (lf3 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l lf3)) (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_412: forall (lf3 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l lf3)) (S (add (len (rev l)) lf8)).
Lemma candidate_413: forall (lf3 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l lf3)) (S (add (len l) lf8)).
Lemma candidate_414: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_415: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_416: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_417: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_418: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_419: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_420: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_421: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_422: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_423: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_424: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_425: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l lf3).
Lemma candidate_426: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_427: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_428: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_429: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_430: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_431: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_432: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_433: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_434: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_435: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_436: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_437: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_438: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_439: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_440: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_441: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_442: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_443: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_444: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_445: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_446: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_447: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_448: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_449: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_450: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_451: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_452: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_453: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_454: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_455: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_456: forall (lf3 : lst) (l : lst) (l0 : lst), @eq nat (len (app l lf3)) (S (add (Nat.add (len (rev l)) O) (len l0))).
Lemma candidate_457: forall (lf3 : lst) (l : lst) (l0 : lst), @eq nat (len (app l lf3)) (S (add (len (rev (rev l))) (len l0))).
Lemma candidate_458: forall (lf3 : lst) (l : lst) (l0 : lst), @eq nat (len (app l lf3)) (S (add (len (app l Nil)) (len l0))).
Lemma candidate_459: forall (lf3 : lst) (l : lst) (l0 : lst), @eq nat (len (app l lf3)) (S (add (Nat.add (len l) O) (len l0))).
Lemma candidate_460: forall (lf3 : lst) (l : lst) (l0 : lst), @eq nat (len (app l lf3)) (S (add (len (rev l)) (len l0))).
Lemma candidate_461: forall (lf3 : lst) (l : lst) (l0 : lst), @eq nat (len (app l lf3)) (S (add (len l) (len l0))).
Lemma candidate_462: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_463: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_464: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_465: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_466: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_467: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_468: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_469: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_470: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_471: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_472: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_473: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_474: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_475: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_476: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_477: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_478: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_479: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l lf3).
Lemma candidate_480: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_481: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_482: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_483: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_484: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_485: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_486: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_487: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_488: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_489: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_490: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l lf3)).
Lemma candidate_491: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_492: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_493: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_494: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_495: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_496: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_497: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_498: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_499: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_500: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_501: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_502: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_503: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_504: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_505: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_506: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_507: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_508: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_509: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (rev (app lf6 (rev lf7)))).
Lemma candidate_510: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) (rev lf6)).
Lemma candidate_511: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_512: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (rev lf6))).
Lemma candidate_513: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 lf6)).
Lemma candidate_514: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_515: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_516: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_517: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (rev (app lf6 (rev lf7))).
Lemma candidate_518: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev lf6)).
Lemma candidate_519: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_520: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_521: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_522: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_523: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_524: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_525: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_526: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_527: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_528: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_529: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_530: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_531: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_532: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_533: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_534: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_535: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_536: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_537: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_538: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n (rev lf10)))).
Lemma candidate_539: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n lf10))).
Lemma candidate_540: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_541: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_542: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (app lf10 (rev lf7))) (Cons n Nil)).
Lemma candidate_543: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (rev (app lf10 (Cons n (rev lf7)))).
Lemma candidate_544: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n (rev lf10))).
Lemma candidate_545: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n lf10)).
Lemma candidate_546: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n Nil)).
Lemma candidate_547: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_548: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_549: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_550: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_551: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_552: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_553: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_554: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_555: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_556: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_557: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_558: forall (n : nat) (lf7 : lst) (l : lst) (lf4 : nat), @eq nat (len (app l (app lf7 (Cons n (Nil))))) lf4.
Lemma candidate_559: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_560: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_561: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_562: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_563: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app lf7 (Cons n Nil)).
Lemma candidate_564: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_565: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_566: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_567: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_568: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_569: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_570: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_571: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_572: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_573: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_574: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_575: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_576: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_577: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_578: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_579: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_580: @eq lst Nil (Nil).
Lemma candidate_581: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_582: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_583: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_584: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_585: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_586: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_587: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_588: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_589: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_590: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_591: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_592: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_593: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_594: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (rev (app lf6 (rev lf7)))).
Lemma candidate_595: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) (rev lf6)).
Lemma candidate_596: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_597: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (rev lf6))).
Lemma candidate_598: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 lf6)).
Lemma candidate_599: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_600: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_601: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_602: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (rev (app lf6 (rev lf7))).
Lemma candidate_603: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev lf6)).
Lemma candidate_604: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_605: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_606: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_607: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_608: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_609: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_610: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_611: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_612: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_613: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_614: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_615: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_616: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_617: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_618: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_619: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_620: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_621: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_622: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_623: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_624: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_625: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_626: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_627: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_628: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_629: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_630: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_631: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_632: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_633: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_634: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_635: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_636: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_637: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n (rev lf10)))).
Lemma candidate_638: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n lf10))).
Lemma candidate_639: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_640: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_641: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (app lf10 (rev lf7))) (Cons n Nil)).
Lemma candidate_642: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (rev (app lf10 (Cons n (rev lf7)))).
Lemma candidate_643: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n (rev lf10))).
Lemma candidate_644: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n lf10)).
Lemma candidate_645: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n Nil)).
Lemma candidate_646: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_647: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_648: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_649: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_650: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_651: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_652: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_653: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_654: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_655: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_656: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_657: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_658: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_659: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_660: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_661: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_662: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_663: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_664: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_665: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_666: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_667: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_668: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_669: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_670: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_671: forall (n : nat) (lf7 : lst) (l : lst) (lf5 : nat), @eq nat (len (app l (app lf7 (Cons n (Nil))))) (S lf5).
Lemma candidate_672: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_673: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_674: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_675: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_676: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app lf7 (Cons n Nil)).
Lemma candidate_677: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_678: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_679: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_680: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_681: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_682: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_683: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_684: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_685: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_686: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_687: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_688: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_689: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_690: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_691: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_692: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_693: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_694: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_695: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_696: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_697: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_698: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_699: @eq lst Nil (Nil).
Lemma candidate_700: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_701: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_702: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_703: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_704: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_705: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_706: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_707: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_708: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l (rev lf7)))).
Lemma candidate_709: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 (rev l)))).
Lemma candidate_710: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l lf7))).
Lemma candidate_711: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 l))).
Lemma candidate_712: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_713: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_714: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_715: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_716: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_717: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_718: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_719: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (rev (app lf6 (rev lf7)))).
Lemma candidate_720: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) (rev lf6)).
Lemma candidate_721: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_722: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (rev lf6))).
Lemma candidate_723: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 lf6)).
Lemma candidate_724: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_725: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_726: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_727: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (rev (app lf6 (rev lf7))).
Lemma candidate_728: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev lf6)).
Lemma candidate_729: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_730: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_731: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_732: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_733: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_734: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_735: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_736: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_737: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_738: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_739: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_740: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_741: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_742: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_743: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_744: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_745: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_746: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_747: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_748: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_749: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_750: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_751: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_752: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_753: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_754: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_755: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_756: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_757: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_758: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_759: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_760: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_761: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_762: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l (rev lf7)))).
Lemma candidate_763: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 (rev l)))).
Lemma candidate_764: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l lf7))).
Lemma candidate_765: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_766: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_767: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_768: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_769: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_770: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_771: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_772: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_773: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_774: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n (rev lf10)))).
Lemma candidate_775: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n lf10))).
Lemma candidate_776: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_777: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_778: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (app lf10 (rev lf7))) (Cons n Nil)).
Lemma candidate_779: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (rev (app lf10 (Cons n (rev lf7)))).
Lemma candidate_780: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n (rev lf10))).
Lemma candidate_781: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n lf10)).
Lemma candidate_782: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n Nil)).
Lemma candidate_783: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_784: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_785: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_786: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_787: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_788: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_789: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_790: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_791: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_792: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_793: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_794: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_795: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_796: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_797: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_798: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_799: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_800: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_801: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_802: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_803: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_804: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_805: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_806: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_807: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_808: forall (lf7 : lst) (l : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (Nat.add (len (rev lf7)) O))).
Lemma candidate_809: forall (lf7 : lst) (l : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len (rev (rev lf7))))).
Lemma candidate_810: forall (lf7 : lst) (l : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len (app lf7 Nil)))).
Lemma candidate_811: forall (lf7 : lst) (l : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (Nat.add (len lf7) O))).
Lemma candidate_812: forall (lf7 : lst) (l : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len (rev lf7)))).
Lemma candidate_813: forall (lf7 : lst) (l : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add lf9 (len lf7))).
Lemma candidate_814: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_815: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_816: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l (rev lf7)))).
Lemma candidate_817: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 (rev l)))).
Lemma candidate_818: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l lf7))).
Lemma candidate_819: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 l))).
Lemma candidate_820: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_821: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_822: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_823: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_824: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_825: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_826: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_827: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (rev (app lf6 (rev lf7)))).
Lemma candidate_828: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) (rev lf6)).
Lemma candidate_829: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_830: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (rev lf6))).
Lemma candidate_831: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 lf6)).
Lemma candidate_832: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_833: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_834: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_835: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_836: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_837: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_838: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_839: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_840: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_841: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (rev (app lf6 (rev lf7))).
Lemma candidate_842: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev lf6)).
Lemma candidate_843: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_844: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_845: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_846: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_847: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_848: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_849: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_850: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_851: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_852: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_853: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_854: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_855: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_856: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_857: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_858: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_859: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_860: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_861: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_862: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_863: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_864: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_865: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_866: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_867: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_868: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_869: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_870: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_871: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_872: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_873: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_874: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add lf9 (len (app lf10 lf7)))).
Lemma candidate_875: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add lf9 (len (app lf7 lf10)))).
Lemma candidate_876: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add lf9 (len (app lf7 Nil)))).
Lemma candidate_877: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add lf9 (Nat.add (len lf7) O))).
Lemma candidate_878: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (len (rev lf7)))).
Lemma candidate_879: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add lf9 (len lf7))).
Lemma candidate_880: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_881: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_882: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l (rev lf7)))).
Lemma candidate_883: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 (rev l)))).
Lemma candidate_884: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l lf7))).
Lemma candidate_885: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_886: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_887: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_888: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_889: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_890: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_891: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_892: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_893: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_894: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_895: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_896: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_897: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_898: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_899: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_900: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n (rev lf10)))).
Lemma candidate_901: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n lf10))).
Lemma candidate_902: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_903: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_904: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (app lf10 (rev lf7))) (Cons n Nil)).
Lemma candidate_905: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (rev (app lf10 (Cons n (rev lf7)))).
Lemma candidate_906: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n (rev lf10))).
Lemma candidate_907: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n lf10)).
Lemma candidate_908: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n Nil)).
Lemma candidate_909: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_910: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_911: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_912: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_913: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_914: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_915: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_916: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_917: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_918: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_919: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_920: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_921: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_922: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_923: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_924: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_925: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_926: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_927: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_928: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_929: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_930: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_931: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_932: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_933: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_934: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_935: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_936: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_937: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_938: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_939: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_940: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_941: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_942: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l (rev lf7)))).
Lemma candidate_943: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 (rev l)))).
Lemma candidate_944: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_945: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_946: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n (Nil))))) (S (add lf9 lf8)).
Lemma candidate_947: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_948: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_949: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_950: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_951: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app lf7 (Cons n Nil)).
Lemma candidate_952: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_953: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_954: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_955: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_956: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_957: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_958: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_959: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_960: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_961: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_962: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_963: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_964: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_965: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_966: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_967: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_968: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_969: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_970: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_971: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_972: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_973: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_974: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_975: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_976: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_977: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_978: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_979: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_980: @eq lst Nil (Nil).
Lemma candidate_981: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_982: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_983: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_984: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_985: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_986: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_987: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_988: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_989: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_990: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_991: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_992: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_993: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add lf9 (Nat.add (len (rev lf7)) O))).
Lemma candidate_994: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add lf9 (len (rev (rev lf7))))).
Lemma candidate_995: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add lf9 (len (app lf7 Nil)))).
Lemma candidate_996: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add lf9 (Nat.add (len lf7) O))).
Lemma candidate_997: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (len (rev lf7)))).
Lemma candidate_998: forall (n : nat) (lf7 : lst) (l : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add lf9 (len lf7))).
Lemma candidate_999: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app lf7 (Cons n (Nil))))) (S (add lf9 (len l0))).
Lemma candidate_1000: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1001: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1002: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l (rev lf7)))).
Lemma candidate_1003: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 (rev l)))).
Lemma candidate_1004: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_1005: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1006: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_1007: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_1008: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_1009: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_1010: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app lf7 (Cons n Nil)).
Lemma candidate_1011: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1012: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_1013: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_1014: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_1015: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_1016: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_1017: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_1018: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_1019: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1020: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_1021: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_1022: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1023: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1024: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_1025: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_1026: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1027: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1028: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_1029: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_1030: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_1031: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_1032: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_1033: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_1034: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1035: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1036: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_1037: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_1038: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1039: @eq lst Nil (Nil).
Lemma candidate_1040: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_1041: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_1042: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_1043: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_1044: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_1045: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_1046: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_1047: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_1048: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_1049: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_1050: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1051: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1052: forall (lf7 : lst) (l : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (Nat.add (len (rev l)) O) lf8)).
Lemma candidate_1053: forall (lf7 : lst) (l : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len (rev (rev l))) lf8)).
Lemma candidate_1054: forall (lf7 : lst) (l : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len (app l Nil)) lf8)).
Lemma candidate_1055: forall (lf7 : lst) (l : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_1056: forall (lf7 : lst) (l : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len (rev l)) lf8)).
Lemma candidate_1057: forall (lf7 : lst) (l : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) lf8)).
Lemma candidate_1058: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1059: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1060: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l (rev lf7)))).
Lemma candidate_1061: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 (rev l)))).
Lemma candidate_1062: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l lf7))).
Lemma candidate_1063: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 l))).
Lemma candidate_1064: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_1065: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_1066: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_1067: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_1068: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_1069: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_1070: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_1071: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (rev (app lf6 (rev lf7)))).
Lemma candidate_1072: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) (rev lf6)).
Lemma candidate_1073: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_1074: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (rev lf6))).
Lemma candidate_1075: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 lf6)).
Lemma candidate_1076: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_1077: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_1078: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_1079: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (rev (app lf6 (rev lf7))).
Lemma candidate_1080: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev lf6)).
Lemma candidate_1081: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_1082: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_1083: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_1084: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_1085: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_1086: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_1087: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_1088: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_1089: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1090: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1091: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_1092: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_1093: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_1094: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_1095: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_1096: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_1097: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_1098: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_1099: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_1100: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_1101: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_1102: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_1103: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_1104: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1105: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1106: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_1107: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_1108: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_1109: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_1110: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1111: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1112: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len (app lf10 l)) lf8)).
Lemma candidate_1113: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len (app l lf10)) lf8)).
Lemma candidate_1114: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len (app l Nil)) lf8)).
Lemma candidate_1115: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_1116: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len (rev l)) lf8)).
Lemma candidate_1117: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) lf8)).
Lemma candidate_1118: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1119: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1120: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l (rev lf7)))).
Lemma candidate_1121: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 (rev l)))).
Lemma candidate_1122: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l lf7))).
Lemma candidate_1123: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_1124: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_1125: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_1126: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_1127: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_1128: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_1129: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_1130: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_1131: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_1132: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_1133: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_1134: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_1135: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_1136: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_1137: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_1138: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n (rev lf10)))).
Lemma candidate_1139: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n lf10))).
Lemma candidate_1140: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_1141: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1142: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (app lf10 (rev lf7))) (Cons n Nil)).
Lemma candidate_1143: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (rev (app lf10 (Cons n (rev lf7)))).
Lemma candidate_1144: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n (rev lf10))).
Lemma candidate_1145: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n lf10)).
Lemma candidate_1146: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n Nil)).
Lemma candidate_1147: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1148: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_1149: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_1150: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_1151: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_1152: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_1153: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_1154: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_1155: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1156: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1157: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_1158: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_1159: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_1160: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_1161: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_1162: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_1163: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_1164: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_1165: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_1166: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_1167: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_1168: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_1169: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_1170: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1171: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1172: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_1173: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_1174: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_1175: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_1176: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1177: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1178: forall (lf7 : lst) (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6)))   (S (add (Nat.add (len (rev l)) O) (len l0))).
Lemma candidate_1179: forall (lf7 : lst) (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len (rev (rev l))) (len l0))).
Lemma candidate_1180: forall (lf7 : lst) (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len (app l Nil)) (len l0))).
Lemma candidate_1181: forall (lf7 : lst) (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (Nat.add (len l) O) (len l0))).
Lemma candidate_1182: forall (lf7 : lst) (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len (rev l)) (len l0))).
Lemma candidate_1183: forall (lf7 : lst) (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len l0))).
Lemma candidate_1184: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6)))   (S (add (len l) (Nat.add (len (rev lf7)) O))).
Lemma candidate_1185: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len (rev (rev lf7))))).
Lemma candidate_1186: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len (app lf7 Nil)))).
Lemma candidate_1187: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (Nat.add (len lf7) O))).
Lemma candidate_1188: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len (rev lf7)))).
Lemma candidate_1189: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (add (len l) (len lf7))).
Lemma candidate_1190: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1191: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1192: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l (rev lf7)))).
Lemma candidate_1193: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 (rev l)))).
Lemma candidate_1194: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app l lf7))).
Lemma candidate_1195: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (S (len (app lf7 l))).
Lemma candidate_1196: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_1197: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_1198: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_1199: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_1200: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_1201: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_1202: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_1203: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_1204: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_1205: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_1206: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1207: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1208: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_1209: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (rev (app lf6 (rev lf7)))).
Lemma candidate_1210: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) (rev lf6)).
Lemma candidate_1211: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_1212: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (rev lf6))).
Lemma candidate_1213: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 lf6)).
Lemma candidate_1214: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_1215: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_1216: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_1217: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (rev (app lf6 (rev lf7))).
Lemma candidate_1218: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev lf6)).
Lemma candidate_1219: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_1220: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_1221: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1222: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1223: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_1224: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_1225: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_1226: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1227: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_1228: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_1229: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_1230: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_1231: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_1232: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_1233: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_1234: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_1235: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_1236: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_1237: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_1238: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_1239: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (Cons O l))).
Lemma candidate_1240: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_1241: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_1242: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1243: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1244: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_1245: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_1246: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_1247: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_1248: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1249: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1250: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len (app lf10 l)) (len l0))).
Lemma candidate_1251: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len (app l lf10)) (len l0))).
Lemma candidate_1252: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len (app l Nil)) (len l0))).
Lemma candidate_1253: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (Nat.add (len l) O) (len l0))).
Lemma candidate_1254: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len (rev l)) (len l0))).
Lemma candidate_1255: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma candidate_1256: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_1257: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_1258: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_1259: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_1260: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_1261: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_1262: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf10 lf7)))).
Lemma candidate_1263: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf7 lf10)))).
Lemma candidate_1264: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf7 Nil)))).
Lemma candidate_1265: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (Nat.add (len lf7) O))).
Lemma candidate_1266: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (rev lf7)))).
Lemma candidate_1267: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (add (len l) (len lf7))).
Lemma candidate_1268: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1269: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1270: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l (rev lf7)))).
Lemma candidate_1271: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 (rev l)))).
Lemma candidate_1272: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app l lf7))).
Lemma candidate_1273: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_1274: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_1275: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_1276: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_1277: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_1278: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1279: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1280: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_1281: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_1282: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_1283: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_1284: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_1285: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_1286: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_1287: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_1288: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n (rev lf10)))).
Lemma candidate_1289: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n lf10))).
Lemma candidate_1290: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_1291: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1292: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (app lf10 (rev lf7))) (Cons n Nil)).
Lemma candidate_1293: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (rev (app lf10 (Cons n (rev lf7)))).
Lemma candidate_1294: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n (rev lf10))).
Lemma candidate_1295: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n lf10)).
Lemma candidate_1296: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app lf7 (Cons n Nil)).
Lemma candidate_1297: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq lst (app lf7 (Cons n lf10)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1298: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_1299: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1300: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1301: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_1302: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_1303: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_1304: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app l (Cons O lf7))).
Lemma candidate_1305: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (S (len (app lf7 l))).
Lemma candidate_1306: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons n l))).
Lemma candidate_1307: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (len (app lf7 (Cons O l))).
Lemma candidate_1308: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1309: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1310: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1311: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_1312: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_1313: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_1314: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_1315: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_1316: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_1317: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_1318: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_1319: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_1320: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_1321: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_1322: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_1323: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1324: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_1325: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_1326: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1327: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1328: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_1329: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_1330: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_1331: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_1332: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_1333: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_1334: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (Nat.add (len (rev l)) O) lf8)).
Lemma candidate_1335: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len (rev (rev l))) lf8)).
Lemma candidate_1336: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len (app l Nil)) lf8)).
Lemma candidate_1337: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_1338: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len (rev l)) lf8)).
Lemma candidate_1339: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) lf8)).
Lemma candidate_1340: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1341: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1342: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l (rev lf7)))).
Lemma candidate_1343: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 (rev l)))).
Lemma candidate_1344: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_1345: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1346: forall (n : nat) (lf7 : lst) (l : lst) (lf8 : nat), @eq nat (len (app l (app lf7 (Cons n (Nil))))) (S (add (len l) lf8)).
Lemma candidate_1347: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_1348: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_1349: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_1350: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_1351: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app lf7 (Cons n Nil)).
Lemma candidate_1352: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1353: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_1354: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_1355: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_1356: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_1357: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_1358: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_1359: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_1360: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1361: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_1362: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_1363: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1364: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1365: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_1366: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1367: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1368: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_1369: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_1370: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_1371: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_1372: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_1373: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_1374: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_1375: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_1376: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_1377: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_1378: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_1379: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1380: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_1381: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1382: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1383: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_1384: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_1385: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1386: @eq lst Nil (Nil).
Lemma candidate_1387: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_1388: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1389: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_1390: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_1391: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1392: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1393: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_1394: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_1395: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_1396: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_1397: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_1398: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_1399: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (Nat.add (len (rev l)) O) (len l0))).
Lemma candidate_1400: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len (rev (rev l))) (len l0))).
Lemma candidate_1401: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len (app l Nil)) (len l0))).
Lemma candidate_1402: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (Nat.add (len l) O) (len l0))).
Lemma candidate_1403: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len (rev l)) (len l0))).
Lemma candidate_1404: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len l0))).
Lemma candidate_1405: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len (rev lf7)) O))).
Lemma candidate_1406: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev (rev lf7))))).
Lemma candidate_1407: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (app lf7 Nil)))).
Lemma candidate_1408: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len lf7) O))).
Lemma candidate_1409: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev lf7)))).
Lemma candidate_1410: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len lf7))).
Lemma candidate_1411: forall (n : nat) (lf7 : lst) (l : lst) (l0 : lst), @eq nat (len (app l (app lf7 (Cons n (Nil))))) (S (add (len l) (len l0))).
Lemma candidate_1412: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_1413: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_1414: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l (rev lf7)))).
Lemma candidate_1415: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 (rev l)))).
Lemma candidate_1416: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_1417: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1418: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_1419: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_1420: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_1421: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_1422: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1423: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1424: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_1425: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_1426: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_1427: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_1428: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app lf7 (Cons n Nil)).
Lemma candidate_1429: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_1430: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_1431: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1432: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_1433: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_1434: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1435: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_1436: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_1437: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1438: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1439: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_1440: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_1441: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_1442: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_1443: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_1444: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1445: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1446: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_1447: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_1448: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_1449: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_1450: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_1451: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_1452: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1453: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1454: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_1455: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app l (app lf7 (Cons n Nil))).
Lemma candidate_1456: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1457: @eq lst Nil (Nil).
Lemma candidate_1458: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_1459: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_1460: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_1461: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_1462: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_1463: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_1464: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_1465: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_1466: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_1467: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_1468: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1469: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1470: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1471: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1472: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1473: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1474: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (rev (app lf6 l0))).
Lemma candidate_1475: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (app (rev l0) lf6)).
Lemma candidate_1476: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) (rev lf6)).
Lemma candidate_1477: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_1478: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app lf6 (app l0 (rev l)))).
Lemma candidate_1479: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_1480: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1481: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1482: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1483: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1484: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1485: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1486: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_1487: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_1488: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_1489: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev lf6)).
Lemma candidate_1490: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app lf6 l0)).
Lemma candidate_1491: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) lf6).
Lemma candidate_1492: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_1493: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_1494: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_1495: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_1496: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_1497: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1498: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n (rev lf10)))).
Lemma candidate_1499: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n lf10))).
Lemma candidate_1500: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1501: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1502: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_1503: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_1504: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_1505: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_1506: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_1507: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_1508: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (rev (app lf10 (Cons n l0))).
Lemma candidate_1509: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 lf10)) (Cons n Nil)).
Lemma candidate_1510: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1511: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n (rev lf10))).
Lemma candidate_1512: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n lf10)).
Lemma candidate_1513: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1514: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1515: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1516: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1517: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1518: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1519: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1520: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1521: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1522: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1523: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1524: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1525: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1526: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_1527: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_1528: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_1529: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_1530: forall (n : nat) (l : lst) (lf4 : nat) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n (Nil))))) lf4.
Lemma candidate_1531: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_1532: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_1533: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_1534: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_1535: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1536: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1537: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1538: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1539: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1540: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1541: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1542: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1543: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_1544: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_1545: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).
Lemma candidate_1546: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1547: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1548: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1549: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_1550: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_1551: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1552: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1553: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1554: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1555: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1556: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1557: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1558: @eq lst Nil (Nil).
Lemma candidate_1559: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_1560: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_1561: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_1562: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_1563: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_1564: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_1565: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1566: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1567: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1568: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1569: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1570: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1571: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1572: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1573: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1574: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1575: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1576: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1577: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_1578: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_1579: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_1580: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_1581: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_1582: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_1583: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (rev (app lf6 l0))).
Lemma candidate_1584: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (app (rev l0) lf6)).
Lemma candidate_1585: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) (rev lf6)).
Lemma candidate_1586: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_1587: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app lf6 (app l0 (rev l)))).
Lemma candidate_1588: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_1589: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1590: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1591: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1592: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1593: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1594: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1595: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_1596: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_1597: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_1598: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev lf6)).
Lemma candidate_1599: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app lf6 l0)).
Lemma candidate_1600: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) lf6).
Lemma candidate_1601: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_1602: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_1603: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_1604: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_1605: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_1606: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_1607: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1608: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1609: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1610: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1611: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1612: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1613: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_1614: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1615: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n (rev lf10)))).
Lemma candidate_1616: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n lf10))).
Lemma candidate_1617: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1618: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1619: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_1620: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_1621: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_1622: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_1623: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_1624: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_1625: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (rev (app lf10 (Cons n l0))).
Lemma candidate_1626: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 lf10)) (Cons n Nil)).
Lemma candidate_1627: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1628: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n (rev lf10))).
Lemma candidate_1629: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n lf10)).
Lemma candidate_1630: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1631: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1632: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1633: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1634: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1635: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1636: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1637: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_1638: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_1639: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_1640: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_1641: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_1642: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_1643: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1644: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1645: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1646: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1647: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1648: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1649: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_1650: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_1651: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_1652: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_1653: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_1654: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_1655: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1656: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1657: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1658: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1659: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1660: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1661: forall (n : nat) (l : lst) (l0 : lst) (lf5 : nat), @eq nat (len (app l (app (rev l0) (Cons n (Nil))))) (S lf5).
Lemma candidate_1662: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_1663: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_1664: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_1665: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_1666: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1667: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1668: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1669: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1670: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1671: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1672: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1673: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1674: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_1675: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_1676: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).
Lemma candidate_1677: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1678: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1679: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1680: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_1681: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_1682: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_1683: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_1684: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_1685: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_1686: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_1687: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_1688: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1689: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1690: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1691: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1692: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1693: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1694: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1695: @eq lst Nil (Nil).
Lemma candidate_1696: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_1697: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_1698: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_1699: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_1700: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_1701: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_1702: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1703: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1704: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1705: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1706: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1707: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1708: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l0) (len l))).
Lemma candidate_1709: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l) (len l0))).
Lemma candidate_1710: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 (rev l)))).
Lemma candidate_1711: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l (rev l0)))).
Lemma candidate_1712: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 l))).
Lemma candidate_1713: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l l0))).
Lemma candidate_1714: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1715: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1716: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1717: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1718: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1719: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1720: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_1721: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_1722: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_1723: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_1724: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_1725: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_1726: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (rev (app lf6 l0))).
Lemma candidate_1727: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (app (rev l0) lf6)).
Lemma candidate_1728: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) (rev lf6)).
Lemma candidate_1729: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_1730: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app lf6 (app l0 (rev l)))).
Lemma candidate_1731: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_1732: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1733: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1734: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1735: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1736: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1737: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1738: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_1739: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_1740: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_1741: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev lf6)).
Lemma candidate_1742: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app lf6 l0)).
Lemma candidate_1743: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) lf6).
Lemma candidate_1744: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_1745: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_1746: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_1747: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_1748: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_1749: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_1750: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_1751: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_1752: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_1753: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_1754: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_1755: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_1756: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1757: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1758: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1759: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1760: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1761: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1762: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_1763: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_1764: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 (rev l)))).
Lemma candidate_1765: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l (rev l0)))).
Lemma candidate_1766: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 l))).
Lemma candidate_1767: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1768: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_1769: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1770: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n (rev lf10)))).
Lemma candidate_1771: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n lf10))).
Lemma candidate_1772: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1773: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1774: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_1775: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_1776: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_1777: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_1778: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_1779: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_1780: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (rev (app lf10 (Cons n l0))).
Lemma candidate_1781: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 lf10)) (Cons n Nil)).
Lemma candidate_1782: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1783: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n (rev lf10))).
Lemma candidate_1784: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n lf10)).
Lemma candidate_1785: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1786: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1787: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1788: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1789: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1790: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1791: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1792: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_1793: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_1794: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_1795: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_1796: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_1797: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_1798: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1799: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1800: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1801: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1802: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1803: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1804: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_1805: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_1806: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_1807: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_1808: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_1809: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_1810: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1811: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1812: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1813: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1814: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1815: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1816: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_1817: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_1818: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_1819: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_1820: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_1821: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_1822: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (app (rev (app l0 Nil)) Nil) lf6)))   (S (add lf9 (len l0))).
Lemma candidate_1823: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (app (app (rev l0) Nil) Nil) lf6)))   (S (add lf9 (len l0))).
Lemma candidate_1824: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev (rev (rev l0))) lf6))) (S (add lf9 (len l0))).
Lemma candidate_1825: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev (app l0 Nil)) lf6))) (S (add lf9 (len l0))).
Lemma candidate_1826: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (app (rev l0) Nil) lf6))) (S (add lf9 (len l0))).
Lemma candidate_1827: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len l0))).
Lemma candidate_1828: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add lf9 (Nat.add (len (rev l0)) O))).
Lemma candidate_1829: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len (rev (rev l0))))).
Lemma candidate_1830: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len (app l0 Nil)))).
Lemma candidate_1831: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (Nat.add (len l0) O))).
Lemma candidate_1832: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len (rev l0)))).
Lemma candidate_1833: forall (l : lst) (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add lf9 (len l0))).
Lemma candidate_1834: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l0) (len l))).
Lemma candidate_1835: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l) (len l0))).
Lemma candidate_1836: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 (rev l)))).
Lemma candidate_1837: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l (rev l0)))).
Lemma candidate_1838: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 l))).
Lemma candidate_1839: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l l0))).
Lemma candidate_1840: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_1841: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_1842: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_1843: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_1844: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_1845: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_1846: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1847: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_1848: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1849: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1850: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_1851: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_1852: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (rev (app lf6 l0))).
Lemma candidate_1853: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (app (rev l0) lf6)).
Lemma candidate_1854: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) (rev lf6)).
Lemma candidate_1855: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_1856: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app lf6 (app l0 (rev l)))).
Lemma candidate_1857: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_1858: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1859: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1860: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1861: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1862: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1863: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1864: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1865: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_1866: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_1867: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_1868: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_1869: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_1870: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_1871: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_1872: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_1873: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev lf6)).
Lemma candidate_1874: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app lf6 l0)).
Lemma candidate_1875: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) lf6).
Lemma candidate_1876: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_1877: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_1878: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_1879: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_1880: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_1881: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_1882: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1883: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1884: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1885: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1886: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1887: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1888: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_1889: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_1890: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_1891: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_1892: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_1893: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_1894: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev (app l0 lf10)) (Cons n lf10))))   (S (add lf9 (len l0))).
Lemma candidate_1895: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev (app l0 Nil)) (Cons n lf10))))   (S (add lf9 (len l0))).
Lemma candidate_1896: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (app (rev l0) lf10) (Cons n lf10))))   (S (add lf9 (len l0))).
Lemma candidate_1897: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (app (rev l0) Nil) (Cons n lf10))))   (S (add lf9 (len l0))).
Lemma candidate_1898: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (app lf10 (rev l0)) (Cons n lf10))))   (S (add lf9 (len l0))).
Lemma candidate_1899: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma candidate_1900: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add lf9 (len (app lf10 l0)))).
Lemma candidate_1901: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add lf9 (len (app l0 lf10)))).
Lemma candidate_1902: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add lf9 (len (app l0 Nil)))).
Lemma candidate_1903: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add lf9 (Nat.add (len l0) O))).
Lemma candidate_1904: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add lf9 (len (rev l0)))).
Lemma candidate_1905: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add lf9 (len l0))).
Lemma candidate_1906: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_1907: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_1908: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 (rev l)))).
Lemma candidate_1909: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l (rev l0)))).
Lemma candidate_1910: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 l))).
Lemma candidate_1911: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1912: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_1913: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1914: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n (rev lf10)))).
Lemma candidate_1915: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n lf10))).
Lemma candidate_1916: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1917: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1918: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_1919: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_1920: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_1921: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_1922: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_1923: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_1924: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_1925: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_1926: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_1927: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_1928: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_1929: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_1930: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (rev (app lf10 (Cons n l0))).
Lemma candidate_1931: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 lf10)) (Cons n Nil)).
Lemma candidate_1932: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1933: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n (rev lf10))).
Lemma candidate_1934: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n lf10)).
Lemma candidate_1935: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1936: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_1937: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_1938: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_1939: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_1940: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1941: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1942: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_1943: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1944: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_1945: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_1946: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1947: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_1948: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1949: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_1950: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_1951: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_1952: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_1953: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_1954: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_1955: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_1956: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_1957: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_1958: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_1959: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_1960: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_1961: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_1962: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_1963: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf9 lf8)) (S (add lf9 lf8)).
Lemma candidate_1964: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_1965: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_1966: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1967: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1968: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1969: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1970: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1971: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1972: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_1973: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_1974: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 (rev l)))).
Lemma candidate_1975: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l (rev l0)))).
Lemma candidate_1976: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 l))).
Lemma candidate_1977: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1978: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n (Nil))))) (S (add lf9 lf8)).
Lemma candidate_1979: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_1980: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_1981: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_1982: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_1983: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1984: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons n Nil)).
Lemma candidate_1985: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1986: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1987: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1988: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1989: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1990: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1991: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_1992: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_1993: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).
Lemma candidate_1994: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_1995: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_1996: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_1997: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_1998: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_1999: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_2000: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf9 lf8)).
Lemma candidate_2001: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_2002: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (S lf8)).
Lemma candidate_2003: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_2004: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_2005: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2006: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2007: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2008: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2009: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2010: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2011: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2012: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_2013: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf9 lf8) O).
Lemma candidate_2014: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_2015: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_2016: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_2017: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 lf8).
Lemma candidate_2018: @eq lst Nil (Nil).
Lemma candidate_2019: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_2020: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_2021: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_2022: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_2023: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2024: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2025: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_2026: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_2027: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_2028: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_2029: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_2030: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len l0))) (S (add lf9 (len l0))).
Lemma candidate_2031: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (app (rev (app l0 Nil)) Nil) (Cons n Nil))))   (S (add lf9 (len l0))).
Lemma candidate_2032: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (app (app (rev l0) Nil) Nil) (Cons n Nil))))   (S (add lf9 (len l0))).
Lemma candidate_2033: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev (rev (rev l0))) (Cons n Nil))))   (S (add lf9 (len l0))).
Lemma candidate_2034: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev (app l0 Nil)) (Cons n Nil))))   (S (add lf9 (len l0))).
Lemma candidate_2035: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (app (rev l0) Nil) (Cons n Nil))))   (S (add lf9 (len l0))).
Lemma candidate_2036: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma candidate_2037: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add lf9 (Nat.add (len (rev l0)) O))).
Lemma candidate_2038: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add lf9 (len (rev (rev l0))))).
Lemma candidate_2039: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add lf9 (len (app l0 Nil)))).
Lemma candidate_2040: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add lf9 (Nat.add (len l0) O))).
Lemma candidate_2041: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add lf9 (len (rev l0)))).
Lemma candidate_2042: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma candidate_2043: forall (n : nat) (l : lst) (l0 : lst) (lf9 : nat), @eq nat (len (app l (app (rev l0) (Cons n (Nil))))) (S (add lf9 (len l0))).
Lemma candidate_2044: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_2045: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_2046: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 (rev l)))).
Lemma candidate_2047: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l (rev l0)))).
Lemma candidate_2048: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 l))).
Lemma candidate_2049: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_2050: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_2051: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_2052: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_2053: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add lf9 (S (len l0))).
Lemma candidate_2054: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_2055: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len l0))).
Lemma candidate_2056: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_2057: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_2058: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_2059: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_2060: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_2061: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons n Nil)).
Lemma candidate_2062: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_2063: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_2064: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_2065: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_2066: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2067: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2068: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_2069: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_2070: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).
Lemma candidate_2071: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_2072: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_2073: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_2074: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_2075: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_2076: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2077: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2078: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2079: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2080: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2081: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2082: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2083: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_2084: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_2085: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_2086: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_2087: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_2088: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_2089: @eq lst Nil (Nil).
Lemma candidate_2090: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_2091: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (Nat.add lf9 (len l0)) O).
Lemma candidate_2092: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_2093: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_2094: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_2095: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len l0)).
Lemma candidate_2096: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_2097: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_2098: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_2099: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_2100: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_2101: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_2102: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_2103: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_2104: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_2105: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_2106: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_2107: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_2108: forall (l : lst) (l0 : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (Nat.add (len (rev l)) O) lf8)).
Lemma candidate_2109: forall (l : lst) (l0 : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len (rev (rev l))) lf8)).
Lemma candidate_2110: forall (l : lst) (l0 : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len (app l Nil)) lf8)).
Lemma candidate_2111: forall (l : lst) (l0 : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_2112: forall (l : lst) (l0 : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len (rev l)) lf8)).
Lemma candidate_2113: forall (l : lst) (l0 : lst) (lf8 : nat) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) lf8)).
Lemma candidate_2114: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l0) (len l))).
Lemma candidate_2115: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l) (len l0))).
Lemma candidate_2116: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 (rev l)))).
Lemma candidate_2117: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l (rev l0)))).
Lemma candidate_2118: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 l))).
Lemma candidate_2119: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l l0))).
Lemma candidate_2120: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_2121: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_2122: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_2123: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_2124: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_2125: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_2126: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_2127: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_2128: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_2129: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_2130: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_2131: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_2132: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_2133: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_2134: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_2135: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_2136: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_2137: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_2138: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_2139: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_2140: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_2141: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_2142: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_2143: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_2144: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (rev (app lf6 l0))).
Lemma candidate_2145: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (app (rev l0) lf6)).
Lemma candidate_2146: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) (rev lf6)).
Lemma candidate_2147: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_2148: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app lf6 (app l0 (rev l)))).
Lemma candidate_2149: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_2150: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2151: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2152: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2153: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2154: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2155: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2156: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_2157: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_2158: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_2159: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev lf6)).
Lemma candidate_2160: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app lf6 l0)).
Lemma candidate_2161: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) lf6).
Lemma candidate_2162: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_2163: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_2164: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_2165: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_2166: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2167: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2168: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app lf10 l)) lf8)).
Lemma candidate_2169: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app l lf10)) lf8)).
Lemma candidate_2170: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app l Nil)) lf8)).
Lemma candidate_2171: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_2172: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (rev l)) lf8)).
Lemma candidate_2173: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) lf8)).
Lemma candidate_2174: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_2175: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_2176: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 (rev l)))).
Lemma candidate_2177: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l (rev l0)))).
Lemma candidate_2178: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 l))).
Lemma candidate_2179: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_2180: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_2181: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_2182: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_2183: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_2184: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_2185: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_2186: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_2187: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_2188: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n (rev lf10)))).
Lemma candidate_2189: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n lf10))).
Lemma candidate_2190: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_2191: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_2192: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_2193: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_2194: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_2195: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_2196: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_2197: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_2198: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_2199: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_2200: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_2201: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_2202: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_2203: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_2204: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_2205: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_2206: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_2207: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_2208: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_2209: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_2210: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (rev (app lf10 (Cons n l0))).
Lemma candidate_2211: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 lf10)) (Cons n Nil)).
Lemma candidate_2212: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_2213: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n (rev lf10))).
Lemma candidate_2214: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n lf10)).
Lemma candidate_2215: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n Nil)).
Lemma candidate_2216: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_2217: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_2218: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_2219: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_2220: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_2221: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_2222: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_2223: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_2224: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_2225: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_2226: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2227: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2228: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2229: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2230: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2231: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2232: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2233: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2234: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_2235: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_2236: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_2237: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_2238: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_2239: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_2240: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_2241: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_2242: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_2243: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_2244: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_2245: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_2246: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (Nat.add (len (rev l)) O) (len l0))).
Lemma candidate_2247: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (len (rev (rev l))) (len l0))).
Lemma candidate_2248: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len (app l Nil)) (len l0))).
Lemma candidate_2249: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (Nat.add (len l) O) (len l0))).
Lemma candidate_2250: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len (rev l)) (len l0))).
Lemma candidate_2251: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma candidate_2252: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (app (rev (app l0 Nil)) Nil) lf6)))   (S (add (len l) (len l0))).
Lemma candidate_2253: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (app (app (rev l0) Nil) Nil) lf6)))   (S (add (len l) (len l0))).
Lemma candidate_2254: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev (rev (rev l0))) lf6)))   (S (add (len l) (len l0))).
Lemma candidate_2255: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev (app l0 Nil)) lf6))) (S (add (len l) (len l0))).
Lemma candidate_2256: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (app (rev l0) Nil) lf6))) (S (add (len l) (len l0))).
Lemma candidate_2257: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma candidate_2258: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (len l) (Nat.add (len (rev l0)) O))).
Lemma candidate_2259: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (len l) (len (rev (rev l0))))).
Lemma candidate_2260: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len (app l0 Nil)))).
Lemma candidate_2261: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6)))   (S (add (len l) (Nat.add (len l0) O))).
Lemma candidate_2262: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len (rev l0)))).
Lemma candidate_2263: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (add (len l) (len l0))).
Lemma candidate_2264: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l0) (len l))).
Lemma candidate_2265: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (Nat.add (len l) (len l0))).
Lemma candidate_2266: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 (rev l)))).
Lemma candidate_2267: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l (rev l0)))).
Lemma candidate_2268: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l0 l))).
Lemma candidate_2269: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (S (len (app l l0))).
Lemma candidate_2270: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_2271: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_2272: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_2273: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_2274: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_2275: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_2276: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_2277: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (Cons O l0))).
Lemma candidate_2278: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_2279: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_2280: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l0) (S (len l))).
Lemma candidate_2281: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (Nat.add (len l) (S (len l0))).
Lemma candidate_2282: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_2283: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_2284: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_2285: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_2286: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_2287: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_2288: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (rev (app lf6 l0))).
Lemma candidate_2289: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app l (app (rev l0) lf6)).
Lemma candidate_2290: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) (rev lf6)).
Lemma candidate_2291: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_2292: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app lf6 (app l0 (rev l)))).
Lemma candidate_2293: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_2294: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2295: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2296: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2297: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2298: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2299: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2300: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_2301: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_2302: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_2303: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_2304: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_2305: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_2306: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_2307: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_2308: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_2309: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev lf6)).
Lemma candidate_2310: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app lf6 l0)).
Lemma candidate_2311: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) lf6).
Lemma candidate_2312: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_2313: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_2314: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_2315: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_2316: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_2317: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_2318: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_2319: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_2320: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_2321: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_2322: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2323: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2324: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app lf10 l)) (len l0))).
Lemma candidate_2325: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app l lf10)) (len l0))).
Lemma candidate_2326: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app l Nil)) (len l0))).
Lemma candidate_2327: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (Nat.add (len l) O) (len l0))).
Lemma candidate_2328: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (rev l)) (len l0))).
Lemma candidate_2329: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma candidate_2330: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_2331: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_2332: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_2333: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_2334: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_2335: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_2336: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev (app l0 lf10)) (Cons n lf10))))   (S (add (len l) (len l0))).
Lemma candidate_2337: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev (app l0 Nil)) (Cons n lf10))))   (S (add (len l) (len l0))).
Lemma candidate_2338: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (app (rev l0) lf10) (Cons n lf10))))   (S (add (len l) (len l0))).
Lemma candidate_2339: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (app (rev l0) Nil) (Cons n lf10))))   (S (add (len l) (len l0))).
Lemma candidate_2340: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (app lf10 (rev l0)) (Cons n lf10))))   (S (add (len l) (len l0))).
Lemma candidate_2341: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma candidate_2342: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app lf10 l0)))).
Lemma candidate_2343: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app l0 lf10)))).
Lemma candidate_2344: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app l0 Nil)))).
Lemma candidate_2345: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (Nat.add (len l0) O))).
Lemma candidate_2346: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (rev l0)))).
Lemma candidate_2347: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (add (len l) (len l0))).
Lemma candidate_2348: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_2349: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_2350: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 (rev l)))).
Lemma candidate_2351: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l (rev l0)))).
Lemma candidate_2352: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l0 l))).
Lemma candidate_2353: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_2354: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_2355: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_2356: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_2357: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_2358: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_2359: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l) (S (len l0))).
Lemma candidate_2360: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_2361: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_2362: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n (rev lf10)))).
Lemma candidate_2363: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n lf10))).
Lemma candidate_2364: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_2365: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_2366: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app lf10 (Cons n Nil)).
Lemma candidate_2367: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev (rev lf10)) (Cons n Nil)).
Lemma candidate_2368: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (app (rev lf10) (Cons n Nil)).
Lemma candidate_2369: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n (rev lf10)).
Lemma candidate_2370: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n lf10).
Lemma candidate_2371: forall (n : nat) (lf10 : lst), @eq lst (Cons n lf10) (Cons n Nil).
Lemma candidate_2372: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_2373: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_2374: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_2375: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_2376: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_2377: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_2378: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (rev (app lf10 (Cons n l0))).
Lemma candidate_2379: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 lf10)) (Cons n Nil)).
Lemma candidate_2380: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_2381: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n (rev lf10))).
Lemma candidate_2382: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n lf10)).
Lemma candidate_2383: forall (n : nat) (l0 : lst) (lf10 : lst), @eq lst (app (rev l0) (Cons n lf10)) (app (rev l0) (Cons n Nil)).
Lemma candidate_2384: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l0 (Cons O l))).
Lemma candidate_2385: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (S (len (app l l0))).
Lemma candidate_2386: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons n l0))).
Lemma candidate_2387: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10)))) (len (app l (Cons O l0))).
Lemma candidate_2388: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2389: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2390: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2391: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2392: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2393: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2394: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2395: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2396: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_2397: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_2398: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_2399: forall (l0 : lst), @eq nat (len l0) (Nat.add (len l0) O).
Lemma candidate_2400: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_2401: forall (l0 : lst), @eq nat (len l0) (len l0).
Lemma candidate_2402: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_2403: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l) (len l0)).
Lemma candidate_2404: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_2405: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_2406: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_2407: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_2408: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add (len l) lf8)) (S (add (len l) lf8)).
Lemma candidate_2409: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_2410: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_2411: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_2412: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_2413: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_2414: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_2415: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_2416: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_2417: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_2418: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2419: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2420: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add (Nat.add (len (rev l)) O) lf8)).
Lemma candidate_2421: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add (len (rev (rev l))) lf8)).
Lemma candidate_2422: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add (len (app l Nil)) lf8)).
Lemma candidate_2423: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (add (Nat.add (len l) O) lf8)).
Lemma candidate_2424: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len (rev l)) lf8)).
Lemma candidate_2425: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (add (len l) lf8)).
Lemma candidate_2426: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_2427: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_2428: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 (rev l)))).
Lemma candidate_2429: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l (rev l0)))).
Lemma candidate_2430: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 l))).
Lemma candidate_2431: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_2432: forall (n : nat) (l : lst) (l0 : lst) (lf8 : nat), @eq nat (len (app l (app (rev l0) (Cons n (Nil))))) (S (add (len l) lf8)).
Lemma candidate_2433: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_2434: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_2435: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_2436: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_2437: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_2438: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons n Nil)).
Lemma candidate_2439: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_2440: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_2441: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_2442: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_2443: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_2444: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2445: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_2446: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_2447: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).
Lemma candidate_2448: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_2449: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app l (app (rev l0) (Cons n Nil))).
Lemma candidate_2450: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_2451: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add (len l) lf8)).
Lemma candidate_2452: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_2453: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_2454: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_2455: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (S lf8)).
Lemma candidate_2456: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_2457: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_2458: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_2459: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_2460: forall (l : lst), @eq nat (len l) (Nat.add (len l) O).
Lemma candidate_2461: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_2462: forall (l : lst), @eq nat (len l) (len l).
Lemma candidate_2463: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_2464: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_2465: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_2466: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_2467: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) lf8).
Lemma candidate_2468: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_2469: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_2470: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_2471: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_2472: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_2473: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_2474: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_2475: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_2476: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_2477: forall (l0 : lst), @eq lst (rev l0) (rev l0).
Lemma candidate_2478: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 4744 seconds
Duplicates removed: 2023
Filtered by Quickchick: 239
Filtered by script: 45
Remaining: 171

Lemmas: 
Lemma candidate_102: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_64: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_42: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_108: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_62: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1484: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_1483: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_130: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_129: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_61: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_40: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_10: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_9: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_1482: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_106: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_39: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_105: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_101: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_26: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_3: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_118: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_116: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_115: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_60: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_125: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_117: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_114: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_38: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1481: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1480: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_572: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_516: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_514: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_104: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_515: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_185: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_184: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_182: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_128: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_127: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_126: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_99: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_98: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_71: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_20: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_18: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_8: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_7: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_6: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_123: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_122: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_48: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_1486: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_511: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_100: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_25: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_24: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_22: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_2: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_121: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_120: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_97: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_96: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_69: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_66: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_1488: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_368: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_366: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_335: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_334: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_333: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_78: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_76: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_59: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_57: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_47: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_44: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_1487: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_571: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_220: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_219: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_216: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_94: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_36: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_32: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_181: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_180: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_68: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_67: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_17: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_16: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_369: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_367: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_79: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_77: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_1479: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_508: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_332: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_56: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_46: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_562: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_560: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_523: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_520: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_218: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_34: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_564: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_371: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_370: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_80: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_944: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_566: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1471: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1470: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1468: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_331: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_55: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_577: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_217: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_33: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_1976: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 l))).
Lemma candidate_1538: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_568: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_567: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_565: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_536: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_1410: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len lf7))).
Lemma candidate_943: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 (rev l)))).
Lemma candidate_942: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l (rev lf7)))).
Lemma candidate_1535: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1533: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_1477: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_1540: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1539: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1537: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1534: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_1532: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_1531: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_561: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_559: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_1975: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l (rev l0)))).
Lemma candidate_1974: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 (rev l)))).
Lemma candidate_941: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_940: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_570: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_569: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1409: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev lf7)))).
Lemma candidate_1546: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_574: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_1973: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_1972: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_1542: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_1541: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1496: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_579: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1407: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (app lf7 Nil)))).
Lemma candidate_1408: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len lf7) O))).
Lemma candidate_1406: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev (rev lf7))))).
Lemma candidate_1263: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf7 lf10)))).
Lemma candidate_1262: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf10 lf7)))).
Lemma candidate_1548: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_2343: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app l0 lf10)))).
Lemma candidate_2342: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app lf10 l0)))).
Lemma candidate_2325: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app l lf10)) (len l0))).
Lemma candidate_2324: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app lf10 l)) (len l0))).
Lemma candidate_1545: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).
Lemma candidate_1405: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len (rev lf7)) O))).
Lemma candidate_1544: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_1543: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_576: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_575: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
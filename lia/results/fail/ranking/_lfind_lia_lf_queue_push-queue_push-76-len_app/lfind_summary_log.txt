LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_queue_push-queue_push-76-len_app

Number of Lemmas: 2478
Number of Lemmas (after duplicates removed): 455
Number of Lemmas (after QuickChick used to filter): 216
* Number of Candidate Lemmas: 171

Time until ranking: 4746
Time to complete: 11618

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 4

Lemma candidate_1973: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_1542: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2342: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app lf10 l0)))).
Lemma candidate_2324: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app lf10 l)) (len l0))).

Category 3 (provable):
Count = 83

Lemma candidate_102: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_62: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1483: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_130: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_129: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_40: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_10: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_9: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_106: forall (lf2 : lst), @eq nat (len lf2) (len (app lf2 Nil)).
Lemma candidate_101: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_26: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_3: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_115: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l Nil) lf3).
Lemma candidate_125: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 l)).
Lemma candidate_572: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_516: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_514: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_185: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_184: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_182: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_128: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_127: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_126: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_99: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_98: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_71: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_20: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_18: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_8: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_7: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_6: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_48: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_511: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app (app l lf7) lf6).
Lemma candidate_100: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_25: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_24: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_22: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_2: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_121: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_120: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (Nat.add (len l) (len lf3)).
Lemma candidate_368: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_366: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_335: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_334: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_333: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_78: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_76: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_59: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_57: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_571: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_220: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_219: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_216: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_94: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_36: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_32: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_181: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_180: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_68: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_67: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_17: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_16: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_369: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_367: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_79: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_77: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_1479: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (app (app l (rev l0)) lf6).
Lemma candidate_46: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_562: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_560: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_371: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_370: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_80: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_331: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_55: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_577: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil))) (app (app l lf7) (Cons n Nil)).
Lemma candidate_217: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_33: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_1532: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_1546: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l (rev l0)) (Cons n Nil)).
Lemma candidate_574: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app lf7 (Cons n Nil))).
Lemma candidate_1496: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq lst (app l (app (rev l0) (Cons n lf10)))   (app (app l (rev l0)) (Cons n lf10)).
Lemma candidate_1545: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (app l Nil) (app (rev l0) (Cons n Nil))).

Category 3 (not provable):
Count = 84

Lemma candidate_64: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_42: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_108: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_1484: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_61: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1482: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_39: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_105: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_118: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (app lf3 Nil)).
Lemma candidate_116: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (app l lf3) Nil).
Lemma candidate_60: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_117: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app l (rev (rev lf3))).
Lemma candidate_114: forall (lf3 : lst) (l : lst), @eq lst (app l lf3) (app (rev (rev l)) lf3).
Lemma candidate_38: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1481: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1480: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_104: forall (lf2 : lst), @eq nat (len lf2) (Nat.add (len (rev lf2)) O).
Lemma candidate_515: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_123: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app lf3 (rev l))).
Lemma candidate_122: forall (lf3 : lst) (l : lst), @eq nat (len (app l lf3)) (len (app l (rev lf3))).
Lemma candidate_1486: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_97: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_96: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_69: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_66: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_1488: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_47: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_44: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_1487: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_508: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq lst (app l (app lf7 lf6)) (app l (app lf7 (app lf6 Nil))).
Lemma candidate_332: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_56: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_523: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_520: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (len (app l (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_218: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_34: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_564: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_944: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_566: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_1471: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1470: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1468: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (len (app l (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1976: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 l))).
Lemma candidate_1538: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_568: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_567: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_565: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_536: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq lst (app l (app lf7 (Cons n lf10))) (app (app l lf7) (Cons n lf10)).
Lemma candidate_1410: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (add (len l) (len lf7))).
Lemma candidate_943: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app lf7 (rev l)))).
Lemma candidate_942: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (len (app l (rev lf7)))).
Lemma candidate_1535: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1533: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_1477: forall (l : lst) (l0 : lst) (lf6 : lst), @eq lst (app l (app (rev l0) lf6)) (rev (app (rev lf6) (app l0 (rev l)))).
Lemma candidate_1540: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons O l0))).
Lemma candidate_1539: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l (Cons n l0))).
Lemma candidate_1537: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (len (app l0 (Cons O l))).
Lemma candidate_1534: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_1531: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_561: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_559: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_1975: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l (rev l0)))).
Lemma candidate_1974: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil)))) (S (len (app l0 (rev l)))).
Lemma candidate_941: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) (len l))).
Lemma candidate_940: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (S (Nat.add (len l) (len lf7))).
Lemma candidate_570: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S (len l))).
Lemma candidate_569: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil)))) (Nat.add (len l) (S (len lf7))).
Lemma candidate_1409: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev lf7)))).
Lemma candidate_1972: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_1541: forall (n : nat) (l : lst) (l0 : lst), @eq nat (len (app l (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_579: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app l (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_1407: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (app lf7 Nil)))).
Lemma candidate_1408: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len lf7) O))).
Lemma candidate_1406: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev (rev lf7))))).
Lemma candidate_1263: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf7 lf10)))).
Lemma candidate_1262: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (len (app l (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf10 lf7)))).
Lemma candidate_1548: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (app l0 (rev l))) (Cons n Nil)).
Lemma candidate_2343: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app l0 lf10)))).
Lemma candidate_2325: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (len (app l (app (rev l0) (Cons n lf10))))   (S (add (len (app l lf10)) (len l0))).
Lemma candidate_1405: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (len (app l (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len (rev lf7)) O))).
Lemma candidate_1544: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev l)) (app (rev l0) (Cons n Nil))).
Lemma candidate_1543: forall (n : nat) (l : lst) (l0 : lst), @eq lst (app l (app (rev l0) (Cons n Nil)))   (app (rev (rev (app l (rev l0)))) (Cons n Nil)).
Lemma candidate_576: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (app l Nil) (app (rev (rev lf7)) (Cons n Nil))).
Lemma candidate_575: forall (n : nat) (lf7 : lst) (l : lst), @eq lst (app l (app lf7 (Cons n Nil)))   (app (rev (rev l)) (app (rev (rev lf7)) (Cons n Nil))).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_tree_insert_all-tree_insert_all-70-helper

Number of Lemmas: 41
Number of Lemmas (after duplicates removed): 32
Number of Lemmas (after QuickChick used to filter): 32
* Number of Candidate Lemmas: 24

Time until ranking: 609
Time to complete: 2309

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 2

Lemma candidate_2: forall (n : nat) (lf4 : tree), le (tsize lf4) (tsize (tinsert lf4 n)).
Lemma candidate_17: forall (n : nat) (l : lst) (t : tree), @eq nat (tsize (tinsert (tinsert_all t l) n)) (S (tsize (tinsert_all t l))).

Category 3 (provable):
Count = 5

Lemma candidate_3: forall (lf3 : nat), le lf3 (S lf3).
Lemma candidate_30: forall (lf4 : tree), le (tsize lf4) (S (tsize lf4)).
Lemma candidate_26: forall (lf4 : tree), le (tsize lf4) (S (Nat.add (tsize lf4) O)).
Lemma candidate_12: forall (n : nat) (lf4 : tree), @eq nat (tsize (tinsert lf4 n)) (S (tsize lf4)).
Lemma candidate_36: forall (l : lst) (t : tree), le (tsize (tinsert_all t l)) (S (tsize (tinsert_all t l))).

Category 3 (not provable):
Count = 17

Lemma candidate_29: forall (lf4 : tree), le (tsize lf4) (tsize (tinsert lf4 O)).
Lemma candidate_27: forall (lf4 : tree), le (tsize lf4) (tsize (tinsert lf4 (S O))).
Lemma candidate_28: forall (lf4 : tree), le (tsize lf4) (tsize (tinsert lf4 (tsize lf4))).
Lemma candidate_25: forall (lf4 : tree), le (tsize lf4) (tsize (tinsert lf4 (S (tsize lf4)))).
Lemma candidate_11: forall (n : nat) (lf4 : tree), @eq nat (tsize (tinsert lf4 n)) (tsize (tinsert lf4 O)).
Lemma candidate_8: forall (n : nat) (lf4 : tree), @eq nat (tsize (tinsert lf4 n)) (tsize (tinsert lf4 (S O))).
Lemma candidate_7: forall (n : nat) (lf4 : tree), @eq nat (tsize (tinsert lf4 n)) (tsize (tinsert lf4 (S n))).
Lemma candidate_9: forall (n : nat) (lf4 : tree), @eq nat (tsize (tinsert lf4 n)) (tsize (tinsert lf4 (tsize lf4))).
Lemma candidate_38: forall (l : lst) (t : tree), le (tsize (tinsert_all t l)) (tsize (tinsert (tinsert_all t l) O)).
Lemma candidate_35: forall (l : lst) (t : tree), le (tsize (tinsert_all t l)) (tsize (tinsert_all (tinsert t O) l)).
Lemma candidate_33: forall (l : lst) (t : tree), le (tsize (tinsert_all t l)) (tsize (tinsert_all (tinsert t (S O)) l)).
Lemma candidate_34: forall (l : lst) (t : tree), le (tsize (tinsert_all t l)) (tsize (tinsert_all (tinsert t (tsize t)) l)).
Lemma candidate_37: forall (l : lst) (t : tree), le (tsize (tinsert_all t l))   (S (Nat.add (tsize t) (tsize (tinsert_all Leaf l)))).
Lemma candidate_20: forall (n : nat) (l : lst) (t : tree), @eq nat (tsize (tinsert (tinsert_all t l) n))   (tsize (tinsert (tinsert_all t l) O)).
Lemma candidate_16: forall (n : nat) (l : lst) (t : tree), @eq nat (tsize (tinsert (tinsert_all t l) n))   (tsize (tinsert_all (tinsert t O) l)).
Lemma candidate_15: forall (n : nat) (l : lst) (t : tree), @eq nat (tsize (tinsert (tinsert_all t l) n))   (tsize (tinsert_all (tinsert t n) l)).
Lemma candidate_18: forall (n : nat) (l : lst) (t : tree), @eq nat (tsize (tinsert (tinsert_all t l) n))   (S (Nat.add (tsize t) (tsize (tinsert_all Leaf l)))).
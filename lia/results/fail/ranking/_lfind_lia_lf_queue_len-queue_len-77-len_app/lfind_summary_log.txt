LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_queue_len-queue_len-77-len_app

Number of Lemmas: 545
Number of Lemmas (after duplicates removed): 149
Number of Lemmas (after QuickChick used to filter): 114
* Number of Candidate Lemmas: 90

Time until ranking: 1079
Time to complete: 5157

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 2

Lemma candidate_120: forall (l2 : lst) (l1 : lst), @eq nat (add (len l1) (len l2)) (len (app l1 (rev l2))).
Lemma candidate_228: forall (l2 : lst) (l1 : lst), @eq nat (len (app l1 (rev l2))) (Nat.add (len l1) (len l2)).

Category 3 (provable):
Count = 41

Lemma candidate_4: forall (lf1 : nat), @eq nat (Nat.add lf1 O) lf1.
Lemma candidate_225: forall (l2 : lst), @eq lst (rev l2) (rev (app l2 Nil)).
Lemma candidate_98: forall (l2 : lst), @eq nat (len l2) (len (app l2 Nil)).
Lemma candidate_34: forall (l1 : lst), @eq nat (len l1) (len (app l1 Nil)).
Lemma candidate_8: forall (lf3 : lst), @eq nat (len lf3) (len (app lf3 Nil)).
Lemma candidate_43: forall (lf4 : nat) (lf6 : nat), @eq nat (Nat.add lf4 lf6) (add lf6 lf4).
Lemma candidate_21: forall (lf4 : nat) (lf6 : nat), @eq nat (add lf6 lf4) (Nat.add lf4 lf6).
Lemma candidate_13: forall (lf2 : nat), @eq nat lf2 (Nat.add (Nat.add lf2 O) O).
Lemma candidate_3: forall (lf1 : nat), @eq nat (Nat.add (Nat.add lf1 O) O) lf1.
Lemma candidate_207: forall (lf5 : lst) (l1 : lst), @eq lst (app l1 lf5) (app (app l1 Nil) lf5).
Lemma candidate_165: forall (l2 : lst) (l1 : lst), @eq nat (len (app l2 l1)) (add (len l1) (len l2)).
Lemma candidate_164: forall (l2 : lst) (l1 : lst), @eq nat (len (app l1 l2)) (add (len l1) (len l2)).
Lemma candidate_134: forall (l2 : lst) (lf6 : nat), @eq nat (Nat.add (len l2) lf6) (add lf6 (len l2)).
Lemma candidate_123: forall (l2 : lst) (l1 : lst), @eq nat (add (len l1) (len l2)) (len (app l2 l1)).
Lemma candidate_122: forall (l2 : lst) (l1 : lst), @eq nat (add (len l1) (len l2)) (len (app l1 l2)).
Lemma candidate_106: forall (l2 : lst) (lf6 : nat), @eq nat (add lf6 (len l2)) (Nat.add (len l2) lf6).
Lemma candidate_67: forall (lf4 : nat) (l1 : lst), @eq nat (Nat.add lf4 (len l1)) (add (len l1) lf4).
Lemma candidate_31: forall (lf4 : nat) (l1 : lst), @eq nat (add (len l1) lf4) (Nat.add lf4 (len l1)).
Lemma candidate_437: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (add (len l1) (len lf5)).
Lemma candidate_41: forall (lf4 : nat) (lf6 : nat), @eq nat (Nat.add lf4 (Nat.add lf6 O)) (add lf6 lf4).
Lemma candidate_40: forall (lf4 : nat) (lf6 : nat), @eq nat (Nat.add lf6 (Nat.add lf4 O)) (add lf6 lf4).
Lemma candidate_39: forall (lf4 : nat) (lf6 : nat), @eq nat (Nat.add (Nat.add lf4 lf6) O) (add lf6 lf4).
Lemma candidate_38: forall (lf4 : nat) (lf6 : nat), @eq nat (Nat.add (Nat.add lf6 lf4) O) (add lf6 lf4).
Lemma candidate_19: forall (lf4 : nat) (lf6 : nat), @eq nat (add lf6 lf4) (Nat.add lf4 (Nat.add lf6 O)).
Lemma candidate_18: forall (lf4 : nat) (lf6 : nat), @eq nat (add lf6 lf4) (Nat.add lf6 (Nat.add lf4 O)).
Lemma candidate_17: forall (lf4 : nat) (lf6 : nat), @eq nat (add lf6 lf4) (Nat.add (Nat.add lf4 lf6) O).
Lemma candidate_12: forall (lf2 : nat), @eq nat lf2 (Nat.add (Nat.add (Nat.add lf2 O) O) O).
Lemma candidate_2: forall (lf1 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf1 O) O) O) lf1.
Lemma candidate_217: forall (l2 : lst) (l1 : lst), @eq lst (app l1 (rev l2)) (app (app l1 Nil) (rev l2)).
Lemma candidate_201: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (Nat.add (len lf5) (len l1)).
Lemma candidate_200: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (Nat.add (len l1) (len lf5)).
Lemma candidate_161: forall (l2 : lst) (l1 : lst), @eq nat (Nat.add (len l2) (len l1)) (add (len l1) (len l2)).
Lemma candidate_119: forall (l2 : lst) (l1 : lst), @eq nat (add (len l1) (len l2)) (Nat.add (len l2) (len l1)).
Lemma candidate_132: forall (l2 : lst) (lf6 : nat), @eq nat (Nat.add (len l2) (Nat.add lf6 O)) (add lf6 (len l2)).
Lemma candidate_131: forall (l2 : lst) (lf6 : nat), @eq nat (Nat.add (Nat.add lf6 (len l2)) O) (add lf6 (len l2)).
Lemma candidate_104: forall (l2 : lst) (lf6 : nat), @eq nat (add lf6 (len l2)) (Nat.add (len l2) (Nat.add lf6 O)).
Lemma candidate_64: forall (lf4 : nat) (l1 : lst), @eq nat (Nat.add (len l1) (Nat.add lf4 O)) (add (len l1) lf4).
Lemma candidate_63: forall (lf4 : nat) (l1 : lst), @eq nat (Nat.add (Nat.add lf4 (len l1)) O) (add (len l1) lf4).
Lemma candidate_28: forall (lf4 : nat) (l1 : lst), @eq nat (add (len l1) lf4) (Nat.add (len l1) (Nat.add lf4 O)).
Lemma candidate_27: forall (lf4 : nat) (l1 : lst), @eq nat (add (len l1) lf4) (Nat.add (Nat.add lf4 (len l1)) O).
Lemma candidate_435: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (add (len l1) (Nat.add (len lf5) O)).

Category 3 (not provable):
Count = 47

Lemma candidate_100: forall (l2 : lst), @eq nat (len l2) (len (rev l2)).
Lemma candidate_36: forall (l1 : lst), @eq nat (len l1) (len (rev l1)).
Lemma candidate_10: forall (lf3 : lst), @eq nat (len lf3) (len (rev lf3)).
Lemma candidate_226: forall (l2 : lst), @eq lst (rev l2) (app (rev l2) Nil).
Lemma candidate_224: forall (l2 : lst), @eq lst (rev l2) (rev (rev (rev l2))).
Lemma candidate_97: forall (l2 : lst), @eq nat (len l2) (len (rev (rev l2))).
Lemma candidate_33: forall (l1 : lst), @eq nat (len l1) (len (rev (rev l1))).
Lemma candidate_7: forall (lf3 : lst), @eq nat (len lf3) (len (rev (rev lf3))).
Lemma candidate_210: forall (lf5 : lst) (l1 : lst), @eq lst (app l1 lf5) (app l1 (app lf5 Nil)).
Lemma candidate_208: forall (lf5 : lst) (l1 : lst), @eq lst (app l1 lf5) (app (app l1 lf5) Nil).
Lemma candidate_96: forall (l2 : lst), @eq nat (len l2) (Nat.add (len (rev l2)) O).
Lemma candidate_32: forall (l1 : lst), @eq nat (len l1) (Nat.add (len (rev l1)) O).
Lemma candidate_223: forall (l2 : lst), @eq lst (rev l2) (app (app (rev l2) Nil) Nil).
Lemma candidate_222: forall (l2 : lst), @eq lst (rev l2) (app (rev (app l2 Nil)) Nil).
Lemma candidate_209: forall (lf5 : lst) (l1 : lst), @eq lst (app l1 lf5) (app l1 (rev (rev lf5))).
Lemma candidate_206: forall (lf5 : lst) (l1 : lst), @eq lst (app l1 lf5) (app (rev (rev l1)) lf5).
Lemma candidate_205: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (len (app lf5 l1)).
Lemma candidate_6: forall (lf3 : lst), @eq nat (len lf3) (Nat.add (len (rev lf3)) O).
Lemma candidate_233: forall (l2 : lst) (l1 : lst), @eq nat (len (app l1 (rev l2))) (len (app l2 l1)).
Lemma candidate_232: forall (l2 : lst) (l1 : lst), @eq nat (len (app l1 (rev l2))) (len (app l1 l2)).
Lemma candidate_220: forall (l2 : lst) (l1 : lst), @eq lst (app l1 (rev l2)) (rev (app l2 (rev l1))).
Lemma candidate_203: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (len (app lf5 (rev l1))).
Lemma candidate_202: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (len (app l1 (rev lf5))).
Lemma candidate_219: forall (l2 : lst) (l1 : lst), @eq lst (app l1 (rev l2)) (app (app l1 (rev l2)) Nil).
Lemma candidate_231: forall (l2 : lst) (l1 : lst), @eq nat (len (app l1 (rev l2))) (len (app l2 (rev l1))).
Lemma candidate_218: forall (l2 : lst) (l1 : lst), @eq lst (app l1 (rev l2)) (rev (rev (app l1 (rev l2)))).
Lemma candidate_216: forall (l2 : lst) (l1 : lst), @eq lst (app l1 (rev l2)) (app (rev (rev l1)) (rev l2)).
Lemma candidate_163: forall (l2 : lst) (l1 : lst), @eq nat (len (app l2 (rev l1))) (add (len l1) (len l2)).
Lemma candidate_133: forall (l2 : lst) (lf6 : nat), @eq nat (Nat.add lf6 (len (rev l2))) (add lf6 (len l2)).
Lemma candidate_130: forall (l2 : lst) (lf6 : nat), @eq nat (Nat.add (len (rev l2)) lf6) (add lf6 (len l2)).
Lemma candidate_121: forall (l2 : lst) (l1 : lst), @eq nat (add (len l1) (len l2)) (len (app l2 (rev l1))).
Lemma candidate_105: forall (l2 : lst) (lf6 : nat), @eq nat (add lf6 (len l2)) (Nat.add lf6 (len (rev l2))).
Lemma candidate_102: forall (l2 : lst) (lf6 : nat), @eq nat (add lf6 (len l2)) (Nat.add (len (rev l2)) lf6).
Lemma candidate_65: forall (lf4 : nat) (l1 : lst), @eq nat (Nat.add lf4 (len (rev l1))) (add (len l1) lf4).
Lemma candidate_62: forall (lf4 : nat) (l1 : lst), @eq nat (Nat.add (len (rev l1)) lf4) (add (len l1) lf4).
Lemma candidate_29: forall (lf4 : nat) (l1 : lst), @eq nat (add (len l1) lf4) (Nat.add lf4 (len (rev l1))).
Lemma candidate_26: forall (lf4 : nat) (l1 : lst), @eq nat (add (len l1) lf4) (Nat.add (len (rev l1)) lf4).
Lemma candidate_436: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (add (len l1) (len (rev lf5))).
Lemma candidate_229: forall (l2 : lst) (l1 : lst), @eq nat (len (app l1 (rev l2))) (Nat.add (len l2) (len l1)).
Lemma candidate_460: forall (l2 : lst) (l1 : lst), @eq nat (len (rev (app l2 (rev l1)))) (add (len l1) (len l2)).
Lemma candidate_434: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (add (len l1) (len (app lf5 Nil))).
Lemma candidate_433: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (add (len l1) (len (rev (rev lf5)))).
Lemma candidate_459: forall (l2 : lst) (l1 : lst), @eq nat (len (app (app l1 (rev l2)) Nil)) (add (len l1) (len l2)).
Lemma candidate_457: forall (l2 : lst) (l1 : lst), @eq nat (len (app (app l1 Nil) (rev l2))) (add (len l1) (len l2)).
Lemma candidate_458: forall (l2 : lst) (l1 : lst), @eq nat (len (rev (rev (app l1 (rev l2))))) (add (len l1) (len l2)).
Lemma candidate_456: forall (l2 : lst) (l1 : lst), @eq nat (len (app (rev (rev l1)) (rev l2))) (add (len l1) (len l2)).
Lemma candidate_432: forall (lf5 : lst) (l1 : lst), @eq nat (len (app l1 lf5)) (add (len l1) (Nat.add (len (rev lf5)) O)).
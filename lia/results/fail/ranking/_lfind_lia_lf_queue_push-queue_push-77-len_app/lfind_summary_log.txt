LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_queue_push-queue_push-77-len_app

Number of Lemmas: 3084
Number of Lemmas (after duplicates removed): 464
Number of Lemmas (after QuickChick used to filter): 289
* Number of Candidate Lemmas: 245

Time until ranking: 6440
Time to complete: 13217

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 13

Lemma candidate_1856: forall (l0 : lst) (lf6 : lst), @eq nat (len (app (rev l0) lf6)) (len (app lf6 l0)).
Lemma candidate_1933: forall (n : nat) (l0 : lst), @eq nat (len (app (rev l0) (Cons n Nil))) (S (len l0)).
Lemma candidate_2: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil)))) (S (add lf9 (len l0))).
Lemma candidate_1894: forall (n : nat) (l0 : lst) (lf10 : lst), @eq nat (len (app (rev l0) (Cons n lf10))) (Nat.add (len lf10) (S (len l0))).
Lemma candidate_1927: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (S (Nat.add lf9 (len l0))).
Lemma candidate_1925: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (Nat.add lf9 (S (len l0))).
Lemma candidate_1865: forall (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (add lf9 (len (app (rev l0) lf6)))   (Nat.add (len lf6) (Nat.add lf9 (len l0))).
Lemma candidate_3021: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l) (len l0))).
Lemma candidate_2577: forall (n : nat) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app (rev l0) (Cons n lf10))))   (S (add lf9 (len (app lf10 l0)))).
Lemma candidate_2055: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (Nat.add (len l) (S (len l0))).
Lemma candidate_2656: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (S (Nat.add (Nat.add lf9 (len l0)) O)).
Lemma candidate_2942: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app lf10 l0)))).
Lemma candidate_2427: forall (n : nat) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app (rev l0) (Cons n lf10))))   (S (Nat.add (len lf10) (Nat.add lf9 (len l0)))).

Category 3 (provable):
Count = 109

Lemma candidate_103: forall (lf4 : nat), @eq nat (Nat.add lf4 O) lf4.
Lemma candidate_63: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_1862: forall (l0 : lst), @eq lst (rev l0) (rev (app l0 Nil)).
Lemma candidate_169: forall (lf5 : nat), @eq nat (Nat.add lf5 (S O)) (S lf5).
Lemma candidate_168: forall (lf5 : nat), @eq nat (S (Nat.add lf5 O)) (S lf5).
Lemma candidate_41: forall (l0 : lst), @eq nat (len l0) (len (app l0 Nil)).
Lemma candidate_11: forall (lf5 : nat), @eq nat (S lf5) (Nat.add lf5 (S O)).
Lemma candidate_10: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add lf5 O)).
Lemma candidate_117: forall (lf3 : lst), @eq nat (len lf3) (len (app lf3 Nil)).
Lemma candidate_110: forall (lf2 : nat) (lf9 : nat), @eq nat (add lf9 lf2) (Nat.add lf2 lf9).
Lemma candidate_102: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) O) lf4.
Lemma candidate_27: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 lf9).
Lemma candidate_4: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_356: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_689: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add n O) Nil).
Lemma candidate_627: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_625: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_290: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (S lf8)) (S (add lf9 lf8)).
Lemma candidate_289: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (S lf9)) (S (add lf9 lf8)).
Lemma candidate_287: forall (lf9 : nat) (lf8 : nat), @eq nat (S (Nat.add lf8 lf9)) (S (add lf9 lf8)).
Lemma candidate_167: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 (S O)) O) (S lf5).
Lemma candidate_166: forall (lf5 : nat), @eq nat (Nat.add (Nat.add lf5 O) (S O)) (S lf5).
Lemma candidate_165: forall (lf5 : nat), @eq nat (S (Nat.add (Nat.add lf5 O) O)) (S lf5).
Lemma candidate_142: forall (l : lst) (lf2 : nat), @eq nat (add (len l) lf2) (Nat.add lf2 (len l)).
Lemma candidate_100: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l l0)).
Lemma candidate_99: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 l)).
Lemma candidate_72: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len l)).
Lemma candidate_21: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (S lf9)).
Lemma candidate_19: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (S (Nat.add lf8 lf9)).
Lemma candidate_9: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 (S O)) O).
Lemma candidate_8: forall (lf5 : nat), @eq nat (S lf5) (Nat.add (Nat.add lf5 O) (S O)).
Lemma candidate_7: forall (lf5 : nat), @eq nat (S lf5) (S (Nat.add (Nat.add lf5 O) O)).
Lemma candidate_158: forall (lf3 : lst) (l : lst), @eq nat (add (len l) (len lf3)) (len (app lf3 l)).
Lemma candidate_157: forall (lf3 : lst) (l : lst), @eq nat (add (len l) (len lf3)) (len (app l lf3)).
Lemma candidate_49: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) lf9).
Lemma candidate_687: forall (n : nat) (lf7 : lst), @eq nat (len (app lf7 (Cons n Nil))) (S (len lf7)).
Lemma candidate_524: forall (l : lst) (lf8 : nat), @eq nat (add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_125: forall (lf3 : lst) (lf9 : nat), @eq nat (add lf9 (len lf3)) (Nat.add (len lf3) lf9).
Lemma candidate_108: forall (lf2 : nat) (lf9 : nat), @eq nat (add lf9 lf2) (Nat.add lf2 (Nat.add lf9 O)).
Lemma candidate_107: forall (lf2 : nat) (lf9 : nat), @eq nat (add lf9 lf2) (Nat.add lf9 (Nat.add lf2 O)).
Lemma candidate_106: forall (lf2 : nat) (lf9 : nat), @eq nat (add lf9 lf2) (Nat.add (Nat.add lf2 lf9) O).
Lemma candidate_101: forall (lf4 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf4 O) O) O) lf4.
Lemma candidate_26: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf9 (Nat.add lf8 O)).
Lemma candidate_25: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add lf8 (Nat.add lf9 O)).
Lemma candidate_23: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 lf8) (Nat.add (Nat.add lf8 lf9) O).
Lemma candidate_3: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_398: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_485: forall (l : lst) (l0 : lst), @eq nat (S (len (app l l0))) (S (add (len l) (len l0))).
Lemma candidate_483: forall (l : lst) (l0 : lst), @eq nat (S (len (app l0 l))) (S (add (len l) (len l0))).
Lemma candidate_452: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len l))) (S (add (len l) lf8)).
Lemma candidate_451: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (S lf8)) (S (add (len l) lf8)).
Lemma candidate_450: forall (l : lst) (lf8 : nat), @eq nat (Nat.add lf8 (S (len l))) (S (add (len l) lf8)).
Lemma candidate_355: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_354: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 (S (Nat.add lf8 O))) (S (add lf9 lf8)).
Lemma candidate_79: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l l0))).
Lemma candidate_77: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (S (len (app l0 l))).
Lemma candidate_60: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len l))).
Lemma candidate_58: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add lf8 (S (len l))).
Lemma candidate_688: forall (n : nat), @eq lst (Cons n Nil) (Cons (Nat.add (Nat.add n O) O) Nil).
Lemma candidate_319: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (S lf9)) (S (add lf9 (len l0))).
Lemma candidate_318: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add lf9 (S (len l0))) (S (add lf9 (len l0))).
Lemma candidate_315: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add (len l0) lf9)) (S (add lf9 (len l0))).
Lemma candidate_95: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (Nat.add (len l0) (len l)).
Lemma candidate_37: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (S lf9)).
Lemma candidate_33: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add (len l0) lf9)).
Lemma candidate_286: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf9 (Nat.add lf8 (S O))) (S (add lf9 lf8)).
Lemma candidate_285: forall (lf9 : nat) (lf8 : nat), @eq nat (Nat.add lf8 (Nat.add lf9 (S O))) (S (add lf9 lf8)).
Lemma candidate_154: forall (lf3 : lst) (l : lst), @eq nat (add (len l) (len lf3)) (Nat.add (len lf3) (len l)).
Lemma candidate_139: forall (l : lst) (lf2 : nat), @eq nat (add (len l) lf2) (Nat.add (len l) (Nat.add lf2 O)).
Lemma candidate_138: forall (l : lst) (lf2 : nat), @eq nat (add (len l) lf2) (Nat.add (Nat.add lf2 (len l)) O).
Lemma candidate_69: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len l) (Nat.add lf8 O)).
Lemma candidate_68: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (Nat.add lf8 (len l)) O).
Lemma candidate_18: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf9 (Nat.add lf8 (S O))).
Lemma candidate_17: forall (lf9 : nat) (lf8 : nat), @eq nat (S (add lf9 lf8)) (Nat.add lf8 (Nat.add lf9 (S O))).
Lemma candidate_486: forall (l : lst) (l0 : lst), @eq nat (len (app l (Cons O l0))) (S (add (len l) (len l0))).
Lemma candidate_484: forall (l : lst) (l0 : lst), @eq nat (len (app l0 (Cons O l))) (S (add (len l) (len l0))).
Lemma candidate_80: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l (Cons O l0))).
Lemma candidate_78: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (len (app l0 (Cons O l))).
Lemma candidate_578: forall (l : lst) (l0 : lst), @eq nat (add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_47: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len l0) (Nat.add lf9 O)).
Lemma candidate_685: forall (n : nat) (lf7 : lst), @eq nat (len (app lf7 (Cons n Nil))) (Nat.add (len lf7) (S O)).
Lemma candidate_679: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 Nil) (Cons n Nil)).
Lemma candidate_677: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app lf7 (Cons n Nil)) Nil).
Lemma candidate_523: forall (l : lst) (lf8 : nat), @eq nat (add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_522: forall (l : lst) (lf8 : nat), @eq nat (add (len l) (S (Nat.add lf8 O))) (S (add (len l) lf8)).
Lemma candidate_123: forall (lf3 : lst) (lf9 : nat), @eq nat (add lf9 (len lf3)) (Nat.add (len lf3) (Nat.add lf9 O)).
Lemma candidate_488: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l) (S (len l0))) (S (add (len l) (len l0))).
Lemma candidate_487: forall (l : lst) (l0 : lst), @eq nat (Nat.add (len l0) (S (len l))) (S (add (len l) (len l0))).
Lemma candidate_395: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (S (Nat.add (len l0) O))) (S (add lf9 (len l0))).
Lemma candidate_81: forall (l : lst) (l0 : lst), @eq nat (S (add (len l) (len l0))) (Nat.add (len l0) (S (len l))).
Lemma candidate_448: forall (l : lst) (lf8 : nat), @eq nat (Nat.add (len l) (Nat.add lf8 (S O))) (S (add (len l) lf8)).
Lemma candidate_353: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 (Nat.add (Nat.add lf8 (S O)) O)) (S (add lf9 lf8)).
Lemma candidate_352: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 (Nat.add (Nat.add lf8 O) (S O))) (S (add lf9 lf8)).
Lemma candidate_351: forall (lf9 : nat) (lf8 : nat), @eq nat (add lf9 (S (Nat.add (Nat.add lf8 O) O))) (S (add lf9 lf8)).
Lemma candidate_56: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (Nat.add (len l) (Nat.add lf8 (S O))).
Lemma candidate_722: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (add (len l) (len (app lf7 lf6))) (len (app l (app lf7 lf6))).
Lemma candidate_316: forall (l0 : lst) (lf9 : nat), @eq nat (Nat.add (len l0) (Nat.add lf9 (S O))) (S (add lf9 (len l0))).
Lemma candidate_34: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_576: forall (l : lst) (l0 : lst), @eq nat (add (len l) (Nat.add (len l0) (S O))) (S (add (len l) (len l0))).
Lemma candidate_575: forall (l : lst) (l0 : lst), @eq nat (add (len l) (S (Nat.add (len l0) O))) (S (add (len l) (len l0))).
Lemma candidate_692: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil)))) (S (Nat.add (len lf7) lf9)).
Lemma candidate_1917: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev l0) (Cons (Nat.add n O) Nil)).
Lemma candidate_521: forall (l : lst) (lf8 : nat), @eq nat (add (len l) (Nat.add (Nat.add lf8 (S O)) O)) (S (add (len l) lf8)).
Lemma candidate_520: forall (l : lst) (lf8 : nat), @eq nat (add (len l) (Nat.add (Nat.add lf8 O) (S O))) (S (add (len l) lf8)).
Lemma candidate_519: forall (l : lst) (lf8 : nat), @eq nat (add (len l) (S (Nat.add (Nat.add lf8 O) O))) (S (add (len l) lf8)).
Lemma candidate_638: forall (lf7 : lst) (lf9 : nat) (lf6 : lst), @eq nat (add lf9 (len (app lf7 lf6)))   (Nat.add (len lf7) (Nat.add lf9 (len lf6))).
Lemma candidate_637: forall (lf7 : lst) (lf9 : nat) (lf6 : lst), @eq nat (add lf9 (len (app lf7 lf6)))   (Nat.add (len lf6) (Nat.add lf9 (len lf7))).
Lemma candidate_1315: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (Nat.add (len lf7) (Nat.add lf9 O))).
Lemma candidate_1122: forall (n : nat) (lf7 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app lf7 (Cons n lf10))))   (S (Nat.add (len lf7) (Nat.add lf9 (len lf10)))).

Category 3 (not provable):
Count = 123

Lemma candidate_65: forall (l : lst), @eq nat (len l) (len (rev l)).
Lemma candidate_43: forall (l0 : lst), @eq nat (len l0) (len (rev l0)).
Lemma candidate_119: forall (lf3 : lst), @eq nat (len lf3) (len (rev lf3)).
Lemma candidate_1863: forall (l0 : lst), @eq lst (rev l0) (app (rev l0) Nil).
Lemma candidate_62: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_1861: forall (l0 : lst), @eq lst (rev l0) (rev (rev (rev l0))).
Lemma candidate_40: forall (l0 : lst), @eq nat (len l0) (len (rev (rev l0))).
Lemma candidate_116: forall (lf3 : lst), @eq nat (len lf3) (len (rev (rev lf3))).
Lemma candidate_61: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_39: forall (l0 : lst), @eq nat (len l0) (Nat.add (len (rev l0)) O).
Lemma candidate_1860: forall (l0 : lst), @eq lst (rev l0) (app (app (rev l0) Nil) Nil).
Lemma candidate_1859: forall (l0 : lst), @eq lst (rev l0) (app (rev (app l0 Nil)) Nil).
Lemma candidate_115: forall (lf3 : lst), @eq nat (len lf3) (Nat.add (len (rev lf3)) O).
Lemma candidate_634: forall (lf7 : lst) (lf6 : lst), @eq nat (len (app lf7 lf6)) (len (app lf6 lf7)).
Lemma candidate_626: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_1871: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (rev (app (rev lf6) l0)).
Lemma candidate_1857: forall (l0 : lst) (lf6 : lst), @eq nat (len (app (rev l0) lf6)) (len (app l0 lf6)).
Lemma candidate_633: forall (lf7 : lst) (lf6 : lst), @eq nat (len (app lf7 lf6)) (len (app lf7 (rev lf6))).
Lemma candidate_631: forall (lf7 : lst) (lf6 : lst), @eq nat (len (app lf7 lf6)) (len (app lf6 (rev lf7))).
Lemma candidate_140: forall (l : lst) (lf2 : nat), @eq nat (add (len l) lf2) (Nat.add lf2 (len (rev l))).
Lemma candidate_137: forall (l : lst) (lf2 : nat), @eq nat (add (len l) lf2) (Nat.add (len (rev l)) lf2).
Lemma candidate_98: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l (rev l0))).
Lemma candidate_97: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len l0)) (len (app l0 (rev l))).
Lemma candidate_70: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add lf8 (len (rev l))).
Lemma candidate_67: forall (l : lst) (lf8 : nat), @eq nat (add (len l) lf8) (Nat.add (len (rev l)) lf8).
Lemma candidate_1873: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (app lf6 Nil)).
Lemma candidate_156: forall (lf3 : lst) (l : lst), @eq nat (add (len l) (len lf3)) (len (app lf3 (rev l))).
Lemma candidate_155: forall (lf3 : lst) (l : lst), @eq nat (add (len l) (len lf3)) (len (app l (rev lf3))).
Lemma candidate_48: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add lf9 (len (rev l0))).
Lemma candidate_45: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len l0)) (Nat.add (len (rev l0)) lf9).
Lemma candidate_686: forall (n : nat) (lf7 : lst), @eq nat (len (app lf7 (Cons n Nil))) (S (len (rev lf7))).
Lemma candidate_1872: forall (l0 : lst) (lf6 : lst), @eq lst (app (rev l0) lf6) (app (rev l0) (rev (rev lf6))).
Lemma candidate_1855: forall (l0 : lst) (lf6 : lst), @eq nat (len (app (rev l0) lf6)) (len (app l0 (rev lf6))).
Lemma candidate_1853: forall (l0 : lst) (lf6 : lst), @eq nat (len (app (rev l0) lf6)) (len (app lf6 (rev l0))).
Lemma candidate_124: forall (lf3 : lst) (lf9 : nat), @eq nat (add lf9 (len lf3)) (Nat.add lf9 (len (rev lf3))).
Lemma candidate_121: forall (lf3 : lst) (lf9 : nat), @eq nat (add lf9 (len lf3)) (Nat.add (len (rev lf3)) lf9).
Lemma candidate_397: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (S (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_1932: forall (n : nat) (l0 : lst), @eq nat (len (app (rev l0) (Cons n Nil))) (S (len (rev l0))).
Lemma candidate_449: forall (l : lst) (lf8 : nat), @eq nat (S (Nat.add lf8 (len (rev l)))) (S (add (len l) lf8)).
Lemma candidate_57: forall (l : lst) (lf8 : nat), @eq nat (S (add (len l) lf8)) (S (Nat.add lf8 (len (rev l)))).
Lemma candidate_684: forall (n : nat) (lf7 : lst), @eq nat (len (app lf7 (Cons n Nil))) (S (Nat.add (len lf7) O)).
Lemma candidate_317: forall (l0 : lst) (lf9 : nat), @eq nat (S (Nat.add lf9 (len (rev l0)))) (S (add lf9 (len l0))).
Lemma candidate_35: forall (l0 : lst) (lf9 : nat), @eq nat (S (add lf9 (len l0))) (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_681: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_396: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (Nat.add (len l0) (S O))) (S (add lf9 (len l0))).
Lemma candidate_1931: forall (n : nat) (l0 : lst), @eq nat (len (app (rev l0) (Cons n Nil))) (Nat.add (len l0) (S O)).
Lemma candidate_1930: forall (n : nat) (l0 : lst), @eq nat (len (app (rev l0) (Cons n Nil))) (S (Nat.add (len l0) O)).
Lemma candidate_577: forall (l : lst) (l0 : lst), @eq nat (add (len l) (S (len (rev l0)))) (S (add (len l) (len l0))).
Lemma candidate_723: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (add (len l) (len (app lf7 lf6))) (len (app lf7 (app l lf6))).
Lemma candidate_720: forall (lf7 : lst) (l : lst) (lf6 : lst), @eq nat (add (len l) (len (app lf7 lf6))) (len (app lf7 (app lf6 l))).
Lemma candidate_1377: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil)))) (S (add lf9 (len lf7))).
Lemma candidate_683: forall (n : nat) (lf7 : lst), @eq nat (len (app lf7 (Cons n Nil))) (len (app (rev lf7) (Cons O Nil))).
Lemma candidate_682: forall (n : nat) (lf7 : lst), @eq nat (len (app lf7 (Cons n Nil))) (len (app (rev lf7) (Cons n Nil))).
Lemma candidate_1729: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil)))) (S (len (app l lf7))).
Lemma candidate_772: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil)))) (S (len (app lf7 l))).
Lemma candidate_655: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq nat (len (app lf7 (Cons n lf10))) (Nat.add (len lf7) (S (len lf10))).
Lemma candidate_654: forall (n : nat) (lf7 : lst) (lf10 : lst), @eq nat (len (app lf7 (Cons n lf10))) (Nat.add (len lf10) (S (len lf7))).
Lemma candidate_1951: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (add (len l) (len (app (rev l0) lf6))) (len (app l (app l0 lf6))).
Lemma candidate_1950: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (add (len l) (len (app (rev l0) lf6))) (len (app l0 (app l lf6))).
Lemma candidate_1948: forall (l : lst) (l0 : lst) (lf6 : lst), @eq nat (add (len l) (len (app (rev l0) lf6))) (len (app l (app lf6 l0))).
Lemma candidate_1920: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (app l0 Nil)) (Cons n Nil)).
Lemma candidate_1918: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (app (rev l0) (Cons n Nil)) Nil).
Lemma candidate_697: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil)))) (S (Nat.add lf9 (len lf7))).
Lemma candidate_696: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil)))) (Nat.add (len lf7) (S lf9)).
Lemma candidate_695: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil)))) (Nat.add lf9 (S (len lf7))).
Lemma candidate_394: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons O Nil)))) (S (add lf9 (len l0))).
Lemma candidate_1929: forall (n : nat) (l0 : lst), @eq nat (len (app (rev l0) (Cons n Nil))) (len (app (rev l0) (Cons O Nil))).
Lemma candidate_1919: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (app (rev (rev (rev l0))) (Cons n Nil)).
Lemma candidate_1916: forall (n : nat) (l0 : lst), @eq lst (app (rev l0) (Cons n Nil)) (rev (rev (app (rev l0) (Cons n Nil)))).
Lemma candidate_678: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (app (rev (rev lf7)) (Cons n Nil)) Nil).
Lemma candidate_676: forall (n : nat) (lf7 : lst), @eq lst (app lf7 (Cons n Nil)) (app (rev (app (rev lf7) Nil)) (Cons n Nil)).
Lemma candidate_3024: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil)))) (S (len (app l0 l))).
Lemma candidate_2051: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil)))) (S (len (app l l0))).
Lemma candidate_1895: forall (n : nat) (l0 : lst) (lf10 : lst), @eq nat (len (app (rev l0) (Cons n lf10))) (Nat.add (len l0) (S (len lf10))).
Lemma candidate_1376: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil)))) (S (add lf9 (len (rev lf7)))).
Lemma candidate_393: forall (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons lf9 Nil)))) (S (add lf9 (len l0))).
Lemma candidate_774: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil)))) (len (app lf7 (Cons O l))).
Lemma candidate_773: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil)))) (len (app lf7 (Cons n l))).
Lemma candidate_771: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil)))) (len (app l (Cons O lf7))).
Lemma candidate_1926: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S lf9)).
Lemma candidate_1922: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) lf9)).
Lemma candidate_1795: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (add (len l) (len lf7))).
Lemma candidate_1728: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (len (app lf7 (rev l)))).
Lemma candidate_1727: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (len (app l (rev lf7)))).
Lemma candidate_1374: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (add lf9 (len (app lf7 Nil)))).
Lemma candidate_1313: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (Nat.add (len (rev lf7)) lf9)).
Lemma candidate_694: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (Nat.add lf9 (len (rev lf7)))).
Lemma candidate_2053: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (len (app l (Cons O l0))).
Lemma candidate_2052: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (len (app l (Cons n l0))).
Lemma candidate_2050: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (len (app l0 (Cons O l))).
Lemma candidate_3023: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (S (len (app l (rev l0)))).
Lemma candidate_3022: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (S (len (app l0 (rev l)))).
Lemma candidate_1726: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (Nat.add (len lf7) (len l))).
Lemma candidate_1725: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (Nat.add (len l) (len lf7))).
Lemma candidate_1375: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (add lf9 (Nat.add (len lf7) O))).
Lemma candidate_1373: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (add lf9 (len (rev (rev lf7))))).
Lemma candidate_1248: forall (n : nat) (lf7 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app lf7 (Cons n lf10))))   (S (add lf9 (len (app lf7 lf10)))).
Lemma candidate_1247: forall (n : nat) (lf7 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app lf7 (Cons n lf10))))   (S (add lf9 (len (app lf10 lf7)))).
Lemma candidate_776: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (Nat.add (len lf7) (S (len l))).
Lemma candidate_775: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (Nat.add (len l) (S (len lf7))).
Lemma candidate_574: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons O Nil))))   (S (add (len l) (len l0))).
Lemma candidate_2655: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (S (Nat.add (len (rev l0)) lf9)).
Lemma candidate_1924: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (S (Nat.add lf9 (len (rev l0)))).
Lemma candidate_1794: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev lf7)))).
Lemma candidate_1866: forall (l0 : lst) (lf9 : nat) (lf6 : lst), @eq nat (add lf9 (len (app (rev l0) lf6)))   (Nat.add (len l0) (Nat.add lf9 (len lf6))).
Lemma candidate_3020: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (len l))).
Lemma candidate_2578: forall (n : nat) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app (rev l0) (Cons n lf10))))   (S (add lf9 (len (app l0 lf10)))).
Lemma candidate_2054: forall (n : nat) (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (S (len l))).
Lemma candidate_1314: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (Nat.add (Nat.add lf9 (len lf7)) O)).
Lemma candidate_693: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (Nat.add (len lf7) (Nat.add lf9 (S O))).
Lemma candidate_1792: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (add (len l) (len (app lf7 Nil)))).
Lemma candidate_1372: forall (n : nat) (lf7 : lst) (lf9 : nat), @eq nat (add lf9 (len (app lf7 (Cons n Nil))))   (S (add lf9 (Nat.add (len (rev lf7)) O))).
Lemma candidate_573: forall (l : lst) (l0 : lst), @eq nat (add (len l) (len (app (rev (rev l0)) (Cons O Nil))))   (S (add (len l) (len l0))).
Lemma candidate_2657: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (S (Nat.add (len l0) (Nat.add lf9 O))).
Lemma candidate_1923: forall (n : nat) (l0 : lst) (lf9 : nat), @eq nat (add lf9 (len (app (rev l0) (Cons n Nil))))   (Nat.add (len l0) (Nat.add lf9 (S O))).
Lemma candidate_1793: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len lf7) O))).
Lemma candidate_1791: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (add (len l) (len (rev (rev lf7))))).
Lemma candidate_1648: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (add (len l) (len (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf7 lf10)))).
Lemma candidate_1647: forall (n : nat) (lf7 : lst) (l : lst) (lf10 : lst), @eq nat (add (len l) (len (app lf7 (Cons n lf10))))   (S (add (len l) (len (app lf10 lf7)))).
Lemma candidate_2943: forall (n : nat) (l : lst) (l0 : lst) (lf10 : lst), @eq nat (add (len l) (len (app (rev l0) (Cons n lf10))))   (S (add (len l) (len (app l0 lf10)))).
Lemma candidate_1790: forall (n : nat) (lf7 : lst) (l : lst), @eq nat (add (len l) (len (app lf7 (Cons n Nil))))   (S (add (len l) (Nat.add (len (rev lf7)) O))).
Lemma candidate_1121: forall (n : nat) (lf7 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app lf7 (Cons n lf10))))   (S (Nat.add (len lf10) (Nat.add lf9 (len lf7)))).
Lemma candidate_2428: forall (n : nat) (l0 : lst) (lf9 : nat) (lf10 : lst), @eq nat (add lf9 (len (app (rev l0) (Cons n lf10))))   (S (Nat.add (len l0) (Nat.add lf9 (len lf10)))).
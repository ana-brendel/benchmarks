File Information
- File name: queue_len
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_queue_len-queue_len-80-len_rev
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_queue_len-queue_len-80-len_rev
- Namespace: adtind
- Proof name: queue_len
- Theorem: Theorem queue_len: forall l0 l3 : lst,
@eq nat (qlen (amortizeQueue l0 l3)) (add (len l0) (len l3)).
- Declarations: 
From lfind Require Import LFind.
Require Import Nat.

Proof Context
* Goal State: @eq nat (len (rev l2)) (len l2)

* Hypothesis:
l1 : lst
l2 : lst

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
l2 : lst

* Terms:
len l2 : nat
nat : Set
rev l2 : lst
@eq nat (len (rev l2)) (len l2) : Prop
lst : Set
len (rev l2) : nat
l2 : lst

* Functions:
len  : forall _ : lst, nat
rev  : forall _ : lst, lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = rev l2
lf1 : nat = len (rev l2)
lf2 : nat = len l2

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf1 lf2.
Lemma conj2: forall (lf1 : nat) (l2 : lst), @eq nat lf1 (len l2).
Lemma conj3: forall (lf2 : nat) (lf3 : lst), @eq nat (len lf3) lf2.
Lemma conj4: forall (l2 : lst) (lf3 : lst), @eq nat (len lf3) (len l2).
Lemma conj7: forall (lf2 : nat) (l2 : lst), @eq nat (len (rev l2)) lf2.
Lemma conj8: forall (l2 : lst), @eq nat (len (rev l2)) (len l2).


<---VALIDITY CHECKS--->
Time elapsed: 14 seconds
Valid:
Lemma conj8: forall (l2 : lst), @eq nat (len (rev l2)) (len l2).

Invalid:
Lemma conj7: forall (lf2 : nat) (l2 : lst), @eq nat (len (rev l2)) lf2.
Lemma conj4: forall (l2 : lst) (lf3 : lst), @eq nat (len lf3) (len l2).
Lemma conj3: forall (lf2 : nat) (lf3 : lst), @eq nat (len lf3) lf2.
Lemma conj2: forall (lf1 : nat) (l2 : lst), @eq nat lf1 (len l2).
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 14 seconds
Generalizations:
Lemma conj7: forall (lf2 : nat) (l2 : lst), @eq nat (len (rev l2)) lf2.
Lemma conj4: forall (l2 : lst) (lf3 : lst), @eq nat (len lf3) (len l2).
Lemma conj3: forall (lf2 : nat) (lf3 : lst), @eq nat (len lf3) lf2.
Lemma conj2: forall (lf1 : nat) (l2 : lst), @eq nat lf1 (len l2).
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 22 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), @eq nat lf1 lf2.
Lemma conj2: forall (lf1 : nat) (l2 : lst), @eq nat lf1 (len l2).
Lemma conj3: forall (lf2 : nat) (lf3 : lst), @eq nat (len lf3) lf2.
Lemma conj4: forall (l2 : lst) (lf3 : lst), @eq nat (len lf3) (len l2).
Lemma conj7: forall (lf2 : nat) (l2 : lst), @eq nat (len (rev l2)) lf2.


<---CREATE SKETCHES--->
Time elapsed: 22 seconds
Sketches:
Sketch conj2_sketch0 : @eq nat lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq nat (len l2) (##hole##)
Sketch conj3_sketch0 : @eq nat (##hole##) lf2
Sketch conj3_term_sketch0 : @eq nat (len lf3) (##hole##)
Sketch conj4_sketch0 : @eq nat (##hole##) (len l2)
Sketch conj4_sketch1 : @eq nat (len lf3) (##hole##)
Sketch conj4_term_sketch0 : @eq nat (len lf3) (##hole##)
Sketch conj4_term_sketch1 : @eq nat (len l2) (##hole##)
Sketch conj7_sketch0 : @eq nat (len (##hole##)) lf2
Sketch conj7_sketch1 : @eq nat (##hole##) lf2
Sketch conj7_term_sketch0 : @eq lst (rev l2) (##hole##)
Sketch conj7_term_sketch1 : @eq nat (len (rev l2)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 35 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj7_sketch1 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj7_term_sketch1 --> Problem  synth_2
Sketch conj7_term_sketch0 --> Problem  synth_6
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj7_sketch0 --> Problem  synth_5
Sketch conj4_sketch0 --> Problem  synth_2
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_4


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 80 seconds

Problem: synth_3
 lf2

Problem: synth_6
 app (rev (app l2 Nil)) Nil
 app (app (rev l2) Nil) Nil
 rev (rev (rev l2))
 rev (app l2 Nil)
 app (rev l2) Nil
 rev l2

Problem: synth_5

Problem: synth_4
 len (rev (app lf3 Nil))
 len (app (rev lf3) Nil)
 len (rev (rev lf3))
 len (app lf3 Nil)
 len (rev lf3)
 len lf3

Problem: synth_1
 lf1

Problem: synth_2
 len (rev (app l2 Nil))
 len (app (rev l2) Nil)
 len (rev (rev l2))
 len (app l2 Nil)
 len (rev l2)
 len l2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 80 seconds
Lemmas:
Lemma candidate_1: forall (l2 : lst), @eq nat (len (rev l2)) (len l2).
Lemma candidate_2: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_3: forall (l2 : lst), @eq nat (len l2) (len (rev (app l2 Nil))).
Lemma candidate_4: forall (l2 : lst), @eq nat (len l2) (len (app (rev l2) Nil)).
Lemma candidate_5: forall (l2 : lst), @eq nat (len l2) (len (rev (rev l2))).
Lemma candidate_6: forall (l2 : lst), @eq nat (len l2) (len (app l2 Nil)).
Lemma candidate_7: forall (l2 : lst), @eq nat (len l2) (len (rev l2)).
Lemma candidate_8: forall (l2 : lst), @eq nat (len l2) (len l2).
Lemma candidate_9: forall (lf2 : nat), @eq nat (lf2) lf2.
Lemma candidate_10: forall (lf3 : lst), @eq nat (len lf3) (len (rev (app lf3 Nil))).
Lemma candidate_11: forall (lf3 : lst), @eq nat (len lf3) (len (app (rev lf3) Nil)).
Lemma candidate_12: forall (lf3 : lst), @eq nat (len lf3) (len (rev (rev lf3))).
Lemma candidate_13: forall (lf3 : lst), @eq nat (len lf3) (len (app lf3 Nil)).
Lemma candidate_14: forall (lf3 : lst), @eq nat (len lf3) (len (rev lf3)).
Lemma candidate_15: forall (lf3 : lst), @eq nat (len lf3) (len lf3).
Lemma candidate_16: forall (l2 : lst), @eq nat (len (rev (app l2 Nil))) (len l2).
Lemma candidate_17: forall (l2 : lst), @eq nat (len (app (rev l2) Nil)) (len l2).
Lemma candidate_18: forall (l2 : lst), @eq nat (len (rev (rev l2))) (len l2).
Lemma candidate_19: forall (l2 : lst), @eq nat (len (app l2 Nil)) (len l2).
Lemma candidate_20: forall (l2 : lst), @eq nat (len (rev l2)) (len l2).
Lemma candidate_21: forall (l2 : lst), @eq nat (len l2) (len l2).
Lemma candidate_22: forall (lf3 : lst), @eq nat (len lf3) (len (rev (app lf3 Nil))).
Lemma candidate_23: forall (lf3 : lst), @eq nat (len lf3) (len (app (rev lf3) Nil)).
Lemma candidate_24: forall (lf3 : lst), @eq nat (len lf3) (len (rev (rev lf3))).
Lemma candidate_25: forall (lf3 : lst), @eq nat (len lf3) (len (app lf3 Nil)).
Lemma candidate_26: forall (lf3 : lst), @eq nat (len lf3) (len (rev lf3)).
Lemma candidate_27: forall (lf3 : lst), @eq nat (len lf3) (len lf3).
Lemma candidate_28: forall (lf3 : lst), @eq nat (len lf3) (len (rev (app lf3 Nil))).
Lemma candidate_29: forall (lf3 : lst), @eq nat (len lf3) (len (app (rev lf3) Nil)).
Lemma candidate_30: forall (lf3 : lst), @eq nat (len lf3) (len (rev (rev lf3))).
Lemma candidate_31: forall (lf3 : lst), @eq nat (len lf3) (len (app lf3 Nil)).
Lemma candidate_32: forall (lf3 : lst), @eq nat (len lf3) (len (rev lf3)).
Lemma candidate_33: forall (lf3 : lst), @eq nat (len lf3) (len lf3).
Lemma candidate_34: forall (l2 : lst), @eq nat (len l2) (len (rev (app l2 Nil))).
Lemma candidate_35: forall (l2 : lst), @eq nat (len l2) (len (app (rev l2) Nil)).
Lemma candidate_36: forall (l2 : lst), @eq nat (len l2) (len (rev (rev l2))).
Lemma candidate_37: forall (l2 : lst), @eq nat (len l2) (len (app l2 Nil)).
Lemma candidate_38: forall (l2 : lst), @eq nat (len l2) (len (rev l2)).
Lemma candidate_39: forall (l2 : lst), @eq nat (len l2) (len l2).
Lemma candidate_40: forall (lf2 : nat), @eq nat (lf2) lf2.
Lemma candidate_41: forall (l2 : lst), @eq lst (rev l2) (app (rev (app l2 Nil)) Nil).
Lemma candidate_42: forall (l2 : lst), @eq lst (rev l2) (app (app (rev l2) Nil) Nil).
Lemma candidate_43: forall (l2 : lst), @eq lst (rev l2) (rev (rev (rev l2))).
Lemma candidate_44: forall (l2 : lst), @eq lst (rev l2) (rev (app l2 Nil)).
Lemma candidate_45: forall (l2 : lst), @eq lst (rev l2) (app (rev l2) Nil).
Lemma candidate_46: forall (l2 : lst), @eq lst (rev l2) (rev l2).
Lemma candidate_47: forall (l2 : lst), @eq nat (len (rev l2)) (len (rev (app l2 Nil))).
Lemma candidate_48: forall (l2 : lst), @eq nat (len (rev l2)) (len (app (rev l2) Nil)).
Lemma candidate_49: forall (l2 : lst), @eq nat (len (rev l2)) (len (rev (rev l2))).
Lemma candidate_50: forall (l2 : lst), @eq nat (len (rev l2)) (len (app l2 Nil)).
Lemma candidate_51: forall (l2 : lst), @eq nat (len (rev l2)) (len (rev l2)).
Lemma candidate_52: forall (l2 : lst), @eq nat (len (rev l2)) (len l2).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 134 seconds
Duplicates removed: 23
Filtered by Quickchick: 0
Filtered by script: 6
Remaining: 23

Lemmas: 
Lemma candidate_7: forall (l2 : lst), @eq nat (len l2) (len (rev l2)).
Lemma candidate_14: forall (lf3 : lst), @eq nat (len lf3) (len (rev lf3)).
Lemma candidate_45: forall (l2 : lst), @eq lst (rev l2) (app (rev l2) Nil).
Lemma candidate_44: forall (l2 : lst), @eq lst (rev l2) (rev (app l2 Nil)).
Lemma candidate_19: forall (l2 : lst), @eq nat (len (app l2 Nil)) (len l2).
Lemma candidate_6: forall (l2 : lst), @eq nat (len l2) (len (app l2 Nil)).
Lemma candidate_43: forall (l2 : lst), @eq lst (rev l2) (rev (rev (rev l2))).
Lemma candidate_18: forall (l2 : lst), @eq nat (len (rev (rev l2))) (len l2).
Lemma candidate_13: forall (lf3 : lst), @eq nat (len lf3) (len (app lf3 Nil)).
Lemma candidate_5: forall (l2 : lst), @eq nat (len l2) (len (rev (rev l2))).
Lemma candidate_12: forall (lf3 : lst), @eq nat (len lf3) (len (rev (rev lf3))).
Lemma candidate_50: forall (l2 : lst), @eq nat (len (rev l2)) (len (app l2 Nil)).
Lemma candidate_17: forall (l2 : lst), @eq nat (len (app (rev l2) Nil)) (len l2).
Lemma candidate_16: forall (l2 : lst), @eq nat (len (rev (app l2 Nil))) (len l2).
Lemma candidate_4: forall (l2 : lst), @eq nat (len l2) (len (app (rev l2) Nil)).
Lemma candidate_3: forall (l2 : lst), @eq nat (len l2) (len (rev (app l2 Nil))).
Lemma candidate_49: forall (l2 : lst), @eq nat (len (rev l2)) (len (rev (rev l2))).
Lemma candidate_11: forall (lf3 : lst), @eq nat (len lf3) (len (app (rev lf3) Nil)).
Lemma candidate_10: forall (lf3 : lst), @eq nat (len lf3) (len (rev (app lf3 Nil))).
Lemma candidate_42: forall (l2 : lst), @eq lst (rev l2) (app (app (rev l2) Nil) Nil).
Lemma candidate_41: forall (l2 : lst), @eq lst (rev l2) (app (rev (app l2 Nil)) Nil).
Lemma candidate_48: forall (l2 : lst), @eq nat (len (rev l2)) (len (app (rev l2) Nil)).
Lemma candidate_47: forall (l2 : lst), @eq nat (len (rev l2)) (len (rev (app l2 Nil))).
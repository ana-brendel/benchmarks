LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_queue_len-len_rev-69-plus_comm

Number of Lemmas: 1041
Number of Lemmas (after duplicates removed): 243
Number of Lemmas (after QuickChick used to filter): 142
* Number of Candidate Lemmas: 108

Time until ranking: 1606
Time to complete: 4353

Stuck state true independent of hypotheses: true

Category 1:
Count = 35

Lemma candidate_137: forall (lf2 : nat), @eq nat (add lf2 (S O)) (S lf2).
Lemma candidate_956: forall (lf2 : nat), @eq nat (add lf2 (S O)) (S (lf2)).
Lemma candidate_873: forall (lf4 : nat), @eq nat (add (lf4) (S O)) (S lf4).
Lemma candidate_220: forall (lf4 : nat), @eq nat (Nat.add lf4 (S O)) (S lf4).
Lemma candidate_192: forall (lf4 : nat), @eq nat (S lf4) (Nat.add lf4 (S O)).
Lemma candidate_191: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add lf4 O)).
Lemma candidate_31: forall (lf7 : nat), @eq nat (S lf7) (Nat.add lf7 (S O)).
Lemma candidate_29: forall (lf7 : nat), @eq nat (S lf7) (S (Nat.add lf7 O)).
Lemma candidate_995: forall (l : lst), @eq nat (add (len l) (S O)) (S (len l)).
Lemma candidate_14: forall (lf2 : nat) (lf6 : nat), @eq nat (add lf2 lf6) (Nat.add lf6 lf2).
Lemma candidate_483: forall (l : lst), @eq nat (Nat.add (len l) (S O)) (S (len l)).
Lemma candidate_482: forall (l : lst), @eq nat (S (Nat.add (len l) O)) (S (len l)).
Lemma candidate_207: forall (l : lst), @eq nat (S (len l)) (Nat.add (len l) (S O)).
Lemma candidate_206: forall (l : lst), @eq nat (S (len l)) (S (Nat.add (len l) O)).
Lemma candidate_156: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (S (len lf5)).
Lemma candidate_135: forall (lf2 : nat), @eq nat (add lf2 (S O)) (S (Nat.add lf2 O)).
Lemma candidate_522: forall (lf7 : nat) (lf2 : nat), @eq nat (add lf2 (S lf7)) (S (Nat.add lf2 lf7)).
Lemma candidate_190: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 (S O)) O).
Lemma candidate_189: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 O) (S O)).
Lemma candidate_25: forall (lf7 : nat) (lf2 : nat), @eq nat (add lf2 (S lf7)) (Nat.add lf7 (S lf2)).
Lemma candidate_22: forall (lf7 : nat) (lf2 : nat), @eq nat (add lf2 (S lf7)) (S (Nat.add lf7 lf2)).
Lemma candidate_993: forall (l : lst), @eq nat (add (Nat.add (len l) O) (S O)) (S (len l)).
Lemma candidate_48: forall (lf5 : lst) (lf6 : nat), @eq nat (add (len lf5) lf6) (Nat.add lf6 (len lf5)).
Lemma candidate_153: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (S (Nat.add (len lf5) O)).
Lemma candidate_673: forall (lf7 : nat) (lf5 : lst), @eq nat (add (len lf5) (S lf7)) (S (Nat.add (len lf5) lf7)).
Lemma candidate_521: forall (lf7 : nat) (lf2 : nat), @eq nat (add lf2 (S lf7)) (S (Nat.add lf7 (Nat.add lf2 O))).
Lemma candidate_520: forall (lf7 : nat) (lf2 : nat), @eq nat (add lf2 (S lf7)) (S (Nat.add lf2 (Nat.add lf7 O))).
Lemma candidate_83: forall (l : lst) (lf6 : nat), @eq nat (add (len (rev l)) lf6) (Nat.add lf6 (len (rev l))).
Lemma candidate_64: forall (lf7 : nat) (lf5 : lst), @eq nat (add (len lf5) (S lf7)) (S (Nat.add lf7 (len lf5))).
Lemma candidate_61: forall (lf7 : nat) (lf5 : lst), @eq nat (add (len lf5) (S lf7)) (Nat.add lf7 (S (len lf5))).
Lemma candidate_2: forall (lf4 : nat) (lf2 : nat), forall _ : @eq nat lf2 lf4, @eq nat (add lf2 (S O)) (S lf4).
Lemma candidate_5: forall (l : lst) (lf2 : nat), forall _ : @eq nat lf2 (len l), @eq nat (add lf2 (S O)) (S (len l)).
Lemma candidate_3: forall (lf4 : nat) (lf5 : lst), forall _ : @eq nat (len lf5) lf4, @eq nat (add (len lf5) (S O)) (S lf4).
Lemma candidate_6: forall (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (add (len lf5) (S O)) (S (len l)).
Lemma candidate_612: forall (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (Nat.add (len lf5) (S O)) (S (len l)).

Category 2:
Count = 13

Lemma candidate_155: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (S (len (rev lf5))).
Lemma candidate_175: forall (l : lst), @eq nat (add (len (rev l)) (S O)) (S (len (rev l))).
Lemma candidate_87: forall (l : lst) (lf6 : nat), @eq nat (add (len (rev l)) lf6) (Nat.add lf6 (len l)).
Lemma candidate_990: forall (l : lst), @eq nat (add (Nat.add (len (rev l)) O) (S O)) (S (len l)).
Lemma candidate_173: forall (l : lst), @eq nat (add (len (rev l)) (S O)) (S (Nat.add (len l) O)).
Lemma candidate_44: forall (lf5 : lst) (lf6 : nat), @eq nat (add (len lf5) lf6) (Nat.add lf6 (len (rev lf5))).
Lemma candidate_997: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (S (Nat.add (len (rev lf5)) O)).
Lemma candidate_782: forall (lf7 : nat) (l : lst), @eq nat (add (len (rev l)) (S lf7)) (S (Nat.add (len l) lf7)).
Lemma candidate_109: forall (lf7 : nat) (l : lst), @eq nat (add (len (rev l)) (S lf7)) (S (Nat.add lf7 (len l))).
Lemma candidate_106: forall (lf7 : nat) (l : lst), @eq nat (add (len (rev l)) (S lf7)) (Nat.add lf7 (S (len l))).
Lemma candidate_394: forall (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (Nat.add (len l) (S O)) (S lf4).
Lemma candidate_4: forall (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (add (len (rev l)) (S O)) (S lf4).
Lemma candidate_620: forall (lf7 : nat) (lf5 : lst), forall _ : @eq nat (len lf5) (Nat.add lf7 (len lf5)), @eq nat (add (len lf5) (S lf7)) (S (Nat.add lf7 (len lf5))).

Category 3 (provable):
Count = 33

Lemma candidate_9: forall (lf3 : nat), @eq nat (Nat.add lf3 O) lf3.
Lemma candidate_200: forall (l : lst), @eq nat (len l) (len (app l Nil)).
Lemma candidate_92: forall (l : lst), @eq lst (rev l) (rev (app l Nil)).
Lemma candidate_219: forall (lf4 : nat), @eq nat (S (Nat.add lf4 O)) (S lf4).
Lemma candidate_40: forall (lf5 : lst), @eq nat (len lf5) (len (app lf5 Nil)).
Lemma candidate_185: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add lf1 O) O).
Lemma candidate_8: forall (lf3 : nat), @eq nat (Nat.add (Nat.add lf3 O) O) lf3.
Lemma candidate_872: forall (lf4 : nat), @eq nat (add (Nat.add lf4 O) (S O)) (S lf4).
Lemma candidate_218: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 (S O)) O) (S lf4).
Lemma candidate_217: forall (lf4 : nat), @eq nat (Nat.add (Nat.add lf4 O) (S O)) (S lf4).
Lemma candidate_216: forall (lf4 : nat), @eq nat (S (Nat.add (Nat.add lf4 O) O)) (S lf4).
Lemma candidate_188: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add (Nat.add lf4 O) O)).
Lemma candidate_992: forall (l : lst), @eq nat (add (len (app l Nil)) (S O)) (S (len l)).
Lemma candidate_184: forall (lf1 : nat), @eq nat lf1 (Nat.add (Nat.add (Nat.add lf1 O) O) O).
Lemma candidate_11: forall (lf2 : nat) (lf6 : nat), @eq nat (add lf2 lf6) (Nat.add lf2 (Nat.add lf6 O)).
Lemma candidate_7: forall (lf3 : nat), @eq nat (Nat.add (Nat.add (Nat.add lf3 O) O) O) lf3.
Lemma candidate_999: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (S (len (app lf5 Nil))).
Lemma candidate_871: forall (lf4 : nat), @eq nat (add (Nat.add (Nat.add lf4 O) O) (S O)) (S lf4).
Lemma candidate_133: forall (lf2 : nat), @eq nat (add lf2 (S O)) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_132: forall (lf2 : nat), @eq nat (add lf2 (S O)) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_953: forall (lf2 : nat), @eq nat (add lf2 (S O)) (S (Nat.add (Nat.add (Nat.add lf2 O) O) O)).
Lemma candidate_870: forall (lf4 : nat), @eq nat (add (Nat.add (Nat.add (Nat.add lf4 O) O) O) (S O)) (S lf4).
Lemma candidate_616: forall (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (S (len lf5)) (S (len l)).
Lemma candidate_395: forall (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (S (len (rev l))) (S lf4).
Lemma candidate_396: forall (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (S (Nat.add lf4 O)) (S lf4).
Lemma candidate_611: forall (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (Nat.add (len l) (S O)) (S (len l)).
Lemma candidate_390: forall (lf7 : nat) (lf4 : nat), forall _ : @eq nat (Nat.add lf4 lf7) lf4, @eq nat (add (Nat.add lf4 lf7) (S lf7)) (S lf4).
Lemma candidate_624: forall (lf7 : nat) (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (add (len lf5) (S lf7)) (S (Nat.add lf7 (len l))).
Lemma candidate_383: forall (lf7 : nat) (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (add (len (rev l)) (S lf7)) (Nat.add lf4 (S lf7)).
Lemma candidate_625: forall (lf7 : nat) (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (add (len lf5) (S lf7)) (S (Nat.add lf7 (len lf5))).
Lemma candidate_606: forall (lf7 : nat) (l : lst), forall _ : @eq nat (Nat.add (len l) lf7) (len l), @eq nat (add (Nat.add (len l) lf7) (S lf7)) (S (len l)).
Lemma candidate_618: forall (lf7 : nat) (lf5 : lst), forall _ : @eq nat (len lf5) (Nat.add (len lf5) lf7), @eq nat (add (len lf5) (S lf7)) (S (Nat.add (len lf5) lf7)).
Lemma candidate_388: forall (lf7 : nat) (lf4 : nat), forall _ : @eq nat (Nat.add lf4 (Nat.add lf7 O)) lf4, @eq nat (add (Nat.add lf4 (Nat.add lf7 O)) (S lf7)) (S lf4).

Category 3 (not provable):
Count = 27

Lemma candidate_93: forall (l : lst), @eq lst (rev l) (app (rev l) Nil).
Lemma candidate_199: forall (l : lst), @eq nat (len l) (len (rev (rev l))).
Lemma candidate_91: forall (l : lst), @eq lst (rev l) (rev (rev (rev l))).
Lemma candidate_79: forall (l : lst), @eq nat (len (rev l)) (len (app l Nil)).
Lemma candidate_39: forall (lf5 : lst), @eq nat (len lf5) (len (rev (rev lf5))).
Lemma candidate_198: forall (l : lst), @eq nat (len l) (Nat.add (len (rev l)) O).
Lemma candidate_80: forall (l : lst), @eq nat (len (rev l)) (Nat.add (len l) O).
Lemma candidate_90: forall (l : lst), @eq lst (rev l) (app (app (rev l) Nil) Nil).
Lemma candidate_89: forall (l : lst), @eq lst (rev l) (app (rev (app l Nil)) Nil).
Lemma candidate_38: forall (lf5 : lst), @eq nat (len lf5) (Nat.add (len (rev lf5)) O).
Lemma candidate_991: forall (l : lst), @eq nat (add (len (rev (rev l))) (S O)) (S (len l)).
Lemma candidate_481: forall (l : lst), @eq nat (len (app (rev l) (Cons O Nil))) (S (len l)).
Lemma candidate_205: forall (l : lst), @eq nat (S (len l)) (len (app (rev l) (Cons O Nil))).
Lemma candidate_998: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (S (len (rev (rev lf5)))).
Lemma candidate_480: forall (l : lst), @eq nat (len (app (rev (rev l)) (Cons O Nil))) (S (len l)).
Lemma candidate_204: forall (l : lst), @eq nat (S (len l)) (len (app (rev (rev l)) (Cons O Nil))).
Lemma candidate_152: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (len (app (rev lf5) (Cons O Nil))).
Lemma candidate_398: forall (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (S (len l)) (S lf4).
Lemma candidate_172: forall (l : lst), @eq nat (add (len (rev l)) (S O)) (len (app (rev l) (Cons O Nil))).
Lemma candidate_151: forall (lf5 : lst), @eq nat (add (len lf5) (S O)) (len (app (rev (rev lf5)) (Cons O Nil))).
Lemma candidate_171: forall (l : lst), @eq nat (add (len (rev l)) (S O)) (len (app (rev (rev l)) (Cons O Nil))).
Lemma candidate_397: forall (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (Nat.add lf4 (S O)) (S lf4).
Lemma candidate_614: forall (l : lst) (lf5 : lst), forall _ : @eq nat (len lf5) (len l), @eq nat (S (len (rev lf5))) (S (len l)).
Lemma candidate_391: forall (lf7 : nat) (lf4 : nat), forall _ : @eq nat (Nat.add lf7 lf4) lf4, @eq nat (add (Nat.add lf7 lf4) (S lf7)) (S lf4).
Lemma candidate_384: forall (lf7 : nat) (l : lst) (lf4 : nat), forall _ : @eq nat (len (rev l)) lf4, @eq nat (add (len (rev l)) (S lf7)) (Nat.add lf7 (S lf4)).
Lemma candidate_608: forall (lf7 : nat) (l : lst), forall _ : @eq nat (Nat.add lf7 (len l)) (len l), @eq nat (add (Nat.add lf7 (len l)) (S lf7)) (S (len l)).
Lemma candidate_389: forall (lf7 : nat) (lf4 : nat), forall _ : @eq nat (Nat.add lf7 (Nat.add lf4 O)) lf4, @eq nat (add (Nat.add lf7 (Nat.add lf4 O)) (S lf7)) (S lf4).
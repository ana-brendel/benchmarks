File Information
- File name: list_rev_len
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev_len-len_rev-38-len_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev_len-len_rev-38-len_append
- Namespace: adtind
- Proof name: len_rev
- Theorem: Theorem len_rev: forall x0 : lst, @eq nat (len (rev x0)) (len x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Nat.

Proof Context
* Goal State: @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x))

* Hypothesis:
IHx : @eq nat (len (rev x)) (len x)
x : lst
n : nat

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat

* Terms:
lfappend (rev x) (Cons n Nil) : lst
@eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)) : Prop
len (rev x) : nat
nat : Set
x : lst
len x : nat
S (len x) : nat
lst : Set
Cons n Nil : lst
@eq nat (len (rev x)) (len x) : Prop
n : nat
rev x : lst
Nil : lst
len (lfappend (rev x) (Cons n Nil)) : nat

* Functions:
len  : forall _ : lst, nat
rev  : forall _ : lst, lst
lfappend  : forall (_ : lst) (_ : lst), lst
S  : forall _ : nat, nat
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons n Nil
lf7 : lst = Nil
lf1 : nat = len (lfappend (rev x) (Cons n Nil))
lf4 : nat = S (len x)
lf5 : nat = len x
lf2 : lst = lfappend (rev x) (Cons n Nil)
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.
Lemma conj9: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj13: forall (x : lst) (lf1 : nat), @eq nat lf1 (S (len x)).
Lemma conj17: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj19: forall (lf6 : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) lf4.
Lemma conj20: forall (x : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) lf4.
Lemma conj25: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj27: forall (lf6 : lst) (lf5 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S lf5).
Lemma conj28: forall (lf5 : nat) (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S lf5).
Lemma conj29: forall (lf2 : lst) (x : lst), @eq nat (len lf2) (S (len x)).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len x)).
Lemma conj32: forall (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma conj83: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) lf4.
Lemma conj84: forall (x : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) lf4.
Lemma conj91: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S lf5).
Lemma conj92: forall (lf5 : nat) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len x)).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma conj115: forall (lf6 : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) lf4.
Lemma conj116: forall (x : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) lf4.
Lemma conj123: forall (lf6 : lst) (lf5 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma conj124: forall (lf5 : nat) (x : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma conj128: forall (x : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)).


<---VALIDITY CHECKS--->
Time elapsed: 48 seconds
Valid:
Lemma conj128: forall (x : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)).

Invalid:
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma conj124: forall (lf5 : nat) (x : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma conj116: forall (x : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) lf4.
Lemma conj115: forall (lf6 : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) lf4.
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len x)).
Lemma conj92: forall (lf5 : nat) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S lf5).
Lemma conj84: forall (x : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) lf4.
Lemma conj83: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) lf4.
Lemma conj32: forall (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len x)).
Lemma conj29: forall (lf2 : lst) (x : lst), @eq nat (len lf2) (S (len x)).
Lemma conj28: forall (lf5 : nat) (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S lf5).
Lemma conj27: forall (lf6 : lst) (lf5 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S lf5).
Lemma conj25: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj20: forall (x : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) lf4.
Lemma conj19: forall (lf6 : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) lf4.
Lemma conj17: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj13: forall (x : lst) (lf1 : nat), @eq nat lf1 (S (len x)).
Lemma conj9: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.

<---ADD IMPLICATIONS--->
Time elapsed: 78 seconds
Generalizations:
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma conj127_imp: forall (lf6 : lst) (x : lst) (n : nat), forall _ : @eq nat (len lf6) (len x),
@eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma conj124: forall (lf5 : nat) (x : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma conj124_imp: forall (lf5 : nat) (x : lst) (n : nat), forall _ : @eq nat (len (rev x)) lf5,
@eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma conj123: forall (lf6 : lst) (lf5 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma conj123_imp: forall (lf6 : lst) (lf5 : nat) (n : nat), forall _ : @eq nat (len lf6) lf5,
@eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma conj116: forall (x : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) lf4.
Lemma conj115: forall (lf6 : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) lf4.
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len x)).
Lemma conj92: forall (lf5 : nat) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S lf5).
Lemma conj91: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S lf5).
Lemma conj84: forall (x : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) lf4.
Lemma conj83: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) lf4.
Lemma conj32: forall (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len x)).
Lemma conj29: forall (lf2 : lst) (x : lst), @eq nat (len lf2) (S (len x)).
Lemma conj28: forall (lf5 : nat) (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S lf5).
Lemma conj27: forall (lf6 : lst) (lf5 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S lf5).
Lemma conj25: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj20: forall (x : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) lf4.
Lemma conj19: forall (lf6 : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) lf4.
Lemma conj17: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj13: forall (x : lst) (lf1 : nat), @eq nat lf1 (S (len x)).
Lemma conj9: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.


<---VALIDITY CHECKS--->
Time elapsed: 117 seconds
Valid:
Lemma conj123_imp: forall (lf6 : lst) (lf5 : nat) (n : nat), forall _ : @eq nat (len lf6) lf5,
@eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma conj124_imp: forall (lf5 : nat) (x : lst) (n : nat), forall _ : @eq nat (len (rev x)) lf5,
@eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma conj127_imp: forall (lf6 : lst) (x : lst) (n : nat), forall _ : @eq nat (len lf6) (len x),
@eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).

Invalid:
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.
Lemma conj9: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj13: forall (x : lst) (lf1 : nat), @eq nat lf1 (S (len x)).
Lemma conj17: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj19: forall (lf6 : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) lf4.
Lemma conj20: forall (x : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) lf4.
Lemma conj25: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj27: forall (lf6 : lst) (lf5 : nat) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S lf5).
Lemma conj28: forall (lf5 : nat) (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S lf5).
Lemma conj29: forall (lf2 : lst) (x : lst), @eq nat (len lf2) (S (len x)).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf3 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len x)).
Lemma conj32: forall (x : lst) (lf3 : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma conj83: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) lf4.
Lemma conj84: forall (x : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) lf4.
Lemma conj91: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S lf5).
Lemma conj92: forall (lf5 : nat) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len x)).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma conj115: forall (lf6 : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) lf4.
Lemma conj116: forall (x : lst) (lf4 : nat) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) lf4.
Lemma conj123: forall (lf6 : lst) (lf5 : nat) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma conj124: forall (lf5 : nat) (x : lst) (n : nat), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).


<---CREATE SKETCHES--->
Time elapsed: 117 seconds
Sketches:
Sketch conj9_sketch0 : @eq nat lf1 (##hole##)
Sketch conj9_term_sketch0 : @eq nat (S lf5) (##hole##)
Sketch conj13_sketch0 : @eq nat lf1 (S (##hole##))
Sketch conj13_sketch1 : @eq nat lf1 (##hole##)
Sketch conj13_term_sketch0 : @eq nat (len x) (##hole##)
Sketch conj13_term_sketch1 : @eq nat (S (len x)) (##hole##)
Sketch conj17_sketch0 : @eq nat (##hole##) lf4
Sketch conj17_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj19_sketch0 : @eq nat (len (##hole##)) lf4
Sketch conj19_sketch1 : @eq nat (##hole##) lf4
Sketch conj19_term_sketch0 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq nat (len (lfappend lf6 lf3)) (##hole##)
Sketch conj20_sketch0 : @eq nat (len (##hole##)) lf4
Sketch conj20_sketch1 : @eq nat (##hole##) lf4
Sketch conj20_sketch2 : @eq nat (len (lfappend (##hole##) lf3)) lf4
Sketch conj20_term_sketch0 : @eq lst (lfappend (rev x) lf3) (##hole##)
Sketch conj20_term_sketch1 : @eq nat (len (lfappend (rev x) lf3)) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj25_sketch0 : @eq nat (##hole##) (S lf5)
Sketch conj25_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj25_term_sketch0 : @eq nat (len lf2) (##hole##)
Sketch conj25_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj27_sketch0 : @eq nat (len (##hole##)) (S lf5)
Sketch conj27_sketch1 : @eq nat (len (lfappend lf6 lf3)) (##hole##)
Sketch conj27_sketch2 : @eq nat (##hole##) (S lf5)
Sketch conj27_term_sketch0 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj27_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj27_term_sketch2 : @eq nat (len (lfappend lf6 lf3)) (##hole##)
Sketch conj28_sketch0 : @eq nat (len (##hole##)) (S lf5)
Sketch conj28_sketch1 : @eq nat (len (lfappend (rev x) lf3)) (##hole##)
Sketch conj28_sketch2 : @eq nat (##hole##) (S lf5)
Sketch conj28_sketch3 : @eq nat (len (lfappend (##hole##) lf3)) (S lf5)
Sketch conj28_term_sketch0 : @eq lst (lfappend (rev x) lf3) (##hole##)
Sketch conj28_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj28_term_sketch2 : @eq nat (len (lfappend (rev x) lf3)) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj29_sketch0 : @eq nat (len lf2) (S (##hole##))
Sketch conj29_sketch1 : @eq nat (len lf2) (##hole##)
Sketch conj29_sketch2 : @eq nat (##hole##) (S (len x))
Sketch conj29_term_sketch0 : @eq nat (len x) (##hole##)
Sketch conj29_term_sketch1 : @eq nat (S (len x)) (##hole##)
Sketch conj29_term_sketch2 : @eq nat (len lf2) (##hole##)
Sketch conj31_sketch0 : @eq nat (len (lfappend lf6 lf3)) (S (##hole##))
Sketch conj31_sketch1 : @eq nat (len (lfappend lf6 lf3)) (##hole##)
Sketch conj31_sketch2 : @eq nat (len (##hole##)) (S (len x))
Sketch conj31_sketch3 : @eq nat (##hole##) (S (len x))
Sketch conj31_term_sketch0 : @eq nat (len x) (##hole##)
Sketch conj31_term_sketch1 : @eq nat (S (len x)) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj31_term_sketch3 : @eq nat (len (lfappend lf6 lf3)) (##hole##)
Sketch conj32_sketch0 : @eq nat (len (##hole##)) (S (len x))
Sketch conj32_sketch1 : @eq nat (len (lfappend (rev x) lf3)) (S (##hole##))
Sketch conj32_sketch2 : @eq nat (len (lfappend (rev x) lf3)) (##hole##)
Sketch conj32_sketch3 : @eq nat (##hole##) (S (len x))
Sketch conj32_sketch4 : @eq nat (len (lfappend (##hole##) lf3)) (S (len x))
Sketch conj32_term_sketch0 : @eq lst (lfappend (rev x) lf3) (##hole##)
Sketch conj32_term_sketch1 : @eq nat (len x) (##hole##)
Sketch conj32_term_sketch2 : @eq nat (S (len x)) (##hole##)
Sketch conj32_term_sketch3 : @eq nat (len (lfappend (rev x) lf3)) (##hole##)
Sketch conj32_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj83_sketch0 : @eq nat (##hole##) lf4
Sketch conj83_sketch1 : @eq nat (len (##hole##)) lf4
Sketch conj83_sketch2 : @eq nat (len (lfappend lf6 (##hole##))) lf4
Sketch conj83_term_sketch0 : @eq nat (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj83_term_sketch1 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj83_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj84_sketch0 : @eq nat (##hole##) lf4
Sketch conj84_sketch1 : @eq nat (len (##hole##)) lf4
Sketch conj84_sketch2 : @eq nat (len (lfappend (rev x) (##hole##))) lf4
Sketch conj84_sketch3 : @eq nat (len (lfappend (##hole##) (Cons n lf7))) lf4
Sketch conj84_term_sketch0 : @eq nat (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj84_term_sketch1 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj91_sketch0 : @eq nat (##hole##) (S lf5)
Sketch conj91_sketch1 : @eq nat (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj91_sketch2 : @eq nat (len (##hole##)) (S lf5)
Sketch conj91_sketch3 : @eq nat (len (lfappend lf6 (##hole##))) (S lf5)
Sketch conj91_term_sketch0 : @eq nat (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj91_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj92_sketch0 : @eq nat (##hole##) (S lf5)
Sketch conj92_sketch1 : @eq nat (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj92_sketch2 : @eq nat (len (##hole##)) (S lf5)
Sketch conj92_sketch3 : @eq nat (len (lfappend (rev x) (##hole##))) (S lf5)
Sketch conj92_sketch4 : @eq nat (len (lfappend (##hole##) (Cons n lf7))) (S lf5)
Sketch conj92_term_sketch0 : @eq nat (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj92_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj95_sketch0 : @eq nat (len (lfappend lf6 (Cons n lf7))) (S (##hole##))
Sketch conj95_sketch1 : @eq nat (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_sketch2 : @eq nat (##hole##) (S (len x))
Sketch conj95_sketch3 : @eq nat (len (##hole##)) (S (len x))
Sketch conj95_sketch4 : @eq nat (len (lfappend lf6 (##hole##))) (S (len x))
Sketch conj95_term_sketch0 : @eq nat (len x) (##hole##)
Sketch conj95_term_sketch1 : @eq nat (S (len x)) (##hole##)
Sketch conj95_term_sketch2 : @eq nat (len (lfappend lf6 (Cons n lf7))) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (lfappend lf6 (Cons n lf7)) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj96_sketch0 : @eq nat (##hole##) (S (len x))
Sketch conj96_sketch1 : @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (##hole##))
Sketch conj96_sketch2 : @eq nat (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj96_sketch3 : @eq nat (len (##hole##)) (S (len x))
Sketch conj96_sketch4 : @eq nat (len (lfappend (rev x) (##hole##))) (S (len x))
Sketch conj96_sketch5 : @eq nat (len (lfappend (##hole##) (Cons n lf7))) (S (len x))
Sketch conj96_term_sketch0 : @eq nat (len (lfappend (rev x) (Cons n lf7))) (##hole##)
Sketch conj96_term_sketch1 : @eq nat (len x) (##hole##)
Sketch conj96_term_sketch2 : @eq nat (S (len x)) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (lfappend (rev x) (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj115_sketch0 : @eq nat (##hole##) lf4
Sketch conj115_sketch1 : @eq nat (len (##hole##)) lf4
Sketch conj115_sketch2 : @eq nat (len (lfappend lf6 (##hole##))) lf4
Sketch conj115_sketch3 : @eq nat (len (lfappend lf6 (Cons n (##hole##)))) lf4
Sketch conj115_term_sketch0 : @eq nat (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj115_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj115_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj115_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj116_sketch0 : @eq nat (len (##hole##)) lf4
Sketch conj116_sketch1 : @eq nat (len (lfappend (rev x) (##hole##))) lf4
Sketch conj116_sketch2 : @eq nat (len (lfappend (rev x) (Cons n (##hole##)))) lf4
Sketch conj116_sketch3 : @eq nat (len (lfappend (##hole##) (Cons n Nil))) lf4
Sketch conj116_sketch4 : @eq nat (##hole##) lf4
Sketch conj116_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj116_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj116_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj116_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj116_term_sketch4 : @eq nat (len (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj123_sketch0 : @eq nat (##hole##) (S lf5)
Sketch conj123_sketch1 : @eq nat (len (##hole##)) (S lf5)
Sketch conj123_sketch2 : @eq nat (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj123_sketch3 : @eq nat (len (lfappend lf6 (##hole##))) (S lf5)
Sketch conj123_sketch4 : @eq nat (len (lfappend lf6 (Cons n (##hole##)))) (S lf5)
Sketch conj123_term_sketch0 : @eq nat (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj123_term_sketch1 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj123_term_sketch2 : @eq nat (S lf5) (##hole##)
Sketch conj123_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj123_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj124_sketch0 : @eq nat (len (##hole##)) (S lf5)
Sketch conj124_sketch1 : @eq nat (len (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj124_sketch2 : @eq nat (len (lfappend (rev x) (##hole##))) (S lf5)
Sketch conj124_sketch3 : @eq nat (len (lfappend (rev x) (Cons n (##hole##)))) (S lf5)
Sketch conj124_sketch4 : @eq nat (len (lfappend (##hole##) (Cons n Nil))) (S lf5)
Sketch conj124_sketch5 : @eq nat (##hole##) (S lf5)
Sketch conj124_term_sketch0 : @eq lst (lfappend (rev x) (Cons n Nil)) (##hole##)
Sketch conj124_term_sketch1 : @eq nat (S lf5) (##hole##)
Sketch conj124_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj124_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj124_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj124_term_sketch5 : @eq nat (len (lfappend (rev x) (Cons n Nil))) (##hole##)
Sketch conj127_sketch0 : @eq nat (##hole##) (S (len x))
Sketch conj127_sketch1 : @eq nat (len (lfappend lf6 (Cons n Nil))) (S (##hole##))
Sketch conj127_sketch2 : @eq nat (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj127_sketch3 : @eq nat (len (##hole##)) (S (len x))
Sketch conj127_sketch4 : @eq nat (len (lfappend lf6 (##hole##))) (S (len x))
Sketch conj127_sketch5 : @eq nat (len (lfappend lf6 (Cons n (##hole##)))) (S (len x))
Sketch conj127_term_sketch0 : @eq nat (len (lfappend lf6 (Cons n Nil))) (##hole##)
Sketch conj127_term_sketch1 : @eq nat (len x) (##hole##)
Sketch conj127_term_sketch2 : @eq nat (S (len x)) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (lfappend lf6 (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch4 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch5 : @eq lst Nil (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 455 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_14
Sketch conj124_term_sketch0 --> Problem  synth_45
Sketch conj83_sketch1 --> Problem  synth_8
Sketch conj25_sketch1 --> Problem  synth_7
Sketch conj84_sketch1 --> Problem  synth_8
Sketch conj127_sketch5 --> Problem  synth_51
Sketch conj116_term_sketch3 --> Problem  synth_14
Sketch conj96_sketch4 --> Problem  synth_36
Sketch conj115_sketch3 --> Problem  synth_38
Sketch conj20_term_sketch2 --> Problem  synth_14
Sketch conj124_term_sketch1 --> Problem  synth_2
Sketch conj17_term_sketch0 --> Problem  synth_7
Sketch conj13_term_sketch1 --> Problem  synth_5
Sketch conj127_sketch3 --> Problem  synth_19
Sketch conj31_sketch0 --> Problem  synth_18
Sketch conj127_term_sketch0 --> Problem  synth_39
Sketch conj115_sketch2 --> Problem  synth_22
Sketch conj124_term_sketch2 --> Problem  synth_41
Sketch conj124_sketch5 --> Problem  synth_2
Sketch conj123_sketch4 --> Problem  synth_47
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj84_sketch2 --> Problem  synth_26
Sketch conj127_sketch4 --> Problem  synth_34
Sketch conj124_sketch1 --> Problem  synth_46
Sketch conj92_term_sketch2 --> Problem  synth_29
Sketch conj32_sketch3 --> Problem  synth_5
Sketch conj32_term_sketch3 --> Problem  synth_13
Sketch conj28_sketch2 --> Problem  synth_2
Sketch conj123_sketch3 --> Problem  synth_30
Sketch conj92_term_sketch3 --> Problem  synth_25
Sketch conj13_term_sketch0 --> Problem  synth_4
Sketch conj83_term_sketch1 --> Problem  synth_24
Sketch conj19_term_sketch1 --> Problem  synth_10
Sketch conj28_term_sketch2 --> Problem  synth_13
Sketch conj27_sketch1 --> Problem  synth_10
Sketch conj127_term_sketch5 --> Problem  synth_42
Sketch conj96_term_sketch2 --> Problem  synth_5
Sketch conj91_sketch3 --> Problem  synth_30
Sketch conj29_term_sketch1 --> Problem  synth_5
Sketch conj84_term_sketch3 --> Problem  synth_14
Sketch conj32_sketch2 --> Problem  synth_13
Sketch conj123_term_sketch1 --> Problem  synth_40
Sketch conj127_term_sketch4 --> Problem  synth_41
Sketch conj91_term_sketch3 --> Problem  synth_25
Sketch conj95_sketch1 --> Problem  synth_23
Sketch conj27_term_sketch1 --> Problem  synth_2
Sketch conj96_sketch1 --> Problem  synth_35
Sketch conj116_sketch2 --> Problem  synth_43
Sketch conj20_sketch2 --> Problem  synth_11
Sketch conj92_sketch4 --> Problem  synth_32
Sketch conj96_term_sketch1 --> Problem  synth_4
Sketch conj124_sketch4 --> Problem  synth_49
Sketch conj84_term_sketch1 --> Problem  synth_29
Sketch conj95_term_sketch4 --> Problem  synth_25
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj127_term_sketch3 --> Problem  synth_40
Sketch conj91_sketch2 --> Problem  synth_15
Sketch conj92_sketch2 --> Problem  synth_15
Sketch conj95_term_sketch3 --> Problem  synth_24
Sketch conj29_term_sketch0 --> Problem  synth_4
Sketch conj31_term_sketch0 --> Problem  synth_4
Sketch conj96_term_sketch4 --> Problem  synth_25
Sketch conj116_term_sketch0 --> Problem  synth_45
Sketch conj96_term_sketch5 --> Problem  synth_14
Sketch conj115_term_sketch3 --> Problem  synth_42
Sketch conj116_sketch1 --> Problem  synth_26
Sketch conj83_sketch0 --> Problem  synth_6
Sketch conj27_sketch0 --> Problem  synth_15
Sketch conj96_term_sketch3 --> Problem  synth_29
Sketch conj25_sketch0 --> Problem  synth_2
Sketch conj32_sketch4 --> Problem  synth_21
Sketch conj32_term_sketch1 --> Problem  synth_4
Sketch conj127_sketch0 --> Problem  synth_5
Sketch conj116_term_sketch4 --> Problem  synth_46
Sketch conj92_sketch1 --> Problem  synth_28
Sketch conj13_sketch1 --> Problem  synth_1
Sketch conj127_term_sketch2 --> Problem  synth_5
Sketch conj123_sketch2 --> Problem  synth_39
Sketch conj92_term_sketch4 --> Problem  synth_14
Sketch conj116_sketch0 --> Problem  synth_8
Sketch conj84_sketch3 --> Problem  synth_27
Sketch conj27_term_sketch0 --> Problem  synth_9
Sketch conj29_sketch2 --> Problem  synth_5
Sketch conj25_term_sketch0 --> Problem  synth_7
Sketch conj84_term_sketch2 --> Problem  synth_25
Sketch conj84_sketch0 --> Problem  synth_6
Sketch conj28_sketch0 --> Problem  synth_15
Sketch conj124_term_sketch4 --> Problem  synth_14
Sketch conj92_term_sketch1 --> Problem  synth_2
Sketch conj29_term_sketch2 --> Problem  synth_7
Sketch conj95_sketch4 --> Problem  synth_34
Sketch conj96_term_sketch0 --> Problem  synth_28
Sketch conj83_term_sketch2 --> Problem  synth_25
Sketch conj123_sketch1 --> Problem  synth_15
Sketch conj28_term_sketch1 --> Problem  synth_2
Sketch conj31_term_sketch3 --> Problem  synth_10
Sketch conj31_term_sketch1 --> Problem  synth_5
Sketch conj127_sketch2 --> Problem  synth_39
Sketch conj32_sketch0 --> Problem  synth_19
Sketch conj123_term_sketch4 --> Problem  synth_42
Sketch conj28_term_sketch3 --> Problem  synth_14
Sketch conj27_term_sketch2 --> Problem  synth_10
Sketch conj123_term_sketch3 --> Problem  synth_41
Sketch conj29_sketch0 --> Problem  synth_17
Sketch conj116_term_sketch2 --> Problem  synth_42
Sketch conj84_term_sketch0 --> Problem  synth_28
Sketch conj20_sketch0 --> Problem  synth_8
Sketch conj91_sketch0 --> Problem  synth_2
Sketch conj20_term_sketch0 --> Problem  synth_12
Sketch conj91_term_sketch0 --> Problem  synth_23
Sketch conj95_sketch3 --> Problem  synth_19
Sketch conj91_term_sketch2 --> Problem  synth_24
Sketch conj27_sketch2 --> Problem  synth_2
Sketch conj115_term_sketch0 --> Problem  synth_39
Sketch conj31_sketch2 --> Problem  synth_19
Sketch conj96_sketch2 --> Problem  synth_28
Sketch conj123_term_sketch2 --> Problem  synth_2
Sketch conj32_term_sketch2 --> Problem  synth_5
Sketch conj31_sketch3 --> Problem  synth_5
Sketch conj19_term_sketch0 --> Problem  synth_9
Sketch conj29_sketch1 --> Problem  synth_7
Sketch conj32_sketch1 --> Problem  synth_20
Sketch conj115_term_sketch1 --> Problem  synth_40
Sketch conj92_sketch3 --> Problem  synth_31
Sketch conj19_sketch0 --> Problem  synth_8
Sketch conj17_sketch0 --> Problem  synth_6
Sketch conj124_sketch2 --> Problem  synth_31
Sketch conj96_sketch3 --> Problem  synth_19
Sketch conj25_term_sketch1 --> Problem  synth_2
Sketch conj83_term_sketch0 --> Problem  synth_23
Sketch conj124_term_sketch5 --> Problem  synth_46
Sketch conj124_sketch3 --> Problem  synth_48
Sketch conj96_sketch0 --> Problem  synth_5
Sketch conj96_sketch5 --> Problem  synth_37
Sketch conj95_term_sketch1 --> Problem  synth_5
Sketch conj95_term_sketch0 --> Problem  synth_4
Sketch conj20_sketch1 --> Problem  synth_6
Sketch conj116_sketch4 --> Problem  synth_6
Sketch conj115_sketch1 --> Problem  synth_8
Sketch conj28_term_sketch0 --> Problem  synth_12
Sketch conj123_sketch0 --> Problem  synth_2
Sketch conj127_sketch1 --> Problem  synth_50
Sketch conj32_term_sketch0 --> Problem  synth_12
Sketch conj20_term_sketch1 --> Problem  synth_13
Sketch conj124_sketch0 --> Problem  synth_15
Sketch conj92_sketch0 --> Problem  synth_2
Sketch conj19_sketch1 --> Problem  synth_6
Sketch conj91_sketch1 --> Problem  synth_23
Sketch conj28_sketch3 --> Problem  synth_16
Sketch conj28_sketch1 --> Problem  synth_13
Sketch conj115_sketch0 --> Problem  synth_6
Sketch conj95_sketch2 --> Problem  synth_5
Sketch conj116_sketch3 --> Problem  synth_44
Sketch conj83_sketch2 --> Problem  synth_22
Sketch conj115_term_sketch2 --> Problem  synth_41
Sketch conj123_term_sketch0 --> Problem  synth_39
Sketch conj91_term_sketch1 --> Problem  synth_2
Sketch conj127_term_sketch1 --> Problem  synth_4
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj31_sketch1 --> Problem  synth_10
Sketch conj92_term_sketch0 --> Problem  synth_28
Sketch conj31_term_sketch2 --> Problem  synth_9
Sketch conj95_term_sketch2 --> Problem  synth_23
Sketch conj95_sketch0 --> Problem  synth_33
Sketch conj116_term_sketch1 --> Problem  synth_41
Sketch conj124_term_sketch3 --> Problem  synth_42


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 871 seconds

Problem: synth_28
 len (lfappend (rev (rev x)) (Cons n Nil))
 len (lfappend (rev (rev x)) (Cons O Nil))
 len (lfappend (rev x) (Cons n Nil))
 len (lfappend (rev x) (Cons O Nil))
 S (len (rev x))
 S (len x)

Problem: synth_17

Problem: synth_29
 lfappend (rev (lfappend lf7 x)) (Cons n Nil)
 rev (lfappend lf7 (Cons n x))
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 lfappend (rev x) (Cons n Nil)

Problem: synth_45
 lfappend (lfappend (rev x) Nil) (Cons n Nil)
 rev (rev (lfappend (rev x) (Cons n Nil)))
 lfappend (lfappend (rev x) (Cons n Nil)) Nil
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_26

Problem: synth_9
 lfappend (lfappend lf6 lf3) Nil
 lfappend lf6 (rev (rev lf3))
 lfappend lf6 (lfappend lf3 Nil)
 rev (lfappend lf3 (rev lf6))
 lfappend lf6 (rev lf3)
 lfappend lf6 lf3

Problem: synth_30

Problem: synth_11

Problem: synth_39
 len (lfappend (rev (rev lf6)) (Cons n Nil))
 len (lfappend (rev (rev lf6)) (Cons O Nil))
 len (lfappend (rev lf6) (Cons n Nil))
 len (lfappend (rev lf6) (Cons O Nil))
 S (len (rev lf6))
 S (len lf6)

Problem: synth_1
 lf1

Problem: synth_46
 len (lfappend (rev (rev x)) (Cons n Nil))
 len (lfappend (rev (rev x)) (Cons O Nil))
 len (lfappend (rev x) (Cons n Nil))
 len (lfappend (rev x) (Cons O Nil))
 S (len (rev x))
 S (len x)

Problem: synth_15

Problem: synth_31

Problem: synth_14
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_8

Problem: synth_34

Problem: synth_12
 rev (lfappend (rev lf3) x)
 lfappend (rev x) (rev (rev lf3))
 lfappend (rev x) (lfappend lf3 Nil)
 lfappend (rev x) (rev lf3)
 rev (lfappend lf3 x)
 lfappend (rev x) lf3

Problem: synth_5
 S (len (lfappend x Nil))
 len (lfappend x (Cons O Nil))
 len (lfappend (rev (rev x)) (Cons O Nil))
 len (lfappend (rev x) (Cons O Nil))
 S (len (rev x))
 S (len x)

Problem: synth_37
 rev (lfappend lf7 x)
 rev (lfappend x Nil)
 lfappend (rev x) lf7
 lfappend (rev x) Nil
 lfappend lf7 (rev x)
 rev x

Problem: synth_50
 len (rev (lfappend lf6 Nil))
 len (lfappend (rev lf6) Nil)
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 len (rev lf6)
 len lf6

Problem: synth_2
 S lf5

Problem: synth_22

Problem: synth_20
 len (rev (lfappend x Nil))
 len (lfappend (rev x) Nil)
 len (rev (rev x))
 len (lfappend x Nil)
 len (rev x)
 len x

Problem: synth_18
 len (rev (lfappend lf6 Nil))
 len (lfappend (rev lf6) Nil)
 len (rev (rev lf6))
 len (lfappend lf6 Nil)
 len (rev lf6)
 len lf6

Problem: synth_21
 lfappend (rev (lfappend x Nil)) Nil
 lfappend (lfappend (rev x) Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev x

Problem: synth_41
 Cons n Nil

Problem: synth_49

Problem: synth_25
 lfappend lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_13
 len (lfappend x (rev lf3))
 len (lfappend lf3 (rev x))
 S (len (rev x))
 len (lfappend x lf3)
 len (lfappend lf3 x)
 S (len x)

Problem: synth_6
 lf4

Problem: synth_7
 len (rev (lfappend lf2 Nil))
 len (lfappend (rev lf2) Nil)
 len (rev (rev lf2))
 len (lfappend lf2 Nil)
 len (rev lf2)
 len lf2

Problem: synth_4
 len (rev (lfappend x Nil))
 len (lfappend (rev x) Nil)
 len (rev (rev x))
 len (lfappend x Nil)
 len (rev x)
 len x

Problem: synth_38
 Nil

Problem: synth_23
 len (lfappend (rev (rev lf6)) (Cons n Nil))
 len (lfappend (rev (rev lf6)) (Cons O Nil))
 len (lfappend (rev lf6) (Cons n Nil))
 len (lfappend (rev lf6) (Cons O Nil))
 S (len (rev lf6))
 S (len lf6)

Problem: synth_27

Problem: synth_42
 Nil

Problem: synth_16

Problem: synth_19

Problem: synth_40
 lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)
 lfappend (lfappend lf6 (Cons n Nil)) Nil
 lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_10
 len (lfappend lf6 (rev lf3))
 len (lfappend lf3 (rev lf6))
 S (len (rev lf6))
 len (lfappend lf6 lf3)
 len (lfappend lf3 lf6)
 S (len lf6)

Problem: synth_33
 len (rev (rev lf6))
 len (lfappend lf6 lf7)
 len (lfappend lf7 lf6)
 len (lfappend lf6 Nil)
 len (rev lf6)
 len lf6

Problem: synth_47
 Nil

Problem: synth_24
 lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)
 rev (lfappend lf7 (Cons n (rev lf6)))
 lfappend lf6 (Cons n (rev lf7))
 lfappend lf6 (Cons n lf7)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_3

Problem: synth_32

Problem: synth_48
 Nil

Problem: synth_44

Problem: synth_36

Problem: synth_51
 Nil

Problem: synth_35
 len (rev (rev x))
 len (lfappend x lf7)
 len (lfappend lf7 x)
 len (lfappend x Nil)
 len (rev x)
 len x

Problem: synth_43
 Nil

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 873 seconds
Lemmas:
Lemma candidate_1: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)).
Lemma candidate_2: forall (n : nat) (lf5 : nat) (lf6 : lst), forall _ : @eq nat (len lf6) lf5, @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma candidate_3: forall (n : nat) (x : lst) (lf5 : nat), forall _ : @eq nat (len (rev x)) lf5, @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma candidate_4: forall (n : nat) (x : lst) (lf6 : lst), forall _ : @eq nat (len lf6) (len x), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma candidate_5: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_6: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_7: forall (lf1 : nat), @eq nat lf1 (lf1).
Lemma candidate_8: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_9: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_10: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_11: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_12: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_13: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_14: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_15: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_16: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_17: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_18: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_19: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_20: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_21: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_22: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_23: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_24: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_25: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_26: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_27: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_28: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 lf3) Nil).
Lemma candidate_29: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_30: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_31: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (lfappend lf3 (rev lf6))).
Lemma candidate_32: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev lf3)).
Lemma candidate_33: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_34: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_35: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_36: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev lf6))).
Lemma candidate_37: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 lf3)).
Lemma candidate_38: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_39: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len lf6)).
Lemma candidate_40: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_41: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend (rev lf3) x)).
Lemma candidate_42: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev (rev lf3))).
Lemma candidate_43: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_44: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev lf3)).
Lemma candidate_45: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend lf3 x)).
Lemma candidate_46: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) lf3).
Lemma candidate_47: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_48: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_49: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev x))).
Lemma candidate_50: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_51: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_52: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_53: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_54: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_55: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_56: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_57: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_58: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_59: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_60: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_61: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_62: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_63: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_64: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_65: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_66: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_67: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_68: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_69: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_70: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_71: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_72: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_73: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_74: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_75: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev lf6))).
Lemma candidate_76: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 lf3)).
Lemma candidate_77: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_78: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len lf6)).
Lemma candidate_79: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_80: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 lf3) Nil).
Lemma candidate_81: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_82: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_83: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (lfappend lf3 (rev lf6))).
Lemma candidate_84: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev lf3)).
Lemma candidate_85: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_86: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_87: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_88: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_89: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev lf6))).
Lemma candidate_90: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 lf3)).
Lemma candidate_91: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_92: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len lf6)).
Lemma candidate_93: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_94: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_95: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev x))).
Lemma candidate_96: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_97: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_98: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_99: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_100: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend (rev lf3) x)).
Lemma candidate_101: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev (rev lf3))).
Lemma candidate_102: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_103: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev lf3)).
Lemma candidate_104: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend lf3 x)).
Lemma candidate_105: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) lf3).
Lemma candidate_106: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_107: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_108: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_109: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev x))).
Lemma candidate_110: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_111: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_112: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_113: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_114: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_115: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_116: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_117: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_118: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_119: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_120: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_121: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_122: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_123: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_124: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_125: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_126: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_127: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_128: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_129: forall (x : lst), @eq nat (S (len (rev x))) (S (len x)).
Lemma candidate_130: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_131: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_132: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_133: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_134: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_135: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_136: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_137: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_138: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_139: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_140: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_141: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_142: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_143: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_144: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_145: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_146: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_147: forall (lf2 : lst), @eq nat (len lf2) (len (rev lf2)).
Lemma candidate_148: forall (lf2 : lst), @eq nat (len lf2) (len lf2).
Lemma candidate_149: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev (lfappend lf6 Nil)))).
Lemma candidate_150: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (lfappend (rev lf6) Nil))).
Lemma candidate_151: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev (rev lf6)))).
Lemma candidate_152: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (lfappend lf6 Nil))).
Lemma candidate_153: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev lf6))).
Lemma candidate_154: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len lf6)).
Lemma candidate_155: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_156: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_157: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev lf6))).
Lemma candidate_158: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 lf3)).
Lemma candidate_159: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_160: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len lf6)).
Lemma candidate_161: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_162: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_163: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_164: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_165: forall (x : lst), @eq nat (S (len (rev x))) (S (len x)).
Lemma candidate_166: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_167: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_168: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_169: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_170: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_171: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_172: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_173: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_174: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_175: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_176: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_177: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_178: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_179: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 lf3) Nil).
Lemma candidate_180: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_181: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_182: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (lfappend lf3 (rev lf6))).
Lemma candidate_183: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev lf3)).
Lemma candidate_184: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_185: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_186: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_187: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len (rev lf6))).
Lemma candidate_188: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 lf3)).
Lemma candidate_189: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_190: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (S (len lf6)).
Lemma candidate_191: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev (lfappend x Nil)))).
Lemma candidate_192: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (lfappend (rev x) Nil))).
Lemma candidate_193: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev (rev x)))).
Lemma candidate_194: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (lfappend x Nil))).
Lemma candidate_195: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev x))).
Lemma candidate_196: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_197: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_198: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_199: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev x))).
Lemma candidate_200: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_201: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_202: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_203: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_204: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_205: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_206: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_207: forall (x : lst), @eq nat (S (len (rev x))) (S (len x)).
Lemma candidate_208: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_209: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (lfappend (rev (lfappend x Nil)) Nil) lf3))   (S (len x)).
Lemma candidate_210: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (lfappend (lfappend (rev x) Nil) Nil) lf3))   (S (len x)).
Lemma candidate_211: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev (rev (rev x))) lf3)) (S (len x)).
Lemma candidate_212: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev (lfappend x Nil)) lf3)) (S (len x)).
Lemma candidate_213: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (lfappend (rev x) Nil) lf3)) (S (len x)).
Lemma candidate_214: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_215: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend (rev lf3) x)).
Lemma candidate_216: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev (rev lf3))).
Lemma candidate_217: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_218: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev lf3)).
Lemma candidate_219: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend lf3 x)).
Lemma candidate_220: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) lf3).
Lemma candidate_221: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_222: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_223: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_224: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_225: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_226: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_227: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_228: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_229: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_230: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_231: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_232: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_233: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_234: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_235: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len (rev x))).
Lemma candidate_236: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_237: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_238: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (S (len x)).
Lemma candidate_239: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_240: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_241: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_242: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_243: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_244: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_245: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_246: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_247: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_248: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_249: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_250: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev lf6))).
Lemma candidate_251: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len lf6)).
Lemma candidate_252: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_253: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_254: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_255: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_256: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_257: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_258: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_259: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_260: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_261: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_262: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_263: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_264: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_265: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_266: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_267: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_268: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_269: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev x))).
Lemma candidate_270: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_271: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_272: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_273: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_274: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_275: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_276: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_277: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_278: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_279: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_280: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_281: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_282: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_283: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_284: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_285: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_286: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_287: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_288: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_289: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_290: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_291: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_292: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_293: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_294: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev lf6))).
Lemma candidate_295: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len lf6)).
Lemma candidate_296: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_297: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_298: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_299: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_300: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev lf6))).
Lemma candidate_301: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len lf6)).
Lemma candidate_302: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_303: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_304: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_305: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_306: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_307: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_308: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_309: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_310: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_311: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_312: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_313: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_314: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_315: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_316: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_317: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_318: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_319: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_320: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev x))).
Lemma candidate_321: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_322: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_323: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_324: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_325: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_326: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev x))).
Lemma candidate_327: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_328: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_329: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_330: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_331: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_332: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_333: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_334: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_335: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_336: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_337: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_338: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_339: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_340: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_341: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_342: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_343: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_344: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_345: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_346: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_347: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev (rev lf6)))).
Lemma candidate_348: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf6 lf7))).
Lemma candidate_349: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf7 lf6))).
Lemma candidate_350: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf6 Nil))).
Lemma candidate_351: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev lf6))).
Lemma candidate_352: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len lf6)).
Lemma candidate_353: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_354: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_355: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_356: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_357: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev lf6))).
Lemma candidate_358: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len lf6)).
Lemma candidate_359: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_360: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_361: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_362: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_363: forall (x : lst), @eq nat (S (len (rev x))) (S (len x)).
Lemma candidate_364: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_365: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_366: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_367: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_368: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_369: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_370: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_371: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_372: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_373: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_374: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_375: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_376: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_377: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_378: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_379: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_380: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_381: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (rev lf6))).
Lemma candidate_382: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len lf6)).
Lemma candidate_383: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7))   (lfappend (rev (lfappend lf7 (rev lf6))) (Cons n Nil)).
Lemma candidate_384: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (rev (lfappend lf7 (Cons n (rev lf6)))).
Lemma candidate_385: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n (rev lf7))).
Lemma candidate_386: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n lf7)).
Lemma candidate_387: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_388: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n lf7)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_389: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_390: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_391: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_392: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_393: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_394: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_395: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_396: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_397: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_398: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_399: forall (x : lst), @eq nat (S (len (rev x))) (S (len x)).
Lemma candidate_400: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_401: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev (rev x)))).
Lemma candidate_402: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend x lf7))).
Lemma candidate_403: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend lf7 x))).
Lemma candidate_404: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend x Nil))).
Lemma candidate_405: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev x))).
Lemma candidate_406: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_407: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_408: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_409: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_410: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_411: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev x))).
Lemma candidate_412: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_413: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev (lfappend lf7 x)) (Cons n lf7))) (S (len x)).
Lemma candidate_414: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev (lfappend x Nil)) (Cons n lf7))) (S (len x)).
Lemma candidate_415: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (lfappend (rev x) lf7) (Cons n lf7))) (S (len x)).
Lemma candidate_416: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (lfappend (rev x) Nil) (Cons n lf7))) (S (len x)).
Lemma candidate_417: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (lfappend lf7 (rev x)) (Cons n lf7))) (S (len x)).
Lemma candidate_418: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_419: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_420: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_421: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_422: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_423: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (rev x))).
Lemma candidate_424: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len x)).
Lemma candidate_425: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_426: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_427: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_428: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_429: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_430: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_431: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_432: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_433: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_434: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_435: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_436: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_437: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend lf7 x)) (Cons n Nil)).
Lemma candidate_438: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (rev (lfappend lf7 (Cons n x))).
Lemma candidate_439: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_440: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_441: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_442: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_443: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend lf7 (Cons n Nil)).
Lemma candidate_444: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_445: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_446: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_447: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_448: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_449: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_450: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_451: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_452: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_453: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_454: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_455: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_456: forall (n : nat) (lf4 : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n (Nil)))) lf4.
Lemma candidate_457: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_458: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_459: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_460: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_461: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_462: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_463: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_464: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_465: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_466: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_467: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_468: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_469: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_470: @eq lst Nil (Nil).
Lemma candidate_471: forall (n : nat) (lf4 : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n (Nil)))) lf4.
Lemma candidate_472: forall (lf4 : nat), @eq nat (lf4) lf4.
Lemma candidate_473: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_474: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_475: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_476: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_477: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_478: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_479: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_480: @eq lst Nil (Nil).
Lemma candidate_481: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_482: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_483: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_484: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_485: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_486: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_487: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_488: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_489: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_490: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_491: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len (rev x))).
Lemma candidate_492: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)).
Lemma candidate_493: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_494: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_495: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_496: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_497: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_498: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_499: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_500: forall (n : nat) (lf5 : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n (Nil)))) (S lf5).
Lemma candidate_501: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_502: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_503: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_504: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_505: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_506: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_507: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_508: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_509: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_510: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_511: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_512: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_513: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_514: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_515: @eq lst Nil (Nil).
Lemma candidate_516: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_517: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_518: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_519: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_520: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len (rev x))).
Lemma candidate_521: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)).
Lemma candidate_522: forall (n : nat) (x : lst) (lf5 : nat), @eq nat (len (lfappend (rev x) (Cons n (Nil)))) (S lf5).
Lemma candidate_523: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_524: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_525: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_526: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_527: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_528: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_529: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_530: forall (lf5 : nat), @eq nat (S lf5) (S lf5).
Lemma candidate_531: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_532: @eq lst Nil (Nil).
Lemma candidate_533: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_534: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_535: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_536: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_537: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_538: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_539: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_540: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_541: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons n Nil))).
Lemma candidate_542: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_543: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len (rev x))).
Lemma candidate_544: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len x)).
Lemma candidate_545: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_546: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_547: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_548: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_549: forall (x : lst), @eq nat (S (len (rev x))) (S (len x)).
Lemma candidate_550: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_551: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev (lfappend lf6 Nil)))).
Lemma candidate_552: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (lfappend (rev lf6) Nil))).
Lemma candidate_553: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev (rev lf6)))).
Lemma candidate_554: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (lfappend lf6 Nil))).
Lemma candidate_555: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_556: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_557: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_558: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_559: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_560: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_561: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_562: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_563: forall (n : nat) (x : lst) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n (Nil)))) (S (len x)).
Lemma candidate_564: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_565: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_566: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_567: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_568: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_569: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_570: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_571: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_572: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_573: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_574: forall (x : lst), @eq nat (len x) (len (rev x)).
Lemma candidate_575: forall (x : lst), @eq nat (len x) (len x).
Lemma candidate_576: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_577: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_578: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_579: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_580: forall (x : lst), @eq nat (S (len x)) (S (len (rev x))).
Lemma candidate_581: forall (x : lst), @eq nat (S (len x)) (S (len x)).
Lemma candidate_582: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_583: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_584: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_585: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_586: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend lf6 (Cons n Nil)).
Lemma candidate_587: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_588: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_589: @eq lst Nil (Nil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1128 seconds
Duplicates removed: 440
Filtered by Quickchick: 62
Filtered by script: 22
Remaining: 65

Lemmas: 
Lemma candidate_55: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_10: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_57: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_56: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_11: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_23: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_24: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_9: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_8: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_125: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_14: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_22: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_21: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_126: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_15: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_54: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_53: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_462: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).
Lemma candidate_128: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_38: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_29: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_17: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_51: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_50: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_41: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend (rev lf3) x)).
Lemma candidate_30: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_28: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 lf3) Nil).
Lemma candidate_461: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_491: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len (rev x))).
Lemma candidate_127: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_35: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_34: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_16: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_48: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_47: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_42: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev (rev lf3))).
Lemma candidate_553: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev (rev lf6)))).
Lemma candidate_43: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_554: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (lfappend lf6 Nil))).
Lemma candidate_349: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf7 lf6))).
Lemma candidate_348: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf6 lf7))).
Lemma candidate_403: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend lf7 x))).
Lemma candidate_402: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend x lf7))).
Lemma candidate_468: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_552: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (lfappend (rev lf6) Nil))).
Lemma candidate_551: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev (lfappend lf6 Nil)))).
Lemma candidate_466: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_464: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_460: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_459: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_2: forall (n : nat) (lf5 : nat) (lf6 : lst), forall _ : @eq nat (len lf6) lf5, @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).
Lemma candidate_490: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_476: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_474: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_477: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_475: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_473: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_458: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_457: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_488: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_487: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_4: forall (n : nat) (x : lst) (lf6 : lst), forall _ : @eq nat (len lf6) (len x), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma candidate_3: forall (n : nat) (x : lst) (lf5 : nat), forall _ : @eq nat (len (rev x)) lf5, @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).
Lemma candidate_465: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_463: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
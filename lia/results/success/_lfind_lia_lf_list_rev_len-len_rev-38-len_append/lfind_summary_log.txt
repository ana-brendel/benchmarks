LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev_len-len_rev-38-len_append

Number of Lemmas: 589
Number of Lemmas (after duplicates removed): 149
Number of Lemmas (after QuickChick used to filter): 87
* Number of Candidate Lemmas: 65

Time until ranking: 1129
Time to complete: 3775

Stuck state true independent of hypotheses: true

Category 1:
Count = 1

Lemma candidate_462: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len lf6)).

Category 2:
Count = 8

Lemma candidate_38: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 lf6)).
Lemma candidate_51: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 x)).
Lemma candidate_491: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil))) (S (len (rev x))).
Lemma candidate_48: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend lf3 (rev x))).
Lemma candidate_349: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf7 lf6))).
Lemma candidate_403: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend lf7 x))).
Lemma candidate_4: forall (n : nat) (x : lst) (lf6 : lst), forall _ : @eq nat (len lf6) (len x), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len x)).
Lemma candidate_3: forall (n : nat) (x : lst) (lf5 : nat), forall _ : @eq nat (len (rev x)) lf5, @eq nat (len (lfappend (rev x) (Cons n Nil))) (S lf5).

Category 3 (provable):
Count = 4

Lemma candidate_24: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend lf2 Nil)).
Lemma candidate_466: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 Nil) (Cons n Nil)).
Lemma candidate_464: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend lf6 (Cons n Nil)) Nil).
Lemma candidate_2: forall (n : nat) (lf5 : nat) (lf6 : lst), forall _ : @eq nat (len lf6) lf5, @eq nat (len (lfappend lf6 (Cons n Nil))) (S lf5).

Category 3 (not provable):
Count = 52

Lemma candidate_55: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_10: forall (x : lst), @eq nat (len x) (len (rev (rev x))).
Lemma candidate_57: forall (x : lst), @eq lst (rev x) (lfappend (rev x) Nil).
Lemma candidate_56: forall (x : lst), @eq lst (rev x) (rev (lfappend x Nil)).
Lemma candidate_11: forall (x : lst), @eq nat (len x) (len (lfappend x Nil)).
Lemma candidate_23: forall (lf2 : lst), @eq nat (len lf2) (len (rev (rev lf2))).
Lemma candidate_9: forall (x : lst), @eq nat (len x) (len (lfappend (rev x) Nil)).
Lemma candidate_8: forall (x : lst), @eq nat (len x) (len (rev (lfappend x Nil))).
Lemma candidate_125: forall (x : lst), @eq nat (S (len (lfappend x Nil))) (S (len x)).
Lemma candidate_14: forall (x : lst), @eq nat (S (len x)) (S (len (lfappend x Nil))).
Lemma candidate_22: forall (lf2 : lst), @eq nat (len lf2) (len (lfappend (rev lf2) Nil)).
Lemma candidate_21: forall (lf2 : lst), @eq nat (len lf2) (len (rev (lfappend lf2 Nil))).
Lemma candidate_126: forall (x : lst), @eq nat (len (lfappend x (Cons O Nil))) (S (len x)).
Lemma candidate_15: forall (x : lst), @eq nat (S (len x)) (len (lfappend x (Cons O Nil))).
Lemma candidate_54: forall (x : lst), @eq lst (rev x) (lfappend (lfappend (rev x) Nil) Nil).
Lemma candidate_53: forall (x : lst), @eq lst (rev x) (lfappend (rev (lfappend x Nil)) Nil).
Lemma candidate_128: forall (x : lst), @eq nat (len (lfappend (rev x) (Cons O Nil))) (S (len x)).
Lemma candidate_29: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_17: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_50: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x lf3)).
Lemma candidate_41: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (rev (lfappend (rev lf3) x)).
Lemma candidate_30: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_28: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 lf3) Nil).
Lemma candidate_461: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev lf6))).
Lemma candidate_127: forall (x : lst), @eq nat (len (lfappend (rev (rev x)) (Cons O Nil))) (S (len x)).
Lemma candidate_35: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf3 (rev lf6))).
Lemma candidate_34: forall (lf3 : lst) (lf6 : lst), @eq nat (len (lfappend lf6 lf3)) (len (lfappend lf6 (rev lf3))).
Lemma candidate_16: forall (x : lst), @eq nat (S (len x)) (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_47: forall (lf3 : lst) (x : lst), @eq nat (len (lfappend (rev x) lf3)) (len (lfappend x (rev lf3))).
Lemma candidate_42: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (rev (rev lf3))).
Lemma candidate_553: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev (rev lf6)))).
Lemma candidate_43: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_554: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (lfappend lf6 Nil))).
Lemma candidate_348: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n lf7))) (S (len (lfappend lf6 lf7))).
Lemma candidate_402: forall (lf7 : lst) (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n lf7))) (S (len (lfappend x lf7))).
Lemma candidate_468: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil)) (lfappend (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_552: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (lfappend (rev lf6) Nil))).
Lemma candidate_551: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil))) (S (len (rev (lfappend lf6 Nil)))).
Lemma candidate_460: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons O Nil))).
Lemma candidate_459: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev lf6) (Cons n Nil))).
Lemma candidate_490: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev x) (Cons O Nil))).
Lemma candidate_476: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_474: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (rev (rev (lfappend (rev x) (Cons n Nil)))).
Lemma candidate_477: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_475: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) (Cons n Nil)) Nil).
Lemma candidate_473: forall (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n Nil))   (lfappend (lfappend (rev x) Nil) (Cons n Nil)).
Lemma candidate_458: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons O Nil))).
Lemma candidate_457: forall (n : nat) (lf6 : lst), @eq nat (len (lfappend lf6 (Cons n Nil)))   (len (lfappend (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_488: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons O Nil))).
Lemma candidate_487: forall (n : nat) (x : lst), @eq nat (len (lfappend (rev x) (Cons n Nil)))   (len (lfappend (rev (rev x)) (Cons n Nil))).
Lemma candidate_465: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_463: forall (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (Cons n Nil))   (lfappend (rev (lfappend (rev lf6) Nil)) (Cons n Nil)).
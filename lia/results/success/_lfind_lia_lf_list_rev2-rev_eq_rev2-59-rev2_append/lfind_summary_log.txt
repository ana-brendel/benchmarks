LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2-rev_eq_rev2-59-rev2_append

Number of Lemmas: 339
Number of Lemmas (after duplicates removed): 137
Number of Lemmas (after QuickChick used to filter): 71
* Number of Candidate Lemmas: 54

Time until ranking: 723
Time to complete: 2415

Stuck state true independent of hypotheses: true

Category 1:
Count = 0


Category 2:
Count = 11

Lemma candidate_16: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (rev (rev2 lf3 x)).
Lemma candidate_17: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (lfappend (rev x) lf3).
Lemma candidate_122: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_2: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (lfappend (rev2 x Nil) lf3).
Lemma candidate_160: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_143: forall (n : nat) (x : lst) (lf5 : lst), @eq lst (rev2 x (Cons n lf5)) (lfappend (rev x) (Cons n lf5)).
Lemma candidate_338: forall (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_287: forall (n : nat) (x : lst) (lf5 : lst), @eq lst (rev2 x (Cons n lf5)) (lfappend (rev2 x Nil) (Cons n lf5)).
Lemma candidate_6: forall (n : nat) (lf4 : lst) (x : lst), forall _ : @eq lst lf4 (rev x), @eq lst (rev2 x (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_5: forall (n : nat) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst lf4 (rev x), @eq lst (rev2 x (Cons n lf5)) (lfappend lf4 (Cons n lf5)).
Lemma candidate_7: forall (n : nat) (x : lst) (lf5 : lst), forall _ : @eq lst (rev2 x lf5) (rev x), @eq lst (rev2 x (Cons n lf5)) (lfappend (rev2 x lf5) (Cons n lf5)).

Category 3 (provable):
Count = 4

Lemma candidate_24: forall (lf2 : lst), @eq lst lf2 (lfappend lf2 Nil).
Lemma candidate_12: forall (lf1 : lst), @eq lst (lfappend lf1 Nil) lf1.
Lemma candidate_226: forall (n : nat) (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) (Cons n Nil))   (lfappend lf4 (Cons n Nil)).
Lemma candidate_219: forall (n : nat) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (lfappend lf4 Nil) (Cons n Nil)).

Category 3 (not provable):
Count = 39

Lemma candidate_23: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_11: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_22: forall (lf2 : lst), @eq lst lf2 (rev2 (rev lf2) Nil).
Lemma candidate_21: forall (lf2 : lst), @eq lst lf2 (rev (rev2 lf2 Nil)).
Lemma candidate_10: forall (lf1 : lst), @eq lst (rev2 (rev lf1) Nil) lf1.
Lemma candidate_9: forall (lf1 : lst), @eq lst (rev (rev2 lf1 Nil)) lf1.
Lemma candidate_20: forall (lf2 : lst), @eq lst lf2 (rev2 (rev2 lf2 Nil) Nil).
Lemma candidate_8: forall (lf1 : lst), @eq lst (rev2 (rev2 lf1 Nil) Nil) lf1.
Lemma candidate_124: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_126: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_125: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_41: forall (lf3 : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) lf3) (lfappend lf4 lf3).
Lemma candidate_29: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev2 (rev lf4) lf3).
Lemma candidate_123: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_40: forall (lf3 : lst) (lf4 : lst), @eq lst (rev (rev2 lf3 (rev lf4))) (lfappend lf4 lf3).
Lemma candidate_28: forall (lf3 : lst) (lf4 : lst), @eq lst (lfappend lf4 lf3) (rev (rev2 lf3 (rev lf4))).
Lemma candidate_119: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_75: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (lfappend (rev (rev (rev x))) lf3).
Lemma candidate_77: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (lfappend (lfappend (rev x) Nil) lf3).
Lemma candidate_76: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (lfappend (rev (lfappend x Nil)) lf3).
Lemma candidate_74: forall (lf3 : lst) (x : lst), @eq lst (rev2 x lf3) (lfappend (lfappend (rev2 x Nil) Nil) lf3).
Lemma candidate_229: forall (n : nat) (lf4 : lst), @eq lst (rev2 (rev lf4) (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_222: forall (n : nat) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (rev2 (rev lf4) (Cons n Nil)).
Lemma candidate_187: forall (n : nat) (lf4 : lst) (lf5 : lst), @eq lst (rev2 (rev lf4) (Cons n lf5)) (lfappend lf4 (Cons n lf5)).
Lemma candidate_175: forall (n : nat) (lf4 : lst) (lf5 : lst), @eq lst (lfappend lf4 (Cons n lf5)) (rev2 (rev lf4) (Cons n lf5)).
Lemma candidate_155: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_227: forall (n : nat) (lf4 : lst), @eq lst (rev2 (rev2 lf4 Nil) (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_220: forall (n : nat) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (rev2 (rev2 lf4 Nil) (Cons n Nil)).
Lemma candidate_3: forall (lf3 : lst) (lf4 : lst) (x : lst), forall _ : @eq lst lf4 (rev x), @eq lst (rev2 x lf3) (lfappend lf4 lf3).
Lemma candidate_157: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_231: forall (n : nat) (lf4 : lst), @eq lst (lfappend (rev (rev lf4)) (Cons n Nil)) (lfappend lf4 (Cons n Nil)).
Lemma candidate_224: forall (n : nat) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil)) (lfappend (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_158: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_228: forall (n : nat) (lf4 : lst), @eq lst (lfappend (rev (rev2 lf4 Nil)) (Cons n Nil))   (lfappend lf4 (Cons n Nil)).
Lemma candidate_221: forall (n : nat) (lf4 : lst), @eq lst (lfappend lf4 (Cons n Nil))   (lfappend (rev (rev2 lf4 Nil)) (Cons n Nil)).
Lemma candidate_334: forall (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n Nil))   (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_4: forall (lf3 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev2 x lf5) (rev x), @eq lst (rev2 x lf3) (lfappend (rev2 x lf5) lf3).
Lemma candidate_336: forall (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n Nil))   (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_337: forall (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n Nil))   (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2_append-rev2_append-42-rev2_append_aux

Number of Lemmas: 1179
Number of Lemmas (after duplicates removed): 260
Number of Lemmas (after QuickChick used to filter): 114
* Number of Candidate Lemmas: 90

Time until ranking: 3557
Time to complete: 9330

Stuck state true independent of hypotheses: true

Category 1:
Count = 3

Lemma candidate_729: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (lfappend (lfappend lf6 Nil) lf5) a).
Lemma candidate_838: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend lf6 (Cons n lf7)) a).
Lemma candidate_1133: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) a).

Category 2:
Count = 9

Lemma candidate_23: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_25: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_312: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_2: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_417: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_310: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev2 x Nil) (Cons n a)).
Lemma candidate_732: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (lfappend lf6 (lfappend lf5 Nil)) a).
Lemma candidate_784: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_899: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).

Category 3 (provable):
Count = 11

Lemma candidate_61: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_59: forall (lf2 : lst), @eq lst (lfappend (lfappend lf2 Nil) Nil) lf2.
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (lfappend (lfappend lf1 Nil) Nil).
Lemma candidate_51: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (lfappend lf7 Nil)).
Lemma candidate_88: forall (a : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf4 Nil) a) (lfappend lf4 a).
Lemma candidate_10: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend (lfappend lf4 Nil) a).
Lemma candidate_1031: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_64: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 Nil) lf3).
Lemma candidate_492: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_1029: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend (lfappend a Nil) Nil)).

Category 3 (not provable):
Count = 67

Lemma candidate_60: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_28: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 (rev2 lf5 x) Nil).
Lemma candidate_331: forall (x : lst), @eq lst (rev2 x Nil) (rev2 (lfappend x Nil) Nil).
Lemma candidate_89: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev2 lf4 Nil) a) (lfappend lf4 a).
Lemma candidate_75: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (lfappend lf7 Nil)).
Lemma candidate_30: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (lfappend lf5 Nil)).
Lemma candidate_29: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev2 x lf5) Nil).
Lemma candidate_11: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev2 lf4 Nil) a).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev2 lf6 Nil) lf3).
Lemma candidate_58: forall (lf2 : lst), @eq lst (lfappend (rev2 (rev2 lf2 Nil) Nil) Nil) lf2.
Lemma candidate_57: forall (lf2 : lst), @eq lst (rev2 (lfappend (rev2 lf2 Nil) Nil) Nil) lf2.
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (lfappend (rev2 (rev2 lf1 Nil) Nil) Nil).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev2 (lfappend (rev2 lf1 Nil) Nil) Nil).
Lemma candidate_330: forall (x : lst), @eq lst (rev2 x Nil) (rev2 (rev2 (rev2 x Nil) Nil) Nil).
Lemma candidate_149: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_497: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 (lfappend a Nil)).
Lemma candidate_91: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_90: forall (a : lst) (lf4 : lst), @eq lst (lfappend (lfappend lf4 a) Nil) (lfappend lf4 a).
Lemma candidate_13: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_12: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend (lfappend lf4 a) Nil).
Lemma candidate_325: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 (rev2 lf3 x) Nil).
Lemma candidate_151: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (lfappend lf6 lf3) Nil).
Lemma candidate_419: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_329: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (lfappend (rev2 x Nil) Nil) Nil).
Lemma candidate_328: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 (lfappend x Nil) Nil) Nil).
Lemma candidate_326: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_324: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf3) Nil).
Lemma candidate_322: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 (lfappend x Nil) lf3).
Lemma candidate_87: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev2 lf4 Nil) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_9: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev2 lf4 Nil) (lfappend a Nil)).
Lemma candidate_1030: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev2 (rev2 a (Cons n Nil)) Nil).
Lemma candidate_1028: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev2 a Nil) Nil)).
Lemma candidate_304: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_303: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x (Cons n Nil)) Nil).
Lemma candidate_63: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev2 lf6 Nil) (lfappend lf3 Nil)).
Lemma candidate_957: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_418: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_416: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 (lfappend x Nil) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_311: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_309: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 (lfappend x Nil) (Cons n a)).
Lemma candidate_730: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (rev2 (rev2 lf6 Nil) lf5) a).
Lemma candidate_1027: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a)   (rev2 (lfappend (rev2 a Nil) (Cons n Nil)) Nil).
Lemma candidate_1022: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev2 (rev2 lf6 Nil) (Cons n a)).
Lemma candidate_302: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil))   (lfappend (lfappend (rev2 x Nil) (Cons n Nil)) Nil).
Lemma candidate_301: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil))   (lfappend (rev2 (lfappend x Nil) (Cons n Nil)) Nil).
Lemma candidate_731: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (lfappend (lfappend lf6 lf5) Nil) a).
Lemma candidate_490: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend lf6 (lfappend lf5 (lfappend a Nil))).
Lemma candidate_489: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (lfappend lf6 lf5) (lfappend a Nil)).
Lemma candidate_1135: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend lf6 (Cons n Nil)) a).
Lemma candidate_1023: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1021: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend lf6 Nil) (Cons n a)).
Lemma candidate_783: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 (lfappend x Nil) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_1058: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1056: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 (lfappend x Nil) (Cons n a)).
Lemma candidate_415: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_414: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 (lfappend x Nil) (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_308: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (lfappend (rev2 x Nil) (Cons n (lfappend a Nil))).
Lemma candidate_307: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev2 (lfappend x Nil) (Cons n (lfappend a Nil))).
Lemma candidate_1134: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev2 lf6 Nil) (Cons n Nil)) a).
Lemma candidate_1020: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev2 (rev2 lf6 Nil) (Cons n (lfappend a Nil))).
Lemma candidate_1132: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (lfappend lf6 (Cons n Nil)) Nil) a).
Lemma candidate_1019: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend lf6 Nil) (Cons n (lfappend a Nil))).
Lemma candidate_1055: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev2 x Nil) (Cons n (lfappend a Nil))).
Lemma candidate_1054: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 (lfappend x Nil) (Cons n (lfappend a Nil))).
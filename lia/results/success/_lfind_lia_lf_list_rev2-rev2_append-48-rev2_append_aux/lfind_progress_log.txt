File Information
- File name: list_rev2
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev2-rev2_append-48-rev2_append_aux
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2-rev2_append-48-rev2_append_aux
- Namespace: adtind
- Proof name: rev2_lfappend
- Theorem: Theorem rev2_lfappend: forall x0 a0 : lst, @eq lst (rev2 x0 a0) (lfappend (rev2 x0 Nil) a0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a)

* Hypothesis:
IHx : forall a0 : lst, @eq lst (rev2 x a0) (lfappend (rev2 x Nil) a0)
x : lst
n : nat
a : lst

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat
a : lst

* Terms:
rev2 x (Cons n Nil) : lst
x : lst
@eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a) : Prop
rev2 x Nil : lst
rev2 x _UNBOUND_REL_1 : lst
lfappend (rev2 x Nil) _UNBOUND_REL_1 : lst
@eq lst (rev2 x _UNBOUND_REL_1) (lfappend (rev2 x Nil) _UNBOUND_REL_1) : Prop
lfappend (Cons n Nil) a : lst
forall a0 : lst, @eq lst (rev2 x a0) (lfappend (rev2 x Nil) a0) : Prop
nat : Set
lfappend (rev2 x (Cons n Nil)) a : lst
lst : Set
Cons n Nil : lst
n : nat
Nil : lst
a : lst
lfappend (rev2 x Nil) (lfappend (Cons n Nil) a) : lst

* Functions:
lfappend  : forall (_ : lst) (_ : lst), lst
rev2  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = lfappend (Cons n Nil) a
lf7 : lst = Nil
lf1 : lst = lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)
lf4 : lst = rev2 x (Cons n Nil)
lf5 : lst = Cons n Nil
lf2 : lst = lfappend (rev2 x (Cons n Nil)) a
lf6 : lst = rev2 x Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend lf4 a).
Lemma conj11: forall (lf5 : lst) (x : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend (rev2 x lf5) a).
Lemma conj15: forall (x : lst) (lf1 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) lf2.
Lemma conj18: forall (lf2 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) lf2.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf4 a).
Lemma conj20: forall (x : lst) (lf4 : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend lf4 a).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x lf5) a).
Lemma conj28: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x lf5) a).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj32: forall (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj47: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj50: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) lf2.
Lemma conj52: forall (x : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend lf4 a).
Lemma conj60: forall (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj64: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) lf2.
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) lf2.
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) lf2.
Lemma conj86: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) lf2.
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj88: forall (x : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) lf2.
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) lf2.
Lemma conj118: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) lf2.
Lemma conj119: forall (lf6 : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj124: forall (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj128: forall (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a).


<---VALIDITY CHECKS--->
Time elapsed: 82 seconds
Valid:
Lemma conj128: forall (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj124: forall (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).

Invalid:
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj119: forall (lf6 : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj118: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) lf2.
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) lf2.
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) lf2.
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj88: forall (x : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj86: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) lf2.
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) lf2.
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) lf2.
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) lf2.
Lemma conj64: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj60: forall (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma conj52: forall (x : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend lf4 a).
Lemma conj50: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) lf2.
Lemma conj47: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj32: forall (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj28: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x lf5) a).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x lf5) a).
Lemma conj20: forall (x : lst) (lf4 : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend lf4 a).
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf4 a).
Lemma conj18: forall (lf2 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) lf2.
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) lf2.
Lemma conj15: forall (x : lst) (lf1 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj11: forall (lf5 : lst) (x : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend (rev2 x lf5) a).
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend lf4 a).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 82 seconds
Generalizations:
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj119: forall (lf6 : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj118: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) lf2.
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) lf2.
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) lf2.
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj88: forall (x : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj86: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) lf2.
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) lf2.
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) lf2.
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) lf2.
Lemma conj64: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj60: forall (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma conj52: forall (x : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend lf4 a).
Lemma conj50: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) lf2.
Lemma conj47: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj32: forall (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj28: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x lf5) a).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x lf5) a).
Lemma conj20: forall (x : lst) (lf4 : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend lf4 a).
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf4 a).
Lemma conj18: forall (lf2 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) lf2.
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) lf2.
Lemma conj15: forall (x : lst) (lf1 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj11: forall (lf5 : lst) (x : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend (rev2 x lf5) a).
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend lf4 a).
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 142 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend lf4 a).
Lemma conj11: forall (lf5 : lst) (x : lst) (lf1 : lst) (a : lst), @eq lst lf1 (lfappend (rev2 x lf5) a).
Lemma conj15: forall (x : lst) (lf1 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) lf2.
Lemma conj18: forall (lf2 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) lf2.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf4 a).
Lemma conj20: forall (x : lst) (lf4 : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend lf4 a).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x lf5) a).
Lemma conj28: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x lf5) a).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj32: forall (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj47: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst lf1 (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj50: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) lf2.
Lemma conj52: forall (x : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend lf4 a).
Lemma conj60: forall (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj64: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) lf2.
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) lf2.
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) lf2.
Lemma conj86: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) lf2.
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj88: forall (x : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (lfappend lf4 a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) lf2.
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend lf4 a).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) lf2.
Lemma conj118: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) lf2.
Lemma conj119: forall (lf6 : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (lfappend lf4 a).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))
  (lfappend (rev2 x (Cons n Nil)) a).


<---CREATE SKETCHES--->
Time elapsed: 142 seconds
Sketches:
Sketch conj3_sketch0 : @eq lst lf1 (##hole##)
Sketch conj3_term_sketch0 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj11_sketch0 : @eq lst lf1 (##hole##)
Sketch conj11_sketch1 : @eq lst lf1 (lfappend (##hole##) a)
Sketch conj11_term_sketch0 : @eq lst (lfappend (rev2 x lf5) a) (##hole##)
Sketch conj11_term_sketch1 : @eq lst (rev2 x lf5) (##hole##)
Sketch conj15_sketch0 : @eq lst lf1 (##hole##)
Sketch conj15_sketch1 : @eq lst lf1 (lfappend (##hole##) a)
Sketch conj15_sketch2 : @eq lst lf1 (lfappend (rev2 x (##hole##)) a)
Sketch conj15_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj15_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj15_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj17_sketch0 : @eq lst (##hole##) lf2
Sketch conj17_term_sketch0 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj18_sketch0 : @eq lst (lfappend (##hole##) lf3) lf2
Sketch conj18_sketch1 : @eq lst (##hole##) lf2
Sketch conj18_term_sketch0 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj18_term_sketch1 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj19_sketch0 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj19_sketch1 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj19_term_sketch0 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj19_term_sketch1 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj20_sketch0 : @eq lst (lfappend (##hole##) lf3) (lfappend lf4 a)
Sketch conj20_sketch1 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj20_sketch2 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj20_term_sketch0 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj20_term_sketch1 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj20_term_sketch2 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj27_sketch0 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj27_sketch1 : @eq lst (##hole##) (lfappend (rev2 x lf5) a)
Sketch conj27_sketch2 : @eq lst (lfappend lf6 lf3) (lfappend (##hole##) a)
Sketch conj27_term_sketch0 : @eq lst (lfappend (rev2 x lf5) a) (##hole##)
Sketch conj27_term_sketch1 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj27_term_sketch2 : @eq lst (rev2 x lf5) (##hole##)
Sketch conj28_sketch0 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj28_sketch1 : @eq lst (lfappend (##hole##) lf3) (lfappend (rev2 x lf5) a)
Sketch conj28_sketch2 : @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (##hole##) a)
Sketch conj28_sketch3 : @eq lst (##hole##) (lfappend (rev2 x lf5) a)
Sketch conj28_term_sketch0 : @eq lst (lfappend (rev2 x lf5) a) (##hole##)
Sketch conj28_term_sketch1 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj28_term_sketch2 : @eq lst (rev2 x lf5) (##hole##)
Sketch conj28_term_sketch3 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj31_sketch0 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj31_sketch1 : @eq lst (lfappend lf6 lf3) (lfappend (##hole##) a)
Sketch conj31_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj31_sketch3 : @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (##hole##)) a)
Sketch conj31_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj31_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj32_sketch0 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj32_sketch1 : @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (##hole##) a)
Sketch conj32_sketch2 : @eq lst (lfappend (##hole##) lf3) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj32_sketch3 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj32_sketch4 : @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x (##hole##)) a)
Sketch conj32_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj32_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj32_term_sketch2 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj32_term_sketch3 : @eq lst (lfappend (rev2 x lf7) lf3) (##hole##)
Sketch conj32_term_sketch4 : @eq lst (Cons n lf7) (##hole##)
Sketch conj47_sketch0 : @eq lst lf1 (lfappend (##hole##) a)
Sketch conj47_sketch1 : @eq lst lf1 (##hole##)
Sketch conj47_sketch2 : @eq lst lf1 (lfappend (rev2 x (##hole##)) a)
Sketch conj47_sketch3 : @eq lst lf1 (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj47_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj47_term_sketch1 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj47_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj47_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj50_sketch0 : @eq lst (##hole##) lf2
Sketch conj50_sketch1 : @eq lst (lfappend (##hole##) lf3) lf2
Sketch conj50_sketch2 : @eq lst (lfappend (rev2 x (##hole##)) lf3) lf2
Sketch conj50_term_sketch0 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj50_term_sketch1 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj50_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj52_sketch0 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj52_sketch1 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj52_sketch2 : @eq lst (lfappend (##hole##) lf3) (lfappend lf4 a)
Sketch conj52_sketch3 : @eq lst (lfappend (rev2 x (##hole##)) lf3) (lfappend lf4 a)
Sketch conj52_term_sketch0 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj52_term_sketch1 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj52_term_sketch2 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj52_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj60_sketch0 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj60_sketch1 : @eq lst (##hole##) (lfappend (rev2 x lf5) a)
Sketch conj60_sketch2 : @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (##hole##) a)
Sketch conj60_sketch3 : @eq lst (lfappend (##hole##) lf3) (lfappend (rev2 x lf5) a)
Sketch conj60_sketch4 : @eq lst (lfappend (rev2 x (##hole##)) lf3) (lfappend (rev2 x lf5) a)
Sketch conj60_term_sketch0 : @eq lst (lfappend (rev2 x lf5) a) (##hole##)
Sketch conj60_term_sketch1 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj60_term_sketch2 : @eq lst (rev2 x lf5) (##hole##)
Sketch conj60_term_sketch3 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj60_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj63_sketch0 : @eq lst (lfappend lf6 lf3) (lfappend (##hole##) a)
Sketch conj63_sketch1 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj63_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj63_sketch3 : @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (##hole##)) a)
Sketch conj63_sketch4 : @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj63_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (lfappend lf6 lf3) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj63_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_sketch0 : @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (##hole##) a)
Sketch conj64_sketch1 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj64_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj64_sketch3 : @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (##hole##)) a)
Sketch conj64_sketch4 : @eq lst (lfappend (##hole##) lf3) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj64_sketch5 : @eq lst (lfappend (rev2 x (##hole##)) lf3)
  (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj64_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj64_term_sketch1 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj64_term_sketch2 : @eq lst (lfappend (rev2 x Nil) lf3) (##hole##)
Sketch conj64_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj64_term_sketch4 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj64_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj81_sketch0 : @eq lst (##hole##) lf2
Sketch conj81_sketch1 : @eq lst (lfappend lf6 (##hole##)) lf2
Sketch conj81_term_sketch0 : @eq lst (lfappend lf6 (lfappend lf5 a)) (##hole##)
Sketch conj81_term_sketch1 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj82_sketch0 : @eq lst (##hole##) lf2
Sketch conj82_sketch1 : @eq lst (lfappend (##hole##) (lfappend lf5 a)) lf2
Sketch conj82_sketch2 : @eq lst (lfappend (rev2 x lf7) (##hole##)) lf2
Sketch conj82_term_sketch0 : @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (##hole##)
Sketch conj82_term_sketch1 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj82_term_sketch2 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj83_sketch0 : @eq lst (lfappend lf6 (lfappend lf5 a)) (##hole##)
Sketch conj83_sketch1 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj83_sketch2 : @eq lst (lfappend lf6 (##hole##)) (lfappend lf4 a)
Sketch conj83_term_sketch0 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj83_term_sketch1 : @eq lst (lfappend lf6 (lfappend lf5 a)) (##hole##)
Sketch conj83_term_sketch2 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj84_sketch0 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj84_sketch1 : @eq lst (lfappend (##hole##) (lfappend lf5 a)) (lfappend lf4 a)
Sketch conj84_sketch2 : @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (##hole##)
Sketch conj84_sketch3 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend lf4 a)
Sketch conj84_term_sketch0 : @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (##hole##)
Sketch conj84_term_sketch1 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj84_term_sketch2 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj84_term_sketch3 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj85_sketch0 : @eq lst (##hole##) lf2
Sketch conj85_sketch1 : @eq lst (lfappend lf6 (lfappend (##hole##) a)) lf2
Sketch conj85_sketch2 : @eq lst (lfappend lf6 (##hole##)) lf2
Sketch conj85_term_sketch0 : @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (Cons n lf7) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (lfappend (Cons n lf7) a) (##hole##)
Sketch conj86_sketch0 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf7) a)) lf2
Sketch conj86_sketch1 : @eq lst (lfappend (rev2 x lf7) (lfappend (##hole##) a)) lf2
Sketch conj86_sketch2 : @eq lst (lfappend (rev2 x lf7) (##hole##)) lf2
Sketch conj86_sketch3 : @eq lst (##hole##) lf2
Sketch conj86_term_sketch0 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj86_term_sketch1 : @eq lst (Cons n lf7) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (lfappend (Cons n lf7) a) (##hole##)
Sketch conj86_term_sketch3 : @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj87_sketch0 : @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj87_sketch1 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj87_sketch2 : @eq lst (lfappend lf6 (lfappend (##hole##) a)) (lfappend lf4 a)
Sketch conj87_sketch3 : @eq lst (lfappend lf6 (##hole##)) (lfappend lf4 a)
Sketch conj87_term_sketch0 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj87_term_sketch1 : @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj87_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj87_term_sketch3 : @eq lst (lfappend (Cons n lf7) a) (##hole##)
Sketch conj88_sketch0 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf7) a)) (lfappend lf4 a)
Sketch conj88_sketch1 : @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj88_sketch2 : @eq lst (lfappend (rev2 x lf7) (lfappend (##hole##) a)) (lfappend lf4 a)
Sketch conj88_sketch3 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend lf4 a)
Sketch conj88_sketch4 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj88_term_sketch0 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj88_term_sketch1 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj88_term_sketch2 : @eq lst (Cons n lf7) (##hole##)
Sketch conj88_term_sketch3 : @eq lst (lfappend (Cons n lf7) a) (##hole##)
Sketch conj88_term_sketch4 : @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj91_sketch0 : @eq lst (lfappend lf6 (lfappend lf5 a)) (##hole##)
Sketch conj91_sketch1 : @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (##hole##) a)
Sketch conj91_sketch2 : @eq lst (##hole##) (lfappend (rev2 x lf5) a)
Sketch conj91_sketch3 : @eq lst (lfappend lf6 (##hole##)) (lfappend (rev2 x lf5) a)
Sketch conj91_term_sketch0 : @eq lst (lfappend (rev2 x lf5) a) (##hole##)
Sketch conj91_term_sketch1 : @eq lst (rev2 x lf5) (##hole##)
Sketch conj91_term_sketch2 : @eq lst (lfappend lf6 (lfappend lf5 a)) (##hole##)
Sketch conj91_term_sketch3 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj92_sketch0 : @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (##hole##)
Sketch conj92_sketch1 : @eq lst (##hole##) (lfappend (rev2 x lf5) a)
Sketch conj92_sketch2 : @eq lst (lfappend (##hole##) (lfappend lf5 a)) (lfappend (rev2 x lf5) a)
Sketch conj92_sketch3 : @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (##hole##) a)
Sketch conj92_sketch4 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend (rev2 x lf5) a)
Sketch conj92_term_sketch0 : @eq lst (lfappend (rev2 x lf5) a) (##hole##)
Sketch conj92_term_sketch1 : @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (##hole##)
Sketch conj92_term_sketch2 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj92_term_sketch3 : @eq lst (rev2 x lf5) (##hole##)
Sketch conj92_term_sketch4 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj95_sketch0 : @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj95_sketch1 : @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend (##hole##) a)
Sketch conj95_sketch2 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj95_sketch3 : @eq lst (lfappend lf6 (lfappend (##hole##) a))
  (lfappend (rev2 x (##hole##)) a)
Sketch conj95_sketch4 : @eq lst (lfappend lf6 (##hole##)) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj95_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj95_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj95_term_sketch4 : @eq lst (lfappend (Cons n lf7) a) (##hole##)
Sketch conj96_sketch0 : @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj96_sketch1 : @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))
  (lfappend (##hole##) a)
Sketch conj96_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n lf7) a))
  (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj96_sketch3 : @eq lst (lfappend (rev2 x lf7) (lfappend (##hole##) a))
  (lfappend (rev2 x (##hole##)) a)
Sketch conj96_sketch4 : @eq lst (lfappend (rev2 x lf7) (##hole##)) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj96_sketch5 : @eq lst (##hole##) (lfappend (rev2 x (Cons n lf7)) a)
Sketch conj96_term_sketch0 : @eq lst (lfappend (rev2 x (Cons n lf7)) a) (##hole##)
Sketch conj96_term_sketch1 : @eq lst (rev2 x (Cons n lf7)) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (rev2 x lf7) (##hole##)
Sketch conj96_term_sketch3 : @eq lst (Cons n lf7) (##hole##)
Sketch conj96_term_sketch4 : @eq lst (lfappend (Cons n lf7) a) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (##hole##)
Sketch conj114_sketch0 : @eq lst (##hole##) lf2
Sketch conj114_sketch1 : @eq lst (lfappend (##hole##) (lfappend lf5 a)) lf2
Sketch conj114_sketch2 : @eq lst (lfappend (rev2 x Nil) (##hole##)) lf2
Sketch conj114_sketch3 : @eq lst (lfappend (rev2 x (##hole##)) (lfappend lf5 a)) lf2
Sketch conj114_term_sketch0 : @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (##hole##)
Sketch conj114_term_sketch1 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj114_term_sketch2 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj114_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj116_sketch0 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj116_sketch1 : @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (##hole##)
Sketch conj116_sketch2 : @eq lst (lfappend (##hole##) (lfappend lf5 a)) (lfappend lf4 a)
Sketch conj116_sketch3 : @eq lst (lfappend (rev2 x Nil) (##hole##)) (lfappend lf4 a)
Sketch conj116_sketch4 : @eq lst (lfappend (rev2 x (##hole##)) (lfappend lf5 a)) (lfappend lf4 a)
Sketch conj116_term_sketch0 : @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (##hole##)
Sketch conj116_term_sketch1 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj116_term_sketch2 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj116_term_sketch3 : @eq lst (lfappend lf5 a) (##hole##)
Sketch conj116_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj117_sketch0 : @eq lst (##hole##) lf2
Sketch conj117_sketch1 : @eq lst (lfappend lf6 (lfappend (##hole##) a)) lf2
Sketch conj117_sketch2 : @eq lst (lfappend lf6 (lfappend (Cons n (##hole##)) a)) lf2
Sketch conj117_sketch3 : @eq lst (lfappend lf6 (##hole##)) lf2
Sketch conj117_term_sketch0 : @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj117_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj117_term_sketch3 : @eq lst (lfappend (Cons n Nil) a) (##hole##)
Sketch conj118_sketch0 : @eq lst (lfappend (rev2 x Nil) (lfappend (##hole##) a)) lf2
Sketch conj118_sketch1 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) a)) lf2
Sketch conj118_sketch2 : @eq lst (lfappend (rev2 x (##hole##)) (lfappend (Cons n (##hole##)) a)) lf2
Sketch conj118_sketch3 : @eq lst (lfappend (rev2 x Nil) (##hole##)) lf2
Sketch conj118_sketch4 : @eq lst (##hole##) lf2
Sketch conj118_term_sketch0 : @eq lst (Cons n Nil) (##hole##)
Sketch conj118_term_sketch1 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj118_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj118_term_sketch3 : @eq lst (lfappend (Cons n Nil) a) (##hole##)
Sketch conj118_term_sketch4 : @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj119_sketch0 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj119_sketch1 : @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj119_sketch2 : @eq lst (lfappend lf6 (lfappend (##hole##) a)) (lfappend lf4 a)
Sketch conj119_sketch3 : @eq lst (lfappend lf6 (lfappend (Cons n (##hole##)) a)) (lfappend lf4 a)
Sketch conj119_sketch4 : @eq lst (lfappend lf6 (##hole##)) (lfappend lf4 a)
Sketch conj119_term_sketch0 : @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj119_term_sketch1 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj119_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj119_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj119_term_sketch4 : @eq lst (lfappend (Cons n Nil) a) (##hole##)
Sketch conj120_sketch0 : @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj120_sketch1 : @eq lst (lfappend (rev2 x Nil) (lfappend (##hole##) a)) (lfappend lf4 a)
Sketch conj120_sketch2 : @eq lst (lfappend (##hole##) (lfappend (Cons n Nil) a)) (lfappend lf4 a)
Sketch conj120_sketch3 : @eq lst (lfappend (rev2 x (##hole##)) (lfappend (Cons n (##hole##)) a))
  (lfappend lf4 a)
Sketch conj120_sketch4 : @eq lst (lfappend (rev2 x Nil) (##hole##)) (lfappend lf4 a)
Sketch conj120_sketch5 : @eq lst (##hole##) (lfappend lf4 a)
Sketch conj120_term_sketch0 : @eq lst (lfappend lf4 a) (##hole##)
Sketch conj120_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj120_term_sketch2 : @eq lst (rev2 x Nil) (##hole##)
Sketch conj120_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj120_term_sketch4 : @eq lst (lfappend (Cons n Nil) a) (##hole##)
Sketch conj120_term_sketch5 : @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj127_sketch0 : @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend (##hole##) a)
Sketch conj127_sketch1 : @eq lst (##hole##) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj127_sketch2 : @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj127_sketch3 : @eq lst (lfappend lf6 (lfappend (##hole##) a))
  (lfappend (rev2 x (##hole##)) a)
Sketch conj127_sketch4 : @eq lst (lfappend lf6 (lfappend (Cons n (##hole##)) a))
  (lfappend (rev2 x (Cons n (##hole##))) a)
Sketch conj127_sketch5 : @eq lst (lfappend lf6 (##hole##)) (lfappend (rev2 x (Cons n Nil)) a)
Sketch conj127_term_sketch0 : @eq lst (rev2 x (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (lfappend (rev2 x (Cons n Nil)) a) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj127_term_sketch5 : @eq lst (lfappend (Cons n Nil) a) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 1631 seconds
Problems per Sketch:
Sketch conj52_sketch2 --> Problem  synth_15
Sketch conj32_term_sketch4 --> Problem  synth_9
Sketch conj88_term_sketch4 --> Problem  synth_51
Sketch conj52_sketch1 --> Problem  synth_28
Sketch conj60_term_sketch1 --> Problem  synth_28
Sketch conj63_sketch4 --> Problem  synth_33
Sketch conj15_term_sketch2 --> Problem  synth_9
Sketch conj118_sketch3 --> Problem  synth_67
Sketch conj60_sketch0 --> Problem  synth_28
Sketch conj20_term_sketch2 --> Problem  synth_14
Sketch conj17_term_sketch0 --> Problem  synth_11
Sketch conj127_sketch3 --> Problem  synth_61
Sketch conj87_term_sketch1 --> Problem  synth_47
Sketch conj63_term_sketch0 --> Problem  synth_23
Sketch conj31_sketch0 --> Problem  synth_11
Sketch conj127_term_sketch0 --> Problem  synth_23
Sketch conj60_term_sketch3 --> Problem  synth_29
Sketch conj64_term_sketch5 --> Problem  synth_26
Sketch conj81_term_sketch1 --> Problem  synth_39
Sketch conj60_sketch2 --> Problem  synth_31
Sketch conj85_sketch0 --> Problem  synth_10
Sketch conj64_term_sketch1 --> Problem  synth_24
Sketch conj32_sketch3 --> Problem  synth_7
Sketch conj3_term_sketch0 --> Problem  synth_2
Sketch conj32_term_sketch3 --> Problem  synth_14
Sketch conj86_sketch0 --> Problem  synth_49
Sketch conj47_sketch2 --> Problem  synth_6
Sketch conj19_term_sketch1 --> Problem  synth_2
Sketch conj28_term_sketch2 --> Problem  synth_5
Sketch conj91_sketch3 --> Problem  synth_56
Sketch conj120_sketch1 --> Problem  synth_78
Sketch conj32_sketch2 --> Problem  synth_20
Sketch conj15_sketch1 --> Problem  synth_3
Sketch conj91_term_sketch3 --> Problem  synth_39
Sketch conj114_sketch0 --> Problem  synth_10
Sketch conj52_term_sketch0 --> Problem  synth_28
Sketch conj92_sketch4 --> Problem  synth_59
Sketch conj47_term_sketch1 --> Problem  synth_24
Sketch conj52_sketch0 --> Problem  synth_2
Sketch conj87_term_sketch3 --> Problem  synth_48
Sketch conj85_term_sketch0 --> Problem  synth_47
Sketch conj50_term_sketch0 --> Problem  synth_28
Sketch conj118_sketch2 --> Problem  synth_76
Sketch conj95_term_sketch3 --> Problem  synth_9
Sketch conj31_term_sketch0 --> Problem  synth_7
Sketch conj96_term_sketch4 --> Problem  synth_48
Sketch conj96_term_sketch5 --> Problem  synth_51
Sketch conj119_sketch1 --> Problem  synth_72
Sketch conj117_sketch3 --> Problem  synth_37
Sketch conj63_sketch1 --> Problem  synth_11
Sketch conj27_sketch0 --> Problem  synth_11
Sketch conj18_sketch0 --> Problem  synth_12
Sketch conj85_term_sketch2 --> Problem  synth_48
Sketch conj50_sketch1 --> Problem  synth_12
Sketch conj96_term_sketch3 --> Problem  synth_9
Sketch conj32_sketch4 --> Problem  synth_21
Sketch conj32_term_sketch1 --> Problem  synth_8
Sketch conj127_sketch0 --> Problem  synth_81
Sketch conj87_sketch1 --> Problem  synth_2
Sketch conj81_sketch1 --> Problem  synth_37
Sketch conj87_sketch3 --> Problem  synth_43
Sketch conj85_term_sketch1 --> Problem  synth_9
Sketch conj92_term_sketch4 --> Problem  synth_39
Sketch conj84_sketch3 --> Problem  synth_45
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj119_sketch3 --> Problem  synth_77
Sketch conj47_term_sketch3 --> Problem  synth_26
Sketch conj64_term_sketch0 --> Problem  synth_23
Sketch conj118_term_sketch4 --> Problem  synth_24
Sketch conj60_term_sketch4 --> Problem  synth_26
Sketch conj95_sketch4 --> Problem  synth_62
Sketch conj114_term_sketch0 --> Problem  synth_4
Sketch conj96_term_sketch0 --> Problem  synth_7
Sketch conj83_term_sketch2 --> Problem  synth_39
Sketch conj82_term_sketch1 --> Problem  synth_13
Sketch conj31_term_sketch3 --> Problem  synth_9
Sketch conj87_sketch2 --> Problem  synth_52
Sketch conj60_sketch1 --> Problem  synth_4
Sketch conj28_term_sketch3 --> Problem  synth_14
Sketch conj27_term_sketch2 --> Problem  synth_5
Sketch conj116_term_sketch2 --> Problem  synth_29
Sketch conj84_term_sketch0 --> Problem  synth_42
Sketch conj52_term_sketch1 --> Problem  synth_2
Sketch conj20_sketch0 --> Problem  synth_15
Sketch conj82_sketch0 --> Problem  synth_10
Sketch conj91_sketch0 --> Problem  synth_38
Sketch conj18_term_sketch1 --> Problem  synth_14
Sketch conj27_sketch2 --> Problem  synth_16
Sketch conj82_sketch1 --> Problem  synth_40
Sketch conj85_sketch2 --> Problem  synth_37
Sketch conj31_sketch2 --> Problem  synth_7
Sketch conj118_sketch4 --> Problem  synth_10
Sketch conj96_sketch2 --> Problem  synth_64
Sketch conj85_sketch1 --> Problem  synth_46
Sketch conj118_term_sketch1 --> Problem  synth_29
Sketch conj88_sketch1 --> Problem  synth_51
Sketch conj82_sketch2 --> Problem  synth_41
Sketch conj31_sketch3 --> Problem  synth_19
Sketch conj86_sketch2 --> Problem  synth_41
Sketch conj19_term_sketch0 --> Problem  synth_11
Sketch conj117_term_sketch2 --> Problem  synth_26
Sketch conj87_term_sketch2 --> Problem  synth_9
Sketch conj118_term_sketch0 --> Problem  synth_25
Sketch conj92_sketch3 --> Problem  synth_58
Sketch conj88_sketch2 --> Problem  synth_54
Sketch conj82_term_sketch0 --> Problem  synth_42
Sketch conj17_sketch0 --> Problem  synth_10
Sketch conj63_sketch2 --> Problem  synth_24
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj47_term_sketch0 --> Problem  synth_23
Sketch conj96_sketch5 --> Problem  synth_7
Sketch conj117_sketch2 --> Problem  synth_71
Sketch conj88_term_sketch0 --> Problem  synth_13
Sketch conj52_sketch3 --> Problem  synth_30
Sketch conj50_term_sketch1 --> Problem  synth_29
Sketch conj50_sketch0 --> Problem  synth_10
Sketch conj64_sketch2 --> Problem  synth_24
Sketch conj20_term_sketch1 --> Problem  synth_2
Sketch conj92_sketch0 --> Problem  synth_42
Sketch conj86_term_sketch3 --> Problem  synth_51
Sketch conj91_sketch1 --> Problem  synth_55
Sketch conj28_sketch3 --> Problem  synth_4
Sketch conj64_term_sketch2 --> Problem  synth_28
Sketch conj28_sketch1 --> Problem  synth_17
Sketch conj116_sketch3 --> Problem  synth_69
Sketch conj83_sketch2 --> Problem  synth_43
Sketch conj91_term_sketch1 --> Problem  synth_5
Sketch conj47_term_sketch2 --> Problem  synth_25
Sketch conj114_sketch1 --> Problem  synth_40
Sketch conj119_sketch2 --> Problem  synth_52
Sketch conj92_term_sketch0 --> Problem  synth_4
Sketch conj81_term_sketch0 --> Problem  synth_38
Sketch conj116_term_sketch1 --> Problem  synth_2
Sketch conj64_term_sketch3 --> Problem  synth_25
Sketch conj117_term_sketch1 --> Problem  synth_25
Sketch conj83_sketch1 --> Problem  synth_2
Sketch conj84_sketch1 --> Problem  synth_44
Sketch conj11_term_sketch1 --> Problem  synth_5
Sketch conj127_sketch5 --> Problem  synth_83
Sketch conj116_term_sketch3 --> Problem  synth_39
Sketch conj120_term_sketch3 --> Problem  synth_26
Sketch conj96_sketch4 --> Problem  synth_66
Sketch conj50_sketch2 --> Problem  synth_27
Sketch conj50_term_sketch2 --> Problem  synth_26
Sketch conj119_sketch0 --> Problem  synth_2
Sketch conj88_sketch0 --> Problem  synth_53
Sketch conj120_term_sketch0 --> Problem  synth_2
Sketch conj84_sketch2 --> Problem  synth_42
Sketch conj114_sketch2 --> Problem  synth_67
Sketch conj127_sketch4 --> Problem  synth_82
Sketch conj92_term_sketch2 --> Problem  synth_13
Sketch conj63_term_sketch4 --> Problem  synth_26
Sketch conj28_sketch2 --> Problem  synth_18
Sketch conj11_term_sketch0 --> Problem  synth_4
Sketch conj92_term_sketch3 --> Problem  synth_5
Sketch conj83_term_sketch1 --> Problem  synth_38
Sketch conj82_term_sketch2 --> Problem  synth_39
Sketch conj27_sketch1 --> Problem  synth_4
Sketch conj114_term_sketch1 --> Problem  synth_29
Sketch conj127_term_sketch5 --> Problem  synth_73
Sketch conj96_term_sketch2 --> Problem  synth_13
Sketch conj60_sketch3 --> Problem  synth_17
Sketch conj88_term_sketch2 --> Problem  synth_9
Sketch conj47_sketch3 --> Problem  synth_22
Sketch conj120_term_sketch1 --> Problem  synth_25
Sketch conj117_term_sketch3 --> Problem  synth_73
Sketch conj84_term_sketch3 --> Problem  synth_39
Sketch conj52_term_sketch3 --> Problem  synth_26
Sketch conj63_term_sketch1 --> Problem  synth_24
Sketch conj18_sketch1 --> Problem  synth_10
Sketch conj127_term_sketch4 --> Problem  synth_26
Sketch conj120_term_sketch2 --> Problem  synth_29
Sketch conj119_term_sketch1 --> Problem  synth_2
Sketch conj95_sketch1 --> Problem  synth_60
Sketch conj15_term_sketch1 --> Problem  synth_8
Sketch conj27_term_sketch1 --> Problem  synth_11
Sketch conj120_sketch2 --> Problem  synth_79
Sketch conj96_sketch1 --> Problem  synth_63
Sketch conj116_sketch2 --> Problem  synth_44
Sketch conj20_sketch2 --> Problem  synth_2
Sketch conj88_term_sketch3 --> Problem  synth_48
Sketch conj96_term_sketch1 --> Problem  synth_8
Sketch conj47_sketch1 --> Problem  synth_1
Sketch conj84_term_sketch1 --> Problem  synth_13
Sketch conj95_term_sketch4 --> Problem  synth_48
Sketch conj64_term_sketch4 --> Problem  synth_29
Sketch conj64_sketch1 --> Problem  synth_28
Sketch conj127_term_sketch3 --> Problem  synth_25
Sketch conj91_sketch2 --> Problem  synth_4
Sketch conj92_sketch2 --> Problem  synth_57
Sketch conj116_term_sketch0 --> Problem  synth_4
Sketch conj119_term_sketch0 --> Problem  synth_72
Sketch conj116_sketch1 --> Problem  synth_4
Sketch conj87_term_sketch0 --> Problem  synth_2
Sketch conj83_sketch0 --> Problem  synth_38
Sketch conj64_sketch4 --> Problem  synth_35
Sketch conj15_sketch2 --> Problem  synth_6
Sketch conj118_term_sketch3 --> Problem  synth_73
Sketch conj118_term_sketch2 --> Problem  synth_26
Sketch conj116_term_sketch4 --> Problem  synth_26
Sketch conj64_sketch5 --> Problem  synth_36
Sketch conj92_sketch1 --> Problem  synth_4
Sketch conj60_sketch4 --> Problem  synth_32
Sketch conj127_term_sketch2 --> Problem  synth_24
Sketch conj120_term_sketch5 --> Problem  synth_24
Sketch conj116_sketch0 --> Problem  synth_2
Sketch conj11_sketch0 --> Problem  synth_1
Sketch conj27_term_sketch0 --> Problem  synth_4
Sketch conj81_sketch0 --> Problem  synth_10
Sketch conj63_term_sketch2 --> Problem  synth_11
Sketch conj84_term_sketch2 --> Problem  synth_2
Sketch conj120_sketch3 --> Problem  synth_80
Sketch conj84_sketch0 --> Problem  synth_2
Sketch conj117_sketch0 --> Problem  synth_10
Sketch conj28_sketch0 --> Problem  synth_14
Sketch conj92_term_sketch1 --> Problem  synth_42
Sketch conj11_sketch1 --> Problem  synth_3
Sketch conj28_term_sketch1 --> Problem  synth_13
Sketch conj31_term_sketch1 --> Problem  synth_8
Sketch conj127_sketch2 --> Problem  synth_72
Sketch conj32_sketch0 --> Problem  synth_14
Sketch conj120_term_sketch4 --> Problem  synth_73
Sketch conj60_term_sketch2 --> Problem  synth_5
Sketch conj119_sketch4 --> Problem  synth_43
Sketch conj118_sketch1 --> Problem  synth_75
Sketch conj114_term_sketch2 --> Problem  synth_39
Sketch conj20_term_sketch0 --> Problem  synth_13
Sketch conj91_term_sketch0 --> Problem  synth_4
Sketch conj95_sketch3 --> Problem  synth_61
Sketch conj91_term_sketch2 --> Problem  synth_38
Sketch conj86_sketch1 --> Problem  synth_50
Sketch conj119_term_sketch2 --> Problem  synth_25
Sketch conj60_term_sketch0 --> Problem  synth_4
Sketch conj52_term_sketch2 --> Problem  synth_29
Sketch conj32_term_sketch2 --> Problem  synth_13
Sketch conj86_term_sketch1 --> Problem  synth_9
Sketch conj32_sketch1 --> Problem  synth_18
Sketch conj118_sketch0 --> Problem  synth_74
Sketch conj19_sketch0 --> Problem  synth_2
Sketch conj96_sketch3 --> Problem  synth_65
Sketch conj83_term_sketch0 --> Problem  synth_2
Sketch conj96_sketch0 --> Problem  synth_51
Sketch conj114_sketch3 --> Problem  synth_68
Sketch conj120_sketch4 --> Problem  synth_69
Sketch conj95_term_sketch1 --> Problem  synth_8
Sketch conj95_term_sketch0 --> Problem  synth_7
Sketch conj20_sketch1 --> Problem  synth_14
Sketch conj116_sketch4 --> Problem  synth_70
Sketch conj63_term_sketch3 --> Problem  synth_25
Sketch conj63_sketch0 --> Problem  synth_16
Sketch conj63_sketch3 --> Problem  synth_19
Sketch conj120_sketch0 --> Problem  synth_24
Sketch conj119_term_sketch4 --> Problem  synth_73
Sketch conj28_term_sketch0 --> Problem  synth_4
Sketch conj117_term_sketch0 --> Problem  synth_72
Sketch conj117_sketch1 --> Problem  synth_46
Sketch conj86_term_sketch0 --> Problem  synth_13
Sketch conj127_sketch1 --> Problem  synth_24
Sketch conj86_term_sketch2 --> Problem  synth_48
Sketch conj87_sketch0 --> Problem  synth_47
Sketch conj32_term_sketch0 --> Problem  synth_7
Sketch conj88_term_sketch1 --> Problem  synth_2
Sketch conj64_sketch3 --> Problem  synth_34
Sketch conj88_sketch3 --> Problem  synth_45
Sketch conj19_sketch1 --> Problem  synth_11
Sketch conj88_sketch4 --> Problem  synth_2
Sketch conj86_sketch3 --> Problem  synth_10
Sketch conj18_term_sketch0 --> Problem  synth_13
Sketch conj15_sketch0 --> Problem  synth_1
Sketch conj95_sketch2 --> Problem  synth_7
Sketch conj120_sketch5 --> Problem  synth_2
Sketch conj127_term_sketch1 --> Problem  synth_72
Sketch conj31_sketch1 --> Problem  synth_16
Sketch conj119_term_sketch3 --> Problem  synth_26
Sketch conj64_sketch0 --> Problem  synth_31
Sketch conj31_term_sketch2 --> Problem  synth_11
Sketch conj95_term_sketch2 --> Problem  synth_47
Sketch conj95_sketch0 --> Problem  synth_47
Sketch conj114_term_sketch3 --> Problem  synth_26
Sketch conj47_sketch0 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 2328 seconds

Problem: synth_63
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 rev2 x (Cons n (rev lf7))
 rev2 x (Cons n lf7)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_68
 Nil

Problem: synth_67

Problem: synth_77
 Nil

Problem: synth_64
 rev2 x (rev lf7)
 lfappend lf7 (rev x)
 rev2 lf7 (rev x)
 rev2 x lf7
 rev2 x Nil
 rev x

Problem: synth_11
 rev2 (rev lf6) (lfappend lf3 Nil)
 lfappend lf6 (rev (rev lf3))
 lfappend lf6 (lfappend lf3 Nil)
 rev (rev2 lf3 (rev lf6))
 rev2 (rev lf6) lf3
 lfappend lf6 lf3

Problem: synth_54

Problem: synth_39
 rev (rev2 a (rev lf5))
 rev (rev2 a lf5)
 lfappend (rev lf5) a
 rev2 (rev lf5) a
 lfappend lf5 a
 rev2 lf5 a

Problem: synth_46

Problem: synth_66
 Cons n (rev2 lf7 a)
 lfappend lf7 (Cons n a)
 rev2 lf7 (Cons n a)
 Cons n (lfappend a lf7)
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_57
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_59
 rev (rev2 a (rev lf5))
 rev (rev2 a lf5)
 lfappend (rev lf5) a
 rev2 (rev lf5) a
 lfappend lf5 a
 rev2 lf5 a

Problem: synth_31

Problem: synth_8
 lfappend (rev x) (Cons n (rev lf7))
 lfappend (rev x) (Cons n lf7)
 rev2 x (Cons n (rev lf7))
 rev2 x (Cons n lf7)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_34

Problem: synth_5
 lfappend (rev x) (rev lf5)
 rev (lfappend lf5 x)
 rev (rev2 lf5 x)
 lfappend (rev x) lf5
 rev2 x (rev lf5)
 rev2 x lf5

Problem: synth_37

Problem: synth_58
 lfappend (rev x) (rev lf5)
 rev (lfappend lf5 x)
 rev (rev2 lf5 x)
 lfappend (rev x) lf5
 rev2 x (rev lf5)
 rev2 x lf5

Problem: synth_53

Problem: synth_2
 rev2 (rev lf4) (lfappend a Nil)
 lfappend lf4 (rev (rev a))
 lfappend lf4 (lfappend a Nil)
 rev (rev2 a (rev lf4))
 rev2 (rev lf4) a
 lfappend lf4 a

Problem: synth_22
 Nil

Problem: synth_18

Problem: synth_21

Problem: synth_72
 lfappend lf6 (Cons n (rev (rev a)))
 lfappend lf6 (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n (rev lf6)))
 rev (rev2 a (Cons n (rev lf6)))
 rev2 (rev lf6) (Cons n a)
 lfappend lf6 (Cons n a)

Problem: synth_56
 rev (rev2 a (rev lf5))
 rev (rev2 a lf5)
 lfappend (rev lf5) a
 rev2 (rev lf5) a
 lfappend lf5 a
 rev2 lf5 a

Problem: synth_41

Problem: synth_49

Problem: synth_75

Problem: synth_25
 Cons n Nil

Problem: synth_13
 rev2 x (rev lf7)
 lfappend lf7 (rev x)
 rev2 lf7 (rev x)
 rev2 x lf7
 rev2 x Nil
 rev x

Problem: synth_6

Problem: synth_4
 rev2 (rev2 lf5 x) a
 lfappend (rev2 x lf5) a
 lfappend (rev x) (lfappend lf5 a)
 lfappend (rev x) (rev2 lf5 a)
 rev2 x (lfappend lf5 a)
 rev2 x (rev2 lf5 a)

Problem: synth_38
 rev2 (rev2 lf5 (rev lf6)) a
 lfappend (lfappend lf6 lf5) a
 rev2 (rev lf6) (lfappend lf5 a)
 rev2 (rev lf6) (rev2 lf5 a)
 lfappend lf6 (lfappend lf5 a)
 lfappend lf6 (rev2 lf5 a)

Problem: synth_65

Problem: synth_23
 rev2 (lfappend x Nil) (Cons n Nil)
 lfappend (rev2 x Nil) (Cons n Nil)
 lfappend (rev (rev (rev x))) (Cons n Nil)
 lfappend (rev (lfappend x Nil)) (Cons n Nil)
 rev2 x (Cons n Nil)
 lfappend (rev x) (Cons n Nil)

Problem: synth_19

Problem: synth_10
 rev2 (rev2 lf2 Nil) Nil
 rev (rev2 lf2 Nil)
 rev2 (rev lf2) Nil
 rev (rev lf2)
 lfappend lf2 Nil
 lf2

Problem: synth_24
 rev2 x (Cons n (rev (rev a)))
 rev2 x (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n x))
 rev (rev2 a (Cons n x))
 lfappend (rev x) (Cons n a)
 rev2 x (Cons n a)

Problem: synth_32
 Nil

Problem: synth_48
 Cons n (rev2 lf7 a)
 lfappend lf7 (Cons n a)
 rev2 lf7 (Cons n a)
 Cons n (lfappend a lf7)
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_51
 rev2 x (Cons n (lfappend a lf7))
 rev2 x (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n x))
 rev (rev2 a (Cons n x))
 lfappend (rev x) (Cons n a)
 rev2 x (Cons n a)

Problem: synth_35
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_28
 lfappend (rev x) (lfappend lf3 Nil)
 rev2 x (rev (rev lf3))
 rev2 x (lfappend lf3 Nil)
 rev (rev2 lf3 x)
 lfappend (rev x) lf3
 rev2 x lf3

Problem: synth_73
 Cons n (rev2 (rev a) Nil)
 rev (rev2 a (Cons n Nil))
 rev (lfappend (rev a) (Cons n Nil))
 Cons n (rev (rev a))
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_17
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_29
 lfappend (rev2 x Nil) Nil
 rev (rev (rev x))
 rev (lfappend x Nil)
 lfappend (rev x) Nil
 rev2 x Nil
 rev x

Problem: synth_45

Problem: synth_76
 Nil

Problem: synth_26
 Nil

Problem: synth_70
 Nil

Problem: synth_9
 rev2 lf7 (Cons n Nil)
 lfappend (rev (rev lf7)) (Cons n Nil)
 lfappend (rev lf7) (Cons n Nil)
 Cons n (rev lf7)
 Cons n lf7
 Cons n Nil

Problem: synth_30
 Nil

Problem: synth_81
 lfappend (lfappend lf6 Nil) (Cons n Nil)
 rev2 (rev2 lf6 Nil) (Cons n Nil)
 lfappend (rev (rev2 lf6 Nil)) (Cons n Nil)
 rev2 (rev lf6) (Cons n Nil)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_1
 rev2 (rev2 lf1 Nil) Nil
 rev (rev2 lf1 Nil)
 rev2 (rev lf1) Nil
 rev (rev lf1)
 lfappend lf1 Nil
 lf1

Problem: synth_69

Problem: synth_55
 rev2 (rev lf6) (rev lf5)
 rev (lfappend lf5 (rev lf6))
 rev (rev2 lf5 (rev lf6))
 rev2 (rev lf6) lf5
 lfappend lf6 (rev lf5)
 lfappend lf6 lf5

Problem: synth_71
 Nil

Problem: synth_15

Problem: synth_14
 rev2 lf7 (rev2 x lf3)
 rev2 x (lfappend lf3 lf7)
 rev2 x (lfappend lf3 Nil)
 rev (rev2 lf3 x)
 lfappend (rev x) lf3
 rev2 x lf3

Problem: synth_79

Problem: synth_83
 Cons n (rev2 (rev a) Nil)
 rev (rev2 a (Cons n Nil))
 rev (lfappend (rev a) (Cons n Nil))
 Cons n (rev (rev a))
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_12

Problem: synth_62
 Cons n (rev2 lf7 a)
 lfappend lf7 (Cons n a)
 rev2 lf7 (Cons n a)
 Cons n (lfappend a lf7)
 Cons n (lfappend a Nil)
 Cons n a

Problem: synth_74

Problem: synth_50

Problem: synth_20
 rev2 x (rev lf7)
 lfappend lf7 (rev x)
 rev2 lf7 (rev x)
 rev2 x lf7
 rev2 x Nil
 rev x

Problem: synth_7
 rev2 x (Cons n (lfappend a lf7))
 rev2 x (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n x))
 rev (rev2 a (Cons n x))
 lfappend (rev x) (Cons n a)
 rev2 x (Cons n a)

Problem: synth_61

Problem: synth_27
 Nil

Problem: synth_42
 rev2 (rev2 lf5 x) a
 lfappend (rev2 x lf5) a
 lfappend (rev x) (lfappend lf5 a)
 lfappend (rev x) (rev2 lf5 a)
 rev2 x (lfappend lf5 a)
 rev2 x (rev2 lf5 a)

Problem: synth_16

Problem: synth_40

Problem: synth_80
 Nil

Problem: synth_33
 Nil

Problem: synth_47
 lfappend lf6 (Cons n (lfappend a lf7))
 lfappend lf6 (Cons n (lfappend a Nil))
 rev (lfappend (rev a) (Cons n (rev lf6)))
 rev (rev2 a (Cons n (rev lf6)))
 rev2 (rev lf6) (Cons n a)
 lfappend lf6 (Cons n a)

Problem: synth_3

Problem: synth_52

Problem: synth_44

Problem: synth_60
 rev2 (rev lf6) (Cons n lf7)
 rev2 (rev lf6) (Cons n Nil)
 lfappend lf6 (Cons n (rev lf7))
 lfappend lf6 (Cons n lf7)
 lfappend lf6 (Cons n Nil)
 lfappend (rev (rev lf6)) (Cons n Nil)

Problem: synth_36
 Nil

Problem: synth_82
 Nil

Problem: synth_78

Problem: synth_43

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 2329 seconds
Lemmas:
Lemma candidate_1: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_2: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (rev (rev2 lf1 Nil)).
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev2 (rev lf1) Nil).
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_8: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_9: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_10: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_11: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_12: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_13: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_14: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_15: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_16: forall (lf1 : lst), @eq lst lf1 (rev (rev2 lf1 Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst lf1 (rev2 (rev lf1) Nil).
Lemma candidate_18: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_19: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_20: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_21: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_22: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_23: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_24: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_25: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_26: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (rev2 lf5 a)).
Lemma candidate_27: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_28: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (lfappend lf5 x)).
Lemma candidate_29: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_30: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_31: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (rev lf5)).
Lemma candidate_32: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x lf5).
Lemma candidate_33: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_34: forall (lf1 : lst), @eq lst lf1 (rev (rev2 lf1 Nil)).
Lemma candidate_35: forall (lf1 : lst), @eq lst lf1 (rev2 (rev lf1) Nil).
Lemma candidate_36: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_37: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_38: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_39: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_40: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_41: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_42: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_43: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_44: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_45: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_46: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_47: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_48: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_49: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_50: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_51: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_52: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_53: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_54: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_55: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_56: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_57: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_58: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_59: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_60: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_61: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_62: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_63: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_64: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_68: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_69: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_70: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_71: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_72: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_73: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_74: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_75: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_76: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_77: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_78: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_79: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_80: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_81: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_82: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_83: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_84: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_85: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_86: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_87: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_88: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_89: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_90: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_91: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_92: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_93: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_94: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_95: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_96: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_97: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_98: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_99: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_100: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_101: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_102: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_103: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_104: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_105: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_106: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_107: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_108: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_109: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_110: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_111: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_112: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_113: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_114: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_115: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_116: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_117: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_118: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_119: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_120: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_121: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_122: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_123: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_124: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_125: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_126: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_127: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_128: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_129: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_130: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_131: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_132: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_133: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_134: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_135: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_136: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_137: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_138: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_139: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_140: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_141: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_142: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_143: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_144: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_145: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_146: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_147: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_148: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_149: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_150: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_151: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_152: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_153: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_154: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_155: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_156: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_157: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_158: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (rev2 lf5 a)).
Lemma candidate_159: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_160: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_161: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_162: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_163: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_164: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_165: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_166: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (lfappend lf5 x)).
Lemma candidate_167: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_168: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_169: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (rev lf5)).
Lemma candidate_170: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x lf5).
Lemma candidate_171: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_172: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_173: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_174: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_175: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_176: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_177: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_178: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (rev x))) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_179: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x Nil)) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_180: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_181: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_182: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_183: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_184: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_185: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_186: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_187: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_188: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_189: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_190: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_191: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_192: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_193: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_194: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (rev2 lf5 a)).
Lemma candidate_195: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_196: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_197: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_198: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_199: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_200: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_201: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_202: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (lfappend lf5 x)).
Lemma candidate_203: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_204: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_205: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (rev lf5)).
Lemma candidate_206: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x lf5).
Lemma candidate_207: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_208: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_209: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_210: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_211: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_212: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_213: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_214: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_215: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_216: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_217: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_218: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_219: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_220: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_221: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_222: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_223: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_224: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_225: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_226: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_227: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_228: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_229: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_230: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_231: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_232: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_233: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_234: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_235: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_236: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_237: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_238: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_239: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_240: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_241: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_242: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_243: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_244: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_245: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_246: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_247: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_248: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_249: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_250: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_251: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_252: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_253: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_254: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_255: forall (lf3 : lst) (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (rev lf7)) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_256: forall (lf3 : lst) (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) lf3)   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_257: forall (lf3 : lst) (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 lf7 (rev x)) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_258: forall (lf3 : lst) (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_259: forall (lf3 : lst) (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_260: forall (lf3 : lst) (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_261: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_262: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_263: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_264: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_265: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_266: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_267: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_268: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_269: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_270: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_271: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_272: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_273: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_274: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_275: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_276: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_277: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_278: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_279: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_280: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_281: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_282: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_283: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_284: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_285: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 lf7 (rev2 x lf3)).
Lemma candidate_286: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 lf7)).
Lemma candidate_287: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_288: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev (rev2 lf3 x)).
Lemma candidate_289: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (lfappend (rev x) lf3).
Lemma candidate_290: forall (lf3 : lst) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) lf3) (rev2 x lf3).
Lemma candidate_291: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_292: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_293: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_294: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_295: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_296: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_297: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_298: forall (lf1 : lst), @eq lst lf1 (rev (rev2 lf1 Nil)).
Lemma candidate_299: forall (lf1 : lst), @eq lst lf1 (rev2 (rev lf1) Nil).
Lemma candidate_300: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_301: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_302: forall (lf1 : lst), @eq lst lf1 (lf1).
Lemma candidate_303: forall (a : lst) (n : nat) (lf1 : lst) (x : lst), @eq lst lf1 (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_304: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_305: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_306: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_307: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_308: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_309: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_310: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_311: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_312: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_313: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_314: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_315: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_316: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_317: @eq lst Nil (Nil).
Lemma candidate_318: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_319: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_320: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_321: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_322: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_323: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_324: forall (lf3 : lst) (x : lst) (lf2 : lst), @eq lst (lfappend (rev2 x (Nil)) lf3) lf2.
Lemma candidate_325: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_326: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_327: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_328: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_329: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_330: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_331: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_332: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_333: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_334: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_335: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_336: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_337: @eq lst Nil (Nil).
Lemma candidate_338: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_339: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_340: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_341: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_342: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_343: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_344: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_345: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_346: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_347: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_348: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_349: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_350: forall (lf3 : lst) (a : lst) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x (Nil)) lf3) (lfappend lf4 a).
Lemma candidate_351: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_352: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_353: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_354: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_355: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_356: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_357: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_358: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_359: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_360: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_361: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_362: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_363: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_364: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_365: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_366: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_367: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_368: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_369: @eq lst Nil (Nil).
Lemma candidate_370: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_371: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_372: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_373: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_374: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_375: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_376: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_377: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_378: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_379: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_380: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_381: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_382: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_383: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (rev x))) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_384: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x Nil)) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_385: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_386: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_387: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_388: forall (lf3 : lst) (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x (Nil)) lf3) (lfappend (rev2 x lf5) a).
Lemma candidate_389: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_390: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_391: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_392: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_393: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_394: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (rev2 lf5 a)).
Lemma candidate_395: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_396: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_397: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_398: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_399: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_400: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_401: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_402: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (lfappend lf5 x)).
Lemma candidate_403: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_404: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_405: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (rev lf5)).
Lemma candidate_406: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x lf5).
Lemma candidate_407: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_408: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_409: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_410: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_411: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_412: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_413: @eq lst Nil (Nil).
Lemma candidate_414: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_415: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_416: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_417: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_418: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_419: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_420: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_421: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_422: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_423: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_424: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_425: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_426: forall (lf3 : lst) (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_427: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_428: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_429: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_430: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_431: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_432: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_433: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_434: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_435: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_436: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_437: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_438: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_439: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_440: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_441: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_442: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_443: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_444: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 lf3).
Lemma candidate_445: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_446: @eq lst Nil (Nil).
Lemma candidate_447: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_448: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_449: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_450: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_451: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_452: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_453: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_454: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_455: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_456: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_457: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_458: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_459: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) lf3)   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_460: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev (rev (rev x))) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_461: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev (lfappend x Nil)) lf3)   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_462: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (lfappend (rev x) Nil) lf3)   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_463: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_464: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) lf3) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_465: forall (lf3 : lst) (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Nil)) lf3) (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_466: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_467: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_468: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_469: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_470: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_471: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_472: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_473: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_474: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_475: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_476: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_477: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_478: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_479: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_480: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_481: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_482: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_483: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x lf3).
Lemma candidate_484: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_485: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_486: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_487: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_488: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_489: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_490: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_491: @eq lst Nil (Nil).
Lemma candidate_492: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_493: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_494: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_495: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_496: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_497: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_498: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_499: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_500: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_501: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (rev2 lf5 a)).
Lemma candidate_502: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (lfappend lf5 a)).
Lemma candidate_503: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (rev2 lf5 a)).
Lemma candidate_504: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_505: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_506: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_507: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_508: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_509: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_510: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_511: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_512: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_513: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_514: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_515: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_516: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_517: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_518: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_519: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_520: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_521: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_522: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_523: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_524: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_525: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_526: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_527: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_528: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_529: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_530: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_531: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_532: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_533: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_534: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_535: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_536: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_537: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (rev2 lf5 a)).
Lemma candidate_538: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (lfappend lf5 a)).
Lemma candidate_539: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (rev2 lf5 a)).
Lemma candidate_540: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_541: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_542: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_543: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_544: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_545: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_546: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_547: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_548: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_549: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_550: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_551: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_552: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_553: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_554: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_555: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (rev2 lf5 a)).
Lemma candidate_556: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (lfappend lf5 a)).
Lemma candidate_557: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (rev2 lf5 a)).
Lemma candidate_558: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_559: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_560: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_561: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_562: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_563: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_564: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_565: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_566: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_567: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_568: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_569: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_570: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_571: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_572: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_573: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_574: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_575: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_576: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_577: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_578: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_579: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_580: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_581: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_582: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_583: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_584: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_585: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_586: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_587: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_588: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_589: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_590: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_591: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_592: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_593: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_594: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_595: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_596: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_597: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_598: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_599: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_600: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_601: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_602: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_603: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_604: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_605: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_606: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a lf7))).
Lemma candidate_607: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_608: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_609: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_610: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_611: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_612: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_613: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_614: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_615: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_616: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_617: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_618: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (rev2 lf7 a)).
Lemma candidate_619: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (lfappend lf7 (Cons n a)).
Lemma candidate_620: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (rev2 lf7 (Cons n a)).
Lemma candidate_621: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a lf7)).
Lemma candidate_622: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a Nil)).
Lemma candidate_623: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n a).
Lemma candidate_624: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_625: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_626: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_627: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_628: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_629: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_630: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_631: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_632: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_633: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_634: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_635: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_636: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_637: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_638: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_639: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_640: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_641: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_642: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (rev2 lf7 a)).
Lemma candidate_643: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (lfappend lf7 (Cons n a)).
Lemma candidate_644: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (rev2 lf7 (Cons n a)).
Lemma candidate_645: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a lf7)).
Lemma candidate_646: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a Nil)).
Lemma candidate_647: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n a).
Lemma candidate_648: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_649: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_650: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_651: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_652: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_653: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (rev2 x (Cons n a)).
Lemma candidate_654: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a lf7))).
Lemma candidate_655: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_656: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_657: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_658: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_659: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_660: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_661: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_662: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_663: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_664: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_665: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_666: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_667: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_668: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_669: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_670: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_671: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_672: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a lf7))).
Lemma candidate_673: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_674: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_675: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_676: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_677: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_678: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_679: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_680: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_681: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_682: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_683: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_684: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (rev2 lf7 a)).
Lemma candidate_685: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (lfappend lf7 (Cons n a)).
Lemma candidate_686: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (rev2 lf7 (Cons n a)).
Lemma candidate_687: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a lf7)).
Lemma candidate_688: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a Nil)).
Lemma candidate_689: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n a).
Lemma candidate_690: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_691: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_692: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_693: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_694: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_695: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (rev2 x (Cons n a)).
Lemma candidate_696: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_697: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_698: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_699: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_700: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_701: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_702: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_703: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_704: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_705: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_706: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_707: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_708: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_709: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_710: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_711: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_712: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_713: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_714: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_715: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_716: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_717: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_718: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_719: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_720: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (rev2 lf7 a)).
Lemma candidate_721: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (lfappend lf7 (Cons n a)).
Lemma candidate_722: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (rev2 lf7 (Cons n a)).
Lemma candidate_723: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a lf7)).
Lemma candidate_724: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a Nil)).
Lemma candidate_725: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n a).
Lemma candidate_726: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_727: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_728: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_729: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_730: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_731: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (rev2 x (Cons n a)).
Lemma candidate_732: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_733: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_734: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_735: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (rev2 lf5 a)).
Lemma candidate_736: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (lfappend lf5 a)).
Lemma candidate_737: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (rev2 lf5 a)).
Lemma candidate_738: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (rev2 (rev lf6) (rev lf5)) a).
Lemma candidate_739: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (rev (lfappend lf5 (rev lf6))) a).
Lemma candidate_740: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (rev (rev2 lf5 (rev lf6))) a).
Lemma candidate_741: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 (rev lf6) lf5) a).
Lemma candidate_742: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 (rev lf5)) a).
Lemma candidate_743: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_744: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_745: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_746: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_747: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_748: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_749: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_750: forall (a : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev2 a (rev lf5)))) (lfappend (rev2 x lf5) a).
Lemma candidate_751: forall (a : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev2 a lf5))) (lfappend (rev2 x lf5) a).
Lemma candidate_752: forall (a : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (rev lf5) a)) (lfappend (rev2 x lf5) a).
Lemma candidate_753: forall (a : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev2 (rev lf5) a)) (lfappend (rev2 x lf5) a).
Lemma candidate_754: forall (a : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_755: forall (a : lst) (x : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_756: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_757: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_758: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_759: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_760: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_761: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (rev2 lf5 a)).
Lemma candidate_762: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_763: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (lfappend lf5 x)).
Lemma candidate_764: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_765: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_766: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (rev lf5)).
Lemma candidate_767: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x lf5).
Lemma candidate_768: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_769: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_770: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_771: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (rev2 lf5 a)).
Lemma candidate_772: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (lfappend lf5 a)).
Lemma candidate_773: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend lf6 (rev2 lf5 a)).
Lemma candidate_774: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_775: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_776: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_777: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_778: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_779: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_780: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_781: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_782: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_783: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_784: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_785: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_786: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_787: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_788: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_789: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_790: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_791: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_792: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_793: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (rev x))) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_794: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x Nil)) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_795: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_796: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_797: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_798: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (lfappend (rev x) (rev lf5)) a).
Lemma candidate_799: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev (lfappend lf5 x)) a).
Lemma candidate_800: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev (rev2 lf5 x)) a).
Lemma candidate_801: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (lfappend (rev x) lf5) a).
Lemma candidate_802: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev2 x (rev lf5)) a).
Lemma candidate_803: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_804: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (rev (rev2 a (rev lf5))))   (lfappend (rev2 x lf5) a).
Lemma candidate_805: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (rev (rev2 a lf5))) (lfappend (rev2 x lf5) a).
Lemma candidate_806: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (rev lf5) a))   (lfappend (rev2 x lf5) a).
Lemma candidate_807: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (rev2 (rev lf5) a)) (lfappend (rev2 x lf5) a).
Lemma candidate_808: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_809: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (rev2 lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_810: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_811: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev2 x lf5) a).
Lemma candidate_812: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_813: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_814: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_815: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (rev2 lf5 a)).
Lemma candidate_816: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_817: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_818: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_819: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_820: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_821: forall (a : lst) (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_822: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_823: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_824: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_825: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_826: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_827: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_828: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) (rev lf5)).
Lemma candidate_829: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (lfappend lf5 x)).
Lemma candidate_830: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_831: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_832: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x (rev lf5)).
Lemma candidate_833: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev2 x lf5).
Lemma candidate_834: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_835: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_836: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_837: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_838: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_839: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_840: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a lf7))).
Lemma candidate_841: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_842: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_843: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_844: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_845: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_846: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (rev2 (rev lf6) (Cons n lf7)) a).
Lemma candidate_847: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (rev2 (rev lf6) (Cons n Nil)) a).
Lemma candidate_848: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend lf6 (Cons n (rev lf7))) a).
Lemma candidate_849: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend lf6 (Cons n lf7)) a).
Lemma candidate_850: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend lf6 (Cons n Nil)) a).
Lemma candidate_851: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) a).
Lemma candidate_852: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_853: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_854: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_855: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_856: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_857: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_858: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev2 lf7 a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_859: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_860: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev2 lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_861: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend a lf7)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_862: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_863: forall (a : lst) (lf7 : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_864: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_865: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_866: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_867: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_868: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_869: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_870: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_871: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_872: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_873: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_874: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_875: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_876: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a lf7))).
Lemma candidate_877: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_878: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_879: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_880: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_881: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_882: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_883: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_884: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_885: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_886: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_887: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_888: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (rev2 lf7 a)).
Lemma candidate_889: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (lfappend lf7 (Cons n a)).
Lemma candidate_890: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (rev2 lf7 (Cons n a)).
Lemma candidate_891: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a lf7)).
Lemma candidate_892: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a Nil)).
Lemma candidate_893: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n a).
Lemma candidate_894: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_895: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_896: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_897: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_898: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_899: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (rev2 x (Cons n a)).
Lemma candidate_900: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (lfappend (rev x) (Cons n (rev lf7))) a).
Lemma candidate_901: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (lfappend (rev x) (Cons n lf7)) a).
Lemma candidate_902: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n (rev lf7))) a).
Lemma candidate_903: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_904: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_905: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (lfappend (rev x) (Cons n Nil)) a).
Lemma candidate_906: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (rev lf7)) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_907: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (lfappend lf7 (rev x)) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_908: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 lf7 (rev x)) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_909: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_910: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_911: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_912: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n (rev2 lf7 a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_913: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_914: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (rev2 lf7 (Cons n a)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_915: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n (lfappend a lf7)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_916: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_917: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_918: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a lf7))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_919: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_920: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_921: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_922: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_923: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_924: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_925: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_926: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_927: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_928: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_929: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n lf7)) a) (rev2 x (Cons n a)).
Lemma candidate_930: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n (rev lf7))).
Lemma candidate_931: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_932: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n (rev lf7))).
Lemma candidate_933: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n lf7)).
Lemma candidate_934: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (rev2 x (Cons n Nil)).
Lemma candidate_935: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_936: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x (rev lf7)).
Lemma candidate_937: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (lfappend lf7 (rev x)).
Lemma candidate_938: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 lf7 (rev x)).
Lemma candidate_939: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x lf7).
Lemma candidate_940: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev2 x Nil).
Lemma candidate_941: forall (lf7 : lst) (x : lst), @eq lst (rev2 x lf7) (rev x).
Lemma candidate_942: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (rev2 lf7 (Cons n Nil)).
Lemma candidate_943: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev (rev lf7)) (Cons n Nil)).
Lemma candidate_944: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (lfappend (rev lf7) (Cons n Nil)).
Lemma candidate_945: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n (rev lf7)).
Lemma candidate_946: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n lf7).
Lemma candidate_947: forall (lf7 : lst) (n : nat), @eq lst (Cons n lf7) (Cons n Nil).
Lemma candidate_948: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (rev2 lf7 a)).
Lemma candidate_949: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (lfappend lf7 (Cons n a)).
Lemma candidate_950: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (rev2 lf7 (Cons n a)).
Lemma candidate_951: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a lf7)).
Lemma candidate_952: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n (lfappend a Nil)).
Lemma candidate_953: forall (a : lst) (lf7 : lst) (n : nat), @eq lst (lfappend (Cons n lf7) a) (Cons n a).
Lemma candidate_954: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a lf7))).
Lemma candidate_955: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_956: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_957: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_958: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_959: forall (a : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (lfappend (rev2 x lf7) (lfappend (Cons n lf7) a)) (rev2 x (Cons n a)).
Lemma candidate_960: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_961: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_962: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_963: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_964: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_965: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_966: forall (a : lst) (x : lst) (lf5 : lst) (lf2 : lst), @eq lst (lfappend (rev2 x (Nil)) (lfappend lf5 a)) lf2.
Lemma candidate_967: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_968: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_969: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_970: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_971: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_972: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_973: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_974: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_975: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_976: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_977: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_978: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_979: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_980: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_981: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_982: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_983: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_984: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_985: @eq lst Nil (Nil).
Lemma candidate_986: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_987: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_988: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_989: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_990: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_991: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_992: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_993: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_994: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_995: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_996: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_997: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_998: forall (a : lst) (lf4 : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x (Nil)) (lfappend lf5 a)) (lfappend lf4 a).
Lemma candidate_999: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_1000: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_1001: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_1002: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (rev2 lf5 a)).
Lemma candidate_1003: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 x (lfappend lf5 a)).
Lemma candidate_1004: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 x (rev2 lf5 a)).
Lemma candidate_1005: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_1006: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_1007: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_1008: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_1009: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_1010: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_1011: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_1012: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_1013: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_1014: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_1015: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_1016: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_1017: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_1018: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a lf5)).
Lemma candidate_1019: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend (rev lf5) a).
Lemma candidate_1020: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_1021: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (lfappend lf5 a).
Lemma candidate_1022: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 lf5 a).
Lemma candidate_1023: @eq lst Nil (Nil).
Lemma candidate_1024: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_1025: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_1026: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_1027: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1028: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1029: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1030: forall (a : lst) (n : nat) (lf2 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n (Nil)) a)) lf2.
Lemma candidate_1031: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1032: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1033: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_1034: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1035: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_1036: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_1037: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1038: @eq lst Nil (Nil).
Lemma candidate_1039: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_1040: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1041: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_1042: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_1043: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_1044: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n a).
Lemma candidate_1045: forall (a : lst) (n : nat) (x : lst) (lf2 : lst), @eq lst (lfappend (rev2 x (Nil)) (lfappend (Cons n (Nil)) a)) lf2.
Lemma candidate_1046: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_1047: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_1048: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_1049: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_1050: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_1051: forall (lf2 : lst), @eq lst (lf2) lf2.
Lemma candidate_1052: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1053: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_1054: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_1055: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_1056: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_1057: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_1058: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_1059: @eq lst Nil (Nil).
Lemma candidate_1060: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_1061: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1062: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_1063: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_1064: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_1065: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n a).
Lemma candidate_1066: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1067: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1068: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_1069: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_1070: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_1071: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (rev2 x (Cons n a)).
Lemma candidate_1072: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_1073: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_1074: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_1075: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_1076: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_1077: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_1078: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1079: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1080: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_1081: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1082: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_1083: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_1084: forall (a : lst) (n : nat) (lf4 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n (Nil)) a)) (lfappend lf4 a).
Lemma candidate_1085: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1086: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1087: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_1088: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1089: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_1090: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_1091: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_1092: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_1093: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_1094: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_1095: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_1096: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_1097: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1098: @eq lst Nil (Nil).
Lemma candidate_1099: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_1100: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1101: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_1102: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_1103: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_1104: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n a).
Lemma candidate_1105: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1106: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1107: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_1108: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_1109: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_1110: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (rev2 x (Cons n a)).
Lemma candidate_1111: forall (a : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (lfappend (rev2 x (Nil)) (lfappend (Cons n (Nil)) a))   (lfappend lf4 a).
Lemma candidate_1112: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_1113: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_1114: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_1115: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_1116: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_1117: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_1118: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_1119: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_1120: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_1121: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_1122: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_1123: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 a).
Lemma candidate_1124: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1125: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev2 x Nil) Nil).
Lemma candidate_1126: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_1127: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_1128: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_1129: forall (x : lst), @eq lst (rev2 x Nil) (rev2 x Nil).
Lemma candidate_1130: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_1131: @eq lst Nil (Nil).
Lemma candidate_1132: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_1133: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1134: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_1135: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_1136: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_1137: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n a).
Lemma candidate_1138: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1139: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1140: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_1141: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_1142: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_1143: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a)) (rev2 x (Cons n a)).
Lemma candidate_1144: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) a).
Lemma candidate_1145: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev2 lf6 Nil) (Cons n Nil)) a).
Lemma candidate_1146: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (rev (rev2 lf6 Nil)) (Cons n Nil)) a).
Lemma candidate_1147: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev lf6) (Cons n Nil)) a).
Lemma candidate_1148: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend lf6 (Cons n Nil)) a).
Lemma candidate_1149: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) a).
Lemma candidate_1150: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1151: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1152: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1153: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1154: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1155: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1156: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1157: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1158: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_1159: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1160: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_1161: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_1162: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n (Nil)) a))   (lfappend (rev2 x (Cons n (Nil))) a).
Lemma candidate_1163: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev2 (rev a) Nil)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1164: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (rev2 a (Cons n Nil))))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1165: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (rev (lfappend (rev a) (Cons n Nil))))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1166: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (rev (rev a))))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1167: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n (lfappend a Nil)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1168: forall (a : lst) (n : nat) (x : lst) (lf6 : lst), @eq lst (lfappend lf6 (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_1169: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_1170: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev2 x Nil) (Cons n Nil)).
Lemma candidate_1171: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1172: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_1173: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 x (Cons n Nil)).
Lemma candidate_1174: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_1175: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1176: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1177: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_1178: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1179: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_1180: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (lfappend lf6 (Cons n a)).
Lemma candidate_1181: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1182: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1183: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_1184: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_1185: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_1186: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_1187: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1188: @eq lst Nil (Nil).
Lemma candidate_1189: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_1190: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1191: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_1192: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_1193: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_1194: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n a).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 3110 seconds
Duplicates removed: 923
Filtered by Quickchick: 151
Filtered by script: 22
Remaining: 98

Lemmas: 
Lemma candidate_60: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_336: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_61: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_59: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_58: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev2 (rev lf1) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (rev (rev2 lf1 Nil)).
Lemma candidate_57: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_29: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_332: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_507: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_334: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_333: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_91: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_30: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_13: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_504: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_90: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_12: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_88: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_10: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_328: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_147: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_21: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_1042: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_89: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_11: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_64: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_329: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_87: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_9: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_1043: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_151: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_25: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_326: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_1040: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1039: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_309: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_46: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_425: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_315: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_63: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_327: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_304: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_423: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_313: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_498: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_149: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_23: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_967: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_1041: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_499: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).
Lemma candidate_424: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_314: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_741: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 (rev lf6) lf5) a).
Lemma candidate_500: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_325: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_306: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_420: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_310: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_2: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_1035: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_307: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_421: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_311: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_422: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_312: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_740: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (rev (rev2 lf5 (rev lf6))) a).
Lemma candidate_793: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (rev x))) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_1034: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1069: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_969: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_795: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_794: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x Nil)) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_1031: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1070: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_911: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_1148: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend lf6 (Cons n Nil)) a).
Lemma candidate_1066: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1032: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_849: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend lf6 (Cons n lf7)) a).
Lemma candidate_792: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_1147: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev lf6) (Cons n Nil)) a).
Lemma candidate_846: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (rev2 (rev lf6) (Cons n lf7)) a).
Lemma candidate_1067: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1033: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_910: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_1068: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_1145: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev2 lf6 Nil) (Cons n Nil)) a).
Lemma candidate_1149: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) a).
Lemma candidate_1144: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) a).
Lemma candidate_1146: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (rev (rev2 lf6 Nil)) (Cons n Nil)) a).
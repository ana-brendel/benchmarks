LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2-rev2_append-48-rev2_append_aux

Number of Lemmas: 1194
Number of Lemmas (after duplicates removed): 271
Number of Lemmas (after QuickChick used to filter): 120
* Number of Candidate Lemmas: 98

Time until ranking: 3112
Time to complete: 9753

Stuck state true independent of hypotheses: true

Category 1:
Count = 2

Lemma candidate_849: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (lfappend lf6 (Cons n lf7)) a).
Lemma candidate_1144: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (lfappend lf6 Nil) (Cons n Nil)) a).

Category 2:
Count = 9

Lemma candidate_21: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 (rev2 lf5 x) a).
Lemma candidate_25: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (rev2 x (lfappend lf5 a)).
Lemma candidate_315: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n a)).
Lemma candidate_23: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x lf5) a) (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_2: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_795: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev x) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_794: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (lfappend x Nil)) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_792: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (lfappend (rev2 x Nil) Nil) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_910: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).

Category 3 (provable):
Count = 4

Lemma candidate_61: forall (lf2 : lst), @eq lst (lfappend lf2 Nil) lf2.
Lemma candidate_7: forall (lf1 : lst), @eq lst lf1 (lfappend lf1 Nil).
Lemma candidate_1043: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (lfappend a Nil)).
Lemma candidate_499: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (lfappend lf6 lf5) a).

Category 3 (not provable):
Count = 83

Lemma candidate_60: forall (lf2 : lst), @eq lst (rev (rev lf2)) lf2.
Lemma candidate_6: forall (lf1 : lst), @eq lst lf1 (rev (rev lf1)).
Lemma candidate_336: forall (x : lst), @eq lst (rev2 x Nil) (rev x).
Lemma candidate_59: forall (lf2 : lst), @eq lst (rev2 (rev lf2) Nil) lf2.
Lemma candidate_58: forall (lf2 : lst), @eq lst (rev (rev2 lf2 Nil)) lf2.
Lemma candidate_5: forall (lf1 : lst), @eq lst lf1 (rev2 (rev lf1) Nil).
Lemma candidate_4: forall (lf1 : lst), @eq lst lf1 (rev (rev2 lf1 Nil)).
Lemma candidate_57: forall (lf2 : lst), @eq lst (rev2 (rev2 lf2 Nil) Nil) lf2.
Lemma candidate_3: forall (lf1 : lst), @eq lst lf1 (rev2 (rev2 lf1 Nil) Nil).
Lemma candidate_29: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (rev (rev2 lf5 x)).
Lemma candidate_332: forall (x : lst), @eq lst (rev2 x Nil) (rev (rev (rev x))).
Lemma candidate_507: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev2 (rev lf5) a).
Lemma candidate_334: forall (x : lst), @eq lst (rev2 x Nil) (lfappend (rev x) Nil).
Lemma candidate_333: forall (x : lst), @eq lst (rev2 x Nil) (rev (lfappend x Nil)).
Lemma candidate_91: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) a) (lfappend lf4 a).
Lemma candidate_30: forall (x : lst) (lf5 : lst), @eq lst (rev2 x lf5) (lfappend (rev x) lf5).
Lemma candidate_13: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) a).
Lemma candidate_67: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) lf3).
Lemma candidate_504: forall (a : lst) (lf5 : lst), @eq lst (lfappend lf5 a) (rev (rev2 a (rev lf5))).
Lemma candidate_90: forall (a : lst) (lf4 : lst), @eq lst (rev (rev2 a (rev lf4))) (lfappend lf4 a).
Lemma candidate_12: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev (rev2 a (rev lf4))).
Lemma candidate_88: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (rev (rev a))) (lfappend lf4 a).
Lemma candidate_66: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev (rev2 lf3 (rev lf6))).
Lemma candidate_10: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (rev (rev a))).
Lemma candidate_328: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev (rev2 lf3 x)).
Lemma candidate_147: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 (rev2 lf5 x) a) (lfappend (rev2 x lf5) a).
Lemma candidate_1042: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev (rev a))).
Lemma candidate_89: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_11: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (lfappend lf4 (lfappend a Nil)).
Lemma candidate_64: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (rev (rev lf3))).
Lemma candidate_329: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) lf3).
Lemma candidate_87: forall (a : lst) (lf4 : lst), @eq lst (rev2 (rev lf4) (lfappend a Nil)) (lfappend lf4 a).
Lemma candidate_9: forall (a : lst) (lf4 : lst), @eq lst (lfappend lf4 a) (rev2 (rev lf4) (lfappend a Nil)).
Lemma candidate_151: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (rev2 x (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_326: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (rev (rev lf3))).
Lemma candidate_65: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (lfappend lf6 (lfappend lf3 Nil)).
Lemma candidate_1040: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (rev2 a (Cons n Nil))).
Lemma candidate_1039: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (Cons n (rev2 (rev a) Nil)).
Lemma candidate_309: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev x) (Cons n Nil)).
Lemma candidate_46: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n lf7)) (lfappend (rev x) (Cons n lf7)).
Lemma candidate_425: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_63: forall (lf3 : lst) (lf6 : lst), @eq lst (lfappend lf6 lf3) (rev2 (rev lf6) (lfappend lf3 Nil)).
Lemma candidate_327: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (rev2 x (lfappend lf3 Nil)).
Lemma candidate_304: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (rev2 (lfappend x Nil) (Cons n Nil)).
Lemma candidate_423: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (rev2 a (Cons n x))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_313: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev (rev2 a (Cons n x))).
Lemma candidate_498: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev2 lf5 (rev lf6)) a).
Lemma candidate_149: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev x) (lfappend lf5 a)) (lfappend (rev2 x lf5) a).
Lemma candidate_967: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a)) (rev2 (rev2 lf5 x) a).
Lemma candidate_1041: forall (a : lst) (n : nat), @eq lst (lfappend (Cons n Nil) a) (rev (lfappend (rev a) (Cons n Nil))).
Lemma candidate_424: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (Cons n a)) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_314: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (lfappend (rev x) (Cons n a)).
Lemma candidate_741: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (lfappend (rev2 (rev lf6) lf5) a).
Lemma candidate_500: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a)) (rev2 (rev lf6) (lfappend lf5 a)).
Lemma candidate_325: forall (lf3 : lst) (x : lst), @eq lst (lfappend (rev2 x Nil) lf3) (lfappend (rev x) (lfappend lf3 Nil)).
Lemma candidate_306: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_420: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (rev (rev a)))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_310: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1035: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a)) (rev2 (rev lf6) (Cons n a)).
Lemma candidate_307: forall (n : nat) (x : lst), @eq lst (rev2 x (Cons n Nil)) (lfappend (rev (lfappend x Nil)) (Cons n Nil)).
Lemma candidate_421: forall (a : lst) (n : nat) (x : lst), @eq lst (rev2 x (Cons n (lfappend a Nil))) (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_311: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a) (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_422: forall (a : lst) (n : nat) (x : lst), @eq lst (rev (lfappend (rev a) (Cons n x)))   (lfappend (rev2 x (Cons n Nil)) a).
Lemma candidate_312: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x (Cons n Nil)) a)   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_740: forall (a : lst) (lf5 : lst) (lf6 : lst), @eq lst (lfappend lf6 (lfappend lf5 a))   (lfappend (rev (rev2 lf5 (rev lf6))) a).
Lemma candidate_793: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev (rev (rev x))) (lfappend lf5 a))   (lfappend (rev2 x lf5) a).
Lemma candidate_1034: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n (rev lf6)))).
Lemma candidate_1069: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (rev2 a (Cons n x))).
Lemma candidate_969: forall (a : lst) (x : lst) (lf5 : lst), @eq lst (lfappend (rev2 x Nil) (lfappend lf5 a))   (lfappend (rev x) (lfappend lf5 a)).
Lemma candidate_1031: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (rev (rev a)))).
Lemma candidate_1070: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (lfappend (rev x) (Cons n a)).
Lemma candidate_911: forall (a : lst) (lf7 : lst) (n : nat) (x : lst), @eq lst (lfappend (rev x) (lfappend (Cons n lf7) a))   (lfappend (rev2 x (Cons n lf7)) a).
Lemma candidate_1148: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend lf6 (Cons n Nil)) a).
Lemma candidate_1066: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (rev (rev a)))).
Lemma candidate_1032: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend lf6 (Cons n (lfappend a Nil))).
Lemma candidate_1147: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev lf6) (Cons n Nil)) a).
Lemma candidate_846: forall (a : lst) (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n lf7) a))   (lfappend (rev2 (rev lf6) (Cons n lf7)) a).
Lemma candidate_1067: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev2 x (Cons n (lfappend a Nil))).
Lemma candidate_1033: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n (rev lf6)))).
Lemma candidate_1068: forall (a : lst) (n : nat) (x : lst), @eq lst (lfappend (rev2 x Nil) (lfappend (Cons n Nil) a))   (rev (lfappend (rev a) (Cons n x))).
Lemma candidate_1145: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (rev2 (rev2 lf6 Nil) (Cons n Nil)) a).
Lemma candidate_1149: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (rev (rev lf6)) (Cons n Nil)) a).
Lemma candidate_1146: forall (a : lst) (n : nat) (lf6 : lst), @eq lst (lfappend lf6 (lfappend (Cons n Nil) a))   (lfappend (lfappend (rev (rev2 lf6 Nil)) (Cons n Nil)) a).
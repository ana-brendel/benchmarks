LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev_append-rev_append-38-app_assoc

Number of Lemmas: 1854
Number of Lemmas (after duplicates removed): 349
Number of Lemmas (after QuickChick used to filter): 217
* Number of Candidate Lemmas: 167

Time until ranking: 6450
Time to complete: 14269

Stuck state true independent of hypotheses: true

Category 1:
Count = 12

Lemma candidate_1078: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app (app lf7 lf6) lf5).
Lemma candidate_12: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_1098: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app (app lf7 (rev x)) lf5).
Lemma candidate_11: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_6: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma candidate_1235: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_1189: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_10: forall (lf7 : lst) (n : nat) (lf6 : lst) (lf8 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_8: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1263: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_9: forall (lf7 : lst) (n : nat) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_7: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).

Category 2:
Count = 17

Lemma candidate_73: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_1463: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (rev (app (rev lf5) (app x y))).
Lemma candidate_5: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_528: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_527: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_1628: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_1207: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_550: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5)   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_4: forall (n : nat) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_2: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1821: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x y)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1666: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1662: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_3: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_13: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_15: forall (n : nat) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_14: forall (n : nat) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).

Category 3 (provable):
Count = 22

Lemma candidate_209: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_20: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_207: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_18: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_224: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_212: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_71: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_69: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_68: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_24: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_22: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_92: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_1241: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 Nil) (Cons n Nil)).
Lemma candidate_1239: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 (Cons n Nil)) Nil).
Lemma candidate_56: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_54: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1357: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 Nil) (app lf6 (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1232: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_164: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_1386: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 Nil) (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1262: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_187: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).

Category 3 (not provable):
Count = 116

Lemma candidate_208: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_19: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_536: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_101: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_534: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_99: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_206: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_205: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_533: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_532: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_98: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_97: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1071: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (app lf5 Nil)).
Lemma candidate_1069: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app (app lf6 lf5) Nil).
Lemma candidate_227: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_225: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_215: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_213: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_1070: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev (rev lf5))).
Lemma candidate_226: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_223: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_214: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_211: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_70: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_67: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_23: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1087: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app (rev lf5) x)).
Lemma candidate_720: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_702: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_522: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_95: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_1089: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (app lf5 Nil)).
Lemma candidate_722: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_704: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_524: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_94: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_1088: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev (rev lf5))).
Lemma candidate_721: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_703: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_547: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_523: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_93: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_91: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_546: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_719: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_701: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_521: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_718: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_700: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_545: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_520: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_1243: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1111: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (app lf5 Nil))) (app lf7 (app lf6 lf5)).
Lemma candidate_1075: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_58: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1523: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (app (rev lf5) (app x y))) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1255: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) (Cons n Nil)) Nil).
Lemma candidate_1253: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) Nil) (Cons n Nil)).
Lemma candidate_554: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app (rev lf5) (app x y))).
Lemma candidate_1485: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (app lf5 Nil))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1483: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) (app lf6 lf5)) Nil) (app (rev y) (app lf6 lf5)).
Lemma candidate_1431: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_1429: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_1256: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1254: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (rev (rev (app (rev x) (Cons n Nil)))).
Lemma candidate_526: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_1484: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (rev (rev lf5)))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1430: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_1240: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1238: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (app (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1144: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (app (rev lf5) (app x (rev lf7)))) (app lf7 (app (rev x) lf5)).
Lemma candidate_1096: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_88: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_55: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_53: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1519: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) (app lf5 Nil)))   (app (rev y) (app (rev x) lf5)).
Lemma candidate_1459: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5))   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_1362: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1237: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_169: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1780: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) y)) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1631: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1389: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (app x (rev lf7))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1265: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_644: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_190: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_1819: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x (app y Nil))) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1782: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app (rev (rev lf6)) (Cons n Nil)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1664: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_1633: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1385: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (rev lf7)) (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1384: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (rev (app lf7 (rev x)))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1261: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_1260: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_678: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_646: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_186: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_185: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1818: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x (rev (rev y)))) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1663: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1359: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1234: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_677: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_166: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1779: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1630: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_1358: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1233: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_643: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_165: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1778: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1629: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_675: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_642: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
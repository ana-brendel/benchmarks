File Information
- File name: list_rev_append
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev_append-rev_append-38-app_assoc
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev_append-rev_append-38-app_assoc
- Namespace: adtind
- Proof name: rev_append
- Theorem: Theorem rev_append: forall x0 y0 : lst, @eq lst (rev (app x0 y0)) (app (rev y0) (rev x0)).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (app (app (rev y) (rev x)) (Cons n Nil))
  (app (rev y) (app (rev x) (Cons n Nil)))

* Hypothesis:
IHx : @eq lst (rev (app x y)) (app (rev y) (rev x))
x : lst
y : lst
n : nat

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
y : lst
n : nat

* Terms:
@eq lst (rev (app x y)) (app (rev y) (rev x)) : Prop
app (rev y) (app (rev x) (Cons n Nil)) : lst
x : lst
y : lst
rev y : lst
rev (app x y) : lst
app (rev x) (Cons n Nil) : lst
app (rev y) (rev x) : lst
nat : Set
@eq lst (app (app (rev y) (rev x)) (Cons n Nil))
  (app (rev y) (app (rev x) (Cons n Nil))) : Prop
lst : Set
Cons n Nil : lst
app x y : lst
n : nat
app (app (rev y) (rev x)) (Cons n Nil) : lst
rev x : lst
Nil : lst

* Functions:
app  : forall (_ : lst) (_ : lst), lst
rev  : forall _ : lst, lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : lst = app (rev x) (Cons n Nil)
lf7 : lst = rev y
lf1 : lst = app (rev y) (app (rev x) (Cons n Nil))
lf4 : lst = app (rev y) (rev x)
lf5 : lst = Cons n Nil
lf2 : lst = app (app (rev y) (rev x)) (Cons n Nil)
lf8 : lst = Nil
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst (app lf4 lf5) lf1.
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) lf1.
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) lf1.
Lemma conj21: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 lf6) lf5) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 (rev x)) lf5) lf1.
Lemma conj29: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) lf1.
Lemma conj30: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) lf1.
Lemma conj31: forall (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) lf1.
Lemma conj32: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) lf1.
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (app lf7 lf3).
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app lf7 lf3).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 lf3).
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 lf3).
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 lf3).
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 lf3).
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (app lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 lf3).
Lemma conj64: forall (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (app lf7 lf3).
Lemma conj85: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) lf6) lf5) lf1.
Lemma conj86: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) (rev x)) lf5) lf1.
Lemma conj93: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n lf8)) lf1.
Lemma conj94: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) lf1.
Lemma conj95: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n Nil)) lf1.
Lemma conj96: forall (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) lf1.
Lemma conj97: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (app (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev y) lf3).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev y) lf3).
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) lf3).
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) lf3).
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8)) (app (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (app (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil)) (app (rev y) lf3).
Lemma conj128: forall (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (app (rev y) lf3).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 lf5)).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) lf5)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app lf6 lf5)).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app (rev x) lf5)).
Lemma conj169: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n lf8))).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n Nil))).
Lemma conj172: forall (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma conj182: forall (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma conj190: forall (lf8 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))
  (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj191: forall (lf6 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma conj192: forall (x : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))
  (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst lf2 (app (rev y) (app lf6 lf5)).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst lf2 (app (rev y) (app (rev x) lf5)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app lf6 lf5)).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n lf8))
  (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))
  (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj255: forall (lf6 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n Nil))
  (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj256: forall (x : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))
  (app (rev y) (app (rev x) (Cons n Nil))).


<---VALIDITY CHECKS--->
Time elapsed: 124 seconds
Valid:
Lemma conj256: forall (x : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))
  (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj255: forall (lf6 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n Nil))
  (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj254: forall (lf8 : lst) (x : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))
  (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj253: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n lf8))
  (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj246: forall (lf5 : lst) (x : lst) (y : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj245: forall (lf6 : lst) (lf5 : lst) (y : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma conj192: forall (x : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))
  (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj191: forall (lf6 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma conj190: forall (lf8 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))
  (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj189: forall (lf8 : lst) (lf6 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma conj182: forall (lf5 : lst) (x : lst) (lf7 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma conj181: forall (lf6 : lst) (lf5 : lst) (lf7 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).

Invalid:
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app lf6 lf5)).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst lf2 (app (rev y) (app (rev x) lf5)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst lf2 (app (rev y) (app lf6 lf5)).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma conj172: forall (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n Nil))).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj169: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n lf8))).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app (rev x) lf5)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app lf6 lf5)).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) lf5)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 lf5)).
Lemma conj128: forall (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (app (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil)) (app (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (app (rev y) lf3).
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8)) (app (rev y) lf3).
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) lf3).
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) lf3).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app (rev y) lf3).
Lemma conj97: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (app (rev y) lf3).
Lemma conj96: forall (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) lf1.
Lemma conj95: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n Nil)) lf1.
Lemma conj94: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) lf1.
Lemma conj93: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n lf8)) lf1.
Lemma conj86: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) (rev x)) lf5) lf1.
Lemma conj85: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) lf6) lf5) lf1.
Lemma conj64: forall (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (app lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (app lf7 lf3).
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 lf3).
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 lf3).
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 lf3).
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 lf3).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 lf3).
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app lf7 lf3).
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (app lf7 lf3).
Lemma conj32: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) lf1.
Lemma conj31: forall (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) lf1.
Lemma conj30: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) lf1.
Lemma conj29: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 (rev x)) lf5) lf1.
Lemma conj21: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 lf6) lf5) lf1.
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) lf1.
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) lf1.
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst (app lf4 lf5) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 168 seconds
Generalizations:
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj240_imp: forall (x : lst) (lf4 : lst) (y : lst) (n : nat), forall _ : @eq lst (rev (app x y)) lf4,
@eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj238_imp: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : nat), forall _ : @eq lst (rev (app x y)) lf4,
@eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj230_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), forall _ : @eq lst (rev (app x y)) lf4,
@eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app lf6 lf5)).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst lf2 (app (rev y) (app (rev x) lf5)).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst lf2 (app (rev y) (app lf6 lf5)).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma conj172: forall (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n Nil))).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj169: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n lf8))).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app (rev x) lf5)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app lf6 lf5)).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) lf5)).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 lf5)).
Lemma conj128: forall (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (app (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil)) (app (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (app (rev y) lf3).
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8)) (app (rev y) lf3).
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) lf3).
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) lf3).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app (rev y) lf3).
Lemma conj97: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (app (rev y) lf3).
Lemma conj96: forall (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) lf1.
Lemma conj95: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n Nil)) lf1.
Lemma conj94: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) lf1.
Lemma conj93: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n lf8)) lf1.
Lemma conj86: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) (rev x)) lf5) lf1.
Lemma conj85: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) lf6) lf5) lf1.
Lemma conj64: forall (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (app lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (app lf7 lf3).
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 lf3).
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 lf3).
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 lf3).
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 lf3).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 lf3).
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app lf7 lf3).
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (app lf7 lf3).
Lemma conj32: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) lf1.
Lemma conj31: forall (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) lf1.
Lemma conj30: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) lf1.
Lemma conj29: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 (rev x)) lf5) lf1.
Lemma conj21: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 lf6) lf5) lf1.
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) lf1.
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) lf1.
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst (app lf4 lf5) lf1.
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 259 seconds
Valid:
Lemma conj230_imp: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), forall _ : @eq lst (rev (app x y)) lf4,
@eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj238_imp: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : nat), forall _ : @eq lst (rev (app x y)) lf4,
@eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj240_imp: forall (x : lst) (lf4 : lst) (y : lst) (n : nat), forall _ : @eq lst (rev (app x y)) lf4,
@eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).

Invalid:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj5: forall (lf5 : lst) (lf4 : lst) (lf1 : lst), @eq lst (app lf4 lf5) lf1.
Lemma conj13: forall (lf8 : lst) (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) lf1.
Lemma conj15: forall (lf4 : lst) (lf1 : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) lf1.
Lemma conj21: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 lf6) lf5) lf1.
Lemma conj22: forall (lf5 : lst) (x : lst) (lf1 : lst) (lf7 : lst), @eq lst (app (app lf7 (rev x)) lf5) lf1.
Lemma conj29: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) lf1.
Lemma conj30: forall (lf8 : lst) (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) lf1.
Lemma conj31: forall (lf6 : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) lf1.
Lemma conj32: forall (x : lst) (lf1 : lst) (n : nat) (lf7 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) lf1.
Lemma conj33: forall (lf2 : lst) (lf7 : lst) (lf3 : lst), @eq lst lf2 (app lf7 lf3).
Lemma conj37: forall (lf5 : lst) (lf4 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app lf7 lf3).
Lemma conj45: forall (lf8 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 lf3).
Lemma conj47: forall (lf4 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 lf3).
Lemma conj53: forall (lf6 : lst) (lf5 : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 lf3).
Lemma conj54: forall (lf5 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 lf3).
Lemma conj61: forall (lf8 : lst) (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 lf3).
Lemma conj62: forall (lf8 : lst) (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (app lf7 lf3).
Lemma conj63: forall (lf6 : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 lf3).
Lemma conj64: forall (x : lst) (lf7 : lst) (n : nat) (lf3 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (app lf7 lf3).
Lemma conj85: forall (lf6 : lst) (lf5 : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) lf6) lf5) lf1.
Lemma conj86: forall (lf5 : lst) (x : lst) (lf1 : lst) (y : lst), @eq lst (app (app (rev y) (rev x)) lf5) lf1.
Lemma conj93: forall (lf8 : lst) (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n lf8)) lf1.
Lemma conj94: forall (lf8 : lst) (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) lf1.
Lemma conj95: forall (lf6 : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) lf6) (Cons n Nil)) lf1.
Lemma conj96: forall (x : lst) (lf1 : lst) (y : lst) (n : nat), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) lf1.
Lemma conj97: forall (lf2 : lst) (y : lst) (lf3 : lst), @eq lst lf2 (app (rev y) lf3).
Lemma conj101: forall (lf5 : lst) (lf4 : lst) (y : lst) (lf3 : lst), @eq lst (app lf4 lf5) (app (rev y) lf3).
Lemma conj109: forall (lf8 : lst) (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev y) lf3).
Lemma conj111: forall (lf4 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev y) lf3).
Lemma conj117: forall (lf6 : lst) (lf5 : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) lf3).
Lemma conj118: forall (lf5 : lst) (x : lst) (y : lst) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) lf3).
Lemma conj125: forall (lf8 : lst) (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8)) (app (rev y) lf3).
Lemma conj126: forall (lf8 : lst) (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (app (rev y) lf3).
Lemma conj127: forall (lf6 : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil)) (app (rev y) lf3).
Lemma conj128: forall (x : lst) (y : lst) (n : nat) (lf3 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (app (rev y) lf3).
Lemma conj161: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 lf5)).
Lemma conj162: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) lf5)).
Lemma conj165: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app lf6 lf5)).
Lemma conj166: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst), @eq lst (app lf4 lf5) (app lf7 (app (rev x) lf5)).
Lemma conj169: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n lf8))).
Lemma conj170: forall (lf8 : lst) (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj171: forall (lf6 : lst) (lf2 : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n Nil))).
Lemma conj172: forall (lf2 : lst) (x : lst) (n : nat) (lf7 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj173: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma conj174: forall (lf8 : lst) (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf7 (app (rev x) (Cons n lf8))).
Lemma conj175: forall (lf6 : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma conj176: forall (x : lst) (lf4 : lst) (n : nat) (lf7 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf7 (app (rev x) (Cons n Nil))).
Lemma conj225: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (y : lst), @eq lst lf2 (app (rev y) (app lf6 lf5)).
Lemma conj226: forall (lf2 : lst) (lf5 : lst) (x : lst) (y : lst), @eq lst lf2 (app (rev y) (app (rev x) lf5)).
Lemma conj229: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app lf6 lf5)).
Lemma conj230: forall (lf5 : lst) (x : lst) (lf4 : lst) (y : lst), @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma conj233: forall (lf8 : lst) (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj234: forall (lf8 : lst) (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj235: forall (lf6 : lst) (lf2 : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj236: forall (lf2 : lst) (x : lst) (y : lst) (n : nat), @eq lst lf2 (app (rev y) (app (rev x) (Cons n Nil))).
Lemma conj237: forall (lf8 : lst) (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app lf6 (Cons n lf8))).
Lemma conj238: forall (lf8 : lst) (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma conj239: forall (lf6 : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app lf6 (Cons n Nil))).
Lemma conj240: forall (x : lst) (lf4 : lst) (y : lst) (n : nat), @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).


<---CREATE SKETCHES--->
Time elapsed: 259 seconds
Sketches:
Sketch conj5_sketch0 : @eq lst (##hole##) lf1
Sketch conj5_term_sketch0 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj13_sketch0 : @eq lst (app lf4 (##hole##)) lf1
Sketch conj13_sketch1 : @eq lst (##hole##) lf1
Sketch conj13_term_sketch0 : @eq lst (Cons n lf8) (##hole##)
Sketch conj13_term_sketch1 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj15_sketch0 : @eq lst (##hole##) lf1
Sketch conj15_sketch1 : @eq lst (app lf4 (##hole##)) lf1
Sketch conj15_sketch2 : @eq lst (app lf4 (Cons n (##hole##))) lf1
Sketch conj15_term_sketch0 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj15_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj15_term_sketch2 : @eq lst Nil (##hole##)
Sketch conj21_sketch0 : @eq lst (app (##hole##) lf5) lf1
Sketch conj21_sketch1 : @eq lst (##hole##) lf1
Sketch conj21_term_sketch0 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj21_term_sketch1 : @eq lst (app (app lf7 lf6) lf5) (##hole##)
Sketch conj22_sketch0 : @eq lst (##hole##) lf1
Sketch conj22_sketch1 : @eq lst (app (##hole##) lf5) lf1
Sketch conj22_sketch2 : @eq lst (app (app lf7 (##hole##)) lf5) lf1
Sketch conj22_term_sketch0 : @eq lst (app (app lf7 (rev x)) lf5) (##hole##)
Sketch conj22_term_sketch1 : @eq lst (app lf7 (rev x)) (##hole##)
Sketch conj22_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj29_sketch0 : @eq lst (app (##hole##) (Cons n lf8)) lf1
Sketch conj29_sketch1 : @eq lst (##hole##) lf1
Sketch conj29_sketch2 : @eq lst (app (app lf7 lf6) (##hole##)) lf1
Sketch conj29_term_sketch0 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj29_term_sketch1 : @eq lst (app (app lf7 lf6) (Cons n lf8)) (##hole##)
Sketch conj29_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj30_sketch0 : @eq lst (##hole##) lf1
Sketch conj30_sketch1 : @eq lst (app (##hole##) (Cons n lf8)) lf1
Sketch conj30_sketch2 : @eq lst (app (app lf7 (rev x)) (##hole##)) lf1
Sketch conj30_sketch3 : @eq lst (app (app lf7 (##hole##)) (Cons n lf8)) lf1
Sketch conj30_term_sketch0 : @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (##hole##)
Sketch conj30_term_sketch1 : @eq lst (app lf7 (rev x)) (##hole##)
Sketch conj30_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj30_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj31_sketch0 : @eq lst (##hole##) lf1
Sketch conj31_sketch1 : @eq lst (app (##hole##) (Cons n Nil)) lf1
Sketch conj31_sketch2 : @eq lst (app (app lf7 lf6) (##hole##)) lf1
Sketch conj31_sketch3 : @eq lst (app (app lf7 lf6) (Cons n (##hole##))) lf1
Sketch conj31_term_sketch0 : @eq lst (app (app lf7 lf6) (Cons n Nil)) (##hole##)
Sketch conj31_term_sketch1 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj31_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj31_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj32_sketch0 : @eq lst (##hole##) lf1
Sketch conj32_sketch1 : @eq lst (app (app lf7 (rev x)) (##hole##)) lf1
Sketch conj32_sketch2 : @eq lst (app (##hole##) (Cons n Nil)) lf1
Sketch conj32_sketch3 : @eq lst (app (app lf7 (rev x)) (Cons n (##hole##))) lf1
Sketch conj32_sketch4 : @eq lst (app (app lf7 (##hole##)) (Cons n Nil)) lf1
Sketch conj32_term_sketch0 : @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (##hole##)
Sketch conj32_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj32_term_sketch2 : @eq lst (app lf7 (rev x)) (##hole##)
Sketch conj32_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj32_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj33_sketch0 : @eq lst lf2 (##hole##)
Sketch conj33_term_sketch0 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj37_sketch0 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj37_sketch1 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj37_term_sketch0 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj37_term_sketch1 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj45_sketch0 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj45_sketch1 : @eq lst (app lf4 (##hole##)) (app lf7 lf3)
Sketch conj45_sketch2 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj45_term_sketch0 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj45_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj45_term_sketch2 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj47_sketch0 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj47_sketch1 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj47_sketch2 : @eq lst (app lf4 (##hole##)) (app lf7 lf3)
Sketch conj47_sketch3 : @eq lst (app lf4 (Cons n (##hole##))) (app lf7 lf3)
Sketch conj47_term_sketch0 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj47_term_sketch1 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj47_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj47_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj53_sketch0 : @eq lst (app (##hole##) lf5) (app lf7 lf3)
Sketch conj53_sketch1 : @eq lst (app (app lf7 lf6) lf5) (##hole##)
Sketch conj53_sketch2 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj53_term_sketch0 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj53_term_sketch1 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj53_term_sketch2 : @eq lst (app (app lf7 lf6) lf5) (##hole##)
Sketch conj54_sketch0 : @eq lst (app (app lf7 (rev x)) lf5) (##hole##)
Sketch conj54_sketch1 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj54_sketch2 : @eq lst (app (##hole##) lf5) (app lf7 lf3)
Sketch conj54_sketch3 : @eq lst (app (app lf7 (##hole##)) lf5) (app lf7 lf3)
Sketch conj54_term_sketch0 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj54_term_sketch1 : @eq lst (app (app lf7 (rev x)) lf5) (##hole##)
Sketch conj54_term_sketch2 : @eq lst (app lf7 (rev x)) (##hole##)
Sketch conj54_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj61_sketch0 : @eq lst (app (##hole##) (Cons n lf8)) (app lf7 lf3)
Sketch conj61_sketch1 : @eq lst (app (app lf7 lf6) (Cons n lf8)) (##hole##)
Sketch conj61_sketch2 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj61_sketch3 : @eq lst (app (app lf7 lf6) (##hole##)) (app lf7 lf3)
Sketch conj61_term_sketch0 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj61_term_sketch1 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj61_term_sketch2 : @eq lst (app (app lf7 lf6) (Cons n lf8)) (##hole##)
Sketch conj61_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj62_sketch0 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj62_sketch1 : @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (##hole##)
Sketch conj62_sketch2 : @eq lst (app (##hole##) (Cons n lf8)) (app lf7 lf3)
Sketch conj62_sketch3 : @eq lst (app (app lf7 (rev x)) (##hole##)) (app lf7 lf3)
Sketch conj62_sketch4 : @eq lst (app (app lf7 (##hole##)) (Cons n lf8)) (app lf7 lf3)
Sketch conj62_term_sketch0 : @eq lst (app (app lf7 (rev x)) (Cons n lf8)) (##hole##)
Sketch conj62_term_sketch1 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj62_term_sketch2 : @eq lst (app lf7 (rev x)) (##hole##)
Sketch conj62_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj62_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj63_sketch0 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj63_sketch1 : @eq lst (app (##hole##) (Cons n Nil)) (app lf7 lf3)
Sketch conj63_sketch2 : @eq lst (app (app lf7 lf6) (Cons n Nil)) (##hole##)
Sketch conj63_sketch3 : @eq lst (app (app lf7 lf6) (##hole##)) (app lf7 lf3)
Sketch conj63_sketch4 : @eq lst (app (app lf7 lf6) (Cons n (##hole##))) (app lf7 lf3)
Sketch conj63_term_sketch0 : @eq lst (app (app lf7 lf6) (Cons n Nil)) (##hole##)
Sketch conj63_term_sketch1 : @eq lst (app lf7 lf6) (##hole##)
Sketch conj63_term_sketch2 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj63_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj63_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_sketch0 : @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (##hole##)
Sketch conj64_sketch1 : @eq lst (##hole##) (app lf7 lf3)
Sketch conj64_sketch2 : @eq lst (app (app lf7 (rev x)) (##hole##)) (app lf7 lf3)
Sketch conj64_sketch3 : @eq lst (app (##hole##) (Cons n Nil)) (app lf7 lf3)
Sketch conj64_sketch4 : @eq lst (app (app lf7 (rev x)) (Cons n (##hole##))) (app lf7 lf3)
Sketch conj64_sketch5 : @eq lst (app (app lf7 (##hole##)) (Cons n Nil)) (app lf7 lf3)
Sketch conj64_term_sketch0 : @eq lst (app lf7 lf3) (##hole##)
Sketch conj64_term_sketch1 : @eq lst (app (app lf7 (rev x)) (Cons n Nil)) (##hole##)
Sketch conj64_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj64_term_sketch3 : @eq lst (app lf7 (rev x)) (##hole##)
Sketch conj64_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj64_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj85_sketch0 : @eq lst (app (##hole##) lf5) lf1
Sketch conj85_sketch1 : @eq lst (##hole##) lf1
Sketch conj85_sketch2 : @eq lst (app (app (##hole##) lf6) lf5) lf1
Sketch conj85_term_sketch0 : @eq lst (app (rev y) lf6) (##hole##)
Sketch conj85_term_sketch1 : @eq lst (app (app (rev y) lf6) lf5) (##hole##)
Sketch conj85_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj86_sketch0 : @eq lst (app (##hole##) lf5) lf1
Sketch conj86_sketch1 : @eq lst (##hole##) lf1
Sketch conj86_sketch2 : @eq lst (app (app (rev y) (##hole##)) lf5) lf1
Sketch conj86_sketch3 : @eq lst (app (app (##hole##) (rev x)) lf5) lf1
Sketch conj86_term_sketch0 : @eq lst (app (rev y) (rev x)) (##hole##)
Sketch conj86_term_sketch1 : @eq lst (app (app (rev y) (rev x)) lf5) (##hole##)
Sketch conj86_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj86_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj93_sketch0 : @eq lst (app (##hole##) (Cons n lf8)) lf1
Sketch conj93_sketch1 : @eq lst (app (app (rev y) lf6) (##hole##)) lf1
Sketch conj93_sketch2 : @eq lst (##hole##) lf1
Sketch conj93_sketch3 : @eq lst (app (app (##hole##) lf6) (Cons n lf8)) lf1
Sketch conj93_term_sketch0 : @eq lst (app (rev y) lf6) (##hole##)
Sketch conj93_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj93_term_sketch2 : @eq lst (app (app (rev y) lf6) (Cons n lf8)) (##hole##)
Sketch conj93_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj94_sketch0 : @eq lst (app (##hole##) (Cons n lf8)) lf1
Sketch conj94_sketch1 : @eq lst (##hole##) lf1
Sketch conj94_sketch2 : @eq lst (app (app (rev y) (rev x)) (##hole##)) lf1
Sketch conj94_sketch3 : @eq lst (app (app (rev y) (##hole##)) (Cons n lf8)) lf1
Sketch conj94_sketch4 : @eq lst (app (app (##hole##) (rev x)) (Cons n lf8)) lf1
Sketch conj94_term_sketch0 : @eq lst (app (rev y) (rev x)) (##hole##)
Sketch conj94_term_sketch1 : @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (##hole##)
Sketch conj94_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj94_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj94_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj95_sketch0 : @eq lst (##hole##) lf1
Sketch conj95_sketch1 : @eq lst (app (##hole##) (Cons n Nil)) lf1
Sketch conj95_sketch2 : @eq lst (app (app (rev y) lf6) (##hole##)) lf1
Sketch conj95_sketch3 : @eq lst (app (app (rev y) lf6) (Cons n (##hole##))) lf1
Sketch conj95_sketch4 : @eq lst (app (app (##hole##) lf6) (Cons n Nil)) lf1
Sketch conj95_term_sketch0 : @eq lst (app (app (rev y) lf6) (Cons n Nil)) (##hole##)
Sketch conj95_term_sketch1 : @eq lst (app (rev y) lf6) (##hole##)
Sketch conj95_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj95_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj95_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj96_sketch0 : @eq lst (app (##hole##) (Cons n Nil)) lf1
Sketch conj96_sketch1 : @eq lst (app (app (rev y) (rev x)) (##hole##)) lf1
Sketch conj96_sketch2 : @eq lst (##hole##) lf1
Sketch conj96_sketch3 : @eq lst (app (app (rev y) (rev x)) (Cons n (##hole##))) lf1
Sketch conj96_sketch4 : @eq lst (app (app (rev y) (##hole##)) (Cons n Nil)) lf1
Sketch conj96_sketch5 : @eq lst (app (app (##hole##) (rev x)) (Cons n Nil)) lf1
Sketch conj96_term_sketch0 : @eq lst (app (rev y) (rev x)) (##hole##)
Sketch conj96_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj96_term_sketch2 : @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (##hole##)
Sketch conj96_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj96_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj96_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj97_sketch0 : @eq lst lf2 (##hole##)
Sketch conj97_sketch1 : @eq lst lf2 (app (##hole##) lf3)
Sketch conj97_term_sketch0 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj97_term_sketch1 : @eq lst (rev y) (##hole##)
Sketch conj101_sketch0 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj101_sketch1 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj101_sketch2 : @eq lst (app lf4 lf5) (app (##hole##) lf3)
Sketch conj101_term_sketch0 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj101_term_sketch1 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj101_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj109_sketch0 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj109_sketch1 : @eq lst (app lf4 (##hole##)) (app (rev y) lf3)
Sketch conj109_sketch2 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj109_sketch3 : @eq lst (app lf4 (Cons n lf8)) (app (##hole##) lf3)
Sketch conj109_term_sketch0 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj109_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj109_term_sketch2 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj109_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj111_sketch0 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj111_sketch1 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj111_sketch2 : @eq lst (app lf4 (##hole##)) (app (rev y) lf3)
Sketch conj111_sketch3 : @eq lst (app lf4 (Cons n Nil)) (app (##hole##) lf3)
Sketch conj111_sketch4 : @eq lst (app lf4 (Cons n (##hole##))) (app (rev y) lf3)
Sketch conj111_term_sketch0 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj111_term_sketch1 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj111_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj111_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj111_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj117_sketch0 : @eq lst (app (##hole##) lf5) (app (rev y) lf3)
Sketch conj117_sketch1 : @eq lst (app (app (rev y) lf6) lf5) (##hole##)
Sketch conj117_sketch2 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj117_sketch3 : @eq lst (app (app (##hole##) lf6) lf5) (app (##hole##) lf3)
Sketch conj117_term_sketch0 : @eq lst (app (rev y) lf6) (##hole##)
Sketch conj117_term_sketch1 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj117_term_sketch2 : @eq lst (app (app (rev y) lf6) lf5) (##hole##)
Sketch conj117_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj118_sketch0 : @eq lst (app (##hole##) lf5) (app (rev y) lf3)
Sketch conj118_sketch1 : @eq lst (app (app (rev y) (rev x)) lf5) (##hole##)
Sketch conj118_sketch2 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj118_sketch3 : @eq lst (app (app (##hole##) (rev x)) lf5) (app (##hole##) lf3)
Sketch conj118_sketch4 : @eq lst (app (app (rev y) (##hole##)) lf5) (app (rev y) lf3)
Sketch conj118_term_sketch0 : @eq lst (app (rev y) (rev x)) (##hole##)
Sketch conj118_term_sketch1 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj118_term_sketch2 : @eq lst (app (app (rev y) (rev x)) lf5) (##hole##)
Sketch conj118_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj118_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj125_sketch0 : @eq lst (app (##hole##) (Cons n lf8)) (app (rev y) lf3)
Sketch conj125_sketch1 : @eq lst (app (app (rev y) lf6) (Cons n lf8)) (##hole##)
Sketch conj125_sketch2 : @eq lst (app (app (rev y) lf6) (##hole##)) (app (rev y) lf3)
Sketch conj125_sketch3 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj125_sketch4 : @eq lst (app (app (##hole##) lf6) (Cons n lf8)) (app (##hole##) lf3)
Sketch conj125_term_sketch0 : @eq lst (app (rev y) lf6) (##hole##)
Sketch conj125_term_sketch1 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj125_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj125_term_sketch3 : @eq lst (app (app (rev y) lf6) (Cons n lf8)) (##hole##)
Sketch conj125_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj126_sketch0 : @eq lst (app (##hole##) (Cons n lf8)) (app (rev y) lf3)
Sketch conj126_sketch1 : @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (##hole##)
Sketch conj126_sketch2 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj126_sketch3 : @eq lst (app (app (rev y) (rev x)) (##hole##)) (app (rev y) lf3)
Sketch conj126_sketch4 : @eq lst (app (app (##hole##) (rev x)) (Cons n lf8)) (app (##hole##) lf3)
Sketch conj126_sketch5 : @eq lst (app (app (rev y) (##hole##)) (Cons n lf8)) (app (rev y) lf3)
Sketch conj126_term_sketch0 : @eq lst (app (rev y) (rev x)) (##hole##)
Sketch conj126_term_sketch1 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj126_term_sketch2 : @eq lst (app (app (rev y) (rev x)) (Cons n lf8)) (##hole##)
Sketch conj126_term_sketch3 : @eq lst (Cons n lf8) (##hole##)
Sketch conj126_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj126_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj127_sketch0 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj127_sketch1 : @eq lst (app (##hole##) (Cons n Nil)) (app (rev y) lf3)
Sketch conj127_sketch2 : @eq lst (app (app (rev y) lf6) (Cons n Nil)) (##hole##)
Sketch conj127_sketch3 : @eq lst (app (app (rev y) lf6) (##hole##)) (app (rev y) lf3)
Sketch conj127_sketch4 : @eq lst (app (app (##hole##) lf6) (Cons n Nil)) (app (##hole##) lf3)
Sketch conj127_sketch5 : @eq lst (app (app (rev y) lf6) (Cons n (##hole##))) (app (rev y) lf3)
Sketch conj127_term_sketch0 : @eq lst (app (app (rev y) lf6) (Cons n Nil)) (##hole##)
Sketch conj127_term_sketch1 : @eq lst (app (rev y) lf6) (##hole##)
Sketch conj127_term_sketch2 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj127_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj127_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj127_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj128_sketch0 : @eq lst (app (##hole##) (Cons n Nil)) (app (rev y) lf3)
Sketch conj128_sketch1 : @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (##hole##)
Sketch conj128_sketch2 : @eq lst (app (app (rev y) (rev x)) (##hole##)) (app (rev y) lf3)
Sketch conj128_sketch3 : @eq lst (##hole##) (app (rev y) lf3)
Sketch conj128_sketch4 : @eq lst (app (app (##hole##) (rev x)) (Cons n Nil)) (app (##hole##) lf3)
Sketch conj128_sketch5 : @eq lst (app (app (rev y) (rev x)) (Cons n (##hole##))) (app (rev y) lf3)
Sketch conj128_sketch6 : @eq lst (app (app (rev y) (##hole##)) (Cons n Nil)) (app (rev y) lf3)
Sketch conj128_term_sketch0 : @eq lst (app (rev y) (rev x)) (##hole##)
Sketch conj128_term_sketch1 : @eq lst (app (rev y) lf3) (##hole##)
Sketch conj128_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj128_term_sketch3 : @eq lst (app (app (rev y) (rev x)) (Cons n Nil)) (##hole##)
Sketch conj128_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj128_term_sketch5 : @eq lst Nil (##hole##)
Sketch conj128_term_sketch6 : @eq lst (rev x) (##hole##)
Sketch conj161_sketch0 : @eq lst lf2 (app lf7 (##hole##))
Sketch conj161_sketch1 : @eq lst lf2 (##hole##)
Sketch conj161_term_sketch0 : @eq lst (app lf6 lf5) (##hole##)
Sketch conj161_term_sketch1 : @eq lst (app lf7 (app lf6 lf5)) (##hole##)
Sketch conj162_sketch0 : @eq lst lf2 (app lf7 (##hole##))
Sketch conj162_sketch1 : @eq lst lf2 (##hole##)
Sketch conj162_sketch2 : @eq lst lf2 (app lf7 (app (##hole##) lf5))
Sketch conj162_term_sketch0 : @eq lst (app (rev x) lf5) (##hole##)
Sketch conj162_term_sketch1 : @eq lst (app lf7 (app (rev x) lf5)) (##hole##)
Sketch conj162_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj165_sketch0 : @eq lst (app lf4 lf5) (app lf7 (##hole##))
Sketch conj165_sketch1 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj165_sketch2 : @eq lst (##hole##) (app lf7 (app lf6 lf5))
Sketch conj165_term_sketch0 : @eq lst (app lf6 lf5) (##hole##)
Sketch conj165_term_sketch1 : @eq lst (app lf7 (app lf6 lf5)) (##hole##)
Sketch conj165_term_sketch2 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj166_sketch0 : @eq lst (app lf4 lf5) (app lf7 (##hole##))
Sketch conj166_sketch1 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj166_sketch2 : @eq lst (##hole##) (app lf7 (app (rev x) lf5))
Sketch conj166_sketch3 : @eq lst (app lf4 lf5) (app lf7 (app (##hole##) lf5))
Sketch conj166_term_sketch0 : @eq lst (app (rev x) lf5) (##hole##)
Sketch conj166_term_sketch1 : @eq lst (app lf7 (app (rev x) lf5)) (##hole##)
Sketch conj166_term_sketch2 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj166_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj169_sketch0 : @eq lst lf2 (app lf7 (##hole##))
Sketch conj169_sketch1 : @eq lst lf2 (app lf7 (app lf6 (##hole##)))
Sketch conj169_sketch2 : @eq lst lf2 (##hole##)
Sketch conj169_term_sketch0 : @eq lst (app lf6 (Cons n lf8)) (##hole##)
Sketch conj169_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj169_term_sketch2 : @eq lst (app lf7 (app lf6 (Cons n lf8))) (##hole##)
Sketch conj170_sketch0 : @eq lst lf2 (app lf7 (##hole##))
Sketch conj170_sketch1 : @eq lst lf2 (##hole##)
Sketch conj170_sketch2 : @eq lst lf2 (app lf7 (app (rev x) (##hole##)))
Sketch conj170_sketch3 : @eq lst lf2 (app lf7 (app (##hole##) (Cons n lf8)))
Sketch conj170_term_sketch0 : @eq lst (app (rev x) (Cons n lf8)) (##hole##)
Sketch conj170_term_sketch1 : @eq lst (app lf7 (app (rev x) (Cons n lf8))) (##hole##)
Sketch conj170_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj170_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj171_sketch0 : @eq lst lf2 (##hole##)
Sketch conj171_sketch1 : @eq lst lf2 (app lf7 (##hole##))
Sketch conj171_sketch2 : @eq lst lf2 (app lf7 (app lf6 (##hole##)))
Sketch conj171_sketch3 : @eq lst lf2 (app lf7 (app lf6 (Cons n (##hole##))))
Sketch conj171_term_sketch0 : @eq lst (app lf7 (app lf6 (Cons n Nil))) (##hole##)
Sketch conj171_term_sketch1 : @eq lst (app lf6 (Cons n Nil)) (##hole##)
Sketch conj171_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj171_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj172_sketch0 : @eq lst lf2 (app lf7 (##hole##))
Sketch conj172_sketch1 : @eq lst lf2 (app lf7 (app (rev x) (##hole##)))
Sketch conj172_sketch2 : @eq lst lf2 (##hole##)
Sketch conj172_sketch3 : @eq lst lf2 (app lf7 (app (rev x) (Cons n (##hole##))))
Sketch conj172_sketch4 : @eq lst lf2 (app lf7 (app (##hole##) (Cons n Nil)))
Sketch conj172_term_sketch0 : @eq lst (app (rev x) (Cons n Nil)) (##hole##)
Sketch conj172_term_sketch1 : @eq lst (Cons n Nil) (##hole##)
Sketch conj172_term_sketch2 : @eq lst (app lf7 (app (rev x) (Cons n Nil))) (##hole##)
Sketch conj172_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj172_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj173_sketch0 : @eq lst (app lf4 (Cons n lf8)) (app lf7 (##hole##))
Sketch conj173_sketch1 : @eq lst (app lf4 (##hole##)) (app lf7 (app lf6 (##hole##)))
Sketch conj173_sketch2 : @eq lst (##hole##) (app lf7 (app lf6 (Cons n lf8)))
Sketch conj173_sketch3 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj173_term_sketch0 : @eq lst (app lf6 (Cons n lf8)) (##hole##)
Sketch conj173_term_sketch1 : @eq lst (Cons n lf8) (##hole##)
Sketch conj173_term_sketch2 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj173_term_sketch3 : @eq lst (app lf7 (app lf6 (Cons n lf8))) (##hole##)
Sketch conj174_sketch0 : @eq lst (app lf4 (Cons n lf8)) (app lf7 (##hole##))
Sketch conj174_sketch1 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj174_sketch2 : @eq lst (app lf4 (##hole##)) (app lf7 (app (rev x) (##hole##)))
Sketch conj174_sketch3 : @eq lst (##hole##) (app lf7 (app (rev x) (Cons n lf8)))
Sketch conj174_sketch4 : @eq lst (app lf4 (Cons n lf8)) (app lf7 (app (##hole##) (Cons n lf8)))
Sketch conj174_term_sketch0 : @eq lst (app (rev x) (Cons n lf8)) (##hole##)
Sketch conj174_term_sketch1 : @eq lst (app lf7 (app (rev x) (Cons n lf8))) (##hole##)
Sketch conj174_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj174_term_sketch3 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj174_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj175_sketch0 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj175_sketch1 : @eq lst (app lf4 (Cons n Nil)) (app lf7 (##hole##))
Sketch conj175_sketch2 : @eq lst (##hole##) (app lf7 (app lf6 (Cons n Nil)))
Sketch conj175_sketch3 : @eq lst (app lf4 (##hole##)) (app lf7 (app lf6 (##hole##)))
Sketch conj175_sketch4 : @eq lst (app lf4 (Cons n (##hole##))) (app lf7 (app lf6 (Cons n (##hole##))))
Sketch conj175_term_sketch0 : @eq lst (app lf7 (app lf6 (Cons n Nil))) (##hole##)
Sketch conj175_term_sketch1 : @eq lst (app lf6 (Cons n Nil)) (##hole##)
Sketch conj175_term_sketch2 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj175_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj175_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_sketch0 : @eq lst (app lf4 (Cons n Nil)) (app lf7 (##hole##))
Sketch conj176_sketch1 : @eq lst (##hole##) (app lf7 (app (rev x) (Cons n Nil)))
Sketch conj176_sketch2 : @eq lst (app lf4 (##hole##)) (app lf7 (app (rev x) (##hole##)))
Sketch conj176_sketch3 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj176_sketch4 : @eq lst (app lf4 (Cons n (##hole##)))
  (app lf7 (app (rev x) (Cons n (##hole##))))
Sketch conj176_sketch5 : @eq lst (app lf4 (Cons n Nil)) (app lf7 (app (##hole##) (Cons n Nil)))
Sketch conj176_term_sketch0 : @eq lst (app (rev x) (Cons n Nil)) (##hole##)
Sketch conj176_term_sketch1 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj176_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj176_term_sketch3 : @eq lst (app lf7 (app (rev x) (Cons n Nil))) (##hole##)
Sketch conj176_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj176_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj225_sketch0 : @eq lst lf2 (##hole##)
Sketch conj225_sketch1 : @eq lst lf2 (app (rev y) (##hole##))
Sketch conj225_sketch2 : @eq lst lf2 (app (##hole##) (app lf6 lf5))
Sketch conj225_term_sketch0 : @eq lst (app (rev y) (app lf6 lf5)) (##hole##)
Sketch conj225_term_sketch1 : @eq lst (app lf6 lf5) (##hole##)
Sketch conj225_term_sketch2 : @eq lst (rev y) (##hole##)
Sketch conj226_sketch0 : @eq lst lf2 (app (rev y) (##hole##))
Sketch conj226_sketch1 : @eq lst lf2 (##hole##)
Sketch conj226_sketch2 : @eq lst lf2 (app (rev y) (app (##hole##) lf5))
Sketch conj226_sketch3 : @eq lst lf2 (app (##hole##) (app (rev x) lf5))
Sketch conj226_term_sketch0 : @eq lst (app (rev x) lf5) (##hole##)
Sketch conj226_term_sketch1 : @eq lst (app (rev y) (app (rev x) lf5)) (##hole##)
Sketch conj226_term_sketch2 : @eq lst (rev x) (##hole##)
Sketch conj226_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj229_sketch0 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj229_sketch1 : @eq lst (app lf4 lf5) (app (rev y) (##hole##))
Sketch conj229_sketch2 : @eq lst (##hole##) (app (rev y) (app lf6 lf5))
Sketch conj229_sketch3 : @eq lst (app lf4 lf5) (app (##hole##) (app lf6 lf5))
Sketch conj229_term_sketch0 : @eq lst (app (rev y) (app lf6 lf5)) (##hole##)
Sketch conj229_term_sketch1 : @eq lst (app lf6 lf5) (##hole##)
Sketch conj229_term_sketch2 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj229_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj230_sketch0 : @eq lst (app lf4 lf5) (app (rev y) (##hole##))
Sketch conj230_sketch1 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj230_sketch2 : @eq lst (##hole##) (app (rev y) (app (rev x) lf5))
Sketch conj230_sketch3 : @eq lst (app lf4 lf5) (app (rev y) (app (##hole##) lf5))
Sketch conj230_sketch4 : @eq lst (app lf4 lf5) (app (##hole##) (app (rev x) lf5))
Sketch conj230_term_sketch0 : @eq lst (app (rev x) lf5) (##hole##)
Sketch conj230_term_sketch1 : @eq lst (app (rev y) (app (rev x) lf5)) (##hole##)
Sketch conj230_term_sketch2 : @eq lst (app lf4 lf5) (##hole##)
Sketch conj230_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj230_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj233_sketch0 : @eq lst lf2 (app (rev y) (##hole##))
Sketch conj233_sketch1 : @eq lst lf2 (##hole##)
Sketch conj233_sketch2 : @eq lst lf2 (app (rev y) (app lf6 (##hole##)))
Sketch conj233_sketch3 : @eq lst lf2 (app (##hole##) (app lf6 (Cons n lf8)))
Sketch conj233_term_sketch0 : @eq lst (app lf6 (Cons n lf8)) (##hole##)
Sketch conj233_term_sketch1 : @eq lst (app (rev y) (app lf6 (Cons n lf8))) (##hole##)
Sketch conj233_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj233_term_sketch3 : @eq lst (rev y) (##hole##)
Sketch conj234_sketch0 : @eq lst lf2 (app (rev y) (##hole##))
Sketch conj234_sketch1 : @eq lst lf2 (##hole##)
Sketch conj234_sketch2 : @eq lst lf2 (app (rev y) (app (rev x) (##hole##)))
Sketch conj234_sketch3 : @eq lst lf2 (app (rev y) (app (##hole##) (Cons n lf8)))
Sketch conj234_sketch4 : @eq lst lf2 (app (##hole##) (app (rev x) (Cons n lf8)))
Sketch conj234_term_sketch0 : @eq lst (app (rev x) (Cons n lf8)) (##hole##)
Sketch conj234_term_sketch1 : @eq lst (app (rev y) (app (rev x) (Cons n lf8))) (##hole##)
Sketch conj234_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj234_term_sketch3 : @eq lst (rev x) (##hole##)
Sketch conj234_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj235_sketch0 : @eq lst lf2 (##hole##)
Sketch conj235_sketch1 : @eq lst lf2 (app (rev y) (##hole##))
Sketch conj235_sketch2 : @eq lst lf2 (app (rev y) (app lf6 (##hole##)))
Sketch conj235_sketch3 : @eq lst lf2 (app (rev y) (app lf6 (Cons n (##hole##))))
Sketch conj235_sketch4 : @eq lst lf2 (app (##hole##) (app lf6 (Cons n Nil)))
Sketch conj235_term_sketch0 : @eq lst (app (rev y) (app lf6 (Cons n Nil))) (##hole##)
Sketch conj235_term_sketch1 : @eq lst (app lf6 (Cons n Nil)) (##hole##)
Sketch conj235_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj235_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj235_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj236_sketch0 : @eq lst lf2 (app (rev y) (##hole##))
Sketch conj236_sketch1 : @eq lst lf2 (##hole##)
Sketch conj236_sketch2 : @eq lst lf2 (app (rev y) (app (rev x) (##hole##)))
Sketch conj236_sketch3 : @eq lst lf2 (app (rev y) (app (rev x) (Cons n (##hole##))))
Sketch conj236_sketch4 : @eq lst lf2 (app (rev y) (app (##hole##) (Cons n Nil)))
Sketch conj236_sketch5 : @eq lst lf2 (app (##hole##) (app (rev x) (Cons n Nil)))
Sketch conj236_term_sketch0 : @eq lst (app (rev x) (Cons n Nil)) (##hole##)
Sketch conj236_term_sketch1 : @eq lst (app (rev y) (app (rev x) (Cons n Nil))) (##hole##)
Sketch conj236_term_sketch2 : @eq lst (Cons n Nil) (##hole##)
Sketch conj236_term_sketch3 : @eq lst Nil (##hole##)
Sketch conj236_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj236_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj237_sketch0 : @eq lst (app lf4 (Cons n lf8)) (app (rev y) (##hole##))
Sketch conj237_sketch1 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj237_sketch2 : @eq lst (app lf4 (##hole##)) (app (rev y) (app lf6 (##hole##)))
Sketch conj237_sketch3 : @eq lst (##hole##) (app (rev y) (app lf6 (Cons n lf8)))
Sketch conj237_sketch4 : @eq lst (app lf4 (Cons n lf8)) (app (##hole##) (app lf6 (Cons n lf8)))
Sketch conj237_term_sketch0 : @eq lst (app lf6 (Cons n lf8)) (##hole##)
Sketch conj237_term_sketch1 : @eq lst (app (rev y) (app lf6 (Cons n lf8))) (##hole##)
Sketch conj237_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj237_term_sketch3 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj237_term_sketch4 : @eq lst (rev y) (##hole##)
Sketch conj238_sketch0 : @eq lst (app lf4 (Cons n lf8)) (app (rev y) (##hole##))
Sketch conj238_sketch1 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj238_sketch2 : @eq lst (app lf4 (##hole##)) (app (rev y) (app (rev x) (##hole##)))
Sketch conj238_sketch3 : @eq lst (##hole##) (app (rev y) (app (rev x) (Cons n lf8)))
Sketch conj238_sketch4 : @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (##hole##) (Cons n lf8)))
Sketch conj238_sketch5 : @eq lst (app lf4 (Cons n lf8)) (app (##hole##) (app (rev x) (Cons n lf8)))
Sketch conj238_term_sketch0 : @eq lst (app (rev x) (Cons n lf8)) (##hole##)
Sketch conj238_term_sketch1 : @eq lst (app (rev y) (app (rev x) (Cons n lf8))) (##hole##)
Sketch conj238_term_sketch2 : @eq lst (Cons n lf8) (##hole##)
Sketch conj238_term_sketch3 : @eq lst (app lf4 (Cons n lf8)) (##hole##)
Sketch conj238_term_sketch4 : @eq lst (rev x) (##hole##)
Sketch conj238_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj239_sketch0 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj239_sketch1 : @eq lst (app lf4 (Cons n Nil)) (app (rev y) (##hole##))
Sketch conj239_sketch2 : @eq lst (##hole##) (app (rev y) (app lf6 (Cons n Nil)))
Sketch conj239_sketch3 : @eq lst (app lf4 (##hole##)) (app (rev y) (app lf6 (##hole##)))
Sketch conj239_sketch4 : @eq lst (app lf4 (Cons n (##hole##)))
  (app (rev y) (app lf6 (Cons n (##hole##))))
Sketch conj239_sketch5 : @eq lst (app lf4 (Cons n Nil)) (app (##hole##) (app lf6 (Cons n Nil)))
Sketch conj239_term_sketch0 : @eq lst (app (rev y) (app lf6 (Cons n Nil))) (##hole##)
Sketch conj239_term_sketch1 : @eq lst (app lf6 (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch2 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj239_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj239_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj239_term_sketch5 : @eq lst (rev y) (##hole##)
Sketch conj240_sketch0 : @eq lst (app lf4 (Cons n Nil)) (app (rev y) (##hole##))
Sketch conj240_sketch1 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj240_sketch2 : @eq lst (##hole##) (app (rev y) (app (rev x) (Cons n Nil)))
Sketch conj240_sketch3 : @eq lst (app lf4 (##hole##)) (app (rev y) (app (rev x) (##hole##)))
Sketch conj240_sketch4 : @eq lst (app lf4 (Cons n (##hole##)))
  (app (rev y) (app (rev x) (Cons n (##hole##))))
Sketch conj240_sketch5 : @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (##hole##) (Cons n Nil)))
Sketch conj240_sketch6 : @eq lst (app lf4 (Cons n Nil)) (app (##hole##) (app (rev x) (Cons n Nil)))
Sketch conj240_term_sketch0 : @eq lst (app (rev x) (Cons n Nil)) (##hole##)
Sketch conj240_term_sketch1 : @eq lst (app (rev y) (app (rev x) (Cons n Nil))) (##hole##)
Sketch conj240_term_sketch2 : @eq lst (app lf4 (Cons n Nil)) (##hole##)
Sketch conj240_term_sketch3 : @eq lst (Cons n Nil) (##hole##)
Sketch conj240_term_sketch4 : @eq lst Nil (##hole##)
Sketch conj240_term_sketch5 : @eq lst (rev x) (##hole##)
Sketch conj240_term_sketch6 : @eq lst (rev y) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 4006 seconds
Problems per Sketch:
Sketch conj238_sketch4 --> Problem  synth_134
Sketch conj32_term_sketch4 --> Problem  synth_16
Sketch conj30_sketch0 --> Problem  synth_1
Sketch conj126_term_sketch3 --> Problem  synth_4
Sketch conj170_sketch1 --> Problem  synth_29
Sketch conj101_term_sketch2 --> Problem  synth_46
Sketch conj63_sketch4 --> Problem  synth_40
Sketch conj15_term_sketch2 --> Problem  synth_9
Sketch conj118_sketch3 --> Problem  synth_74
Sketch conj238_sketch0 --> Problem  synth_130
Sketch conj240_sketch6 --> Problem  synth_141
Sketch conj170_term_sketch3 --> Problem  synth_16
Sketch conj53_term_sketch2 --> Problem  synth_12
Sketch conj171_sketch0 --> Problem  synth_29
Sketch conj125_term_sketch3 --> Problem  synth_53
Sketch conj13_term_sketch1 --> Problem  synth_5
Sketch conj127_sketch3 --> Problem  synth_77
Sketch conj21_term_sketch1 --> Problem  synth_12
Sketch conj109_term_sketch1 --> Problem  synth_4
Sketch conj63_term_sketch0 --> Problem  synth_25
Sketch conj31_sketch0 --> Problem  synth_1
Sketch conj127_term_sketch0 --> Problem  synth_60
Sketch conj173_sketch0 --> Problem  synth_104
Sketch conj61_term_sketch2 --> Problem  synth_19
Sketch conj234_term_sketch2 --> Problem  synth_4
Sketch conj237_term_sketch4 --> Problem  synth_46
Sketch conj54_sketch1 --> Problem  synth_30
Sketch conj64_term_sketch5 --> Problem  synth_16
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj235_term_sketch3 --> Problem  synth_9
Sketch conj175_term_sketch0 --> Problem  synth_25
Sketch conj93_sketch2 --> Problem  synth_1
Sketch conj101_sketch0 --> Problem  synth_2
Sketch conj238_term_sketch0 --> Problem  synth_98
Sketch conj85_sketch0 --> Problem  synth_10
Sketch conj64_term_sketch1 --> Problem  synth_28
Sketch conj32_sketch3 --> Problem  synth_26
Sketch conj226_term_sketch3 --> Problem  synth_46
Sketch conj32_term_sketch3 --> Problem  synth_9
Sketch conj230_sketch3 --> Problem  synth_118
Sketch conj175_sketch0 --> Problem  synth_7
Sketch conj86_sketch0 --> Problem  synth_10
Sketch conj47_sketch2 --> Problem  synth_31
Sketch conj21_sketch0 --> Problem  synth_10
Sketch conj128_sketch6 --> Problem  synth_87
Sketch conj13_term_sketch0 --> Problem  synth_4
Sketch conj174_sketch2 --> Problem  synth_106
Sketch conj237_sketch0 --> Problem  synth_130
Sketch conj170_term_sketch0 --> Problem  synth_98
Sketch conj234_term_sketch1 --> Problem  synth_57
Sketch conj176_term_sketch0 --> Problem  synth_103
Sketch conj237_sketch1 --> Problem  synth_5
Sketch conj238_sketch2 --> Problem  synth_133
Sketch conj125_term_sketch4 --> Problem  synth_46
Sketch conj97_term_sketch1 --> Problem  synth_46
Sketch conj29_term_sketch1 --> Problem  synth_19
Sketch conj235_term_sketch2 --> Problem  synth_8
Sketch conj226_sketch2 --> Problem  synth_114
Sketch conj236_term_sketch4 --> Problem  synth_16
Sketch conj162_sketch0 --> Problem  synth_88
Sketch conj125_sketch2 --> Problem  synth_77
Sketch conj32_sketch2 --> Problem  synth_23
Sketch conj239_sketch3 --> Problem  synth_131
Sketch conj239_term_sketch3 --> Problem  synth_8
Sketch conj15_sketch1 --> Problem  synth_3
Sketch conj171_sketch2 --> Problem  synth_94
Sketch conj235_term_sketch4 --> Problem  synth_46
Sketch conj125_sketch3 --> Problem  synth_66
Sketch conj236_term_sketch1 --> Problem  synth_64
Sketch conj230_term_sketch3 --> Problem  synth_16
Sketch conj54_sketch3 --> Problem  synth_34
Sketch conj30_sketch3 --> Problem  synth_21
Sketch conj225_term_sketch2 --> Problem  synth_46
Sketch conj170_sketch3 --> Problem  synth_97
Sketch conj47_term_sketch1 --> Problem  synth_7
Sketch conj240_term_sketch1 --> Problem  synth_64
Sketch conj30_sketch1 --> Problem  synth_17
Sketch conj85_term_sketch0 --> Problem  synth_44
Sketch conj45_sketch0 --> Problem  synth_5
Sketch conj226_sketch1 --> Problem  synth_29
Sketch conj94_term_sketch3 --> Problem  synth_16
Sketch conj118_sketch2 --> Problem  synth_66
Sketch conj97_term_sketch0 --> Problem  synth_66
Sketch conj95_term_sketch3 --> Problem  synth_9
Sketch conj29_term_sketch0 --> Problem  synth_11
Sketch conj237_term_sketch1 --> Problem  synth_53
Sketch conj161_sketch1 --> Problem  synth_29
Sketch conj53_term_sketch1 --> Problem  synth_30
Sketch conj31_term_sketch0 --> Problem  synth_25
Sketch conj96_term_sketch4 --> Problem  synth_16
Sketch conj96_term_sketch5 --> Problem  synth_46
Sketch conj117_sketch3 --> Problem  synth_73
Sketch conj63_sketch1 --> Problem  synth_39
Sketch conj239_term_sketch0 --> Problem  synth_60
Sketch conj237_sketch2 --> Problem  synth_131
Sketch conj234_sketch1 --> Problem  synth_29
Sketch conj172_term_sketch3 --> Problem  synth_9
Sketch conj85_term_sketch2 --> Problem  synth_46
Sketch conj229_sketch0 --> Problem  synth_2
Sketch conj173_term_sketch3 --> Problem  synth_19
Sketch conj93_sketch1 --> Problem  synth_51
Sketch conj96_term_sketch3 --> Problem  synth_9
Sketch conj236_sketch0 --> Problem  synth_112
Sketch conj101_sketch2 --> Problem  synth_67
Sketch conj236_sketch3 --> Problem  synth_127
Sketch conj32_sketch4 --> Problem  synth_27
Sketch conj32_term_sketch1 --> Problem  synth_8
Sketch conj235_term_sketch0 --> Problem  synth_60
Sketch conj127_sketch0 --> Problem  synth_66
Sketch conj94_term_sketch1 --> Problem  synth_57
Sketch conj165_sketch2 --> Problem  synth_12
Sketch conj240_term_sketch5 --> Problem  synth_16
Sketch conj176_term_sketch4 --> Problem  synth_9
Sketch conj85_term_sketch1 --> Problem  synth_45
Sketch conj240_term_sketch0 --> Problem  synth_103
Sketch conj175_sketch1 --> Problem  synth_108
Sketch conj230_sketch0 --> Problem  synth_116
Sketch conj170_sketch2 --> Problem  synth_96
Sketch conj126_sketch2 --> Problem  synth_66
Sketch conj61_term_sketch0 --> Problem  synth_11
Sketch conj61_sketch0 --> Problem  synth_35
Sketch conj111_term_sketch1 --> Problem  synth_7
Sketch conj29_sketch2 --> Problem  synth_18
Sketch conj15_term_sketch0 --> Problem  synth_7
Sketch conj233_sketch3 --> Problem  synth_121
Sketch conj169_term_sketch1 --> Problem  synth_4
Sketch conj128_term_sketch2 --> Problem  synth_8
Sketch conj165_sketch1 --> Problem  synth_2
Sketch conj128_sketch3 --> Problem  synth_66
Sketch conj47_term_sketch3 --> Problem  synth_9
Sketch conj33_sketch0 --> Problem  synth_29
Sketch conj239_sketch4 --> Problem  synth_137
Sketch conj166_term_sketch0 --> Problem  synth_91
Sketch conj64_term_sketch0 --> Problem  synth_30
Sketch conj239_term_sketch1 --> Problem  synth_100
Sketch conj233_term_sketch0 --> Problem  synth_95
Sketch conj94_term_sketch4 --> Problem  synth_46
Sketch conj230_sketch1 --> Problem  synth_2
Sketch conj118_term_sketch4 --> Problem  synth_16
Sketch conj62_term_sketch3 --> Problem  synth_4
Sketch conj234_term_sketch4 --> Problem  synth_46
Sketch conj29_term_sketch2 --> Problem  synth_4
Sketch conj176_sketch3 --> Problem  synth_7
Sketch conj95_sketch4 --> Problem  synth_59
Sketch conj96_term_sketch0 --> Problem  synth_49
Sketch conj230_sketch2 --> Problem  synth_50
Sketch conj175_sketch3 --> Problem  synth_105
Sketch conj172_sketch1 --> Problem  synth_96
Sketch conj162_term_sketch1 --> Problem  synth_14
Sketch conj125_sketch0 --> Problem  synth_76
Sketch conj53_term_sketch0 --> Problem  synth_11
Sketch conj30_term_sketch3 --> Problem  synth_16
Sketch conj31_term_sketch3 --> Problem  synth_9
Sketch conj175_term_sketch3 --> Problem  synth_8
Sketch conj175_sketch4 --> Problem  synth_109
Sketch conj128_sketch2 --> Problem  synth_79
Sketch conj234_sketch0 --> Problem  synth_112
Sketch conj239_term_sketch2 --> Problem  synth_7
Sketch conj45_sketch1 --> Problem  synth_31
Sketch conj230_term_sketch4 --> Problem  synth_46
Sketch conj172_sketch4 --> Problem  synth_102
Sketch conj101_term_sketch1 --> Problem  synth_2
Sketch conj109_term_sketch3 --> Problem  synth_46
Sketch conj239_sketch1 --> Problem  synth_136
Sketch conj29_sketch0 --> Problem  synth_17
Sketch conj225_sketch1 --> Problem  synth_112
Sketch conj172_term_sketch0 --> Problem  synth_103
Sketch conj125_term_sketch1 --> Problem  synth_66
Sketch conj45_term_sketch0 --> Problem  synth_30
Sketch conj128_term_sketch3 --> Problem  synth_64
Sketch conj33_term_sketch0 --> Problem  synth_30
Sketch conj233_sketch1 --> Problem  synth_29
Sketch conj22_term_sketch1 --> Problem  synth_15
Sketch conj85_sketch2 --> Problem  synth_43
Sketch conj31_sketch2 --> Problem  synth_18
Sketch conj118_sketch4 --> Problem  synth_75
Sketch conj96_sketch2 --> Problem  synth_1
Sketch conj85_sketch1 --> Problem  synth_1
Sketch conj235_sketch3 --> Problem  synth_125
Sketch conj118_term_sketch1 --> Problem  synth_66
Sketch conj97_sketch0 --> Problem  synth_29
Sketch conj31_sketch3 --> Problem  synth_24
Sketch conj93_term_sketch2 --> Problem  synth_53
Sketch conj86_sketch2 --> Problem  synth_47
Sketch conj239_term_sketch5 --> Problem  synth_46
Sketch conj225_term_sketch1 --> Problem  synth_89
Sketch conj61_sketch2 --> Problem  synth_30
Sketch conj238_term_sketch3 --> Problem  synth_5
Sketch conj126_term_sketch5 --> Problem  synth_16
Sketch conj117_term_sketch2 --> Problem  synth_45
Sketch conj62_term_sketch2 --> Problem  synth_15
Sketch conj118_term_sketch0 --> Problem  synth_49
Sketch conj22_sketch0 --> Problem  synth_1
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj126_term_sketch1 --> Problem  synth_66
Sketch conj240_term_sketch4 --> Problem  synth_9
Sketch conj161_term_sketch0 --> Problem  synth_89
Sketch conj63_sketch2 --> Problem  synth_25
Sketch conj125_sketch1 --> Problem  synth_53
Sketch conj62_term_sketch4 --> Problem  synth_16
Sketch conj229_sketch1 --> Problem  synth_116
Sketch conj170_term_sketch2 --> Problem  synth_4
Sketch conj235_sketch2 --> Problem  synth_120
Sketch conj176_term_sketch1 --> Problem  synth_7
Sketch conj176_sketch5 --> Problem  synth_111
Sketch conj172_term_sketch2 --> Problem  synth_28
Sketch conj47_term_sketch0 --> Problem  synth_30
Sketch conj96_sketch5 --> Problem  synth_63
Sketch conj117_sketch2 --> Problem  synth_66
Sketch conj61_term_sketch3 --> Problem  synth_4
Sketch conj171_sketch3 --> Problem  synth_99
Sketch conj226_sketch0 --> Problem  synth_112
Sketch conj54_term_sketch0 --> Problem  synth_30
Sketch conj239_sketch5 --> Problem  synth_138
Sketch conj172_sketch0 --> Problem  synth_88
Sketch conj64_sketch2 --> Problem  synth_37
Sketch conj161_term_sketch1 --> Problem  synth_12
Sketch conj21_term_sketch0 --> Problem  synth_11
Sketch conj176_sketch1 --> Problem  synth_28
Sketch conj126_sketch3 --> Problem  synth_79
Sketch conj86_term_sketch3 --> Problem  synth_46
Sketch conj111_term_sketch4 --> Problem  synth_9
Sketch conj97_sketch1 --> Problem  synth_65
Sketch conj169_sketch0 --> Problem  synth_88
Sketch conj128_sketch1 --> Problem  synth_64
Sketch conj126_term_sketch0 --> Problem  synth_49
Sketch conj101_term_sketch0 --> Problem  synth_66
Sketch conj170_sketch0 --> Problem  synth_88
Sketch conj64_term_sketch2 --> Problem  synth_8
Sketch conj237_sketch3 --> Problem  synth_53
Sketch conj171_term_sketch1 --> Problem  synth_100
Sketch conj21_sketch1 --> Problem  synth_1
Sketch conj175_term_sketch2 --> Problem  synth_7
Sketch conj54_term_sketch2 --> Problem  synth_15
Sketch conj225_sketch2 --> Problem  synth_113
Sketch conj109_sketch0 --> Problem  synth_5
Sketch conj47_term_sketch2 --> Problem  synth_8
Sketch conj236_sketch5 --> Problem  synth_129
Sketch conj166_term_sketch3 --> Problem  synth_16
Sketch conj111_term_sketch2 --> Problem  synth_8
Sketch conj176_sketch2 --> Problem  synth_106
Sketch conj240_sketch5 --> Problem  synth_140
Sketch conj238_sketch3 --> Problem  synth_57
Sketch conj162_sketch2 --> Problem  synth_90
Sketch conj128_term_sketch1 --> Problem  synth_66
Sketch conj162_term_sketch2 --> Problem  synth_16
Sketch conj128_sketch5 --> Problem  synth_86
Sketch conj64_term_sketch3 --> Problem  synth_15
Sketch conj101_sketch1 --> Problem  synth_66
Sketch conj37_sketch1 --> Problem  synth_30
Sketch conj94_sketch2 --> Problem  synth_54
Sketch conj176_term_sketch3 --> Problem  synth_28
Sketch conj117_term_sketch1 --> Problem  synth_66
Sketch conj174_term_sketch0 --> Problem  synth_98
Sketch conj53_sketch1 --> Problem  synth_12
Sketch conj127_sketch5 --> Problem  synth_84
Sketch conj175_sketch2 --> Problem  synth_25
Sketch conj174_term_sketch4 --> Problem  synth_16
Sketch conj96_sketch4 --> Problem  synth_62
Sketch conj238_sketch1 --> Problem  synth_5
Sketch conj240_sketch0 --> Problem  synth_136
Sketch conj176_sketch0 --> Problem  synth_108
Sketch conj173_term_sketch2 --> Problem  synth_5
Sketch conj237_sketch4 --> Problem  synth_132
Sketch conj172_term_sketch1 --> Problem  synth_8
Sketch conj240_term_sketch6 --> Problem  synth_46
Sketch conj128_term_sketch5 --> Problem  synth_9
Sketch conj93_sketch0 --> Problem  synth_17
Sketch conj61_sketch1 --> Problem  synth_19
Sketch conj30_sketch2 --> Problem  synth_20
Sketch conj166_term_sketch2 --> Problem  synth_2
Sketch conj238_term_sketch2 --> Problem  synth_4
Sketch conj173_sketch2 --> Problem  synth_19
Sketch conj126_sketch4 --> Problem  synth_80
Sketch conj171_term_sketch2 --> Problem  synth_8
Sketch conj169_sketch2 --> Problem  synth_29
Sketch conj240_sketch3 --> Problem  synth_133
Sketch conj236_sketch1 --> Problem  synth_29
Sketch conj174_sketch4 --> Problem  synth_107
Sketch conj109_term_sketch2 --> Problem  synth_5
Sketch conj127_sketch4 --> Problem  synth_83
Sketch conj111_sketch3 --> Problem  synth_70
Sketch conj63_term_sketch4 --> Problem  synth_9
Sketch conj128_sketch0 --> Problem  synth_82
Sketch conj235_term_sketch1 --> Problem  synth_100
Sketch conj225_sketch0 --> Problem  synth_29
Sketch conj125_term_sketch2 --> Problem  synth_4
Sketch conj240_term_sketch3 --> Problem  synth_8
Sketch conj233_term_sketch1 --> Problem  synth_53
Sketch conj166_sketch0 --> Problem  synth_92
Sketch conj109_sketch1 --> Problem  synth_68
Sketch conj238_term_sketch4 --> Problem  synth_16
Sketch conj94_sketch1 --> Problem  synth_1
Sketch conj237_term_sketch0 --> Problem  synth_95
Sketch conj127_term_sketch5 --> Problem  synth_9
Sketch conj96_term_sketch2 --> Problem  synth_64
Sketch conj93_sketch3 --> Problem  synth_52
Sketch conj126_sketch0 --> Problem  synth_76
Sketch conj62_sketch0 --> Problem  synth_30
Sketch conj47_sketch3 --> Problem  synth_32
Sketch conj239_sketch0 --> Problem  synth_7
Sketch conj93_term_sketch0 --> Problem  synth_44
Sketch conj229_sketch2 --> Problem  synth_45
Sketch conj171_sketch1 --> Problem  synth_88
Sketch conj117_term_sketch3 --> Problem  synth_46
Sketch conj63_term_sketch1 --> Problem  synth_11
Sketch conj236_term_sketch0 --> Problem  synth_103
Sketch conj230_sketch4 --> Problem  synth_119
Sketch conj127_term_sketch4 --> Problem  synth_46
Sketch conj226_term_sketch0 --> Problem  synth_91
Sketch conj236_term_sketch2 --> Problem  synth_8
Sketch conj95_sketch1 --> Problem  synth_23
Sketch conj109_sketch2 --> Problem  synth_66
Sketch conj15_term_sketch1 --> Problem  synth_8
Sketch conj237_term_sketch2 --> Problem  synth_4
Sketch conj96_sketch1 --> Problem  synth_54
Sketch conj238_term_sketch1 --> Problem  synth_57
Sketch conj226_term_sketch1 --> Problem  synth_50
Sketch conj126_term_sketch2 --> Problem  synth_57
Sketch conj37_sketch0 --> Problem  synth_2
Sketch conj96_term_sketch1 --> Problem  synth_8
Sketch conj109_term_sketch0 --> Problem  synth_66
Sketch conj239_term_sketch4 --> Problem  synth_9
Sketch conj236_term_sketch5 --> Problem  synth_46
Sketch conj234_sketch4 --> Problem  synth_124
Sketch conj54_sketch2 --> Problem  synth_33
Sketch conj47_sketch1 --> Problem  synth_30
Sketch conj236_sketch2 --> Problem  synth_122
Sketch conj95_term_sketch4 --> Problem  synth_46
Sketch conj169_term_sketch2 --> Problem  synth_19
Sketch conj64_term_sketch4 --> Problem  synth_9
Sketch conj64_sketch1 --> Problem  synth_30
Sketch conj127_term_sketch3 --> Problem  synth_8
Sketch conj62_term_sketch0 --> Problem  synth_22
Sketch conj166_sketch2 --> Problem  synth_14
Sketch conj237_term_sketch3 --> Problem  synth_5
Sketch conj53_sketch2 --> Problem  synth_30
Sketch conj64_sketch4 --> Problem  synth_41
Sketch conj171_term_sketch3 --> Problem  synth_9
Sketch conj109_sketch3 --> Problem  synth_69
Sketch conj172_term_sketch4 --> Problem  synth_16
Sketch conj62_term_sketch1 --> Problem  synth_30
Sketch conj15_sketch2 --> Problem  synth_6
Sketch conj54_sketch0 --> Problem  synth_14
Sketch conj22_term_sketch0 --> Problem  synth_14
Sketch conj176_term_sketch2 --> Problem  synth_8
Sketch conj173_sketch1 --> Problem  synth_105
Sketch conj118_term_sketch3 --> Problem  synth_46
Sketch conj118_term_sketch2 --> Problem  synth_50
Sketch conj128_term_sketch4 --> Problem  synth_46
Sketch conj62_sketch2 --> Problem  synth_35
Sketch conj174_term_sketch3 --> Problem  synth_5
Sketch conj174_term_sketch2 --> Problem  synth_4
Sketch conj174_term_sketch1 --> Problem  synth_22
Sketch conj64_sketch5 --> Problem  synth_42
Sketch conj166_term_sketch1 --> Problem  synth_14
Sketch conj165_term_sketch1 --> Problem  synth_12
Sketch conj13_sketch1 --> Problem  synth_1
Sketch conj127_term_sketch2 --> Problem  synth_66
Sketch conj233_sketch2 --> Problem  synth_120
Sketch conj111_sketch1 --> Problem  synth_66
Sketch conj236_sketch4 --> Problem  synth_128
Sketch conj229_term_sketch3 --> Problem  synth_46
Sketch conj238_sketch5 --> Problem  synth_135
Sketch conj239_sketch2 --> Problem  synth_60
Sketch conj234_term_sketch3 --> Problem  synth_16
Sketch conj226_sketch3 --> Problem  synth_115
Sketch conj63_term_sketch2 --> Problem  synth_30
Sketch conj173_term_sketch1 --> Problem  synth_4
Sketch conj235_sketch0 --> Problem  synth_29
Sketch conj45_term_sketch2 --> Problem  synth_5
Sketch conj117_sketch0 --> Problem  synth_72
Sketch conj171_term_sketch0 --> Problem  synth_25
Sketch conj172_sketch2 --> Problem  synth_29
Sketch conj94_sketch4 --> Problem  synth_56
Sketch conj111_term_sketch3 --> Problem  synth_46
Sketch conj62_sketch1 --> Problem  synth_22
Sketch conj240_term_sketch2 --> Problem  synth_7
Sketch conj173_term_sketch0 --> Problem  synth_95
Sketch conj229_sketch3 --> Problem  synth_117
Sketch conj111_term_sketch0 --> Problem  synth_66
Sketch conj22_sketch1 --> Problem  synth_10
Sketch conj236_term_sketch3 --> Problem  synth_9
Sketch conj233_term_sketch3 --> Problem  synth_46
Sketch conj31_term_sketch1 --> Problem  synth_11
Sketch conj126_sketch1 --> Problem  synth_57
Sketch conj94_term_sketch2 --> Problem  synth_4
Sketch conj127_sketch2 --> Problem  synth_60
Sketch conj234_term_sketch0 --> Problem  synth_98
Sketch conj32_sketch0 --> Problem  synth_1
Sketch conj111_sketch2 --> Problem  synth_68
Sketch conj54_term_sketch3 --> Problem  synth_16
Sketch conj128_term_sketch6 --> Problem  synth_16
Sketch conj94_sketch3 --> Problem  synth_55
Sketch conj93_term_sketch3 --> Problem  synth_46
Sketch conj62_sketch4 --> Problem  synth_38
Sketch conj240_sketch1 --> Problem  synth_7
Sketch conj233_term_sketch2 --> Problem  synth_4
Sketch conj125_term_sketch0 --> Problem  synth_44
Sketch conj235_sketch1 --> Problem  synth_112
Sketch conj166_sketch1 --> Problem  synth_2
Sketch conj165_sketch0 --> Problem  synth_92
Sketch conj118_sketch1 --> Problem  synth_50
Sketch conj240_sketch4 --> Problem  synth_139
Sketch conj94_sketch0 --> Problem  synth_17
Sketch conj162_sketch1 --> Problem  synth_29
Sketch conj128_sketch4 --> Problem  synth_85
Sketch conj30_term_sketch1 --> Problem  synth_15
Sketch conj174_sketch3 --> Problem  synth_22
Sketch conj95_sketch3 --> Problem  synth_58
Sketch conj86_sketch1 --> Problem  synth_1
Sketch conj238_term_sketch5 --> Problem  synth_46
Sketch conj176_term_sketch5 --> Problem  synth_16
Sketch conj170_term_sketch1 --> Problem  synth_22
Sketch conj30_term_sketch0 --> Problem  synth_22
Sketch conj229_term_sketch0 --> Problem  synth_45
Sketch conj126_term_sketch4 --> Problem  synth_46
Sketch conj53_sketch0 --> Problem  synth_33
Sketch conj62_sketch3 --> Problem  synth_37
Sketch conj32_term_sketch2 --> Problem  synth_15
Sketch conj230_term_sketch2 --> Problem  synth_2
Sketch conj29_sketch1 --> Problem  synth_1
Sketch conj226_term_sketch2 --> Problem  synth_16
Sketch conj86_term_sketch1 --> Problem  synth_50
Sketch conj126_sketch5 --> Problem  synth_81
Sketch conj32_sketch1 --> Problem  synth_20
Sketch conj234_sketch3 --> Problem  synth_123
Sketch conj161_sketch0 --> Problem  synth_88
Sketch conj45_sketch2 --> Problem  synth_30
Sketch conj118_sketch0 --> Problem  synth_72
Sketch conj94_term_sketch0 --> Problem  synth_49
Sketch conj175_term_sketch4 --> Problem  synth_9
Sketch conj165_term_sketch0 --> Problem  synth_89
Sketch conj22_term_sketch2 --> Problem  synth_16
Sketch conj96_sketch3 --> Problem  synth_61
Sketch conj61_sketch3 --> Problem  synth_36
Sketch conj235_sketch4 --> Problem  synth_126
Sketch conj166_sketch3 --> Problem  synth_93
Sketch conj230_term_sketch1 --> Problem  synth_50
Sketch conj125_sketch4 --> Problem  synth_78
Sketch conj234_sketch2 --> Problem  synth_122
Sketch conj37_term_sketch0 --> Problem  synth_30
Sketch conj240_sketch2 --> Problem  synth_64
Sketch conj229_term_sketch2 --> Problem  synth_2
Sketch conj176_sketch4 --> Problem  synth_110
Sketch conj128_term_sketch0 --> Problem  synth_49
Sketch conj96_sketch0 --> Problem  synth_23
Sketch conj225_term_sketch0 --> Problem  synth_45
Sketch conj95_term_sketch1 --> Problem  synth_44
Sketch conj95_term_sketch0 --> Problem  synth_60
Sketch conj63_term_sketch3 --> Problem  synth_8
Sketch conj63_sketch0 --> Problem  synth_30
Sketch conj63_sketch3 --> Problem  synth_36
Sketch conj111_sketch4 --> Problem  synth_71
Sketch conj169_sketch1 --> Problem  synth_94
Sketch conj117_term_sketch0 --> Problem  synth_44
Sketch conj117_sketch1 --> Problem  synth_45
Sketch conj86_term_sketch0 --> Problem  synth_49
Sketch conj127_sketch1 --> Problem  synth_82
Sketch conj86_term_sketch2 --> Problem  synth_16
Sketch conj32_term_sketch0 --> Problem  synth_28
Sketch conj64_sketch3 --> Problem  synth_39
Sketch conj30_term_sketch2 --> Problem  synth_4
Sketch conj86_sketch3 --> Problem  synth_48
Sketch conj22_sketch2 --> Problem  synth_13
Sketch conj229_term_sketch1 --> Problem  synth_89
Sketch conj93_term_sketch1 --> Problem  synth_4
Sketch conj111_sketch0 --> Problem  synth_7
Sketch conj15_sketch0 --> Problem  synth_1
Sketch conj233_sketch0 --> Problem  synth_112
Sketch conj175_term_sketch1 --> Problem  synth_100
Sketch conj95_sketch2 --> Problem  synth_51
Sketch conj61_term_sketch1 --> Problem  synth_30
Sketch conj54_term_sketch1 --> Problem  synth_14
Sketch conj230_term_sketch0 --> Problem  synth_91
Sketch conj37_term_sketch1 --> Problem  synth_2
Sketch conj45_term_sketch1 --> Problem  synth_4
Sketch conj127_term_sketch1 --> Problem  synth_44
Sketch conj13_sketch0 --> Problem  synth_3
Sketch conj31_sketch1 --> Problem  synth_23
Sketch conj172_sketch3 --> Problem  synth_101
Sketch conj165_term_sketch2 --> Problem  synth_2
Sketch conj64_sketch0 --> Problem  synth_28
Sketch conj31_term_sketch2 --> Problem  synth_8
Sketch conj95_term_sketch2 --> Problem  synth_8
Sketch conj95_sketch0 --> Problem  synth_1
Sketch conj169_term_sketch0 --> Problem  synth_95
Sketch conj174_sketch0 --> Problem  synth_104
Sketch conj162_term_sketch0 --> Problem  synth_91
Sketch conj174_sketch1 --> Problem  synth_5
Sketch conj173_sketch3 --> Problem  synth_5
Sketch conj47_sketch0 --> Problem  synth_7


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 5680 seconds

Problem: synth_63

Problem: synth_106

Problem: synth_91
 rev (app (rev lf5) x)
 app (rev x) (rev (rev lf5))
 app (rev x) (app lf5 Nil)
 app (rev x) (rev lf5)
 rev (app lf5 x)
 app (rev x) lf5

Problem: synth_67

Problem: synth_77

Problem: synth_64
 app (rev y) (app (rev (app x Nil)) (Cons n Nil))
 app (app (rev y) (rev x)) (Cons n Nil)
 app (rev (app x (rev (rev y)))) (Cons n Nil)
 app (rev (app x (app y Nil))) (Cons n Nil)
 app (rev y) (app (rev x) (Cons n Nil))
 app (rev (app x y)) (Cons n Nil)

Problem: synth_11
 app (rev (rev lf7)) lf6
 app (app lf7 Nil) lf6
 app (app lf7 lf6) Nil
 app lf7 (rev (rev lf6))
 app lf7 (app lf6 Nil)
 app lf7 lf6

Problem: synth_129

Problem: synth_46
 app (rev (app y Nil)) Nil
 app (app (rev y) Nil) Nil
 rev (rev (rev y))
 rev (app y Nil)
 app (rev y) Nil
 rev y

Problem: synth_101
 Nil

Problem: synth_100
 app (rev (app (rev lf6) Nil)) (Cons n Nil)
 app (app lf6 (Cons n Nil)) Nil
 app (app (rev (rev lf6)) (Cons n Nil)) Nil
 app (app lf6 Nil) (Cons n Nil)
 app lf6 (Cons n Nil)
 app (rev (rev lf6)) (Cons n Nil)

Problem: synth_59

Problem: synth_139
 Nil

Problem: synth_116

Problem: synth_31

Problem: synth_8
 Cons n Nil

Problem: synth_34

Problem: synth_58
 Nil

Problem: synth_53
 app (app lf8 (rev y)) (app lf6 (Cons n Nil))
 app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil))
 app (rev y) (app lf6 (Cons n (rev lf8)))
 app (rev y) (app lf6 (Cons n lf8))
 app (rev y) (app lf6 (Cons n Nil))
 app (rev y) (app (rev (rev lf6)) (Cons n Nil))

Problem: synth_123

Problem: synth_125
 Nil

Problem: synth_2
 app (app lf4 lf5) Nil
 app lf4 (rev (rev lf5))
 app lf4 (app lf5 Nil)
 rev (app lf5 (rev lf4))
 app lf4 (rev lf5)
 app lf4 lf5

Problem: synth_95
 app (rev (app lf8 (rev lf6))) (Cons n Nil)
 rev (app lf8 (Cons n (rev lf6)))
 app lf6 (Cons n (rev lf8))
 app lf6 (Cons n lf8)
 app lf6 (Cons n Nil)
 app (rev (rev lf6)) (Cons n Nil)

Problem: synth_130

Problem: synth_127
 Nil

Problem: synth_72

Problem: synth_111

Problem: synth_56

Problem: synth_135

Problem: synth_105

Problem: synth_65

Problem: synth_23

Problem: synth_140

Problem: synth_88

Problem: synth_19
 app (app lf7 lf6) (Cons n lf8)
 app (app lf7 lf6) (Cons n Nil)
 app lf7 (app lf6 (Cons n (rev lf8)))
 app lf7 (app lf6 (Cons n lf8))
 app lf7 (app lf6 (Cons n Nil))
 app lf7 (app (rev (rev lf6)) (Cons n Nil))

Problem: synth_131

Problem: synth_132

Problem: synth_24
 Nil

Problem: synth_97

Problem: synth_48

Problem: synth_28
 app (rev (rev (app lf7 (rev x)))) (Cons n Nil)
 app (rev (rev lf7)) (app (rev x) (Cons n Nil))
 app (app lf7 Nil) (app (rev x) (Cons n Nil))
 app (app lf7 (rev x)) (Cons n Nil)
 app lf7 (app (rev x) (Cons n Nil))
 app (rev (app x (rev lf7))) (Cons n Nil)

Problem: synth_45
 app (app (rev y) (app lf6 lf5)) Nil
 app (rev y) (app lf6 (rev (rev lf5)))
 app (rev y) (app lf6 (app lf5 Nil))
 app (rev y) (rev (app lf5 (rev lf6)))
 app (rev y) (app lf6 (rev lf5))
 app (rev y) (app lf6 lf5)

Problem: synth_26
 Nil

Problem: synth_70

Problem: synth_122

Problem: synth_15
 app (rev (rev lf7)) (rev x)
 app (app lf7 Nil) (rev x)
 rev (rev (app lf7 (rev x)))
 app (app lf7 (rev x)) Nil
 rev (app x (rev lf7))
 app lf7 (rev x)

Problem: synth_14
 app lf7 (rev (app lf5 x))
 app lf7 (app (rev x) lf5)
 app (app lf7 (rev x)) (rev lf5)
 rev (app (rev lf5) (app x (rev lf7)))
 rev (app lf5 (app x (rev lf7)))
 app (app lf7 (rev x)) lf5

Problem: synth_83

Problem: synth_12
 app lf7 (app lf6 (app lf5 Nil))
 app lf7 (rev (app lf5 (rev lf6)))
 app (app lf7 lf6) (rev lf5)
 app (app lf7 lf6) lf5
 app lf7 (app lf6 (rev lf5))
 app lf7 (app lf6 lf5)

Problem: synth_85

Problem: synth_62

Problem: synth_50
 app (rev y) (app (rev x) (app lf5 Nil))
 app (rev y) (app (rev x) (rev lf5))
 app (rev y) (rev (app lf5 x))
 app (rev y) (app (rev x) lf5)
 rev (app (rev lf5) (app x y))
 rev (app lf5 (app x y))

Problem: synth_119

Problem: synth_7
 app (rev (app (rev lf4) Nil)) (Cons n Nil)
 app (app lf4 (Cons n Nil)) Nil
 app (app (rev (rev lf4)) (Cons n Nil)) Nil
 app (app lf4 Nil) (Cons n Nil)
 app lf4 (Cons n Nil)
 app (rev (rev lf4)) (Cons n Nil)

Problem: synth_128

Problem: synth_61
 Nil

Problem: synth_141

Problem: synth_27

Problem: synth_136

Problem: synth_33

Problem: synth_47

Problem: synth_3

Problem: synth_121

Problem: synth_124

Problem: synth_99
 Nil

Problem: synth_43

Problem: synth_109
 Nil

Problem: synth_68

Problem: synth_96

Problem: synth_54

Problem: synth_39

Problem: synth_98
 rev (app lf8 (Cons n x))
 app (rev (app x lf8)) (Cons n Nil)
 app (rev (app x Nil)) (Cons n Nil)
 app (rev x) (Cons n (rev lf8))
 app (rev x) (Cons n lf8)
 app (rev x) (Cons n Nil)

Problem: synth_118

Problem: synth_66
 rev (app (rev lf3) (rev (rev y)))
 rev (app (rev lf3) (app y Nil))
 rev (app (rev lf3) y)
 app (rev y) (rev (rev lf3))
 app (rev y) (app lf3 Nil)
 app (rev y) lf3

Problem: synth_57
 app (app lf8 (rev y)) (app (rev x) (Cons n lf8))
 app (app lf8 (rev y)) (app (rev x) (Cons n Nil))
 app (rev y) (app (rev x) (Cons n (rev lf8)))
 app (rev y) (app (rev x) (Cons n lf8))
 app (rev y) (app (rev x) (Cons n Nil))
 app (rev (app x y)) (Cons n Nil)

Problem: synth_5
 app (rev (app lf8 (rev lf4))) (Cons n Nil)
 rev (app lf8 (Cons n (rev lf4)))
 app lf4 (Cons n (rev lf8))
 app lf4 (Cons n lf8)
 app lf4 (Cons n Nil)
 app (rev (rev lf4)) (Cons n Nil)

Problem: synth_37

Problem: synth_22
 app (app lf7 (rev x)) (Cons n lf8)
 app (app lf7 (rev x)) (Cons n Nil)
 app lf7 (app (rev x) (Cons n (rev lf8)))
 app lf7 (app (rev x) (Cons n lf8))
 app lf7 (app (rev x) (Cons n Nil))
 app (rev (app x (rev lf7))) (Cons n Nil)

Problem: synth_18

Problem: synth_114

Problem: synth_21

Problem: synth_41
 Nil

Problem: synth_49
 app (rev y) (rev (app x Nil))
 app (rev y) (app (rev x) Nil)
 rev (app x (rev (rev y)))
 rev (app x (app y Nil))
 app (rev y) (rev x)
 rev (app x y)

Problem: synth_75

Problem: synth_25
 app (app lf7 Nil) (app lf6 (Cons n Nil))
 app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))
 app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))
 app (app lf7 lf6) (Cons n Nil)
 app lf7 (app lf6 (Cons n Nil))
 app lf7 (app (rev (rev lf6)) (Cons n Nil))

Problem: synth_13

Problem: synth_6
 Nil

Problem: synth_138

Problem: synth_4
 app lf8 (Cons n Nil)
 app (rev (rev lf8)) (Cons n Nil)
 app (rev lf8) (Cons n Nil)
 Cons n (rev lf8)
 Cons n lf8
 Cons n Nil

Problem: synth_38

Problem: synth_104

Problem: synth_102

Problem: synth_113

Problem: synth_10

Problem: synth_92

Problem: synth_32
 Nil

Problem: synth_51

Problem: synth_112

Problem: synth_35

Problem: synth_115

Problem: synth_134

Problem: synth_110
 Nil

Problem: synth_90

Problem: synth_73

Problem: synth_17

Problem: synth_29
 rev (app (rev lf2) Nil)
 app (rev (rev lf2)) Nil
 app (app lf2 Nil) Nil
 rev (rev lf2)
 app lf2 Nil
 lf2

Problem: synth_76

Problem: synth_117

Problem: synth_9
 Nil

Problem: synth_30
 app (rev (rev lf7)) lf3
 app (app lf7 Nil) lf3
 app (app lf7 lf3) Nil
 app lf7 (rev (rev lf3))
 app lf7 (app lf3 Nil)
 app lf7 lf3

Problem: synth_81

Problem: synth_1
 rev (app (rev lf1) Nil)
 app (rev (rev lf1)) Nil
 app (app lf1 Nil) Nil
 rev (rev lf1)
 app lf1 Nil
 lf1

Problem: synth_137
 Nil

Problem: synth_69

Problem: synth_86
 Nil

Problem: synth_55

Problem: synth_107

Problem: synth_71
 Nil

Problem: synth_120

Problem: synth_103
 app (app (rev x) Nil) (Cons n Nil)
 rev (rev (app (rev x) (Cons n Nil)))
 app (app (rev x) (Cons n Nil)) Nil
 app (rev (rev (rev x))) (Cons n Nil)
 app (rev (app x Nil)) (Cons n Nil)
 app (rev x) (Cons n Nil)

Problem: synth_87

Problem: synth_79

Problem: synth_126

Problem: synth_74

Problem: synth_84
 Nil

Problem: synth_20

Problem: synth_94

Problem: synth_108

Problem: synth_133

Problem: synth_42

Problem: synth_16
 app (rev (app x Nil)) Nil
 app (app (rev x) Nil) Nil
 rev (rev (rev x))
 rev (app x Nil)
 app (rev x) Nil
 rev x

Problem: synth_93

Problem: synth_40
 Nil

Problem: synth_80

Problem: synth_89
 app (app lf6 lf5) Nil
 app lf6 (rev (rev lf5))
 app lf6 (app lf5 Nil)
 rev (app lf5 (rev lf6))
 app lf6 (rev lf5)
 app lf6 lf5

Problem: synth_52

Problem: synth_44
 rev (app (rev lf6) (rev (rev y)))
 rev (app (rev lf6) (app y Nil))
 rev (app (rev lf6) y)
 app (rev y) (rev (rev lf6))
 app (rev y) (app lf6 Nil)
 app (rev y) lf6

Problem: synth_60
 app (app (rev y) lf6) (Cons n Nil)
 app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)
 app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)
 app (rev (app (rev lf6) y)) (Cons n Nil)
 app (rev y) (app lf6 (Cons n Nil))
 app (rev y) (app (rev (rev lf6)) (Cons n Nil))

Problem: synth_36

Problem: synth_82

Problem: synth_78

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 5682 seconds
Lemmas:
Lemma candidate_1: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_2: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_3: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_4: forall (n : nat) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_5: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_6: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma candidate_7: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_8: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_9: forall (lf7 : lst) (n : nat) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_10: forall (lf7 : lst) (n : nat) (lf6 : lst) (lf8 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_11: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_12: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_13: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_14: forall (n : nat) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_15: forall (n : nat) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_17: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_18: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_19: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_20: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_21: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_22: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_23: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_24: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_25: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_26: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_27: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_28: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_29: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_30: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_31: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_32: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_33: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_34: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_35: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_36: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_37: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_38: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_39: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_40: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_41: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_42: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_43: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_44: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_45: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_46: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_47: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_48: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_49: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_50: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_51: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_52: forall (n : nat) (lf1 : lst) (lf4 : lst), @eq lst (app lf4 (Cons n (Nil))) lf1.
Lemma candidate_53: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_54: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_55: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_56: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_57: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_58: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_59: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_60: @eq lst Nil (Nil).
Lemma candidate_61: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_62: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_63: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_64: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_65: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_66: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_67: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_68: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_69: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_70: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_71: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_72: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_73: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_74: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (rev (app lf5 (rev lf6)))).
Lemma candidate_75: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app (app lf7 lf6) (rev lf5)).
Lemma candidate_76: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app (app lf7 lf6) lf5).
Lemma candidate_77: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (rev lf5))).
Lemma candidate_78: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_79: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_80: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_81: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_82: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_83: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_84: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_85: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (rev (app lf5 x))).
Lemma candidate_86: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_87: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app (app lf7 (rev x)) (rev lf5)).
Lemma candidate_88: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_89: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app lf5 (app x (rev lf7)))).
Lemma candidate_90: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app (app lf7 (rev x)) lf5).
Lemma candidate_91: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_92: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_93: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_94: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_95: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_96: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app lf7 (rev x)).
Lemma candidate_97: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_98: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_99: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_100: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_101: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_102: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_103: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_104: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_105: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_106: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_107: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_108: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_109: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_110: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_111: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_112: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_113: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_114: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_115: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_116: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_117: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8))   (app lf7 (app lf6 (Cons n (rev lf8)))).
Lemma candidate_118: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_119: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_120: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_121: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_122: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_123: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_124: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_125: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_126: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_127: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_128: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_129: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_130: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_131: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_132: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_133: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_134: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_135: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_136: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_137: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_138: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_139: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_140: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_141: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_142: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_143: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_144: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app lf7 (rev x)).
Lemma candidate_145: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_146: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_147: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_148: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_149: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_150: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_151: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_152: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_153: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_154: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_155: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_156: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_157: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_158: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_159: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_160: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_161: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_162: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_163: forall (n : nat) (lf7 : lst) (lf1 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n (Nil))) lf1.
Lemma candidate_164: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_165: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_166: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_167: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_168: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_169: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_170: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_171: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_172: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_173: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_174: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_175: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_176: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_177: @eq lst Nil (Nil).
Lemma candidate_178: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_179: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_180: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_181: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_182: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_183: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_184: forall (n : nat) (lf7 : lst) (lf1 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n (Nil))) lf1.
Lemma candidate_185: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_186: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_187: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_188: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_189: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_190: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_191: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_192: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_193: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_194: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_195: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_196: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_197: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app lf7 (rev x)).
Lemma candidate_198: @eq lst Nil (Nil).
Lemma candidate_199: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_200: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_201: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_202: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_203: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_204: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_205: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_206: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_207: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_208: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_209: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_210: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_211: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_212: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_213: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_214: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_215: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_216: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_217: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_218: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_219: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_220: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_221: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_222: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_223: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_224: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_225: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_226: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_227: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_228: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_229: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_230: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_231: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_232: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_233: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_234: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_235: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_236: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_237: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_238: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_239: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_240: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_241: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_242: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_243: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_244: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_245: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_246: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_247: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_248: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_249: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_250: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_251: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_252: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_253: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_254: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_255: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_256: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_257: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_258: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_259: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_260: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_261: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_262: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_263: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_264: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_265: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_266: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_267: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_268: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_269: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_270: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_271: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_272: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_273: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_274: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_275: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_276: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_277: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_278: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_279: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_280: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_281: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_282: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_283: forall (lf3 : lst) (lf7 : lst) (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n (Nil))) (app lf7 lf3).
Lemma candidate_284: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_285: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_286: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_287: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_288: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_289: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_290: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_291: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_292: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_293: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_294: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_295: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_296: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_297: @eq lst Nil (Nil).
Lemma candidate_298: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_299: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (rev (app lf5 (rev lf6)))).
Lemma candidate_300: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app (app lf7 lf6) (rev lf5)).
Lemma candidate_301: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app (app lf7 lf6) lf5).
Lemma candidate_302: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (rev lf5))).
Lemma candidate_303: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_304: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_305: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_306: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_307: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_308: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_309: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_310: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_311: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_312: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_313: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_314: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_315: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_316: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_317: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_318: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_319: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_320: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_321: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_322: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_323: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (rev (app lf5 (rev lf6)))).
Lemma candidate_324: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app (app lf7 lf6) (rev lf5)).
Lemma candidate_325: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app (app lf7 lf6) lf5).
Lemma candidate_326: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (rev lf5))).
Lemma candidate_327: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_328: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (rev (app lf5 x))).
Lemma candidate_329: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_330: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app (app lf7 (rev x)) (rev lf5)).
Lemma candidate_331: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_332: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app lf5 (app x (rev lf7)))).
Lemma candidate_333: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app (app lf7 (rev x)) lf5).
Lemma candidate_334: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_335: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_336: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_337: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_338: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_339: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_340: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_341: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_342: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_343: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_344: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_345: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_346: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (rev (app lf5 x))).
Lemma candidate_347: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_348: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app (app lf7 (rev x)) (rev lf5)).
Lemma candidate_349: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_350: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app lf5 (app x (rev lf7)))).
Lemma candidate_351: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app (app lf7 (rev x)) lf5).
Lemma candidate_352: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_353: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_354: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_355: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_356: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_357: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app lf7 (rev x)).
Lemma candidate_358: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_359: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_360: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_361: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_362: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_363: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_364: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_365: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_366: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8))   (app lf7 (app lf6 (Cons n (rev lf8)))).
Lemma candidate_367: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_368: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_369: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_370: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_371: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_372: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_373: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_374: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_375: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_376: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_377: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_378: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_379: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_380: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_381: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_382: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_383: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_384: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_385: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_386: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_387: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_388: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_389: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_390: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8))   (app lf7 (app lf6 (Cons n (rev lf8)))).
Lemma candidate_391: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_392: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_393: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_394: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_395: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_396: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_397: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_398: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_399: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_400: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_401: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_402: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_403: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_404: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_405: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_406: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_407: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_408: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_409: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_410: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_411: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_412: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_413: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_414: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_415: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_416: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_417: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_418: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_419: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_420: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_421: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_422: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_423: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_424: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_425: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_426: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_427: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_428: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_429: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app lf7 (rev x)).
Lemma candidate_430: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_431: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_432: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_433: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_434: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_435: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_436: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_437: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_438: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_439: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_440: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_441: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_442: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_443: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_444: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_445: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_446: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_447: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_448: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_449: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_450: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_451: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_452: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_453: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_454: forall (lf3 : lst) (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n (Nil))) (app lf7 lf3).
Lemma candidate_455: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_456: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_457: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_458: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_459: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_460: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_461: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_462: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_463: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_464: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_465: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_466: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 lf6).
Lemma candidate_467: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_468: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_469: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_470: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_471: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_472: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_473: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_474: @eq lst Nil (Nil).
Lemma candidate_475: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_476: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_477: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_478: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_479: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_480: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_481: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_482: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_483: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_484: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_485: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_486: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_487: forall (lf3 : lst) (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n (Nil))) (app lf7 lf3).
Lemma candidate_488: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_489: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_490: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_491: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_492: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_493: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 lf3).
Lemma candidate_494: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_495: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_496: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_497: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_498: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_499: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_500: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_501: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_502: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_503: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_504: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_505: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_506: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app lf7 (rev x)).
Lemma candidate_507: @eq lst Nil (Nil).
Lemma candidate_508: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_509: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_510: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_511: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_512: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_513: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_514: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_515: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_516: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_517: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_518: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_519: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_520: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_521: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_522: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_523: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_524: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_525: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) lf6).
Lemma candidate_526: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_527: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_528: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_529: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (rev (app lf5 (rev lf6)))).
Lemma candidate_530: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev lf5))).
Lemma candidate_531: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma candidate_532: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_533: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_534: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_535: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_536: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_537: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_538: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_539: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_540: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_541: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_542: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_543: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_544: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev (app x Nil))).
Lemma candidate_545: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_546: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_547: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_548: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev x)).
Lemma candidate_549: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x y)).
Lemma candidate_550: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5)   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_551: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) (rev lf5))).
Lemma candidate_552: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (rev (app lf5 x))).
Lemma candidate_553: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_554: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app (rev lf5) (app x y))).
Lemma candidate_555: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app lf5 (app x y))).
Lemma candidate_556: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_557: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_558: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_559: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_560: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_561: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_562: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_563: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_564: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_565: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_566: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_567: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_568: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_569: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_570: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_571: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_572: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_573: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_574: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_575: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_576: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_577: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_578: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_579: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) lf6).
Lemma candidate_580: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_581: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_582: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_583: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_584: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_585: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_586: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (app lf8 (rev y)) (app lf6 (Cons n Nil))).
Lemma candidate_587: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_588: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n (rev lf8)))).
Lemma candidate_589: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_590: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_591: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_592: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_593: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_594: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_595: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_596: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_597: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_598: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_599: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_600: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_601: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_602: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_603: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_604: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev (app x Nil))).
Lemma candidate_605: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_606: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_607: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_608: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev x)).
Lemma candidate_609: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x y)).
Lemma candidate_610: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev x) (Cons n lf8))).
Lemma candidate_611: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev x) (Cons n Nil))).
Lemma candidate_612: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_613: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_614: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_615: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_616: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_617: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_618: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_619: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_620: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_621: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_622: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_623: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_624: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_625: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_626: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_627: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_628: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_629: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_630: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_631: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_632: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_633: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_634: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_635: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_636: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_637: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_638: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_639: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_640: forall (n : nat) (y : lst) (lf1 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n (Nil))) lf1.
Lemma candidate_641: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_642: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_643: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_644: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_645: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_646: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_647: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_648: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_649: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_650: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_651: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_652: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) lf6).
Lemma candidate_653: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_654: @eq lst Nil (Nil).
Lemma candidate_655: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_656: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_657: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_658: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_659: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_660: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_661: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_662: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_663: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_664: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_665: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_666: forall (lf1 : lst), @eq lst (lf1) lf1.
Lemma candidate_667: forall (n : nat) (y : lst) (lf1 : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n (Nil))) lf1.
Lemma candidate_668: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev (app x Nil))).
Lemma candidate_669: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_670: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_671: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_672: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev x)).
Lemma candidate_673: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x y)).
Lemma candidate_674: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_675: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_676: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_677: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_678: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_679: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_680: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_681: @eq lst Nil (Nil).
Lemma candidate_682: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_683: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_684: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_685: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_686: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_687: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_688: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_689: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_690: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_691: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_692: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_693: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_694: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_695: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_696: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_697: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_698: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_699: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_700: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_701: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_702: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_703: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_704: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_705: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_706: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_707: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_708: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_709: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_710: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_711: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_712: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_713: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_714: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_715: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_716: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_717: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_718: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_719: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_720: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_721: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_722: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_723: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_724: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_725: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_726: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_727: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_728: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_729: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_730: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_731: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_732: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_733: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_734: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_735: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_736: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_737: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_738: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_739: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_740: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_741: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_742: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_743: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_744: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_745: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_746: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_747: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_748: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_749: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_750: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_751: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_752: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_753: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_754: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_755: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_756: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_757: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_758: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_759: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_760: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_761: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_762: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_763: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_764: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_765: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_766: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_767: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_768: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_769: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_770: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_771: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_772: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_773: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_774: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_775: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_776: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_777: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_778: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_779: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_780: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_781: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_782: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_783: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_784: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_785: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_786: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_787: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_788: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_789: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_790: forall (lf3 : lst) (n : nat) (y : lst) (lf4 : lst), @eq lst (app lf4 (Cons n (Nil))) (app (rev y) lf3).
Lemma candidate_791: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_792: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_793: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_794: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_795: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_796: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_797: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_798: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_799: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_800: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_801: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_802: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_803: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_804: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_805: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_806: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_807: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_808: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_809: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_810: @eq lst Nil (Nil).
Lemma candidate_811: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_812: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_813: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_814: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (rev (app lf5 (rev lf6)))).
Lemma candidate_815: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev lf5))).
Lemma candidate_816: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma candidate_817: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_818: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_819: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_820: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_821: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_822: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_823: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_824: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_825: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_826: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_827: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_828: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) lf6).
Lemma candidate_829: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_830: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_831: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_832: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_833: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_834: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_835: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_836: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_837: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_838: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (rev (app lf5 (rev lf6)))).
Lemma candidate_839: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev lf5))).
Lemma candidate_840: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma candidate_841: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_842: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_843: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_844: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_845: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_846: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_847: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5)   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_848: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) (rev lf5))).
Lemma candidate_849: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (rev (app lf5 x))).
Lemma candidate_850: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_851: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app (rev lf5) (app x y))).
Lemma candidate_852: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app lf5 (app x y))).
Lemma candidate_853: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_854: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_855: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_856: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_857: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_858: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_859: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev (app x Nil))).
Lemma candidate_860: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_861: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_862: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_863: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev x)).
Lemma candidate_864: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x y)).
Lemma candidate_865: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_866: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_867: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_868: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_869: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_870: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_871: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5)   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_872: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) (rev lf5))).
Lemma candidate_873: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (rev (app lf5 x))).
Lemma candidate_874: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_875: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app (rev lf5) (app x y))).
Lemma candidate_876: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app lf5 (app x y))).
Lemma candidate_877: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_878: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_879: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_880: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_881: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_882: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_883: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_884: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_885: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_886: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_887: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_888: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_889: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (app lf8 (rev y)) (app lf6 (Cons n Nil))).
Lemma candidate_890: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_891: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n (rev lf8)))).
Lemma candidate_892: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_893: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_894: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_895: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_896: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_897: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_898: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_899: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_900: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_901: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_902: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_903: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_904: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_905: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_906: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) lf6).
Lemma candidate_907: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_908: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_909: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_910: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_911: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_912: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_913: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_914: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_915: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_916: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_917: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_918: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_919: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (app lf8 (rev y)) (app lf6 (Cons n Nil))).
Lemma candidate_920: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_921: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n (rev lf8)))).
Lemma candidate_922: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_923: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_924: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_925: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_926: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_927: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_928: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_929: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_930: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_931: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev x) (Cons n lf8))).
Lemma candidate_932: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev x) (Cons n Nil))).
Lemma candidate_933: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_934: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_935: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_936: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_937: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_938: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_939: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_940: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_941: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_942: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_943: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev (app x Nil))).
Lemma candidate_944: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_945: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_946: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_947: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev x)).
Lemma candidate_948: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x y)).
Lemma candidate_949: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_950: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_951: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_952: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_953: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_954: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_955: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev x) (Cons n lf8))).
Lemma candidate_956: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (app lf8 (rev y)) (app (rev x) (Cons n Nil))).
Lemma candidate_957: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_958: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_959: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_960: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_961: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_962: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_963: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_964: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_965: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_966: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_967: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_968: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_969: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_970: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_971: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_972: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_973: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_974: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_975: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_976: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_977: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_978: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_979: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_980: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_981: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_982: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_983: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_984: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_985: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_986: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_987: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_988: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_989: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_990: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_991: forall (lf3 : lst) (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n (Nil))) (app (rev y) lf3).
Lemma candidate_992: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_993: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_994: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_995: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_996: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_997: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_998: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_999: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_1000: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_1001: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_1002: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_1003: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) lf6).
Lemma candidate_1004: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_1005: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_1006: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_1007: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_1008: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_1009: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_1010: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1011: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1012: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1013: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1014: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1015: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1016: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1017: @eq lst Nil (Nil).
Lemma candidate_1018: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_1019: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1020: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1021: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_1022: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1023: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1024: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_1025: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_1026: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_1027: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_1028: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_1029: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_1030: forall (lf3 : lst) (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n (Nil))) (app (rev y) lf3).
Lemma candidate_1031: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev (app x Nil))).
Lemma candidate_1032: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_1033: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_1034: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_1035: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (rev x)).
Lemma candidate_1036: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x y)).
Lemma candidate_1037: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_1038: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_1039: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_1040: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_1041: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_1042: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) lf3).
Lemma candidate_1043: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1044: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_1045: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1046: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1047: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_1048: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1049: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1050: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1051: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1052: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1053: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1054: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1055: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1056: @eq lst Nil (Nil).
Lemma candidate_1057: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1058: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1059: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1060: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1061: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1062: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1063: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1064: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1065: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1066: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1067: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1068: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1069: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app (app lf6 lf5) Nil).
Lemma candidate_1070: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev (rev lf5))).
Lemma candidate_1071: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (app lf5 Nil)).
Lemma candidate_1072: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (rev (app lf5 (rev lf6))).
Lemma candidate_1073: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev lf5)).
Lemma candidate_1074: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 lf5).
Lemma candidate_1075: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_1076: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (rev (app lf5 (rev lf6)))).
Lemma candidate_1077: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app (app lf7 lf6) (rev lf5)).
Lemma candidate_1078: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app (app lf7 lf6) lf5).
Lemma candidate_1079: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 (rev lf5))).
Lemma candidate_1080: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 lf5)).
Lemma candidate_1081: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1082: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1083: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1084: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1085: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1086: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1087: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app (rev lf5) x)).
Lemma candidate_1088: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev (rev lf5))).
Lemma candidate_1089: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (app lf5 Nil)).
Lemma candidate_1090: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev lf5)).
Lemma candidate_1091: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app lf5 x)).
Lemma candidate_1092: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) lf5).
Lemma candidate_1093: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app lf7 (rev (app lf5 x))).
Lemma candidate_1094: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app lf7 (app (rev x) lf5)).
Lemma candidate_1095: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app (app lf7 (rev x)) (rev lf5)).
Lemma candidate_1096: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_1097: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (rev (app lf5 (app x (rev lf7)))).
Lemma candidate_1098: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app (app lf7 (rev x)) lf5).
Lemma candidate_1099: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1100: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1101: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1102: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1103: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1104: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1105: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1106: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1107: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1108: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1109: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1110: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1111: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (app lf5 Nil))) (app lf7 (app lf6 lf5)).
Lemma candidate_1112: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (rev (app lf5 (rev lf6)))) (app lf7 (app lf6 lf5)).
Lemma candidate_1113: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (rev lf5)) (app lf7 (app lf6 lf5)).
Lemma candidate_1114: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_1115: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (rev lf5))) (app lf7 (app lf6 lf5)).
Lemma candidate_1116: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 lf5)).
Lemma candidate_1117: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app (app lf6 lf5) Nil).
Lemma candidate_1118: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev (rev lf5))).
Lemma candidate_1119: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (app lf5 Nil)).
Lemma candidate_1120: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (rev (app lf5 (rev lf6))).
Lemma candidate_1121: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev lf5)).
Lemma candidate_1122: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 lf5).
Lemma candidate_1123: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_1124: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (rev (app lf5 (rev lf6)))).
Lemma candidate_1125: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app (app lf7 lf6) (rev lf5)).
Lemma candidate_1126: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app (app lf7 lf6) lf5).
Lemma candidate_1127: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 (rev lf5))).
Lemma candidate_1128: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 lf5)).
Lemma candidate_1129: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1130: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1131: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1132: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1133: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1134: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1135: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1136: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1137: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1138: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1139: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1140: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1141: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (rev (app lf5 x))) (app lf7 (app (rev x) lf5)).
Lemma candidate_1142: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app lf7 (app (rev x) lf5)).
Lemma candidate_1143: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) (rev lf5)) (app lf7 (app (rev x) lf5)).
Lemma candidate_1144: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (app (rev lf5) (app x (rev lf7)))) (app lf7 (app (rev x) lf5)).
Lemma candidate_1145: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (app lf5 (app x (rev lf7)))) (app lf7 (app (rev x) lf5)).
Lemma candidate_1146: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_1147: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app (rev lf5) x)).
Lemma candidate_1148: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev (rev lf5))).
Lemma candidate_1149: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (app lf5 Nil)).
Lemma candidate_1150: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev lf5)).
Lemma candidate_1151: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app lf5 x)).
Lemma candidate_1152: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) lf5).
Lemma candidate_1153: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app lf7 (rev (app lf5 x))).
Lemma candidate_1154: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app lf7 (app (rev x) lf5)).
Lemma candidate_1155: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app (app lf7 (rev x)) (rev lf5)).
Lemma candidate_1156: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_1157: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (rev (app lf5 (app x (rev lf7)))).
Lemma candidate_1158: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app (app lf7 (rev x)) lf5).
Lemma candidate_1159: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1160: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1161: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1162: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1163: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1164: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1165: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1166: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1167: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1168: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1169: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1170: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1171: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1172: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1173: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1174: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1175: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1176: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1177: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (app lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1178: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf6)))).
Lemma candidate_1179: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n (rev lf8))).
Lemma candidate_1180: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n lf8)).
Lemma candidate_1181: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n Nil)).
Lemma candidate_1182: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1183: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1184: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1185: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1186: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1187: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1188: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1189: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_1190: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_1191: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8)))   (app lf7 (app lf6 (Cons n (rev lf8)))).
Lemma candidate_1192: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1193: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1194: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8)))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1195: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1196: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1197: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1198: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1199: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1200: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1201: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (rev (app lf8 (Cons n x))).
Lemma candidate_1202: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x lf8)) (Cons n Nil)).
Lemma candidate_1203: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1204: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n (rev lf8))).
Lemma candidate_1205: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n lf8)).
Lemma candidate_1206: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n Nil)).
Lemma candidate_1207: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_1208: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1209: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_1210: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1211: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1212: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_1213: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1214: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1215: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1216: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1217: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1218: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1219: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1220: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1221: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1222: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1223: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1224: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1225: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1226: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1227: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1228: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1229: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1230: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1231: forall (n : nat) (lf7 : lst) (lf2 : lst) (lf6 : lst), @eq lst lf2 (app lf7 (app lf6 (Cons n (Nil)))).
Lemma candidate_1232: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_1233: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1234: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1235: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_1236: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1237: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1238: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (app (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1239: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 (Cons n Nil)) Nil).
Lemma candidate_1240: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1241: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 Nil) (Cons n Nil)).
Lemma candidate_1242: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app lf6 (Cons n Nil)).
Lemma candidate_1243: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1244: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1245: @eq lst Nil (Nil).
Lemma candidate_1246: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1247: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1248: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1249: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1250: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1251: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1252: forall (n : nat) (lf7 : lst) (x : lst) (lf2 : lst), @eq lst lf2 (app lf7 (app (rev x) (Cons n (Nil)))).
Lemma candidate_1253: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) Nil) (Cons n Nil)).
Lemma candidate_1254: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (rev (rev (app (rev x) (Cons n Nil)))).
Lemma candidate_1255: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) (Cons n Nil)) Nil).
Lemma candidate_1256: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1257: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1258: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev x) (Cons n Nil)).
Lemma candidate_1259: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1260: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1261: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_1262: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_1263: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1264: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1265: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_1266: @eq lst Nil (Nil).
Lemma candidate_1267: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1268: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1269: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1270: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1271: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1272: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1273: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1274: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1275: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n (rev lf8))))   (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1276: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1277: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1278: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1279: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1280: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1281: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1282: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1283: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1284: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1285: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (app lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1286: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf6)))).
Lemma candidate_1287: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n (rev lf8))).
Lemma candidate_1288: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n lf8)).
Lemma candidate_1289: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n Nil)).
Lemma candidate_1290: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1291: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1292: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1293: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1294: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1295: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1296: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1297: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1298: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1299: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1300: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1301: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1302: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1303: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_1304: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_1305: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8)))   (app lf7 (app lf6 (Cons n (rev lf8)))).
Lemma candidate_1306: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_1307: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1308: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8)))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1309: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1310: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1311: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1312: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1313: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1314: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1315: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1316: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1317: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n (rev lf8))))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1318: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1319: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1320: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app (rev (app x (rev lf7))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1321: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (rev (app lf8 (Cons n x))).
Lemma candidate_1322: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x lf8)) (Cons n Nil)).
Lemma candidate_1323: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1324: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n (rev lf8))).
Lemma candidate_1325: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n lf8)).
Lemma candidate_1326: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n Nil)).
Lemma candidate_1327: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_1328: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1329: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_1330: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_1331: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1332: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_1333: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1334: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1335: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1336: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1337: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1338: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1339: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1340: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1341: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1342: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1343: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1344: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1345: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1346: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1347: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1348: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1349: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1350: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1351: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1352: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1353: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1354: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1355: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1356: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1357: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 Nil) (app lf6 (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1358: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1359: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1360: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1361: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1362: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1363: forall (lf7 : lst) (n : nat) (lf4 : lst) (lf6 : lst), @eq lst (app lf4 (Cons n (Nil))) (app lf7 (app lf6 (Cons n (Nil)))).
Lemma candidate_1364: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_1365: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1366: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1367: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_1368: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1369: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1370: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (app (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1371: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 (Cons n Nil)) Nil).
Lemma candidate_1372: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1373: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 Nil) (Cons n Nil)).
Lemma candidate_1374: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app lf6 (Cons n Nil)).
Lemma candidate_1375: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1376: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1377: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1378: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1379: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1380: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1381: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1382: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1383: @eq lst Nil (Nil).
Lemma candidate_1384: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (rev (app lf7 (rev x)))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1385: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (rev lf7)) (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1386: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 Nil) (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1387: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1388: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1389: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (app x (rev lf7))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1390: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1391: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1392: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1393: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1394: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1395: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1396: forall (lf7 : lst) (n : nat) (lf4 : lst) (x : lst), @eq lst (app lf4 (Cons n (Nil))) (app lf7 (app (rev x) (Cons n (Nil)))).
Lemma candidate_1397: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) Nil) (Cons n Nil)).
Lemma candidate_1398: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (rev (rev (app (rev x) (Cons n Nil)))).
Lemma candidate_1399: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) (Cons n Nil)) Nil).
Lemma candidate_1400: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1401: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1402: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev x) (Cons n Nil)).
Lemma candidate_1403: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1404: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1405: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1406: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1407: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1408: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1409: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1410: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1411: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_1412: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_1413: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1414: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1415: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_1416: @eq lst Nil (Nil).
Lemma candidate_1417: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1418: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1419: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1420: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1421: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1422: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1423: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1424: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1425: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1426: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1427: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1428: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1429: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_1430: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_1431: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_1432: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (rev (app lf5 (rev lf6)))).
Lemma candidate_1433: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (rev lf5))).
Lemma candidate_1434: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 lf5)).
Lemma candidate_1435: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app (app lf6 lf5) Nil).
Lemma candidate_1436: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev (rev lf5))).
Lemma candidate_1437: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (app lf5 Nil)).
Lemma candidate_1438: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (rev (app lf5 (rev lf6))).
Lemma candidate_1439: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev lf5)).
Lemma candidate_1440: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 lf5).
Lemma candidate_1441: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1442: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1443: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1444: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1445: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1446: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1447: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1448: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1449: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1450: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1451: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1452: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1453: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app (rev lf5) x)).
Lemma candidate_1454: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev (rev lf5))).
Lemma candidate_1455: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (app lf5 Nil)).
Lemma candidate_1456: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev lf5)).
Lemma candidate_1457: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app lf5 x)).
Lemma candidate_1458: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) lf5).
Lemma candidate_1459: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5))   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_1460: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (app (rev x) (rev lf5))).
Lemma candidate_1461: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (rev (app lf5 x))).
Lemma candidate_1462: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1463: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (rev (app (rev lf5) (app x y))).
Lemma candidate_1464: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (rev (app lf5 (app x y))).
Lemma candidate_1465: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1466: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1467: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1468: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1469: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1470: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1471: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1472: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1473: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1474: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1475: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1476: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1477: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1478: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1479: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1480: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1481: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1482: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1483: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) (app lf6 lf5)) Nil) (app (rev y) (app lf6 lf5)).
Lemma candidate_1484: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (rev (rev lf5)))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1485: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (app lf5 Nil))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1486: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (rev (app lf5 (rev lf6)))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1487: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (rev lf5))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1488: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 lf5)).
Lemma candidate_1489: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_1490: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_1491: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_1492: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (rev (app lf5 (rev lf6)))).
Lemma candidate_1493: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (rev lf5))).
Lemma candidate_1494: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 lf5)).
Lemma candidate_1495: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app (app lf6 lf5) Nil).
Lemma candidate_1496: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev (rev lf5))).
Lemma candidate_1497: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (app lf5 Nil)).
Lemma candidate_1498: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (rev (app lf5 (rev lf6))).
Lemma candidate_1499: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev lf5)).
Lemma candidate_1500: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 lf5).
Lemma candidate_1501: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1502: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1503: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1504: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1505: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1506: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1507: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1508: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1509: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1510: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1511: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1512: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1513: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1514: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1515: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1516: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1517: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1518: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1519: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) (app lf5 Nil)))   (app (rev y) (app (rev x) lf5)).
Lemma candidate_1520: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) (rev lf5))) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1521: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (rev (app lf5 x))) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1522: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1523: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (app (rev lf5) (app x y))) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1524: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (app lf5 (app x y))) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1525: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app (rev lf5) x)).
Lemma candidate_1526: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev (rev lf5))).
Lemma candidate_1527: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (app lf5 Nil)).
Lemma candidate_1528: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev lf5)).
Lemma candidate_1529: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app lf5 x)).
Lemma candidate_1530: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) lf5).
Lemma candidate_1531: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5))   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_1532: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (app (rev x) (rev lf5))).
Lemma candidate_1533: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (rev (app lf5 x))).
Lemma candidate_1534: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1535: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (rev (app (rev lf5) (app x y))).
Lemma candidate_1536: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (rev (app lf5 (app x y))).
Lemma candidate_1537: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1538: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1539: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_1540: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (rev (app lf5 (rev lf4))).
Lemma candidate_1541: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev lf5)).
Lemma candidate_1542: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 lf5).
Lemma candidate_1543: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1544: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1545: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1546: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1547: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1548: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1549: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1550: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1551: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1552: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1553: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1554: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1555: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1556: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1557: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1558: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1559: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1560: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1561: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (app lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1562: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf6)))).
Lemma candidate_1563: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n (rev lf8))).
Lemma candidate_1564: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n lf8)).
Lemma candidate_1565: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n Nil)).
Lemma candidate_1566: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1567: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (app lf8 (rev y)) (app lf6 (Cons n Nil))).
Lemma candidate_1568: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1569: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n (rev lf8)))).
Lemma candidate_1570: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1571: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1572: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1573: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1574: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1575: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1576: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1577: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1578: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1579: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1580: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1581: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1582: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1583: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1584: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1585: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1586: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1587: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1588: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1589: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1590: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1591: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (rev (app lf8 (Cons n x))).
Lemma candidate_1592: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x lf8)) (Cons n Nil)).
Lemma candidate_1593: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1594: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n (rev lf8))).
Lemma candidate_1595: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n lf8)).
Lemma candidate_1596: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n Nil)).
Lemma candidate_1597: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (app lf8 (rev y)) (app (rev x) (Cons n lf8))).
Lemma candidate_1598: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (app lf8 (rev y)) (app (rev x) (Cons n Nil))).
Lemma candidate_1599: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_1600: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1601: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1602: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1603: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1604: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1605: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1606: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1607: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1608: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1609: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1610: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1611: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1612: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1613: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1614: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1615: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1616: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1617: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1618: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1619: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1620: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1621: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1622: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1623: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1624: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1625: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1626: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1627: forall (n : nat) (y : lst) (lf2 : lst) (lf6 : lst), @eq lst lf2 (app (rev y) (app lf6 (Cons n (Nil)))).
Lemma candidate_1628: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_1629: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1630: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_1631: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1632: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1633: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1634: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (app (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1635: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 (Cons n Nil)) Nil).
Lemma candidate_1636: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1637: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 Nil) (Cons n Nil)).
Lemma candidate_1638: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app lf6 (Cons n Nil)).
Lemma candidate_1639: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1640: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1641: @eq lst Nil (Nil).
Lemma candidate_1642: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1643: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1644: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1645: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1646: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1647: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1648: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_1649: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_1650: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_1651: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_1652: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_1653: forall (lf2 : lst), @eq lst lf2 (lf2).
Lemma candidate_1654: forall (n : nat) (y : lst) (x : lst) (lf2 : lst), @eq lst lf2 (app (rev y) (app (rev x) (Cons n (Nil)))).
Lemma candidate_1655: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) Nil) (Cons n Nil)).
Lemma candidate_1656: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (rev (rev (app (rev x) (Cons n Nil)))).
Lemma candidate_1657: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) (Cons n Nil)) Nil).
Lemma candidate_1658: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1659: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1660: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev x) (Cons n Nil)).
Lemma candidate_1661: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_1662: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1663: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1664: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_1665: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1666: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1667: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1668: @eq lst Nil (Nil).
Lemma candidate_1669: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1670: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1671: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1672: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1673: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1674: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1675: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1676: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1677: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1678: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1679: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1680: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1681: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1682: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1683: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1684: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1685: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1686: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1687: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf8 (rev y)) (app lf6 (Cons n Nil)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1688: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1689: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n (rev lf8))))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1690: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1691: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1692: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app (rev (rev lf6)) (Cons n Nil)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1693: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (app lf8 (rev lf6))) (Cons n Nil)).
Lemma candidate_1694: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf6)))).
Lemma candidate_1695: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n (rev lf8))).
Lemma candidate_1696: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n lf8)).
Lemma candidate_1697: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app lf6 (Cons n Nil)).
Lemma candidate_1698: forall (n : nat) (lf8 : lst) (lf6 : lst), @eq lst (app lf6 (Cons n lf8)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1699: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (app lf8 (rev y)) (app lf6 (Cons n Nil))).
Lemma candidate_1700: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (app lf8 (rev y)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1701: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n (rev lf8)))).
Lemma candidate_1702: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_1703: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1704: forall (n : nat) (y : lst) (lf8 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n lf8)))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1705: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1706: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1707: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1708: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1709: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1710: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1711: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1712: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1713: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1714: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1715: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1716: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1717: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1718: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1719: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1720: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1721: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1722: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1723: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1724: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1725: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1726: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1727: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1728: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1729: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf8 (rev y)) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1730: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app lf8 (rev y)) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1731: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n (rev lf8))))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1732: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1733: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1734: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev (app x y)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1735: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (rev (app lf8 (Cons n x))).
Lemma candidate_1736: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x lf8)) (Cons n Nil)).
Lemma candidate_1737: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1738: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n (rev lf8))).
Lemma candidate_1739: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n lf8)).
Lemma candidate_1740: forall (n : nat) (x : lst) (lf8 : lst), @eq lst (app (rev x) (Cons n lf8)) (app (rev x) (Cons n Nil)).
Lemma candidate_1741: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (app lf8 (rev y)) (app (rev x) (Cons n lf8))).
Lemma candidate_1742: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (app lf8 (rev y)) (app (rev x) (Cons n Nil))).
Lemma candidate_1743: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n (rev lf8)))).
Lemma candidate_1744: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1745: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1746: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (rev y) (app (rev x) (Cons n lf8)))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1747: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app lf8 (Cons n Nil)).
Lemma candidate_1748: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev (rev lf8)) (Cons n Nil)).
Lemma candidate_1749: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (app (rev lf8) (Cons n Nil)).
Lemma candidate_1750: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n (rev lf8)).
Lemma candidate_1751: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n lf8).
Lemma candidate_1752: forall (n : nat) (lf8 : lst), @eq lst (Cons n lf8) (Cons n Nil).
Lemma candidate_1753: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (app lf8 (rev lf4))) (Cons n Nil)).
Lemma candidate_1754: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (rev (app lf8 (Cons n (rev lf4)))).
Lemma candidate_1755: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n (rev lf8))).
Lemma candidate_1756: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n lf8)).
Lemma candidate_1757: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app lf4 (Cons n Nil)).
Lemma candidate_1758: forall (n : nat) (lf4 : lst) (lf8 : lst), @eq lst (app lf4 (Cons n lf8)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1759: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1760: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1761: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1762: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1763: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1764: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1765: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1766: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1767: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1768: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1769: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1770: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1771: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1772: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1773: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1774: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1775: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1776: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1777: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1778: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1779: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1780: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) y)) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1781: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1782: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app (rev (rev lf6)) (Cons n Nil)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1783: forall (n : nat) (y : lst) (lf4 : lst) (lf6 : lst), @eq lst (app lf4 (Cons n (Nil))) (app (rev y) (app lf6 (Cons n (Nil)))).
Lemma candidate_1784: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_1785: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1786: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_1787: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1788: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1789: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1790: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (app (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1791: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 (Cons n Nil)) Nil).
Lemma candidate_1792: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1793: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 Nil) (Cons n Nil)).
Lemma candidate_1794: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app lf6 (Cons n Nil)).
Lemma candidate_1795: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1796: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1797: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1798: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1799: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1800: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1801: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1802: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1803: @eq lst Nil (Nil).
Lemma candidate_1804: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1805: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1806: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1807: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1808: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1809: forall (y : lst), @eq lst (rev y) (rev y).
Lemma candidate_1810: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1811: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1812: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1813: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1814: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1815: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1816: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev (app x Nil)) (Cons n Nil)))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1817: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1818: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x (rev (rev y)))) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1819: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x (app y Nil))) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1820: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1821: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x y)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1822: forall (n : nat) (y : lst) (lf4 : lst) (x : lst), @eq lst (app lf4 (Cons n (Nil))) (app (rev y) (app (rev x) (Cons n (Nil)))).
Lemma candidate_1823: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) Nil) (Cons n Nil)).
Lemma candidate_1824: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (rev (rev (app (rev x) (Cons n Nil)))).
Lemma candidate_1825: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) (Cons n Nil)) Nil).
Lemma candidate_1826: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1827: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (app x Nil)) (Cons n Nil)).
Lemma candidate_1828: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev x) (Cons n Nil)).
Lemma candidate_1829: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_1830: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_1831: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1832: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_1833: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1834: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1835: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1836: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_1837: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_1838: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_1839: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app lf4 (Cons n Nil)).
Lemma candidate_1840: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1841: forall (n : nat), @eq lst (Cons n Nil) (Cons n Nil).
Lemma candidate_1842: @eq lst Nil (Nil).
Lemma candidate_1843: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1844: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_1845: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_1846: forall (x : lst), @eq lst (rev x) (rev (app x Nil)).
Lemma candidate_1847: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_1848: forall (x : lst), @eq lst (rev x) (rev x).
Lemma candidate_1849: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_1850: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_1851: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_1852: forall (y : lst), @eq lst (rev y) (rev (app y Nil)).
Lemma candidate_1853: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_1854: forall (y : lst), @eq lst (rev y) (rev y).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 6448 seconds
Duplicates removed: 1505
Filtered by Quickchick: 132
Filtered by script: 50
Remaining: 167

Lemmas: 
Lemma candidate_209: forall (lf2 : lst), @eq lst lf2 (app lf2 Nil).
Lemma candidate_20: forall (lf1 : lst), @eq lst (app lf1 Nil) lf1.
Lemma candidate_208: forall (lf2 : lst), @eq lst lf2 (rev (rev lf2)).
Lemma candidate_19: forall (lf1 : lst), @eq lst (rev (rev lf1)) lf1.
Lemma candidate_536: forall (y : lst), @eq lst (rev y) (app (rev y) Nil).
Lemma candidate_101: forall (x : lst), @eq lst (rev x) (app (rev x) Nil).
Lemma candidate_534: forall (y : lst), @eq lst (rev y) (rev (rev (rev y))).
Lemma candidate_207: forall (lf2 : lst), @eq lst lf2 (app (app lf2 Nil) Nil).
Lemma candidate_99: forall (x : lst), @eq lst (rev x) (rev (rev (rev x))).
Lemma candidate_18: forall (lf1 : lst), @eq lst (app (app lf1 Nil) Nil) lf1.
Lemma candidate_206: forall (lf2 : lst), @eq lst lf2 (app (rev (rev lf2)) Nil).
Lemma candidate_205: forall (lf2 : lst), @eq lst lf2 (rev (app (rev lf2) Nil)).
Lemma candidate_17: forall (lf1 : lst), @eq lst (app (rev (rev lf1)) Nil) lf1.
Lemma candidate_16: forall (lf1 : lst), @eq lst (rev (app (rev lf1) Nil)) lf1.
Lemma candidate_533: forall (y : lst), @eq lst (rev y) (app (app (rev y) Nil) Nil).
Lemma candidate_532: forall (y : lst), @eq lst (rev y) (app (rev (app y Nil)) Nil).
Lemma candidate_98: forall (x : lst), @eq lst (rev x) (app (app (rev x) Nil) Nil).
Lemma candidate_97: forall (x : lst), @eq lst (rev x) (app (rev (app x Nil)) Nil).
Lemma candidate_1071: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (app lf5 Nil)).
Lemma candidate_1069: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app (app lf6 lf5) Nil).
Lemma candidate_227: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (app lf3 Nil)) (app lf7 lf3).
Lemma candidate_225: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 lf3) Nil) (app lf7 lf3).
Lemma candidate_224: forall (lf3 : lst) (lf7 : lst), @eq lst (app (app lf7 Nil) lf3) (app lf7 lf3).
Lemma candidate_215: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (app lf3 Nil)).
Lemma candidate_213: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 lf3) Nil).
Lemma candidate_212: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (app lf7 Nil) lf3).
Lemma candidate_71: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (app lf6 Nil)).
Lemma candidate_69: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 lf6) Nil).
Lemma candidate_68: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (app lf7 Nil) lf6).
Lemma candidate_24: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (app lf5 Nil)).
Lemma candidate_22: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app (app lf4 lf5) Nil).
Lemma candidate_1070: forall (lf5 : lst) (lf6 : lst), @eq lst (app lf6 lf5) (app lf6 (rev (rev lf5))).
Lemma candidate_226: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 (rev (rev lf3))) (app lf7 lf3).
Lemma candidate_223: forall (lf3 : lst) (lf7 : lst), @eq lst (app (rev (rev lf7)) lf3) (app lf7 lf3).
Lemma candidate_214: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app lf7 (rev (rev lf3))).
Lemma candidate_211: forall (lf3 : lst) (lf7 : lst), @eq lst (app lf7 lf3) (app (rev (rev lf7)) lf3).
Lemma candidate_70: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app lf7 (rev (rev lf6))).
Lemma candidate_67: forall (lf7 : lst) (lf6 : lst), @eq lst (app lf7 lf6) (app (rev (rev lf7)) lf6).
Lemma candidate_23: forall (lf4 : lst) (lf5 : lst), @eq lst (app lf4 lf5) (app lf4 (rev (rev lf5))).
Lemma candidate_1087: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (rev (app (rev lf5) x)).
Lemma candidate_720: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) y)) (app (rev y) lf3).
Lemma candidate_702: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) y)).
Lemma candidate_522: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) y)).
Lemma candidate_95: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (app x (rev lf7))).
Lemma candidate_1089: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (app lf5 Nil)).
Lemma candidate_722: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (app lf3 Nil)) (app (rev y) lf3).
Lemma candidate_704: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (app lf3 Nil)).
Lemma candidate_524: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (app lf6 Nil)).
Lemma candidate_94: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 (rev x)) Nil).
Lemma candidate_92: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (app lf7 Nil) (rev x)).
Lemma candidate_1088: forall (x : lst) (lf5 : lst), @eq lst (app (rev x) lf5) (app (rev x) (rev (rev lf5))).
Lemma candidate_1078: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app (app lf7 lf6) lf5).
Lemma candidate_721: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) (rev (rev lf3))) (app (rev y) lf3).
Lemma candidate_703: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (app (rev y) (rev (rev lf3))).
Lemma candidate_547: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (app y Nil))).
Lemma candidate_523: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (app (rev y) (rev (rev lf6))).
Lemma candidate_93: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (rev (rev (app lf7 (rev x)))).
Lemma candidate_91: forall (lf7 : lst) (x : lst), @eq lst (app lf7 (rev x)) (app (rev (rev lf7)) (rev x)).
Lemma candidate_12: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 lf5)).
Lemma candidate_546: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (rev (app x (rev (rev y)))).
Lemma candidate_719: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (app y Nil))) (app (rev y) lf3).
Lemma candidate_701: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (app y Nil))).
Lemma candidate_521: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (app y Nil))).
Lemma candidate_718: forall (lf3 : lst) (y : lst), @eq lst (rev (app (rev lf3) (rev (rev y)))) (app (rev y) lf3).
Lemma candidate_700: forall (lf3 : lst) (y : lst), @eq lst (app (rev y) lf3) (rev (app (rev lf3) (rev (rev y)))).
Lemma candidate_545: forall (y : lst) (x : lst), @eq lst (app (rev y) (rev x)) (app (rev y) (app (rev x) Nil)).
Lemma candidate_520: forall (y : lst) (lf6 : lst), @eq lst (app (rev y) lf6) (rev (app (rev lf6) (rev (rev y)))).
Lemma candidate_1241: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 Nil) (Cons n Nil)).
Lemma candidate_1239: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app lf6 (Cons n Nil)) Nil).
Lemma candidate_1098: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (app (app lf7 (rev x)) lf5).
Lemma candidate_56: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 Nil) (Cons n Nil)).
Lemma candidate_54: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app lf4 (Cons n Nil)) Nil).
Lemma candidate_11: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (app lf7 (app (rev x) lf5)).
Lemma candidate_6: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 lf5)).
Lemma candidate_1243: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (rev lf6)) (Cons n Nil)).
Lemma candidate_1111: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (app lf5 Nil))) (app lf7 (app lf6 lf5)).
Lemma candidate_1075: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 lf5)) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_73: forall (lf7 : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) lf5) (app lf7 (app lf6 (app lf5 Nil))).
Lemma candidate_58: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (rev lf4)) (Cons n Nil)).
Lemma candidate_1523: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (rev (app (rev lf5) (app x y))) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1463: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5)) (rev (app (rev lf5) (app x y))).
Lemma candidate_1255: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) (Cons n Nil)) Nil).
Lemma candidate_1253: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (app (rev x) Nil) (Cons n Nil)).
Lemma candidate_554: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (rev (app (rev lf5) (app x y))).
Lemma candidate_5: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1485: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (app lf5 Nil))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1483: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) (app lf6 lf5)) Nil) (app (rev y) (app lf6 lf5)).
Lemma candidate_1431: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_1429: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_1256: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (app (rev (rev (rev x))) (Cons n Nil)).
Lemma candidate_1254: forall (n : nat) (x : lst), @eq lst (app (rev x) (Cons n Nil)) (rev (rev (app (rev x) (Cons n Nil)))).
Lemma candidate_1235: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil))) (app (app lf7 lf6) (Cons n Nil)).
Lemma candidate_1189: forall (n : nat) (lf7 : lst) (lf8 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n lf8))) (app (app lf7 lf6) (Cons n lf8)).
Lemma candidate_528: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (app lf5 Nil))).
Lemma candidate_526: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (app (rev y) (app lf6 lf5)) Nil).
Lemma candidate_10: forall (lf7 : lst) (n : nat) (lf6 : lst) (lf8 : lst), @eq lst (app (app lf7 lf6) (Cons n lf8)) (app lf7 (app lf6 (Cons n lf8))).
Lemma candidate_8: forall (lf7 : lst) (n : nat) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil)) (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1484: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (rev (rev lf5)))) (app (rev y) (app lf6 lf5)).
Lemma candidate_1430: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 lf5)) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_1240: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (app (rev (rev lf6)) (Cons n Nil)) Nil).
Lemma candidate_1238: forall (n : nat) (lf6 : lst), @eq lst (app lf6 (Cons n Nil)) (app (rev (app (rev lf6) Nil)) (Cons n Nil)).
Lemma candidate_1144: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (rev (app (rev lf5) (app x (rev lf7)))) (app lf7 (app (rev x) lf5)).
Lemma candidate_1096: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app lf7 (app (rev x) lf5)) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_527: forall (y : lst) (lf5 : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) lf5) (app (rev y) (app lf6 (rev (rev lf5)))).
Lemma candidate_88: forall (lf7 : lst) (x : lst) (lf5 : lst), @eq lst (app (app lf7 (rev x)) lf5) (rev (app (rev lf5) (app x (rev lf7)))).
Lemma candidate_55: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (app (rev (rev lf4)) (Cons n Nil)) Nil).
Lemma candidate_53: forall (n : nat) (lf4 : lst), @eq lst (app lf4 (Cons n Nil)) (app (rev (app (rev lf4) Nil)) (Cons n Nil)).
Lemma candidate_1628: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (app (rev y) lf6) (Cons n Nil)).
Lemma candidate_1519: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) (app lf5 Nil)))   (app (rev y) (app (rev x) lf5)).
Lemma candidate_1459: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (rev y) (app (rev x) lf5))   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_1263: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 (rev x)) (Cons n Nil)).
Lemma candidate_1207: forall (n : nat) (lf7 : lst) (x : lst) (lf8 : lst), @eq lst (app lf7 (app (rev x) (Cons n lf8)))   (app (app lf7 (rev x)) (Cons n lf8)).
Lemma candidate_550: forall (y : lst) (x : lst) (lf5 : lst), @eq lst (app (app (rev y) (rev x)) lf5)   (app (rev y) (app (rev x) (app lf5 Nil))).
Lemma candidate_9: forall (lf7 : lst) (n : nat) (x : lst) (lf8 : lst), @eq lst (app (app lf7 (rev x)) (Cons n lf8))   (app lf7 (app (rev x) (Cons n lf8))).
Lemma candidate_7: forall (lf7 : lst) (n : nat) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_4: forall (n : nat) (y : lst) (lf6 : lst) (lf8 : lst), @eq lst (app (app (rev y) lf6) (Cons n lf8))   (app (rev y) (app lf6 (Cons n lf8))).
Lemma candidate_2: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1821: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x y)) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1666: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x y)) (Cons n Nil)).
Lemma candidate_1357: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 Nil) (app lf6 (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1232: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_164: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app lf6 (Cons n Nil))).
Lemma candidate_1362: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1237: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_169: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app lf7 (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1780: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) y)) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1631: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_1389: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (app x (rev lf7))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1265: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_644: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) y)) (Cons n Nil)).
Lemma candidate_190: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (app x (rev lf7))) (Cons n Nil)).
Lemma candidate_1662: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (app (rev y) (rev x)) (Cons n Nil)).
Lemma candidate_3: forall (n : nat) (y : lst) (x : lst) (lf8 : lst), @eq lst (app (app (rev y) (rev x)) (Cons n lf8))   (app (rev y) (app (rev x) (Cons n lf8))).
Lemma candidate_1386: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 Nil) (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1262: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_187: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (app lf7 Nil) (app (rev x) (Cons n Nil))).
Lemma candidate_13: forall (y : lst) (lf4 : lst) (x : lst) (lf5 : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 lf5) (app (rev y) (app (rev x) lf5)).
Lemma candidate_1819: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x (app y Nil))) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1782: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app (rev (rev lf6)) (Cons n Nil)))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1664: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_1633: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1385: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (rev lf7)) (app (rev x) (Cons n Nil)))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1384: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (rev (rev (app lf7 (rev x)))) (Cons n Nil))   (app lf7 (app (rev x) (Cons n Nil))).
Lemma candidate_1261: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_1260: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app lf7 (app (rev x) (Cons n Nil)))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_678: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (app y Nil))) (Cons n Nil)).
Lemma candidate_646: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev y) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_186: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev lf7)) (app (rev x) (Cons n Nil))).
Lemma candidate_185: forall (n : nat) (lf7 : lst) (x : lst), @eq lst (app (app lf7 (rev x)) (Cons n Nil))   (app (rev (rev (app lf7 (rev x)))) (Cons n Nil)).
Lemma candidate_1818: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev (app x (rev (rev y)))) (Cons n Nil))   (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_1663: forall (n : nat) (y : lst) (x : lst), @eq lst (app (rev y) (app (rev x) (Cons n Nil)))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_1359: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1234: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_677: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev (app x (rev (rev y)))) (Cons n Nil)).
Lemma candidate_166: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (app lf7 Nil) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1779: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1630: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_1358: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil)))   (app lf7 (app lf6 (Cons n Nil))).
Lemma candidate_1233: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app lf7 (app lf6 (Cons n Nil)))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_643: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (app y Nil))) (Cons n Nil)).
Lemma candidate_165: forall (n : nat) (lf7 : lst) (lf6 : lst), @eq lst (app (app lf7 lf6) (Cons n Nil))   (app (rev (rev lf7)) (app (rev (rev lf6)) (Cons n Nil))).
Lemma candidate_1778: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil))   (app (rev y) (app lf6 (Cons n Nil))).
Lemma candidate_1629: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (rev y) (app lf6 (Cons n Nil)))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_675: forall (n : nat) (y : lst) (x : lst), @eq lst (app (app (rev y) (rev x)) (Cons n Nil))   (app (rev y) (app (rev (app x Nil)) (Cons n Nil))).
Lemma candidate_642: forall (n : nat) (y : lst) (lf6 : lst), @eq lst (app (app (rev y) lf6) (Cons n Nil))   (app (rev (app (rev lf6) (rev (rev y)))) (Cons n Nil)).
Lemma candidate_15: forall (n : nat) (y : lst) (lf4 : lst) (x : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 (Cons n Nil)) (app (rev y) (app (rev x) (Cons n Nil))).
Lemma candidate_14: forall (n : nat) (y : lst) (lf4 : lst) (x : lst) (lf8 : lst), forall _ : @eq lst (rev (app x y)) lf4, @eq lst (app lf4 (Cons n lf8)) (app (rev y) (app (rev x) (Cons n lf8))).
File Information
- File name: list_rev
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev-double_rev-46-rev_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev-double_rev-46-rev_append
- Namespace: adtind
- Proof name: double_rev
- Theorem: Theorem double_rev: forall x0 : lst, @eq lst (rev (rev x0)) x0.
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev (append (rev x) (Cons n Nil))) (Cons n x)

* Hypothesis:
IHx : @eq lst (rev (rev x)) x
x : lst
n : nat

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat

* Terms:
rev (append (rev x) (Cons n Nil)) : lst
nat : Set
x : lst
append (rev x) (Cons n Nil) : lst
Cons n x : lst
rev (rev x) : lst
lst : Set
Cons n Nil : lst
n : nat
@eq lst (rev (append (rev x) (Cons n Nil))) (Cons n x) : Prop
rev x : lst
@eq lst (rev (rev x)) x : Prop
Nil : lst

* Functions:
rev  : forall _ : lst, lst
append  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = Cons n Nil
lf1 : lst = rev (append (rev x) (Cons n Nil))
lf4 : lst = Cons n x
lf5 : lst = rev x
lf2 : lst = append (rev x) (Cons n Nil)
lf6 : lst = Nil

Generalizations:
Lemma conj1: forall (lf4 : lst) (lf1 : lst), @eq lst lf1 lf4.
Lemma conj9: forall (x : lst) (lf1 : lst) (n : nat), @eq lst lf1 (Cons n x).
Lemma conj17: forall (lf2 : lst) (lf4 : lst), @eq lst (rev lf2) lf4.
Lemma conj19: forall (lf5 : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (append lf5 lf3)) lf4.
Lemma conj23: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev (append (rev x) lf3)) lf4.
Lemma conj25: forall (lf2 : lst) (x : lst) (n : nat), @eq lst (rev lf2) (Cons n x).
Lemma conj27: forall (lf5 : lst) (x : lst) (n : nat) (lf3 : lst), @eq lst (rev (append lf5 lf3)) (Cons n x).
Lemma conj31: forall (x : lst) (n : nat) (lf3 : lst), @eq lst (rev (append (rev x) lf3)) (Cons n x).
Lemma conj51: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (n : nat), @eq lst (rev (append lf5 (Cons n lf6))) lf4.
Lemma conj52: forall (lf5 : lst) (lf4 : lst) (n : nat), @eq lst (rev (append lf5 (Cons n Nil))) lf4.
Lemma conj55: forall (lf6 : lst) (x : lst) (lf4 : lst) (n : nat), @eq lst (rev (append (rev x) (Cons n lf6))) lf4.
Lemma conj56: forall (x : lst) (lf4 : lst) (n : nat), @eq lst (rev (append (rev x) (Cons n Nil))) lf4.
Lemma conj59: forall (lf6 : lst) (lf5 : lst) (x : lst) (n : nat), @eq lst (rev (append lf5 (Cons n lf6))) (Cons n x).
Lemma conj60: forall (lf5 : lst) (x : lst) (n : nat), @eq lst (rev (append lf5 (Cons n Nil))) (Cons n x).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : nat), @eq lst (rev (append (rev x) (Cons n lf6))) (Cons n x).
Lemma conj64: forall (x : lst) (n : nat), @eq lst (rev (append (rev x) (Cons n Nil))) (Cons n x).
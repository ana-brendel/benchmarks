File Information
- File name: list_rev_len
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev_len-len_rev-38-len_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev_len-len_rev-38-len_append
- Namespace: adtind
- Proof name: len_rev
- Theorem: Theorem len_rev: forall x0 : lst, @eq nat (len (rev x0)) (len x0).
- Declarations: 
From lfind Require Import LFind.
Require Import Nat.

Proof Context
* Goal State: @eq nat (len (append (rev x) (Cons n Nil))) (S (len x))

* Hypothesis:
IHx : @eq nat (len (rev x)) (len x)
x : lst
n : nat

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat

* Terms:
len (rev x) : nat
nat : Set
@eq nat (len (append (rev x) (Cons n Nil))) (S (len x)) : Prop
x : lst
len x : nat
S (len x) : nat
append (rev x) (Cons n Nil) : lst
lst : Set
Cons n Nil : lst
@eq nat (len (rev x)) (len x) : Prop
n : nat
rev x : lst
Nil : lst
len (append (rev x) (Cons n Nil)) : nat

* Functions:
len  : forall _ : lst, nat
rev  : forall _ : lst, lst
append  : forall (_ : lst) (_ : lst), lst
S  : forall _ : nat, nat
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : lst = Cons n Nil
lf7 : lst = Nil
lf1 : nat = len (append (rev x) (Cons n Nil))
lf4 : nat = S (len x)
lf5 : nat = len x
lf2 : lst = append (rev x) (Cons n Nil)
lf6 : lst = rev x

Generalizations:
Lemma conj1: forall (lf4 : nat) (lf1 : nat), @eq nat lf1 lf4.
Lemma conj9: forall (lf5 : nat) (lf1 : nat), @eq nat lf1 (S lf5).
Lemma conj13: forall (x : lst) (lf1 : nat), @eq nat lf1 (S (len x)).
Lemma conj17: forall (lf2 : lst) (lf4 : nat), @eq nat (len lf2) lf4.
Lemma conj19: forall (lf6 : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (append lf6 lf3)) lf4.
Lemma conj20: forall (x : lst) (lf4 : nat) (lf3 : lst), @eq nat (len (append (rev x) lf3)) lf4.
Lemma conj25: forall (lf2 : lst) (lf5 : nat), @eq nat (len lf2) (S lf5).
Lemma conj27: forall (lf6 : lst) (lf5 : nat) (lf3 : lst), @eq nat (len (append lf6 lf3)) (S lf5).
Lemma conj28: forall (lf5 : nat) (x : lst) (lf3 : lst), @eq nat (len (append (rev x) lf3)) (S lf5).
Lemma conj29: forall (lf2 : lst) (x : lst), @eq nat (len lf2) (S (len x)).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf3 : lst), @eq nat (len (append lf6 lf3)) (S (len x)).
Lemma conj32: forall (x : lst) (lf3 : lst), @eq nat (len (append (rev x) lf3)) (S (len x)).
Lemma conj83: forall (lf6 : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (append lf6 (Cons n lf7))) lf4.
Lemma conj84: forall (x : lst) (lf4 : nat) (lf7 : lst) (n : nat), @eq nat (len (append (rev x) (Cons n lf7))) lf4.
Lemma conj91: forall (lf6 : lst) (lf5 : nat) (lf7 : lst) (n : nat), @eq nat (len (append lf6 (Cons n lf7))) (S lf5).
Lemma conj92: forall (lf5 : nat) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (append (rev x) (Cons n lf7))) (S lf5).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat), @eq nat (len (append lf6 (Cons n lf7))) (S (len x)).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat), @eq nat (len (append (rev x) (Cons n lf7))) (S (len x)).
Lemma conj115: forall (lf6 : lst) (lf4 : nat) (n : nat), @eq nat (len (append lf6 (Cons n Nil))) lf4.
Lemma conj116: forall (x : lst) (lf4 : nat) (n : nat), @eq nat (len (append (rev x) (Cons n Nil))) lf4.
Lemma conj123: forall (lf6 : lst) (lf5 : nat) (n : nat), @eq nat (len (append lf6 (Cons n Nil))) (S lf5).
Lemma conj124: forall (lf5 : nat) (x : lst) (n : nat), @eq nat (len (append (rev x) (Cons n Nil))) (S lf5).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat), @eq nat (len (append lf6 (Cons n Nil))) (S (len x)).
Lemma conj128: forall (x : lst) (n : nat), @eq nat (len (append (rev x) (Cons n Nil))) (S (len x)).
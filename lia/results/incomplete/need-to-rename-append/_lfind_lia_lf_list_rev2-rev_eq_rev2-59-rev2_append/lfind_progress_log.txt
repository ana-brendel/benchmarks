File Information
- File name: list_rev2
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev2-rev_eq_rev2-59-rev2_append
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2-rev_eq_rev2-59-rev2_append
- Namespace: adtind
- Proof name: rev_eq_rev2
- Theorem: Theorem rev_eq_rev2: forall x0 : lst, @eq lst (rev2 x0 Nil) (rev x0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (rev2 x (Cons n Nil)) (append (rev2 x Nil) (Cons n Nil))

* Hypothesis:
IHx : @eq lst (rev2 x Nil) (rev x)
x : lst
n : nat

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat

* Terms:
@eq lst (rev2 x Nil) (rev x) : Prop
rev2 x (Cons n Nil) : lst
@eq lst (rev2 x (Cons n Nil)) (append (rev2 x Nil) (Cons n Nil)) : Prop
append (rev2 x Nil) (Cons n Nil) : lst
nat : Set
x : lst
lst : Set
rev2 x Nil : lst
Cons n Nil : lst
n : nat
rev x : lst
Nil : lst

* Functions:
rev  : forall _ : lst, lst
append  : forall (_ : lst) (_ : lst), lst
rev2  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = Cons n Nil
lf1 : lst = append (rev2 x Nil) (Cons n Nil)
lf4 : lst = rev2 x Nil
lf5 : lst = Nil
lf2 : lst = rev2 x (Cons n Nil)

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf2 lf1.
Lemma conj2: forall (x : lst) (lf1 : lst) (lf3 : lst), @eq lst (rev2 x lf3) lf1.
Lemma conj9: forall (lf2 : lst) (lf4 : lst) (lf3 : lst), @eq lst lf2 (append lf4 lf3).
Lemma conj10: forall (x : lst) (lf4 : lst) (lf3 : lst), @eq lst (rev2 x lf3) (append lf4 lf3).
Lemma conj13: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (append (rev2 x lf5) lf3).
Lemma conj14: forall (lf5 : lst) (x : lst) (lf3 : lst), @eq lst (rev2 x lf3) (append (rev2 x lf5) lf3).
Lemma conj15: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst lf2 (append (rev2 x Nil) lf3).
Lemma conj16: forall (x : lst) (lf3 : lst), @eq lst (rev2 x lf3) (append (rev2 x Nil) lf3).
Lemma conj18: forall (lf5 : lst) (x : lst) (lf1 : lst) (n : nat), @eq lst (rev2 x (Cons n lf5)) lf1.
Lemma conj20: forall (x : lst) (lf1 : lst) (n : nat), @eq lst (rev2 x (Cons n Nil)) lf1.
Lemma conj25: forall (lf2 : lst) (lf5 : lst) (lf4 : lst) (n : nat), @eq lst lf2 (append lf4 (Cons n lf5)).
Lemma conj26: forall (lf5 : lst) (x : lst) (lf4 : lst) (n : nat), @eq lst (rev2 x (Cons n lf5)) (append lf4 (Cons n lf5)).
Lemma conj27: forall (lf2 : lst) (lf4 : lst) (n : nat), @eq lst lf2 (append lf4 (Cons n Nil)).
Lemma conj28: forall (x : lst) (lf4 : lst) (n : nat), @eq lst (rev2 x (Cons n Nil)) (append lf4 (Cons n Nil)).
Lemma conj29: forall (lf2 : lst) (lf5 : lst) (x : lst) (n : nat), @eq lst lf2 (append (rev2 x lf5) (Cons n lf5)).
Lemma conj30: forall (lf5 : lst) (x : lst) (n : nat), @eq lst (rev2 x (Cons n lf5)) (append (rev2 x lf5) (Cons n lf5)).
Lemma conj31: forall (lf2 : lst) (x : lst) (n : nat), @eq lst lf2 (append (rev2 x Nil) (Cons n Nil)).
Lemma conj32: forall (x : lst) (n : nat), @eq lst (rev2 x (Cons n Nil)) (append (rev2 x Nil) (Cons n Nil)).
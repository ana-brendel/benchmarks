File Information
- File name: list_rev2_append
- Original Directory: /home/anabrendel/lfind/benchmarks/lia/sources/lia_lf_list_rev2_append-rev2_append-42-rev2_append_aux
- LFind Directory: /home/anabrendel/lfind/benchmarks/lia/sources/_lfind_lia_lf_list_rev2_append-rev2_append-42-rev2_append_aux
- Namespace: adtind
- Proof name: rev2_append
- Theorem: Theorem rev2_append: forall x0 a0 : lst, @eq lst (rev2 x0 a0) (append (rev2 x0 Nil) a0).
- Declarations: 
From lfind Require Import LFind.

Proof Context
* Goal State: @eq lst (append (rev2 x Nil) (append (Cons n Nil) a))
  (append (rev2 x (Cons n Nil)) a)

* Hypothesis:
IHx : forall a0 : lst, @eq lst (rev2 x a0) (append (rev2 x Nil) a0)
x : lst
n : nat
a : lst

* Types:
Set
Prop
lst
nat

* Polymorphic Types:


* Variables:
x : lst
n : nat
a : lst

* Terms:
forall a0 : lst, @eq lst (rev2 x a0) (append (rev2 x Nil) a0) : Prop
rev2 x (Cons n Nil) : lst
x : lst
rev2 x Nil : lst
rev2 x _UNBOUND_REL_1 : lst
@eq lst (append (rev2 x Nil) (append (Cons n Nil) a))
  (append (rev2 x (Cons n Nil)) a) : Prop
append (rev2 x (Cons n Nil)) a : lst
nat : Set
append (rev2 x Nil) (append (Cons n Nil) a) : lst
append (rev2 x Nil) _UNBOUND_REL_1 : lst
append (Cons n Nil) a : lst
lst : Set
Cons n Nil : lst
n : nat
Nil : lst
a : lst
@eq lst (rev2 x _UNBOUND_REL_1) (append (rev2 x Nil) _UNBOUND_REL_1) : Prop

* Functions:
append  : forall (_ : lst) (_ : lst), lst
rev2  : forall (_ : lst) (_ : lst), lst
Cons  : forall (_ : nat) (_ : lst), lst
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : lst = append (Cons n Nil) a
lf7 : lst = Nil
lf1 : lst = append (rev2 x Nil) (append (Cons n Nil) a)
lf4 : lst = rev2 x (Cons n Nil)
lf5 : lst = Cons n Nil
lf2 : lst = append (rev2 x (Cons n Nil)) a
lf6 : lst = rev2 x Nil

Generalizations:
Lemma conj1: forall (lf2 : lst) (lf1 : lst), @eq lst lf1 lf2.
Lemma conj3: forall (lf4 : lst) (lf1 : lst) (a : lst), @eq lst lf1 (append lf4 a).
Lemma conj11: forall (lf5 : lst) (x : lst) (lf1 : lst) (a : lst), @eq lst lf1 (append (rev2 x lf5) a).
Lemma conj15: forall (x : lst) (lf1 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst lf1 (append (rev2 x (Cons n lf7)) a).
Lemma conj17: forall (lf6 : lst) (lf2 : lst) (lf3 : lst), @eq lst (append lf6 lf3) lf2.
Lemma conj18: forall (lf2 : lst) (x : lst) (lf7 : lst) (lf3 : lst), @eq lst (append (rev2 x lf7) lf3) lf2.
Lemma conj19: forall (lf6 : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (append lf6 lf3) (append lf4 a).
Lemma conj20: forall (x : lst) (lf4 : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (append (rev2 x lf7) lf3) (append lf4 a).
Lemma conj27: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (append lf6 lf3) (append (rev2 x lf5) a).
Lemma conj28: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst) (lf3 : lst), @eq lst (append (rev2 x lf7) lf3) (append (rev2 x lf5) a).
Lemma conj31: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (append lf6 lf3) (append (rev2 x (Cons n lf7)) a).
Lemma conj32: forall (x : lst) (lf7 : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (append (rev2 x lf7) lf3) (append (rev2 x (Cons n lf7)) a).
Lemma conj47: forall (x : lst) (lf1 : lst) (n : nat) (a : lst), @eq lst lf1 (append (rev2 x (Cons n Nil)) a).
Lemma conj50: forall (lf2 : lst) (x : lst) (lf3 : lst), @eq lst (append (rev2 x Nil) lf3) lf2.
Lemma conj52: forall (x : lst) (lf4 : lst) (a : lst) (lf3 : lst), @eq lst (append (rev2 x Nil) lf3) (append lf4 a).
Lemma conj60: forall (lf5 : lst) (x : lst) (a : lst) (lf3 : lst), @eq lst (append (rev2 x Nil) lf3) (append (rev2 x lf5) a).
Lemma conj63: forall (lf6 : lst) (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (append lf6 lf3) (append (rev2 x (Cons n Nil)) a).
Lemma conj64: forall (x : lst) (n : nat) (a : lst) (lf3 : lst), @eq lst (append (rev2 x Nil) lf3) (append (rev2 x (Cons n Nil)) a).
Lemma conj81: forall (lf6 : lst) (lf2 : lst) (lf5 : lst) (a : lst), @eq lst (append lf6 (append lf5 a)) lf2.
Lemma conj82: forall (lf2 : lst) (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (append (rev2 x lf7) (append lf5 a)) lf2.
Lemma conj83: forall (lf6 : lst) (lf5 : lst) (lf4 : lst) (a : lst), @eq lst (append lf6 (append lf5 a)) (append lf4 a).
Lemma conj84: forall (lf5 : lst) (x : lst) (lf4 : lst) (lf7 : lst) (a : lst), @eq lst (append (rev2 x lf7) (append lf5 a)) (append lf4 a).
Lemma conj85: forall (lf6 : lst) (lf2 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (append lf6 (append (Cons n lf7) a)) lf2.
Lemma conj86: forall (lf2 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (append (rev2 x lf7) (append (Cons n lf7) a)) lf2.
Lemma conj87: forall (lf6 : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (append lf6 (append (Cons n lf7) a)) (append lf4 a).
Lemma conj88: forall (x : lst) (lf4 : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (append (rev2 x lf7) (append (Cons n lf7) a)) (append lf4 a).
Lemma conj91: forall (lf6 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (append lf6 (append lf5 a)) (append (rev2 x lf5) a).
Lemma conj92: forall (lf5 : lst) (x : lst) (lf7 : lst) (a : lst), @eq lst (append (rev2 x lf7) (append lf5 a)) (append (rev2 x lf5) a).
Lemma conj95: forall (lf6 : lst) (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (append lf6 (append (Cons n lf7) a)) (append (rev2 x (Cons n lf7)) a).
Lemma conj96: forall (x : lst) (lf7 : lst) (n : nat) (a : lst), @eq lst (append (rev2 x lf7) (append (Cons n lf7) a))
  (append (rev2 x (Cons n lf7)) a).
Lemma conj114: forall (lf2 : lst) (lf5 : lst) (x : lst) (a : lst), @eq lst (append (rev2 x Nil) (append lf5 a)) lf2.
Lemma conj116: forall (lf5 : lst) (x : lst) (lf4 : lst) (a : lst), @eq lst (append (rev2 x Nil) (append lf5 a)) (append lf4 a).
Lemma conj117: forall (lf6 : lst) (lf2 : lst) (n : nat) (a : lst), @eq lst (append lf6 (append (Cons n Nil) a)) lf2.
Lemma conj118: forall (lf2 : lst) (x : lst) (n : nat) (a : lst), @eq lst (append (rev2 x Nil) (append (Cons n Nil) a)) lf2.
Lemma conj119: forall (lf6 : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (append lf6 (append (Cons n Nil) a)) (append lf4 a).
Lemma conj120: forall (x : lst) (lf4 : lst) (n : nat) (a : lst), @eq lst (append (rev2 x Nil) (append (Cons n Nil) a)) (append lf4 a).
Lemma conj124: forall (lf5 : lst) (x : lst) (a : lst), @eq lst (append (rev2 x Nil) (append lf5 a)) (append (rev2 x lf5) a).
Lemma conj127: forall (lf6 : lst) (x : lst) (n : nat) (a : lst), @eq lst (append lf6 (append (Cons n Nil) a)) (append (rev2 x (Cons n Nil)) a).
Lemma conj128: forall (x : lst) (n : nat) (a : lst), @eq lst (append (rev2 x Nil) (append (Cons n Nil) a))
  (append (rev2 x (Cons n Nil)) a).
File Information
- File name: defs
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/lemma_le_n_S_180
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/_lfind_lemma_le_n_S_180
- Namespace: TreeAutomata
- Proof name: taille_aux_1
- Theorem: Theorem taille_aux_1: forall (a0 : ad) (la0 ls0 : prec_list),
le (S O) (taille_0 (prec_cons a0 la0 ls0)).
- Declarations: 
From lfind Require Import LFind.
Require Import Bool.
Require Import Arith.
Require Import ZArith.
From IntMap Require Import Allmaps.
Require Import EqNat.
From TreeAutomataCoqGym Require Import bases.

Proof Context
* Goal State: le (S O) (S (Init.Nat.add (taille_0 la) (taille_0 ls)))

* Hypothesis:
la : prec_list
ls : prec_list
a : ad

* Types:
Set
Prop
nat
prec_list

* Polymorphic Types:


* Variables:
la : prec_list
ls : prec_list

* Terms:
prec_list : Set
le (S O) (S (Init.Nat.add (taille_0 la) (taille_0 ls))) : Prop
S O : nat
taille_0 la : nat
la : prec_list
ad : Set
ls : prec_list
taille_0 ls : nat
S (Init.Nat.add (taille_0 la) (taille_0 ls)) : nat
Init.Nat.add (taille_0 la) (taille_0 ls) : nat
O : nat

* Functions:
taille_0  : forall _ : prec_list, nat
Init.Nat.add  : forall (_ : nat) (_ : nat), nat
le  : forall (_ : nat) (_ : nat), Prop
S  : forall _ : nat, nat

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : nat = taille_0 la
lf1 : nat = S (Init.Nat.add (taille_0 la) (taille_0 ls))
lf4 : nat = taille_0 ls
lf5 : nat = S O
lf2 : nat = Init.Nat.add (taille_0 la) (taille_0 ls)
lf6 : nat = O

Generalizations:
Lemma conj1: forall (lf5 : nat) (lf1 : nat), le lf5 lf1.
Lemma conj5: forall (lf6 : nat) (lf1 : nat), le (S lf6) lf1.
Lemma conj6: forall (lf1 : nat), le (S O) lf1.
Lemma conj17: forall (lf2 : nat) (lf5 : nat), le lf5 (S lf2).
Lemma conj19: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 lf4)).
Lemma conj21: forall (lf6 : nat) (lf2 : nat), le (S lf6) (S lf2).
Lemma conj22: forall (lf2 : nat), le (S O) (S lf2).
Lemma conj23: forall (lf6 : nat) (lf4 : nat) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 lf4)).
Lemma conj24: forall (lf4 : nat) (lf3 : nat), le (S O) (S (Init.Nat.add lf3 lf4)).
Lemma conj27: forall (lf5 : nat) (ls : prec_list) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj31: forall (lf6 : nat) (ls : prec_list) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj32: forall (ls : prec_list) (lf3 : nat), le (S O) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj51: forall (lf5 : nat) (la : prec_list) (lf4 : nat), le lf5 (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj55: forall (lf6 : nat) (la : prec_list) (lf4 : nat), le (S lf6) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj56: forall (la : prec_list) (lf4 : nat), le (S O) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj59: forall (lf5 : nat) (la : prec_list) (ls : prec_list), le lf5 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj63: forall (lf6 : nat) (la : prec_list) (ls : prec_list), le (S lf6) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj64: forall (la : prec_list) (ls : prec_list), le (S O) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).


<---VALIDITY CHECKS--->
Time elapsed: 77 seconds
Valid:
Lemma conj64: forall (la : prec_list) (ls : prec_list), le (S O) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj56: forall (la : prec_list) (lf4 : nat), le (S O) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj32: forall (ls : prec_list) (lf3 : nat), le (S O) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj24: forall (lf4 : nat) (lf3 : nat), le (S O) (S (Init.Nat.add lf3 lf4)).
Lemma conj22: forall (lf2 : nat), le (S O) (S lf2).

Invalid:
Lemma conj63: forall (lf6 : nat) (la : prec_list) (ls : prec_list), le (S lf6) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj59: forall (lf5 : nat) (la : prec_list) (ls : prec_list), le lf5 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj55: forall (lf6 : nat) (la : prec_list) (lf4 : nat), le (S lf6) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj51: forall (lf5 : nat) (la : prec_list) (lf4 : nat), le lf5 (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj31: forall (lf6 : nat) (ls : prec_list) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj27: forall (lf5 : nat) (ls : prec_list) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj23: forall (lf6 : nat) (lf4 : nat) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 lf4)).
Lemma conj21: forall (lf6 : nat) (lf2 : nat), le (S lf6) (S lf2).
Lemma conj19: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 lf4)).
Lemma conj17: forall (lf2 : nat) (lf5 : nat), le lf5 (S lf2).
Lemma conj6: forall (lf1 : nat), le (S O) lf1.
Lemma conj5: forall (lf6 : nat) (lf1 : nat), le (S lf6) lf1.
Lemma conj1: forall (lf5 : nat) (lf1 : nat), le lf5 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 85 seconds
Generalizations:
Lemma conj63: forall (lf6 : nat) (la : prec_list) (ls : prec_list), le (S lf6) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj59: forall (lf5 : nat) (la : prec_list) (ls : prec_list), le lf5 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj55: forall (lf6 : nat) (la : prec_list) (lf4 : nat), le (S lf6) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj51: forall (lf5 : nat) (la : prec_list) (lf4 : nat), le lf5 (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj31: forall (lf6 : nat) (ls : prec_list) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj27: forall (lf5 : nat) (ls : prec_list) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj23: forall (lf6 : nat) (lf4 : nat) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 lf4)).
Lemma conj21: forall (lf6 : nat) (lf2 : nat), le (S lf6) (S lf2).
Lemma conj19: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 lf4)).
Lemma conj17: forall (lf2 : nat) (lf5 : nat), le lf5 (S lf2).
Lemma conj6: forall (lf1 : nat), le (S O) lf1.
Lemma conj5: forall (lf6 : nat) (lf1 : nat), le (S lf6) lf1.
Lemma conj1: forall (lf5 : nat) (lf1 : nat), le lf5 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 106 seconds
Valid:

Invalid:
Lemma conj1: forall (lf5 : nat) (lf1 : nat), le lf5 lf1.
Lemma conj5: forall (lf6 : nat) (lf1 : nat), le (S lf6) lf1.
Lemma conj6: forall (lf1 : nat), le (S O) lf1.
Lemma conj17: forall (lf2 : nat) (lf5 : nat), le lf5 (S lf2).
Lemma conj19: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 lf4)).
Lemma conj21: forall (lf6 : nat) (lf2 : nat), le (S lf6) (S lf2).
Lemma conj23: forall (lf6 : nat) (lf4 : nat) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 lf4)).
Lemma conj27: forall (lf5 : nat) (ls : prec_list) (lf3 : nat), le lf5 (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj31: forall (lf6 : nat) (ls : prec_list) (lf3 : nat), le (S lf6) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma conj51: forall (lf5 : nat) (la : prec_list) (lf4 : nat), le lf5 (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj55: forall (lf6 : nat) (la : prec_list) (lf4 : nat), le (S lf6) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma conj59: forall (lf5 : nat) (la : prec_list) (ls : prec_list), le lf5 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj63: forall (lf6 : nat) (la : prec_list) (ls : prec_list), le (S lf6) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).


<---CREATE SKETCHES--->
Time elapsed: 106 seconds
Sketches:
Sketch conj5_sketch0 : le (##hole##) lf1
Sketch conj5_term_sketch0 : @eq nat (S lf6) (##hole##)
Sketch conj6_sketch0 : le (##hole##) lf1
Sketch conj6_sketch1 : le (S (##hole##)) lf1
Sketch conj6_term_sketch0 : @eq nat (S O) (##hole##)
Sketch conj6_term_sketch1 : @eq nat O (##hole##)
Sketch conj17_sketch0 : le lf5 (##hole##)
Sketch conj17_term_sketch0 : @eq nat (S lf2) (##hole##)
Sketch conj19_sketch0 : le lf5 (##hole##)
Sketch conj19_sketch1 : le lf5 (S (##hole##))
Sketch conj19_term_sketch0 : @eq nat (S (Init.Nat.add lf3 lf4)) (##hole##)
Sketch conj19_term_sketch1 : @eq nat (Init.Nat.add lf3 lf4) (##hole##)
Sketch conj21_sketch0 : le (S lf6) (##hole##)
Sketch conj21_sketch1 : le (##hole##) (S lf2)
Sketch conj21_term_sketch0 : @eq nat (S lf2) (##hole##)
Sketch conj21_term_sketch1 : @eq nat (S lf6) (##hole##)
Sketch conj23_sketch0 : le (S lf6) (##hole##)
Sketch conj23_sketch1 : le (##hole##) (S (Init.Nat.add lf3 lf4))
Sketch conj23_sketch2 : le (S lf6) (S (##hole##))
Sketch conj23_term_sketch0 : @eq nat (S (Init.Nat.add lf3 lf4)) (##hole##)
Sketch conj23_term_sketch1 : @eq nat (S lf6) (##hole##)
Sketch conj23_term_sketch2 : @eq nat (Init.Nat.add lf3 lf4) (##hole##)
Sketch conj27_sketch0 : le lf5 (##hole##)
Sketch conj27_sketch1 : le lf5 (S (Init.Nat.add lf3 (##hole##)))
Sketch conj27_sketch2 : le lf5 (S (##hole##))
Sketch conj27_term_sketch0 : @eq nat (S (Init.Nat.add lf3 (taille_0 ls))) (##hole##)
Sketch conj27_term_sketch1 : @eq nat (taille_0 ls) (##hole##)
Sketch conj27_term_sketch2 : @eq nat (Init.Nat.add lf3 (taille_0 ls)) (##hole##)
Sketch conj31_sketch0 : le (S lf6) (##hole##)
Sketch conj31_sketch1 : le (##hole##) (S (Init.Nat.add lf3 (taille_0 ls)))
Sketch conj31_sketch2 : le (S lf6) (S (Init.Nat.add lf3 (##hole##)))
Sketch conj31_sketch3 : le (S lf6) (S (##hole##))
Sketch conj31_term_sketch0 : @eq nat (S (Init.Nat.add lf3 (taille_0 ls))) (##hole##)
Sketch conj31_term_sketch1 : @eq nat (S lf6) (##hole##)
Sketch conj31_term_sketch2 : @eq nat (taille_0 ls) (##hole##)
Sketch conj31_term_sketch3 : @eq nat (Init.Nat.add lf3 (taille_0 ls)) (##hole##)
Sketch conj51_sketch0 : le lf5 (S (Init.Nat.add (##hole##) lf4))
Sketch conj51_sketch1 : le lf5 (S (##hole##))
Sketch conj51_sketch2 : le lf5 (##hole##)
Sketch conj51_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj51_term_sketch1 : @eq nat (Init.Nat.add (taille_0 la) lf4) (##hole##)
Sketch conj51_term_sketch2 : @eq nat (S (Init.Nat.add (taille_0 la) lf4)) (##hole##)
Sketch conj55_sketch0 : le (S lf6) (S (Init.Nat.add (##hole##) lf4))
Sketch conj55_sketch1 : le (##hole##) (S (Init.Nat.add (taille_0 la) lf4))
Sketch conj55_sketch2 : le (S lf6) (S (##hole##))
Sketch conj55_sketch3 : le (S lf6) (##hole##)
Sketch conj55_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj55_term_sketch1 : @eq nat (S lf6) (##hole##)
Sketch conj55_term_sketch2 : @eq nat (Init.Nat.add (taille_0 la) lf4) (##hole##)
Sketch conj55_term_sketch3 : @eq nat (S (Init.Nat.add (taille_0 la) lf4)) (##hole##)
Sketch conj59_sketch0 : le lf5 (S (Init.Nat.add (##hole##) (taille_0 ls)))
Sketch conj59_sketch1 : le lf5 (S (Init.Nat.add (taille_0 la) (##hole##)))
Sketch conj59_sketch2 : le lf5 (##hole##)
Sketch conj59_sketch3 : le lf5 (S (##hole##))
Sketch conj59_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj59_term_sketch1 : @eq nat (taille_0 ls) (##hole##)
Sketch conj59_term_sketch2 : @eq nat (S (Init.Nat.add (taille_0 la) (taille_0 ls))) (##hole##)
Sketch conj59_term_sketch3 : @eq nat (Init.Nat.add (taille_0 la) (taille_0 ls)) (##hole##)
Sketch conj63_sketch0 : le (S lf6) (S (Init.Nat.add (##hole##) (taille_0 ls)))
Sketch conj63_sketch1 : le (##hole##) (S (Init.Nat.add (taille_0 la) (taille_0 ls)))
Sketch conj63_sketch2 : le (S lf6) (S (Init.Nat.add (taille_0 la) (##hole##)))
Sketch conj63_sketch3 : le (S lf6) (##hole##)
Sketch conj63_sketch4 : le (S lf6) (S (##hole##))
Sketch conj63_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj63_term_sketch1 : @eq nat (S lf6) (##hole##)
Sketch conj63_term_sketch2 : @eq nat (taille_0 ls) (##hole##)
Sketch conj63_term_sketch3 : @eq nat (S (Init.Nat.add (taille_0 la) (taille_0 ls))) (##hole##)
Sketch conj63_term_sketch4 : @eq nat (Init.Nat.add (taille_0 la) (taille_0 ls)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 750 seconds
Problems per Sketch:
Sketch conj59_term_sketch2 --> Problem  synth_29
Sketch conj63_sketch4 --> Problem  synth_14
Sketch conj23_sketch0 --> Problem  synth_11
Sketch conj59_term_sketch1 --> Problem  synth_17
Sketch conj59_sketch1 --> Problem  synth_28
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj17_term_sketch0 --> Problem  synth_7
Sketch conj21_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch0 --> Problem  synth_22
Sketch conj31_sketch0 --> Problem  synth_11
Sketch conj31_term_sketch3 --> Problem  synth_18
Sketch conj55_sketch3 --> Problem  synth_11
Sketch conj31_term_sketch1 --> Problem  synth_2
Sketch conj23_sketch1 --> Problem  synth_13
Sketch conj5_term_sketch0 --> Problem  synth_2
Sketch conj55_sketch1 --> Problem  synth_26
Sketch conj59_sketch3 --> Problem  synth_8
Sketch conj27_term_sketch2 --> Problem  synth_18
Sketch conj63_term_sketch4 --> Problem  synth_30
Sketch conj59_sketch2 --> Problem  synth_6
Sketch conj23_term_sketch2 --> Problem  synth_10
Sketch conj21_sketch0 --> Problem  synth_11
Sketch conj19_term_sketch1 --> Problem  synth_10
Sketch conj51_term_sketch2 --> Problem  synth_24
Sketch conj27_sketch2 --> Problem  synth_8
Sketch conj31_sketch2 --> Problem  synth_20
Sketch conj27_sketch1 --> Problem  synth_15
Sketch conj51_sketch0 --> Problem  synth_21
Sketch conj31_sketch3 --> Problem  synth_14
Sketch conj23_term_sketch0 --> Problem  synth_9
Sketch conj19_term_sketch0 --> Problem  synth_9
Sketch conj63_term_sketch1 --> Problem  synth_2
Sketch conj51_term_sketch1 --> Problem  synth_23
Sketch conj5_sketch0 --> Problem  synth_1
Sketch conj51_term_sketch0 --> Problem  synth_22
Sketch conj55_term_sketch0 --> Problem  synth_22
Sketch conj27_term_sketch1 --> Problem  synth_17
Sketch conj23_sketch2 --> Problem  synth_14
Sketch conj19_sketch0 --> Problem  synth_6
Sketch conj17_sketch0 --> Problem  synth_6
Sketch conj63_sketch2 --> Problem  synth_33
Sketch conj55_term_sketch1 --> Problem  synth_2
Sketch conj59_sketch0 --> Problem  synth_27
Sketch conj23_term_sketch1 --> Problem  synth_2
Sketch conj63_term_sketch3 --> Problem  synth_29
Sketch conj63_sketch0 --> Problem  synth_31
Sketch conj55_term_sketch3 --> Problem  synth_24
Sketch conj63_sketch3 --> Problem  synth_11
Sketch conj59_term_sketch0 --> Problem  synth_22
Sketch conj31_term_sketch0 --> Problem  synth_16
Sketch conj59_term_sketch3 --> Problem  synth_30
Sketch conj51_sketch1 --> Problem  synth_8
Sketch conj55_sketch0 --> Problem  synth_25
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj63_sketch1 --> Problem  synth_32
Sketch conj27_sketch0 --> Problem  synth_6
Sketch conj21_term_sketch0 --> Problem  synth_7
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj19_sketch1 --> Problem  synth_8
Sketch conj21_sketch1 --> Problem  synth_12
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj31_sketch1 --> Problem  synth_19
Sketch conj31_term_sketch2 --> Problem  synth_17
Sketch conj55_term_sketch2 --> Problem  synth_23
Sketch conj27_term_sketch0 --> Problem  synth_16
Sketch conj51_sketch2 --> Problem  synth_6
Sketch conj63_term_sketch2 --> Problem  synth_17
Sketch conj55_sketch2 --> Problem  synth_14


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 973 seconds

Problem: synth_28

Problem: synth_17

Problem: synth_29

Problem: synth_26

Problem: synth_9
 Nat.add lf4 (Nat.add lf3 (S O))
 Nat.add lf3 (Nat.add lf4 (S O))
 S (Nat.add lf4 lf3)
 S (Nat.add lf3 lf4)
 Nat.add lf4 (S lf3)
 Nat.add lf3 (S lf4)

Problem: synth_30

Problem: synth_11

Problem: synth_1
 S O

Problem: synth_15

Problem: synth_31

Problem: synth_14

Problem: synth_8

Problem: synth_12
 S O

Problem: synth_5
 O

Problem: synth_2
 S (Nat.add lf6 lf6)
 S (Nat.add lf6 O)
 Nat.add lf6 (S lf6)
 Nat.add lf6 (S O)
 S lf6
 S O

Problem: synth_22

Problem: synth_20

Problem: synth_18

Problem: synth_21

Problem: synth_25

Problem: synth_13
 S O

Problem: synth_6

Problem: synth_7
 S (Nat.add (Nat.add lf2 O) O)
 Nat.add (Nat.add lf2 O) (S O)
 Nat.add (Nat.add lf2 (S O)) O
 S (Nat.add lf2 O)
 Nat.add lf2 (S O)
 S lf2

Problem: synth_4
 S O

Problem: synth_23

Problem: synth_27

Problem: synth_16

Problem: synth_19

Problem: synth_10
 Nat.add (Nat.add lf4 lf3) O
 Nat.add (Nat.add lf3 lf4) O
 Nat.add lf4 (Nat.add lf3 O)
 Nat.add lf3 (Nat.add lf4 O)
 Nat.add lf4 lf3
 Nat.add lf3 lf4

Problem: synth_33

Problem: synth_24

Problem: synth_3
 O

Problem: synth_32

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 973 seconds
Lemmas:
Lemma candidate_1: forall (ls : prec_list) (la : prec_list), le (S O) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma candidate_2: forall (lf4 : nat) (la : prec_list), le (S O) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma candidate_3: forall (lf3 : nat) (ls : prec_list), le (S O) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma candidate_4: forall (lf3 : nat) (lf4 : nat), le (S O) (S (Init.Nat.add lf3 lf4)).
Lemma candidate_5: forall (lf2 : nat), le (S O) (S lf2).
Lemma candidate_6: forall (lf1 : nat), le (S O) lf1.
Lemma candidate_7: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 lf6)).
Lemma candidate_8: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_9: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S lf6)).
Lemma candidate_10: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_11: forall (lf6 : nat), @eq nat (S lf6) (S lf6).
Lemma candidate_12: forall (lf6 : nat), @eq nat (S lf6) (S O).
Lemma candidate_13: forall (lf1 : nat), le (S O) lf1.
Lemma candidate_14: forall (lf1 : nat), le (S (O)) lf1.
Lemma candidate_15: @eq nat (S O) (S O).
Lemma candidate_16: @eq nat O (O).
Lemma candidate_17: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_18: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_19: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_20: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_21: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_22: forall (lf2 : nat), @eq nat (S lf2) (S lf2).
Lemma candidate_23: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf4 (Nat.add lf3 (S O))).
Lemma candidate_24: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf3 (Nat.add lf4 (S O))).
Lemma candidate_25: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (S (Nat.add lf4 lf3)).
Lemma candidate_26: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (S (Nat.add lf3 lf4)).
Lemma candidate_27: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf4 (S lf3)).
Lemma candidate_28: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf3 (S lf4)).
Lemma candidate_29: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add (Nat.add lf4 lf3) O).
Lemma candidate_30: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add (Nat.add lf3 lf4) O).
Lemma candidate_31: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf4 (Nat.add lf3 O)).
Lemma candidate_32: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf3 (Nat.add lf4 O)).
Lemma candidate_33: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf4 lf3).
Lemma candidate_34: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf3 lf4).
Lemma candidate_35: forall (lf2 : nat), le (S O) (S lf2).
Lemma candidate_36: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_37: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_38: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_39: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_40: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_41: forall (lf2 : nat), @eq nat (S lf2) (S lf2).
Lemma candidate_42: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 lf6)).
Lemma candidate_43: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_44: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S lf6)).
Lemma candidate_45: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_46: forall (lf6 : nat), @eq nat (S lf6) (S lf6).
Lemma candidate_47: forall (lf6 : nat), @eq nat (S lf6) (S O).
Lemma candidate_48: forall (lf3 : nat) (lf4 : nat), le (S O) (S (Init.Nat.add lf3 lf4)).
Lemma candidate_49: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf4 (Nat.add lf3 (S O))).
Lemma candidate_50: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf3 (Nat.add lf4 (S O))).
Lemma candidate_51: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (S (Nat.add lf4 lf3)).
Lemma candidate_52: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (S (Nat.add lf3 lf4)).
Lemma candidate_53: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf4 (S lf3)).
Lemma candidate_54: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf3 (S lf4)).
Lemma candidate_55: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 lf6)).
Lemma candidate_56: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_57: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S lf6)).
Lemma candidate_58: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_59: forall (lf6 : nat), @eq nat (S lf6) (S lf6).
Lemma candidate_60: forall (lf6 : nat), @eq nat (S lf6) (S O).
Lemma candidate_61: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add (Nat.add lf4 lf3) O).
Lemma candidate_62: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add (Nat.add lf3 lf4) O).
Lemma candidate_63: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf4 (Nat.add lf3 O)).
Lemma candidate_64: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf3 (Nat.add lf4 O)).
Lemma candidate_65: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf4 lf3).
Lemma candidate_66: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf3 lf4).
Lemma candidate_67: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 lf6)).
Lemma candidate_68: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_69: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S lf6)).
Lemma candidate_70: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_71: forall (lf6 : nat), @eq nat (S lf6) (S lf6).
Lemma candidate_72: forall (lf6 : nat), @eq nat (S lf6) (S O).
Lemma candidate_73: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 lf6)).
Lemma candidate_74: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_75: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S lf6)).
Lemma candidate_76: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_77: forall (lf6 : nat), @eq nat (S lf6) (S lf6).
Lemma candidate_78: forall (lf6 : nat), @eq nat (S lf6) (S O).
Lemma candidate_79: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 lf6)).
Lemma candidate_80: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_81: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S lf6)).
Lemma candidate_82: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_83: forall (lf6 : nat), @eq nat (S lf6) (S lf6).
Lemma candidate_84: forall (lf6 : nat), @eq nat (S lf6) (S O).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1078 seconds
Duplicates removed: 52
Filtered by Quickchick: 5
Filtered by script: 8
Remaining: 19

Lemmas: 
Lemma candidate_5: forall (lf2 : nat), le (S O) (S lf2).
Lemma candidate_21: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_20: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_10: forall (lf6 : nat), @eq nat (S lf6) (Nat.add lf6 (S O)).
Lemma candidate_8: forall (lf6 : nat), @eq nat (S lf6) (S (Nat.add lf6 O)).
Lemma candidate_4: forall (lf3 : nat) (lf4 : nat), le (S O) (S (Init.Nat.add lf3 lf4)).
Lemma candidate_3: forall (lf3 : nat) (ls : prec_list), le (S O) (S (Init.Nat.add lf3 (taille_0 ls))).
Lemma candidate_2: forall (lf4 : nat) (la : prec_list), le (S O) (S (Init.Nat.add (taille_0 la) lf4)).
Lemma candidate_19: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_18: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_17: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_33: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf4 lf3).
Lemma candidate_27: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf4 (S lf3)).
Lemma candidate_25: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (S (Nat.add lf4 lf3)).
Lemma candidate_32: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf3 (Nat.add lf4 O)).
Lemma candidate_31: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add lf4 (Nat.add lf3 O)).
Lemma candidate_29: forall (lf3 : nat) (lf4 : nat), @eq nat (Init.Nat.add lf3 lf4) (Nat.add (Nat.add lf4 lf3) O).
Lemma candidate_24: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf3 (Nat.add lf4 (S O))).
Lemma candidate_23: forall (lf3 : nat) (lf4 : nat), @eq nat (S (Init.Nat.add lf3 lf4)) (Nat.add lf4 (Nat.add lf3 (S O))).
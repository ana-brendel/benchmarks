File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/base_tests/lemma_M1_semantics_1_267
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/base_tests/_lfind_lemma_M1_semantics_1_267
- Namespace: TreeAutomata
- Proof name: in_M1_id
- Theorem: Theorem in_M1_id: forall (A0 : Set) (a0 : A0) (x1 : ad) (e0 : A0)
  (_ : @ex ad
         (fun c : ad =>
          @eq (option A0) (MapGet A0 (M1 A0 x1 e0) c) (@Some A0 a0))),
@eq A0 a0 e0.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: @eq (option A) (MapGet A (M1 A x0 e) x0) (@Some A e)

* Hypothesis:
H0 : @eq (option A) (MapGet A (M1 A x0 e) x0) (@Some A a)
x0 : ad
H1 : @eq ad x x0
x : ad
H : @ex ad (fun c : ad => @eq (option A) (MapGet A (M1 A x e) c) (@Some A a))
A : Set
e : A
a : A

* Types:
Set
Prop
Type
option A
forall _ : ad, Prop
ad
A
Map A

* Polymorphic Types:
option A

* Variables:
x0 : ad
x : ad
A : Set
e : A
a : A

* Terms:
M1 A x0 e : Map A
x0 : ad
@eq (option A) (MapGet A (M1 A x e) _UNBOUND_REL_1) (@Some A a) : Prop
x : ad
A : Set
@eq ad x x0 : Prop
@Some A a : option A
Set : Type
M1 A x e : Map A
@Some A e : option A
@eq (option A) (MapGet A (M1 A x0 e) x0) (@Some A a) : Prop
@eq (option A) (MapGet A (M1 A x0 e) x0) (@Some A e) : Prop
fun c : ad => @eq (option A) (MapGet A (M1 A x e) c) (@Some A a) : forall _ : ad, Prop
@ex ad (fun c : ad => @eq (option A) (MapGet A (M1 A x e) c) (@Some A a)) : Prop
ad : Set
option A : Set
MapGet A (M1 A x e) _UNBOUND_REL_1 : option A
e : A
MapGet A (M1 A x0 e) x0 : option A
a : A

* Functions:
ex  : forall (A0 : Type) (_ : forall _ : A0, Prop), Prop
M1  : forall (A0 : Type) (_ : ad) (_ : A0), Map A0
MapGet  : forall (A0 : Type) (_ : Map A0) (_ : ad), option A0
@Some  : forall (A0 : Type) (_ : A0), option A0
option  : forall _ : Type, Type
@eq  : forall (A0 : Type) (_ : A0) (_ : A0), Prop

<---GENERALIZATION--->
Time elapsed: 1 seconds
Generalized Variables:
lf3 : option A = @Some A e
lf1 : option A = MapGet A (M1 A x0 e) x0
lf2 : Map A = M1 A x0 e

Generalizations:
Lemma conj1: forall {A} (lf1 : option A) (lf3 : option A), @eq (option A) lf1 lf3.
Lemma conj3: forall {A} (x0 : ad) (lf2 : Map A) (lf3 : option A), @eq (option A) (MapGet A lf2 x0) lf3.
Lemma conj4: forall {A} (x0 : ad) (e : A) (lf3 : option A), @eq (option A) (MapGet A (M1 A x0 e) x0) lf3.
Lemma conj5: forall {A} (lf1 : option A) (e : A), @eq (option A) lf1 (@Some A e).
Lemma conj7: forall {A} (x0 : ad) (lf2 : Map A) (e : A), @eq (option A) (MapGet A lf2 x0) (@Some A e).
Lemma conj8: forall {A} (x0 : ad) (e : A), @eq (option A) (MapGet A (M1 A x0 e) x0) (@Some A e).
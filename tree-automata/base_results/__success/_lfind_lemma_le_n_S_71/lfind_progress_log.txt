File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_le_n_S_71
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_le_n_S_71
- Namespace: TreeAutomata
- Proof name: max_le_Sr_0
- Theorem: Theorem max_le_Sr_0: forall n2 m0 : nat,
and (le (Init.Nat.max n2 m0) (Init.Nat.max n2 (S m0)))
  (le (Init.Nat.max (S n2) m0) (Init.Nat.max (S n2) (S m0))).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1)))

* Hypothesis:
H4 : le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) (S n1))
H0 : and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) (S n1)))
  (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) (S n1)))
H2 : le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) (S n1))
H1 : le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) (S n1))
m : nat
H : forall m0 : nat,
and (le (Init.Nat.max n0 m0) (Init.Nat.max n0 (S m0)))
  (le (Init.Nat.max (S n0) m0) (Init.Nat.max (S n0) (S m0)))
n1 : nat
H3 : le (Init.Nat.max n0 n1) (Init.Nat.max n0 (S n1))
n : nat
n0 : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
n1 : nat
n0 : nat

* Terms:
and
  (le (Init.Nat.max n0 _UNBOUND_REL_1) (Init.Nat.max n0 (S _UNBOUND_REL_1)))
  (le (Init.Nat.max (S n0) _UNBOUND_REL_1)
     (Init.Nat.max (S n0) (S _UNBOUND_REL_1))) : Prop
Init.Nat.max (S (S n0)) n1 : nat
S _UNBOUND_REL_1 : nat
Init.Nat.max n0 n1 : nat
Init.Nat.max (S (S n0)) (S n1) : nat
Init.Nat.max (S n0) _UNBOUND_REL_1 : nat
le (Init.Nat.max n0 n1) (Init.Nat.max n0 (S n1)) : Prop
forall m0 : nat,
and (le (Init.Nat.max n0 m0) (Init.Nat.max n0 (S m0)))
  (le (Init.Nat.max (S n0) m0) (Init.Nat.max (S n0) (S m0))) : Prop
n1 : nat
Init.Nat.max (S n0) (S _UNBOUND_REL_1) : nat
Init.Nat.max n0 (S _UNBOUND_REL_1) : nat
le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) (S n1)) : Prop
S (Init.Nat.max n0 n1) : nat
Init.Nat.max n0 (S n1) : nat
Init.Nat.max (S n0) n1 : nat
nat : Set
Init.Nat.max (S n0) (S n1) : nat
S (S n0) : nat
S n0 : nat
le (Init.Nat.max (S n0) _UNBOUND_REL_1)
  (Init.Nat.max (S n0) (S _UNBOUND_REL_1)) : Prop
and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) (S n1)))
  (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) (S n1))) : Prop
S n1 : nat
le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) (S n1)) : Prop
n0 : nat
Init.Nat.max n0 _UNBOUND_REL_1 : nat
le (Init.Nat.max n0 _UNBOUND_REL_1) (Init.Nat.max n0 (S _UNBOUND_REL_1)) : Prop
S (Init.Nat.max n0 (S n1)) : nat
le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))) : Prop

* Functions:
and  : forall (_ : Prop) (_ : Prop), Prop
le  : forall (_ : nat) (_ : nat), Prop
Init.Nat.max  : forall (_ : nat) (_ : nat), nat
S  : forall _ : nat, nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : nat = Init.Nat.max n0 (S n1)
lf1 : nat = S (Init.Nat.max n0 (S n1))
lf4 : nat = Init.Nat.max n0 n1
lf5 : nat = S n1
lf2 : nat = S (Init.Nat.max n0 n1)

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj6: forall (lf1 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) lf1.
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf2 (S lf3).
Lemma conj10: forall (lf4 : nat) (lf3 : nat), le (S lf4) (S lf3).
Lemma conj14: forall (n1 : nat) (n0 : nat) (lf3 : nat), le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 lf5)).
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma conj27: forall (lf2 : nat) (n1 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 (S n1))).
Lemma conj28: forall (lf4 : nat) (n1 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma conj30: forall (lf5 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).
Lemma conj32: forall (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))).


<---VALIDITY CHECKS--->
Time elapsed: 79 seconds
Valid:
Lemma conj32: forall (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))).

Invalid:
Lemma conj30: forall (lf5 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).
Lemma conj28: forall (lf4 : nat) (n1 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma conj27: forall (lf2 : nat) (n1 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 (S n1))).
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 lf5)).
Lemma conj14: forall (n1 : nat) (n0 : nat) (lf3 : nat), le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma conj10: forall (lf4 : nat) (lf3 : nat), le (S lf4) (S lf3).
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf2 (S lf3).
Lemma conj6: forall (lf1 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 189 seconds
Generalizations:
Lemma conj30_imp: forall (lf5 : nat) (n1 : nat) (n0 : nat), forall
  _ : and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))
        (and (le (Init.Nat.max n0 n1) (Init.Nat.max n0 lf5))
           (and
              (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) lf5))
              (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))
                 (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))
                    (le (Init.Nat.max (S (S n0)) n1)
                       (Init.Nat.max (S (S n0)) lf5)))))),
le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).
Lemma conj30: forall (lf5 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).
Lemma conj28_imp: forall (lf4 : nat) (n1 : nat) (n0 : nat), forall _ : le lf4 (Init.Nat.max n0 (S n1)),
le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma conj28: forall (lf4 : nat) (n1 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma conj27: forall (lf2 : nat) (n1 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 (S n1))).
Lemma conj26_imp: forall (lf5 : nat) (lf4 : nat) (n0 : nat), forall _ : le lf4 (Init.Nat.max n0 lf5), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 lf5)).
Lemma conj14_imp: forall (n1 : nat) (n0 : nat) (lf3 : nat), forall _ : le (Init.Nat.max n0 n1) lf3, le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma conj14: forall (n1 : nat) (n0 : nat) (lf3 : nat), le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma conj10_imp: forall (lf4 : nat) (lf3 : nat), forall _ : le lf4 lf3, le (S lf4) (S lf3).
Lemma conj10: forall (lf4 : nat) (lf3 : nat), le (S lf4) (S lf3).
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf2 (S lf3).
Lemma conj6: forall (lf1 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 228 seconds
Valid:
Lemma conj10_imp: forall (lf4 : nat) (lf3 : nat), forall _ : le lf4 lf3, le (S lf4) (S lf3).
Lemma conj14_imp: forall (n1 : nat) (n0 : nat) (lf3 : nat), forall _ : le (Init.Nat.max n0 n1) lf3, le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma conj26_imp: forall (lf5 : nat) (lf4 : nat) (n0 : nat), forall _ : le lf4 (Init.Nat.max n0 lf5), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma conj28_imp: forall (lf4 : nat) (n1 : nat) (n0 : nat), forall _ : le lf4 (Init.Nat.max n0 (S n1)),
le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma conj30_imp: forall (lf5 : nat) (n1 : nat) (n0 : nat), forall
  _ : and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))
        (and (le (Init.Nat.max n0 n1) (Init.Nat.max n0 lf5))
           (and
              (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) lf5))
              (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))
                 (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))
                    (le (Init.Nat.max (S (S n0)) n1)
                       (Init.Nat.max (S (S n0)) lf5)))))),
le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj6: forall (lf1 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) lf1.
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf2 (S lf3).
Lemma conj10: forall (lf4 : nat) (lf3 : nat), le (S lf4) (S lf3).
Lemma conj14: forall (n1 : nat) (n0 : nat) (lf3 : nat), le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 lf5)).
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma conj27: forall (lf2 : nat) (n1 : nat) (n0 : nat), le lf2 (S (Init.Nat.max n0 (S n1))).
Lemma conj28: forall (lf4 : nat) (n1 : nat) (n0 : nat), le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma conj30: forall (lf5 : nat) (n1 : nat) (n0 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).


<---CREATE SKETCHES--->
Time elapsed: 228 seconds
Sketches:
Sketch conj2_sketch0 : le (##hole##) lf1
Sketch conj2_term_sketch0 : @eq nat (S lf4) (##hole##)
Sketch conj6_sketch0 : le (##hole##) lf1
Sketch conj6_sketch1 : le (S (##hole##)) lf1
Sketch conj6_term_sketch0 : @eq nat (S (Init.Nat.max n0 n1)) (##hole##)
Sketch conj6_term_sketch1 : @eq nat (Init.Nat.max n0 n1) (##hole##)
Sketch conj9_sketch0 : le lf2 (##hole##)
Sketch conj9_term_sketch0 : @eq nat (S lf3) (##hole##)
Sketch conj10_sketch0 : le (##hole##) (S lf3)
Sketch conj10_sketch1 : le (S lf4) (##hole##)
Sketch conj10_term_sketch0 : @eq nat (S lf4) (##hole##)
Sketch conj10_term_sketch1 : @eq nat (S lf3) (##hole##)
Sketch conj14_sketch0 : le (##hole##) (S lf3)
Sketch conj14_sketch1 : le (S (##hole##)) (S lf3)
Sketch conj14_sketch2 : le (S (Init.Nat.max n0 n1)) (##hole##)
Sketch conj14_term_sketch0 : @eq nat (S (Init.Nat.max n0 n1)) (##hole##)
Sketch conj14_term_sketch1 : @eq nat (Init.Nat.max n0 n1) (##hole##)
Sketch conj14_term_sketch2 : @eq nat (S lf3) (##hole##)
Sketch conj25_sketch0 : le lf2 (S (##hole##))
Sketch conj25_sketch1 : le lf2 (##hole##)
Sketch conj25_term_sketch0 : @eq nat (Init.Nat.max n0 lf5) (##hole##)
Sketch conj25_term_sketch1 : @eq nat (S (Init.Nat.max n0 lf5)) (##hole##)
Sketch conj26_sketch0 : le (S lf4) (S (##hole##))
Sketch conj26_sketch1 : le (##hole##) (S (Init.Nat.max n0 lf5))
Sketch conj26_sketch2 : le (S lf4) (##hole##)
Sketch conj26_term_sketch0 : @eq nat (Init.Nat.max n0 lf5) (##hole##)
Sketch conj26_term_sketch1 : @eq nat (S lf4) (##hole##)
Sketch conj26_term_sketch2 : @eq nat (S (Init.Nat.max n0 lf5)) (##hole##)
Sketch conj27_sketch0 : le lf2 (S (##hole##))
Sketch conj27_sketch1 : le lf2 (S (Init.Nat.max n0 (##hole##)))
Sketch conj27_sketch2 : le lf2 (##hole##)
Sketch conj27_term_sketch0 : @eq nat (Init.Nat.max n0 (S n1)) (##hole##)
Sketch conj27_term_sketch1 : @eq nat (S n1) (##hole##)
Sketch conj27_term_sketch2 : @eq nat (S (Init.Nat.max n0 (S n1))) (##hole##)
Sketch conj28_sketch0 : le (S lf4) (S (##hole##))
Sketch conj28_sketch1 : le (##hole##) (S (Init.Nat.max n0 (S n1)))
Sketch conj28_sketch2 : le (S lf4) (S (Init.Nat.max n0 (##hole##)))
Sketch conj28_sketch3 : le (S lf4) (##hole##)
Sketch conj28_term_sketch0 : @eq nat (Init.Nat.max n0 (S n1)) (##hole##)
Sketch conj28_term_sketch1 : @eq nat (S lf4) (##hole##)
Sketch conj28_term_sketch2 : @eq nat (S n1) (##hole##)
Sketch conj28_term_sketch3 : @eq nat (S (Init.Nat.max n0 (S n1))) (##hole##)
Sketch conj30_sketch0 : le (##hole##) (S (Init.Nat.max n0 lf5))
Sketch conj30_sketch1 : le (S (Init.Nat.max n0 n1)) (S (##hole##))
Sketch conj30_sketch2 : le (S (##hole##)) (S (Init.Nat.max n0 lf5))
Sketch conj30_sketch3 : le (S (Init.Nat.max n0 n1)) (##hole##)
Sketch conj30_term_sketch0 : @eq nat (S (Init.Nat.max n0 n1)) (##hole##)
Sketch conj30_term_sketch1 : @eq nat (Init.Nat.max n0 lf5) (##hole##)
Sketch conj30_term_sketch2 : @eq nat (Init.Nat.max n0 n1) (##hole##)
Sketch conj30_term_sketch3 : @eq nat (S (Init.Nat.max n0 lf5)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 723 seconds
Problems per Sketch:
Sketch conj30_sketch0 --> Problem  synth_16
Sketch conj28_sketch0 --> Problem  synth_15
Sketch conj26_term_sketch1 --> Problem  synth_2
Sketch conj14_sketch2 --> Problem  synth_11
Sketch conj27_term_sketch1 --> Problem  synth_19
Sketch conj26_sketch2 --> Problem  synth_9
Sketch conj25_sketch1 --> Problem  synth_6
Sketch conj10_term_sketch1 --> Problem  synth_7
Sketch conj30_sketch3 --> Problem  synth_11
Sketch conj14_term_sketch2 --> Problem  synth_7
Sketch conj25_term_sketch1 --> Problem  synth_14
Sketch conj30_sketch1 --> Problem  synth_18
Sketch conj26_sketch0 --> Problem  synth_15
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch3 --> Problem  synth_14
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj28_term_sketch1 --> Problem  synth_2
Sketch conj9_sketch0 --> Problem  synth_6
Sketch conj26_term_sketch2 --> Problem  synth_14
Sketch conj14_term_sketch1 --> Problem  synth_5
Sketch conj26_sketch1 --> Problem  synth_16
Sketch conj30_sketch2 --> Problem  synth_21
Sketch conj28_term_sketch0 --> Problem  synth_18
Sketch conj10_sketch1 --> Problem  synth_9
Sketch conj6_sketch0 --> Problem  synth_1
Sketch conj9_term_sketch0 --> Problem  synth_7
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_11
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj27_term_sketch2 --> Problem  synth_11
Sketch conj6_sketch1 --> Problem  synth_3
Sketch conj30_term_sketch2 --> Problem  synth_5
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj28_sketch2 --> Problem  synth_20
Sketch conj28_sketch3 --> Problem  synth_9
Sketch conj25_sketch0 --> Problem  synth_12
Sketch conj26_term_sketch0 --> Problem  synth_13
Sketch conj30_term_sketch1 --> Problem  synth_13
Sketch conj28_sketch1 --> Problem  synth_4
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj27_sketch2 --> Problem  synth_6
Sketch conj28_term_sketch2 --> Problem  synth_19
Sketch conj14_sketch0 --> Problem  synth_8
Sketch conj27_sketch1 --> Problem  synth_17
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch0 --> Problem  synth_4
Sketch conj27_term_sketch0 --> Problem  synth_18
Sketch conj25_term_sketch0 --> Problem  synth_13
Sketch conj10_sketch0 --> Problem  synth_8
Sketch conj14_sketch1 --> Problem  synth_10


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 896 seconds

Problem: synth_20

Problem: synth_18
 match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end
 Nat.max n0 (Nat.max n0 (S n1))
 Nat.max n1 (Nat.max n0 (S n1))
 Nat.max n0 (Nat.max n1 (S n1))
 match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end
 Nat.max n0 (S n1)

Problem: synth_17

Problem: synth_21

Problem: synth_9

Problem: synth_13
 Nat.max lf5 (Nat.max n0 lf5)
 Nat.max n0 (Nat.max lf5 lf5)
 Nat.max lf5 (Nat.max n0 O)
 Nat.max n0 (Nat.max lf5 O)
 Nat.max lf5 n0
 Nat.max n0 lf5

Problem: synth_6

Problem: synth_11
 S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end
 S (Nat.max n0 (Nat.max n0 (S n1)))
 S (Nat.max n1 (Nat.max n0 (S n1)))
 S (Nat.max n0 (Nat.max n1 (S n1)))
 S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end
 S (Nat.max n0 (S n1))

Problem: synth_7
 S (Nat.max lf3 (S O))
 S (Nat.max lf3 lf3)
 S (Nat.max lf3 O)
 match lf3 with | O => S lf3 | S m' => S (Nat.max lf3 m') end
 Nat.max lf3 (S lf3)
 S lf3

Problem: synth_4
 match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end
 match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end
 match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end
 match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end
 S (Nat.max n1 n0)
 S (Nat.max n0 n1)

Problem: synth_1

Problem: synth_16
 match Nat.max lf5 O with | O => S n0 | S m' => S (Nat.max n0 m') end
 Nat.max lf5 (Nat.max n0 (S n0))
 Nat.max n0 (Nat.max lf5 (S n0))
 Nat.max lf5 (Nat.max lf5 (S n0))
 match lf5 with | O => S n0 | S m' => S (Nat.max n0 m') end
 Nat.max lf5 (S n0)

Problem: synth_19
 Nat.max n1 (Nat.max n1 (S n1))
 S (Nat.max n1 n1)
 S (Nat.max n1 O)
 match n1 with | O => S n1 | S m' => S (Nat.max n1 m') end
 Nat.max n1 (S n1)
 S n1

Problem: synth_15

Problem: synth_14
 match Nat.max n0 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end
 match Nat.max lf5 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end
 match Nat.max n0 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end
 match Nat.max lf5 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end
 S (Nat.max lf5 n0)
 S (Nat.max n0 lf5)

Problem: synth_10

Problem: synth_8

Problem: synth_3

Problem: synth_12

Problem: synth_5
 Nat.max n1 (Nat.max n0 n1)
 Nat.max n0 (Nat.max n1 n1)
 Nat.max n1 (Nat.max n0 O)
 Nat.max n0 (Nat.max n1 O)
 Nat.max n1 n0
 Nat.max n0 n1

Problem: synth_2
 Nat.max lf4 (Nat.max lf4 (S lf4))
 S (Nat.max lf4 lf4)
 S (Nat.max lf4 O)
 match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end
 Nat.max lf4 (S lf4)
 S lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 897 seconds
Lemmas:
Lemma candidate_1: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_2: forall (lf3 : nat) (lf4 : nat), forall _ : le lf4 lf3, le (S lf4) (S lf3).
Lemma candidate_3: forall (lf3 : nat) (n0 : nat) (n1 : nat), forall _ : le (Init.Nat.max n0 n1) lf3, le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma candidate_4: forall (n0 : nat) (lf4 : nat) (lf5 : nat), forall _ : le lf4 (Init.Nat.max n0 lf5), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma candidate_5: forall (n0 : nat) (n1 : nat) (lf4 : nat), forall _ : le lf4 (Init.Nat.max n0 (S n1)), le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_6: forall (n0 : nat) (n1 : nat) (lf5 : nat), forall   _ : and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))         (and (le (Init.Nat.max n0 n1) (Init.Nat.max n0 lf5))            (and               (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) lf5))               (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))                  (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))                     (le (Init.Nat.max (S (S n0)) n1)                        (Init.Nat.max (S (S n0)) lf5)))))), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).
Lemma candidate_7: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (Nat.max lf4 (S lf4))).
Lemma candidate_8: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 lf4)).
Lemma candidate_9: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 O)).
Lemma candidate_10: forall (lf4 : nat), @eq nat (S lf4)   (match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end).
Lemma candidate_11: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (S lf4)).
Lemma candidate_12: forall (lf4 : nat), @eq nat (S lf4) (S lf4).
Lemma candidate_13: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_14: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_15: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_16: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_17: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n1 n0)).
Lemma candidate_18: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n0 n1)).
Lemma candidate_19: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 n1)).
Lemma candidate_20: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 n1)).
Lemma candidate_21: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 O)).
Lemma candidate_22: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 O)).
Lemma candidate_23: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 n0).
Lemma candidate_24: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 n1).
Lemma candidate_25: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 (S O))).
Lemma candidate_26: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 lf3)).
Lemma candidate_27: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 O)).
Lemma candidate_28: forall (lf3 : nat), @eq nat (S lf3)   (match lf3 with | O => S lf3 | S m' => S (Nat.max lf3 m') end).
Lemma candidate_29: forall (lf3 : nat), @eq nat (S lf3) (Nat.max lf3 (S lf3)).
Lemma candidate_30: forall (lf3 : nat), @eq nat (S lf3) (S lf3).
Lemma candidate_31: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (Nat.max lf4 (S lf4))).
Lemma candidate_32: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 lf4)).
Lemma candidate_33: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 O)).
Lemma candidate_34: forall (lf4 : nat), @eq nat (S lf4)   (match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end).
Lemma candidate_35: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (S lf4)).
Lemma candidate_36: forall (lf4 : nat), @eq nat (S lf4) (S lf4).
Lemma candidate_37: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 (S O))).
Lemma candidate_38: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 lf3)).
Lemma candidate_39: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 O)).
Lemma candidate_40: forall (lf3 : nat), @eq nat (S lf3)   (match lf3 with | O => S lf3 | S m' => S (Nat.max lf3 m') end).
Lemma candidate_41: forall (lf3 : nat), @eq nat (S lf3) (Nat.max lf3 (S lf3)).
Lemma candidate_42: forall (lf3 : nat), @eq nat (S lf3) (S lf3).
Lemma candidate_43: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_44: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_45: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_46: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_47: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_48: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (S n1))).
Lemma candidate_49: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_50: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_51: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_52: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_53: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n1 n0)).
Lemma candidate_54: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n0 n1)).
Lemma candidate_55: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 n1)).
Lemma candidate_56: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 n1)).
Lemma candidate_57: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 O)).
Lemma candidate_58: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 O)).
Lemma candidate_59: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 n0).
Lemma candidate_60: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 n1).
Lemma candidate_61: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 (S O))).
Lemma candidate_62: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 lf3)).
Lemma candidate_63: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 O)).
Lemma candidate_64: forall (lf3 : nat), @eq nat (S lf3)   (match lf3 with | O => S lf3 | S m' => S (Nat.max lf3 m') end).
Lemma candidate_65: forall (lf3 : nat), @eq nat (S lf3) (Nat.max lf3 (S lf3)).
Lemma candidate_66: forall (lf3 : nat), @eq nat (S lf3) (S lf3).
Lemma candidate_67: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 lf5)).
Lemma candidate_68: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 lf5)).
Lemma candidate_69: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 O)).
Lemma candidate_70: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 O)).
Lemma candidate_71: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 n0).
Lemma candidate_72: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 lf5).
Lemma candidate_73: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_74: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_75: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_76: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_77: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max lf5 n0)).
Lemma candidate_78: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max n0 lf5)).
Lemma candidate_79: forall (n0 : nat) (lf5 : nat), le (match Nat.max lf5 O with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 lf5)).
Lemma candidate_80: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max n0 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_81: forall (n0 : nat) (lf5 : nat), le (Nat.max n0 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_82: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_83: forall (n0 : nat) (lf5 : nat), le (match lf5 with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 lf5)).
Lemma candidate_84: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (S n0)) (S (Init.Nat.max n0 lf5)).
Lemma candidate_85: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 lf5)).
Lemma candidate_86: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 lf5)).
Lemma candidate_87: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 O)).
Lemma candidate_88: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 O)).
Lemma candidate_89: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 n0).
Lemma candidate_90: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 lf5).
Lemma candidate_91: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (Nat.max lf4 (S lf4))).
Lemma candidate_92: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 lf4)).
Lemma candidate_93: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 O)).
Lemma candidate_94: forall (lf4 : nat), @eq nat (S lf4)   (match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end).
Lemma candidate_95: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (S lf4)).
Lemma candidate_96: forall (lf4 : nat), @eq nat (S lf4) (S lf4).
Lemma candidate_97: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_98: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_99: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_100: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_101: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max lf5 n0)).
Lemma candidate_102: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max n0 lf5)).
Lemma candidate_103: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_104: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n0 (S n1))).
Lemma candidate_105: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n1 (Nat.max n0 (S n1))).
Lemma candidate_106: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n1 (S n1))).
Lemma candidate_107: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_108: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (S n1)).
Lemma candidate_109: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (Nat.max n1 (S n1))).
Lemma candidate_110: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 n1)).
Lemma candidate_111: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 O)).
Lemma candidate_112: forall (n1 : nat), @eq nat (S n1) (match n1 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_113: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (S n1)).
Lemma candidate_114: forall (n1 : nat), @eq nat (S n1) (S n1).
Lemma candidate_115: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_116: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_117: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_118: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_119: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_120: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (S n1))).
Lemma candidate_121: forall (n0 : nat) (n1 : nat), le (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_122: forall (n0 : nat) (n1 : nat), le (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_123: forall (n0 : nat) (n1 : nat), le (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_124: forall (n0 : nat) (n1 : nat), le (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_125: forall (n0 : nat) (n1 : nat), le (S (Nat.max n1 n0)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_126: forall (n0 : nat) (n1 : nat), le (S (Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_127: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_128: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n0 (S n1))).
Lemma candidate_129: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n1 (Nat.max n0 (S n1))).
Lemma candidate_130: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n1 (S n1))).
Lemma candidate_131: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_132: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (S n1)).
Lemma candidate_133: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (Nat.max lf4 (S lf4))).
Lemma candidate_134: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 lf4)).
Lemma candidate_135: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 O)).
Lemma candidate_136: forall (lf4 : nat), @eq nat (S lf4)   (match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end).
Lemma candidate_137: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (S lf4)).
Lemma candidate_138: forall (lf4 : nat), @eq nat (S lf4) (S lf4).
Lemma candidate_139: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (Nat.max n1 (S n1))).
Lemma candidate_140: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 n1)).
Lemma candidate_141: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 O)).
Lemma candidate_142: forall (n1 : nat), @eq nat (S n1) (match n1 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_143: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (S n1)).
Lemma candidate_144: forall (n1 : nat), @eq nat (S n1) (S n1).
Lemma candidate_145: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_146: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_147: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_148: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_149: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_150: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (S n1))).
Lemma candidate_151: forall (n0 : nat) (lf5 : nat), le (match Nat.max lf5 O with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 lf5)).
Lemma candidate_152: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max n0 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_153: forall (n0 : nat) (lf5 : nat), le (Nat.max n0 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_154: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_155: forall (n0 : nat) (lf5 : nat), le (match lf5 with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 lf5)).
Lemma candidate_156: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (S n0)) (S (Init.Nat.max n0 lf5)).
Lemma candidate_157: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end)).
Lemma candidate_158: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_159: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_160: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_161: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end)).
Lemma candidate_162: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (S n1))).
Lemma candidate_163: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_164: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_165: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_166: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_167: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_168: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (S n1))).
Lemma candidate_169: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_170: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_171: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_172: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_173: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n1 n0)).
Lemma candidate_174: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n0 n1)).
Lemma candidate_175: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 lf5)).
Lemma candidate_176: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 lf5)).
Lemma candidate_177: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 O)).
Lemma candidate_178: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 O)).
Lemma candidate_179: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 n0).
Lemma candidate_180: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 lf5).
Lemma candidate_181: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 n1)).
Lemma candidate_182: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 n1)).
Lemma candidate_183: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 O)).
Lemma candidate_184: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 O)).
Lemma candidate_185: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 n0).
Lemma candidate_186: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 n1).
Lemma candidate_187: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_188: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_189: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_190: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_191: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max lf5 n0)).
Lemma candidate_192: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max n0 lf5)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1253 seconds
Duplicates removed: 113
Filtered by Quickchick: 1
Filtered by script: 10
Remaining: 68

Lemmas: 
Lemma candidate_111: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 O)).
Lemma candidate_113: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (S n1)).
Lemma candidate_110: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 n1)).
Lemma candidate_27: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 O)).
Lemma candidate_9: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 O)).
Lemma candidate_29: forall (lf3 : nat), @eq nat (S lf3) (Nat.max lf3 (S lf3)).
Lemma candidate_26: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 lf3)).
Lemma candidate_11: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (S lf4)).
Lemma candidate_8: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 lf4)).
Lemma candidate_2: forall (lf3 : nat) (lf4 : nat), forall _ : le lf4 lf3, le (S lf4) (S lf3).
Lemma candidate_23: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 n0).
Lemma candidate_71: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 n0).
Lemma candidate_109: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (Nat.max n1 (S n1))).
Lemma candidate_84: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (S n0)) (S (Init.Nat.max n0 lf5)).
Lemma candidate_126: forall (n0 : nat) (n1 : nat), le (S (Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_125: forall (n0 : nat) (n1 : nat), le (S (Nat.max n1 n0)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_48: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (S n1))).
Lemma candidate_7: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (Nat.max lf4 (S lf4))).
Lemma candidate_17: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n1 n0)).
Lemma candidate_77: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max lf5 n0)).
Lemma candidate_22: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 O)).
Lemma candidate_21: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 O)).
Lemma candidate_20: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 n1)).
Lemma candidate_19: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 n1)).
Lemma candidate_70: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 O)).
Lemma candidate_69: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 O)).
Lemma candidate_68: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 lf5)).
Lemma candidate_67: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 lf5)).
Lemma candidate_81: forall (n0 : nat) (lf5 : nat), le (Nat.max n0 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_80: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max n0 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_82: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_46: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_45: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_44: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_106: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n1 (S n1))).
Lemma candidate_105: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n1 (Nat.max n0 (S n1))).
Lemma candidate_104: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n0 (S n1))).
Lemma candidate_118: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_117: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_116: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_112: forall (n1 : nat), @eq nat (S n1) (match n1 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_3: forall (lf3 : nat) (n0 : nat) (n1 : nat), forall _ : le (Init.Nat.max n0 n1) lf3, le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma candidate_4: forall (n0 : nat) (lf4 : nat) (lf5 : nat), forall _ : le lf4 (Init.Nat.max n0 lf5), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma candidate_28: forall (lf3 : nat), @eq nat (S lf3)   (match lf3 with | O => S lf3 | S m' => S (Nat.max lf3 m') end).
Lemma candidate_10: forall (lf4 : nat), @eq nat (S lf4)   (match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end).
Lemma candidate_5: forall (n0 : nat) (n1 : nat) (lf4 : nat), forall _ : le lf4 (Init.Nat.max n0 (S n1)), le (S lf4) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_47: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_161: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end)).
Lemma candidate_107: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_119: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_79: forall (n0 : nat) (lf5 : nat), le (match Nat.max lf5 O with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 lf5)).
Lemma candidate_43: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_157: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end)).
Lemma candidate_103: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_124: forall (n0 : nat) (n1 : nat), le (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_123: forall (n0 : nat) (n1 : nat), le (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_122: forall (n0 : nat) (n1 : nat), le (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_121: forall (n0 : nat) (n1 : nat), le (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_16: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_15: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_14: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_13: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_115: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_75: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_76: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_73: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_74: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_6: forall (n0 : nat) (n1 : nat) (lf5 : nat), forall   _ : and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))         (and (le (Init.Nat.max n0 n1) (Init.Nat.max n0 lf5))            (and               (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) lf5))               (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))                  (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))                     (le (Init.Nat.max (S (S n0)) n1)                        (Init.Nat.max (S (S n0)) lf5)))))), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).
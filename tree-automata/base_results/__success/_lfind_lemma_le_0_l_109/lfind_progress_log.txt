File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_le_0_l_109
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_le_0_l_109
- Namespace: TreeAutomata
- Proof name: le_mult_lS
- Theorem: Theorem le_mult_lS: forall n0 m0 : nat, le (Init.Nat.mul n0 m0) (Init.Nat.mul (S n0) m0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: le O m

* Hypothesis:
H : @eq nat (Init.Nat.add m O) m
m : nat
n : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
m : nat

* Terms:
@eq nat (Init.Nat.add m O) m : Prop
nat : Set
m : nat
le O m : Prop
O : nat
Init.Nat.add m O : nat

* Functions:
Init.Nat.add  : forall (_ : nat) (_ : nat), nat
le  : forall (_ : nat) (_ : nat), Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf1 : nat = O

Generalizations:
Lemma conj1: forall (m : nat) (lf1 : nat), le lf1 m.
Lemma conj2: forall (m : nat), le O m.


<---VALIDITY CHECKS--->
Time elapsed: 9 seconds
Valid:
Lemma conj2: forall (m : nat), le O m.

Invalid:
Lemma conj1: forall (m : nat) (lf1 : nat), le lf1 m.

<---ADD IMPLICATIONS--->
Time elapsed: 12 seconds
Generalizations:
Lemma conj1_imp: forall (m : nat) (lf1 : nat), forall _ : @eq nat (Init.Nat.add m lf1) m, le lf1 m.
Lemma conj1: forall (m : nat) (lf1 : nat), le lf1 m.


<---VALIDITY CHECKS--->
Time elapsed: 17 seconds
Valid:
Lemma conj1_imp: forall (m : nat) (lf1 : nat), forall _ : @eq nat (Init.Nat.add m lf1) m, le lf1 m.

Invalid:
Lemma conj1: forall (m : nat) (lf1 : nat), le lf1 m.


<---CREATE SKETCHES--->
Time elapsed: 17 seconds
Sketches:


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 18 seconds
Problems per Sketch:


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 18 seconds

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 19 seconds
Lemmas:
Lemma candidate_1: forall (m : nat), le O m.
Lemma candidate_2: forall (lf1 : nat) (m : nat), forall _ : @eq nat (Init.Nat.add m lf1) m, le lf1 m.

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 28 seconds
Duplicates removed: 1
Filtered by Quickchick: 0
Filtered by script: 0
Remaining: 1

Lemmas: 
Lemma candidate_2: forall (lf1 : nat) (m : nat), forall _ : @eq nat (Init.Nat.add m lf1) m, le lf1 m.
LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_add_le_mono_165

Number of Lemmas: 186
Number of Lemmas (after duplicates removed): 60
Number of Lemmas (after QuickChick used to filter): 60
* Number of Candidate Lemmas: 51

Time until ranking: 1064
Time to complete: 3511

Stuck state true independent of hypotheses: false

Category 1:
Count = 24

Lemma candidate_107: forall (n : nat), @eq nat (S n) (Nat.add n (S O)).
Lemma candidate_106: forall (n : nat), @eq nat (S n) (S (Nat.add n O)).
Lemma candidate_105: forall (n : nat), @eq nat (S n) (S (Nat.mul n (S O))).
Lemma candidate_104: forall (n : nat), @eq nat (S n) (S (Nat.add n (Nat.mul n O))).
Lemma candidate_103: forall (n : nat), @eq nat (S n) (Nat.add (Nat.add n (S O)) O).
Lemma candidate_30: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_11: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_96: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (S n)).
Lemma candidate_27: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_10: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_9: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_93: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_25: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_8: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_1: forall (lf3 : nat) (p : nat) (lf4 : nat), forall _ : le lf3 lf4, le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma candidate_102: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.mul p (S (S n))).
Lemma candidate_101: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_99: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_98: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_97: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_91: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_2: forall (lf3 : nat) (n0 : nat) (p : nat), forall _ : le lf3 (Init.Nat.mul n0 p), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_4: forall (n : nat) (p : nat) (lf4 : nat), forall _ : le (Init.Nat.mul (S n) p) lf4, le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma candidate_6: forall (n0 : nat) (n : nat) (p : nat), forall _ : and (le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p)) (le (S n) n0), le (Init.Nat.add p (Init.Nat.mul (S n) p))   (Init.Nat.add p (Init.Nat.mul n0 p)).

Category 2:
Count = 0


Category 3 (provable):
Count = 23

Lemma candidate_17: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_66: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p lf5).
Lemma candidate_16: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_15: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_94: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul p n)).
Lemma candidate_63: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.add p O)).
Lemma candidate_28: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_14: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_13: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_61: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.mul p (S O))).
Lemma candidate_26: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_7: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_24: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_22: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_70: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul p lf5)).
Lemma candidate_21: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_92: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_20: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_68: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))).
Lemma candidate_3: forall (p : nat) (lf4 : nat) (lf5 : nat), forall _ : le (Init.Nat.mul lf5 p) lf4, le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma candidate_19: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_67: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))).
Lemma candidate_5: forall (n0 : nat) (p : nat) (lf5 : nat), forall _ : and (le (Init.Nat.mul lf5 p) (Init.Nat.mul n0 p)) (le lf5 n0), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).

Category 3 (not provable):
Count = 4

Lemma candidate_64: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.add lf5 O)).
Lemma candidate_62: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.mul lf5 (S O))).
Lemma candidate_72: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (S lf5)).
Lemma candidate_69: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (Nat.add lf5 (S O))).
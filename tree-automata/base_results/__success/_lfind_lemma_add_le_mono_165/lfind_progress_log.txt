File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_add_le_mono_165
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_add_le_mono_165
- Namespace: TreeAutomata
- Proof name: le_mult_l
- Theorem: Theorem le_mult_l: forall (n1 m0 p0 : nat) (_ : le n1 m0),
le (Init.Nat.mul n1 p0) (Init.Nat.mul m0 p0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p))

* Hypothesis:
H4 : le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p)
H0 : le (S n) (S n0)
H2 : le (Init.Nat.mul n p) (Init.Nat.mul n0 p)
H1 : or (@eq nat n n0) (le (S n) n0)
H : forall (p0 : nat) (_ : le (S n) n0),
le (Init.Nat.mul (S n) p0) (Init.Nat.mul n0 p0)
m : nat
Hrecn : forall (n1 : nat)
  (_ : forall (p0 : nat) (_ : le n n1),
       le (Init.Nat.mul n p0) (Init.Nat.mul n1 p0)) 
  (p0 : nat) (_ : le n (S n1)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S n1) p0)
H5 : le (Init.Nat.mul n p) (Init.Nat.mul (S n) p)
p : nat
H3 : le (S n) n0
n : nat
n0 : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
p : nat
n : nat
n0 : nat

* Terms:
forall
  (_ : forall (p0 : nat) (_ : le n _UNBOUND_REL_2),
       le (Init.Nat.mul n p0) (Init.Nat.mul _UNBOUND_REL_3 p0)) 
  (p0 : nat) (_ : le n (S _UNBOUND_REL_3)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S _UNBOUND_REL_4) p0) : Prop
le (Init.Nat.mul n p) (Init.Nat.mul (S n) p) : Prop
S _UNBOUND_REL_3 : nat
forall (p0 : nat) (_ : le n _UNBOUND_REL_2),
le (Init.Nat.mul n p0) (Init.Nat.mul _UNBOUND_REL_3 p0) : Prop
le n (S _UNBOUND_REL_3) : Prop
le (S n) (S n0) : Prop
forall (p0 : nat) (_ : le (S n) n0),
le (Init.Nat.mul (S n) p0) (Init.Nat.mul n0 p0) : Prop
Init.Nat.mul (S n) p : nat
le (S n) n0 : Prop
le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p) : Prop
forall (n1 : nat)
  (_ : forall (p0 : nat) (_ : le n n1),
       le (Init.Nat.mul n p0) (Init.Nat.mul n1 p0)) 
  (p0 : nat) (_ : le n (S n1)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S n1) p0) : Prop
S _UNBOUND_REL_4 : nat
Init.Nat.mul (S _UNBOUND_REL_4) _UNBOUND_REL_2 : nat
forall _ : le n (S _UNBOUND_REL_3),
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul (S _UNBOUND_REL_4) _UNBOUND_REL_2) : Prop
S n0 : nat
n : nat
@eq nat n n0 : Prop
forall _ : le (S n) n0,
le (Init.Nat.mul (S n) _UNBOUND_REL_2) (Init.Nat.mul n0 _UNBOUND_REL_2) : Prop
Init.Nat.mul n0 _UNBOUND_REL_2 : nat
forall (p0 : nat) (_ : le n (S _UNBOUND_REL_3)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S _UNBOUND_REL_4) p0) : Prop
le (Init.Nat.mul n p) (Init.Nat.mul n0 p) : Prop
Init.Nat.mul n _UNBOUND_REL_2 : nat
Init.Nat.mul n0 p : nat
Init.Nat.mul n p : nat
Init.Nat.add p (Init.Nat.mul (S n) p) : nat
le n _UNBOUND_REL_2 : Prop
le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)) : Prop
forall _ : le n _UNBOUND_REL_2,
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul _UNBOUND_REL_3 _UNBOUND_REL_2) : Prop
Init.Nat.mul (S n) _UNBOUND_REL_2 : nat
or (@eq nat n n0) (le (S n) n0) : Prop
nat : Set
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul _UNBOUND_REL_3 _UNBOUND_REL_2) : Prop
Init.Nat.mul _UNBOUND_REL_3 _UNBOUND_REL_2 : nat
Init.Nat.add p (Init.Nat.mul n0 p) : nat
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul (S _UNBOUND_REL_4) _UNBOUND_REL_2) : Prop
S n : nat
p : nat
le (Init.Nat.mul (S n) _UNBOUND_REL_2) (Init.Nat.mul n0 _UNBOUND_REL_2) : Prop
n0 : nat

* Functions:
Init.Nat.add  : forall (_ : nat) (_ : nat), nat
le  : forall (_ : nat) (_ : nat), Prop
S  : forall _ : nat, nat
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
or  : forall (_ : Prop) (_ : Prop), Prop
Init.Nat.mul  : forall (_ : nat) (_ : nat), nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : nat = Init.Nat.mul (S n) p
lf1 : nat = Init.Nat.add p (Init.Nat.mul (S n) p)
lf4 : nat = Init.Nat.mul n0 p
lf5 : nat = S n
lf2 : nat = Init.Nat.add p (Init.Nat.mul n0 p)

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le lf1 (Init.Nat.add p lf4).
Lemma conj6: forall (lf1 : nat) (p : nat) (n0 : nat), le lf1 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj9: forall (lf2 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) lf2.
Lemma conj10: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma conj14: forall (p : nat) (n0 : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) lf2.
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma conj27: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) lf2.
Lemma conj28: forall (lf4 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma conj30: forall (lf5 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj32: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)).


<---VALIDITY CHECKS--->
Time elapsed: 50 seconds
Valid:

Invalid:
Lemma conj32: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj30: forall (lf5 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj28: forall (lf4 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma conj27: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) lf2.
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) lf2.
Lemma conj14: forall (p : nat) (n0 : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj10: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma conj9: forall (lf2 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) lf2.
Lemma conj6: forall (lf1 : nat) (p : nat) (n0 : nat), le lf1 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le lf1 (Init.Nat.add p lf4).
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 136 seconds
Generalizations:
Lemma conj32_imp: forall (p : nat) (n : nat) (n0 : nat), forall _ : and (le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p)) (le (S n) n0),
le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj32: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj30_imp: forall (lf5 : nat) (p : nat) (n0 : nat), forall _ : and (le (Init.Nat.mul lf5 p) (Init.Nat.mul n0 p)) (le lf5 n0),
le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj30: forall (lf5 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj28_imp: forall (lf4 : nat) (p : nat) (n : nat), forall _ : le (Init.Nat.mul (S n) p) lf4,
le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma conj28: forall (lf4 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma conj27: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) lf2.
Lemma conj26_imp: forall (lf5 : nat) (lf4 : nat) (p : nat), forall _ : le (Init.Nat.mul lf5 p) lf4,
le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) lf2.
Lemma conj14_imp: forall (p : nat) (n0 : nat) (lf3 : nat), forall _ : le lf3 (Init.Nat.mul n0 p),
le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj14: forall (p : nat) (n0 : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj10_imp: forall (lf4 : nat) (p : nat) (lf3 : nat), forall _ : le lf3 lf4, le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma conj10: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma conj9: forall (lf2 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) lf2.
Lemma conj6: forall (lf1 : nat) (p : nat) (n0 : nat), le lf1 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le lf1 (Init.Nat.add p lf4).
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 166 seconds
Valid:
Lemma conj10_imp: forall (lf4 : nat) (p : nat) (lf3 : nat), forall _ : le lf3 lf4, le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma conj14_imp: forall (p : nat) (n0 : nat) (lf3 : nat), forall _ : le lf3 (Init.Nat.mul n0 p),
le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj26_imp: forall (lf5 : nat) (lf4 : nat) (p : nat), forall _ : le (Init.Nat.mul lf5 p) lf4,
le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma conj28_imp: forall (lf4 : nat) (p : nat) (n : nat), forall _ : le (Init.Nat.mul (S n) p) lf4,
le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma conj30_imp: forall (lf5 : nat) (p : nat) (n0 : nat), forall _ : and (le (Init.Nat.mul lf5 p) (Init.Nat.mul n0 p)) (le lf5 n0),
le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj32_imp: forall (p : nat) (n : nat) (n0 : nat), forall _ : and (le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p)) (le (S n) n0),
le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)).

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le lf1 (Init.Nat.add p lf4).
Lemma conj6: forall (lf1 : nat) (p : nat) (n0 : nat), le lf1 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj9: forall (lf2 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) lf2.
Lemma conj10: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma conj14: forall (p : nat) (n0 : nat) (lf3 : nat), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj25: forall (lf2 : nat) (lf5 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) lf2.
Lemma conj26: forall (lf5 : nat) (lf4 : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma conj27: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) lf2.
Lemma conj28: forall (lf4 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma conj30: forall (lf5 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj32: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul (S n) p))
  (Init.Nat.add p (Init.Nat.mul n0 p)).


<---CREATE SKETCHES--->
Time elapsed: 166 seconds
Sketches:
Sketch conj2_sketch0 : le lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj6_sketch0 : le lf1 (Init.Nat.add p (##hole##))
Sketch conj6_sketch1 : le lf1 (##hole##)
Sketch conj6_term_sketch0 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj6_term_sketch1 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)
Sketch conj9_sketch0 : le (##hole##) lf2
Sketch conj9_term_sketch0 : @eq nat (Init.Nat.add p lf3) (##hole##)
Sketch conj10_sketch0 : le (Init.Nat.add p lf3) (##hole##)
Sketch conj10_sketch1 : le (##hole##) (Init.Nat.add p lf4)
Sketch conj10_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj10_term_sketch1 : @eq nat (Init.Nat.add p lf3) (##hole##)
Sketch conj14_sketch0 : le (Init.Nat.add p lf3) (Init.Nat.add p (##hole##))
Sketch conj14_sketch1 : le (##hole##) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj14_sketch2 : le (Init.Nat.add p lf3) (##hole##)
Sketch conj14_term_sketch0 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj14_term_sketch1 : @eq nat (Init.Nat.add p lf3) (##hole##)
Sketch conj14_term_sketch2 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)
Sketch conj25_sketch0 : le (Init.Nat.add p (##hole##)) lf2
Sketch conj25_sketch1 : le (##hole##) lf2
Sketch conj25_term_sketch0 : @eq nat (Init.Nat.mul lf5 p) (##hole##)
Sketch conj25_term_sketch1 : @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (##hole##)
Sketch conj26_sketch0 : le (Init.Nat.add p (Init.Nat.mul lf5 p)) (##hole##)
Sketch conj26_sketch1 : le (Init.Nat.add p (##hole##)) (Init.Nat.add p lf4)
Sketch conj26_sketch2 : le (##hole##) (Init.Nat.add p lf4)
Sketch conj26_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj26_term_sketch1 : @eq nat (Init.Nat.mul lf5 p) (##hole##)
Sketch conj26_term_sketch2 : @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (##hole##)
Sketch conj27_sketch0 : le (Init.Nat.add p (##hole##)) lf2
Sketch conj27_sketch1 : le (##hole##) lf2
Sketch conj27_sketch2 : le (Init.Nat.add p (Init.Nat.mul (##hole##) p)) lf2
Sketch conj27_term_sketch0 : @eq nat (Init.Nat.mul (S n) p) (##hole##)
Sketch conj27_term_sketch1 : @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (##hole##)
Sketch conj27_term_sketch2 : @eq nat (S n) (##hole##)
Sketch conj28_sketch0 : le (Init.Nat.add p (Init.Nat.mul (S n) p)) (##hole##)
Sketch conj28_sketch1 : le (Init.Nat.add p (##hole##)) (Init.Nat.add p lf4)
Sketch conj28_sketch2 : le (##hole##) (Init.Nat.add p lf4)
Sketch conj28_sketch3 : le (Init.Nat.add p (Init.Nat.mul (##hole##) p)) (Init.Nat.add p lf4)
Sketch conj28_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj28_term_sketch1 : @eq nat (Init.Nat.mul (S n) p) (##hole##)
Sketch conj28_term_sketch2 : @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (##hole##)
Sketch conj28_term_sketch3 : @eq nat (S n) (##hole##)
Sketch conj30_sketch0 : le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (##hole##))
Sketch conj30_sketch1 : le (Init.Nat.add p (##hole##)) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj30_sketch2 : le (Init.Nat.add p (Init.Nat.mul lf5 p)) (##hole##)
Sketch conj30_sketch3 : le (##hole##) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj30_term_sketch0 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj30_term_sketch1 : @eq nat (Init.Nat.mul lf5 p) (##hole##)
Sketch conj30_term_sketch2 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)
Sketch conj30_term_sketch3 : @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (##hole##)
Sketch conj32_sketch0 : le (Init.Nat.add p (##hole##)) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj32_sketch1 : le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p (##hole##))
Sketch conj32_sketch2 : le (Init.Nat.add p (Init.Nat.mul (S n) p)) (##hole##)
Sketch conj32_sketch3 : le (##hole##) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj32_sketch4 : le (Init.Nat.add p (Init.Nat.mul (##hole##) p))
  (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj32_term_sketch0 : @eq nat (Init.Nat.mul (S n) p) (##hole##)
Sketch conj32_term_sketch1 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj32_term_sketch2 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)
Sketch conj32_term_sketch3 : @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (##hole##)
Sketch conj32_term_sketch4 : @eq nat (S n) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 548 seconds
Problems per Sketch:
Sketch conj32_term_sketch4 --> Problem  synth_20
Sketch conj30_sketch0 --> Problem  synth_23
Sketch conj28_sketch0 --> Problem  synth_21
Sketch conj26_term_sketch1 --> Problem  synth_13
Sketch conj14_sketch2 --> Problem  synth_8
Sketch conj27_term_sketch1 --> Problem  synth_19
Sketch conj26_sketch2 --> Problem  synth_9
Sketch conj25_sketch1 --> Problem  synth_6
Sketch conj10_term_sketch1 --> Problem  synth_7
Sketch conj30_sketch3 --> Problem  synth_11
Sketch conj14_term_sketch2 --> Problem  synth_5
Sketch conj25_term_sketch1 --> Problem  synth_14
Sketch conj30_sketch1 --> Problem  synth_24
Sketch conj26_sketch0 --> Problem  synth_15
Sketch conj6_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch3 --> Problem  synth_14
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj28_term_sketch1 --> Problem  synth_18
Sketch conj9_sketch0 --> Problem  synth_6
Sketch conj26_term_sketch2 --> Problem  synth_14
Sketch conj14_term_sketch1 --> Problem  synth_7
Sketch conj26_sketch1 --> Problem  synth_16
Sketch conj32_sketch0 --> Problem  synth_24
Sketch conj30_sketch2 --> Problem  synth_15
Sketch conj28_term_sketch0 --> Problem  synth_2
Sketch conj10_sketch1 --> Problem  synth_9
Sketch conj6_sketch0 --> Problem  synth_3
Sketch conj9_term_sketch0 --> Problem  synth_7
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj28_term_sketch3 --> Problem  synth_20
Sketch conj27_sketch0 --> Problem  synth_12
Sketch conj32_term_sketch0 --> Problem  synth_18
Sketch conj27_term_sketch2 --> Problem  synth_20
Sketch conj6_sketch1 --> Problem  synth_1
Sketch conj30_term_sketch2 --> Problem  synth_5
Sketch conj10_term_sketch0 --> Problem  synth_2
Sketch conj32_sketch3 --> Problem  synth_11
Sketch conj32_term_sketch3 --> Problem  synth_19
Sketch conj28_sketch2 --> Problem  synth_9
Sketch conj28_sketch3 --> Problem  synth_22
Sketch conj25_sketch0 --> Problem  synth_12
Sketch conj26_term_sketch0 --> Problem  synth_2
Sketch conj30_term_sketch1 --> Problem  synth_13
Sketch conj28_sketch1 --> Problem  synth_16
Sketch conj32_sketch4 --> Problem  synth_26
Sketch conj32_term_sketch1 --> Problem  synth_4
Sketch conj6_term_sketch1 --> Problem  synth_5
Sketch conj27_sketch2 --> Problem  synth_17
Sketch conj28_term_sketch2 --> Problem  synth_19
Sketch conj14_sketch0 --> Problem  synth_10
Sketch conj27_sketch1 --> Problem  synth_6
Sketch conj14_term_sketch0 --> Problem  synth_4
Sketch conj30_term_sketch0 --> Problem  synth_4
Sketch conj32_term_sketch2 --> Problem  synth_5
Sketch conj27_term_sketch0 --> Problem  synth_18
Sketch conj25_term_sketch0 --> Problem  synth_13
Sketch conj10_sketch0 --> Problem  synth_8
Sketch conj32_sketch2 --> Problem  synth_21
Sketch conj14_sketch1 --> Problem  synth_11
Sketch conj32_sketch1 --> Problem  synth_25


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 811 seconds

Problem: synth_22

Problem: synth_20
 Nat.add (Nat.add n (S O)) O
 S (Nat.add n (Nat.mul n O))
 S (Nat.mul n (S O))
 S (Nat.add n O)
 Nat.add n (S O)
 S n

Problem: synth_18
 Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))
 Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))
 Nat.mul p (Nat.add n (S O))
 Nat.add p (Nat.mul p n)
 Nat.add p (Nat.mul n p)
 Nat.mul p (S n)

Problem: synth_17

Problem: synth_21

Problem: synth_26

Problem: synth_9

Problem: synth_25

Problem: synth_13
 Nat.mul lf5 (Nat.mul p (S O))
 Nat.mul p (Nat.mul lf5 (S O))
 Nat.mul lf5 (Nat.add p O)
 Nat.mul p (Nat.add lf5 O)
 Nat.mul lf5 p
 Nat.mul p lf5

Problem: synth_6

Problem: synth_11

Problem: synth_7
 Nat.add p (Nat.mul lf3 (S O))
 Nat.add lf3 (Nat.mul p (S O))
 Nat.add p (Nat.add lf3 O)
 Nat.add lf3 (Nat.add p O)
 Nat.add p lf3
 Nat.add lf3 p

Problem: synth_4
 Nat.mul p (Nat.mul n0 (S O))
 Nat.mul n0 (Nat.mul p (S O))
 Nat.mul p (Nat.add n0 O)
 Nat.mul n0 (Nat.add p O)
 Nat.mul p n0
 Nat.mul n0 p

Problem: synth_1

Problem: synth_23

Problem: synth_16

Problem: synth_19
 Nat.add p (Nat.add p (Nat.mul p n))
 Nat.mul p (S (Nat.add n (S O)))
 Nat.add (Nat.mul p (S n)) p
 Nat.add p (Nat.add p (Nat.mul n p))
 Nat.add p (Nat.mul p (S n))
 Nat.mul p (S (S n))

Problem: synth_15

Problem: synth_14
 Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))
 Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))
 Nat.mul p (Nat.add lf5 (S O))
 Nat.add p (Nat.mul p lf5)
 Nat.add p (Nat.mul lf5 p)
 Nat.mul p (S lf5)

Problem: synth_10

Problem: synth_8

Problem: synth_24

Problem: synth_3

Problem: synth_12

Problem: synth_5
 Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))
 Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))
 Nat.mul p (Nat.add n0 (S O))
 Nat.add p (Nat.mul p n0)
 Nat.add p (Nat.mul n0 p)
 Nat.mul p (S n0)

Problem: synth_2
 Nat.add lf4 (Nat.mul p (S O))
 Nat.add p (Nat.mul lf4 (S O))
 Nat.add lf4 (Nat.add p O)
 Nat.add p (Nat.add lf4 O)
 Nat.add lf4 p
 Nat.add p lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 811 seconds
Lemmas:
Lemma candidate_1: forall (lf3 : nat) (p : nat) (lf4 : nat), forall _ : le lf3 lf4, le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma candidate_2: forall (lf3 : nat) (n0 : nat) (p : nat), forall _ : le lf3 (Init.Nat.mul n0 p), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_3: forall (p : nat) (lf4 : nat) (lf5 : nat), forall _ : le (Init.Nat.mul lf5 p) lf4, le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma candidate_4: forall (n : nat) (p : nat) (lf4 : nat), forall _ : le (Init.Nat.mul (S n) p) lf4, le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma candidate_5: forall (n0 : nat) (p : nat) (lf5 : nat), forall _ : and (le (Init.Nat.mul lf5 p) (Init.Nat.mul n0 p)) (le lf5 n0), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_6: forall (n0 : nat) (n : nat) (p : nat), forall _ : and (le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p)) (le (S n) n0), le (Init.Nat.add p (Init.Nat.mul (S n) p))   (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_7: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_8: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_9: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_10: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_11: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_12: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_13: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_14: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_15: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_16: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_17: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_18: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_19: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_20: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_21: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_22: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_23: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_24: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_25: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_26: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_27: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_28: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_29: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p lf3).
Lemma candidate_30: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_31: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_32: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_33: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_34: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_35: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_36: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_37: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_38: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_39: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_40: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_41: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p lf3).
Lemma candidate_42: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_43: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_44: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_45: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_46: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_47: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_48: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_49: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_50: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_51: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_52: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_53: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p lf3).
Lemma candidate_54: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_55: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_56: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_57: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_58: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_59: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_60: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_61: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.mul p (S O))).
Lemma candidate_62: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.mul lf5 (S O))).
Lemma candidate_63: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.add p O)).
Lemma candidate_64: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.add lf5 O)).
Lemma candidate_65: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 p).
Lemma candidate_66: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p lf5).
Lemma candidate_67: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))).
Lemma candidate_68: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))).
Lemma candidate_69: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (Nat.add lf5 (S O))).
Lemma candidate_70: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul p lf5)).
Lemma candidate_71: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul lf5 p)).
Lemma candidate_72: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (S lf5)).
Lemma candidate_73: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_74: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_75: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_76: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_77: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_78: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_79: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.mul p (S O))).
Lemma candidate_80: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.mul lf5 (S O))).
Lemma candidate_81: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.add p O)).
Lemma candidate_82: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.add lf5 O)).
Lemma candidate_83: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 p).
Lemma candidate_84: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p lf5).
Lemma candidate_85: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))).
Lemma candidate_86: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))).
Lemma candidate_87: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (Nat.add lf5 (S O))).
Lemma candidate_88: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul p lf5)).
Lemma candidate_89: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul lf5 p)).
Lemma candidate_90: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (S lf5)).
Lemma candidate_91: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_92: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_93: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_94: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul p n)).
Lemma candidate_95: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul n p)).
Lemma candidate_96: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (S n)).
Lemma candidate_97: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_98: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_99: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_100: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul n p))).
Lemma candidate_101: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_102: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.mul p (S (S n))).
Lemma candidate_103: forall (n : nat), @eq nat (S n) (Nat.add (Nat.add n (S O)) O).
Lemma candidate_104: forall (n : nat), @eq nat (S n) (S (Nat.add n (Nat.mul n O))).
Lemma candidate_105: forall (n : nat), @eq nat (S n) (S (Nat.mul n (S O))).
Lemma candidate_106: forall (n : nat), @eq nat (S n) (S (Nat.add n O)).
Lemma candidate_107: forall (n : nat), @eq nat (S n) (Nat.add n (S O)).
Lemma candidate_108: forall (n : nat), @eq nat (S n) (S n).
Lemma candidate_109: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_110: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_111: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_112: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_113: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_114: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_115: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_116: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_117: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_118: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul p n)).
Lemma candidate_119: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul n p)).
Lemma candidate_120: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (S n)).
Lemma candidate_121: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_122: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_123: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_124: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul n p))).
Lemma candidate_125: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_126: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.mul p (S (S n))).
Lemma candidate_127: forall (n : nat), @eq nat (S n) (Nat.add (Nat.add n (S O)) O).
Lemma candidate_128: forall (n : nat), @eq nat (S n) (S (Nat.add n (Nat.mul n O))).
Lemma candidate_129: forall (n : nat), @eq nat (S n) (S (Nat.mul n (S O))).
Lemma candidate_130: forall (n : nat), @eq nat (S n) (S (Nat.add n O)).
Lemma candidate_131: forall (n : nat), @eq nat (S n) (Nat.add n (S O)).
Lemma candidate_132: forall (n : nat), @eq nat (S n) (S n).
Lemma candidate_133: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_134: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_135: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_136: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_137: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_138: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_139: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.mul p (S O))).
Lemma candidate_140: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.mul lf5 (S O))).
Lemma candidate_141: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.add p O)).
Lemma candidate_142: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.add lf5 O)).
Lemma candidate_143: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 p).
Lemma candidate_144: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p lf5).
Lemma candidate_145: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_146: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_147: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_148: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_149: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_150: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_151: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))).
Lemma candidate_152: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))).
Lemma candidate_153: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (Nat.add lf5 (S O))).
Lemma candidate_154: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul p lf5)).
Lemma candidate_155: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul lf5 p)).
Lemma candidate_156: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (S lf5)).
Lemma candidate_157: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_158: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_159: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_160: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul p n)).
Lemma candidate_161: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul n p)).
Lemma candidate_162: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (S n)).
Lemma candidate_163: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_164: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_165: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_166: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_167: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_168: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_169: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_170: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_171: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_172: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_173: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_174: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_175: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_176: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_177: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_178: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul n p))).
Lemma candidate_179: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_180: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.mul p (S (S n))).
Lemma candidate_181: forall (n : nat), @eq nat (S n) (Nat.add (Nat.add n (S O)) O).
Lemma candidate_182: forall (n : nat), @eq nat (S n) (S (Nat.add n (Nat.mul n O))).
Lemma candidate_183: forall (n : nat), @eq nat (S n) (S (Nat.mul n (S O))).
Lemma candidate_184: forall (n : nat), @eq nat (S n) (S (Nat.add n O)).
Lemma candidate_185: forall (n : nat), @eq nat (S n) (Nat.add n (S O)).
Lemma candidate_186: forall (n : nat), @eq nat (S n) (S n).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 1063 seconds
Duplicates removed: 126
Filtered by Quickchick: 0
Filtered by script: 9
Remaining: 51

Lemmas: 
Lemma candidate_107: forall (n : nat), @eq nat (S n) (Nat.add n (S O)).
Lemma candidate_106: forall (n : nat), @eq nat (S n) (S (Nat.add n O)).
Lemma candidate_105: forall (n : nat), @eq nat (S n) (S (Nat.mul n (S O))).
Lemma candidate_17: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_104: forall (n : nat), @eq nat (S n) (S (Nat.add n (Nat.mul n O))).
Lemma candidate_103: forall (n : nat), @eq nat (S n) (Nat.add (Nat.add n (S O)) O).
Lemma candidate_66: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p lf5).
Lemma candidate_30: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_11: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_96: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (S n)).
Lemma candidate_16: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_15: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_94: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul p n)).
Lemma candidate_64: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.add lf5 O)).
Lemma candidate_63: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.add p O)).
Lemma candidate_28: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_27: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_10: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_9: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_14: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_13: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_93: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_62: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.mul lf5 (S O))).
Lemma candidate_61: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.mul p (S O))).
Lemma candidate_26: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_25: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_8: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_7: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_24: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_72: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (S lf5)).
Lemma candidate_1: forall (lf3 : nat) (p : nat) (lf4 : nat), forall _ : le lf3 lf4, le (Init.Nat.add p lf3) (Init.Nat.add p lf4).
Lemma candidate_102: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.mul p (S (S n))).
Lemma candidate_22: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_70: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul p lf5)).
Lemma candidate_21: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_101: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_99: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_69: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (Nat.add lf5 (S O))).
Lemma candidate_92: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_98: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_97: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_91: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_20: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_68: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))).
Lemma candidate_2: forall (lf3 : nat) (n0 : nat) (p : nat), forall _ : le lf3 (Init.Nat.mul n0 p), le (Init.Nat.add p lf3) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_3: forall (p : nat) (lf4 : nat) (lf5 : nat), forall _ : le (Init.Nat.mul lf5 p) lf4, le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p lf4).
Lemma candidate_19: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_4: forall (n : nat) (p : nat) (lf4 : nat), forall _ : le (Init.Nat.mul (S n) p) lf4, le (Init.Nat.add p (Init.Nat.mul (S n) p)) (Init.Nat.add p lf4).
Lemma candidate_67: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))).
Lemma candidate_5: forall (n0 : nat) (p : nat) (lf5 : nat), forall _ : and (le (Init.Nat.mul lf5 p) (Init.Nat.mul n0 p)) (le lf5 n0), le (Init.Nat.add p (Init.Nat.mul lf5 p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_6: forall (n0 : nat) (n : nat) (p : nat), forall _ : and (le (Init.Nat.mul (S n) p) (Init.Nat.mul n0 p)) (le (S n) n0), le (Init.Nat.add p (Init.Nat.mul (S n) p))   (Init.Nat.add p (Init.Nat.mul n0 p)).
File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_le_mult_r_202
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_le_mult_r_202
- Namespace: TreeAutomata
- Proof name: le_mult_mult
- Theorem: Theorem le_mult_mult: forall (n0 m0 p0 q0 : nat) (_ : le n0 m0) (_ : le p0 q0),
le (Init.Nat.mul n0 p0) (Init.Nat.mul m0 q0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: le (Init.Nat.mul n p) (Init.Nat.mul n q)

* Hypothesis:
H0 : le p q
H : le n m
m : nat
p : nat
n : nat
q : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
m : nat
p : nat
n : nat
q : nat

* Terms:
nat : Set
le (Init.Nat.mul n p) (Init.Nat.mul n q) : Prop
Init.Nat.mul n p : nat
m : nat
le n m : Prop
Init.Nat.mul n q : nat
p : nat
n : nat
q : nat
le p q : Prop

* Functions:
le  : forall (_ : nat) (_ : nat), Prop
Init.Nat.mul  : forall (_ : nat) (_ : nat), nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf1 : nat = Init.Nat.mul n p
lf2 : nat = Init.Nat.mul n q

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.
Lemma conj2: forall (lf1 : nat) (n : nat) (q : nat), le lf1 (Init.Nat.mul n q).
Lemma conj3: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf2.
Lemma conj4: forall (p : nat) (n : nat) (q : nat), le (Init.Nat.mul n p) (Init.Nat.mul n q).


<---VALIDITY CHECKS--->
Time elapsed: 13 seconds
Valid:

Invalid:
Lemma conj4: forall (p : nat) (n : nat) (q : nat), le (Init.Nat.mul n p) (Init.Nat.mul n q).
Lemma conj3: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf2.
Lemma conj2: forall (lf1 : nat) (n : nat) (q : nat), le lf1 (Init.Nat.mul n q).
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 23 seconds
Generalizations:
Lemma conj4_imp: forall (p : nat) (n : nat) (q : nat), forall _ : le p q, le (Init.Nat.mul n p) (Init.Nat.mul n q).
Lemma conj4: forall (p : nat) (n : nat) (q : nat), le (Init.Nat.mul n p) (Init.Nat.mul n q).
Lemma conj3: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf2.
Lemma conj2: forall (lf1 : nat) (n : nat) (q : nat), le lf1 (Init.Nat.mul n q).
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 35 seconds
Valid:
Lemma conj4_imp: forall (p : nat) (n : nat) (q : nat), forall _ : le p q, le (Init.Nat.mul n p) (Init.Nat.mul n q).

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf1 lf2.
Lemma conj2: forall (lf1 : nat) (n : nat) (q : nat), le lf1 (Init.Nat.mul n q).
Lemma conj3: forall (lf2 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf2.
Lemma conj4: forall (p : nat) (n : nat) (q : nat), le (Init.Nat.mul n p) (Init.Nat.mul n q).


<---CREATE SKETCHES--->
Time elapsed: 35 seconds
Sketches:
Sketch conj2_sketch0 : le lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq nat (Init.Nat.mul n q) (##hole##)
Sketch conj3_sketch0 : le (##hole##) lf2
Sketch conj3_term_sketch0 : @eq nat (Init.Nat.mul n p) (##hole##)
Sketch conj4_sketch0 : le (##hole##) (Init.Nat.mul n q)
Sketch conj4_sketch1 : le (Init.Nat.mul n p) (##hole##)
Sketch conj4_term_sketch0 : @eq nat (Init.Nat.mul n p) (##hole##)
Sketch conj4_term_sketch1 : @eq nat (Init.Nat.mul n q) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 35 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj4_sketch0 --> Problem  synth_2
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_4


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 39 seconds

Problem: synth_3
 Nat.mul lf2 lf2
 Nat.mul lf2 O
 S lf2
 S O
 lf2
 O

Problem: synth_4
 S n
 S p
 S O
 n
 p
 O

Problem: synth_1
 Nat.mul lf1 lf1
 Nat.mul lf1 O
 S lf1
 S O
 lf1
 O

Problem: synth_2
 S q
 S n
 S O
 q
 n
 O

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 39 seconds
Lemmas:
Lemma candidate_1: forall (q : nat) (n : nat) (p : nat), forall _ : le p q, le (Init.Nat.mul n p) (Init.Nat.mul n q).
Lemma candidate_2: forall (lf1 : nat), le lf1 (Nat.mul lf1 lf1).
Lemma candidate_3: forall (lf1 : nat), le lf1 (Nat.mul lf1 O).
Lemma candidate_4: forall (lf1 : nat), le lf1 (S lf1).
Lemma candidate_5: forall (lf1 : nat), le lf1 (S O).
Lemma candidate_6: forall (lf1 : nat), le lf1 (lf1).
Lemma candidate_7: forall (lf1 : nat), le lf1 (O).
Lemma candidate_8: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (S q).
Lemma candidate_9: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (S n).
Lemma candidate_10: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (S O).
Lemma candidate_11: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (q).
Lemma candidate_12: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (n).
Lemma candidate_13: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (O).
Lemma candidate_14: forall (lf2 : nat), le (Nat.mul lf2 lf2) lf2.
Lemma candidate_15: forall (lf2 : nat), le (Nat.mul lf2 O) lf2.
Lemma candidate_16: forall (lf2 : nat), le (S lf2) lf2.
Lemma candidate_17: forall (lf2 : nat), le (S O) lf2.
Lemma candidate_18: forall (lf2 : nat), le (lf2) lf2.
Lemma candidate_19: forall (lf2 : nat), le (O) lf2.
Lemma candidate_20: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (S n).
Lemma candidate_21: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (S p).
Lemma candidate_22: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (S O).
Lemma candidate_23: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (n).
Lemma candidate_24: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (p).
Lemma candidate_25: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (O).
Lemma candidate_26: forall (q : nat) (n : nat), le (S q) (Init.Nat.mul n q).
Lemma candidate_27: forall (q : nat) (n : nat), le (S n) (Init.Nat.mul n q).
Lemma candidate_28: forall (q : nat) (n : nat), le (S O) (Init.Nat.mul n q).
Lemma candidate_29: forall (q : nat) (n : nat), le (q) (Init.Nat.mul n q).
Lemma candidate_30: forall (q : nat) (n : nat), le (n) (Init.Nat.mul n q).
Lemma candidate_31: forall (q : nat) (n : nat), le (O) (Init.Nat.mul n q).
Lemma candidate_32: forall (n : nat) (p : nat), le (Init.Nat.mul n p) (S n).
Lemma candidate_33: forall (n : nat) (p : nat), le (Init.Nat.mul n p) (S p).
Lemma candidate_34: forall (n : nat) (p : nat), le (Init.Nat.mul n p) (S O).
Lemma candidate_35: forall (n : nat) (p : nat), le (Init.Nat.mul n p) (n).
Lemma candidate_36: forall (n : nat) (p : nat), le (Init.Nat.mul n p) (p).
Lemma candidate_37: forall (n : nat) (p : nat), le (Init.Nat.mul n p) (O).
Lemma candidate_38: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (S n).
Lemma candidate_39: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (S p).
Lemma candidate_40: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (S O).
Lemma candidate_41: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (n).
Lemma candidate_42: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (p).
Lemma candidate_43: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (O).
Lemma candidate_44: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (S q).
Lemma candidate_45: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (S n).
Lemma candidate_46: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (S O).
Lemma candidate_47: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (q).
Lemma candidate_48: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (n).
Lemma candidate_49: forall (q : nat) (n : nat), @eq nat (Init.Nat.mul n q) (O).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 139 seconds
Duplicates removed: 12
Filtered by Quickchick: 29
Filtered by script: 2
Remaining: 6

Lemmas: 
Lemma candidate_19: forall (lf2 : nat), le (O) lf2.
Lemma candidate_4: forall (lf1 : nat), le lf1 (S lf1).
Lemma candidate_15: forall (lf2 : nat), le (Nat.mul lf2 O) lf2.
Lemma candidate_2: forall (lf1 : nat), le lf1 (Nat.mul lf1 lf1).
Lemma candidate_31: forall (q : nat) (n : nat), le (O) (Init.Nat.mul n q).
Lemma candidate_1: forall (q : nat) (n : nat) (p : nat), forall _ : le p q, le (Init.Nat.mul n p) (Init.Nat.mul n q).
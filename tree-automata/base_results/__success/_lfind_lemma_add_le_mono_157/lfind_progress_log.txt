File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_add_le_mono_157
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_add_le_mono_157
- Namespace: TreeAutomata
- Proof name: le_mult_l
- Theorem: Theorem le_mult_l: forall (n1 m0 p0 : nat) (_ : le n1 m0),
le (Init.Nat.mul n1 p0) (Init.Nat.mul m0 p0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p))

* Hypothesis:
H4 : le p p
H0 : le (S n) (S n0)
H2 : le (Init.Nat.mul n p) (Init.Nat.mul n0 p)
H1 : or (@eq nat n n0) (le (S n) n0)
H : forall (p0 : nat) (_ : le (S n) n0),
le (Init.Nat.mul (S n) p0) (Init.Nat.mul n0 p0)
m : nat
Hrecn : forall (n1 : nat)
  (_ : forall (p0 : nat) (_ : le n n1),
       le (Init.Nat.mul n p0) (Init.Nat.mul n1 p0)) 
  (p0 : nat) (_ : le n (S n1)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S n1) p0)
p : nat
H3 : @eq nat n n0
n : nat
n0 : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
p : nat
n : nat
n0 : nat

* Terms:
forall
  (_ : forall (p0 : nat) (_ : le n _UNBOUND_REL_2),
       le (Init.Nat.mul n p0) (Init.Nat.mul _UNBOUND_REL_3 p0)) 
  (p0 : nat) (_ : le n (S _UNBOUND_REL_3)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S _UNBOUND_REL_4) p0) : Prop
S _UNBOUND_REL_3 : nat
forall (p0 : nat) (_ : le n _UNBOUND_REL_2),
le (Init.Nat.mul n p0) (Init.Nat.mul _UNBOUND_REL_3 p0) : Prop
le n (S _UNBOUND_REL_3) : Prop
le (S n) (S n0) : Prop
forall (p0 : nat) (_ : le (S n) n0),
le (Init.Nat.mul (S n) p0) (Init.Nat.mul n0 p0) : Prop
le (S n) n0 : Prop
Init.Nat.add p (Init.Nat.mul n p) : nat
forall (n1 : nat)
  (_ : forall (p0 : nat) (_ : le n n1),
       le (Init.Nat.mul n p0) (Init.Nat.mul n1 p0)) 
  (p0 : nat) (_ : le n (S n1)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S n1) p0) : Prop
S _UNBOUND_REL_4 : nat
Init.Nat.mul (S _UNBOUND_REL_4) _UNBOUND_REL_2 : nat
forall _ : le n (S _UNBOUND_REL_3),
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul (S _UNBOUND_REL_4) _UNBOUND_REL_2) : Prop
S n0 : nat
n : nat
@eq nat n n0 : Prop
forall _ : le (S n) n0,
le (Init.Nat.mul (S n) _UNBOUND_REL_2) (Init.Nat.mul n0 _UNBOUND_REL_2) : Prop
Init.Nat.mul n0 _UNBOUND_REL_2 : nat
forall (p0 : nat) (_ : le n (S _UNBOUND_REL_3)),
le (Init.Nat.mul n p0) (Init.Nat.mul (S _UNBOUND_REL_4) p0) : Prop
le (Init.Nat.mul n p) (Init.Nat.mul n0 p) : Prop
Init.Nat.mul n _UNBOUND_REL_2 : nat
Init.Nat.mul n0 p : nat
Init.Nat.mul n p : nat
le n _UNBOUND_REL_2 : Prop
forall _ : le n _UNBOUND_REL_2,
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul _UNBOUND_REL_3 _UNBOUND_REL_2) : Prop
Init.Nat.mul (S n) _UNBOUND_REL_2 : nat
or (@eq nat n n0) (le (S n) n0) : Prop
le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)) : Prop
le p p : Prop
nat : Set
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul _UNBOUND_REL_3 _UNBOUND_REL_2) : Prop
Init.Nat.mul _UNBOUND_REL_3 _UNBOUND_REL_2 : nat
Init.Nat.add p (Init.Nat.mul n0 p) : nat
le (Init.Nat.mul n _UNBOUND_REL_2)
  (Init.Nat.mul (S _UNBOUND_REL_4) _UNBOUND_REL_2) : Prop
S n : nat
p : nat
le (Init.Nat.mul (S n) _UNBOUND_REL_2) (Init.Nat.mul n0 _UNBOUND_REL_2) : Prop
n0 : nat

* Functions:
Init.Nat.add  : forall (_ : nat) (_ : nat), nat
le  : forall (_ : nat) (_ : nat), Prop
S  : forall _ : nat, nat
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
or  : forall (_ : Prop) (_ : Prop), Prop
Init.Nat.mul  : forall (_ : nat) (_ : nat), nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf3 : nat = Init.Nat.mul n0 p
lf1 : nat = Init.Nat.add p (Init.Nat.mul n0 p)
lf4 : nat = Init.Nat.mul n p
lf2 : nat = Init.Nat.add p (Init.Nat.mul n p)

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le (Init.Nat.add p lf4) lf1.
Lemma conj4: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul n p)) lf1.
Lemma conj5: forall (lf2 : nat) (p : nat) (lf3 : nat), le lf2 (Init.Nat.add p lf3).
Lemma conj6: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma conj8: forall (p : nat) (n : nat) (lf3 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma conj13: forall (lf2 : nat) (p : nat) (n0 : nat), le lf2 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj14: forall (lf4 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj16: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).


<---VALIDITY CHECKS--->
Time elapsed: 64 seconds
Valid:

Invalid:
Lemma conj16: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj14: forall (lf4 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj13: forall (lf2 : nat) (p : nat) (n0 : nat), le lf2 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj8: forall (p : nat) (n : nat) (lf3 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma conj6: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma conj5: forall (lf2 : nat) (p : nat) (lf3 : nat), le lf2 (Init.Nat.add p lf3).
Lemma conj4: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul n p)) lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le (Init.Nat.add p lf4) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 149 seconds
Generalizations:
Lemma conj16_imp: forall (p : nat) (n : nat) (n0 : nat), forall
  _ : and (@eq nat n n0)
        (and (le (Init.Nat.mul n p) (Init.Nat.mul n0 p))
           (and (or (@eq nat n n0) (le (S n) n0)) (le (S n) (S n0)))),
le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj16: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj14_imp: forall (lf4 : nat) (p : nat) (n0 : nat), forall _ : le lf4 (Init.Nat.mul n0 p),
le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj14: forall (lf4 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj13: forall (lf2 : nat) (p : nat) (n0 : nat), le lf2 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj8_imp: forall (p : nat) (n : nat) (lf3 : nat), forall _ : le (Init.Nat.mul n p) lf3,
le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma conj8: forall (p : nat) (n : nat) (lf3 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma conj6_imp: forall (lf4 : nat) (p : nat) (lf3 : nat), forall _ : le lf4 lf3, le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma conj6: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma conj5: forall (lf2 : nat) (p : nat) (lf3 : nat), le lf2 (Init.Nat.add p lf3).
Lemma conj4: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul n p)) lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le (Init.Nat.add p lf4) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 181 seconds
Valid:
Lemma conj6_imp: forall (lf4 : nat) (p : nat) (lf3 : nat), forall _ : le lf4 lf3, le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma conj8_imp: forall (p : nat) (n : nat) (lf3 : nat), forall _ : le (Init.Nat.mul n p) lf3,
le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma conj14_imp: forall (lf4 : nat) (p : nat) (n0 : nat), forall _ : le lf4 (Init.Nat.mul n0 p),
le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj16_imp: forall (p : nat) (n : nat) (n0 : nat), forall
  _ : and (@eq nat n n0)
        (and (le (Init.Nat.mul n p) (Init.Nat.mul n0 p))
           (and (or (@eq nat n n0) (le (S n) n0)) (le (S n) (S n0)))),
le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf4 : nat) (lf1 : nat) (p : nat), le (Init.Nat.add p lf4) lf1.
Lemma conj4: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.add p (Init.Nat.mul n p)) lf1.
Lemma conj5: forall (lf2 : nat) (p : nat) (lf3 : nat), le lf2 (Init.Nat.add p lf3).
Lemma conj6: forall (lf4 : nat) (p : nat) (lf3 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma conj8: forall (p : nat) (n : nat) (lf3 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma conj13: forall (lf2 : nat) (p : nat) (n0 : nat), le lf2 (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj14: forall (lf4 : nat) (p : nat) (n0 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma conj16: forall (p : nat) (n : nat) (n0 : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).


<---CREATE SKETCHES--->
Time elapsed: 181 seconds
Sketches:
Sketch conj2_sketch0 : le (##hole##) lf1
Sketch conj2_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj4_sketch0 : le (##hole##) lf1
Sketch conj4_sketch1 : le (Init.Nat.add p (##hole##)) lf1
Sketch conj4_term_sketch0 : @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (##hole##)
Sketch conj4_term_sketch1 : @eq nat (Init.Nat.mul n p) (##hole##)
Sketch conj5_sketch0 : le lf2 (##hole##)
Sketch conj5_term_sketch0 : @eq nat (Init.Nat.add p lf3) (##hole##)
Sketch conj6_sketch0 : le (##hole##) (Init.Nat.add p lf3)
Sketch conj6_sketch1 : le (Init.Nat.add p lf4) (##hole##)
Sketch conj6_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj6_term_sketch1 : @eq nat (Init.Nat.add p lf3) (##hole##)
Sketch conj8_sketch0 : le (Init.Nat.add p (Init.Nat.mul n p)) (##hole##)
Sketch conj8_sketch1 : le (##hole##) (Init.Nat.add p lf3)
Sketch conj8_sketch2 : le (Init.Nat.add p (##hole##)) (Init.Nat.add p lf3)
Sketch conj8_term_sketch0 : @eq nat (Init.Nat.add p lf3) (##hole##)
Sketch conj8_term_sketch1 : @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (##hole##)
Sketch conj8_term_sketch2 : @eq nat (Init.Nat.mul n p) (##hole##)
Sketch conj13_sketch0 : le lf2 (Init.Nat.add p (##hole##))
Sketch conj13_sketch1 : le lf2 (##hole##)
Sketch conj13_term_sketch0 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj13_term_sketch1 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)
Sketch conj14_sketch0 : le (##hole##) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj14_sketch1 : le (Init.Nat.add p lf4) (Init.Nat.add p (##hole##))
Sketch conj14_sketch2 : le (Init.Nat.add p lf4) (##hole##)
Sketch conj14_term_sketch0 : @eq nat (Init.Nat.add p lf4) (##hole##)
Sketch conj14_term_sketch1 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj14_term_sketch2 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)
Sketch conj16_sketch0 : le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (##hole##))
Sketch conj16_sketch1 : le (##hole##) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj16_sketch2 : le (Init.Nat.add p (##hole##)) (Init.Nat.add p (Init.Nat.mul n0 p))
Sketch conj16_sketch3 : le (Init.Nat.add p (Init.Nat.mul n p)) (##hole##)
Sketch conj16_term_sketch0 : @eq nat (Init.Nat.mul n0 p) (##hole##)
Sketch conj16_term_sketch1 : @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (##hole##)
Sketch conj16_term_sketch2 : @eq nat (Init.Nat.mul n p) (##hole##)
Sketch conj16_term_sketch3 : @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 545 seconds
Problems per Sketch:
Sketch conj5_sketch0 --> Problem  synth_6
Sketch conj16_sketch3 --> Problem  synth_10
Sketch conj14_sketch2 --> Problem  synth_9
Sketch conj16_sketch2 --> Problem  synth_18
Sketch conj16_term_sketch1 --> Problem  synth_4
Sketch conj14_term_sketch2 --> Problem  synth_14
Sketch conj8_sketch1 --> Problem  synth_8
Sketch conj4_sketch0 --> Problem  synth_1
Sketch conj6_term_sketch0 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj13_term_sketch1 --> Problem  synth_14
Sketch conj8_term_sketch0 --> Problem  synth_7
Sketch conj8_sketch2 --> Problem  synth_11
Sketch conj14_term_sketch1 --> Problem  synth_13
Sketch conj8_term_sketch1 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj5_term_sketch0 --> Problem  synth_7
Sketch conj6_sketch0 --> Problem  synth_8
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj16_sketch1 --> Problem  synth_15
Sketch conj6_sketch1 --> Problem  synth_9
Sketch conj16_term_sketch2 --> Problem  synth_5
Sketch conj13_term_sketch0 --> Problem  synth_13
Sketch conj6_term_sketch1 --> Problem  synth_7
Sketch conj4_sketch1 --> Problem  synth_3
Sketch conj16_sketch0 --> Problem  synth_17
Sketch conj13_sketch1 --> Problem  synth_6
Sketch conj4_term_sketch1 --> Problem  synth_5
Sketch conj14_sketch0 --> Problem  synth_15
Sketch conj14_term_sketch0 --> Problem  synth_2
Sketch conj16_term_sketch0 --> Problem  synth_13
Sketch conj13_sketch0 --> Problem  synth_12
Sketch conj8_sketch0 --> Problem  synth_10
Sketch conj16_term_sketch3 --> Problem  synth_14
Sketch conj8_term_sketch2 --> Problem  synth_5
Sketch conj14_sketch1 --> Problem  synth_16


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 731 seconds

Problem: synth_18

Problem: synth_17

Problem: synth_9

Problem: synth_13
 Nat.mul p (Nat.mul n0 (S O))
 Nat.mul n0 (Nat.mul p (S O))
 Nat.mul p (Nat.add n0 O)
 Nat.mul n0 (Nat.add p O)
 Nat.mul p n0
 Nat.mul n0 p

Problem: synth_6

Problem: synth_11

Problem: synth_7
 Nat.add p (Nat.mul lf3 (S O))
 Nat.add lf3 (Nat.mul p (S O))
 Nat.add p (Nat.add lf3 O)
 Nat.add lf3 (Nat.add p O)
 Nat.add p lf3
 Nat.add lf3 p

Problem: synth_4
 Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))
 Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))
 Nat.mul p (Nat.add n (S O))
 Nat.add p (Nat.mul p n)
 Nat.add p (Nat.mul n p)
 Nat.mul p (S n)

Problem: synth_1

Problem: synth_16

Problem: synth_15

Problem: synth_14
 Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))
 Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))
 Nat.mul p (Nat.add n0 (S O))
 Nat.add p (Nat.mul p n0)
 Nat.add p (Nat.mul n0 p)
 Nat.mul p (S n0)

Problem: synth_10

Problem: synth_8

Problem: synth_3

Problem: synth_12

Problem: synth_5
 Nat.mul p (Nat.mul n (S O))
 Nat.mul n (Nat.mul p (S O))
 Nat.mul p (Nat.add n O)
 Nat.mul n (Nat.add p O)
 Nat.mul p n
 Nat.mul n p

Problem: synth_2
 Nat.add lf4 (Nat.mul p (S O))
 Nat.add p (Nat.mul lf4 (S O))
 Nat.add lf4 (Nat.add p O)
 Nat.add p (Nat.add lf4 O)
 Nat.add lf4 p
 Nat.add p lf4

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 732 seconds
Lemmas:
Lemma candidate_1: forall (lf3 : nat) (p : nat) (lf4 : nat), forall _ : le lf4 lf3, le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma candidate_2: forall (lf3 : nat) (n : nat) (p : nat), forall _ : le (Init.Nat.mul n p) lf3, le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma candidate_3: forall (n0 : nat) (p : nat) (lf4 : nat), forall _ : le lf4 (Init.Nat.mul n0 p), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_4: forall (n0 : nat) (n : nat) (p : nat), forall   _ : and (@eq nat n n0)         (and (le (Init.Nat.mul n p) (Init.Nat.mul n0 p))            (and (or (@eq nat n n0) (le (S n) n0)) (le (S n) (S n0)))), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_5: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_6: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_7: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_8: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_9: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_10: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_11: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_12: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_13: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_14: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul p n)).
Lemma candidate_15: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul n p)).
Lemma candidate_16: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S n)).
Lemma candidate_17: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n (S O))).
Lemma candidate_18: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p (S O))).
Lemma candidate_19: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.add n O)).
Lemma candidate_20: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.add p O)).
Lemma candidate_21: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_22: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n p).
Lemma candidate_23: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_24: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_25: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_26: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_27: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p lf3).
Lemma candidate_28: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_29: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_30: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_31: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_32: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_33: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_34: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_35: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_36: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_37: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_38: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_39: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p lf3).
Lemma candidate_40: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_41: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_42: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_43: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_44: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_45: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p lf3).
Lemma candidate_46: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_47: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_48: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_49: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_50: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul p n)).
Lemma candidate_51: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul n p)).
Lemma candidate_52: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S n)).
Lemma candidate_53: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n (S O))).
Lemma candidate_54: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p (S O))).
Lemma candidate_55: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.add n O)).
Lemma candidate_56: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.add p O)).
Lemma candidate_57: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_58: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n p).
Lemma candidate_59: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_60: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_61: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_62: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_63: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_64: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_65: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_66: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_67: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_68: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_69: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_70: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_71: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_72: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_73: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_74: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_75: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_76: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p lf4).
Lemma candidate_77: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_78: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_79: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_80: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_81: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_82: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_83: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_84: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_85: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_86: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_87: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_88: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_89: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_90: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_91: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_92: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_93: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_94: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 p).
Lemma candidate_95: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_96: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_97: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_98: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul p n)).
Lemma candidate_99: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul n p)).
Lemma candidate_100: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S n)).
Lemma candidate_101: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n (S O))).
Lemma candidate_102: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p (S O))).
Lemma candidate_103: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.add n O)).
Lemma candidate_104: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.add p O)).
Lemma candidate_105: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_106: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n p).
Lemma candidate_107: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_108: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_109: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_110: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_111: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul n0 p)).
Lemma candidate_112: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 907 seconds
Duplicates removed: 72
Filtered by Quickchick: 0
Filtered by script: 6
Remaining: 34

Lemmas: 
Lemma candidate_21: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_63: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p n0).
Lemma candidate_28: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_9: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_20: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.add p O)).
Lemma candidate_19: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.add n O)).
Lemma candidate_62: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.add p O)).
Lemma candidate_61: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.add n0 O)).
Lemma candidate_26: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_25: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_18: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p (S O))).
Lemma candidate_17: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n (S O))).
Lemma candidate_8: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_7: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_60: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul n0 (Nat.mul p (S O))).
Lemma candidate_59: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.mul n0 p) (Nat.mul p (Nat.mul n0 (S O))).
Lemma candidate_24: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_23: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_6: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_5: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_16: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S n)).
Lemma candidate_70: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (S n0)).
Lemma candidate_1: forall (lf3 : nat) (p : nat) (lf4 : nat), forall _ : le lf4 lf3, le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma candidate_14: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul p n)).
Lemma candidate_68: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.add p (Nat.mul p n0)).
Lemma candidate_13: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_67: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p)) (Nat.mul p (Nat.add n0 (S O))).
Lemma candidate_12: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_66: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.add p O) (Nat.mul n0 (Nat.add p O))).
Lemma candidate_2: forall (lf3 : nat) (n : nat) (p : nat), forall _ : le (Init.Nat.mul n p) lf3, le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma candidate_3: forall (n0 : nat) (p : nat) (lf4 : nat), forall _ : le lf4 (Init.Nat.mul n0 p), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul n0 p)).
Lemma candidate_11: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_65: forall (n0 : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n0 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n0 (Nat.mul p (S O)))).
Lemma candidate_4: forall (n0 : nat) (n : nat) (p : nat), forall   _ : and (@eq nat n n0)         (and (le (Init.Nat.mul n p) (Init.Nat.mul n0 p))            (and (or (@eq nat n n0) (le (S n) n0)) (le (S n) (S n0)))), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul n0 p)).
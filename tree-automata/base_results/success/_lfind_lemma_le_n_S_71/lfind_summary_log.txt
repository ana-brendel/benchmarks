LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_le_n_S_71

Number of Lemmas: 192
Number of Lemmas (after duplicates removed): 79
Number of Lemmas (after QuickChick used to filter): 78
* Number of Candidate Lemmas: 68

Time until ranking: 1254
Time to complete: 5068

Stuck state true independent of hypotheses: true

Category 1:
Count = 4

Lemma candidate_126: forall (n0 : nat) (n1 : nat), le (S (Nat.max n0 n1)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_48: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (S n1))).
Lemma candidate_4: forall (n0 : nat) (lf4 : nat) (lf5 : nat), forall _ : le lf4 (Init.Nat.max n0 lf5), le (S lf4) (S (Init.Nat.max n0 lf5)).
Lemma candidate_5: forall (n0 : nat) (n1 : nat) (lf4 : nat), forall _ : le lf4 (Init.Nat.max n0 (S n1)), le (S lf4) (S (Init.Nat.max n0 (S n1))).

Category 2:
Count = 0


Category 3 (provable):
Count = 40

Lemma candidate_111: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 O)).
Lemma candidate_113: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (S n1)).
Lemma candidate_110: forall (n1 : nat), @eq nat (S n1) (S (Nat.max n1 n1)).
Lemma candidate_27: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 O)).
Lemma candidate_9: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 O)).
Lemma candidate_29: forall (lf3 : nat), @eq nat (S lf3) (Nat.max lf3 (S lf3)).
Lemma candidate_26: forall (lf3 : nat), @eq nat (S lf3) (S (Nat.max lf3 lf3)).
Lemma candidate_11: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (S lf4)).
Lemma candidate_8: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.max lf4 lf4)).
Lemma candidate_2: forall (lf3 : nat) (lf4 : nat), forall _ : le lf4 lf3, le (S lf4) (S lf3).
Lemma candidate_23: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 n0).
Lemma candidate_71: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 n0).
Lemma candidate_109: forall (n1 : nat), @eq nat (S n1) (Nat.max n1 (Nat.max n1 (S n1))).
Lemma candidate_125: forall (n0 : nat) (n1 : nat), le (S (Nat.max n1 n0)) (S (Init.Nat.max n0 (S n1))).
Lemma candidate_7: forall (lf4 : nat), @eq nat (S lf4) (Nat.max lf4 (Nat.max lf4 (S lf4))).
Lemma candidate_17: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1)) (S (Nat.max n1 n0)).
Lemma candidate_77: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5)) (S (Nat.max lf5 n0)).
Lemma candidate_22: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 O)).
Lemma candidate_21: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 O)).
Lemma candidate_20: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n0 (Nat.max n1 n1)).
Lemma candidate_19: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 n1) (Nat.max n1 (Nat.max n0 n1)).
Lemma candidate_70: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 O)).
Lemma candidate_69: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 O)).
Lemma candidate_68: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max n0 (Nat.max lf5 lf5)).
Lemma candidate_67: forall (n0 : nat) (lf5 : nat), @eq nat (Init.Nat.max n0 lf5) (Nat.max lf5 (Nat.max n0 lf5)).
Lemma candidate_106: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n1 (S n1))).
Lemma candidate_105: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n1 (Nat.max n0 (S n1))).
Lemma candidate_118: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_117: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_112: forall (n1 : nat), @eq nat (S n1) (match n1 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_3: forall (lf3 : nat) (n0 : nat) (n1 : nat), forall _ : le (Init.Nat.max n0 n1) lf3, le (S (Init.Nat.max n0 n1)) (S lf3).
Lemma candidate_28: forall (lf3 : nat), @eq nat (S lf3)   (match lf3 with | O => S lf3 | S m' => S (Nat.max lf3 m') end).
Lemma candidate_10: forall (lf4 : nat), @eq nat (S lf4)   (match lf4 with | O => S lf4 | S m' => S (Nat.max lf4 m') end).
Lemma candidate_47: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_161: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end)).
Lemma candidate_107: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_119: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match n0 with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_103: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1))   (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_115: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1)))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_6: forall (n0 : nat) (n1 : nat) (lf5 : nat), forall   _ : and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))         (and (le (Init.Nat.max n0 n1) (Init.Nat.max n0 lf5))            (and               (le (Init.Nat.max (S (S n0)) n1) (Init.Nat.max (S (S n0)) lf5))               (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))                  (and (le (Init.Nat.max (S n0) n1) (Init.Nat.max (S n0) lf5))                     (le (Init.Nat.max (S (S n0)) n1)                        (Init.Nat.max (S (S n0)) lf5)))))), le (S (Init.Nat.max n0 n1)) (S (Init.Nat.max n0 lf5)).

Category 3 (not provable):
Count = 24

Lemma candidate_84: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (S n0)) (S (Init.Nat.max n0 lf5)).
Lemma candidate_81: forall (n0 : nat) (lf5 : nat), le (Nat.max n0 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_80: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max n0 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_82: forall (n0 : nat) (lf5 : nat), le (Nat.max lf5 (Nat.max lf5 (S n0))) (S (Init.Nat.max n0 lf5)).
Lemma candidate_46: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n1 (S n1)))).
Lemma candidate_45: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n1 (Nat.max n0 (S n1)))).
Lemma candidate_44: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1)) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_104: forall (n0 : nat) (n1 : nat), @eq nat (Init.Nat.max n0 (S n1)) (Nat.max n0 (Nat.max n0 (S n1))).
Lemma candidate_116: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 (S n1))) (S (Nat.max n0 (Nat.max n0 (S n1)))).
Lemma candidate_79: forall (n0 : nat) (lf5 : nat), le (match Nat.max lf5 O with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 lf5)).
Lemma candidate_43: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_157: forall (n0 : nat) (n1 : nat), le (S (Init.Nat.max n0 n1))   (S (match Nat.max n0 O with | O => S n1 | S m' => S (Nat.max n1 m') end)).
Lemma candidate_124: forall (n0 : nat) (n1 : nat), le (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_123: forall (n0 : nat) (n1 : nat), le (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_122: forall (n0 : nat) (n1 : nat), le (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_121: forall (n0 : nat) (n1 : nat), le (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end)   (S (Init.Nat.max n0 (S n1))).
Lemma candidate_16: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_15: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n1) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_14: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n1 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_13: forall (n0 : nat) (n1 : nat), @eq nat (S (Init.Nat.max n0 n1))   (match Nat.max n0 (S n0) with | O => S n1 | S m' => S (Nat.max n1 m') end).
Lemma candidate_75: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_76: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S lf5) with | O => S n0 | S m' => S (Nat.max n0 m') end).
Lemma candidate_73: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max n0 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
Lemma candidate_74: forall (n0 : nat) (lf5 : nat), @eq nat (S (Init.Nat.max n0 lf5))   (match Nat.max lf5 (S n0) with | O => S lf5 | S m' => S (Nat.max lf5 m') end).
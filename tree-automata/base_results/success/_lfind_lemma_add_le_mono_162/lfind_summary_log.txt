LFind Results
LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_add_le_mono_162

Number of Lemmas: 246
Number of Lemmas (after duplicates removed): 107
Number of Lemmas (after QuickChick used to filter): 107
* Number of Candidate Lemmas: 98

Time until ranking: 1683
Time to complete: 7375

Stuck state true independent of hypotheses: true

Category 1:
Count = 15

Lemma candidate_23: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_42: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Nat.add p (Nat.add p lf4)).
Lemma candidate_114: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Nat.add p lf4)).
Lemma candidate_107: forall (p : nat) (lf5 : nat), le (Nat.mul lf5 p) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_2: forall (lf3 : nat) (p : nat) (lf4 : nat), forall _ : le lf4 lf3, le (Init.Nat.add p lf4) (Init.Nat.add p lf3).
Lemma candidate_167: forall (n : nat) (p : nat), le (Nat.add p (Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_156: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.mul p (S (S n))).
Lemma candidate_100: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.add p (Nat.mul p lf5)).
Lemma candidate_58: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.add p (Nat.mul n p))).
Lemma candidate_155: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_153: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_215: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p))   (Init.Nat.add p (Nat.add p (Nat.mul n p))).
Lemma candidate_152: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_3: forall (lf3 : nat) (n : nat) (p : nat), forall _ : le (Init.Nat.mul n p) lf3, le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p lf3).
Lemma candidate_98: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.add p O) (Nat.mul lf5 (Nat.add p O))).

Category 2:
Count = 9

Lemma candidate_40: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p p)).
Lemma candidate_108: forall (p : nat) (lf5 : nat), le (Nat.mul p lf5) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_102: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (S lf5)).
Lemma candidate_55: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_99: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p)) (Nat.mul p (Nat.add lf5 (S O))).
Lemma candidate_164: forall (n : nat) (p : nat), le (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O)))   (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_163: forall (n : nat) (p : nat), le (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O))))   (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_212: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p))   (Init.Nat.add p (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O)))).
Lemma candidate_211: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p))   (Init.Nat.add p (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O))))).

Category 3 (provable):
Count = 48

Lemma candidate_90: forall (p : nat) (lf2 : nat), le lf2 (Init.Nat.add p (lf2)).
Lemma candidate_36: forall (lf3 : nat) (p : nat), le (lf3) (Init.Nat.add p lf3).
Lemma candidate_161: forall (n : nat), @eq nat (S n) (Nat.add n (S O)).
Lemma candidate_160: forall (n : nat), @eq nat (S n) (S (Nat.add n O)).
Lemma candidate_159: forall (n : nat), @eq nat (S n) (S (Nat.mul n (S O))).
Lemma candidate_89: forall (p : nat) (lf2 : nat), le lf2 (Init.Nat.add p (Nat.add lf2 O)).
Lemma candidate_158: forall (n : nat), @eq nat (S n) (S (Nat.add n (Nat.mul n O))).
Lemma candidate_157: forall (n : nat), @eq nat (S n) (Nat.add (Nat.add n (S O)) O).
Lemma candidate_96: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p lf5).
Lemma candidate_30: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 p).
Lemma candidate_11: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 p).
Lemma candidate_150: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (S n)).
Lemma candidate_86: forall (p : nat) (lf2 : nat), le lf2 (Init.Nat.add p (Nat.add lf2 (Nat.mul p O))).
Lemma candidate_85: forall (p : nat) (lf2 : nat), le lf2 (Init.Nat.add p (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_41: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 p)).
Lemma candidate_39: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Nat.add (Nat.add p p) lf4).
Lemma candidate_38: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Nat.add (Nat.add p lf4) p).
Lemma candidate_22: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.add p O)).
Lemma candidate_21: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.add n O)).
Lemma candidate_87: forall (p : nat) (lf2 : nat), le lf2 (Init.Nat.add p (Nat.add lf2 (Nat.mul lf2 O))).
Lemma candidate_148: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.add p (Nat.mul p n)).
Lemma candidate_113: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Nat.add lf4 p)).
Lemma candidate_93: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.add p O)).
Lemma candidate_28: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.add p O)).
Lemma candidate_27: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.add lf3 O)).
Lemma candidate_20: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p (S O))).
Lemma candidate_10: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.add lf4 O)).
Lemma candidate_9: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.add p O)).
Lemma candidate_147: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_91: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul lf5 (Nat.mul p (S O))).
Lemma candidate_26: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add lf3 (Nat.mul p (S O))).
Lemma candidate_25: forall (lf3 : nat) (p : nat), @eq nat (Init.Nat.add p lf3) (Nat.add p (Nat.mul lf3 (S O))).
Lemma candidate_8: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add p (Nat.mul lf4 (S O))).
Lemma candidate_7: forall (p : nat) (lf4 : nat), @eq nat (Init.Nat.add p lf4) (Nat.add lf4 (Nat.mul p (S O))).
Lemma candidate_18: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S n)).
Lemma candidate_111: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Nat.add lf4 (Nat.add p O))).
Lemma candidate_16: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul p n)).
Lemma candidate_109: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Nat.add lf4 (Nat.mul p (S O)))).
Lemma candidate_15: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (Nat.add n (S O))).
Lemma candidate_146: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_151: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul (S n) p))   (Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_145: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul (S n) p)   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_14: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.add p O) (Nat.mul n (Nat.add p O))).
Lemma candidate_4: forall (p : nat) (lf4 : nat) (lf5 : nat), forall _ : le lf4 (Init.Nat.mul lf5 p), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_13: forall (n : nat) (p : nat), @eq nat (Init.Nat.add p (Init.Nat.mul n p))   (Nat.add (Nat.mul p (S O)) (Nat.mul n (Nat.mul p (S O)))).
Lemma candidate_5: forall (n : nat) (p : nat) (lf4 : nat), forall _ : le lf4 (Init.Nat.mul (S n) p), le (Init.Nat.add p lf4) (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_97: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.add p (Init.Nat.mul lf5 p))   (Nat.add (Nat.mul p (S O)) (Nat.mul lf5 (Nat.mul p (S O)))).
Lemma candidate_6: forall (n : nat) (p : nat) (lf5 : nat), forall _ : le (Init.Nat.mul n p) (Init.Nat.mul lf5 p), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Init.Nat.mul lf5 p)).

Category 3 (not provable):
Count = 26

Lemma candidate_35: forall (lf3 : nat) (p : nat), le (Nat.add lf3 O) (Init.Nat.add p lf3).
Lemma candidate_88: forall (p : nat) (lf2 : nat), le lf2 (Init.Nat.add p (Nat.mul lf2 (S O))).
Lemma candidate_34: forall (lf3 : nat) (p : nat), le (Nat.mul lf3 (S O)) (Init.Nat.add p lf3).
Lemma candidate_37: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Nat.add (Nat.add lf4 p) p).
Lemma candidate_33: forall (lf3 : nat) (p : nat), le (Nat.add lf3 (Nat.mul p O)) (Init.Nat.add p lf3).
Lemma candidate_31: forall (lf3 : nat) (p : nat), le (Nat.add (Nat.add lf3 O) O) (Init.Nat.add p lf3).
Lemma candidate_32: forall (lf3 : nat) (p : nat), le (Nat.add lf3 (Nat.mul lf3 O)) (Init.Nat.add p lf3).
Lemma candidate_94: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.add lf5 O)).
Lemma candidate_19: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n (S O))).
Lemma candidate_168: forall (n : nat) (p : nat), le (Nat.mul p (S n)) (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_92: forall (p : nat) (lf5 : nat), @eq nat (Init.Nat.mul lf5 p) (Nat.mul p (Nat.mul lf5 (S O))).
Lemma candidate_60: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S (S n))).
Lemma candidate_166: forall (n : nat) (p : nat), le (Nat.add p (Nat.mul p n)) (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_112: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Nat.add p (Nat.add lf4 O))).
Lemma candidate_106: forall (p : nat) (lf5 : nat), le (Nat.mul p (Nat.add lf5 O)) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_105: forall (p : nat) (lf5 : nat), le (Nat.mul lf5 (Nat.add p O)) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_59: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add p (Nat.mul p (S n))).
Lemma candidate_57: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Nat.add (Nat.mul p (S n)) p).
Lemma candidate_165: forall (n : nat) (p : nat), le (Nat.mul p (Nat.add n (S O))) (Init.Nat.add p (Init.Nat.mul (S n) p)).
Lemma candidate_110: forall (p : nat) (lf4 : nat), le (Init.Nat.add p lf4) (Init.Nat.add p (Nat.add p (Nat.mul lf4 (S O)))).
Lemma candidate_104: forall (p : nat) (lf5 : nat), le (Nat.mul p (Nat.mul lf5 (S O))) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_103: forall (p : nat) (lf5 : nat), le (Nat.mul lf5 (Nat.mul p (S O))) (Init.Nat.add p (Init.Nat.mul lf5 p)).
Lemma candidate_56: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Nat.mul p (S (Nat.add n (S O)))).
Lemma candidate_216: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p)) (Init.Nat.add p (Nat.mul p (S n))).
Lemma candidate_214: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p))   (Init.Nat.add p (Nat.add p (Nat.mul p n))).
Lemma candidate_213: forall (n : nat) (p : nat), le (Init.Nat.add p (Init.Nat.mul n p))   (Init.Nat.add p (Nat.mul p (Nat.add n (S O)))).
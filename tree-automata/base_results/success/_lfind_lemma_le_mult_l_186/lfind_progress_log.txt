File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_le_mult_l_186
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_le_mult_l_186
- Namespace: TreeAutomata
- Proof name: le_mult_r
- Theorem: Theorem le_mult_r: forall (n0 m0 p0 : nat) (_ : le n0 m0),
le (Init.Nat.mul p0 n0) (Init.Nat.mul p0 m0).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: le (Init.Nat.mul n p) (Init.Nat.mul m p)

* Hypothesis:
H0 : @eq nat (Init.Nat.mul p n) (Init.Nat.mul n p)
H1 : @eq nat (Init.Nat.mul p m) (Init.Nat.mul m p)
H : le n m
m : nat
p : nat
n : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
m : nat
p : nat
n : nat

* Terms:
Init.Nat.mul m p : nat
le (Init.Nat.mul n p) (Init.Nat.mul m p) : Prop
nat : Set
@eq nat (Init.Nat.mul p m) (Init.Nat.mul m p) : Prop
Init.Nat.mul p m : nat
Init.Nat.mul n p : nat
m : nat
le n m : Prop
Init.Nat.mul p n : nat
p : nat
n : nat
@eq nat (Init.Nat.mul p n) (Init.Nat.mul n p) : Prop

* Functions:
le  : forall (_ : nat) (_ : nat), Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop
Init.Nat.mul  : forall (_ : nat) (_ : nat), nat

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf1 : nat = Init.Nat.mul m p
lf2 : nat = Init.Nat.mul n p

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf1.
Lemma conj3: forall (lf2 : nat) (m : nat) (p : nat), le lf2 (Init.Nat.mul m p).
Lemma conj4: forall (m : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) (Init.Nat.mul m p).


<---VALIDITY CHECKS--->
Time elapsed: 18 seconds
Valid:

Invalid:
Lemma conj4: forall (m : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) (Init.Nat.mul m p).
Lemma conj3: forall (lf2 : nat) (m : nat) (p : nat), le lf2 (Init.Nat.mul m p).
Lemma conj2: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 37 seconds
Generalizations:
Lemma conj4_imp: forall (m : nat) (p : nat) (n : nat), forall _ : le n m, le (Init.Nat.mul n p) (Init.Nat.mul m p).
Lemma conj4: forall (m : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) (Init.Nat.mul m p).
Lemma conj3: forall (lf2 : nat) (m : nat) (p : nat), le lf2 (Init.Nat.mul m p).
Lemma conj2: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 49 seconds
Valid:
Lemma conj4_imp: forall (m : nat) (p : nat) (n : nat), forall _ : le n m, le (Init.Nat.mul n p) (Init.Nat.mul m p).

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf1 : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) lf1.
Lemma conj3: forall (lf2 : nat) (m : nat) (p : nat), le lf2 (Init.Nat.mul m p).
Lemma conj4: forall (m : nat) (p : nat) (n : nat), le (Init.Nat.mul n p) (Init.Nat.mul m p).


<---CREATE SKETCHES--->
Time elapsed: 49 seconds
Sketches:
Sketch conj2_sketch0 : le (##hole##) lf1
Sketch conj2_term_sketch0 : @eq nat (Init.Nat.mul n p) (##hole##)
Sketch conj3_sketch0 : le lf2 (##hole##)
Sketch conj3_term_sketch0 : @eq nat (Init.Nat.mul m p) (##hole##)
Sketch conj4_sketch0 : le (Init.Nat.mul n p) (##hole##)
Sketch conj4_sketch1 : le (##hole##) (Init.Nat.mul m p)
Sketch conj4_term_sketch0 : @eq nat (Init.Nat.mul m p) (##hole##)
Sketch conj4_term_sketch1 : @eq nat (Init.Nat.mul n p) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 68 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_2
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj4_sketch0 --> Problem  synth_5
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_6


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 130 seconds

Problem: synth_3

Problem: synth_6

Problem: synth_5

Problem: synth_4
 Nat.add (Nat.mul m p) O
 Nat.add (Nat.mul p m) O
 Nat.mul m (Nat.mul p (S O))
 Nat.mul p (Nat.mul m (S O))
 Nat.mul m p
 Nat.mul p m

Problem: synth_1

Problem: synth_2
 Nat.mul p (Nat.mul p n)
 Nat.mul n (Nat.mul n p)
 Nat.mul p (Nat.mul n p)
 Nat.mul n (Nat.mul p p)
 Nat.mul p n
 Nat.mul n p

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 130 seconds
Lemmas:
Lemma candidate_1: forall (n : nat) (p : nat) (m : nat), forall _ : le n m, le (Init.Nat.mul n p) (Init.Nat.mul m p).
Lemma candidate_2: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul p n)).
Lemma candidate_3: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul n p)).
Lemma candidate_4: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n p)).
Lemma candidate_5: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p p)).
Lemma candidate_6: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_7: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n p).
Lemma candidate_8: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.add (Nat.mul m p) O).
Lemma candidate_9: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.add (Nat.mul p m) O).
Lemma candidate_10: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul m (Nat.mul p (S O))).
Lemma candidate_11: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul p (Nat.mul m (S O))).
Lemma candidate_12: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul m p).
Lemma candidate_13: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul p m).
Lemma candidate_14: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.add (Nat.mul m p) O).
Lemma candidate_15: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.add (Nat.mul p m) O).
Lemma candidate_16: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul m (Nat.mul p (S O))).
Lemma candidate_17: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul p (Nat.mul m (S O))).
Lemma candidate_18: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul m p).
Lemma candidate_19: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul p m).
Lemma candidate_20: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul p n)).
Lemma candidate_21: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul n p)).
Lemma candidate_22: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p (Nat.mul n p)).
Lemma candidate_23: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n (Nat.mul p p)).
Lemma candidate_24: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_25: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul n p).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 172 seconds
Duplicates removed: 12
Filtered by Quickchick: 4
Filtered by script: 3
Remaining: 6

Lemmas: 
Lemma candidate_13: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul p m).
Lemma candidate_6: forall (n : nat) (p : nat), @eq nat (Init.Nat.mul n p) (Nat.mul p n).
Lemma candidate_9: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.add (Nat.mul p m) O).
Lemma candidate_11: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul p (Nat.mul m (S O))).
Lemma candidate_10: forall (p : nat) (m : nat), @eq nat (Init.Nat.mul m p) (Nat.mul m (Nat.mul p (S O))).
Lemma candidate_1: forall (n : nat) (p : nat) (m : nat), forall _ : le n m, le (Init.Nat.mul n p) (Init.Nat.mul m p).
File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/lemma_max_l_66
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/_lfind_lemma_max_l_66
- Namespace: TreeAutomata
- Proof name: max_le_Sr_0
- Theorem: Theorem max_le_Sr_0: forall n1 m0 : nat,
and (le (Init.Nat.max n1 m0) (Init.Nat.max n1 (S m0)))
  (le (Init.Nat.max (S n1) m0) (Init.Nat.max (S n1) (S m0))).
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: @eq nat (Init.Nat.max n0 O) n0

* Hypothesis:
m : nat
H : forall m0 : nat,
and (le (Init.Nat.max n0 m0) (Init.Nat.max n0 (S m0)))
  (le (Init.Nat.max (S n0) m0) (Init.Nat.max (S n0) (S m0)))
n : nat
n0 : nat

* Types:
Set
Prop
nat

* Polymorphic Types:


* Variables:
n0 : nat

* Terms:
Init.Nat.max n0 (S _UNBOUND_REL_1) : nat
Init.Nat.max n0 O : nat
and
  (le (Init.Nat.max n0 _UNBOUND_REL_1) (Init.Nat.max n0 (S _UNBOUND_REL_1)))
  (le (Init.Nat.max (S n0) _UNBOUND_REL_1)
     (Init.Nat.max (S n0) (S _UNBOUND_REL_1))) : Prop
nat : Set
S _UNBOUND_REL_1 : nat
S n0 : nat
Init.Nat.max (S n0) _UNBOUND_REL_1 : nat
forall m0 : nat,
and (le (Init.Nat.max n0 m0) (Init.Nat.max n0 (S m0)))
  (le (Init.Nat.max (S n0) m0) (Init.Nat.max (S n0) (S m0))) : Prop
le (Init.Nat.max (S n0) _UNBOUND_REL_1)
  (Init.Nat.max (S n0) (S _UNBOUND_REL_1)) : Prop
Init.Nat.max (S n0) (S _UNBOUND_REL_1) : nat
@eq nat (Init.Nat.max n0 O) n0 : Prop
n0 : nat
Init.Nat.max n0 _UNBOUND_REL_1 : nat
le (Init.Nat.max n0 _UNBOUND_REL_1) (Init.Nat.max n0 (S _UNBOUND_REL_1)) : Prop
O : nat

* Functions:
and  : forall (_ : Prop) (_ : Prop), Prop
le  : forall (_ : nat) (_ : nat), Prop
Init.Nat.max  : forall (_ : nat) (_ : nat), nat
S  : forall _ : nat, nat
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf1 : nat = Init.Nat.max n0 O
lf2 : nat = O

Generalizations:
Lemma conj1: forall (lf1 : nat) (n0 : nat), @eq nat lf1 n0.
Lemma conj3: forall (lf2 : nat) (n0 : nat), @eq nat (Init.Nat.max n0 lf2) n0.
Lemma conj4: forall (n0 : nat), @eq nat (Init.Nat.max n0 O) n0.


<---VALIDITY CHECKS--->
Time elapsed: 18 seconds
Valid:
Lemma conj4: forall (n0 : nat), @eq nat (Init.Nat.max n0 O) n0.

Invalid:
Lemma conj3: forall (lf2 : nat) (n0 : nat), @eq nat (Init.Nat.max n0 lf2) n0.
Lemma conj1: forall (lf1 : nat) (n0 : nat), @eq nat lf1 n0.

<---ADD IMPLICATIONS--->
Time elapsed: 23 seconds
Generalizations:
Lemma conj3: forall (lf2 : nat) (n0 : nat), @eq nat (Init.Nat.max n0 lf2) n0.
Lemma conj1: forall (lf1 : nat) (n0 : nat), @eq nat lf1 n0.


<---VALIDITY CHECKS--->
Time elapsed: 29 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : nat) (n0 : nat), @eq nat lf1 n0.
Lemma conj3: forall (lf2 : nat) (n0 : nat), @eq nat (Init.Nat.max n0 lf2) n0.


<---CREATE SKETCHES--->
Time elapsed: 29 seconds
Sketches:
Sketch conj3_sketch0 : @eq nat (##hole##) n0
Sketch conj3_term_sketch0 : @eq nat (Init.Nat.max n0 lf2) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 36 seconds
Problems per Sketch:
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj3_term_sketch0 --> Problem  synth_2


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 38 seconds

Problem: synth_1
 Nat.max (Nat.max n0 O) O
 Nat.max n0 (Nat.max n0 n0)
 Nat.max n0 (Nat.max n0 O)
 Nat.max n0 n0
 Nat.max n0 O
 n0

Problem: synth_2
 Nat.max n0 (Nat.max lf2 O)
 Nat.max n0 n0
 Nat.max lf2 n0
 Nat.max n0 lf2
 Nat.max n0 O
 n0

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 38 seconds
Lemmas:
Lemma candidate_1: forall (n0 : nat), @eq nat (Init.Nat.max n0 O) n0.
Lemma candidate_2: forall (n0 : nat), @eq nat (Nat.max (Nat.max n0 O) O) n0.
Lemma candidate_3: forall (n0 : nat), @eq nat (Nat.max n0 (Nat.max n0 n0)) n0.
Lemma candidate_4: forall (n0 : nat), @eq nat (Nat.max n0 (Nat.max n0 O)) n0.
Lemma candidate_5: forall (n0 : nat), @eq nat (Nat.max n0 n0) n0.
Lemma candidate_6: forall (n0 : nat), @eq nat (Nat.max n0 O) n0.
Lemma candidate_7: forall (n0 : nat), @eq nat (n0) n0.
Lemma candidate_8: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max n0 (Nat.max lf2 O)).
Lemma candidate_9: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max n0 n0).
Lemma candidate_10: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max lf2 n0).
Lemma candidate_11: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max n0 lf2).
Lemma candidate_12: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max n0 O).
Lemma candidate_13: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (n0).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 82 seconds
Duplicates removed: 1
Filtered by Quickchick: 3
Filtered by script: 2
Remaining: 7

Lemmas: 
Lemma candidate_6: forall (n0 : nat), @eq nat (Nat.max n0 O) n0.
Lemma candidate_5: forall (n0 : nat), @eq nat (Nat.max n0 n0) n0.
Lemma candidate_2: forall (n0 : nat), @eq nat (Nat.max (Nat.max n0 O) O) n0.
Lemma candidate_4: forall (n0 : nat), @eq nat (Nat.max n0 (Nat.max n0 O)) n0.
Lemma candidate_3: forall (n0 : nat), @eq nat (Nat.max n0 (Nat.max n0 n0)) n0.
Lemma candidate_10: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max lf2 n0).
Lemma candidate_8: forall (n0 : nat) (lf2 : nat), @eq nat (Init.Nat.max n0 lf2) (Nat.max n0 (Nat.max lf2 O)).
File Information
- File name: base
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/base_tests/lemma_not_true_is_false_277
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/base_tests/_lfind_lemma_not_true_is_false_277
- Namespace: TreeAutomata
- Proof name: in_M1_id
- Theorem: Theorem in_M1_id: forall (A0 : Set) (a0 : A0) (x1 : ad) (e0 : A0)
  (_ : @ex ad
         (fun c : ad =>
          @eq (option A0) (MapGet A0 (M1 A0 x1 e0) c) (@Some A0 a0))),
@eq A0 a0 e0.
- Declarations: 
From lfind Require Import LFind.
Require Import Arith.
Require Import BinNat.
From IntMap Require Import Allmaps.

Proof Context
* Goal State: @eq bool (N.eqb x x0) false

* Hypothesis:
H0 : @eq (option A) (MapGet A (M1 A x e) x0) (@Some A a)
x0 : ad
x : ad
H : @ex ad (fun c : ad => @eq (option A) (MapGet A (M1 A x e) c) (@Some A a))
A : Set
y : not (@eq bool (N.eqb x x0) true)
e : A
a : A

* Types:
Set
Prop
Type
option A
forall _ : ad, Prop
A
ad
Map A
bool

* Polymorphic Types:
option A

* Variables:
x0 : ad
x : ad
A : Set
e : A
a : A

* Terms:
x0 : ad
@eq (option A) (MapGet A (M1 A x e) _UNBOUND_REL_1) (@Some A a) : Prop
x : ad
A : Set
not (@eq bool (N.eqb x x0) true) : Prop
@Some A a : option A
true : bool
Set : Type
M1 A x e : Map A
@eq bool (N.eqb x x0) true : Prop
MapGet A (M1 A x e) x0 : option A
false : bool
bool : Set
@eq (option A) (MapGet A (M1 A x e) x0) (@Some A a) : Prop
fun c : ad => @eq (option A) (MapGet A (M1 A x e) c) (@Some A a) : forall _ : ad, Prop
@ex ad (fun c : ad => @eq (option A) (MapGet A (M1 A x e) c) (@Some A a)) : Prop
ad : Set
option A : Set
@eq bool (N.eqb x x0) false : Prop
MapGet A (M1 A x e) _UNBOUND_REL_1 : option A
N.eqb x x0 : bool
e : A
a : A

* Functions:
ex  : forall (A0 : Type) (_ : forall _ : A0, Prop), Prop
N.eqb  : forall (_ : N) (_ : N), bool
M1  : forall (A0 : Type) (_ : ad) (_ : A0), Map A0
MapGet  : forall (A0 : Type) (_ : Map A0) (_ : ad), option A0
@Some  : forall (A0 : Type) (_ : A0), option A0
option  : forall _ : Type, Type
not  : forall _ : Prop, Prop
@eq  : forall (A0 : Type) (_ : A0) (_ : A0), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf1 : bool = N.eqb x x0
lf2 : bool = false

Generalizations:
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj3: forall (lf2 : bool) (x0 : ad) (x : ad), @eq bool (N.eqb x x0) lf2.
Lemma conj4: forall (x0 : ad) (x : ad), @eq bool (N.eqb x x0) false.


<---VALIDITY CHECKS--->
Time elapsed: 8 seconds
Valid:

Invalid:
Lemma conj4: forall (x0 : ad) (x : ad), @eq bool (N.eqb x x0) false.
Lemma conj3: forall (lf2 : bool) (x0 : ad) (x : ad), @eq bool (N.eqb x x0) lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.

<---ADD IMPLICATIONS--->
Time elapsed: 26 seconds
Generalizations:
Lemma conj4: forall (x0 : ad) (x : ad), @eq bool (N.eqb x x0) false.
Lemma conj4_imp: forall (x0 : ad) (x : ad), forall _ : not (@eq bool (N.eqb x x0) true), @eq bool (N.eqb x x0) false.
Lemma conj3: forall (lf2 : bool) (x0 : ad) (x : ad), @eq bool (N.eqb x x0) lf2.
Lemma conj3_imp: forall (lf2 : bool) (x0 : ad) (x : ad), forall _ : not (@eq bool (N.eqb x x0) true), @eq bool (N.eqb x x0) lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj2_imp: forall (lf1 : bool), forall _ : not (@eq bool lf1 true), @eq bool lf1 false.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj1_imp: forall (lf2 : bool) (lf1 : bool), forall _ : not (@eq bool lf1 true), @eq bool lf1 lf2.


<---VALIDITY CHECKS--->
Time elapsed: 37 seconds
Valid:
Lemma conj2_imp: forall (lf1 : bool), forall _ : not (@eq bool lf1 true), @eq bool lf1 false.
Lemma conj4_imp: forall (x0 : ad) (x : ad), forall _ : not (@eq bool (N.eqb x x0) true), @eq bool (N.eqb x x0) false.

Invalid:
Lemma conj1_imp: forall (lf2 : bool) (lf1 : bool), forall _ : not (@eq bool lf1 true), @eq bool lf1 lf2.
Lemma conj1: forall (lf2 : bool) (lf1 : bool), @eq bool lf1 lf2.
Lemma conj2: forall (lf1 : bool), @eq bool lf1 false.
Lemma conj3_imp: forall (lf2 : bool) (x0 : ad) (x : ad), forall _ : not (@eq bool (N.eqb x x0) true), @eq bool (N.eqb x x0) lf2.
Lemma conj3: forall (lf2 : bool) (x0 : ad) (x : ad), @eq bool (N.eqb x x0) lf2.
Lemma conj4: forall (x0 : ad) (x : ad), @eq bool (N.eqb x x0) false.


<---CREATE SKETCHES--->
Time elapsed: 37 seconds
Sketches:
Sketch conj1_imp_sketch0 : forall _ : not (@eq bool lf1 (##hole##)), @eq bool lf1 lf2
Sketch conj1_imp_term_sketch0 : @eq bool true (##hole##)
Sketch conj2_sketch0 : @eq bool lf1 (##hole##)
Sketch conj2_term_sketch0 : @eq bool false (##hole##)
Sketch conj3_imp_sketch0 : forall _ : not (@eq bool (##hole##) true), @eq bool (##hole##) lf2
Sketch conj3_imp_sketch1 : forall _ : not (@eq bool (N.eqb x x0) (##hole##)), @eq bool (N.eqb x x0) lf2
Sketch conj3_imp_term_sketch0 : @eq bool (N.eqb x x0) (##hole##)
Sketch conj3_imp_term_sketch1 : @eq bool true (##hole##)
Sketch conj3_sketch0 : @eq bool (##hole##) lf2
Sketch conj3_term_sketch0 : @eq bool (N.eqb x x0) (##hole##)
Sketch conj4_sketch0 : @eq bool (N.eqb x x0) (##hole##)
Sketch conj4_sketch1 : @eq bool (##hole##) false
Sketch conj4_term_sketch0 : @eq bool false (##hole##)
Sketch conj4_term_sketch1 : @eq bool (N.eqb x x0) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 41 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_7
Sketch conj3_imp_term_sketch0 --> Problem  synth_7
Sketch conj2_term_sketch0 --> Problem  synth_4
Sketch conj3_sketch0 --> Problem  synth_5
Sketch conj3_term_sketch0 --> Problem  synth_7
Sketch conj3_imp_term_sketch1 --> Problem  synth_2
Sketch conj3_imp_sketch1 --> Problem  synth_6
Sketch conj3_imp_sketch0 --> Problem  synth_5
Sketch conj4_term_sketch0 --> Problem  synth_4
Sketch conj4_sketch0 --> Problem  synth_8
Sketch conj2_sketch0 --> Problem  synth_3
Sketch conj1_imp_term_sketch0 --> Problem  synth_2
Sketch conj4_sketch1 --> Problem  synth_2
Sketch conj1_imp_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 117 seconds

Problem: synth_8

Problem: synth_3
 false

Problem: synth_6

Problem: synth_7

Problem: synth_5
 true

Problem: synth_4
 false

Problem: synth_1
 lf1
 true

Problem: synth_2
 true

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 117 seconds
Lemmas:
Lemma candidate_1: forall (lf1 : bool), forall _ : not (@eq bool lf1 true), @eq bool lf1 false.
Lemma candidate_2: forall (x : ad) (x0 : ad), forall _ : not (@eq bool (N.eqb x x0) true), @eq bool (N.eqb x x0) false.
Lemma candidate_3: forall (lf1 : bool) (lf2 : bool), forall _ : not (@eq bool lf1 (lf1)), @eq bool lf1 lf2.
Lemma candidate_4: forall (lf1 : bool) (lf2 : bool), forall _ : not (@eq bool lf1 (true)), @eq bool lf1 lf2.
Lemma candidate_5: @eq bool true (true).
Lemma candidate_6: forall (lf1 : bool), @eq bool lf1 (false).
Lemma candidate_7: @eq bool false (false).
Lemma candidate_8: forall (lf2 : bool), forall _ : not (@eq bool (true) true), @eq bool (true) lf2.
Lemma candidate_9: @eq bool true (true).
Lemma candidate_10: forall (lf2 : bool), @eq bool (true) lf2.
Lemma candidate_11: @eq bool (true) false.
Lemma candidate_12: @eq bool false (false).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 138 seconds
Duplicates removed: 2
Filtered by Quickchick: 4
Filtered by script: 2
Remaining: 4

Lemmas: 
Lemma candidate_3: forall (lf1 : bool) (lf2 : bool), forall _ : not (@eq bool lf1 (lf1)), @eq bool lf1 lf2.
Lemma candidate_1: forall (lf1 : bool), forall _ : not (@eq bool lf1 true), @eq bool lf1 false.
Lemma candidate_8: forall (lf2 : bool), forall _ : not (@eq bool (true) true), @eq bool (true) lf2.
Lemma candidate_2: forall (x : ad) (x0 : ad), forall _ : not (@eq bool (N.eqb x x0) true), @eq bool (N.eqb x x0) false.
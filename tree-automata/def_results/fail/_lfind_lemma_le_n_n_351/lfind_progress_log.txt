File Information
- File name: defs
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/lemma_le_n_n_351
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/_lfind_lemma_le_n_n_351
- Namespace: TreeAutomata
- Proof name: term_occur_0_0
- Theorem: Theorem term_occur_0_0: forall (a0 : ad) (t1 : term_list) (_ : term_occur_def_1 t1),
term_occur_def_0 (app a0 t1).
- Declarations: 
From lfind Require Import LFind.
Require Import Bool.
Require Import Arith.
Require Import ZArith.
From IntMap Require Import Allmaps.
Require Import EqNat.
From TreeAutomataCoqGym Require Import bases.

Proof Context
* Goal State: le (term_high (app a t)) (term_high (app a t))

* Hypothesis:
H0 : term_occur u (app a t)
H2 : @eq term u (app a t)
H1 : @eq term t0 u
H : forall (u0 : term) (_ : term_list_occur u0 t),
le (term_high u0) (term_high_0 t)
t0 : term
t : term_list
u : term
a : ad

* Types:
Set
Prop
term_list
ad
nat
term

* Polymorphic Types:


* Variables:
t0 : term
t : term_list
u : term
a : ad

* Terms:
@eq term t0 u : Prop
term_list : Set
u : term
forall (u0 : term) (_ : term_list_occur u0 t),
le (term_high u0) (term_high_0 t) : Prop
term_high_0 t : nat
term : Set
term_occur u (app a t) : Prop
term_high (app a t) : nat
ad : Set
t0 : term
term_high _UNBOUND_REL_2 : nat
t : term_list
forall _ : term_list_occur _UNBOUND_REL_1 t,
le (term_high _UNBOUND_REL_2) (term_high_0 t) : Prop
le (term_high _UNBOUND_REL_2) (term_high_0 t) : Prop
app a t : term
@eq term u (app a t) : Prop
term_list_occur _UNBOUND_REL_1 t : Prop
a : ad
le (term_high (app a t)) (term_high (app a t)) : Prop

* Functions:
term_high_0  : forall _ : term_list, nat
app  : forall (_ : ad) (_ : term_list), term
term_occur  : forall (_ : term) (_ : term), Prop
term_list_occur  : forall (_ : term) (_ : term_list), Prop
term_high  : forall _ : term, nat
le  : forall (_ : nat) (_ : nat), Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf1 : nat = term_high (app a t)
lf2 : term = app a t

Generalizations:
Lemma conj1: forall (lf1 : nat), le lf1 lf1.
Lemma conj3: forall (lf2 : term), le (term_high lf2) (term_high lf2).
Lemma conj4: forall (t : term_list) (a : ad), le (term_high (app a t)) (term_high (app a t)).


<---VALIDITY CHECKS--->
Time elapsed: 7 seconds
Valid:
Lemma conj4: forall (t : term_list) (a : ad), le (term_high (app a t)) (term_high (app a t)).
Lemma conj3: forall (lf2 : term), le (term_high lf2) (term_high lf2).
Lemma conj1: forall (lf1 : nat), le lf1 lf1.

Invalid:

<---ADD IMPLICATIONS--->
Time elapsed: 8 seconds
Generalizations:


<---VALIDITY CHECKS--->
Time elapsed: 8 seconds
Valid:

Invalid:


<---CREATE SKETCHES--->
Time elapsed: 8 seconds
Sketches:


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 8 seconds
Problems per Sketch:


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 9 seconds

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 9 seconds
Lemmas:
Lemma candidate_1: forall (a : ad) (t : term_list), le (term_high (app a t)) (term_high (app a t)).
Lemma candidate_2: forall (lf2 : term), le (term_high lf2) (term_high lf2).
Lemma candidate_3: forall (lf1 : nat), le lf1 lf1.

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 13 seconds
Duplicates removed: 1
Filtered by Quickchick: 0
Filtered by script: 2
Remaining: 0

Lemmas: 
File Information
- File name: defs
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/lemma_le_max_l_373
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/_lfind_lemma_le_max_l_373
- Namespace: TreeAutomata
- Proof name: term_occur_0_2
- Theorem: Theorem term_occur_0_2: forall (t2 : term) (_ : term_occur_def_0 t2) (t3 : term_list)
  (_ : term_occur_def_1 t3), term_occur_def_1 (tcons t2 t3).
- Declarations: 
From lfind Require Import LFind.
Require Import Bool.
Require Import Arith.
Require Import ZArith.
From IntMap Require Import Allmaps.
Require Import EqNat.
From TreeAutomataCoqGym Require Import bases.

Proof Context
* Goal State: le (term_high t) (term_high_0 (tcons t t0))

* Hypothesis:
t1 : term
H4 : term_occur u t
hd : term
H0 : forall (u0 : term) (_ : term_list_occur u0 t0),
le (term_high u0) (term_high_0 t0)
H2 : @eq term hd t
H1 : term_list_occur u (tcons t t0)
tl : term_list
H : forall (u0 : term) (_ : term_occur u0 t), le (term_high u0) (term_high t)
t0 : term_list
H5 : @eq term_list tl t0
t : term
H3 : @eq term t1 u
u : term

* Types:
Set
Prop
term_list
nat
term

* Polymorphic Types:


* Variables:
t1 : term
hd : term
tl : term_list
t0 : term_list
t : term
u : term

* Terms:
forall (u0 : term) (_ : term_list_occur u0 t0),
le (term_high u0) (term_high_0 t0) : Prop
@eq term_list tl t0 : Prop
term_list_occur _UNBOUND_REL_1 t0 : Prop
@eq term hd t : Prop
tl : term_list
le (term_high _UNBOUND_REL_2) (term_high t) : Prop
le (term_high _UNBOUND_REL_2) (term_high_0 t0) : Prop
term_list : Set
forall _ : term_list_occur _UNBOUND_REL_1 t0,
le (term_high _UNBOUND_REL_2) (term_high_0 t0) : Prop
forall (u0 : term) (_ : term_occur u0 t), le (term_high u0) (term_high t) : Prop
u : term
term : Set
t1 : term
term_list_occur u (tcons t t0) : Prop
hd : term
term_high t : nat
forall _ : term_occur _UNBOUND_REL_1 t,
le (term_high _UNBOUND_REL_2) (term_high t) : Prop
term_occur _UNBOUND_REL_1 t : Prop
@eq term t1 u : Prop
le (term_high t) (term_high_0 (tcons t t0)) : Prop
term_high_0 t0 : nat
term_high_0 (tcons t t0) : nat
t0 : term_list
term_high _UNBOUND_REL_2 : nat
t : term
tcons t t0 : term_list
term_occur u t : Prop

* Functions:
term_high_0  : forall _ : term_list, nat
term_occur  : forall (_ : term) (_ : term), Prop
term_list_occur  : forall (_ : term) (_ : term_list), Prop
term_high  : forall _ : term, nat
le  : forall (_ : nat) (_ : nat), Prop
tcons  : forall (_ : term) (_ : term_list), term_list
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : term_list = tcons t t0
lf1 : nat = term_high_0 (tcons t t0)
lf2 : nat = term_high t

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf1 : nat) (t : term), le (term_high t) lf1.
Lemma conj3: forall (lf2 : nat) (lf3 : term_list), le lf2 (term_high_0 lf3).
Lemma conj4: forall (t : term) (lf3 : term_list), le (term_high t) (term_high_0 lf3).
Lemma conj7: forall (lf2 : nat) (t0 : term_list) (t : term), le lf2 (term_high_0 (tcons t t0)).
Lemma conj8: forall (t0 : term_list) (t : term), le (term_high t) (term_high_0 (tcons t t0)).


<---VALIDITY CHECKS--->
Time elapsed: 12 seconds
Valid:
Lemma conj8: forall (t0 : term_list) (t : term), le (term_high t) (term_high_0 (tcons t t0)).

Invalid:
Lemma conj7: forall (lf2 : nat) (t0 : term_list) (t : term), le lf2 (term_high_0 (tcons t t0)).
Lemma conj4: forall (t : term) (lf3 : term_list), le (term_high t) (term_high_0 lf3).
Lemma conj3: forall (lf2 : nat) (lf3 : term_list), le lf2 (term_high_0 lf3).
Lemma conj2: forall (lf1 : nat) (t : term), le (term_high t) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 34 seconds
Generalizations:
Lemma conj7: forall (lf2 : nat) (t0 : term_list) (t : term), le lf2 (term_high_0 (tcons t t0)).
Lemma conj4: forall (t : term) (lf3 : term_list), le (term_high t) (term_high_0 lf3).
Lemma conj3: forall (lf2 : nat) (lf3 : term_list), le lf2 (term_high_0 lf3).
Lemma conj2: forall (lf1 : nat) (t : term), le (term_high t) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 41 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf1 : nat) (t : term), le (term_high t) lf1.
Lemma conj3: forall (lf2 : nat) (lf3 : term_list), le lf2 (term_high_0 lf3).
Lemma conj4: forall (t : term) (lf3 : term_list), le (term_high t) (term_high_0 lf3).
Lemma conj7: forall (lf2 : nat) (t0 : term_list) (t : term), le lf2 (term_high_0 (tcons t t0)).


<---CREATE SKETCHES--->
Time elapsed: 42 seconds
Sketches:
Sketch conj2_sketch0 : le (##hole##) lf1
Sketch conj2_term_sketch0 : @eq nat (term_high t) (##hole##)
Sketch conj3_sketch0 : le lf2 (##hole##)
Sketch conj3_term_sketch0 : @eq nat (term_high_0 lf3) (##hole##)
Sketch conj4_sketch0 : le (##hole##) (term_high_0 lf3)
Sketch conj4_sketch1 : le (term_high t) (##hole##)
Sketch conj4_term_sketch0 : @eq nat (term_high t) (##hole##)
Sketch conj4_term_sketch1 : @eq nat (term_high_0 lf3) (##hole##)
Sketch conj7_sketch0 : le lf2 (##hole##)
Sketch conj7_sketch1 : le lf2 (term_high_0 (##hole##))
Sketch conj7_term_sketch0 : @eq nat (term_high_0 (tcons t t0)) (##hole##)
Sketch conj7_term_sketch1 : @eq term_list (tcons t t0) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 42 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_4
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj7_sketch1 --> Problem  synth_5
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj7_term_sketch1 --> Problem  synth_7
Sketch conj7_term_sketch0 --> Problem  synth_6
Sketch conj4_term_sketch0 --> Problem  synth_2
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj4_sketch0 --> Problem  synth_4
Sketch conj2_sketch0 --> Problem  synth_1
Sketch conj4_sketch1 --> Problem  synth_2


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 60 seconds

Problem: synth_3
 S (S lf2)
 S (S O)
 S lf2
 S O
 lf2
 O

Problem: synth_6
 term_high t
 taille_term t
 term_high_0 t0
 mtaille_term_list t0
 lst_length t0
 O

Problem: synth_7
 tcons t (tcons t t0)
 tcons t (tcons t tnil)
 tcons t t0
 tcons t tnil
 t0
 tnil

Problem: synth_5
 tnil

Problem: synth_4
 S (lst_length lf3)
 S O
 term_high_0 lf3
 mtaille_term_list lf3
 lst_length lf3
 O

Problem: synth_1
 S (S lf1)
 S (S O)
 S lf1
 S O
 lf1
 O

Problem: synth_2
 S (term_high t)
 S (taille_term t)
 S O
 term_high t
 taille_term t
 O

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 60 seconds
Lemmas:
Lemma candidate_1: forall (t : term) (t0 : term_list), le (term_high t) (term_high_0 (tcons t t0)).
Lemma candidate_2: forall (lf1 : nat), le (S (S lf1)) lf1.
Lemma candidate_3: forall (lf1 : nat), le (S (S O)) lf1.
Lemma candidate_4: forall (lf1 : nat), le (S lf1) lf1.
Lemma candidate_5: forall (lf1 : nat), le (S O) lf1.
Lemma candidate_6: forall (lf1 : nat), le (lf1) lf1.
Lemma candidate_7: forall (lf1 : nat), le (O) lf1.
Lemma candidate_8: forall (t : term), @eq nat (term_high t) (S (term_high t)).
Lemma candidate_9: forall (t : term), @eq nat (term_high t) (S (taille_term t)).
Lemma candidate_10: forall (t : term), @eq nat (term_high t) (S O).
Lemma candidate_11: forall (t : term), @eq nat (term_high t) (term_high t).
Lemma candidate_12: forall (t : term), @eq nat (term_high t) (taille_term t).
Lemma candidate_13: forall (t : term), @eq nat (term_high t) (O).
Lemma candidate_14: forall (lf2 : nat), le lf2 (S (S lf2)).
Lemma candidate_15: forall (lf2 : nat), le lf2 (S (S O)).
Lemma candidate_16: forall (lf2 : nat), le lf2 (S lf2).
Lemma candidate_17: forall (lf2 : nat), le lf2 (S O).
Lemma candidate_18: forall (lf2 : nat), le lf2 (lf2).
Lemma candidate_19: forall (lf2 : nat), le lf2 (O).
Lemma candidate_20: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (S (lst_length lf3)).
Lemma candidate_21: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (S O).
Lemma candidate_22: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (term_high_0 lf3).
Lemma candidate_23: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (mtaille_term_list lf3).
Lemma candidate_24: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (lst_length lf3).
Lemma candidate_25: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (O).
Lemma candidate_26: forall (lf3 : term_list), le (S (lst_length lf3)) (term_high_0 lf3).
Lemma candidate_27: forall (lf3 : term_list), le (S O) (term_high_0 lf3).
Lemma candidate_28: forall (lf3 : term_list), le (term_high_0 lf3) (term_high_0 lf3).
Lemma candidate_29: forall (lf3 : term_list), le (mtaille_term_list lf3) (term_high_0 lf3).
Lemma candidate_30: forall (lf3 : term_list), le (lst_length lf3) (term_high_0 lf3).
Lemma candidate_31: forall (lf3 : term_list), le (O) (term_high_0 lf3).
Lemma candidate_32: forall (t : term), le (term_high t) (S (term_high t)).
Lemma candidate_33: forall (t : term), le (term_high t) (S (taille_term t)).
Lemma candidate_34: forall (t : term), le (term_high t) (S O).
Lemma candidate_35: forall (t : term), le (term_high t) (term_high t).
Lemma candidate_36: forall (t : term), le (term_high t) (taille_term t).
Lemma candidate_37: forall (t : term), le (term_high t) (O).
Lemma candidate_38: forall (t : term), @eq nat (term_high t) (S (term_high t)).
Lemma candidate_39: forall (t : term), @eq nat (term_high t) (S (taille_term t)).
Lemma candidate_40: forall (t : term), @eq nat (term_high t) (S O).
Lemma candidate_41: forall (t : term), @eq nat (term_high t) (term_high t).
Lemma candidate_42: forall (t : term), @eq nat (term_high t) (taille_term t).
Lemma candidate_43: forall (t : term), @eq nat (term_high t) (O).
Lemma candidate_44: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (S (lst_length lf3)).
Lemma candidate_45: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (S O).
Lemma candidate_46: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (term_high_0 lf3).
Lemma candidate_47: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (mtaille_term_list lf3).
Lemma candidate_48: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (lst_length lf3).
Lemma candidate_49: forall (lf3 : term_list), @eq nat (term_high_0 lf3) (O).
Lemma candidate_50: forall (lf2 : nat), le lf2 (S (S lf2)).
Lemma candidate_51: forall (lf2 : nat), le lf2 (S (S O)).
Lemma candidate_52: forall (lf2 : nat), le lf2 (S lf2).
Lemma candidate_53: forall (lf2 : nat), le lf2 (S O).
Lemma candidate_54: forall (lf2 : nat), le lf2 (lf2).
Lemma candidate_55: forall (lf2 : nat), le lf2 (O).
Lemma candidate_56: forall (lf2 : nat), le lf2 (term_high_0 (tnil)).
Lemma candidate_57: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (term_high t).
Lemma candidate_58: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (taille_term t).
Lemma candidate_59: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (term_high_0 t0).
Lemma candidate_60: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (mtaille_term_list t0).
Lemma candidate_61: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (lst_length t0).
Lemma candidate_62: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (O).
Lemma candidate_63: forall (t : term) (t0 : term_list), @eq term_list (tcons t t0) (tcons t (tcons t t0)).
Lemma candidate_64: forall (t : term) (t0 : term_list), @eq term_list (tcons t t0) (tcons t (tcons t tnil)).
Lemma candidate_65: forall (t : term) (t0 : term_list), @eq term_list (tcons t t0) (tcons t t0).
Lemma candidate_66: forall (t : term) (t0 : term_list), @eq term_list (tcons t t0) (tcons t tnil).
Lemma candidate_67: forall (t : term) (t0 : term_list), @eq term_list (tcons t t0) (t0).
Lemma candidate_68: forall (t : term) (t0 : term_list), @eq term_list (tcons t t0) (tnil).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 158 seconds
Duplicates removed: 19
Filtered by Quickchick: 30
Filtered by script: 11
Remaining: 8

Lemmas: 
Lemma candidate_7: forall (lf1 : nat), le (O) lf1.
Lemma candidate_16: forall (lf2 : nat), le lf2 (S lf2).
Lemma candidate_14: forall (lf2 : nat), le lf2 (S (S lf2)).
Lemma candidate_31: forall (lf3 : term_list), le (O) (term_high_0 lf3).
Lemma candidate_32: forall (t : term), le (term_high t) (S (term_high t)).
Lemma candidate_33: forall (t : term), le (term_high t) (S (taille_term t)).
Lemma candidate_57: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (term_high t).
Lemma candidate_58: forall (t : term) (t0 : term_list), @eq nat (term_high_0 (tcons t t0)) (taille_term t).
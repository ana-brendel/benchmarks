File Information
- File name: defs
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/lemma_le_trans_352
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/_lfind_lemma_le_trans_352
- Namespace: TreeAutomata
- Proof name: term_occur_0_0
- Theorem: Theorem term_occur_0_0: forall (a1 : ad) (t1 : term_list) (_ : term_occur_def_1 t1),
term_occur_def_0 (app a1 t1).
- Declarations: 
From lfind Require Import LFind.
Require Import Bool.
Require Import Arith.
Require Import ZArith.
From IntMap Require Import Allmaps.
Require Import EqNat.
From TreeAutomataCoqGym Require Import bases.

Proof Context
* Goal State: le (term_high u) (term_high (app a t))

* Hypothesis:
H4 : @eq term_list tl t
H0 : term_occur u (app a t)
H1 : @eq ad a0 a
H2 : @eq term t0 u
tl : term_list
a0 : ad
H : forall (u0 : term) (_ : term_list_occur u0 t),
le (term_high u0) (term_high_0 t)
t0 : term
t : term_list
H3 : term_list_occur u t
u : term
a : ad

* Types:
Set
Prop
term_list
ad
nat
term

* Polymorphic Types:


* Variables:
tl : term_list
a0 : ad
t0 : term
t : term_list
u : term
a : ad

* Terms:
term_high u : nat
tl : term_list
@eq term t0 u : Prop
term_list_occur u t : Prop
term_list : Set
@eq ad a0 a : Prop
u : term
forall (u0 : term) (_ : term_list_occur u0 t),
le (term_high u0) (term_high_0 t) : Prop
term_high_0 t : nat
term : Set
term_occur u (app a t) : Prop
term_high (app a t) : nat
a0 : ad
ad : Set
t0 : term
term_high _UNBOUND_REL_2 : nat
t : term_list
forall _ : term_list_occur _UNBOUND_REL_1 t,
le (term_high _UNBOUND_REL_2) (term_high_0 t) : Prop
le (term_high _UNBOUND_REL_2) (term_high_0 t) : Prop
app a t : term
@eq term_list tl t : Prop
term_list_occur _UNBOUND_REL_1 t : Prop
a : ad
le (term_high u) (term_high (app a t)) : Prop

* Functions:
term_high_0  : forall _ : term_list, nat
app  : forall (_ : ad) (_ : term_list), term
term_occur  : forall (_ : term) (_ : term), Prop
term_list_occur  : forall (_ : term) (_ : term_list), Prop
term_high  : forall _ : term, nat
le  : forall (_ : nat) (_ : nat), Prop
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : term = app a t
lf1 : nat = term_high (app a t)
lf2 : nat = term_high u

Generalizations:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf1 : nat) (u : term), le (term_high u) lf1.
Lemma conj3: forall (lf2 : nat) (lf3 : term), le lf2 (term_high lf3).
Lemma conj4: forall (u : term) (lf3 : term), le (term_high u) (term_high lf3).
Lemma conj7: forall (lf2 : nat) (t : term_list) (a : ad), le lf2 (term_high (app a t)).
Lemma conj8: forall (t : term_list) (u : term) (a : ad), le (term_high u) (term_high (app a t)).


<---VALIDITY CHECKS--->
Time elapsed: 12 seconds
Valid:
Lemma conj8: forall (t : term_list) (u : term) (a : ad), le (term_high u) (term_high (app a t)).
Lemma conj4: forall (u : term) (lf3 : term), le (term_high u) (term_high lf3).

Invalid:
Lemma conj7: forall (lf2 : nat) (t : term_list) (a : ad), le lf2 (term_high (app a t)).
Lemma conj3: forall (lf2 : nat) (lf3 : term), le lf2 (term_high lf3).
Lemma conj2: forall (lf1 : nat) (u : term), le (term_high u) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 28 seconds
Generalizations:
Lemma conj7: forall (lf2 : nat) (t : term_list) (a : ad), le lf2 (term_high (app a t)).
Lemma conj3: forall (lf2 : nat) (lf3 : term), le lf2 (term_high lf3).
Lemma conj2: forall (lf1 : nat) (u : term), le (term_high u) lf1.
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 35 seconds
Valid:

Invalid:
Lemma conj1: forall (lf2 : nat) (lf1 : nat), le lf2 lf1.
Lemma conj2: forall (lf1 : nat) (u : term), le (term_high u) lf1.
Lemma conj3: forall (lf2 : nat) (lf3 : term), le lf2 (term_high lf3).
Lemma conj7: forall (lf2 : nat) (t : term_list) (a : ad), le lf2 (term_high (app a t)).


<---CREATE SKETCHES--->
Time elapsed: 35 seconds
Sketches:
Sketch conj2_sketch0 : le (##hole##) lf1
Sketch conj2_term_sketch0 : @eq nat (term_high u) (##hole##)
Sketch conj3_sketch0 : le lf2 (##hole##)
Sketch conj3_term_sketch0 : @eq nat (term_high lf3) (##hole##)
Sketch conj7_sketch0 : le lf2 (##hole##)
Sketch conj7_sketch1 : le lf2 (term_high (##hole##))
Sketch conj7_term_sketch0 : @eq nat (term_high (app a t)) (##hole##)
Sketch conj7_term_sketch1 : @eq term (app a t) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 36 seconds
Problems per Sketch:
Sketch conj2_term_sketch0 --> Problem  synth_2
Sketch conj3_sketch0 --> Problem  synth_3
Sketch conj7_sketch1 --> Problem  synth_5
Sketch conj3_term_sketch0 --> Problem  synth_4
Sketch conj7_term_sketch1 --> Problem  synth_7
Sketch conj7_term_sketch0 --> Problem  synth_6
Sketch conj7_sketch0 --> Problem  synth_3
Sketch conj2_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 54 seconds

Problem: synth_3
 S (S lf2)
 S (S O)
 S lf2
 S O
 lf2
 O

Problem: synth_6

Problem: synth_7

Problem: synth_5

Problem: synth_4
 S (term_high lf3)
 S (taille_term lf3)
 S O
 term_high lf3
 taille_term lf3
 O

Problem: synth_1
 S (S lf1)
 S (S O)
 S lf1
 S O
 lf1
 O

Problem: synth_2
 S (term_high u)
 S (taille_term u)
 S O
 term_high u
 taille_term u
 O

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 54 seconds
Lemmas:
Lemma candidate_1: forall (a : ad) (u : term) (t : term_list), le (term_high u) (term_high (app a t)).
Lemma candidate_2: forall (lf3 : term) (u : term), le (term_high u) (term_high lf3).
Lemma candidate_3: forall (lf1 : nat), le (S (S lf1)) lf1.
Lemma candidate_4: forall (lf1 : nat), le (S (S O)) lf1.
Lemma candidate_5: forall (lf1 : nat), le (S lf1) lf1.
Lemma candidate_6: forall (lf1 : nat), le (S O) lf1.
Lemma candidate_7: forall (lf1 : nat), le (lf1) lf1.
Lemma candidate_8: forall (lf1 : nat), le (O) lf1.
Lemma candidate_9: forall (u : term), @eq nat (term_high u) (S (term_high u)).
Lemma candidate_10: forall (u : term), @eq nat (term_high u) (S (taille_term u)).
Lemma candidate_11: forall (u : term), @eq nat (term_high u) (S O).
Lemma candidate_12: forall (u : term), @eq nat (term_high u) (term_high u).
Lemma candidate_13: forall (u : term), @eq nat (term_high u) (taille_term u).
Lemma candidate_14: forall (u : term), @eq nat (term_high u) (O).
Lemma candidate_15: forall (lf2 : nat), le lf2 (S (S lf2)).
Lemma candidate_16: forall (lf2 : nat), le lf2 (S (S O)).
Lemma candidate_17: forall (lf2 : nat), le lf2 (S lf2).
Lemma candidate_18: forall (lf2 : nat), le lf2 (S O).
Lemma candidate_19: forall (lf2 : nat), le lf2 (lf2).
Lemma candidate_20: forall (lf2 : nat), le lf2 (O).
Lemma candidate_21: forall (lf3 : term), @eq nat (term_high lf3) (S (term_high lf3)).
Lemma candidate_22: forall (lf3 : term), @eq nat (term_high lf3) (S (taille_term lf3)).
Lemma candidate_23: forall (lf3 : term), @eq nat (term_high lf3) (S O).
Lemma candidate_24: forall (lf3 : term), @eq nat (term_high lf3) (term_high lf3).
Lemma candidate_25: forall (lf3 : term), @eq nat (term_high lf3) (taille_term lf3).
Lemma candidate_26: forall (lf3 : term), @eq nat (term_high lf3) (O).
Lemma candidate_27: forall (lf2 : nat), le lf2 (S (S lf2)).
Lemma candidate_28: forall (lf2 : nat), le lf2 (S (S O)).
Lemma candidate_29: forall (lf2 : nat), le lf2 (S lf2).
Lemma candidate_30: forall (lf2 : nat), le lf2 (S O).
Lemma candidate_31: forall (lf2 : nat), le lf2 (lf2).
Lemma candidate_32: forall (lf2 : nat), le lf2 (O).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 104 seconds
Duplicates removed: 7
Filtered by Quickchick: 15
Filtered by script: 6
Remaining: 4

Lemmas: 
Lemma candidate_8: forall (lf1 : nat), le (O) lf1.
Lemma candidate_17: forall (lf2 : nat), le lf2 (S lf2).
Lemma candidate_15: forall (lf2 : nat), le lf2 (S (S lf2)).
Lemma candidate_2: forall (lf3 : term) (u : term), le (term_high u) (term_high lf3).
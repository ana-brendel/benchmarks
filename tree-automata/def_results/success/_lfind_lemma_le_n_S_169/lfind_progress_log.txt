File Information
- File name: defs
- Original Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/lemma_le_n_S_169
- LFind Directory: /home/anabrendel/lfind/benchmarks/tree-automata/defs_tests/_lfind_lemma_le_n_S_169
- Namespace: TreeAutomata
- Proof name: taille_aux_0
- Theorem: Theorem taille_aux_0: forall (a0 : ad) (la0 ls0 : prec_list),
le (S (taille_0 la0)) (taille_0 (prec_cons a0 la0 ls0)).
- Declarations: 
From lfind Require Import LFind.
Require Import Bool.
Require Import Arith.
Require Import ZArith.
From IntMap Require Import Allmaps.
Require Import EqNat.
From TreeAutomataCoqGym Require Import bases.

Proof Context
* Goal State: le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) (taille_0 ls)))

* Hypothesis:
la : prec_list
ls : prec_list
a : ad

* Types:
Set
Prop
nat
prec_list

* Polymorphic Types:


* Variables:
la : prec_list
ls : prec_list

* Terms:
prec_list : Set
taille_0 la : nat
S (taille_0 la) : nat
le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) (taille_0 ls))) : Prop
la : prec_list
ad : Set
ls : prec_list
taille_0 ls : nat
S (Init.Nat.add (taille_0 la) (taille_0 ls)) : nat
Init.Nat.add (taille_0 la) (taille_0 ls) : nat

* Functions:
taille_0  : forall _ : prec_list, nat
Init.Nat.add  : forall (_ : nat) (_ : nat), nat
le  : forall (_ : nat) (_ : nat), Prop
S  : forall _ : nat, nat

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf3 : nat = S (taille_0 la)
lf1 : nat = S (Init.Nat.add (taille_0 la) (taille_0 ls))
lf4 : nat = taille_0 la
lf5 : nat = taille_0 ls
lf2 : nat = Init.Nat.add (taille_0 la) (taille_0 ls)

Generalizations:
Lemma conj1: forall (lf1 : nat) (lf3 : nat), le lf3 lf1.
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf3 (S lf2).
Lemma conj10: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 lf5)).
Lemma conj12: forall (ls : prec_list) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma conj14: forall (lf5 : nat) (la : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) lf5)).
Lemma conj16: forall (la : prec_list) (ls : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj17: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj21: forall (la : prec_list) (lf1 : nat), le (S (taille_0 la)) lf1.
Lemma conj25: forall (lf2 : nat) (lf4 : nat), le (S lf4) (S lf2).
Lemma conj26: forall (lf5 : nat) (lf4 : nat), le (S lf4) (S (Init.Nat.add lf4 lf5)).
Lemma conj28: forall (ls : prec_list) (lf4 : nat), le (S lf4) (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma conj29: forall (lf2 : nat) (la : prec_list), le (S (taille_0 la)) (S lf2).
Lemma conj30: forall (lf5 : nat) (la : prec_list), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) lf5)).
Lemma conj32: forall (la : prec_list) (ls : prec_list), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).


<---VALIDITY CHECKS--->
Time elapsed: 59 seconds
Valid:
Lemma conj32: forall (la : prec_list) (ls : prec_list), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj30: forall (lf5 : nat) (la : prec_list), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) lf5)).
Lemma conj28: forall (ls : prec_list) (lf4 : nat), le (S lf4) (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma conj26: forall (lf5 : nat) (lf4 : nat), le (S lf4) (S (Init.Nat.add lf4 lf5)).

Invalid:
Lemma conj29: forall (lf2 : nat) (la : prec_list), le (S (taille_0 la)) (S lf2).
Lemma conj25: forall (lf2 : nat) (lf4 : nat), le (S lf4) (S lf2).
Lemma conj21: forall (la : prec_list) (lf1 : nat), le (S (taille_0 la)) lf1.
Lemma conj17: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj16: forall (la : prec_list) (ls : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj14: forall (lf5 : nat) (la : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) lf5)).
Lemma conj12: forall (ls : prec_list) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma conj10: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 lf5)).
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf3 (S lf2).
Lemma conj1: forall (lf1 : nat) (lf3 : nat), le lf3 lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 66 seconds
Generalizations:
Lemma conj29: forall (lf2 : nat) (la : prec_list), le (S (taille_0 la)) (S lf2).
Lemma conj25: forall (lf2 : nat) (lf4 : nat), le (S lf4) (S lf2).
Lemma conj21: forall (la : prec_list) (lf1 : nat), le (S (taille_0 la)) lf1.
Lemma conj17: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj16: forall (la : prec_list) (ls : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj14: forall (lf5 : nat) (la : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) lf5)).
Lemma conj12: forall (ls : prec_list) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma conj10: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 lf5)).
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf3 (S lf2).
Lemma conj1: forall (lf1 : nat) (lf3 : nat), le lf3 lf1.


<---VALIDITY CHECKS--->
Time elapsed: 82 seconds
Valid:

Invalid:
Lemma conj1: forall (lf1 : nat) (lf3 : nat), le lf3 lf1.
Lemma conj9: forall (lf2 : nat) (lf3 : nat), le lf3 (S lf2).
Lemma conj10: forall (lf5 : nat) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 lf5)).
Lemma conj12: forall (ls : prec_list) (lf4 : nat) (lf3 : nat), le lf3 (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma conj14: forall (lf5 : nat) (la : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) lf5)).
Lemma conj16: forall (la : prec_list) (ls : prec_list) (lf3 : nat), le lf3 (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma conj17: forall (lf4 : nat) (lf1 : nat), le (S lf4) lf1.
Lemma conj21: forall (la : prec_list) (lf1 : nat), le (S (taille_0 la)) lf1.
Lemma conj25: forall (lf2 : nat) (lf4 : nat), le (S lf4) (S lf2).
Lemma conj29: forall (lf2 : nat) (la : prec_list), le (S (taille_0 la)) (S lf2).


<---CREATE SKETCHES--->
Time elapsed: 82 seconds
Sketches:
Sketch conj9_sketch0 : le lf3 (##hole##)
Sketch conj9_term_sketch0 : @eq nat (S lf2) (##hole##)
Sketch conj10_sketch0 : le lf3 (##hole##)
Sketch conj10_sketch1 : le lf3 (S (##hole##))
Sketch conj10_term_sketch0 : @eq nat (S (Init.Nat.add lf4 lf5)) (##hole##)
Sketch conj10_term_sketch1 : @eq nat (Init.Nat.add lf4 lf5) (##hole##)
Sketch conj12_sketch0 : le lf3 (##hole##)
Sketch conj12_sketch1 : le lf3 (S (Init.Nat.add lf4 (##hole##)))
Sketch conj12_sketch2 : le lf3 (S (##hole##))
Sketch conj12_term_sketch0 : @eq nat (S (Init.Nat.add lf4 (taille_0 ls))) (##hole##)
Sketch conj12_term_sketch1 : @eq nat (taille_0 ls) (##hole##)
Sketch conj12_term_sketch2 : @eq nat (Init.Nat.add lf4 (taille_0 ls)) (##hole##)
Sketch conj14_sketch0 : le lf3 (S (Init.Nat.add (##hole##) lf5))
Sketch conj14_sketch1 : le lf3 (S (##hole##))
Sketch conj14_sketch2 : le lf3 (##hole##)
Sketch conj14_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj14_term_sketch1 : @eq nat (Init.Nat.add (taille_0 la) lf5) (##hole##)
Sketch conj14_term_sketch2 : @eq nat (S (Init.Nat.add (taille_0 la) lf5)) (##hole##)
Sketch conj16_sketch0 : le lf3 (S (Init.Nat.add (##hole##) (taille_0 ls)))
Sketch conj16_sketch1 : le lf3 (S (Init.Nat.add (taille_0 la) (##hole##)))
Sketch conj16_sketch2 : le lf3 (##hole##)
Sketch conj16_sketch3 : le lf3 (S (##hole##))
Sketch conj16_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj16_term_sketch1 : @eq nat (taille_0 ls) (##hole##)
Sketch conj16_term_sketch2 : @eq nat (S (Init.Nat.add (taille_0 la) (taille_0 ls))) (##hole##)
Sketch conj16_term_sketch3 : @eq nat (Init.Nat.add (taille_0 la) (taille_0 ls)) (##hole##)
Sketch conj17_sketch0 : le (##hole##) lf1
Sketch conj17_term_sketch0 : @eq nat (S lf4) (##hole##)
Sketch conj21_sketch0 : le (S (##hole##)) lf1
Sketch conj21_sketch1 : le (##hole##) lf1
Sketch conj21_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj21_term_sketch1 : @eq nat (S (taille_0 la)) (##hole##)
Sketch conj25_sketch0 : le (##hole##) (S lf2)
Sketch conj25_sketch1 : le (S lf4) (##hole##)
Sketch conj25_term_sketch0 : @eq nat (S lf4) (##hole##)
Sketch conj25_term_sketch1 : @eq nat (S lf2) (##hole##)
Sketch conj29_sketch0 : le (S (##hole##)) (S lf2)
Sketch conj29_sketch1 : le (##hole##) (S lf2)
Sketch conj29_sketch2 : le (S (taille_0 la)) (##hole##)
Sketch conj29_term_sketch0 : @eq nat (taille_0 la) (##hole##)
Sketch conj29_term_sketch1 : @eq nat (S (taille_0 la)) (##hole##)
Sketch conj29_term_sketch2 : @eq nat (S lf2) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 422 seconds
Problems per Sketch:
Sketch conj12_sketch0 --> Problem  synth_1
Sketch conj16_sketch3 --> Problem  synth_3
Sketch conj14_sketch2 --> Problem  synth_1
Sketch conj25_sketch1 --> Problem  synth_23
Sketch conj17_sketch0 --> Problem  synth_18
Sketch conj16_sketch2 --> Problem  synth_1
Sketch conj10_term_sketch1 --> Problem  synth_5
Sketch conj16_term_sketch1 --> Problem  synth_8
Sketch conj14_term_sketch2 --> Problem  synth_13
Sketch conj29_term_sketch2 --> Problem  synth_2
Sketch conj25_term_sketch1 --> Problem  synth_2
Sketch conj17_term_sketch0 --> Problem  synth_19
Sketch conj21_term_sketch1 --> Problem  synth_21
Sketch conj12_term_sketch1 --> Problem  synth_8
Sketch conj9_sketch0 --> Problem  synth_1
Sketch conj14_term_sketch1 --> Problem  synth_12
Sketch conj12_term_sketch0 --> Problem  synth_7
Sketch conj29_term_sketch0 --> Problem  synth_11
Sketch conj10_sketch1 --> Problem  synth_3
Sketch conj9_term_sketch0 --> Problem  synth_2
Sketch conj16_sketch1 --> Problem  synth_15
Sketch conj12_sketch1 --> Problem  synth_6
Sketch conj21_term_sketch0 --> Problem  synth_11
Sketch conj12_sketch2 --> Problem  synth_3
Sketch conj10_term_sketch0 --> Problem  synth_4
Sketch conj29_sketch0 --> Problem  synth_24
Sketch conj25_sketch0 --> Problem  synth_22
Sketch conj21_sketch0 --> Problem  synth_20
Sketch conj16_term_sketch2 --> Problem  synth_16
Sketch conj21_sketch1 --> Problem  synth_18
Sketch conj16_sketch0 --> Problem  synth_14
Sketch conj14_sketch0 --> Problem  synth_10
Sketch conj14_term_sketch0 --> Problem  synth_11
Sketch conj16_term_sketch0 --> Problem  synth_11
Sketch conj16_term_sketch3 --> Problem  synth_17
Sketch conj29_term_sketch1 --> Problem  synth_21
Sketch conj12_term_sketch2 --> Problem  synth_9
Sketch conj29_sketch2 --> Problem  synth_25
Sketch conj25_term_sketch0 --> Problem  synth_19
Sketch conj10_sketch0 --> Problem  synth_1
Sketch conj29_sketch1 --> Problem  synth_22
Sketch conj14_sketch1 --> Problem  synth_3


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 567 seconds

Problem: synth_22

Problem: synth_20

Problem: synth_18

Problem: synth_17

Problem: synth_21

Problem: synth_9

Problem: synth_25

Problem: synth_13

Problem: synth_6

Problem: synth_11

Problem: synth_7

Problem: synth_4
 Nat.add lf5 (Nat.add lf4 (S O))
 Nat.add lf4 (Nat.add lf5 (S O))
 S (Nat.add lf5 lf4)
 S (Nat.add lf4 lf5)
 Nat.add lf5 (S lf4)
 Nat.add lf4 (S lf5)

Problem: synth_1

Problem: synth_23

Problem: synth_16

Problem: synth_19
 S (Nat.add (Nat.add lf4 O) O)
 Nat.add (Nat.add lf4 O) (S O)
 Nat.add (Nat.add lf4 (S O)) O
 S (Nat.add lf4 O)
 Nat.add lf4 (S O)
 S lf4

Problem: synth_15

Problem: synth_14

Problem: synth_10

Problem: synth_8

Problem: synth_24

Problem: synth_3

Problem: synth_12

Problem: synth_5
 Nat.add (Nat.add lf5 lf4) O
 Nat.add (Nat.add lf4 lf5) O
 Nat.add lf5 (Nat.add lf4 O)
 Nat.add lf4 (Nat.add lf5 O)
 Nat.add lf5 lf4
 Nat.add lf4 lf5

Problem: synth_2
 S (Nat.add (Nat.add lf2 O) O)
 Nat.add (Nat.add lf2 O) (S O)
 Nat.add (Nat.add lf2 (S O)) O
 S (Nat.add lf2 O)
 Nat.add lf2 (S O)
 S lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 568 seconds
Lemmas:
Lemma candidate_1: forall (ls : prec_list) (la : prec_list), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) (taille_0 ls))).
Lemma candidate_2: forall (la : prec_list) (lf5 : nat), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) lf5)).
Lemma candidate_3: forall (lf4 : nat) (ls : prec_list), le (S lf4) (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma candidate_4: forall (lf4 : nat) (lf5 : nat), le (S lf4) (S (Init.Nat.add lf4 lf5)).
Lemma candidate_5: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_6: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_7: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_8: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_9: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_10: forall (lf2 : nat), @eq nat (S lf2) (S lf2).
Lemma candidate_11: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf5 (Nat.add lf4 (S O))).
Lemma candidate_12: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf4 (Nat.add lf5 (S O))).
Lemma candidate_13: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (S (Nat.add lf5 lf4)).
Lemma candidate_14: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (S (Nat.add lf4 lf5)).
Lemma candidate_15: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf5 (S lf4)).
Lemma candidate_16: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf4 (S lf5)).
Lemma candidate_17: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add (Nat.add lf5 lf4) O).
Lemma candidate_18: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add (Nat.add lf4 lf5) O).
Lemma candidate_19: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf5 (Nat.add lf4 O)).
Lemma candidate_20: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf4 (Nat.add lf5 O)).
Lemma candidate_21: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf5 lf4).
Lemma candidate_22: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf4 lf5).
Lemma candidate_23: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add (Nat.add lf4 O) O)).
Lemma candidate_24: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 O) (S O)).
Lemma candidate_25: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 (S O)) O).
Lemma candidate_26: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add lf4 O)).
Lemma candidate_27: forall (lf4 : nat), @eq nat (S lf4) (Nat.add lf4 (S O)).
Lemma candidate_28: forall (lf4 : nat), @eq nat (S lf4) (S lf4).
Lemma candidate_29: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add (Nat.add lf4 O) O)).
Lemma candidate_30: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 O) (S O)).
Lemma candidate_31: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 (S O)) O).
Lemma candidate_32: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add lf4 O)).
Lemma candidate_33: forall (lf4 : nat), @eq nat (S lf4) (Nat.add lf4 (S O)).
Lemma candidate_34: forall (lf4 : nat), @eq nat (S lf4) (S lf4).
Lemma candidate_35: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_36: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_37: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_38: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_39: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_40: forall (lf2 : nat), @eq nat (S lf2) (S lf2).
Lemma candidate_41: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_42: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_43: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_44: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_45: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_46: forall (lf2 : nat), @eq nat (S lf2) (S lf2).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 658 seconds
Duplicates removed: 19
Filtered by Quickchick: 0
Filtered by script: 6
Remaining: 21

Lemmas: 
Lemma candidate_27: forall (lf4 : nat), @eq nat (S lf4) (Nat.add lf4 (S O)).
Lemma candidate_26: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add lf4 O)).
Lemma candidate_9: forall (lf2 : nat), @eq nat (S lf2) (Nat.add lf2 (S O)).
Lemma candidate_8: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add lf2 O)).
Lemma candidate_4: forall (lf4 : nat) (lf5 : nat), le (S lf4) (S (Init.Nat.add lf4 lf5)).
Lemma candidate_25: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 (S O)) O).
Lemma candidate_24: forall (lf4 : nat), @eq nat (S lf4) (Nat.add (Nat.add lf4 O) (S O)).
Lemma candidate_23: forall (lf4 : nat), @eq nat (S lf4) (S (Nat.add (Nat.add lf4 O) O)).
Lemma candidate_7: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 (S O)) O).
Lemma candidate_6: forall (lf2 : nat), @eq nat (S lf2) (Nat.add (Nat.add lf2 O) (S O)).
Lemma candidate_5: forall (lf2 : nat), @eq nat (S lf2) (S (Nat.add (Nat.add lf2 O) O)).
Lemma candidate_3: forall (lf4 : nat) (ls : prec_list), le (S lf4) (S (Init.Nat.add lf4 (taille_0 ls))).
Lemma candidate_21: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf5 lf4).
Lemma candidate_15: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf5 (S lf4)).
Lemma candidate_13: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (S (Nat.add lf5 lf4)).
Lemma candidate_2: forall (la : prec_list) (lf5 : nat), le (S (taille_0 la)) (S (Init.Nat.add (taille_0 la) lf5)).
Lemma candidate_20: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf4 (Nat.add lf5 O)).
Lemma candidate_19: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add lf5 (Nat.add lf4 O)).
Lemma candidate_17: forall (lf4 : nat) (lf5 : nat), @eq nat (Init.Nat.add lf4 lf5) (Nat.add (Nat.add lf5 lf4) O).
Lemma candidate_12: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf4 (Nat.add lf5 (S O))).
Lemma candidate_11: forall (lf4 : nat) (lf5 : nat), @eq nat (S (Init.Nat.add lf4 lf5)) (Nat.add lf5 (Nat.add lf4 (S O))).